
STM32H750B-DK.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .bootloader   0000227c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .isr_vector   00000298  90000000  90000000  00020000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .text         0002895c  900002a0  900002a0  000202a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       000037f0  90028bfc  90028bfc  00048bfc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000108  9002c3ec  9002c3ec  0004c3ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .ARM.extab    00000000  9002c4f4  9002c4f4  00139c78  2**0
                  CONTENTS
  6 .ARM          00000000  9002c4f4  9002c4f4  00139c78  2**0
                  CONTENTS
  7 .preinit_array 00000000  9002c4f4  9002c4f4  00139c78  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  8 .init_array   0000001c  9002c4f4  9002c4f4  0004c4f4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .fini_array   0000000c  9002c510  9002c510  0004c510  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .data         00000160  24000000  9002c51c  00050000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 11 CCMRAM        00005a00  24000160  9002c67c  00050160  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .bss          00034910  24005b60  9003207c  00055b60  2**3
                  ALLOC
 13 ._user_heap_stack 00002000  2403a470  9003207c  0005a470  2**0
                  ALLOC
 14 .ARM.attributes 0000002e  00000000  00000000  00139c78  2**0
                  CONTENTS, READONLY
 15 FontFlashSection 000021e8  90200000  90200000  00060000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 TextFlashSection 000000b8  902021e8  902021e8  000621e8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 ExtFlashSection 000d79d8  902022a0  902022a0  000622a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 18 TouchGFX_Framebuffer 000bf400  d0000000  d0000000  00140000  2**2
                  ALLOC
 19 Video_RGB_Buffer 00043800  d00bf400  d00bf400  00140000  2**2
                  ALLOC
 20 .comment      000000c2  00000000  00000000  00139ca6  2**0
                  CONTENTS, READONLY
 21 .debug_line   0007a091  00000000  00000000  00139d68  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 0000005c  00000000  00000000  001b3df9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_info   00114a7c  00000000  00000000  001b3e55  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_abbrev 0001a1c8  00000000  00000000  002c88d1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_aranges 000035b0  00000000  00000000  002e2aa0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_str    001a171c  00000000  00000000  002e6050  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_rnglists 00008c94  00000000  00000000  0048776c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .debug_macro  00049170  00000000  00000000  00490400  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 29 .debug_frame  0000abdc  00000000  00000000  004d9570  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 30 .debug_loclists 00039ca7  00000000  00000000  004e414c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

900002a0 <__do_global_dtors_aux>:
900002a0:	b510      	push	{r4, lr}
900002a2:	4c05      	ldr	r4, [pc, #20]	; (900002b8 <__do_global_dtors_aux+0x18>)
900002a4:	7823      	ldrb	r3, [r4, #0]
900002a6:	b933      	cbnz	r3, 900002b6 <__do_global_dtors_aux+0x16>
900002a8:	4b04      	ldr	r3, [pc, #16]	; (900002bc <__do_global_dtors_aux+0x1c>)
900002aa:	b113      	cbz	r3, 900002b2 <__do_global_dtors_aux+0x12>
900002ac:	4804      	ldr	r0, [pc, #16]	; (900002c0 <__do_global_dtors_aux+0x20>)
900002ae:	f3af 8000 	nop.w
900002b2:	2301      	movs	r3, #1
900002b4:	7023      	strb	r3, [r4, #0]
900002b6:	bd10      	pop	{r4, pc}
900002b8:	24005b60 	.word	0x24005b60
900002bc:	00000000 	.word	0x00000000
900002c0:	90028be4 	.word	0x90028be4

900002c4 <frame_dummy>:
900002c4:	b508      	push	{r3, lr}
900002c6:	4b03      	ldr	r3, [pc, #12]	; (900002d4 <frame_dummy+0x10>)
900002c8:	b11b      	cbz	r3, 900002d2 <frame_dummy+0xe>
900002ca:	4903      	ldr	r1, [pc, #12]	; (900002d8 <frame_dummy+0x14>)
900002cc:	4803      	ldr	r0, [pc, #12]	; (900002dc <frame_dummy+0x18>)
900002ce:	f3af 8000 	nop.w
900002d2:	bd08      	pop	{r3, pc}
900002d4:	00000000 	.word	0x00000000
900002d8:	24005b64 	.word	0x24005b64
900002dc:	90028be4 	.word	0x90028be4

900002e0 <memchr>:
900002e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
900002e4:	2a10      	cmp	r2, #16
900002e6:	db2b      	blt.n	90000340 <memchr+0x60>
900002e8:	f010 0f07 	tst.w	r0, #7
900002ec:	d008      	beq.n	90000300 <memchr+0x20>
900002ee:	f810 3b01 	ldrb.w	r3, [r0], #1
900002f2:	3a01      	subs	r2, #1
900002f4:	428b      	cmp	r3, r1
900002f6:	d02d      	beq.n	90000354 <memchr+0x74>
900002f8:	f010 0f07 	tst.w	r0, #7
900002fc:	b342      	cbz	r2, 90000350 <memchr+0x70>
900002fe:	d1f6      	bne.n	900002ee <memchr+0xe>
90000300:	b4f0      	push	{r4, r5, r6, r7}
90000302:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
90000306:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
9000030a:	f022 0407 	bic.w	r4, r2, #7
9000030e:	f07f 0700 	mvns.w	r7, #0
90000312:	2300      	movs	r3, #0
90000314:	e8f0 5602 	ldrd	r5, r6, [r0], #8
90000318:	3c08      	subs	r4, #8
9000031a:	ea85 0501 	eor.w	r5, r5, r1
9000031e:	ea86 0601 	eor.w	r6, r6, r1
90000322:	fa85 f547 	uadd8	r5, r5, r7
90000326:	faa3 f587 	sel	r5, r3, r7
9000032a:	fa86 f647 	uadd8	r6, r6, r7
9000032e:	faa5 f687 	sel	r6, r5, r7
90000332:	b98e      	cbnz	r6, 90000358 <memchr+0x78>
90000334:	d1ee      	bne.n	90000314 <memchr+0x34>
90000336:	bcf0      	pop	{r4, r5, r6, r7}
90000338:	f001 01ff 	and.w	r1, r1, #255	; 0xff
9000033c:	f002 0207 	and.w	r2, r2, #7
90000340:	b132      	cbz	r2, 90000350 <memchr+0x70>
90000342:	f810 3b01 	ldrb.w	r3, [r0], #1
90000346:	3a01      	subs	r2, #1
90000348:	ea83 0301 	eor.w	r3, r3, r1
9000034c:	b113      	cbz	r3, 90000354 <memchr+0x74>
9000034e:	d1f8      	bne.n	90000342 <memchr+0x62>
90000350:	2000      	movs	r0, #0
90000352:	4770      	bx	lr
90000354:	3801      	subs	r0, #1
90000356:	4770      	bx	lr
90000358:	2d00      	cmp	r5, #0
9000035a:	bf06      	itte	eq
9000035c:	4635      	moveq	r5, r6
9000035e:	3803      	subeq	r0, #3
90000360:	3807      	subne	r0, #7
90000362:	f015 0f01 	tst.w	r5, #1
90000366:	d107      	bne.n	90000378 <memchr+0x98>
90000368:	3001      	adds	r0, #1
9000036a:	f415 7f80 	tst.w	r5, #256	; 0x100
9000036e:	bf02      	ittt	eq
90000370:	3001      	addeq	r0, #1
90000372:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
90000376:	3001      	addeq	r0, #1
90000378:	bcf0      	pop	{r4, r5, r6, r7}
9000037a:	3801      	subs	r0, #1
9000037c:	4770      	bx	lr
9000037e:	bf00      	nop

90000380 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
90000380:	f8df d034 	ldr.w	sp, [pc, #52]	; 900003b8 <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
90000384:	2100      	movs	r1, #0
  b  LoopCopyDataInit
90000386:	e003      	b.n	90000390 <LoopCopyDataInit>

90000388 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
90000388:	4b0c      	ldr	r3, [pc, #48]	; (900003bc <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
9000038a:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
9000038c:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
9000038e:	3104      	adds	r1, #4

90000390 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
90000390:	480b      	ldr	r0, [pc, #44]	; (900003c0 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
90000392:	4b0c      	ldr	r3, [pc, #48]	; (900003c4 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
90000394:	1842      	adds	r2, r0, r1
  cmp  r2, r3
90000396:	429a      	cmp	r2, r3
  bcc  CopyDataInit
90000398:	d3f6      	bcc.n	90000388 <CopyDataInit>
  ldr  r2, =_sbss
9000039a:	4a0b      	ldr	r2, [pc, #44]	; (900003c8 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
9000039c:	e002      	b.n	900003a4 <LoopFillZerobss>

9000039e <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
9000039e:	2300      	movs	r3, #0
  str  r3, [r2], #4
900003a0:	f842 3b04 	str.w	r3, [r2], #4

900003a4 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
900003a4:	4b09      	ldr	r3, [pc, #36]	; (900003cc <LoopFillZerobss+0x28>)
  cmp  r2, r3
900003a6:	429a      	cmp	r2, r3
  bcc  FillZerobss
900003a8:	d3f9      	bcc.n	9000039e <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
900003aa:	f008 fd8f 	bl	90008ecc <SystemInit>
/* Call static constructors */
    bl __libc_init_array
900003ae:	f027 ff27 	bl	90028200 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
900003b2:	f002 fb59 	bl	90002a68 <main>
  bx  lr    
900003b6:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
900003b8:	24080000 	.word	0x24080000
  ldr  r3, =_sidata
900003bc:	9002c51c 	.word	0x9002c51c
  ldr  r0, =_sdata
900003c0:	24000000 	.word	0x24000000
  ldr  r3, =_edata
900003c4:	24000160 	.word	0x24000160
  ldr  r2, =_sbss
900003c8:	24005b60 	.word	0x24005b60
  ldr  r3, = _ebss
900003cc:	2403a470 	.word	0x2403a470

900003d0 <ADC3_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
900003d0:	e7fe      	b.n	900003d0 <ADC3_IRQHandler>
	...

900003d4 <MX_LIBJPEG_Init>:
  */

  /* USER CODE BEGIN 3 */
  /* USER CODE END 3 */

}
900003d4:	4770      	bx	lr
900003d6:	bf00      	nop

900003d8 <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
900003d8:	4770      	bx	lr
900003da:	bf00      	nop

900003dc <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
900003dc:	b508      	push	{r3, lr}
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_components_init();
900003de:	f001 fed7 	bl	90002190 <touchgfx_components_init>
  touchgfx_init();
}
900003e2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  touchgfx_init();
900003e6:	f001 be57 	b.w	90002098 <touchgfx_init>
900003ea:	bf00      	nop

900003ec <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
900003ec:	f001 bed2 	b.w	90002194 <touchgfx_taskEntry>

900003f0 <_ZN8touchgfx18MCUInstrumentation13getCCConsumedEv>:
     *
     * @return clock cycles.
     */
    virtual uint32_t getCCConsumed()
    {
        return cc_consumed;
900003f0:	6840      	ldr	r0, [r0, #4]
    }
900003f2:	4770      	bx	lr

900003f4 <_ZN8touchgfx18MCUInstrumentation13setCCConsumedEm>:
     *
     * @param  val number of clock cycles.
     */
    virtual void setCCConsumed(uint32_t val)
    {
        cc_consumed = val;
900003f4:	6041      	str	r1, [r0, #4]
    }
900003f6:	4770      	bx	lr

900003f8 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>:
    //                                    Embedded Trace Macrocell (ETM)
    //                                    Trace Port Interface Unit (TPIU).
    //                                    This enables control of power usage unless tracing is required. The application can enable this, for ITM use, or use by a debugger.

    // Enable Debug Exception and Monitor Control Register
    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
900003f8:	f04f 20e0 	mov.w	r0, #3758153728	; 0xe000e000
    // Enable Lock Access Register
    *((volatile unsigned int*)0xE0001FB0) |= 0xC5ACCE55;
900003fc:	4b08      	ldr	r3, [pc, #32]	; (90000420 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x28>)
900003fe:	4a09      	ldr	r2, [pc, #36]	; (90000424 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x2c>)
    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
90000400:	f8d0 1dfc 	ldr.w	r1, [r0, #3580]	; 0xdfc
90000404:	f041 7180 	orr.w	r1, r1, #16777216	; 0x1000000
90000408:	f8c0 1dfc 	str.w	r1, [r0, #3580]	; 0xdfc
    *((volatile unsigned int*)0xE0001FB0) |= 0xC5ACCE55;
9000040c:	f8d3 1fb0 	ldr.w	r1, [r3, #4016]	; 0xfb0
90000410:	430a      	orrs	r2, r1
90000412:	f8c3 2fb0 	str.w	r2, [r3, #4016]	; 0xfb0
    // Enable Data Watchpoint and Trace Control Register
    *((volatile unsigned int*)0xE0001000) |= 1;
90000416:	681a      	ldr	r2, [r3, #0]
90000418:	f042 0201 	orr.w	r2, r2, #1
9000041c:	601a      	str	r2, [r3, #0]
}
9000041e:	4770      	bx	lr
90000420:	e0001000 	.word	0xe0001000
90000424:	c5acce55 	.word	0xc5acce55

90000428 <_ZN8touchgfx25CortexMMCUInstrumentation12getElapsedUSEjjj>:

//Board specific clockfrequency
unsigned int CortexMMCUInstrumentation::getElapsedUS(unsigned int start, unsigned int now, unsigned int clockfrequency)
{
    return ((now - start) + (clockfrequency / 2)) / clockfrequency;
90000428:	1a51      	subs	r1, r2, r1
9000042a:	eb01 0153 	add.w	r1, r1, r3, lsr #1
}
9000042e:	fbb1 f0f3 	udiv	r0, r1, r3
90000432:	4770      	bx	lr

90000434 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv>:

unsigned int CortexMMCUInstrumentation::getCPUCycles()
{
    return *((volatile unsigned int*)0xE0001004);
90000434:	4b01      	ldr	r3, [pc, #4]	; (9000043c <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv+0x8>)
90000436:	6858      	ldr	r0, [r3, #4]
}
90000438:	4770      	bx	lr
9000043a:	bf00      	nop
9000043c:	e0001000 	.word	0xe0001000

90000440 <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev>:
 *        Interface for instrumenting Cortex-M processors to measure MCU load via measured CPU
 *        cycles.
 *
 * @sa MCUInstrumentation
 */
class CortexMMCUInstrumentation : public MCUInstrumentation
90000440:	4770      	bx	lr
90000442:	bf00      	nop

90000444 <_ZN8touchgfx25CortexMMCUInstrumentationD0Ev>:
90000444:	b510      	push	{r4, lr}
90000446:	4604      	mov	r4, r0
90000448:	210c      	movs	r1, #12
9000044a:	f027 fb69 	bl	90027b20 <_ZdlPvj>
9000044e:	4620      	mov	r0, r4
90000450:	bd10      	pop	{r4, pc}
90000452:	bf00      	nop

90000454 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb>:

void CortexMMCUInstrumentation::setMCUActive(bool active)
{
    if (active) //idle task sched out
    {
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000454:	6803      	ldr	r3, [r0, #0]
90000456:	4a0c      	ldr	r2, [pc, #48]	; (90000488 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x34>)
90000458:	691b      	ldr	r3, [r3, #16]
{
9000045a:	b510      	push	{r4, lr}
9000045c:	4604      	mov	r4, r0
    if (active) //idle task sched out
9000045e:	b149      	cbz	r1, 90000474 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x20>
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000460:	4293      	cmp	r3, r2
90000462:	d10d      	bne.n	90000480 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x2c>
    return *((volatile unsigned int*)0xE0001004);
90000464:	4b09      	ldr	r3, [pc, #36]	; (9000048c <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x38>)
90000466:	6858      	ldr	r0, [r3, #4]
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000468:	68a2      	ldr	r2, [r4, #8]
        cc_consumed += cc_temp;
9000046a:	6863      	ldr	r3, [r4, #4]
9000046c:	1a9b      	subs	r3, r3, r2
9000046e:	4403      	add	r3, r0
90000470:	6063      	str	r3, [r4, #4]
    }
    else //idle task sched in
    {
        cc_in = getCPUCycles();
    }
}
90000472:	bd10      	pop	{r4, pc}
        cc_in = getCPUCycles();
90000474:	4293      	cmp	r3, r2
90000476:	d105      	bne.n	90000484 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x30>
    return *((volatile unsigned int*)0xE0001004);
90000478:	4b04      	ldr	r3, [pc, #16]	; (9000048c <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x38>)
9000047a:	6858      	ldr	r0, [r3, #4]
        cc_in = getCPUCycles();
9000047c:	60a0      	str	r0, [r4, #8]
}
9000047e:	bd10      	pop	{r4, pc}
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000480:	4798      	blx	r3
90000482:	e7f1      	b.n	90000468 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x14>
        cc_in = getCPUCycles();
90000484:	4798      	blx	r3
90000486:	e7f9      	b.n	9000047c <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x28>
90000488:	90000435 	.word	0x90000435
9000048c:	e0001000 	.word	0xe0001000

90000490 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
90000490:	4770      	bx	lr
90000492:	bf00      	nop
90000494:	0000      	movs	r0, r0
	...

90000498 <_ZN20STM32TouchController4initEv>:

#include <STM32TouchController.hpp>
#include "stm32h750b_discovery_ts.h"

void STM32TouchController::init()
{
90000498:	b500      	push	{lr}
9000049a:	b085      	sub	sp, #20
     *
     */
    TS_Init_t hTS;
    hTS.Orientation = TS_SWAP_XY;
    hTS.Accuracy = 0;
    hTS.Width = 480;
9000049c:	2208      	movs	r2, #8
9000049e:	2300      	movs	r3, #0
    hTS.Height = 272;
    BSP_TS_Init(0, &hTS);
900004a0:	2000      	movs	r0, #0
900004a2:	4669      	mov	r1, sp
    hTS.Width = 480;
900004a4:	ed9f 7b06 	vldr	d7, [pc, #24]	; 900004c0 <_ZN20STM32TouchController4initEv+0x28>
900004a8:	e9cd 2302 	strd	r2, r3, [sp, #8]
900004ac:	ed8d 7b00 	vstr	d7, [sp]
    BSP_TS_Init(0, &hTS);
900004b0:	f008 fc1a 	bl	90008ce8 <BSP_TS_Init>
}
900004b4:	b005      	add	sp, #20
900004b6:	f85d fb04 	ldr.w	pc, [sp], #4
900004ba:	bf00      	nop
900004bc:	f3af 8000 	nop.w
900004c0:	000001e0 	.word	0x000001e0
900004c4:	00000110 	.word	0x00000110

900004c8 <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
900004c8:	b530      	push	{r4, r5, lr}
900004ca:	b085      	sub	sp, #20
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    TS_State_t  TS_State = { 0 };
900004cc:	2000      	movs	r0, #0
{
900004ce:	460d      	mov	r5, r1
900004d0:	4614      	mov	r4, r2
    BSP_TS_GetState(0, &TS_State);
900004d2:	a901      	add	r1, sp, #4
    TS_State_t  TS_State = { 0 };
900004d4:	9001      	str	r0, [sp, #4]
900004d6:	e9cd 0002 	strd	r0, r0, [sp, #8]
    BSP_TS_GetState(0, &TS_State);
900004da:	f008 fc93 	bl	90008e04 <BSP_TS_GetState>
    if (TS_State.TouchDetected)
900004de:	9801      	ldr	r0, [sp, #4]
900004e0:	b120      	cbz	r0, 900004ec <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
    {
        x = TS_State.TouchX;
        y = TS_State.TouchY;
        return true;
900004e2:	2001      	movs	r0, #1
        y = TS_State.TouchY;
900004e4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
        x = TS_State.TouchX;
900004e8:	602a      	str	r2, [r5, #0]
        y = TS_State.TouchY;
900004ea:	6023      	str	r3, [r4, #0]
    }

    return false;
}
900004ec:	b005      	add	sp, #20
900004ee:	bd30      	pop	{r4, r5, pc}

900004f0 <_ZN20STM32TouchControllerD0Ev>:
900004f0:	b510      	push	{r4, lr}
900004f2:	4604      	mov	r4, r0
900004f4:	2104      	movs	r1, #4
900004f6:	f027 fb13 	bl	90027b20 <_ZdlPvj>
900004fa:	4620      	mov	r0, r4
900004fc:	bd10      	pop	{r4, pc}
900004fe:	bf00      	nop

90000500 <_ZN8touchgfx4GPIO4initEv>:
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
90000500:	2108      	movs	r1, #8
90000502:	4810      	ldr	r0, [pc, #64]	; (90000544 <_ZN8touchgfx4GPIO4initEv+0x44>)
{
90000504:	b508      	push	{r3, lr}
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
90000506:	f009 f9e3 	bl	900098d0 <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
9000050a:	2801      	cmp	r0, #1
9000050c:	d101      	bne.n	90000512 <_ZN8touchgfx4GPIO4initEv+0x12>
            GPIO_InvertedLevels[id] = 1;
9000050e:	4b0e      	ldr	r3, [pc, #56]	; (90000548 <_ZN8touchgfx4GPIO4initEv+0x48>)
90000510:	6018      	str	r0, [r3, #0]
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
90000512:	2180      	movs	r1, #128	; 0x80
90000514:	480d      	ldr	r0, [pc, #52]	; (9000054c <_ZN8touchgfx4GPIO4initEv+0x4c>)
90000516:	f009 f9db 	bl	900098d0 <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
9000051a:	2801      	cmp	r0, #1
9000051c:	d101      	bne.n	90000522 <_ZN8touchgfx4GPIO4initEv+0x22>
            GPIO_InvertedLevels[id] = 1;
9000051e:	4b0a      	ldr	r3, [pc, #40]	; (90000548 <_ZN8touchgfx4GPIO4initEv+0x48>)
90000520:	6058      	str	r0, [r3, #4]
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
90000522:	2140      	movs	r1, #64	; 0x40
90000524:	4809      	ldr	r0, [pc, #36]	; (9000054c <_ZN8touchgfx4GPIO4initEv+0x4c>)
90000526:	f009 f9d3 	bl	900098d0 <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
9000052a:	2801      	cmp	r0, #1
9000052c:	d101      	bne.n	90000532 <_ZN8touchgfx4GPIO4initEv+0x32>
            GPIO_InvertedLevels[id] = 1;
9000052e:	4b06      	ldr	r3, [pc, #24]	; (90000548 <_ZN8touchgfx4GPIO4initEv+0x48>)
90000530:	6098      	str	r0, [r3, #8]
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
90000532:	2140      	movs	r1, #64	; 0x40
90000534:	4806      	ldr	r0, [pc, #24]	; (90000550 <_ZN8touchgfx4GPIO4initEv+0x50>)
90000536:	f009 f9cb 	bl	900098d0 <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
9000053a:	2801      	cmp	r0, #1
9000053c:	d101      	bne.n	90000542 <_ZN8touchgfx4GPIO4initEv+0x42>
            GPIO_InvertedLevels[id] = 1;
9000053e:	4b02      	ldr	r3, [pc, #8]	; (90000548 <_ZN8touchgfx4GPIO4initEv+0x48>)
90000540:	60d8      	str	r0, [r3, #12]
}
90000542:	bd08      	pop	{r3, pc}
90000544:	58021800 	.word	0x58021800
90000548:	24005b7c 	.word	0x24005b7c
9000054c:	58020400 	.word	0x58020400
90000550:	58020000 	.word	0x58020000

90000554 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
    switch (id)
90000554:	2803      	cmp	r0, #3
90000556:	d827      	bhi.n	900005a8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x54>
90000558:	e8df f000 	tbb	[pc, r0]
9000055c:	020b141d 	.word	0x020b141d
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
90000560:	4b12      	ldr	r3, [pc, #72]	; (900005ac <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000562:	2140      	movs	r1, #64	; 0x40
90000564:	4812      	ldr	r0, [pc, #72]	; (900005b0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x5c>)
90000566:	68da      	ldr	r2, [r3, #12]
90000568:	fab2 f282 	clz	r2, r2
9000056c:	0952      	lsrs	r2, r2, #5
9000056e:	f009 b9b5 	b.w	900098dc <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
90000572:	4b0e      	ldr	r3, [pc, #56]	; (900005ac <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000574:	2140      	movs	r1, #64	; 0x40
90000576:	480f      	ldr	r0, [pc, #60]	; (900005b4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x60>)
90000578:	689a      	ldr	r2, [r3, #8]
9000057a:	fab2 f282 	clz	r2, r2
9000057e:	0952      	lsrs	r2, r2, #5
90000580:	f009 b9ac 	b.w	900098dc <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
90000584:	4b09      	ldr	r3, [pc, #36]	; (900005ac <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000586:	2180      	movs	r1, #128	; 0x80
90000588:	480a      	ldr	r0, [pc, #40]	; (900005b4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x60>)
9000058a:	685a      	ldr	r2, [r3, #4]
9000058c:	fab2 f282 	clz	r2, r2
90000590:	0952      	lsrs	r2, r2, #5
90000592:	f009 b9a3 	b.w	900098dc <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
90000596:	4b05      	ldr	r3, [pc, #20]	; (900005ac <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000598:	2108      	movs	r1, #8
9000059a:	4807      	ldr	r0, [pc, #28]	; (900005b8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x64>)
9000059c:	681a      	ldr	r2, [r3, #0]
9000059e:	fab2 f282 	clz	r2, r2
900005a2:	0952      	lsrs	r2, r2, #5
900005a4:	f009 b99a 	b.w	900098dc <HAL_GPIO_WritePin>
}
900005a8:	4770      	bx	lr
900005aa:	bf00      	nop
900005ac:	24005b7c 	.word	0x24005b7c
900005b0:	58020000 	.word	0x58020000
900005b4:	58020400 	.word	0x58020400
900005b8:	58021800 	.word	0x58021800

900005bc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
    switch (id)
900005bc:	2803      	cmp	r0, #3
900005be:	d827      	bhi.n	90000610 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x54>
900005c0:	e8df f000 	tbb	[pc, r0]
900005c4:	020b141d 	.word	0x020b141d
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
900005c8:	4b12      	ldr	r3, [pc, #72]	; (90000614 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
900005ca:	2140      	movs	r1, #64	; 0x40
900005cc:	4812      	ldr	r0, [pc, #72]	; (90000618 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x5c>)
900005ce:	68da      	ldr	r2, [r3, #12]
900005d0:	3a00      	subs	r2, #0
900005d2:	bf18      	it	ne
900005d4:	2201      	movne	r2, #1
900005d6:	f009 b981 	b.w	900098dc <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
900005da:	4b0e      	ldr	r3, [pc, #56]	; (90000614 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
900005dc:	2140      	movs	r1, #64	; 0x40
900005de:	480f      	ldr	r0, [pc, #60]	; (9000061c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x60>)
900005e0:	689a      	ldr	r2, [r3, #8]
900005e2:	3a00      	subs	r2, #0
900005e4:	bf18      	it	ne
900005e6:	2201      	movne	r2, #1
900005e8:	f009 b978 	b.w	900098dc <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
900005ec:	4b09      	ldr	r3, [pc, #36]	; (90000614 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
900005ee:	2180      	movs	r1, #128	; 0x80
900005f0:	480a      	ldr	r0, [pc, #40]	; (9000061c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x60>)
900005f2:	685a      	ldr	r2, [r3, #4]
900005f4:	3a00      	subs	r2, #0
900005f6:	bf18      	it	ne
900005f8:	2201      	movne	r2, #1
900005fa:	f009 b96f 	b.w	900098dc <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
900005fe:	4b05      	ldr	r3, [pc, #20]	; (90000614 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
90000600:	2108      	movs	r1, #8
90000602:	4807      	ldr	r0, [pc, #28]	; (90000620 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x64>)
90000604:	681a      	ldr	r2, [r3, #0]
90000606:	3a00      	subs	r2, #0
90000608:	bf18      	it	ne
9000060a:	2201      	movne	r2, #1
9000060c:	f009 b966 	b.w	900098dc <HAL_GPIO_WritePin>
}
90000610:	4770      	bx	lr
90000612:	bf00      	nop
90000614:	24005b7c 	.word	0x24005b7c
90000618:	58020000 	.word	0x58020000
9000061c:	58020400 	.word	0x58020400
90000620:	58021800 	.word	0x58021800

90000624 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
    switch (id)
90000624:	2803      	cmp	r0, #3
90000626:	d813      	bhi.n	90000650 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x2c>
90000628:	e8df f000 	tbb	[pc, r0]
9000062c:	02060a0e 	.word	0x02060a0e
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
90000630:	2140      	movs	r1, #64	; 0x40
90000632:	4808      	ldr	r0, [pc, #32]	; (90000654 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x30>)
90000634:	f009 b956 	b.w	900098e4 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
90000638:	2140      	movs	r1, #64	; 0x40
9000063a:	4807      	ldr	r0, [pc, #28]	; (90000658 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x34>)
9000063c:	f009 b952 	b.w	900098e4 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
90000640:	2180      	movs	r1, #128	; 0x80
90000642:	4805      	ldr	r0, [pc, #20]	; (90000658 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x34>)
90000644:	f009 b94e 	b.w	900098e4 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
90000648:	2108      	movs	r1, #8
9000064a:	4804      	ldr	r0, [pc, #16]	; (9000065c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x38>)
9000064c:	f009 b94a 	b.w	900098e4 <HAL_GPIO_TogglePin>
}
90000650:	4770      	bx	lr
90000652:	bf00      	nop
90000654:	58020000 	.word	0x58020000
90000658:	58020400 	.word	0x58020400
9000065c:	58021800 	.word	0x58021800

90000660 <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
    {
        return DMA_TYPE_GENERIC;
    }
90000660:	2000      	movs	r0, #0
90000662:	4770      	bx	lr

90000664 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
90000664:	2301      	movs	r3, #1
        requestedOrientation = orientation;
90000666:	f880 1078 	strb.w	r1, [r0, #120]	; 0x78
        displayOrientationChangeRequested = true;
9000066a:	f880 3079 	strb.w	r3, [r0, #121]	; 0x79
    }
9000066e:	4770      	bx	lr

90000670 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
90000670:	2000      	movs	r0, #0
90000672:	4770      	bx	lr

90000674 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000674:	1e0a      	subs	r2, r1, #0
90000676:	4b03      	ldr	r3, [pc, #12]	; (90000684 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000678:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
9000067a:	bf18      	it	ne
9000067c:	2201      	movne	r2, #1
9000067e:	701a      	strb	r2, [r3, #0]
    }
90000680:	4770      	bx	lr
90000682:	bf00      	nop
90000684:	24039833 	.word	0x24039833

90000688 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
90000688:	2000      	movs	r0, #0
9000068a:	4770      	bx	lr

9000068c <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
9000068c:	6b83      	ldr	r3, [r0, #56]	; 0x38
    virtual void taskDelay(uint16_t ms)
9000068e:	4608      	mov	r0, r1
        if (taskDelayFunc)
90000690:	b103      	cbz	r3, 90000694 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
90000692:	4718      	bx	r3
        }
    }
90000694:	4770      	bx	lr
90000696:	bf00      	nop

90000698 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
90000698:	f64f 70ff 	movw	r0, #65535	; 0xffff
9000069c:	4770      	bx	lr
9000069e:	bf00      	nop

900006a0 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
900006a0:	4770      	bx	lr
900006a2:	bf00      	nop

900006a4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
900006a4:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
900006a6:	4b09      	ldr	r3, [pc, #36]	; (900006cc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
900006a8:	881b      	ldrh	r3, [r3, #0]
900006aa:	428b      	cmp	r3, r1
900006ac:	d808      	bhi.n	900006c0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1c>
900006ae:	4b08      	ldr	r3, [pc, #32]	; (900006d0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
900006b0:	881b      	ldrh	r3, [r3, #0]
900006b2:	4293      	cmp	r3, r2
900006b4:	d804      	bhi.n	900006c0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1c>
        FRAME_BUFFER_WIDTH = width;
900006b6:	4807      	ldr	r0, [pc, #28]	; (900006d4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
        FRAME_BUFFER_HEIGHT = height;
900006b8:	4b07      	ldr	r3, [pc, #28]	; (900006d8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
        FRAME_BUFFER_WIDTH = width;
900006ba:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = height;
900006bc:	801a      	strh	r2, [r3, #0]
    }
900006be:	bd08      	pop	{r3, pc}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
900006c0:	4b06      	ldr	r3, [pc, #24]	; (900006dc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
900006c2:	219e      	movs	r1, #158	; 0x9e
900006c4:	4a06      	ldr	r2, [pc, #24]	; (900006e0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
900006c6:	4807      	ldr	r0, [pc, #28]	; (900006e4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
900006c8:	f027 fa58 	bl	90027b7c <__assert_func>
900006cc:	24039828 	.word	0x24039828
900006d0:	2403982a 	.word	0x2403982a
900006d4:	2403982e 	.word	0x2403982e
900006d8:	24039830 	.word	0x24039830
900006dc:	90028c7c 	.word	0x90028c7c
900006e0:	90028ce0 	.word	0x90028ce0
900006e4:	90028d24 	.word	0x90028d24

900006e8 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
900006e8:	b510      	push	{r4, lr}
900006ea:	4604      	mov	r4, r0
        swapFrameBuffers();
900006ec:	f011 fd6e 	bl	900121cc <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
900006f0:	6823      	ldr	r3, [r4, #0]
900006f2:	4620      	mov	r0, r4
900006f4:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
900006f8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
900006fc:	4718      	bx	r3
900006fe:	bf00      	nop

90000700 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
90000700:	f001 be40 	b.w	90002384 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

90000704 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
90000704:	f001 be44 	b.w	90002390 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

90000708 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
 * @param rect The area of the screen that has been drawn, expressed in absolute coordinates.
 *
 * @see flushFrameBuffer().
 */
void TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
90000708:	b510      	push	{r4, lr}
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
9000070a:	f001 ff29 	bl	90002560 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;

    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
9000070e:	4812      	ldr	r0, [pc, #72]	; (90000758 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x50>)
90000710:	2300      	movs	r3, #0
90000712:	f8c0 3084 	str.w	r3, [r0, #132]	; 0x84
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
90000716:	f3bf 8f4f 	dsb	sy
    __DSB();

    ccsidr = SCB->CCSIDR;
9000071a:	f8d0 3080 	ldr.w	r3, [r0, #128]	; 0x80
                                            /* clean & invalidate D-Cache */
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
    do {
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
      do {
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
9000071e:	f643 74e0 	movw	r4, #16352	; 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
90000722:	f3c3 3c4e 	ubfx	ip, r3, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90000726:	f3c3 0ec9 	ubfx	lr, r3, #3, #10
9000072a:	ea4f 1c4c 	mov.w	ip, ip, lsl #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
9000072e:	ea0c 0104 	and.w	r1, ip, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90000732:	4673      	mov	r3, lr
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90000734:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
                       ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
        #if defined ( __CC_ARM )
          __schedule_barrier();
        #endif
      } while (ways-- != 0U);
90000738:	3b01      	subs	r3, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
9000073a:	f8c0 2274 	str.w	r2, [r0, #628]	; 0x274
      } while (ways-- != 0U);
9000073e:	1c5a      	adds	r2, r3, #1
90000740:	d1f8      	bne.n	90000734 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x2c>
    } while(sets-- != 0U);
90000742:	f1ac 0c20 	sub.w	ip, ip, #32
90000746:	f11c 0f20 	cmn.w	ip, #32
9000074a:	d1f0      	bne.n	9000072e <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x26>
9000074c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90000750:	f3bf 8f6f 	isb	sy
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then we need
    // to flush the Dcache to make sure framebuffer is correct in RAM. That's done
    // using SCB_CleanInvalidateDCache().

    SCB_CleanInvalidateDCache();
}
90000754:	bd10      	pop	{r4, pc}
90000756:	bf00      	nop
90000758:	e000ed00 	.word	0xe000ed00

9000075c <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
9000075c:	f001 bdee 	b.w	9000233c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

90000760 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
90000760:	f001 bffc 	b.w	9000275c <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

90000764 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
90000764:	f001 bfe6 	b.w	90002734 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

90000768 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
90000768:	f001 bdf2 	b.w	90002350 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

9000076c <_ZN20TouchGFXGeneratedHAL17unlockFrameBufferEv>:
     * @brief Unlocks the framebuffer.
     *
     * This specialization is marks DMA2D as un-reserved by the framwork.
     * @see HAL::unlockFrameBuffer
     */
    virtual void unlockFrameBuffer()
9000076c:	b510      	push	{r4, lr}
9000076e:	4604      	mov	r4, r0
    {
        HAL::unlockFrameBuffer();
90000770:	f011 f8a8 	bl	900118c4 <_ZN8touchgfx3HAL17unlockFrameBufferEv>
        dma.start();
90000774:	6860      	ldr	r0, [r4, #4]
90000776:	6803      	ldr	r3, [r0, #0]
    }
90000778:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        dma.start();
9000077c:	691b      	ldr	r3, [r3, #16]
9000077e:	4718      	bx	r3

90000780 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
        HAL::flushFrameBuffer();
90000780:	f010 bf76 	b.w	90011670 <_ZN8touchgfx3HAL16flushFrameBufferEv>

90000784 <_ZN11TouchGFXHALD0Ev>:
90000784:	b510      	push	{r4, lr}
90000786:	4604      	mov	r4, r0
90000788:	2188      	movs	r1, #136	; 0x88
9000078a:	f027 f9c9 	bl	90027b20 <_ZdlPvj>
9000078e:	4620      	mov	r0, r4
90000790:	bd10      	pop	{r4, pc}
90000792:	bf00      	nop

90000794 <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
90000794:	f890 307a 	ldrb.w	r3, [r0, #122]	; 0x7a
90000798:	b11b      	cbz	r3, 900007a2 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
9000079a:	6840      	ldr	r0, [r0, #4]
9000079c:	6803      	ldr	r3, [r0, #0]
9000079e:	681b      	ldr	r3, [r3, #0]
900007a0:	4718      	bx	r3
    }
900007a2:	4618      	mov	r0, r3
900007a4:	4770      	bx	lr
900007a6:	bf00      	nop

900007a8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void noTouch();

    /** Perform the actual display orientation change. */
    virtual void performDisplayOrientationChange()
    {
        if (requestedOrientation != nativeDisplayOrientation)
900007a8:	f890 2078 	ldrb.w	r2, [r0, #120]	; 0x78
900007ac:	f890 3034 	ldrb.w	r3, [r0, #52]	; 0x34
900007b0:	429a      	cmp	r2, r3
        {
            if (DISPLAY_ROTATION == rotate0)
900007b2:	4b0b      	ldr	r3, [pc, #44]	; (900007e0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x38>)
900007b4:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
900007b6:	d00b      	beq.n	900007d0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x28>
            if (DISPLAY_ROTATION == rotate0)
900007b8:	b94a      	cbnz	r2, 900007ce <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            {
                const uint16_t tmp = DISPLAY_HEIGHT;
900007ba:	4a0a      	ldr	r2, [pc, #40]	; (900007e4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
                DISPLAY_WIDTH = tmp;
                DISPLAY_ROTATION = rotate90;
900007bc:	f04f 0c01 	mov.w	ip, #1
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
900007c0:	4909      	ldr	r1, [pc, #36]	; (900007e8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            }
        }
        else if (DISPLAY_ROTATION != rotate0)
        {
            const uint16_t tmp = DISPLAY_HEIGHT;
900007c2:	8810      	ldrh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
            DISPLAY_WIDTH = tmp;
            DISPLAY_ROTATION = rotate0;
900007c4:	f883 c000 	strb.w	ip, [r3]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
900007c8:	880b      	ldrh	r3, [r1, #0]
            DISPLAY_WIDTH = tmp;
900007ca:	8008      	strh	r0, [r1, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
900007cc:	8013      	strh	r3, [r2, #0]
        }
    }
900007ce:	4770      	bx	lr
        else if (DISPLAY_ROTATION != rotate0)
900007d0:	2a00      	cmp	r2, #0
900007d2:	d0fc      	beq.n	900007ce <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            const uint16_t tmp = DISPLAY_HEIGHT;
900007d4:	4a03      	ldr	r2, [pc, #12]	; (900007e4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
            DISPLAY_ROTATION = rotate0;
900007d6:	f04f 0c00 	mov.w	ip, #0
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
900007da:	4903      	ldr	r1, [pc, #12]	; (900007e8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
900007dc:	e7f1      	b.n	900007c2 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x1a>
900007de:	bf00      	nop
900007e0:	2403982c 	.word	0x2403982c
900007e4:	2403982a 	.word	0x2403982a
900007e8:	24039828 	.word	0x24039828

900007ec <_ZN8touchgfx3HAL10getDMATypeEv>:
        return dma.getDMAType();
900007ec:	6840      	ldr	r0, [r0, #4]
900007ee:	4a04      	ldr	r2, [pc, #16]	; (90000800 <_ZN8touchgfx3HAL10getDMATypeEv+0x14>)
900007f0:	6803      	ldr	r3, [r0, #0]
900007f2:	699b      	ldr	r3, [r3, #24]
900007f4:	4293      	cmp	r3, r2
900007f6:	d101      	bne.n	900007fc <_ZN8touchgfx3HAL10getDMATypeEv+0x10>
    }
900007f8:	2000      	movs	r0, #0
900007fa:	4770      	bx	lr
        return dma.getDMAType();
900007fc:	4718      	bx	r3
900007fe:	bf00      	nop
90000800:	90000661 	.word	0x90000661

90000804 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
        assert(frameBuffer != 0 && "A framebuffer address must be set");
90000804:	b1a9      	cbz	r1, 90000832 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x2e>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
90000806:	6402      	str	r2, [r0, #64]	; 0x40
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90000808:	3a00      	subs	r2, #0
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
9000080a:	63c1      	str	r1, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
9000080c:	bf18      	it	ne
9000080e:	2201      	movne	r2, #1
90000810:	490c      	ldr	r1, [pc, #48]	; (90000844 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x40>)
90000812:	700a      	strb	r2, [r1, #0]
        setAnimationStorage(animationStorage);
90000814:	6802      	ldr	r2, [r0, #0]
90000816:	490c      	ldr	r1, [pc, #48]	; (90000848 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x44>)
90000818:	f8d2 208c 	ldr.w	r2, [r2, #140]	; 0x8c
9000081c:	428a      	cmp	r2, r1
9000081e:	d106      	bne.n	9000082e <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x2a>
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000820:	1e19      	subs	r1, r3, #0
90000822:	4a0a      	ldr	r2, [pc, #40]	; (9000084c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x48>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000824:	6443      	str	r3, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000826:	bf18      	it	ne
90000828:	2101      	movne	r1, #1
9000082a:	7011      	strb	r1, [r2, #0]
9000082c:	4770      	bx	lr
        setAnimationStorage(animationStorage);
9000082e:	4619      	mov	r1, r3
90000830:	4710      	bx	r2
        assert(frameBuffer != 0 && "A framebuffer address must be set");
90000832:	4b07      	ldr	r3, [pc, #28]	; (90000850 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x4c>)
90000834:	f240 21d2 	movw	r1, #722	; 0x2d2
90000838:	4a06      	ldr	r2, [pc, #24]	; (90000854 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x50>)
9000083a:	4807      	ldr	r0, [pc, #28]	; (90000858 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x54>)
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
9000083c:	b510      	push	{r4, lr}
        assert(frameBuffer != 0 && "A framebuffer address must be set");
9000083e:	f027 f99d 	bl	90027b7c <__assert_func>
90000842:	bf00      	nop
90000844:	24039832 	.word	0x24039832
90000848:	90000675 	.word	0x90000675
9000084c:	24039833 	.word	0x24039833
90000850:	90028d6c 	.word	0x90028d6c
90000854:	90028da4 	.word	0x90028da4
90000858:	90028d24 	.word	0x90028d24

9000085c <_ZN11TouchGFXHAL9taskEntryEv>:
{
9000085c:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
9000085e:	6803      	ldr	r3, [r0, #0]
{
90000860:	4604      	mov	r4, r0
90000862:	4d17      	ldr	r5, [pc, #92]	; (900008c0 <_ZN11TouchGFXHAL9taskEntryEv+0x64>)
    enableLCDControllerInterrupt();
90000864:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
90000868:	4798      	blx	r3
    enableInterrupts();
9000086a:	6823      	ldr	r3, [r4, #0]
9000086c:	4620      	mov	r0, r4
9000086e:	6f9b      	ldr	r3, [r3, #120]	; 0x78
90000870:	4798      	blx	r3
    OSWrappers::waitForVSync();
90000872:	f001 f831 	bl	900018d8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
90000876:	6823      	ldr	r3, [r4, #0]
90000878:	4620      	mov	r0, r4
9000087a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
9000087c:	4798      	blx	r3
    HAL_GPIO_WritePin(LCD_RESET_GPIO_Port, LCD_RESET_Pin, GPIO_PIN_SET);
9000087e:	2201      	movs	r2, #1
90000880:	2104      	movs	r1, #4
90000882:	4810      	ldr	r0, [pc, #64]	; (900008c4 <_ZN11TouchGFXHAL9taskEntryEv+0x68>)
90000884:	f009 f82a 	bl	900098dc <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(LCD_DE_GPIO_Port, LCD_DE_Pin, GPIO_PIN_SET);
90000888:	2201      	movs	r2, #1
9000088a:	2180      	movs	r1, #128	; 0x80
9000088c:	480e      	ldr	r0, [pc, #56]	; (900008c8 <_ZN11TouchGFXHAL9taskEntryEv+0x6c>)
9000088e:	f009 f825 	bl	900098dc <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
90000892:	2201      	movs	r2, #1
90000894:	480d      	ldr	r0, [pc, #52]	; (900008cc <_ZN11TouchGFXHAL9taskEntryEv+0x70>)
90000896:	4611      	mov	r1, r2
90000898:	f009 f820 	bl	900098dc <HAL_GPIO_WritePin>
        OSWrappers::waitForVSync();
9000089c:	f001 f81c 	bl	900018d8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
900008a0:	6823      	ldr	r3, [r4, #0]
        swapFrameBuffers();
900008a2:	4620      	mov	r0, r4
900008a4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
900008a6:	42ab      	cmp	r3, r5
900008a8:	d107      	bne.n	900008ba <_ZN11TouchGFXHAL9taskEntryEv+0x5e>
900008aa:	f011 fc8f 	bl	900121cc <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
900008ae:	6823      	ldr	r3, [r4, #0]
900008b0:	4620      	mov	r0, r4
900008b2:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
900008b6:	4798      	blx	r3
    }
900008b8:	e7f0      	b.n	9000089c <_ZN11TouchGFXHAL9taskEntryEv+0x40>
900008ba:	4798      	blx	r3
900008bc:	e7ee      	b.n	9000089c <_ZN11TouchGFXHAL9taskEntryEv+0x40>
900008be:	bf00      	nop
900008c0:	900006e9 	.word	0x900006e9
900008c4:	58020000 	.word	0x58020000
900008c8:	58020c00 	.word	0x58020c00
900008cc:	58022800 	.word	0x58022800

900008d0 <_ZN11TouchGFXHAL10initializeEv>:
{
900008d0:	b538      	push	{r3, r4, r5, lr}
900008d2:	4604      	mov	r4, r0
    TouchGFXGeneratedHAL::initialize();
900008d4:	f001 ff4c 	bl	90002770 <_ZN20TouchGFXGeneratedHAL10initializeEv>
    setFrameBufferStartAddresses((void*)frameBuffer0, (void*)frameBuffer1, (void*)animationBuffer);
900008d8:	4817      	ldr	r0, [pc, #92]	; (90000938 <_ZN11TouchGFXHAL10initializeEv+0x68>)
900008da:	6823      	ldr	r3, [r4, #0]
900008dc:	6be1      	ldr	r1, [r4, #60]	; 0x3c
900008de:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
900008e2:	6c22      	ldr	r2, [r4, #64]	; 0x40
900008e4:	4285      	cmp	r5, r0
900008e6:	d119      	bne.n	9000091c <_ZN11TouchGFXHAL10initializeEv+0x4c>
        assert(frameBuffer != 0 && "A framebuffer address must be set");
900008e8:	b1f9      	cbz	r1, 9000092a <_ZN11TouchGFXHAL10initializeEv+0x5a>
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
900008ea:	3a00      	subs	r2, #0
900008ec:	4913      	ldr	r1, [pc, #76]	; (9000093c <_ZN11TouchGFXHAL10initializeEv+0x6c>)
        setAnimationStorage(animationStorage);
900008ee:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
900008f2:	bf18      	it	ne
900008f4:	2201      	movne	r2, #1
900008f6:	4812      	ldr	r0, [pc, #72]	; (90000940 <_ZN11TouchGFXHAL10initializeEv+0x70>)
900008f8:	428b      	cmp	r3, r1
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
900008fa:	4912      	ldr	r1, [pc, #72]	; (90000944 <_ZN11TouchGFXHAL10initializeEv+0x74>)
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
900008fc:	7002      	strb	r2, [r0, #0]
        setAnimationStorage(animationStorage);
900008fe:	d111      	bne.n	90000924 <_ZN11TouchGFXHAL10initializeEv+0x54>
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000900:	4b11      	ldr	r3, [pc, #68]	; (90000948 <_ZN11TouchGFXHAL10initializeEv+0x78>)
90000902:	2201      	movs	r2, #1
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000904:	6461      	str	r1, [r4, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000906:	701a      	strb	r2, [r3, #0]
    instrumentation.init();
90000908:	f104 057c 	add.w	r5, r4, #124	; 0x7c
9000090c:	4628      	mov	r0, r5
9000090e:	f7ff fd73 	bl	900003f8 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>
        updateMCULoad = enabled;
90000912:	2301      	movs	r3, #1
        mcuInstrumentation = mcuInstr;
90000914:	6125      	str	r5, [r4, #16]
        updateMCULoad = enabled;
90000916:	f884 3070 	strb.w	r3, [r4, #112]	; 0x70
}
9000091a:	bd38      	pop	{r3, r4, r5, pc}
    setFrameBufferStartAddresses((void*)frameBuffer0, (void*)frameBuffer1, (void*)animationBuffer);
9000091c:	4b09      	ldr	r3, [pc, #36]	; (90000944 <_ZN11TouchGFXHAL10initializeEv+0x74>)
9000091e:	4620      	mov	r0, r4
90000920:	47a8      	blx	r5
90000922:	e7f1      	b.n	90000908 <_ZN11TouchGFXHAL10initializeEv+0x38>
        setAnimationStorage(animationStorage);
90000924:	4620      	mov	r0, r4
90000926:	4798      	blx	r3
90000928:	e7ee      	b.n	90000908 <_ZN11TouchGFXHAL10initializeEv+0x38>
        assert(frameBuffer != 0 && "A framebuffer address must be set");
9000092a:	4b08      	ldr	r3, [pc, #32]	; (9000094c <_ZN11TouchGFXHAL10initializeEv+0x7c>)
9000092c:	f240 21d2 	movw	r1, #722	; 0x2d2
90000930:	4a07      	ldr	r2, [pc, #28]	; (90000950 <_ZN11TouchGFXHAL10initializeEv+0x80>)
90000932:	4808      	ldr	r0, [pc, #32]	; (90000954 <_ZN11TouchGFXHAL10initializeEv+0x84>)
90000934:	f027 f922 	bl	90027b7c <__assert_func>
90000938:	90000805 	.word	0x90000805
9000093c:	90000675 	.word	0x90000675
90000940:	24039832 	.word	0x24039832
90000944:	d0000000 	.word	0xd0000000
90000948:	24039833 	.word	0x24039833
9000094c:	90028d6c 	.word	0x90028d6c
90000950:	90028da4 	.word	0x90028da4
90000954:	90028d24 	.word	0x90028d24

90000958 <IdleTaskHook>:
}

extern "C"
{
    portBASE_TYPE IdleTaskHook(void* p)
    {
90000958:	b508      	push	{r3, lr}
        return instance;
9000095a:	4b07      	ldr	r3, [pc, #28]	; (90000978 <IdleTaskHook+0x20>)
        if ((int)p) //idle task sched out
9000095c:	b128      	cbz	r0, 9000096a <IdleTaskHook+0x12>
        {
            touchgfx::HAL::getInstance()->setMCUActive(true);
9000095e:	6818      	ldr	r0, [r3, #0]
90000960:	2101      	movs	r1, #1
90000962:	f011 fc4d 	bl	90012200 <_ZN8touchgfx3HAL12setMCUActiveEb>
        else //idle task sched in
        {
            touchgfx::HAL::getInstance()->setMCUActive(false);
        }
        return pdTRUE;
    }
90000966:	2001      	movs	r0, #1
90000968:	bd08      	pop	{r3, pc}
            touchgfx::HAL::getInstance()->setMCUActive(false);
9000096a:	4601      	mov	r1, r0
9000096c:	6818      	ldr	r0, [r3, #0]
9000096e:	f011 fc47 	bl	90012200 <_ZN8touchgfx3HAL12setMCUActiveEb>
    }
90000972:	2001      	movs	r0, #1
90000974:	bd08      	pop	{r3, pc}
90000976:	bf00      	nop
90000978:	24039834 	.word	0x24039834

9000097c <_ZNK20HardwareMJPEGDecoder21getCurrentFrameNumberEv>:
    virtual bool decodeThumbnail(uint32_t frameno, uint8_t* buffer, uint16_t width, uint16_t height);
    virtual void gotoFrame(uint32_t frameno);
    virtual uint32_t getCurrentFrameNumber() const
    {
        return frameNumber;
    }
9000097c:	6940      	ldr	r0, [r0, #20]
9000097e:	4770      	bx	lr

90000980 <_ZN20HardwareMJPEGDecoder12getLastErrorEv>:
    }

    virtual AVIErrors getLastError()
    {
        return lastError;
    }
90000980:	f890 0040 	ldrb.w	r0, [r0, #64]	; 0x40
90000984:	4770      	bx	lr
90000986:	bf00      	nop

90000988 <_ZN20HardwareMJPEGDecoder8hasVideoEv>:
    readVideoHeader();
}

bool HardwareMJPEGDecoder::hasVideo()
{
    return (reader != 0) || (movieData != 0);
90000988:	6b03      	ldr	r3, [r0, #48]	; 0x30
9000098a:	b10b      	cbz	r3, 90000990 <_ZN20HardwareMJPEGDecoder8hasVideoEv+0x8>
9000098c:	2001      	movs	r0, #1
}
9000098e:	4770      	bx	lr
    return (reader != 0) || (movieData != 0);
90000990:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
90000992:	3800      	subs	r0, #0
90000994:	bf18      	it	ne
90000996:	2001      	movne	r0, #1
90000998:	4770      	bx	lr
9000099a:	bf00      	nop

9000099c <_ZN20HardwareMJPEGDecoder17getNumberOfFramesEv>:
}

uint32_t HardwareMJPEGDecoder::getNumberOfFrames()
{
    return videoInfo.number_of_frames;
}
9000099c:	6880      	ldr	r0, [r0, #8]
9000099e:	4770      	bx	lr

900009a0 <_ZN20HardwareMJPEGDecoder14setRepeatVideoEb>:

void HardwareMJPEGDecoder::setRepeatVideo(bool repeat)
{

}
900009a0:	4770      	bx	lr
900009a2:	bf00      	nop

900009a4 <_ZN20HardwareMJPEGDecoder12getVideoInfoEPN8touchgfx16VideoInformationE>:

void HardwareMJPEGDecoder::getVideoInfo(touchgfx::VideoInformation* data)
{
    *data = videoInfo;
900009a4:	3004      	adds	r0, #4
{
900009a6:	468c      	mov	ip, r1
    *data = videoInfo;
900009a8:	c80f      	ldmia	r0, {r0, r1, r2, r3}
900009aa:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
}
900009ae:	4770      	bx	lr

900009b0 <_ZN20HardwareMJPEGDecoderD1Ev>:
class HardwareMJPEGDecoder : public MJPEGDecoder
900009b0:	4770      	bx	lr
900009b2:	bf00      	nop

900009b4 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt>:
{
900009b4:	b508      	push	{r3, lr}
    assert(0);
900009b6:	4a03      	ldr	r2, [pc, #12]	; (900009c4 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x10>)
900009b8:	f44f 71de 	mov.w	r1, #444	; 0x1bc
900009bc:	4b02      	ldr	r3, [pc, #8]	; (900009c8 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x14>)
900009be:	4803      	ldr	r0, [pc, #12]	; (900009cc <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x18>)
900009c0:	f027 f8dc 	bl	90027b7c <__assert_func>
900009c4:	90028ed0 	.word	0x90028ed0
900009c8:	90028ecc 	.word	0x90028ecc
900009cc:	90028f2c 	.word	0x90028f2c

900009d0 <_ZN20HardwareMJPEGDecoderD0Ev>:
900009d0:	b510      	push	{r4, lr}
900009d2:	4604      	mov	r4, r0
900009d4:	2148      	movs	r1, #72	; 0x48
900009d6:	f027 f8a3 	bl	90027b20 <_ZdlPvj>
900009da:	4620      	mov	r0, r4
900009dc:	bd10      	pop	{r4, pc}
900009de:	bf00      	nop

900009e0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0>:
void HardwareMJPEGDecoder::decodeMJPEGFrame(const uint8_t* const mjpgdata, const uint32_t length, uint8_t* outputBuffer, uint16_t bufferWidth, uint16_t bufferHeight, uint32_t bufferStride)
900009e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
        JPEG_ConvertorParams.bytes_pr_pixel = 2;
900009e4:	4c4a      	ldr	r4, [pc, #296]	; (90000b10 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x130>)
void HardwareMJPEGDecoder::decodeMJPEGFrame(const uint8_t* const mjpgdata, const uint32_t length, uint8_t* outputBuffer, uint16_t bufferWidth, uint16_t bufferHeight, uint32_t bufferStride)
900009e6:	4683      	mov	fp, r0
900009e8:	461d      	mov	r5, r3
        JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
900009ea:	68c0      	ldr	r0, [r0, #12]
        JPEG_ConvertorParams.bytes_pr_pixel = 2;
900009ec:	2302      	movs	r3, #2
void HardwareMJPEGDecoder::decodeMJPEGFrame(const uint8_t* const mjpgdata, const uint32_t length, uint8_t* outputBuffer, uint16_t bufferWidth, uint16_t bufferHeight, uint32_t bufferStride)
900009ee:	b083      	sub	sp, #12
      * @retval None
      */
    uint32_t JPEG_Decode_DMA(JPEG_HandleTypeDef* hjpeg, uint8_t* input, uint32_t chunkSizeIn /* length */, uint8_t* output)
    {
        FrameBufferAddress = output;
        JPEG_output_is_paused = 0;
900009f0:	4f48      	ldr	r7, [pc, #288]	; (90000b14 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x134>)
        JPEG_ConvertorParams.ScaledWidth = 480 * JPEG_ConvertorParams.bytes_pr_pixel;
900009f2:	f44f 7c70 	mov.w	ip, #960	; 0x3c0
        JPEG_ConvertorParams.bytes_pr_pixel = 2;
900009f6:	6123      	str	r3, [r4, #16]
        if ((JPEG_ConvertorParams.WidthExtend % 16) != 0)
900009f8:	0703      	lsls	r3, r0, #28
        JPEG_OUT_Read_BufferIndex = 0;
900009fa:	4b47      	ldr	r3, [pc, #284]	; (90000b18 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x138>)
            JPEG_ConvertorParams.WidthExtend += 16 - (JPEG_ConvertorParams.WidthExtend % 16);
900009fc:	bf18      	it	ne
900009fe:	f020 000f 	bicne.w	r0, r0, #15
        JPEG_OUT_Write_BufferIndex = 0;
90000a02:	f8df a140 	ldr.w	sl, [pc, #320]	; 90000b44 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x164>
        MCU_BlockIndex = 0;

        /* Init buffers */
        for (uint32_t i = 0; i < NB_OUTPUT_DATA_BUFFERS; ++i)
        {
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90000a06:	4e45      	ldr	r6, [pc, #276]	; (90000b1c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x13c>)
            JPEG_ConvertorParams.WidthExtend += 16 - (JPEG_ConvertorParams.WidthExtend % 16);
90000a08:	bf18      	it	ne
90000a0a:	3010      	addne	r0, #16
        DMA2D_reference = dma;
90000a0c:	f8df 8138 	ldr.w	r8, [pc, #312]	; 90000b48 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x168>
90000a10:	f8df 9138 	ldr.w	r9, [pc, #312]	; 90000b4c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x16c>
            JPEG_ConvertorParams.WidthExtend += 16 - (JPEG_ConvertorParams.WidthExtend % 16);
90000a14:	6020      	str	r0, [r4, #0]
        JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
90000a16:	0900      	lsrs	r0, r0, #4
90000a18:	60e0      	str	r0, [r4, #12]
            Jpeg_OUT_BufferTab[i].DataBufferSize = 0;
            Jpeg_OUT_BufferTab[i].MCU_index = 0;
        }

        /* Do not return from this function until done with decoding all chunks. */
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000a1a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90000a1e:	01c0      	lsls	r0, r0, #7
90000a20:	9000      	str	r0, [sp, #0]
        JPEG_output_is_paused = 0;
90000a22:	2000      	movs	r0, #0
        JPEG_ConvertorParams.ScaledWidth = 480 * JPEG_ConvertorParams.bytes_pr_pixel;
90000a24:	f8c4 c004 	str.w	ip, [r4, #4]
        JPEG_output_is_paused = 0;
90000a28:	6038      	str	r0, [r7, #0]
        JPEG_OUT_Read_BufferIndex = 0;
90000a2a:	6018      	str	r0, [r3, #0]
        MCU_BlockIndex = 0;
90000a2c:	4b3c      	ldr	r3, [pc, #240]	; (90000b20 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x140>)
        JPEG_OUT_Write_BufferIndex = 0;
90000a2e:	f8ca 0000 	str.w	r0, [sl]
        MCU_BlockIndex = 0;
90000a32:	6018      	str	r0, [r3, #0]
        JPEG_ConvertorParams.LastLineHeight = 16 - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
90000a34:	f8db 3010 	ldr.w	r3, [fp, #16]
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90000a38:	7030      	strb	r0, [r6, #0]
        JPEG_ConvertorParams.LastLineHeight = 16 - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
90000a3a:	f003 030f 	and.w	r3, r3, #15
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90000a3e:	7430      	strb	r0, [r6, #16]
        JPEG_ConvertorParams.LastLineHeight = 16 - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
90000a40:	f1c3 0310 	rsb	r3, r3, #16
90000a44:	60a3      	str	r3, [r4, #8]
        FrameBufferAddress = output;
90000a46:	4c37      	ldr	r4, [pc, #220]	; (90000b24 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x144>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000a48:	f8da 3000 	ldr.w	r3, [sl]
        FrameBufferAddress = output;
90000a4c:	6025      	str	r5, [r4, #0]
        JPEG_InputImageIndex = 0;
90000a4e:	4c36      	ldr	r4, [pc, #216]	; (90000b28 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x148>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000a50:	eb06 1303 	add.w	r3, r6, r3, lsl #4
90000a54:	4d35      	ldr	r5, [pc, #212]	; (90000b2c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x14c>)
        JPEG_InputImageIndex = 0;
90000a56:	6020      	str	r0, [r4, #0]
        JPEG_InputImageAddress = (uint32_t)input;
90000a58:	4835      	ldr	r0, [pc, #212]	; (90000b30 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x150>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000a5a:	685b      	ldr	r3, [r3, #4]
        JPEG_InputImageAddress = (uint32_t)input;
90000a5c:	6001      	str	r1, [r0, #0]
        JPEG_InputImageSize_Bytes = chunkSizeIn;
90000a5e:	4835      	ldr	r0, [pc, #212]	; (90000b34 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x154>)
90000a60:	4c35      	ldr	r4, [pc, #212]	; (90000b38 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x158>)
90000a62:	6002      	str	r2, [r0, #0]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000a64:	f44f 4250 	mov.w	r2, #53248	; 0xd000
90000a68:	4834      	ldr	r0, [pc, #208]	; (90000b3c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x15c>)
            Jpeg_OUT_BufferTab[i].DataBufferSize = 0;
90000a6a:	ed9f 7b27 	vldr	d7, [pc, #156]	; 90000b08 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x128>
90000a6e:	ed86 7b02 	vstr	d7, [r6, #8]
90000a72:	ed86 7b06 	vstr	d7, [r6, #24]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000a76:	f00a f861 	bl	9000ab3c <HAL_JPEG_Decode_DMA>
        DMA2D_reference = dma;
90000a7a:	f8db 3044 	ldr.w	r3, [fp, #68]	; 0x44
90000a7e:	f8c8 3000 	str.w	r3, [r8]
  * @retval 1 : if JPEG processing has finished, 0 : if JPEG processing still ongoing
  */
uint32_t JPEG_OutputHandler(JPEG_HandleTypeDef* hjpeg)
{
    /* Decode frame complete */
    if (Jpeg_HWDecodingEnd && DMA2D_CopyBufferEnd)
90000a82:	682b      	ldr	r3, [r5, #0]
90000a84:	b113      	cbz	r3, 90000a8c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xac>
90000a86:	f8d9 3000 	ldr.w	r3, [r9]
90000a8a:	bb63      	cbnz	r3, 90000ae6 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x106>
    {
        return 1;
    }

    /* Try to start DMA2D video transfer if next buffer if full */
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90000a8c:	f8d8 0000 	ldr.w	r0, [r8]
90000a90:	7a03      	ldrb	r3, [r0, #8]
90000a92:	b92b      	cbnz	r3, 90000aa0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xc0>
90000a94:	4b20      	ldr	r3, [pc, #128]	; (90000b18 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x138>)
90000a96:	681b      	ldr	r3, [r3, #0]
90000a98:	011b      	lsls	r3, r3, #4
90000a9a:	5cf3      	ldrb	r3, [r6, r3]
90000a9c:	2b01      	cmp	r3, #1
90000a9e:	d024      	beq.n	90000aea <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x10a>
    {
        DMA2D_reference->start();
    }

    /* Start JPEG IP if paused and next buffer is empty */
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90000aa0:	683b      	ldr	r3, [r7, #0]
90000aa2:	2b01      	cmp	r3, #1
90000aa4:	d106      	bne.n	90000ab4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xd4>
90000aa6:	f8da 3000 	ldr.w	r3, [sl]
90000aaa:	011b      	lsls	r3, r3, #4
90000aac:	5cf3      	ldrb	r3, [r6, r3]
90000aae:	b90b      	cbnz	r3, 90000ab4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xd4>
90000ab0:	682b      	ldr	r3, [r5, #0]
90000ab2:	b313      	cbz	r3, 90000afa <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x11a>
    {
        JPEG_output_is_paused = 0;
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
    }

    return 2;
90000ab4:	2302      	movs	r3, #2
            JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90000ab6:	6023      	str	r3, [r4, #0]
            if (JpegProcessing_End == 2)
90000ab8:	6823      	ldr	r3, [r4, #0]
90000aba:	2b02      	cmp	r3, #2
90000abc:	d009      	beq.n	90000ad2 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xf2>
        } while (JpegProcessing_End != 1);
90000abe:	6823      	ldr	r3, [r4, #0]
90000ac0:	2b01      	cmp	r3, #1
90000ac2:	d1de      	bne.n	90000a82 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xa2>
        Jpeg_HWDecodingEnd = 0;
90000ac4:	2300      	movs	r3, #0
90000ac6:	602b      	str	r3, [r5, #0]
        DMA2D_CopyBufferEnd = 0;
90000ac8:	f8c9 3000 	str.w	r3, [r9]
}
90000acc:	b003      	add	sp, #12
90000ace:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
                SEM_WAIT(semDecodingDone);
90000ad2:	4b1b      	ldr	r3, [pc, #108]	; (90000b40 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x160>)
90000ad4:	f04f 31ff 	mov.w	r1, #4294967295
90000ad8:	6818      	ldr	r0, [r3, #0]
90000ada:	f00d fc95 	bl	9000e408 <osSemaphoreAcquire>
        } while (JpegProcessing_End != 1);
90000ade:	6823      	ldr	r3, [r4, #0]
90000ae0:	2b01      	cmp	r3, #1
90000ae2:	d1ce      	bne.n	90000a82 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xa2>
90000ae4:	e7ee      	b.n	90000ac4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xe4>
        return 1;
90000ae6:	2301      	movs	r3, #1
90000ae8:	e7e5      	b.n	90000ab6 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xd6>
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90000aea:	f8d9 3000 	ldr.w	r3, [r9]
90000aee:	2b00      	cmp	r3, #0
90000af0:	d1d6      	bne.n	90000aa0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xc0>
        DMA2D_reference->start();
90000af2:	6803      	ldr	r3, [r0, #0]
90000af4:	691b      	ldr	r3, [r3, #16]
90000af6:	4798      	blx	r3
90000af8:	e7d2      	b.n	90000aa0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xc0>
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90000afa:	2102      	movs	r1, #2
90000afc:	480f      	ldr	r0, [pc, #60]	; (90000b3c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x15c>)
        JPEG_output_is_paused = 0;
90000afe:	603b      	str	r3, [r7, #0]
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90000b00:	f00a f964 	bl	9000adcc <HAL_JPEG_Resume>
90000b04:	2302      	movs	r3, #2
90000b06:	e7d6      	b.n	90000ab6 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xd6>
	...
90000b10:	24005b98 	.word	0x24005b98
90000b14:	24005bc4 	.word	0x24005bc4
90000b18:	24005b90 	.word	0x24005b90
90000b1c:	24000008 	.word	0x24000008
90000b20:	24005b94 	.word	0x24005b94
90000b24:	24005bb4 	.word	0x24005bb4
90000b28:	24005bc0 	.word	0x24005bc0
90000b2c:	24005bbc 	.word	0x24005bbc
90000b30:	24005bc8 	.word	0x24005bc8
90000b34:	24005bcc 	.word	0x24005bcc
90000b38:	24005bb8 	.word	0x24005bb8
90000b3c:	240094f8 	.word	0x240094f8
90000b40:	24005bd4 	.word	0x24005bd4
90000b44:	24005bd0 	.word	0x24005bd0
90000b48:	24005bb0 	.word	0x24005bb0
90000b4c:	24005b8c 	.word	0x24005b8c

90000b50 <_ZN20HardwareMJPEGDecoder9gotoFrameEm>:
{
90000b50:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    if (frameNumber > getNumberOfFrames())
90000b52:	6803      	ldr	r3, [r0, #0]
90000b54:	2901      	cmp	r1, #1
90000b56:	4e2a      	ldr	r6, [pc, #168]	; (90000c00 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xb0>)
{
90000b58:	4604      	mov	r4, r0
    if (frameNumber > getNumberOfFrames())
90000b5a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90000b5c:	bf38      	it	cc
90000b5e:	2101      	movcc	r1, #1
90000b60:	42b3      	cmp	r3, r6
90000b62:	460d      	mov	r5, r1
90000b64:	d138      	bne.n	90000bd8 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x88>
    return videoInfo.number_of_frames;
90000b66:	6883      	ldr	r3, [r0, #8]
    if (frameNumber > getNumberOfFrames())
90000b68:	4299      	cmp	r1, r3
90000b6a:	d82a      	bhi.n	90000bc2 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x72>
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
90000b6c:	1e6b      	subs	r3, r5, #1
90000b6e:	69e2      	ldr	r2, [r4, #28]
    if (reader != 0)
90000b70:	6b20      	ldr	r0, [r4, #48]	; 0x30
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
90000b72:	eb02 1703 	add.w	r7, r2, r3, lsl #4
    if (reader != 0)
90000b76:	b350      	cbz	r0, 90000bce <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x7e>
        if (length > aviBufferLength)
90000b78:	6ba3      	ldr	r3, [r4, #56]	; 0x38
90000b7a:	2b0f      	cmp	r3, #15
90000b7c:	d937      	bls.n	90000bee <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x9e>
        reader->seek(offset);
90000b7e:	6803      	ldr	r3, [r0, #0]
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
90000b80:	f107 0608 	add.w	r6, r7, #8
        reader->seek(offset);
90000b84:	68db      	ldr	r3, [r3, #12]
90000b86:	4631      	mov	r1, r6
90000b88:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90000b8a:	6b20      	ldr	r0, [r4, #48]	; 0x30
90000b8c:	2210      	movs	r2, #16
90000b8e:	6b61      	ldr	r1, [r4, #52]	; 0x34
90000b90:	6803      	ldr	r3, [r0, #0]
90000b92:	691b      	ldr	r3, [r3, #16]
90000b94:	4798      	blx	r3
90000b96:	b1b0      	cbz	r0, 90000bc6 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x76>
    if (reader != 0)
90000b98:	6b23      	ldr	r3, [r4, #48]	; 0x30
        aviBufferStartOffset = offset;
90000b9a:	63e6      	str	r6, [r4, #60]	; 0x3c
    if (reader != 0)
90000b9c:	b1bb      	cbz	r3, 90000bce <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x7e>
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000b9e:	6b62      	ldr	r2, [r4, #52]	; 0x34
90000ba0:	7a93      	ldrb	r3, [r2, #10]
90000ba2:	7a51      	ldrb	r1, [r2, #9]
90000ba4:	041b      	lsls	r3, r3, #16
90000ba6:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
90000baa:	7a11      	ldrb	r1, [r2, #8]
90000bac:	7ad2      	ldrb	r2, [r2, #11]
90000bae:	430b      	orrs	r3, r1
90000bb0:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
90000bb4:	6a22      	ldr	r2, [r4, #32]
    this->frameNumber = frameNumber;
90000bb6:	6165      	str	r5, [r4, #20]
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
90000bb8:	3a04      	subs	r2, #4
90000bba:	441a      	add	r2, r3
90000bbc:	61a2      	str	r2, [r4, #24]
}
90000bbe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    return videoInfo.number_of_frames;
90000bc0:	68a3      	ldr	r3, [r4, #8]
{
90000bc2:	461d      	mov	r5, r3
90000bc4:	e7d2      	b.n	90000b6c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
            lastError = AVI_ERROR_EOF_REACHED;
90000bc6:	230d      	movs	r3, #13
90000bc8:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
90000bcc:	e7e4      	b.n	90000b98 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x48>
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
90000bce:	f107 0310 	add.w	r3, r7, #16
        return d[0] | (d[1] << 8) | (d[2] << 16) | (d[3] << 24);
90000bd2:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
90000bd4:	58d3      	ldr	r3, [r2, r3]
90000bd6:	e7ed      	b.n	90000bb4 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x64>
    if (frameNumber > getNumberOfFrames())
90000bd8:	4798      	blx	r3
90000bda:	4285      	cmp	r5, r0
90000bdc:	d9c6      	bls.n	90000b6c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
        frameNumber = getNumberOfFrames();
90000bde:	6823      	ldr	r3, [r4, #0]
90000be0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90000be2:	42b3      	cmp	r3, r6
90000be4:	d0ec      	beq.n	90000bc0 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x70>
90000be6:	4620      	mov	r0, r4
90000be8:	4798      	blx	r3
90000bea:	4605      	mov	r5, r0
90000bec:	e7be      	b.n	90000b6c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90000bee:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90000bf0:	4b04      	ldr	r3, [pc, #16]	; (90000c04 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xb4>)
90000bf2:	4a05      	ldr	r2, [pc, #20]	; (90000c08 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xb8>)
90000bf4:	2197      	movs	r1, #151	; 0x97
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90000bf6:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
            assert(!"Buffer to small");
90000bfa:	4804      	ldr	r0, [pc, #16]	; (90000c0c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xbc>)
90000bfc:	f026 ffbe 	bl	90027b7c <__assert_func>
90000c00:	9000099d 	.word	0x9000099d
90000c04:	90028f7c 	.word	0x90028f7c
90000c08:	90028f90 	.word	0x90028f90
90000c0c:	90028f2c 	.word	0x90028f2c

90000c10 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm>:
{
90000c10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90000c14:	4604      	mov	r4, r0
    if (reader != 0)
90000c16:	6b00      	ldr	r0, [r0, #48]	; 0x30
{
90000c18:	b083      	sub	sp, #12
90000c1a:	4615      	mov	r5, r2
    readData(currentMovieOffset, 8);
90000c1c:	69a6      	ldr	r6, [r4, #24]
    if (reader != 0)
90000c1e:	2800      	cmp	r0, #0
90000c20:	f000 80ad 	beq.w	90000d7e <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x16e>
        if (length > aviBufferLength)
90000c24:	6ba3      	ldr	r3, [r4, #56]	; 0x38
90000c26:	2b07      	cmp	r3, #7
90000c28:	f240 80b0 	bls.w	90000d8c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x17c>
        reader->seek(offset);
90000c2c:	6803      	ldr	r3, [r0, #0]
90000c2e:	4631      	mov	r1, r6
90000c30:	68db      	ldr	r3, [r3, #12]
90000c32:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90000c34:	6b20      	ldr	r0, [r4, #48]	; 0x30
90000c36:	2208      	movs	r2, #8
90000c38:	6b61      	ldr	r1, [r4, #52]	; 0x34
90000c3a:	6803      	ldr	r3, [r0, #0]
90000c3c:	691b      	ldr	r3, [r3, #16]
90000c3e:	4798      	blx	r3
90000c40:	2800      	cmp	r0, #0
90000c42:	f000 8091 	beq.w	90000d68 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x158>
    const uint32_t length = getU32(currentMovieOffset + 4);
90000c46:	69a7      	ldr	r7, [r4, #24]
    if (reader != 0)
90000c48:	6b20      	ldr	r0, [r4, #48]	; 0x30
    const uint32_t length = getU32(currentMovieOffset + 4);
90000c4a:	1d3a      	adds	r2, r7, #4
        aviBufferStartOffset = offset;
90000c4c:	63e6      	str	r6, [r4, #60]	; 0x3c
    if (reader != 0)
90000c4e:	2800      	cmp	r0, #0
90000c50:	f000 80a5 	beq.w	90000d9e <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x18e>
        const uint32_t index = offset - aviBufferStartOffset;
90000c54:	1b92      	subs	r2, r2, r6
    const uint8_t* mjpgdata = readData(currentMovieOffset + 8, length);
90000c56:	3708      	adds	r7, #8
        if (length > aviBufferLength)
90000c58:	e9d4 630d 	ldrd	r6, r3, [r4, #52]	; 0x34
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000c5c:	18b1      	adds	r1, r6, r2
90000c5e:	5cb2      	ldrb	r2, [r6, r2]
90000c60:	788e      	ldrb	r6, [r1, #2]
90000c62:	f891 c001 	ldrb.w	ip, [r1, #1]
90000c66:	0436      	lsls	r6, r6, #16
90000c68:	ea46 260c 	orr.w	r6, r6, ip, lsl #8
90000c6c:	4316      	orrs	r6, r2
90000c6e:	78ca      	ldrb	r2, [r1, #3]
90000c70:	ea46 6602 	orr.w	r6, r6, r2, lsl #24
        if (length > aviBufferLength)
90000c74:	42b3      	cmp	r3, r6
90000c76:	f0c0 8089 	bcc.w	90000d8c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x17c>
        reader->seek(offset);
90000c7a:	6803      	ldr	r3, [r0, #0]
90000c7c:	4639      	mov	r1, r7
90000c7e:	68db      	ldr	r3, [r3, #12]
90000c80:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90000c82:	6b20      	ldr	r0, [r4, #48]	; 0x30
90000c84:	4632      	mov	r2, r6
90000c86:	6b61      	ldr	r1, [r4, #52]	; 0x34
90000c88:	6803      	ldr	r3, [r0, #0]
90000c8a:	691b      	ldr	r3, [r3, #16]
90000c8c:	4798      	blx	r3
90000c8e:	b910      	cbnz	r0, 90000c96 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x86>
            lastError = AVI_ERROR_EOF_REACHED;
90000c90:	230d      	movs	r3, #13
90000c92:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
        return aviBuffer;
90000c96:	6b61      	ldr	r1, [r4, #52]	; 0x34
        aviBufferStartOffset = offset;
90000c98:	63e7      	str	r7, [r4, #60]	; 0x3c
    if (frameBuffer) /* only decode if buffers are assigned. */
90000c9a:	2d00      	cmp	r5, #0
90000c9c:	d058      	beq.n	90000d50 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x140>
        FrameBufferAddress = output;
90000c9e:	4b44      	ldr	r3, [pc, #272]	; (90000db0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1a0>)
        JPEG_output_is_paused = 0;
90000ca0:	2200      	movs	r2, #0
90000ca2:	4f44      	ldr	r7, [pc, #272]	; (90000db4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1a4>)
        FrameBufferAddress = output;
90000ca4:	601d      	str	r5, [r3, #0]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000ca6:	4b44      	ldr	r3, [pc, #272]	; (90000db8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1a8>)
        JPEG_output_is_paused = 0;
90000ca8:	603a      	str	r2, [r7, #0]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000caa:	68db      	ldr	r3, [r3, #12]
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90000cac:	4d43      	ldr	r5, [pc, #268]	; (90000dbc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1ac>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000cae:	eb03 0343 	add.w	r3, r3, r3, lsl #1
        JPEG_OUT_Write_BufferIndex = 0;
90000cb2:	f8df a134 	ldr.w	sl, [pc, #308]	; 90000de8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1d8>
        JPEG_OUT_Read_BufferIndex = 0;
90000cb6:	f8df b134 	ldr.w	fp, [pc, #308]	; 90000dec <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1dc>
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000cba:	01db      	lsls	r3, r3, #7
        JPEG_InputImageIndex = 0;
90000cbc:	4840      	ldr	r0, [pc, #256]	; (90000dc0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1b0>)
        JPEG_OUT_Read_BufferIndex = 0;
90000cbe:	f8cb 2000 	str.w	r2, [fp]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000cc2:	9300      	str	r3, [sp, #0]
        MCU_BlockIndex = 0;
90000cc4:	4b3f      	ldr	r3, [pc, #252]	; (90000dc4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1b4>)
        JPEG_OUT_Write_BufferIndex = 0;
90000cc6:	f8ca 2000 	str.w	r2, [sl]
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90000cca:	702a      	strb	r2, [r5, #0]
        MCU_BlockIndex = 0;
90000ccc:	601a      	str	r2, [r3, #0]
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90000cce:	742a      	strb	r2, [r5, #16]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000cd0:	f8da 3000 	ldr.w	r3, [sl]
        JPEG_InputImageIndex = 0;
90000cd4:	6002      	str	r2, [r0, #0]
        JPEG_InputImageAddress = (uint32_t)input;
90000cd6:	4a3c      	ldr	r2, [pc, #240]	; (90000dc8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1b8>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000cd8:	eb05 1303 	add.w	r3, r5, r3, lsl #4
90000cdc:	483b      	ldr	r0, [pc, #236]	; (90000dcc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1bc>)
        JPEG_InputImageAddress = (uint32_t)input;
90000cde:	6011      	str	r1, [r2, #0]
        JPEG_InputImageSize_Bytes = chunkSizeIn;
90000ce0:	4a3b      	ldr	r2, [pc, #236]	; (90000dd0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1c0>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000ce2:	685b      	ldr	r3, [r3, #4]
        JPEG_InputImageSize_Bytes = chunkSizeIn;
90000ce4:	6016      	str	r6, [r2, #0]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000ce6:	f44f 4250 	mov.w	r2, #53248	; 0xd000
90000cea:	4e3a      	ldr	r6, [pc, #232]	; (90000dd4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1c4>)
90000cec:	4c3a      	ldr	r4, [pc, #232]	; (90000dd8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1c8>)
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90000cee:	f8df 8100 	ldr.w	r8, [pc, #256]	; 90000df0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1e0>
90000cf2:	f8df 9100 	ldr.w	r9, [pc, #256]	; 90000df4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1e4>
            Jpeg_OUT_BufferTab[i].DataBufferSize = 0;
90000cf6:	ed9f 7b2c 	vldr	d7, [pc, #176]	; 90000da8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x198>
90000cfa:	ed85 7b02 	vstr	d7, [r5, #8]
90000cfe:	ed85 7b06 	vstr	d7, [r5, #24]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000d02:	f009 ff1b 	bl	9000ab3c <HAL_JPEG_Decode_DMA>
        return 0;
90000d06:	e017      	b.n	90000d38 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x128>
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90000d08:	f8d8 0000 	ldr.w	r0, [r8]
90000d0c:	7a03      	ldrb	r3, [r0, #8]
90000d0e:	b92b      	cbnz	r3, 90000d1c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x10c>
90000d10:	f8db 3000 	ldr.w	r3, [fp]
90000d14:	011b      	lsls	r3, r3, #4
90000d16:	5ceb      	ldrb	r3, [r5, r3]
90000d18:	2b01      	cmp	r3, #1
90000d1a:	d01d      	beq.n	90000d58 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x148>
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90000d1c:	683b      	ldr	r3, [r7, #0]
90000d1e:	2b01      	cmp	r3, #1
90000d20:	d106      	bne.n	90000d30 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x120>
90000d22:	f8da 3000 	ldr.w	r3, [sl]
90000d26:	011b      	lsls	r3, r3, #4
90000d28:	5ceb      	ldrb	r3, [r5, r3]
90000d2a:	b90b      	cbnz	r3, 90000d30 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x120>
90000d2c:	6833      	ldr	r3, [r6, #0]
90000d2e:	b1fb      	cbz	r3, 90000d70 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x160>
    return 2;
90000d30:	2302      	movs	r3, #2
            JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90000d32:	6023      	str	r3, [r4, #0]
        } while (JpegProcessing_End == 0);
90000d34:	6823      	ldr	r3, [r4, #0]
90000d36:	b95b      	cbnz	r3, 90000d50 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x140>
    if (Jpeg_HWDecodingEnd && DMA2D_CopyBufferEnd)
90000d38:	6833      	ldr	r3, [r6, #0]
90000d3a:	2b00      	cmp	r3, #0
90000d3c:	d0e4      	beq.n	90000d08 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0xf8>
90000d3e:	f8d9 3000 	ldr.w	r3, [r9]
90000d42:	2b00      	cmp	r3, #0
90000d44:	d0e0      	beq.n	90000d08 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0xf8>
        return 1;
90000d46:	2301      	movs	r3, #1
            JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90000d48:	6023      	str	r3, [r4, #0]
        } while (JpegProcessing_End == 0);
90000d4a:	6823      	ldr	r3, [r4, #0]
90000d4c:	2b00      	cmp	r3, #0
90000d4e:	d0f3      	beq.n	90000d38 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x128>
}
90000d50:	2001      	movs	r0, #1
90000d52:	b003      	add	sp, #12
90000d54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90000d58:	f8d9 3000 	ldr.w	r3, [r9]
90000d5c:	2b00      	cmp	r3, #0
90000d5e:	d1dd      	bne.n	90000d1c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x10c>
        DMA2D_reference->start();
90000d60:	6803      	ldr	r3, [r0, #0]
90000d62:	691b      	ldr	r3, [r3, #16]
90000d64:	4798      	blx	r3
90000d66:	e7d9      	b.n	90000d1c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x10c>
            lastError = AVI_ERROR_EOF_REACHED;
90000d68:	230d      	movs	r3, #13
90000d6a:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
90000d6e:	e76a      	b.n	90000c46 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x36>
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90000d70:	2102      	movs	r1, #2
90000d72:	4816      	ldr	r0, [pc, #88]	; (90000dcc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1bc>)
        JPEG_output_is_paused = 0;
90000d74:	603b      	str	r3, [r7, #0]
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90000d76:	f00a f829 	bl	9000adcc <HAL_JPEG_Resume>
90000d7a:	2302      	movs	r3, #2
90000d7c:	e7d9      	b.n	90000d32 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x122>
    const uint32_t length = getU32(currentMovieOffset + 4);
90000d7e:	1d32      	adds	r2, r6, #4
    if (reader != 0)
90000d80:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
    const uint8_t* mjpgdata = readData(currentMovieOffset + 8, length);
90000d82:	f106 0308 	add.w	r3, r6, #8
90000d86:	588e      	ldr	r6, [r1, r2]
    return movieData + offset;
90000d88:	4419      	add	r1, r3
90000d8a:	e786      	b.n	90000c9a <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x8a>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90000d8c:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90000d8e:	4b13      	ldr	r3, [pc, #76]	; (90000ddc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1cc>)
90000d90:	4a13      	ldr	r2, [pc, #76]	; (90000de0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1d0>)
90000d92:	2197      	movs	r1, #151	; 0x97
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90000d94:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
            assert(!"Buffer to small");
90000d98:	4812      	ldr	r0, [pc, #72]	; (90000de4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1d4>)
90000d9a:	f026 feef 	bl	90027b7c <__assert_func>
    const uint32_t length = getU32(currentMovieOffset + 4);
90000d9e:	463e      	mov	r6, r7
90000da0:	e7ee      	b.n	90000d80 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x170>
90000da2:	bf00      	nop
90000da4:	f3af 8000 	nop.w
	...
90000db0:	24005bb4 	.word	0x24005bb4
90000db4:	24005bc4 	.word	0x24005bc4
90000db8:	24005b98 	.word	0x24005b98
90000dbc:	24000008 	.word	0x24000008
90000dc0:	24005bc0 	.word	0x24005bc0
90000dc4:	24005b94 	.word	0x24005b94
90000dc8:	24005bc8 	.word	0x24005bc8
90000dcc:	240094f8 	.word	0x240094f8
90000dd0:	24005bcc 	.word	0x24005bcc
90000dd4:	24005bbc 	.word	0x24005bbc
90000dd8:	24005bb8 	.word	0x24005bb8
90000ddc:	90028f7c 	.word	0x90028f7c
90000de0:	90028f90 	.word	0x90028f90
90000de4:	90028f2c 	.word	0x90028f2c
90000de8:	24005bd0 	.word	0x24005bd0
90000dec:	24005b90 	.word	0x24005b90
90000df0:	24005bb0 	.word	0x24005bb0
90000df4:	24005b8c 	.word	0x24005b8c

90000df8 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv>:
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90000df8:	6943      	ldr	r3, [r0, #20]
{
90000dfa:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90000dfe:	2b00      	cmp	r3, #0
90000e00:	f000 8098 	beq.w	90000f34 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x13c>
    readData(currentMovieOffset, 8);
90000e04:	4605      	mov	r5, r0
    if (reader != 0)
90000e06:	6b00      	ldr	r0, [r0, #48]	; 0x30
    readData(currentMovieOffset, 8);
90000e08:	69ac      	ldr	r4, [r5, #24]
    if (reader != 0)
90000e0a:	2800      	cmp	r0, #0
90000e0c:	f000 8082 	beq.w	90000f14 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x11c>
        if (length > aviBufferLength)
90000e10:	6bab      	ldr	r3, [r5, #56]	; 0x38
90000e12:	2b07      	cmp	r3, #7
90000e14:	f240 8083 	bls.w	90000f1e <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x126>
        reader->seek(offset);
90000e18:	6803      	ldr	r3, [r0, #0]
90000e1a:	4621      	mov	r1, r4
90000e1c:	68db      	ldr	r3, [r3, #12]
90000e1e:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90000e20:	6b28      	ldr	r0, [r5, #48]	; 0x30
90000e22:	2208      	movs	r2, #8
90000e24:	6b69      	ldr	r1, [r5, #52]	; 0x34
90000e26:	6803      	ldr	r3, [r0, #0]
90000e28:	691b      	ldr	r3, [r3, #16]
90000e2a:	4798      	blx	r3
90000e2c:	2800      	cmp	r0, #0
90000e2e:	d06d      	beq.n	90000f0c <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x114>
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90000e30:	69ab      	ldr	r3, [r5, #24]
    if (reader != 0)
90000e32:	6b28      	ldr	r0, [r5, #48]	; 0x30
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90000e34:	1d1a      	adds	r2, r3, #4
        aviBufferStartOffset = offset;
90000e36:	63ec      	str	r4, [r5, #60]	; 0x3c
    if (reader != 0)
90000e38:	2800      	cmp	r0, #0
90000e3a:	d06d      	beq.n	90000f18 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x120>
        const uint32_t index = offset - aviBufferStartOffset;
90000e3c:	1b12      	subs	r2, r2, r4
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000e3e:	6b6c      	ldr	r4, [r5, #52]	; 0x34
90000e40:	18a1      	adds	r1, r4, r2
90000e42:	5ca2      	ldrb	r2, [r4, r2]
90000e44:	788c      	ldrb	r4, [r1, #2]
90000e46:	784e      	ldrb	r6, [r1, #1]
90000e48:	0424      	lsls	r4, r4, #16
90000e4a:	ea44 2406 	orr.w	r4, r4, r6, lsl #8
90000e4e:	4314      	orrs	r4, r2
90000e50:	78ca      	ldrb	r2, [r1, #3]
90000e52:	ea44 6402 	orr.w	r4, r4, r2, lsl #24
            lastError = AVI_ERROR_EOF_REACHED;
90000e56:	270d      	movs	r7, #13
        if (streamNo == STREAM0 && chunkType == TYPEDC)
90000e58:	f243 0630 	movw	r6, #12336	; 0x3030
90000e5c:	e039      	b.n	90000ed2 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xda>
        if (length > aviBufferLength)
90000e5e:	6bab      	ldr	r3, [r5, #56]	; 0x38
90000e60:	2b07      	cmp	r3, #7
90000e62:	d95c      	bls.n	90000f1e <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x126>
        reader->seek(offset);
90000e64:	6803      	ldr	r3, [r0, #0]
90000e66:	4621      	mov	r1, r4
90000e68:	68db      	ldr	r3, [r3, #12]
90000e6a:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90000e6c:	6b28      	ldr	r0, [r5, #48]	; 0x30
90000e6e:	2208      	movs	r2, #8
90000e70:	6b69      	ldr	r1, [r5, #52]	; 0x34
90000e72:	6803      	ldr	r3, [r0, #0]
90000e74:	691b      	ldr	r3, [r3, #16]
90000e76:	4798      	blx	r3
90000e78:	b908      	cbnz	r0, 90000e7e <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x86>
            lastError = AVI_ERROR_EOF_REACHED;
90000e7a:	f885 7040 	strb.w	r7, [r5, #64]	; 0x40
    if (reader != 0)
90000e7e:	6b28      	ldr	r0, [r5, #48]	; 0x30
        uint32_t streamNo  = getU16(currentMovieOffset);
90000e80:	69aa      	ldr	r2, [r5, #24]
        aviBufferStartOffset = offset;
90000e82:	63ec      	str	r4, [r5, #60]	; 0x3c
    if (reader != 0)
90000e84:	2800      	cmp	r0, #0
90000e86:	d053      	beq.n	90000f30 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x138>
        const uint32_t index = offset - aviBufferStartOffset;
90000e88:	1b12      	subs	r2, r2, r4
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90000e8a:	6b69      	ldr	r1, [r5, #52]	; 0x34
90000e8c:	188b      	adds	r3, r1, r2
90000e8e:	5c89      	ldrb	r1, [r1, r2]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000e90:	799c      	ldrb	r4, [r3, #6]
90000e92:	f893 a005 	ldrb.w	sl, [r3, #5]
90000e96:	0424      	lsls	r4, r4, #16
90000e98:	f893 e004 	ldrb.w	lr, [r3, #4]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90000e9c:	f893 9001 	ldrb.w	r9, [r3, #1]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000ea0:	ea44 240a 	orr.w	r4, r4, sl, lsl #8
90000ea4:	f893 c007 	ldrb.w	ip, [r3, #7]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90000ea8:	f893 8003 	ldrb.w	r8, [r3, #3]
90000eac:	ea41 2109 	orr.w	r1, r1, r9, lsl #8
90000eb0:	789a      	ldrb	r2, [r3, #2]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000eb2:	ea44 040e 	orr.w	r4, r4, lr
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90000eb6:	ea42 2308 	orr.w	r3, r2, r8, lsl #8
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000eba:	ea44 640c 	orr.w	r4, r4, ip, lsl #24
        if (streamNo == STREAM0 && chunkType == TYPEDC)
90000ebe:	f246 3264 	movw	r2, #25444	; 0x6364
90000ec2:	42b1      	cmp	r1, r6
90000ec4:	bf08      	it	eq
90000ec6:	4293      	cmpeq	r3, r2
90000ec8:	bf0c      	ite	eq
90000eca:	2101      	moveq	r1, #1
90000ecc:	2100      	movne	r1, #0
90000ece:	d01a      	beq.n	90000f06 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x10e>
    while (currentMovieOffset + 8 + chunkSize < movieLength)
90000ed0:	69ab      	ldr	r3, [r5, #24]
90000ed2:	441c      	add	r4, r3
90000ed4:	6aab      	ldr	r3, [r5, #40]	; 0x28
90000ed6:	f104 0208 	add.w	r2, r4, #8
90000eda:	429a      	cmp	r2, r3
90000edc:	d20e      	bcs.n	90000efc <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x104>
        frameNumber++;
90000ede:	696b      	ldr	r3, [r5, #20]
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90000ee0:	3409      	adds	r4, #9
        frameNumber++;
90000ee2:	3301      	adds	r3, #1
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90000ee4:	f024 0401 	bic.w	r4, r4, #1
90000ee8:	e9c5 3405 	strd	r3, r4, [r5, #20]
    if (reader != 0)
90000eec:	2800      	cmp	r0, #0
90000eee:	d1b6      	bne.n	90000e5e <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x66>
        const uint8_t* const d = movieData + offset;
90000ef0:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
        return d[0] | (d[1] << 8);
90000ef2:	191a      	adds	r2, r3, r4
90000ef4:	5b19      	ldrh	r1, [r3, r4]
90000ef6:	8853      	ldrh	r3, [r2, #2]
        return d[0] | (d[1] << 8) | (d[2] << 16) | (d[3] << 24);
90000ef8:	6854      	ldr	r4, [r2, #4]
90000efa:	e7e0      	b.n	90000ebe <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xc6>
    frameNumber = 1;
90000efc:	2201      	movs	r2, #1
    currentMovieOffset = firstFrameOffset; /* start over */
90000efe:	6a2b      	ldr	r3, [r5, #32]
    return false;
90000f00:	2100      	movs	r1, #0
    currentMovieOffset = firstFrameOffset; /* start over */
90000f02:	e9c5 2305 	strd	r2, r3, [r5, #20]
}
90000f06:	4608      	mov	r0, r1
90000f08:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
            lastError = AVI_ERROR_EOF_REACHED;
90000f0c:	230d      	movs	r3, #13
90000f0e:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
90000f12:	e78d      	b.n	90000e30 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x38>
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90000f14:	1d22      	adds	r2, r4, #4
90000f16:	4623      	mov	r3, r4
        return d[0] | (d[1] << 8) | (d[2] << 16) | (d[3] << 24);
90000f18:	6ae9      	ldr	r1, [r5, #44]	; 0x2c
90000f1a:	588c      	ldr	r4, [r1, r2]
90000f1c:	e79b      	b.n	90000e56 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x5e>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90000f1e:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90000f20:	4b07      	ldr	r3, [pc, #28]	; (90000f40 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x148>)
90000f22:	4a08      	ldr	r2, [pc, #32]	; (90000f44 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x14c>)
90000f24:	2197      	movs	r1, #151	; 0x97
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90000f26:	f885 0040 	strb.w	r0, [r5, #64]	; 0x40
            assert(!"Buffer to small");
90000f2a:	4807      	ldr	r0, [pc, #28]	; (90000f48 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x150>)
90000f2c:	f026 fe26 	bl	90027b7c <__assert_func>
        uint32_t streamNo  = getU16(currentMovieOffset);
90000f30:	4614      	mov	r4, r2
90000f32:	e7dd      	b.n	90000ef0 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xf8>
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90000f34:	4b05      	ldr	r3, [pc, #20]	; (90000f4c <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x154>)
90000f36:	21dd      	movs	r1, #221	; 0xdd
90000f38:	4a05      	ldr	r2, [pc, #20]	; (90000f50 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x158>)
90000f3a:	4803      	ldr	r0, [pc, #12]	; (90000f48 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x150>)
90000f3c:	f026 fe1e 	bl	90027b7c <__assert_func>
90000f40:	90028f7c 	.word	0x90028f7c
90000f44:	90028f90 	.word	0x90028f90
90000f48:	90028f2c 	.word	0x90028f2c
90000f4c:	90028fd4 	.word	0x90028fd4
90000f50:	90029020 	.word	0x90029020

90000f54 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm>:
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90000f54:	6943      	ldr	r3, [r0, #20]
{
90000f56:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90000f5a:	2b00      	cmp	r3, #0
90000f5c:	f000 809b 	beq.w	90001096 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x142>
    readData(currentMovieOffset, 8);
90000f60:	4604      	mov	r4, r0
    if (reader != 0)
90000f62:	6b00      	ldr	r0, [r0, #48]	; 0x30
90000f64:	460e      	mov	r6, r1
    readData(currentMovieOffset, 8);
90000f66:	69a5      	ldr	r5, [r4, #24]
    if (reader != 0)
90000f68:	2800      	cmp	r0, #0
90000f6a:	d061      	beq.n	90001030 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xdc>
        if (length > aviBufferLength)
90000f6c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
90000f6e:	2b07      	cmp	r3, #7
90000f70:	f240 8097 	bls.w	900010a2 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x14e>
        reader->seek(offset);
90000f74:	6803      	ldr	r3, [r0, #0]
90000f76:	4629      	mov	r1, r5
90000f78:	68db      	ldr	r3, [r3, #12]
90000f7a:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90000f7c:	6b20      	ldr	r0, [r4, #48]	; 0x30
90000f7e:	2208      	movs	r2, #8
90000f80:	6b61      	ldr	r1, [r4, #52]	; 0x34
90000f82:	6803      	ldr	r3, [r0, #0]
90000f84:	691b      	ldr	r3, [r3, #16]
90000f86:	4798      	blx	r3
90000f88:	2800      	cmp	r0, #0
90000f8a:	d04c      	beq.n	90001026 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xd2>
    if (reader != 0)
90000f8c:	6b20      	ldr	r0, [r4, #48]	; 0x30
    uint32_t streamNo  = getU16(currentMovieOffset);
90000f8e:	69a1      	ldr	r1, [r4, #24]
        aviBufferStartOffset = offset;
90000f90:	63e5      	str	r5, [r4, #60]	; 0x3c
    if (reader != 0)
90000f92:	2800      	cmp	r0, #0
90000f94:	d04b      	beq.n	9000102e <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xda>
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90000f96:	f101 0c04 	add.w	ip, r1, #4
    uint32_t chunkType = getU16(currentMovieOffset + 2);
90000f9a:	1c8a      	adds	r2, r1, #2
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90000f9c:	6b63      	ldr	r3, [r4, #52]	; 0x34
        const uint32_t index = offset - aviBufferStartOffset;
90000f9e:	ebac 0c05 	sub.w	ip, ip, r5
        const uint32_t index = offset - aviBufferStartOffset;
90000fa2:	1b52      	subs	r2, r2, r5
90000fa4:	1b4d      	subs	r5, r1, r5
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000fa6:	eb03 0e0c 	add.w	lr, r3, ip
90000faa:	f813 700c 	ldrb.w	r7, [r3, ip]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90000fae:	eb03 0805 	add.w	r8, r3, r5
90000fb2:	f813 c005 	ldrb.w	ip, [r3, r5]
90000fb6:	f898 5001 	ldrb.w	r5, [r8, #1]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000fba:	f89e 8001 	ldrb.w	r8, [lr, #1]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90000fbe:	ea4c 2c05 	orr.w	ip, ip, r5, lsl #8
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000fc2:	f89e 5002 	ldrb.w	r5, [lr, #2]
90000fc6:	f89e e003 	ldrb.w	lr, [lr, #3]
90000fca:	042d      	lsls	r5, r5, #16
90000fcc:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
90000fd0:	433d      	orrs	r5, r7
90000fd2:	ea45 650e 	orr.w	r5, r5, lr, lsl #24
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90000fd6:	eb03 0e02 	add.w	lr, r3, r2
90000fda:	5c9b      	ldrb	r3, [r3, r2]
90000fdc:	f89e 2001 	ldrb.w	r2, [lr, #1]
90000fe0:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
    if (currentMovieOffset + 8 + chunkSize < movieLength)
90000fe4:	194a      	adds	r2, r1, r5
90000fe6:	6aa7      	ldr	r7, [r4, #40]	; 0x28
90000fe8:	f102 0e08 	add.w	lr, r2, #8
90000fec:	45be      	cmp	lr, r7
90000fee:	d213      	bcs.n	90001018 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xc4>
        if (streamNo == STREAM0 && chunkType == TYPEDC && chunkSize > 0)
90000ff0:	f243 0730 	movw	r7, #12336	; 0x3030
90000ff4:	45bc      	cmp	ip, r7
90000ff6:	d124      	bne.n	90001042 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xee>
90000ff8:	f246 3764 	movw	r7, #25444	; 0x6364
90000ffc:	42bb      	cmp	r3, r7
90000ffe:	d120      	bne.n	90001042 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xee>
90001000:	bb1d      	cbnz	r5, 9000104a <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xf6>
            currentMovieOffset += 8;
90001002:	4672      	mov	r2, lr
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90001004:	3201      	adds	r2, #1
        if (currentMovieOffset == lastFrameEnd)
90001006:	6a63      	ldr	r3, [r4, #36]	; 0x24
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90001008:	f022 0201 	bic.w	r2, r2, #1
        if (currentMovieOffset == lastFrameEnd)
9000100c:	429a      	cmp	r2, r3
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
9000100e:	61a2      	str	r2, [r4, #24]
        if (currentMovieOffset == lastFrameEnd)
90001010:	d002      	beq.n	90001018 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xc4>
90001012:	2001      	movs	r0, #1
}
90001014:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        frameNumber = 1;
90001018:	2201      	movs	r2, #1
        currentMovieOffset = firstFrameOffset; /* start over */
9000101a:	6a23      	ldr	r3, [r4, #32]
9000101c:	2000      	movs	r0, #0
9000101e:	e9c4 2305 	strd	r2, r3, [r4, #20]
}
90001022:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            lastError = AVI_ERROR_EOF_REACHED;
90001026:	230d      	movs	r3, #13
90001028:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
9000102c:	e7ae      	b.n	90000f8c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x38>
    uint32_t streamNo  = getU16(currentMovieOffset);
9000102e:	460d      	mov	r5, r1
        const uint8_t* const d = movieData + offset;
90001030:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
        const uint8_t* const d = movieData + offset;
90001032:	4629      	mov	r1, r5
90001034:	2000      	movs	r0, #0
        return d[0] | (d[1] << 8);
90001036:	f832 c005 	ldrh.w	ip, [r2, r5]
9000103a:	442a      	add	r2, r5
9000103c:	8853      	ldrh	r3, [r2, #2]
        return d[0] | (d[1] << 8) | (d[2] << 16) | (d[3] << 24);
9000103e:	6855      	ldr	r5, [r2, #4]
90001040:	e7d0      	b.n	90000fe4 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x90>
        currentMovieOffset += chunkSize;
90001042:	61a2      	str	r2, [r4, #24]
        if (chunkSize == 0) /* Empty frame - Skip */
90001044:	2d00      	cmp	r5, #0
90001046:	d1dd      	bne.n	90001004 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xb0>
90001048:	e7db      	b.n	90001002 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xae>
            currentMovieOffset += 8;
9000104a:	f101 0708 	add.w	r7, r1, #8
9000104e:	61a7      	str	r7, [r4, #24]
    if (reader != 0)
90001050:	b1f0      	cbz	r0, 90001090 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x13c>
        if (length > aviBufferLength)
90001052:	6ba3      	ldr	r3, [r4, #56]	; 0x38
90001054:	429d      	cmp	r5, r3
90001056:	d824      	bhi.n	900010a2 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x14e>
        reader->seek(offset);
90001058:	6803      	ldr	r3, [r0, #0]
9000105a:	4639      	mov	r1, r7
9000105c:	68db      	ldr	r3, [r3, #12]
9000105e:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001060:	6b20      	ldr	r0, [r4, #48]	; 0x30
90001062:	462a      	mov	r2, r5
90001064:	6b61      	ldr	r1, [r4, #52]	; 0x34
90001066:	6803      	ldr	r3, [r0, #0]
90001068:	691b      	ldr	r3, [r3, #16]
9000106a:	4798      	blx	r3
9000106c:	b910      	cbnz	r0, 90001074 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x120>
            lastError = AVI_ERROR_EOF_REACHED;
9000106e:	230d      	movs	r3, #13
90001070:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
        return aviBuffer;
90001074:	6b61      	ldr	r1, [r4, #52]	; 0x34
        aviBufferStartOffset = offset;
90001076:	63e7      	str	r7, [r4, #60]	; 0x3c
    if (outputBuffer) /* only decode if buffers are assigned. */
90001078:	b126      	cbz	r6, 90001084 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x130>
9000107a:	4633      	mov	r3, r6
9000107c:	462a      	mov	r2, r5
9000107e:	4620      	mov	r0, r4
90001080:	f7ff fcae 	bl	900009e0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0>
        currentMovieOffset += chunkSize;
90001084:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
            frameNumber++;
90001088:	3301      	adds	r3, #1
        currentMovieOffset += chunkSize;
9000108a:	442a      	add	r2, r5
            frameNumber++;
9000108c:	6163      	str	r3, [r4, #20]
        if (chunkSize == 0) /* Empty frame - Skip */
9000108e:	e7b9      	b.n	90001004 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xb0>
    return movieData + offset;
90001090:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
90001092:	4439      	add	r1, r7
90001094:	e7f0      	b.n	90001078 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x124>
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90001096:	4b07      	ldr	r3, [pc, #28]	; (900010b4 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x160>)
90001098:	21a9      	movs	r1, #169	; 0xa9
9000109a:	4a07      	ldr	r2, [pc, #28]	; (900010b8 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x164>)
9000109c:	4807      	ldr	r0, [pc, #28]	; (900010bc <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x168>)
9000109e:	f026 fd6d 	bl	90027b7c <__assert_func>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
900010a2:	2009      	movs	r0, #9
            assert(!"Buffer to small");
900010a4:	4b06      	ldr	r3, [pc, #24]	; (900010c0 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x16c>)
900010a6:	4a07      	ldr	r2, [pc, #28]	; (900010c4 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x170>)
900010a8:	2197      	movs	r1, #151	; 0x97
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
900010aa:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
            assert(!"Buffer to small");
900010ae:	4803      	ldr	r0, [pc, #12]	; (900010bc <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x168>)
900010b0:	f026 fd64 	bl	90027b7c <__assert_func>
900010b4:	90028fd4 	.word	0x90028fd4
900010b8:	90029054 	.word	0x90029054
900010bc:	90028f2c 	.word	0x90028f2c
900010c0:	90028f7c 	.word	0x90028f7c
900010c4:	90028f90 	.word	0x90028f90

900010c8 <_ZN20HardwareMJPEGDecoderC1Ev>:
HardwareMJPEGDecoder::HardwareMJPEGDecoder()
900010c8:	b510      	push	{r4, lr}
    : frameNumber(0), currentMovieOffset(0), indexOffset(0), firstFrameOffset(0), lastFrameEnd(0), movieLength(0), movieData(0),
900010ca:	2200      	movs	r2, #0
HardwareMJPEGDecoder::HardwareMJPEGDecoder()
900010cc:	4604      	mov	r4, r0
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
900010ce:	4b0e      	ldr	r3, [pc, #56]	; (90001108 <_ZN20HardwareMJPEGDecoderC1Ev+0x40>)
    semDecodingDone = SEM_CREATE();
900010d0:	2001      	movs	r0, #1
900010d2:	4611      	mov	r1, r2
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
900010d4:	63e2      	str	r2, [r4, #60]	; 0x3c
900010d6:	6023      	str	r3, [r4, #0]
900010d8:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
    : frameNumber(0), currentMovieOffset(0), indexOffset(0), firstFrameOffset(0), lastFrameEnd(0), movieLength(0), movieData(0),
900010dc:	e9c4 2205 	strd	r2, r2, [r4, #20]
900010e0:	e9c4 2207 	strd	r2, r2, [r4, #28]
900010e4:	e9c4 2209 	strd	r2, r2, [r4, #36]	; 0x24
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
900010e8:	e9c4 220b 	strd	r2, r2, [r4, #44]	; 0x2c
900010ec:	e9c4 220d 	strd	r2, r2, [r4, #52]	; 0x34
    videoInfo.frame_width = 0;
900010f0:	e9c4 2203 	strd	r2, r2, [r4, #12]
    videoInfo.number_of_frames = 0;
900010f4:	e9c4 2201 	strd	r2, r2, [r4, #4]
    semDecodingDone = SEM_CREATE();
900010f8:	f00d f936 	bl	9000e368 <osSemaphoreNew>
900010fc:	4b03      	ldr	r3, [pc, #12]	; (9000110c <_ZN20HardwareMJPEGDecoderC1Ev+0x44>)
900010fe:	4602      	mov	r2, r0
}
90001100:	4620      	mov	r0, r4
    semDecodingDone = SEM_CREATE();
90001102:	601a      	str	r2, [r3, #0]
}
90001104:	bd10      	pop	{r4, pc}
90001106:	bf00      	nop
90001108:	90029178 	.word	0x90029178
9000110c:	24005bd4 	.word	0x24005bd4

90001110 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>:
{
90001110:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    currentMovieOffset = 0;
90001114:	2100      	movs	r1, #0
    if (reader != 0)
90001116:	6b06      	ldr	r6, [r0, #48]	; 0x30
{
90001118:	b083      	sub	sp, #12
9000111a:	4605      	mov	r5, r0
    currentMovieOffset = 0;
9000111c:	6181      	str	r1, [r0, #24]
    lastError = AVI_NO_ERROR;
9000111e:	f880 1040 	strb.w	r1, [r0, #64]	; 0x40
    if (reader != 0)
90001122:	2e00      	cmp	r6, #0
90001124:	f000 81aa 	beq.w	9000147c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x36c>
        if (length > aviBufferLength)
90001128:	6b83      	ldr	r3, [r0, #56]	; 0x38
9000112a:	2b47      	cmp	r3, #71	; 0x47
9000112c:	f240 8202 	bls.w	90001534 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x424>
        reader->seek(offset);
90001130:	6833      	ldr	r3, [r6, #0]
90001132:	4630      	mov	r0, r6
90001134:	68db      	ldr	r3, [r3, #12]
90001136:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001138:	6b28      	ldr	r0, [r5, #48]	; 0x30
9000113a:	2248      	movs	r2, #72	; 0x48
9000113c:	6b69      	ldr	r1, [r5, #52]	; 0x34
9000113e:	6803      	ldr	r3, [r0, #0]
90001140:	691b      	ldr	r3, [r3, #16]
90001142:	4798      	blx	r3
90001144:	2800      	cmp	r0, #0
90001146:	f000 80ce 	beq.w	900012e6 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1d6>
        aviBufferStartOffset = offset;
9000114a:	2300      	movs	r3, #0
    if (reader != 0)
9000114c:	6b2e      	ldr	r6, [r5, #48]	; 0x30
    if (compare(currentMovieOffset, "RIFF", 4))
9000114e:	69af      	ldr	r7, [r5, #24]
    if (reader != 0)
90001150:	46b1      	mov	r9, r6
        aviBufferStartOffset = offset;
90001152:	63eb      	str	r3, [r5, #60]	; 0x3c
    if (reader != 0)
90001154:	2e00      	cmp	r6, #0
90001156:	f000 8192 	beq.w	9000147e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x36e>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
9000115a:	f8d5 8034 	ldr.w	r8, [r5, #52]	; 0x34
    return strncmp(src, str, num);
9000115e:	2204      	movs	r2, #4
90001160:	49be      	ldr	r1, [pc, #760]	; (9000145c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x34c>)
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001162:	eb08 0b07 	add.w	fp, r8, r7
    return strncmp(src, str, num);
90001166:	4658      	mov	r0, fp
90001168:	f026 ff98 	bl	9002809c <strncmp>
    if (compare(currentMovieOffset, "RIFF", 4))
9000116c:	2800      	cmp	r0, #0
9000116e:	f040 81ea 	bne.w	90001546 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x436>
    currentMovieOffset += 8;
90001172:	f107 0008 	add.w	r0, r7, #8
    return strncmp(src, str, num);
90001176:	2204      	movs	r2, #4
90001178:	49b9      	ldr	r1, [pc, #740]	; (90001460 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x350>)
    currentMovieOffset += 8;
9000117a:	61a8      	str	r0, [r5, #24]
    return strncmp(src, str, num);
9000117c:	4440      	add	r0, r8
9000117e:	f026 ff8d 	bl	9002809c <strncmp>
    if (compare(currentMovieOffset, "AVI ", 4))
90001182:	2800      	cmp	r0, #0
90001184:	f040 81fa 	bne.w	9000157c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x46c>
    currentMovieOffset += 4;
90001188:	f107 0a0c 	add.w	sl, r7, #12
    return strncmp(src, str, num);
9000118c:	2204      	movs	r2, #4
9000118e:	49b5      	ldr	r1, [pc, #724]	; (90001464 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x354>)
90001190:	eb08 000a 	add.w	r0, r8, sl
    currentMovieOffset += 4;
90001194:	f8c5 a018 	str.w	sl, [r5, #24]
    return strncmp(src, str, num);
90001198:	f026 ff80 	bl	9002809c <strncmp>
    if (compare(currentMovieOffset, "LIST", 4))
9000119c:	9001      	str	r0, [sp, #4]
9000119e:	2800      	cmp	r0, #0
900011a0:	f040 81e2 	bne.w	90001568 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x458>
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900011a4:	f89b 4012 	ldrb.w	r4, [fp, #18]
900011a8:	f89b 2011 	ldrb.w	r2, [fp, #17]
900011ac:	0424      	lsls	r4, r4, #16
900011ae:	f89b 3013 	ldrb.w	r3, [fp, #19]
900011b2:	ea44 2402 	orr.w	r4, r4, r2, lsl #8
900011b6:	f89b 2010 	ldrb.w	r2, [fp, #16]
900011ba:	4314      	orrs	r4, r2
    assert(aviListSize);
900011bc:	ea54 6403 	orrs.w	r4, r4, r3, lsl #24
900011c0:	f000 81cb 	beq.w	9000155a <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x44a>
    uint32_t offset =  currentMovieOffset + 8;
900011c4:	f107 0014 	add.w	r0, r7, #20
    return strncmp(src, str, num);
900011c8:	2204      	movs	r2, #4
900011ca:	49a7      	ldr	r1, [pc, #668]	; (90001468 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x358>)
900011cc:	4440      	add	r0, r8
900011ce:	f026 ff65 	bl	9002809c <strncmp>
    if (compare(offset, "hdrl", 4))
900011d2:	2800      	cmp	r0, #0
900011d4:	f000 808b 	beq.w	900012ee <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1de>
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
900011d8:	2306      	movs	r3, #6
        foundFrame = false;
900011da:	f8dd b004 	ldr.w	fp, [sp, #4]
    offset += 4;
900011de:	f107 0018 	add.w	r0, r7, #24
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
900011e2:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
900011e6:	4440      	add	r0, r8
    return strncmp(src, str, num);
900011e8:	2204      	movs	r2, #4
900011ea:	49a0      	ldr	r1, [pc, #640]	; (9000146c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x35c>)
900011ec:	f026 ff56 	bl	9002809c <strncmp>
    if (compare(offset, "avih", 4))
900011f0:	2800      	cmp	r0, #0
900011f2:	f000 8085 	beq.w	90001300 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1f0>
        lastError = AVI_ERROR_AVI_AVIH_NOT_FOUND;
900011f6:	2307      	movs	r3, #7
900011f8:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
    uint32_t listOffset = aviListOffset + aviListSize + 8;
900011fc:	4454      	add	r4, sl
900011fe:	3408      	adds	r4, #8
    if (reader != 0)
90001200:	f1b9 0f00 	cmp.w	r9, #0
90001204:	d015      	beq.n	90001232 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x122>
        if (length > aviBufferLength)
90001206:	6bab      	ldr	r3, [r5, #56]	; 0x38
90001208:	2b0b      	cmp	r3, #11
9000120a:	f240 8193 	bls.w	90001534 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x424>
        reader->seek(offset);
9000120e:	f8d9 3000 	ldr.w	r3, [r9]
90001212:	4621      	mov	r1, r4
90001214:	4648      	mov	r0, r9
90001216:	68db      	ldr	r3, [r3, #12]
90001218:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
9000121a:	6b28      	ldr	r0, [r5, #48]	; 0x30
9000121c:	220c      	movs	r2, #12
9000121e:	6b69      	ldr	r1, [r5, #52]	; 0x34
90001220:	6803      	ldr	r3, [r0, #0]
90001222:	691b      	ldr	r3, [r3, #16]
90001224:	4798      	blx	r3
90001226:	b910      	cbnz	r0, 9000122e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x11e>
            lastError = AVI_ERROR_EOF_REACHED;
90001228:	230d      	movs	r3, #13
9000122a:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
        aviBufferStartOffset = offset;
9000122e:	6b2e      	ldr	r6, [r5, #48]	; 0x30
90001230:	63ec      	str	r4, [r5, #60]	; 0x3c
        return aviBuffer;
90001232:	f895 9040 	ldrb.w	r9, [r5, #64]	; 0x40
    return strncmp(src, str, num);
90001236:	4f8e      	ldr	r7, [pc, #568]	; (90001470 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x360>)
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001238:	f104 0808 	add.w	r8, r4, #8
    if (reader != 0)
9000123c:	2e00      	cmp	r6, #0
9000123e:	d041      	beq.n	900012c4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1b4>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001240:	6beb      	ldr	r3, [r5, #60]	; 0x3c
    return strncmp(src, str, num);
90001242:	2204      	movs	r2, #4
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001244:	6b68      	ldr	r0, [r5, #52]	; 0x34
    return strncmp(src, str, num);
90001246:	4639      	mov	r1, r7
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001248:	eba8 0303 	sub.w	r3, r8, r3
9000124c:	4418      	add	r0, r3
    return strncmp(src, str, num);
9000124e:	f026 ff25 	bl	9002809c <strncmp>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001252:	2800      	cmp	r0, #0
90001254:	d03e      	beq.n	900012d4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1c4>
90001256:	f1b9 0f00 	cmp.w	r9, #0
9000125a:	d13e      	bne.n	900012da <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1ca>
9000125c:	6aab      	ldr	r3, [r5, #40]	; 0x28
9000125e:	42a3      	cmp	r3, r4
90001260:	f240 80a7 	bls.w	900013b2 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x2a2>
        const uint32_t listSize = getU32(listOffset + 4) + 8;
90001264:	3404      	adds	r4, #4
    if (reader != 0)
90001266:	2e00      	cmp	r6, #0
90001268:	d046      	beq.n	900012f8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1e8>
        const uint32_t index = offset - aviBufferStartOffset;
9000126a:	6bea      	ldr	r2, [r5, #60]	; 0x3c
        if (length > aviBufferLength)
9000126c:	e9d5 130d 	ldrd	r1, r3, [r5, #52]	; 0x34
        const uint32_t index = offset - aviBufferStartOffset;
90001270:	1aa4      	subs	r4, r4, r2
        if (length > aviBufferLength)
90001272:	2b0b      	cmp	r3, #11
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001274:	eb01 0204 	add.w	r2, r1, r4
90001278:	5d09      	ldrb	r1, [r1, r4]
9000127a:	7894      	ldrb	r4, [r2, #2]
9000127c:	7850      	ldrb	r0, [r2, #1]
9000127e:	ea4f 4404 	mov.w	r4, r4, lsl #16
90001282:	78d2      	ldrb	r2, [r2, #3]
90001284:	ea44 2400 	orr.w	r4, r4, r0, lsl #8
90001288:	ea44 0401 	orr.w	r4, r4, r1
9000128c:	ea44 6402 	orr.w	r4, r4, r2, lsl #24
        listOffset += listSize;
90001290:	4444      	add	r4, r8
        if (length > aviBufferLength)
90001292:	f240 814f 	bls.w	90001534 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x424>
        reader->seek(offset);
90001296:	6833      	ldr	r3, [r6, #0]
90001298:	4621      	mov	r1, r4
9000129a:	4630      	mov	r0, r6
9000129c:	68db      	ldr	r3, [r3, #12]
9000129e:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900012a0:	6b28      	ldr	r0, [r5, #48]	; 0x30
900012a2:	220c      	movs	r2, #12
900012a4:	6b69      	ldr	r1, [r5, #52]	; 0x34
900012a6:	6803      	ldr	r3, [r0, #0]
900012a8:	691b      	ldr	r3, [r3, #16]
900012aa:	4798      	blx	r3
900012ac:	b910      	cbnz	r0, 900012b4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1a4>
            lastError = AVI_ERROR_EOF_REACHED;
900012ae:	230d      	movs	r3, #13
900012b0:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
        aviBufferStartOffset = offset;
900012b4:	6b2e      	ldr	r6, [r5, #48]	; 0x30
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
900012b6:	f104 0808 	add.w	r8, r4, #8
900012ba:	f895 9040 	ldrb.w	r9, [r5, #64]	; 0x40
        aviBufferStartOffset = offset;
900012be:	63ec      	str	r4, [r5, #60]	; 0x3c
    if (reader != 0)
900012c0:	2e00      	cmp	r6, #0
900012c2:	d1bd      	bne.n	90001240 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x130>
        src = (const char*)movieData + offset;
900012c4:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
    return strncmp(src, str, num);
900012c6:	2204      	movs	r2, #4
900012c8:	4639      	mov	r1, r7
        src = (const char*)movieData + offset;
900012ca:	4440      	add	r0, r8
    return strncmp(src, str, num);
900012cc:	f026 fee6 	bl	9002809c <strncmp>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
900012d0:	2800      	cmp	r0, #0
900012d2:	d1c0      	bne.n	90001256 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x146>
    if (lastError != AVI_NO_ERROR)
900012d4:	f1b9 0f00 	cmp.w	r9, #0
900012d8:	d06b      	beq.n	900013b2 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x2a2>
        lastError = AVI_ERROR_MOVI_NOT_FOUND;
900012da:	230a      	movs	r3, #10
900012dc:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
}
900012e0:	b003      	add	sp, #12
900012e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
            lastError = AVI_ERROR_EOF_REACHED;
900012e6:	230d      	movs	r3, #13
900012e8:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
900012ec:	e72d      	b.n	9000114a <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x3a>
    offset += 4;
900012ee:	f107 0018 	add.w	r0, r7, #24
    bool foundFrame = true;
900012f2:	f04f 0b01 	mov.w	fp, #1
900012f6:	e776      	b.n	900011e6 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xd6>
        listOffset += listSize;
900012f8:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
900012fa:	591c      	ldr	r4, [r3, r4]
900012fc:	4444      	add	r4, r8
    return movieData + offset;
900012fe:	e79b      	b.n	90001238 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x128>
    if (foundFrame)
90001300:	f1bb 0f00 	cmp.w	fp, #0
90001304:	f43f af7a 	beq.w	900011fc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xec>
        offset += 8; /* skip fourcc and cb in AVIMAINHEADER */
90001308:	f107 0120 	add.w	r1, r7, #32
    if (reader != 0)
9000130c:	f1b9 0f00 	cmp.w	r9, #0
90001310:	f000 80f4 	beq.w	900014fc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x3ec>
        const uint32_t index = offset - aviBufferStartOffset;
90001314:	6beb      	ldr	r3, [r5, #60]	; 0x3c
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001316:	6b6a      	ldr	r2, [r5, #52]	; 0x34
        const uint32_t index = offset - aviBufferStartOffset;
90001318:	1ac9      	subs	r1, r1, r3
9000131a:	f1c3 0030 	rsb	r0, r3, #48	; 0x30
        videoInfo.ms_between_frames = getU32(offset) / 1000;
9000131e:	f8df c158 	ldr.w	ip, [pc, #344]	; 90001478 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x368>
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001322:	f812 8001 	ldrb.w	r8, [r2, r1]
90001326:	eb02 0e01 	add.w	lr, r2, r1
        const uint32_t index = offset - aviBufferStartOffset;
9000132a:	f1c3 0140 	rsb	r1, r3, #64	; 0x40
9000132e:	f1c3 0344 	rsb	r3, r3, #68	; 0x44
90001332:	4438      	add	r0, r7
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001334:	f89e b001 	ldrb.w	fp, [lr, #1]
        const uint32_t index = offset - aviBufferStartOffset;
90001338:	4439      	add	r1, r7
9000133a:	441f      	add	r7, r3
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000133c:	f89e 3002 	ldrb.w	r3, [lr, #2]
90001340:	f89e e003 	ldrb.w	lr, [lr, #3]
90001344:	041b      	lsls	r3, r3, #16
90001346:	ea43 230b 	orr.w	r3, r3, fp, lsl #8
9000134a:	ea43 0308 	orr.w	r3, r3, r8
9000134e:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
        videoInfo.ms_between_frames = getU32(offset) / 1000;
90001352:	fbac c303 	umull	ip, r3, ip, r3
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001356:	eb02 0c00 	add.w	ip, r2, r0
        videoInfo.ms_between_frames = getU32(offset) / 1000;
9000135a:	099b      	lsrs	r3, r3, #6
9000135c:	606b      	str	r3, [r5, #4]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000135e:	f89c 3002 	ldrb.w	r3, [ip, #2]
90001362:	f89c 8001 	ldrb.w	r8, [ip, #1]
90001366:	041b      	lsls	r3, r3, #16
90001368:	f812 e000 	ldrb.w	lr, [r2, r0]
9000136c:	f89c c003 	ldrb.w	ip, [ip, #3]
90001370:	1850      	adds	r0, r2, r1
90001372:	ea43 2308 	orr.w	r3, r3, r8, lsl #8
90001376:	ea43 030e 	orr.w	r3, r3, lr
9000137a:	ea43 630c 	orr.w	r3, r3, ip, lsl #24
        videoInfo.number_of_frames = getU32(offset + 16);
9000137e:	60ab      	str	r3, [r5, #8]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001380:	7883      	ldrb	r3, [r0, #2]
90001382:	f890 c001 	ldrb.w	ip, [r0, #1]
90001386:	041b      	lsls	r3, r3, #16
90001388:	5c51      	ldrb	r1, [r2, r1]
9000138a:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
9000138e:	430b      	orrs	r3, r1
90001390:	78c1      	ldrb	r1, [r0, #3]
90001392:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
90001396:	19d1      	adds	r1, r2, r7
        videoInfo.frame_width = getU32(offset + 32);
90001398:	60eb      	str	r3, [r5, #12]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000139a:	788b      	ldrb	r3, [r1, #2]
9000139c:	7848      	ldrb	r0, [r1, #1]
9000139e:	041b      	lsls	r3, r3, #16
900013a0:	5dd2      	ldrb	r2, [r2, r7]
900013a2:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
900013a6:	4313      	orrs	r3, r2
900013a8:	78ca      	ldrb	r2, [r1, #3]
900013aa:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
        videoInfo.frame_height = getU32(offset + 36);
900013ae:	612b      	str	r3, [r5, #16]
900013b0:	e724      	b.n	900011fc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xec>
    currentMovieOffset = listOffset + 8 + 4; /* skip LIST and 'movi' */
900013b2:	f104 030c 	add.w	r3, r4, #12
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
900013b6:	3404      	adds	r4, #4
    currentMovieOffset = listOffset + 8 + 4; /* skip LIST and 'movi' */
900013b8:	61ab      	str	r3, [r5, #24]
    if (reader != 0)
900013ba:	2e00      	cmp	r6, #0
900013bc:	f000 80b2 	beq.w	90001524 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x414>
        const uint32_t index = offset - aviBufferStartOffset;
900013c0:	6beb      	ldr	r3, [r5, #60]	; 0x3c
900013c2:	1ae4      	subs	r4, r4, r3
        if (length > aviBufferLength)
900013c4:	e9d5 120d 	ldrd	r1, r2, [r5, #52]	; 0x34
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900013c8:	f104 0c02 	add.w	ip, r4, #2
900013cc:	1c67      	adds	r7, r4, #1
900013ce:	f811 e004 	ldrb.w	lr, [r1, r4]
900013d2:	1ce0      	adds	r0, r4, #3
900013d4:	f811 300c 	ldrb.w	r3, [r1, ip]
        if (length > aviBufferLength)
900013d8:	2a03      	cmp	r2, #3
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900013da:	f811 9007 	ldrb.w	r9, [r1, r7]
900013de:	ea4f 4303 	mov.w	r3, r3, lsl #16
900013e2:	ea43 2309 	orr.w	r3, r3, r9, lsl #8
900013e6:	ea43 030e 	orr.w	r3, r3, lr
900013ea:	f811 e000 	ldrb.w	lr, [r1, r0]
900013ee:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
900013f2:	4443      	add	r3, r8
900013f4:	626b      	str	r3, [r5, #36]	; 0x24
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900013f6:	f811 300c 	ldrb.w	r3, [r1, ip]
900013fa:	f811 c007 	ldrb.w	ip, [r1, r7]
900013fe:	5d0f      	ldrb	r7, [r1, r4]
90001400:	ea4f 4403 	mov.w	r4, r3, lsl #16
90001404:	5c09      	ldrb	r1, [r1, r0]
90001406:	ea44 240c 	orr.w	r4, r4, ip, lsl #8
9000140a:	ea44 0407 	orr.w	r4, r4, r7
9000140e:	ea44 6401 	orr.w	r4, r4, r1, lsl #24
    listOffset += listSize;
90001412:	4444      	add	r4, r8
        if (length > aviBufferLength)
90001414:	f240 808e 	bls.w	90001534 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x424>
        reader->seek(offset);
90001418:	6833      	ldr	r3, [r6, #0]
9000141a:	4621      	mov	r1, r4
9000141c:	4630      	mov	r0, r6
9000141e:	68db      	ldr	r3, [r3, #12]
90001420:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001422:	6b28      	ldr	r0, [r5, #48]	; 0x30
90001424:	2204      	movs	r2, #4
90001426:	6b69      	ldr	r1, [r5, #52]	; 0x34
90001428:	6803      	ldr	r3, [r0, #0]
9000142a:	691b      	ldr	r3, [r3, #16]
9000142c:	4798      	blx	r3
9000142e:	2800      	cmp	r0, #0
90001430:	d05a      	beq.n	900014e8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x3d8>
    if (reader != 0)
90001432:	6b2b      	ldr	r3, [r5, #48]	; 0x30
        aviBufferStartOffset = offset;
90001434:	63ec      	str	r4, [r5, #60]	; 0x3c
    if (reader != 0)
90001436:	2b00      	cmp	r3, #0
90001438:	f000 80aa 	beq.w	90001590 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x480>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
9000143c:	6b68      	ldr	r0, [r5, #52]	; 0x34
    return strncmp(src, str, num);
9000143e:	2204      	movs	r2, #4
90001440:	490c      	ldr	r1, [pc, #48]	; (90001474 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x364>)
90001442:	f026 fe2b 	bl	9002809c <strncmp>
    if (!compare(listOffset, "idx1", 4))
90001446:	2800      	cmp	r0, #0
90001448:	d166      	bne.n	90001518 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x408>
    frameNumber = 1; /* next frame number is 1 */
9000144a:	2201      	movs	r2, #1
    firstFrameOffset = currentMovieOffset;
9000144c:	69ab      	ldr	r3, [r5, #24]
        indexOffset = listOffset;
9000144e:	61ec      	str	r4, [r5, #28]
    frameNumber = 1; /* next frame number is 1 */
90001450:	616a      	str	r2, [r5, #20]
    firstFrameOffset = currentMovieOffset;
90001452:	622b      	str	r3, [r5, #32]
}
90001454:	b003      	add	sp, #12
90001456:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9000145a:	bf00      	nop
9000145c:	900290b0 	.word	0x900290b0
90001460:	90029168 	.word	0x90029168
90001464:	90029160 	.word	0x90029160
90001468:	90029158 	.word	0x90029158
9000146c:	90029140 	.word	0x90029140
90001470:	90029148 	.word	0x90029148
90001474:	90029150 	.word	0x90029150
90001478:	10624dd3 	.word	0x10624dd3
    if (compare(currentMovieOffset, "RIFF", 4))
9000147c:	4637      	mov	r7, r6
        src = (const char*)movieData + offset;
9000147e:	f8d5 802c 	ldr.w	r8, [r5, #44]	; 0x2c
    return strncmp(src, str, num);
90001482:	2204      	movs	r2, #4
90001484:	4944      	ldr	r1, [pc, #272]	; (90001598 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x488>)
        src = (const char*)movieData + offset;
90001486:	eb08 0407 	add.w	r4, r8, r7
    return strncmp(src, str, num);
9000148a:	4620      	mov	r0, r4
9000148c:	f026 fe06 	bl	9002809c <strncmp>
    if (compare(currentMovieOffset, "RIFF", 4))
90001490:	2800      	cmp	r0, #0
90001492:	d158      	bne.n	90001546 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x436>
    currentMovieOffset += 8;
90001494:	f107 0008 	add.w	r0, r7, #8
    return strncmp(src, str, num);
90001498:	2204      	movs	r2, #4
9000149a:	4940      	ldr	r1, [pc, #256]	; (9000159c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x48c>)
    currentMovieOffset += 8;
9000149c:	61a8      	str	r0, [r5, #24]
    return strncmp(src, str, num);
9000149e:	4440      	add	r0, r8
900014a0:	f026 fdfc 	bl	9002809c <strncmp>
    if (compare(currentMovieOffset, "AVI ", 4))
900014a4:	2800      	cmp	r0, #0
900014a6:	d169      	bne.n	9000157c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x46c>
    currentMovieOffset += 4;
900014a8:	f107 0a0c 	add.w	sl, r7, #12
    return strncmp(src, str, num);
900014ac:	2204      	movs	r2, #4
900014ae:	493c      	ldr	r1, [pc, #240]	; (900015a0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x490>)
900014b0:	eb08 000a 	add.w	r0, r8, sl
    currentMovieOffset += 4;
900014b4:	f8c5 a018 	str.w	sl, [r5, #24]
    return strncmp(src, str, num);
900014b8:	f026 fdf0 	bl	9002809c <strncmp>
    if (compare(currentMovieOffset, "LIST", 4))
900014bc:	4683      	mov	fp, r0
900014be:	2800      	cmp	r0, #0
900014c0:	d152      	bne.n	90001568 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x458>
        return d[0] | (d[1] << 8) | (d[2] << 16) | (d[3] << 24);
900014c2:	6924      	ldr	r4, [r4, #16]
    assert(aviListSize);
900014c4:	2c00      	cmp	r4, #0
900014c6:	d048      	beq.n	9000155a <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x44a>
    uint32_t offset =  currentMovieOffset + 8;
900014c8:	f107 0014 	add.w	r0, r7, #20
    return strncmp(src, str, num);
900014cc:	2204      	movs	r2, #4
900014ce:	4935      	ldr	r1, [pc, #212]	; (900015a4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x494>)
900014d0:	4440      	add	r0, r8
900014d2:	f026 fde3 	bl	9002809c <strncmp>
    if (compare(offset, "hdrl", 4))
900014d6:	b958      	cbnz	r0, 900014f0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x3e0>
    offset += 4;
900014d8:	f107 0018 	add.w	r0, r7, #24
    bool foundFrame = true;
900014dc:	f04f 0b01 	mov.w	fp, #1
        src = (const char*)movieData + offset;
900014e0:	4440      	add	r0, r8
900014e2:	f04f 0900 	mov.w	r9, #0
900014e6:	e67f      	b.n	900011e8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xd8>
            lastError = AVI_ERROR_EOF_REACHED;
900014e8:	230d      	movs	r3, #13
900014ea:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
900014ee:	e7a0      	b.n	90001432 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x322>
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
900014f0:	2306      	movs	r3, #6
    offset += 4;
900014f2:	f107 0018 	add.w	r0, r7, #24
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
900014f6:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
    if (reader != 0)
900014fa:	e7f1      	b.n	900014e0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x3d0>
900014fc:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
        videoInfo.ms_between_frames = getU32(offset) / 1000;
900014fe:	585a      	ldr	r2, [r3, r1]
90001500:	443b      	add	r3, r7
90001502:	4929      	ldr	r1, [pc, #164]	; (900015a8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x498>)
90001504:	fba1 1202 	umull	r1, r2, r1, r2
90001508:	0992      	lsrs	r2, r2, #6
9000150a:	606a      	str	r2, [r5, #4]
        return d[0] | (d[1] << 8) | (d[2] << 16) | (d[3] << 24);
9000150c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
        videoInfo.number_of_frames = getU32(offset + 16);
9000150e:	60aa      	str	r2, [r5, #8]
        return d[0] | (d[1] << 8) | (d[2] << 16) | (d[3] << 24);
90001510:	6c1a      	ldr	r2, [r3, #64]	; 0x40
        videoInfo.frame_width = getU32(offset + 32);
90001512:	60ea      	str	r2, [r5, #12]
        return d[0] | (d[1] << 8) | (d[2] << 16) | (d[3] << 24);
90001514:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90001516:	e74a      	b.n	900013ae <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x29e>
        lastError = AVI_ERROR_IDX1_NOT_FOUND;
90001518:	230b      	movs	r3, #11
9000151a:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
}
9000151e:	b003      	add	sp, #12
90001520:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90001524:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
90001526:	5903      	ldr	r3, [r0, r4]
90001528:	4443      	add	r3, r8
9000152a:	626b      	str	r3, [r5, #36]	; 0x24
    listOffset += listSize;
9000152c:	5904      	ldr	r4, [r0, r4]
9000152e:	4444      	add	r4, r8
        src = (const char*)movieData + offset;
90001530:	4420      	add	r0, r4
90001532:	e784      	b.n	9000143e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x32e>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001534:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90001536:	4b1d      	ldr	r3, [pc, #116]	; (900015ac <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x49c>)
90001538:	4a1d      	ldr	r2, [pc, #116]	; (900015b0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4a0>)
9000153a:	2197      	movs	r1, #151	; 0x97
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
9000153c:	f885 0040 	strb.w	r0, [r5, #64]	; 0x40
            assert(!"Buffer to small");
90001540:	481c      	ldr	r0, [pc, #112]	; (900015b4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4a4>)
90001542:	f026 fb1b 	bl	90027b7c <__assert_func>
        lastError = AVI_ERROR_NOT_RIFF;
90001546:	2003      	movs	r0, #3
        assert(!"RIFF header not found");
90001548:	4b1b      	ldr	r3, [pc, #108]	; (900015b8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4a8>)
9000154a:	4a1c      	ldr	r2, [pc, #112]	; (900015bc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4ac>)
9000154c:	f240 1125 	movw	r1, #293	; 0x125
        lastError = AVI_ERROR_NOT_RIFF;
90001550:	f885 0040 	strb.w	r0, [r5, #64]	; 0x40
        assert(!"RIFF header not found");
90001554:	4817      	ldr	r0, [pc, #92]	; (900015b4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4a4>)
90001556:	f026 fb11 	bl	90027b7c <__assert_func>
    assert(aviListSize);
9000155a:	4b19      	ldr	r3, [pc, #100]	; (900015c0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4b0>)
9000155c:	f44f 719d 	mov.w	r1, #314	; 0x13a
90001560:	4a16      	ldr	r2, [pc, #88]	; (900015bc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4ac>)
90001562:	4814      	ldr	r0, [pc, #80]	; (900015b4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4a4>)
90001564:	f026 fb0a 	bl	90027b7c <__assert_func>
        lastError = AVI_ERROR_AVI_LIST_NOT_FOUND;
90001568:	2005      	movs	r0, #5
        assert(!"AVI LIST not found");
9000156a:	4b16      	ldr	r3, [pc, #88]	; (900015c4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4b4>)
9000156c:	4a13      	ldr	r2, [pc, #76]	; (900015bc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4ac>)
9000156e:	f44f 719a 	mov.w	r1, #308	; 0x134
        lastError = AVI_ERROR_AVI_LIST_NOT_FOUND;
90001572:	f885 0040 	strb.w	r0, [r5, #64]	; 0x40
        assert(!"AVI LIST not found");
90001576:	480f      	ldr	r0, [pc, #60]	; (900015b4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4a4>)
90001578:	f026 fb00 	bl	90027b7c <__assert_func>
        lastError = AVI_ERROR_AVI_HEADER_NOT_FOUND;
9000157c:	2004      	movs	r0, #4
        assert(!"AVI header not found");
9000157e:	4b12      	ldr	r3, [pc, #72]	; (900015c8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4b8>)
90001580:	4a0e      	ldr	r2, [pc, #56]	; (900015bc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4ac>)
90001582:	f240 112d 	movw	r1, #301	; 0x12d
        lastError = AVI_ERROR_AVI_HEADER_NOT_FOUND;
90001586:	f885 0040 	strb.w	r0, [r5, #64]	; 0x40
        assert(!"AVI header not found");
9000158a:	480a      	ldr	r0, [pc, #40]	; (900015b4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4a4>)
9000158c:	f026 faf6 	bl	90027b7c <__assert_func>
        src = (const char*)movieData + offset;
90001590:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
90001592:	4420      	add	r0, r4
90001594:	e753      	b.n	9000143e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x32e>
90001596:	bf00      	nop
90001598:	900290b0 	.word	0x900290b0
9000159c:	90029168 	.word	0x90029168
900015a0:	90029160 	.word	0x90029160
900015a4:	90029158 	.word	0x90029158
900015a8:	10624dd3 	.word	0x10624dd3
900015ac:	90028f7c 	.word	0x90028f7c
900015b0:	90028f90 	.word	0x90028f90
900015b4:	90028f2c 	.word	0x90028f2c
900015b8:	900290b8 	.word	0x900290b8
900015bc:	900290d4 	.word	0x900290d4
900015c0:	90029134 	.word	0x90029134
900015c4:	9002911c 	.word	0x9002911c
900015c8:	90029104 	.word	0x90029104

900015cc <_ZN20HardwareMJPEGDecoder12setVideoDataEPKhm>:
{
900015cc:	b410      	push	{r4}
    reader = 0; /* not using reader */
900015ce:	2400      	movs	r4, #0
    movieLength = length;
900015d0:	e9c0 210a 	strd	r2, r1, [r0, #40]	; 0x28
    reader = 0; /* not using reader */
900015d4:	6304      	str	r4, [r0, #48]	; 0x30
}
900015d6:	f85d 4b04 	ldr.w	r4, [sp], #4
    readVideoHeader();
900015da:	f7ff bd99 	b.w	90001110 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>
900015de:	bf00      	nop

900015e0 <_ZN20HardwareMJPEGDecoder12setVideoDataERN8touchgfx15VideoDataReaderE>:
{
900015e0:	b510      	push	{r4, lr}
    movieLength = reader.getDataLength();
900015e2:	680b      	ldr	r3, [r1, #0]
{
900015e4:	4604      	mov	r4, r0
    movieData = 0;
900015e6:	2200      	movs	r2, #0
    movieLength = reader.getDataLength();
900015e8:	4608      	mov	r0, r1
900015ea:	689b      	ldr	r3, [r3, #8]
    movieData = 0;
900015ec:	e9c4 210b 	strd	r2, r1, [r4, #44]	; 0x2c
    movieLength = reader.getDataLength();
900015f0:	4798      	blx	r3
900015f2:	4603      	mov	r3, r0
    readVideoHeader();
900015f4:	4620      	mov	r0, r4
    movieLength = reader.getDataLength();
900015f6:	62a3      	str	r3, [r4, #40]	; 0x28
}
900015f8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    readVideoHeader();
900015fc:	f7ff bd88 	b.w	90001110 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>

90001600 <HAL_JPEG_InfoReadyCallback>:
        if (pInfo->ChromaSubsampling == JPEG_420_SUBSAMPLING)
90001600:	684b      	ldr	r3, [r1, #4]
90001602:	2b01      	cmp	r3, #1
90001604:	d015      	beq.n	90001632 <HAL_JPEG_InfoReadyCallback+0x32>
            if (pInfo->ChromaSubsampling == JPEG_422_SUBSAMPLING)
90001606:	2b02      	cmp	r3, #2
90001608:	d00b      	beq.n	90001622 <HAL_JPEG_InfoReadyCallback+0x22>
            if (pInfo->ChromaSubsampling == JPEG_444_SUBSAMPLING)
9000160a:	b94b      	cbnz	r3, 90001620 <HAL_JPEG_InfoReadyCallback+0x20>
                if ((pInfo->ImageWidth % 8) != 0)
9000160c:	68cb      	ldr	r3, [r1, #12]
9000160e:	0758      	lsls	r0, r3, #29
90001610:	d124      	bne.n	9000165c <HAL_JPEG_InfoReadyCallback+0x5c>
                if ((pInfo->ImageHeight % 8) != 0)
90001612:	688b      	ldr	r3, [r1, #8]
90001614:	075a      	lsls	r2, r3, #29
90001616:	d003      	beq.n	90001620 <HAL_JPEG_InfoReadyCallback+0x20>
                    pInfo->ImageHeight += (8 - (pInfo->ImageHeight % 8));
90001618:	f023 0307 	bic.w	r3, r3, #7
9000161c:	3308      	adds	r3, #8
9000161e:	608b      	str	r3, [r1, #8]
    }
90001620:	4770      	bx	lr
                if ((pInfo->ImageWidth % 16) != 0)
90001622:	68cb      	ldr	r3, [r1, #12]
90001624:	071a      	lsls	r2, r3, #28
90001626:	d0f4      	beq.n	90001612 <HAL_JPEG_InfoReadyCallback+0x12>
                    pInfo->ImageWidth += (16 - (pInfo->ImageWidth % 16));
90001628:	f023 030f 	bic.w	r3, r3, #15
9000162c:	3310      	adds	r3, #16
9000162e:	60cb      	str	r3, [r1, #12]
90001630:	e7ef      	b.n	90001612 <HAL_JPEG_InfoReadyCallback+0x12>
            if ((pInfo->ImageWidth % 16) != 0)
90001632:	68cb      	ldr	r3, [r1, #12]
90001634:	071a      	lsls	r2, r3, #28
90001636:	d003      	beq.n	90001640 <HAL_JPEG_InfoReadyCallback+0x40>
                pInfo->ImageWidth += (16 - (pInfo->ImageWidth % 16));
90001638:	f023 030f 	bic.w	r3, r3, #15
9000163c:	3310      	adds	r3, #16
9000163e:	60cb      	str	r3, [r1, #12]
            if ((pInfo->ImageHeight % 16) != 0)
90001640:	688a      	ldr	r2, [r1, #8]
90001642:	0710      	lsls	r0, r2, #28
90001644:	d003      	beq.n	9000164e <HAL_JPEG_InfoReadyCallback+0x4e>
                pInfo->ImageHeight += (16 - (pInfo->ImageHeight % 16));
90001646:	f022 020f 	bic.w	r2, r2, #15
9000164a:	3210      	adds	r2, #16
9000164c:	608a      	str	r2, [r1, #8]
            hMCU = (pInfo->ImageWidth / MCU_WIDTH_PIXELS);
9000164e:	091b      	lsrs	r3, r3, #4
            MCU_TotalNb = (hMCU * vMCU);
90001650:	4905      	ldr	r1, [pc, #20]	; (90001668 <HAL_JPEG_InfoReadyCallback+0x68>)
            vMCU = (pInfo->ImageHeight / MCU_HEIGHT_PIXELS);
90001652:	0912      	lsrs	r2, r2, #4
            MCU_TotalNb = (hMCU * vMCU);
90001654:	fb02 f303 	mul.w	r3, r2, r3
90001658:	600b      	str	r3, [r1, #0]
9000165a:	4770      	bx	lr
                    pInfo->ImageWidth += (8 - (pInfo->ImageWidth % 8));
9000165c:	f023 0307 	bic.w	r3, r3, #7
90001660:	3308      	adds	r3, #8
90001662:	60cb      	str	r3, [r1, #12]
90001664:	e7d5      	b.n	90001612 <HAL_JPEG_InfoReadyCallback+0x12>
90001666:	bf00      	nop
90001668:	24005bac 	.word	0x24005bac

9000166c <HAL_JPEG_GetDataCallback>:
    {
9000166c:	b410      	push	{r4}
        JPEG_InputImageIndex += NbDecodedData;
9000166e:	4c0c      	ldr	r4, [pc, #48]	; (900016a0 <HAL_JPEG_GetDataCallback+0x34>)
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001670:	4a0c      	ldr	r2, [pc, #48]	; (900016a4 <HAL_JPEG_GetDataCallback+0x38>)
        JPEG_InputImageIndex += NbDecodedData;
90001672:	6823      	ldr	r3, [r4, #0]
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001674:	6812      	ldr	r2, [r2, #0]
        JPEG_InputImageIndex += NbDecodedData;
90001676:	440b      	add	r3, r1
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001678:	4293      	cmp	r3, r2
        JPEG_InputImageIndex += NbDecodedData;
9000167a:	6023      	str	r3, [r4, #0]
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
9000167c:	d302      	bcc.n	90001684 <HAL_JPEG_GetDataCallback+0x18>
    }
9000167e:	f85d 4b04 	ldr.w	r4, [sp], #4
90001682:	4770      	bx	lr
            uint32_t inDataLength = JPEG_InputImageSize_Bytes - JPEG_InputImageIndex;
90001684:	1ad2      	subs	r2, r2, r3
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
90001686:	4b08      	ldr	r3, [pc, #32]	; (900016a8 <HAL_JPEG_GetDataCallback+0x3c>)
90001688:	681c      	ldr	r4, [r3, #0]
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
9000168a:	f5b2 4f50 	cmp.w	r2, #53248	; 0xd000
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
9000168e:	4421      	add	r1, r4
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
90001690:	bf28      	it	cs
90001692:	f44f 4250 	movcs.w	r2, #53248	; 0xd000
    }
90001696:	f85d 4b04 	ldr.w	r4, [sp], #4
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
9000169a:	6019      	str	r1, [r3, #0]
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
9000169c:	f009 bac8 	b.w	9000ac30 <HAL_JPEG_ConfigInputBuffer>
900016a0:	24005bc0 	.word	0x24005bc0
900016a4:	24005bcc 	.word	0x24005bcc
900016a8:	24005bc8 	.word	0x24005bc8

900016ac <HAL_JPEG_DataReadyCallback>:
    {
900016ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
900016ae:	4c22      	ldr	r4, [pc, #136]	; (90001738 <HAL_JPEG_DataReadyCallback+0x8c>)
    {
900016b0:	4606      	mov	r6, r0
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
900016b2:	4d22      	ldr	r5, [pc, #136]	; (9000173c <HAL_JPEG_DataReadyCallback+0x90>)
900016b4:	6823      	ldr	r3, [r4, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
900016b6:	6820      	ldr	r0, [r4, #0]
        const uint32_t MCU = MCU_BlockIndex;
900016b8:	4921      	ldr	r1, [pc, #132]	; (90001740 <HAL_JPEG_DataReadyCallback+0x94>)
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
900016ba:	011b      	lsls	r3, r3, #4
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
900016bc:	eb05 1000 	add.w	r0, r5, r0, lsl #4
        MCU_BlockIndex += JPEG_ConvertorParams.MCU_pr_line;
900016c0:	4f20      	ldr	r7, [pc, #128]	; (90001744 <HAL_JPEG_DataReadyCallback+0x98>)
        const uint32_t MCU = MCU_BlockIndex;
900016c2:	f8d1 c000 	ldr.w	ip, [r1]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
900016c6:	6082      	str	r2, [r0, #8]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].MCU_index = MCU;
900016c8:	6820      	ldr	r0, [r4, #0]
        MCU_BlockIndex += JPEG_ConvertorParams.MCU_pr_line;
900016ca:	68fa      	ldr	r2, [r7, #12]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].MCU_index = MCU;
900016cc:	eb05 1000 	add.w	r0, r5, r0, lsl #4
900016d0:	f8c0 c00c 	str.w	ip, [r0, #12]
        MCU_BlockIndex += JPEG_ConvertorParams.MCU_pr_line;
900016d4:	6808      	ldr	r0, [r1, #0]
900016d6:	4410      	add	r0, r2
900016d8:	6008      	str	r0, [r1, #0]
        JPEG_OUT_Write_BufferIndex++;
900016da:	6821      	ldr	r1, [r4, #0]
900016dc:	3101      	adds	r1, #1
900016de:	6021      	str	r1, [r4, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
900016e0:	2101      	movs	r1, #1
900016e2:	54e9      	strb	r1, [r5, r3]
        if (JPEG_OUT_Write_BufferIndex >= NB_OUTPUT_DATA_BUFFERS)
900016e4:	6823      	ldr	r3, [r4, #0]
900016e6:	428b      	cmp	r3, r1
900016e8:	d901      	bls.n	900016ee <HAL_JPEG_DataReadyCallback+0x42>
            JPEG_OUT_Write_BufferIndex = 0;
900016ea:	2300      	movs	r3, #0
900016ec:	6023      	str	r3, [r4, #0]
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State != JPEG_BUFFER_EMPTY)
900016ee:	6823      	ldr	r3, [r4, #0]
900016f0:	011b      	lsls	r3, r3, #4
900016f2:	5ceb      	ldrb	r3, [r5, r3]
900016f4:	b983      	cbnz	r3, 90001718 <HAL_JPEG_DataReadyCallback+0x6c>
        HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
900016f6:	6823      	ldr	r3, [r4, #0]
900016f8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900016fc:	4630      	mov	r0, r6
900016fe:	eb05 1503 	add.w	r5, r5, r3, lsl #4
90001702:	01d2      	lsls	r2, r2, #7
90001704:	6869      	ldr	r1, [r5, #4]
90001706:	f009 fa97 	bl	9000ac38 <HAL_JPEG_ConfigOutputBuffer>
        if (!DMA2D_reference->isDMARunning() && !DMA2D_reference->getReserved())
9000170a:	4b0f      	ldr	r3, [pc, #60]	; (90001748 <HAL_JPEG_DataReadyCallback+0x9c>)
9000170c:	681b      	ldr	r3, [r3, #0]
9000170e:	7a1a      	ldrb	r2, [r3, #8]
90001710:	b90a      	cbnz	r2, 90001716 <HAL_JPEG_DataReadyCallback+0x6a>
        return isReserved;
90001712:	7a9b      	ldrb	r3, [r3, #10]
90001714:	b14b      	cbz	r3, 9000172a <HAL_JPEG_DataReadyCallback+0x7e>
    }
90001716:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
            HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90001718:	2102      	movs	r1, #2
9000171a:	4630      	mov	r0, r6
9000171c:	f009 fa50 	bl	9000abc0 <HAL_JPEG_Pause>
            JPEG_output_is_paused = 1;
90001720:	4b0a      	ldr	r3, [pc, #40]	; (9000174c <HAL_JPEG_DataReadyCallback+0xa0>)
90001722:	2101      	movs	r1, #1
        HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001724:	68fa      	ldr	r2, [r7, #12]
            JPEG_output_is_paused = 1;
90001726:	6019      	str	r1, [r3, #0]
90001728:	e7e5      	b.n	900016f6 <HAL_JPEG_DataReadyCallback+0x4a>
            SEM_POST(semDecodingDone);
9000172a:	4b09      	ldr	r3, [pc, #36]	; (90001750 <HAL_JPEG_DataReadyCallback+0xa4>)
9000172c:	6818      	ldr	r0, [r3, #0]
    }
9000172e:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
            SEM_POST(semDecodingDone);
90001732:	f00c be9d 	b.w	9000e470 <osSemaphoreRelease>
90001736:	bf00      	nop
90001738:	24005bd0 	.word	0x24005bd0
9000173c:	24000008 	.word	0x24000008
90001740:	24005b94 	.word	0x24005b94
90001744:	24005b98 	.word	0x24005b98
90001748:	24005bb0 	.word	0x24005bb0
9000174c:	24005bc4 	.word	0x24005bc4
90001750:	24005bd4 	.word	0x24005bd4

90001754 <HAL_JPEG_ErrorCallback>:
  __ASM volatile ("cpsid i" : : : "memory");
90001754:	b672      	cpsid	i
        while (1)
90001756:	e7fe      	b.n	90001756 <HAL_JPEG_ErrorCallback+0x2>

90001758 <HAL_JPEG_DecodeCpltCallback>:
        Jpeg_HWDecodingEnd = 1;
90001758:	4b01      	ldr	r3, [pc, #4]	; (90001760 <HAL_JPEG_DecodeCpltCallback+0x8>)
9000175a:	2201      	movs	r2, #1
9000175c:	601a      	str	r2, [r3, #0]
    }
9000175e:	4770      	bx	lr
90001760:	24005bbc 	.word	0x24005bbc

90001764 <DMA2D_CopyBuffer>:
  * @brief  Configures external DMA2D job to copy YCbCr data to RGB buffer(s)
  * @param job: External job reference
  * @retval None
  */
void DMA2D_CopyBuffer(JPEG_Data_BufferTypeDef& job)
{
90001764:	b570      	push	{r4, r5, r6, lr}
    uint32_t xRef, yRef, refline;

    yRef = ((job.MCU_index * MCU_WIDTH_PIXELS) / JPEG_ConvertorParams.WidthExtend) * MCU_WIDTH_PIXELS;
90001766:	491b      	ldr	r1, [pc, #108]	; (900017d4 <DMA2D_CopyBuffer+0x70>)
    xRef = ((job.MCU_index * MCU_WIDTH_PIXELS) % JPEG_ConvertorParams.WidthExtend);

    refline = (JPEG_ConvertorParams.ScaledWidth) * yRef + (JPEG_ConvertorParams.bytes_pr_pixel * xRef);

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90001768:	2302      	movs	r3, #2
    yRef = ((job.MCU_index * MCU_WIDTH_PIXELS) / JPEG_ConvertorParams.WidthExtend) * MCU_WIDTH_PIXELS;
9000176a:	68c5      	ldr	r5, [r0, #12]
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
9000176c:	4c1a      	ldr	r4, [pc, #104]	; (900017d8 <DMA2D_CopyBuffer+0x74>)
    yRef = ((job.MCU_index * MCU_WIDTH_PIXELS) / JPEG_ConvertorParams.WidthExtend) * MCU_WIDTH_PIXELS;
9000176e:	680a      	ldr	r2, [r1, #0]
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90001770:	6363      	str	r3, [r4, #52]	; 0x34
    yRef = ((job.MCU_index * MCU_WIDTH_PIXELS) / JPEG_ConvertorParams.WidthExtend) * MCU_WIDTH_PIXELS;
90001772:	012b      	lsls	r3, r5, #4

    /* Configure DMA2D data size */
    if (job.MCU_index >= (MCU_TotalNb - JPEG_ConvertorParams.MCU_pr_line))  /*  Last line of frame */
90001774:	4e19      	ldr	r6, [pc, #100]	; (900017dc <DMA2D_CopyBuffer+0x78>)
    yRef = ((job.MCU_index * MCU_WIDTH_PIXELS) / JPEG_ConvertorParams.WidthExtend) * MCU_WIDTH_PIXELS;
90001776:	fbb3 fcf2 	udiv	ip, r3, r2
    xRef = ((job.MCU_index * MCU_WIDTH_PIXELS) % JPEG_ConvertorParams.WidthExtend);
9000177a:	fb02 321c 	mls	r2, r2, ip, r3
    refline = (JPEG_ConvertorParams.ScaledWidth) * yRef + (JPEG_ConvertorParams.bytes_pr_pixel * xRef);
9000177e:	684b      	ldr	r3, [r1, #4]
    if (job.MCU_index >= (MCU_TotalNb - JPEG_ConvertorParams.MCU_pr_line))  /*  Last line of frame */
90001780:	6836      	ldr	r6, [r6, #0]
    refline = (JPEG_ConvertorParams.ScaledWidth) * yRef + (JPEG_ConvertorParams.bytes_pr_pixel * xRef);
90001782:	fb03 fc0c 	mul.w	ip, r3, ip
    if (job.MCU_index >= (MCU_TotalNb - JPEG_ConvertorParams.MCU_pr_line))  /*  Last line of frame */
90001786:	68cb      	ldr	r3, [r1, #12]
90001788:	eba6 0e03 	sub.w	lr, r6, r3
    refline = (JPEG_ConvertorParams.ScaledWidth) * yRef + (JPEG_ConvertorParams.bytes_pr_pixel * xRef);
9000178c:	690e      	ldr	r6, [r1, #16]
9000178e:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
    if (job.MCU_index >= (MCU_TotalNb - JPEG_ConvertorParams.MCU_pr_line))  /*  Last line of frame */
90001792:	4575      	cmp	r5, lr
    refline = (JPEG_ConvertorParams.ScaledWidth) * yRef + (JPEG_ConvertorParams.bytes_pr_pixel * xRef);
90001794:	fb06 f202 	mul.w	r2, r6, r2
    if (job.MCU_index >= (MCU_TotalNb - JPEG_ConvertorParams.MCU_pr_line))  /*  Last line of frame */
90001798:	d316      	bcc.n	900017c8 <DMA2D_CopyBuffer+0x64>
    {
        WRITE_REG(DMA2D->NLR, (JPEG_ConvertorParams.LastLineHeight | ((MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line) << DMA2D_NLR_PL_Pos)));
9000179a:	6889      	ldr	r1, [r1, #8]
9000179c:	ea41 5103 	orr.w	r1, r1, r3, lsl #20
900017a0:	6461      	str	r1, [r4, #68]	; 0x44
    {
        WRITE_REG(DMA2D->NLR, (MCU_HEIGHT_PIXELS | ((MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line) << DMA2D_NLR_PL_Pos)));
    }

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, (reinterpret_cast<uint32_t>(FrameBufferAddress) + refline));
900017a2:	490f      	ldr	r1, [pc, #60]	; (900017e0 <DMA2D_CopyBuffer+0x7c>)

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, 480 - (MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line));
900017a4:	f1c3 031e 	rsb	r3, r3, #30

    /* DMA2D FGPFCCR register configuration */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer));
900017a8:	6840      	ldr	r0, [r0, #4]
    WRITE_REG(DMA2D->FGOR, 0);
900017aa:	2400      	movs	r4, #0
    WRITE_REG(DMA2D->OMAR, (reinterpret_cast<uint32_t>(FrameBufferAddress) + refline));
900017ac:	6809      	ldr	r1, [r1, #0]
    WRITE_REG(DMA2D->OOR, 480 - (MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line));
900017ae:	011b      	lsls	r3, r3, #4
    WRITE_REG(DMA2D->OMAR, (reinterpret_cast<uint32_t>(FrameBufferAddress) + refline));
900017b0:	4411      	add	r1, r2
900017b2:	4a09      	ldr	r2, [pc, #36]	; (900017d8 <DMA2D_CopyBuffer+0x74>)
900017b4:	4461      	add	r1, ip
900017b6:	63d1      	str	r1, [r2, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, 480 - (MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line));
900017b8:	6413      	str	r3, [r2, #64]	; 0x40
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
900017ba:	490a      	ldr	r1, [pc, #40]	; (900017e4 <DMA2D_CopyBuffer+0x80>)

    /* Configure DMA2D contol register */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
900017bc:	4b0a      	ldr	r3, [pc, #40]	; (900017e8 <DMA2D_CopyBuffer+0x84>)
    WRITE_REG(DMA2D->FGOR, 0);
900017be:	6114      	str	r4, [r2, #16]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
900017c0:	61d1      	str	r1, [r2, #28]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer));
900017c2:	60d0      	str	r0, [r2, #12]
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
900017c4:	6013      	str	r3, [r2, #0]
}
900017c6:	bd70      	pop	{r4, r5, r6, pc}
        WRITE_REG(DMA2D->NLR, (MCU_HEIGHT_PIXELS | ((MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line) << DMA2D_NLR_PL_Pos)));
900017c8:	0519      	lsls	r1, r3, #20
900017ca:	f041 0110 	orr.w	r1, r1, #16
900017ce:	6461      	str	r1, [r4, #68]	; 0x44
900017d0:	e7e7      	b.n	900017a2 <DMA2D_CopyBuffer+0x3e>
900017d2:	bf00      	nop
900017d4:	24005b98 	.word	0x24005b98
900017d8:	52001000 	.word	0x52001000
900017dc:	24005bac 	.word	0x24005bac
900017e0:	24005bb4 	.word	0x24005bb4
900017e4:	ff09000b 	.word	0xff09000b
900017e8:	00010201 	.word	0x00010201

900017ec <DMA2D_ExternalJobCompleted>:
void DMA2D_ExternalJobCompleted(JPEG_Data_BufferTypeDef& job)
{
    job.State = JPEG_BUFFER_EMPTY;
    job.DataBufferSize = 0;

    JPEG_OUT_Read_BufferIndex++;
900017ec:	4b0c      	ldr	r3, [pc, #48]	; (90001820 <DMA2D_ExternalJobCompleted+0x34>)
    job.State = JPEG_BUFFER_EMPTY;
900017ee:	2100      	movs	r1, #0
900017f0:	7001      	strb	r1, [r0, #0]
    JPEG_OUT_Read_BufferIndex++;
900017f2:	681a      	ldr	r2, [r3, #0]
    job.DataBufferSize = 0;
900017f4:	6081      	str	r1, [r0, #8]
    JPEG_OUT_Read_BufferIndex++;
900017f6:	3201      	adds	r2, #1
900017f8:	601a      	str	r2, [r3, #0]
    if (JPEG_OUT_Read_BufferIndex >= NB_OUTPUT_DATA_BUFFERS)
900017fa:	681a      	ldr	r2, [r3, #0]
900017fc:	2a01      	cmp	r2, #1
900017fe:	d900      	bls.n	90001802 <DMA2D_ExternalJobCompleted+0x16>
    {
        JPEG_OUT_Read_BufferIndex = 0;
90001800:	6019      	str	r1, [r3, #0]
    }

    /* Check if last line */
    if (job.MCU_index >= (MCU_TotalNb - JPEG_ConvertorParams.MCU_pr_line))
90001802:	4b08      	ldr	r3, [pc, #32]	; (90001824 <DMA2D_ExternalJobCompleted+0x38>)
90001804:	4908      	ldr	r1, [pc, #32]	; (90001828 <DMA2D_ExternalJobCompleted+0x3c>)
90001806:	681b      	ldr	r3, [r3, #0]
90001808:	68c9      	ldr	r1, [r1, #12]
9000180a:	68c2      	ldr	r2, [r0, #12]
9000180c:	1a5b      	subs	r3, r3, r1
9000180e:	429a      	cmp	r2, r3
90001810:	d302      	bcc.n	90001818 <DMA2D_ExternalJobCompleted+0x2c>
    {
        DMA2D_CopyBufferEnd = 1;
90001812:	4b06      	ldr	r3, [pc, #24]	; (9000182c <DMA2D_ExternalJobCompleted+0x40>)
90001814:	2201      	movs	r2, #1
90001816:	601a      	str	r2, [r3, #0]
    }

    /* Signal decoder thread to wake up and continue decoding */
    SEM_POST(semDecodingDone);
90001818:	4b05      	ldr	r3, [pc, #20]	; (90001830 <DMA2D_ExternalJobCompleted+0x44>)
9000181a:	6818      	ldr	r0, [r3, #0]
9000181c:	f00c be28 	b.w	9000e470 <osSemaphoreRelease>
90001820:	24005b90 	.word	0x24005b90
90001824:	24005bac 	.word	0x24005bac
90001828:	24005b98 	.word	0x24005b98
9000182c:	24005b8c 	.word	0x24005b8c
90001830:	24005bd4 	.word	0x24005bd4

90001834 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
90001834:	2101      	movs	r1, #1
90001836:	2200      	movs	r2, #0
{
90001838:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
9000183a:	4608      	mov	r0, r1
9000183c:	f00c fd94 	bl	9000e368 <osSemaphoreNew>
90001840:	4b0b      	ldr	r3, [pc, #44]	; (90001870 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
90001842:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
90001844:	b140      	cbz	r0, 90001858 <_ZN8touchgfx10OSWrappers10initializeEv+0x24>

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
90001846:	2200      	movs	r2, #0
90001848:	2104      	movs	r1, #4
9000184a:	2001      	movs	r0, #1
9000184c:	f00c fe3c 	bl	9000e4c8 <osMessageQueueNew>
90001850:	4b08      	ldr	r3, [pc, #32]	; (90001874 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
90001852:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
90001854:	b130      	cbz	r0, 90001864 <_ZN8touchgfx10OSWrappers10initializeEv+0x30>
}
90001856:	bd08      	pop	{r3, pc}
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
90001858:	4b07      	ldr	r3, [pc, #28]	; (90001878 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
9000185a:	2128      	movs	r1, #40	; 0x28
9000185c:	4a07      	ldr	r2, [pc, #28]	; (9000187c <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
9000185e:	4808      	ldr	r0, [pc, #32]	; (90001880 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
90001860:	f026 f98c 	bl	90027b7c <__assert_func>
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
90001864:	4b07      	ldr	r3, [pc, #28]	; (90001884 <_ZN8touchgfx10OSWrappers10initializeEv+0x50>)
90001866:	212c      	movs	r1, #44	; 0x2c
90001868:	4a04      	ldr	r2, [pc, #16]	; (9000187c <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
9000186a:	4805      	ldr	r0, [pc, #20]	; (90001880 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
9000186c:	f026 f986 	bl	90027b7c <__assert_func>
90001870:	24005bdc 	.word	0x24005bdc
90001874:	24005bd8 	.word	0x24005bd8
90001878:	900291b4 	.word	0x900291b4
9000187c:	90029200 	.word	0x90029200
90001880:	90029230 	.word	0x90029230
90001884:	90029274 	.word	0x90029274

90001888 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
90001888:	4b02      	ldr	r3, [pc, #8]	; (90001894 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
9000188a:	f04f 31ff 	mov.w	r1, #4294967295
9000188e:	6818      	ldr	r0, [r3, #0]
90001890:	f00c bdba 	b.w	9000e408 <osSemaphoreAcquire>
90001894:	24005bdc 	.word	0x24005bdc

90001898 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
90001898:	4b01      	ldr	r3, [pc, #4]	; (900018a0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
9000189a:	6818      	ldr	r0, [r3, #0]
9000189c:	f00c bde8 	b.w	9000e470 <osSemaphoreRelease>
900018a0:	24005bdc 	.word	0x24005bdc

900018a4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
900018a4:	4b02      	ldr	r3, [pc, #8]	; (900018b0 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
900018a6:	2100      	movs	r1, #0
900018a8:	6818      	ldr	r0, [r3, #0]
900018aa:	f00c bdad 	b.w	9000e408 <osSemaphoreAcquire>
900018ae:	bf00      	nop
900018b0:	24005bdc 	.word	0x24005bdc

900018b4 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
900018b4:	4b01      	ldr	r3, [pc, #4]	; (900018bc <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x8>)
900018b6:	6818      	ldr	r0, [r3, #0]
900018b8:	f00c bdda 	b.w	9000e470 <osSemaphoreRelease>
900018bc:	24005bdc 	.word	0x24005bdc

900018c0 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
900018c0:	4803      	ldr	r0, [pc, #12]	; (900018d0 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
900018c2:	2300      	movs	r3, #0
900018c4:	4903      	ldr	r1, [pc, #12]	; (900018d4 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
900018c6:	461a      	mov	r2, r3
900018c8:	6800      	ldr	r0, [r0, #0]
900018ca:	f00c be3b 	b.w	9000e544 <osMessageQueuePut>
900018ce:	bf00      	nop
900018d0:	24005bd8 	.word	0x24005bd8
900018d4:	24000028 	.word	0x24000028

900018d8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
900018d8:	b510      	push	{r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
900018da:	2300      	movs	r3, #0
{
900018dc:	b082      	sub	sp, #8
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
900018de:	4c07      	ldr	r4, [pc, #28]	; (900018fc <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
900018e0:	461a      	mov	r2, r3
900018e2:	a901      	add	r1, sp, #4
900018e4:	6820      	ldr	r0, [r4, #0]
900018e6:	f00c fe6f 	bl	9000e5c8 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
900018ea:	f04f 33ff 	mov.w	r3, #4294967295
900018ee:	2200      	movs	r2, #0
900018f0:	a901      	add	r1, sp, #4
900018f2:	6820      	ldr	r0, [r4, #0]
900018f4:	f00c fe68 	bl	9000e5c8 <osMessageQueueGet>
}
900018f8:	b002      	add	sp, #8
900018fa:	bd10      	pop	{r4, pc}
900018fc:	24005bd8 	.word	0x24005bd8

90001900 <_ZN8touchgfx13DMA_Interface5flushEv>:
        waitForFrameBufferSemaphore();
90001900:	6803      	ldr	r3, [r0, #0]
90001902:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90001904:	4718      	bx	r3
90001906:	bf00      	nop

90001908 <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
90001908:	2001      	movs	r0, #1
9000190a:	4770      	bx	lr

9000190c <_ZN8STM32DMAD1Ev>:
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false), mutexIsRunning(0)
{
    mutexIsRunning = MUTEX_CREATE();
}

STM32DMA::~STM32DMA()
9000190c:	4905      	ldr	r1, [pc, #20]	; (90001924 <_ZN8STM32DMAD1Ev+0x18>)
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
9000190e:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
90001912:	4b05      	ldr	r3, [pc, #20]	; (90001928 <_ZN8STM32DMAD1Ev+0x1c>)
90001914:	6001      	str	r1, [r0, #0]
90001916:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
9000191a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000191e:	f3bf 8f6f 	isb	sy
{
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}
90001922:	4770      	bx	lr
90001924:	90029414 	.word	0x90029414
90001928:	e000e100 	.word	0xe000e100

9000192c <_ZN8STM32DMA10initializeEv>:

void STM32DMA::initialize()
{
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
9000192c:	4b0f      	ldr	r3, [pc, #60]	; (9000196c <_ZN8STM32DMA10initializeEv+0x40>)
{
9000192e:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_FORCE_RESET();
    __HAL_RCC_DMA2D_RELEASE_RESET();

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
90001930:	490f      	ldr	r1, [pc, #60]	; (90001970 <_ZN8STM32DMA10initializeEv+0x44>)
    __HAL_RCC_DMA2D_CLK_ENABLE();
90001932:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
90001936:	480f      	ldr	r0, [pc, #60]	; (90001974 <_ZN8STM32DMA10initializeEv+0x48>)
    __HAL_RCC_DMA2D_CLK_ENABLE();
90001938:	f042 0210 	orr.w	r2, r2, #16
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
9000193c:	6208      	str	r0, [r1, #32]
    __HAL_RCC_DMA2D_CLK_ENABLE();
9000193e:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
90001942:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
90001946:	f002 0210 	and.w	r2, r2, #16
9000194a:	9201      	str	r2, [sp, #4]
9000194c:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
9000194e:	6fda      	ldr	r2, [r3, #124]	; 0x7c
90001950:	f042 0210 	orr.w	r2, r2, #16
90001954:	67da      	str	r2, [r3, #124]	; 0x7c
    __HAL_RCC_DMA2D_RELEASE_RESET();
90001956:	6fda      	ldr	r2, [r3, #124]	; 0x7c
90001958:	f022 0210 	bic.w	r2, r2, #16
9000195c:	67da      	str	r2, [r3, #124]	; 0x7c
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
9000195e:	4b06      	ldr	r3, [pc, #24]	; (90001978 <_ZN8STM32DMA10initializeEv+0x4c>)
90001960:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
90001964:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
90001966:	b002      	add	sp, #8
90001968:	4770      	bx	lr
9000196a:	bf00      	nop
9000196c:	58024400 	.word	0x58024400
90001970:	24009490 	.word	0x24009490
90001974:	90001d59 	.word	0x90001d59
90001978:	e000e100 	.word	0xe000e100

9000197c <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
9000197c:	f240 30ef 	movw	r0, #1007	; 0x3ef
90001980:	4770      	bx	lr
90001982:	bf00      	nop

90001984 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
90001984:	4909      	ldr	r1, [pc, #36]	; (900019ac <_ZN8STM32DMAD0Ev+0x28>)
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90001986:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
9000198a:	4b09      	ldr	r3, [pc, #36]	; (900019b0 <_ZN8STM32DMAD0Ev+0x2c>)
9000198c:	b510      	push	{r4, lr}
9000198e:	6001      	str	r1, [r0, #0]
90001990:	4604      	mov	r4, r0
90001992:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
90001996:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000199a:	f3bf 8f6f 	isb	sy
}
9000199e:	f640 51a8 	movw	r1, #3496	; 0xda8
900019a2:	f026 f8bd 	bl	90027b20 <_ZdlPvj>
900019a6:	4620      	mov	r0, r4
900019a8:	bd10      	pop	{r4, pc}
900019aa:	bf00      	nop
900019ac:	90029414 	.word	0x90029414
900019b0:	e000e100 	.word	0xe000e100

900019b4 <_ZN8STM32DMA5startEv>:
                execute();
            }
        }
    }

    virtual void start()
900019b4:	b510      	push	{r4, lr}
900019b6:	4604      	mov	r4, r0
    {
        MUTEX_LOCK(mutexIsRunning);
900019b8:	f04f 31ff 	mov.w	r1, #4294967295
900019bc:	f8d0 0da4 	ldr.w	r0, [r0, #3492]	; 0xda4
900019c0:	f00c fc8c 	bl	9000e2dc <osMutexAcquire>
        if (!queue.isEmpty() && isAllowed && !isRunning)
900019c4:	6860      	ldr	r0, [r4, #4]
900019c6:	6803      	ldr	r3, [r0, #0]
900019c8:	681b      	ldr	r3, [r3, #0]
900019ca:	4798      	blx	r3
900019cc:	b908      	cbnz	r0, 900019d2 <_ZN8STM32DMA5startEv+0x1e>
900019ce:	7a63      	ldrb	r3, [r4, #9]
900019d0:	b963      	cbnz	r3, 900019ec <_ZN8STM32DMA5startEv+0x38>
        {
            started_by_external_job = false;
            execute();
        }
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isReserved && !isRunning)
900019d2:	4915      	ldr	r1, [pc, #84]	; (90001a28 <_ZN8STM32DMA5startEv+0x74>)
900019d4:	4a15      	ldr	r2, [pc, #84]	; (90001a2c <_ZN8STM32DMA5startEv+0x78>)
900019d6:	680b      	ldr	r3, [r1, #0]
900019d8:	011b      	lsls	r3, r3, #4
900019da:	5cd3      	ldrb	r3, [r2, r3]
900019dc:	2b01      	cmp	r3, #1
900019de:	d014      	beq.n	90001a0a <_ZN8STM32DMA5startEv+0x56>
        {
            started_by_external_job = true;
            externalJobExecute();
        }
        MUTEX_UNLOCK(mutexIsRunning);
900019e0:	f8d4 0da4 	ldr.w	r0, [r4, #3492]	; 0xda4
    }
900019e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        MUTEX_UNLOCK(mutexIsRunning);
900019e8:	f00c bc9c 	b.w	9000e324 <osMutexRelease>
        if (!queue.isEmpty() && isAllowed && !isRunning)
900019ec:	7a23      	ldrb	r3, [r4, #8]
900019ee:	2b00      	cmp	r3, #0
900019f0:	d1ef      	bne.n	900019d2 <_ZN8STM32DMA5startEv+0x1e>
            execute();
900019f2:	6822      	ldr	r2, [r4, #0]
900019f4:	4620      	mov	r0, r4
            started_by_external_job = false;
900019f6:	f884 3da0 	strb.w	r3, [r4, #3488]	; 0xda0
            execute();
900019fa:	6a53      	ldr	r3, [r2, #36]	; 0x24
900019fc:	4798      	blx	r3
        MUTEX_UNLOCK(mutexIsRunning);
900019fe:	f8d4 0da4 	ldr.w	r0, [r4, #3492]	; 0xda4
    }
90001a02:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        MUTEX_UNLOCK(mutexIsRunning);
90001a06:	f00c bc8d 	b.w	9000e324 <osMutexRelease>
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isReserved && !isRunning)
90001a0a:	7aa0      	ldrb	r0, [r4, #10]
90001a0c:	2800      	cmp	r0, #0
90001a0e:	d1e7      	bne.n	900019e0 <_ZN8STM32DMA5startEv+0x2c>
90001a10:	7a20      	ldrb	r0, [r4, #8]
90001a12:	2800      	cmp	r0, #0
90001a14:	d1e4      	bne.n	900019e0 <_ZN8STM32DMA5startEv+0x2c>
     * @param None
     */
    void externalJobExecute()
    {
        isRunning = true;
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001a16:	6808      	ldr	r0, [r1, #0]
            started_by_external_job = true;
90001a18:	f884 3da0 	strb.w	r3, [r4, #3488]	; 0xda0
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001a1c:	eb02 1000 	add.w	r0, r2, r0, lsl #4
        isRunning = true;
90001a20:	7223      	strb	r3, [r4, #8]
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001a22:	f7ff fe9f 	bl	90001764 <DMA2D_CopyBuffer>
    }
90001a26:	e7db      	b.n	900019e0 <_ZN8STM32DMA5startEv+0x2c>
90001a28:	24005b90 	.word	0x24005b90
90001a2c:	24000008 	.word	0x24000008

90001a30 <_ZN8STM32DMA18signalDMAInterruptEv>:
        if (!started_by_external_job)
90001a30:	f890 3da0 	ldrb.w	r3, [r0, #3488]	; 0xda0
    virtual void signalDMAInterrupt()
90001a34:	b510      	push	{r4, lr}
90001a36:	4604      	mov	r4, r0
        if (!started_by_external_job)
90001a38:	b953      	cbnz	r3, 90001a50 <_ZN8STM32DMA18signalDMAInterruptEv+0x20>
            executeCompleted();
90001a3a:	6803      	ldr	r3, [r0, #0]
90001a3c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90001a3e:	4798      	blx	r3
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isReserved && !isRunning)
90001a40:	491c      	ldr	r1, [pc, #112]	; (90001ab4 <_ZN8STM32DMA18signalDMAInterruptEv+0x84>)
90001a42:	4a1d      	ldr	r2, [pc, #116]	; (90001ab8 <_ZN8STM32DMA18signalDMAInterruptEv+0x88>)
90001a44:	680b      	ldr	r3, [r1, #0]
90001a46:	011b      	lsls	r3, r3, #4
90001a48:	5cd3      	ldrb	r3, [r2, r3]
90001a4a:	2b01      	cmp	r3, #1
90001a4c:	d014      	beq.n	90001a78 <_ZN8STM32DMA18signalDMAInterruptEv+0x48>
    }
90001a4e:	bd10      	pop	{r4, pc}
        if (isRunning)
90001a50:	7a03      	ldrb	r3, [r0, #8]
90001a52:	bb2b      	cbnz	r3, 90001aa0 <_ZN8STM32DMA18signalDMAInterruptEv+0x70>
            if (!queue.isEmpty() && isAllowed)
90001a54:	6860      	ldr	r0, [r4, #4]
90001a56:	6803      	ldr	r3, [r0, #0]
90001a58:	681b      	ldr	r3, [r3, #0]
90001a5a:	4798      	blx	r3
90001a5c:	4603      	mov	r3, r0
90001a5e:	2800      	cmp	r0, #0
90001a60:	d1f5      	bne.n	90001a4e <_ZN8STM32DMA18signalDMAInterruptEv+0x1e>
90001a62:	7a62      	ldrb	r2, [r4, #9]
90001a64:	2a00      	cmp	r2, #0
90001a66:	d0f2      	beq.n	90001a4e <_ZN8STM32DMA18signalDMAInterruptEv+0x1e>
                execute();
90001a68:	6822      	ldr	r2, [r4, #0]
90001a6a:	4620      	mov	r0, r4
                started_by_external_job = false;
90001a6c:	f884 3da0 	strb.w	r3, [r4, #3488]	; 0xda0
                execute();
90001a70:	6a53      	ldr	r3, [r2, #36]	; 0x24
    }
90001a72:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
                execute();
90001a76:	4718      	bx	r3
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isReserved && !isRunning)
90001a78:	4810      	ldr	r0, [pc, #64]	; (90001abc <_ZN8STM32DMA18signalDMAInterruptEv+0x8c>)
90001a7a:	6800      	ldr	r0, [r0, #0]
90001a7c:	2800      	cmp	r0, #0
90001a7e:	d1e6      	bne.n	90001a4e <_ZN8STM32DMA18signalDMAInterruptEv+0x1e>
90001a80:	7aa0      	ldrb	r0, [r4, #10]
90001a82:	2800      	cmp	r0, #0
90001a84:	d1e3      	bne.n	90001a4e <_ZN8STM32DMA18signalDMAInterruptEv+0x1e>
90001a86:	7a20      	ldrb	r0, [r4, #8]
90001a88:	2800      	cmp	r0, #0
90001a8a:	d1e0      	bne.n	90001a4e <_ZN8STM32DMA18signalDMAInterruptEv+0x1e>
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001a8c:	6808      	ldr	r0, [r1, #0]
                started_by_external_job = true;
90001a8e:	f884 3da0 	strb.w	r3, [r4, #3488]	; 0xda0
        isRunning = true;
90001a92:	7223      	strb	r3, [r4, #8]
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001a94:	eb02 1000 	add.w	r0, r2, r0, lsl #4
    }
90001a98:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001a9c:	f7ff be62 	b.w	90001764 <DMA2D_CopyBuffer>
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001aa0:	4904      	ldr	r1, [pc, #16]	; (90001ab4 <_ZN8STM32DMA18signalDMAInterruptEv+0x84>)
            isRunning = false;
90001aa2:	2200      	movs	r2, #0
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001aa4:	4b04      	ldr	r3, [pc, #16]	; (90001ab8 <_ZN8STM32DMA18signalDMAInterruptEv+0x88>)
90001aa6:	6808      	ldr	r0, [r1, #0]
            isRunning = false;
90001aa8:	7222      	strb	r2, [r4, #8]
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001aaa:	eb03 1000 	add.w	r0, r3, r0, lsl #4
90001aae:	f7ff fe9d 	bl	900017ec <DMA2D_ExternalJobCompleted>
90001ab2:	e7cf      	b.n	90001a54 <_ZN8STM32DMA18signalDMAInterruptEv+0x24>
90001ab4:	24005b90 	.word	0x24005b90
90001ab8:	24000008 	.word	0x24000008
90001abc:	24005b8c 	.word	0x24005b8c

90001ac0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
90001ac0:	b538      	push	{r3, r4, r5, lr}
    switch (format)
90001ac2:	7f8b      	ldrb	r3, [r1, #30]
90001ac4:	2b0a      	cmp	r3, #10
90001ac6:	d83e      	bhi.n	90001b46 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x86>
90001ac8:	e8df f003 	tbb	[pc, r3]
90001acc:	3d2a063b 	.word	0x3d2a063b
90001ad0:	063d3d3d 	.word	0x063d3d3d
90001ad4:	0606      	.short	0x0606
90001ad6:	06          	.byte	0x06
90001ad7:	00          	.byte	0x00
90001ad8:	2401      	movs	r4, #1

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90001ada:	f8b1 c014 	ldrh.w	ip, [r1, #20]
90001ade:	8ac8      	ldrh	r0, [r1, #22]

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90001ae0:	8b4a      	ldrh	r2, [r1, #26]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
90001ae2:	4b1c      	ldr	r3, [pc, #112]	; (90001b54 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x94>)
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90001ae4:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90001ae8:	eba2 020c 	sub.w	r2, r2, ip
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
90001aec:	635c      	str	r4, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90001aee:	6458      	str	r0, [r3, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001af0:	6908      	ldr	r0, [r1, #16]
90001af2:	63d8      	str	r0, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90001af4:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
90001af6:	680d      	ldr	r5, [r1, #0]
90001af8:	2d08      	cmp	r5, #8
90001afa:	d013      	beq.n	90001b24 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x64>
    {
        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, 0);
90001afc:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
90001afe:	61dc      	str	r4, [r3, #28]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
90001b00:	4c15      	ldr	r4, [pc, #84]	; (90001b58 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x98>)
        WRITE_REG(DMA2D->FGOR, 0);
90001b02:	611a      	str	r2, [r3, #16]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
90001b04:	68c9      	ldr	r1, [r1, #12]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
90001b06:	0a0a      	lsrs	r2, r1, #8
90001b08:	0948      	lsrs	r0, r1, #5
90001b0a:	f3c1 01c4 	ubfx	r1, r1, #3, #5
90001b0e:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
90001b12:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90001b16:	4302      	orrs	r2, r0
90001b18:	430a      	orrs	r2, r1
90001b1a:	639a      	str	r2, [r3, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
90001b1c:	601c      	str	r4, [r3, #0]
    }
}
90001b1e:	bd38      	pop	{r3, r4, r5, pc}
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
90001b20:	2400      	movs	r4, #0
90001b22:	e7da      	b.n	90001ada <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1a>
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
90001b24:	619a      	str	r2, [r3, #24]
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
90001b26:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90001b28:	625c      	str	r4, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
90001b2a:	4a0c      	ldr	r2, [pc, #48]	; (90001b5c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x9c>)
90001b2c:	7f0c      	ldrb	r4, [r1, #28]
90001b2e:	ea42 6204 	orr.w	r2, r2, r4, lsl #24
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
90001b32:	4c0b      	ldr	r4, [pc, #44]	; (90001b60 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa0>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
90001b34:	61da      	str	r2, [r3, #28]
90001b36:	68ca      	ldr	r2, [r1, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
90001b38:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001b3a:	6158      	str	r0, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001b3c:	60d8      	str	r0, [r3, #12]
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
90001b3e:	601c      	str	r4, [r3, #0]
}
90001b40:	bd38      	pop	{r3, r4, r5, pc}
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
90001b42:	2402      	movs	r4, #2
90001b44:	e7c9      	b.n	90001ada <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1a>
        assert(0 && "Unsupported Format!");
90001b46:	4b07      	ldr	r3, [pc, #28]	; (90001b64 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa4>)
90001b48:	2187      	movs	r1, #135	; 0x87
90001b4a:	4a07      	ldr	r2, [pc, #28]	; (90001b68 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa8>)
90001b4c:	4807      	ldr	r0, [pc, #28]	; (90001b6c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xac>)
90001b4e:	f026 f815 	bl	90027b7c <__assert_func>
90001b52:	bf00      	nop
90001b54:	52001000 	.word	0x52001000
90001b58:	00030201 	.word	0x00030201
90001b5c:	00010009 	.word	0x00010009
90001b60:	00020201 	.word	0x00020201
90001b64:	900292b8 	.word	0x900292b8
90001b68:	900292d4 	.word	0x900292d4
90001b6c:	90029320 	.word	0x90029320

90001b70 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
{
90001b70:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
90001b72:	f891 e01d 	ldrb.w	lr, [r1, #29]
    switch (format)
90001b76:	f1be 0f0b 	cmp.w	lr, #11
90001b7a:	f200 80c1 	bhi.w	90001d00 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x190>
90001b7e:	e8df f01e 	tbh	[pc, lr, lsl #1]
90001b82:	0063      	.short	0x0063
90001b84:	004c0065 	.word	0x004c0065
90001b88:	00bf00bf 	.word	0x00bf00bf
90001b8c:	00bf00bf 	.word	0x00bf00bf
90001b90:	000c000c 	.word	0x000c000c
90001b94:	000c000c 	.word	0x000c000c
90001b98:	000c      	.short	0x000c
        dma2dColorMode = DMA2D_INPUT_L8;
90001b9a:	2505      	movs	r5, #5
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
90001b9c:	f891 c01e 	ldrb.w	ip, [r1, #30]
    switch (format)
90001ba0:	f1bc 0f0b 	cmp.w	ip, #11
90001ba4:	f200 80ac 	bhi.w	90001d00 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x190>
90001ba8:	e8df f00c 	tbb	[pc, ip]
90001bac:	aa0e4b52 	.word	0xaa0e4b52
90001bb0:	06aaaaaa 	.word	0x06aaaaaa
90001bb4:	06060606 	.word	0x06060606
    switch (format)
90001bb8:	f1ac 0307 	sub.w	r3, ip, #7
90001bbc:	2b03      	cmp	r3, #3
90001bbe:	f200 80a5 	bhi.w	90001d0c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x19c>
90001bc2:	2605      	movs	r6, #5
90001bc4:	2701      	movs	r7, #1
90001bc6:	e001      	b.n	90001bcc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5c>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
90001bc8:	2600      	movs	r6, #0
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
90001bca:	4637      	mov	r7, r6
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90001bcc:	8a8b      	ldrh	r3, [r1, #20]
90001bce:	8b4a      	ldrh	r2, [r1, #26]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
90001bd0:	8b0c      	ldrh	r4, [r1, #24]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90001bd2:	8ac8      	ldrh	r0, [r1, #22]
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90001bd4:	1ad2      	subs	r2, r2, r3
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
90001bd6:	1ae4      	subs	r4, r4, r3
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90001bd8:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90001bdc:	4b52      	ldr	r3, [pc, #328]	; (90001d28 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b8>)
90001bde:	641a      	str	r2, [r3, #64]	; 0x40
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
90001be0:	619a      	str	r2, [r3, #24]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
90001be2:	611c      	str	r4, [r3, #16]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
90001be4:	684a      	ldr	r2, [r1, #4]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
90001be6:	635f      	str	r7, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90001be8:	6458      	str	r0, [r3, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001bea:	6908      	ldr	r0, [r1, #16]
90001bec:	63d8      	str	r0, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
90001bee:	60da      	str	r2, [r3, #12]
    switch (blitOp.operation)
90001bf0:	680a      	ldr	r2, [r1, #0]
90001bf2:	2a80      	cmp	r2, #128	; 0x80
90001bf4:	d03b      	beq.n	90001c6e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfe>
90001bf6:	d812      	bhi.n	90001c1e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xae>
90001bf8:	2a20      	cmp	r2, #32
90001bfa:	d02c      	beq.n	90001c56 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe6>
90001bfc:	2a40      	cmp	r2, #64	; 0x40
90001bfe:	d02a      	beq.n	90001c56 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe6>
90001c00:	2a04      	cmp	r2, #4
90001c02:	d169      	bne.n	90001cd8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x168>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001c04:	7f0a      	ldrb	r2, [r1, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90001c06:	4949      	ldr	r1, [pc, #292]	; (90001d2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1bc>)
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001c08:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
90001c0c:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
90001c10:	61da      	str	r2, [r3, #28]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90001c12:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001c14:	6158      	str	r0, [r3, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90001c16:	6019      	str	r1, [r3, #0]
}
90001c18:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
90001c1a:	2500      	movs	r5, #0
90001c1c:	e7be      	b.n	90001b9c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2c>
    switch (blitOp.operation)
90001c1e:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
90001c22:	d067      	beq.n	90001cf4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x184>
90001c24:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
90001c28:	d156      	bne.n	90001cd8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x168>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001c2a:	7f0c      	ldrb	r4, [r1, #28]
90001c2c:	4a40      	ldr	r2, [pc, #256]	; (90001d30 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c0>)
90001c2e:	ea42 6204 	orr.w	r2, r2, r4, lsl #24
90001c32:	61da      	str	r2, [r3, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90001c34:	4a3d      	ldr	r2, [pc, #244]	; (90001d2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1bc>)
90001c36:	68c9      	ldr	r1, [r1, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
90001c38:	6219      	str	r1, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90001c3a:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001c3c:	6158      	str	r0, [r3, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90001c3e:	601a      	str	r2, [r3, #0]
}
90001c40:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    switch (format)
90001c42:	2601      	movs	r6, #1
90001c44:	4637      	mov	r7, r6
90001c46:	e7c1      	b.n	90001bcc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5c>
90001c48:	2502      	movs	r5, #2
90001c4a:	e7a7      	b.n	90001b9c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2c>
        dma2dColorMode = DMA2D_INPUT_RGB888;
90001c4c:	2501      	movs	r5, #1
90001c4e:	e7a5      	b.n	90001b9c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2c>
        dma2dColorMode = DMA2D_INPUT_RGB565;
90001c50:	2602      	movs	r6, #2
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
90001c52:	4637      	mov	r7, r6
90001c54:	e7ba      	b.n	90001bcc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5c>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001c56:	7f0b      	ldrb	r3, [r1, #28]
90001c58:	4a33      	ldr	r2, [pc, #204]	; (90001d28 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b8>)
90001c5a:	ea45 6303 	orr.w	r3, r5, r3, lsl #24
90001c5e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
90001c62:	61d3      	str	r3, [r2, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90001c64:	4b31      	ldr	r3, [pc, #196]	; (90001d2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1bc>)
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90001c66:	6256      	str	r6, [r2, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001c68:	6150      	str	r0, [r2, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90001c6a:	6013      	str	r3, [r2, #0]
}
90001c6c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
90001c6e:	688a      	ldr	r2, [r1, #8]
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
90001c70:	1d14      	adds	r4, r2, #4
90001c72:	62dc      	str	r4, [r3, #44]	; 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001c74:	7f0c      	ldrb	r4, [r1, #28]
            switch ((Bitmap::ClutFormat)palette->format)
90001c76:	7811      	ldrb	r1, [r2, #0]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001c78:	ea45 6504 	orr.w	r5, r5, r4, lsl #24
90001c7c:	f445 3500 	orr.w	r5, r5, #131072	; 0x20000
90001c80:	61dd      	str	r5, [r3, #28]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90001c82:	625e      	str	r6, [r3, #36]	; 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001c84:	6158      	str	r0, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
90001c86:	b9b1      	cbnz	r1, 90001cb6 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x146>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
90001c88:	8851      	ldrh	r1, [r2, #2]
            bool blend = true;
90001c8a:	2401      	movs	r4, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
90001c8c:	69d8      	ldr	r0, [r3, #28]
90001c8e:	4a29      	ldr	r2, [pc, #164]	; (90001d34 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c4>)
90001c90:	3901      	subs	r1, #1
90001c92:	4002      	ands	r2, r0
90001c94:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
90001c98:	61da      	str	r2, [r3, #28]
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
90001c9a:	4a23      	ldr	r2, [pc, #140]	; (90001d28 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b8>)
90001c9c:	69d3      	ldr	r3, [r2, #28]
90001c9e:	f043 0320 	orr.w	r3, r3, #32
90001ca2:	61d3      	str	r3, [r2, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
90001ca4:	69d3      	ldr	r3, [r2, #28]
90001ca6:	069b      	lsls	r3, r3, #26
90001ca8:	d4fc      	bmi.n	90001ca4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x134>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
90001caa:	2310      	movs	r3, #16
90001cac:	6093      	str	r3, [r2, #8]
            if (blend)
90001cae:	b324      	cbz	r4, 90001cfa <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18a>
                WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90001cb0:	4b1e      	ldr	r3, [pc, #120]	; (90001d2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1bc>)
90001cb2:	6013      	str	r3, [r2, #0]
}
90001cb4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90001cb6:	2901      	cmp	r1, #1
90001cb8:	d12e      	bne.n	90001d18 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a8>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
90001cba:	8851      	ldrh	r1, [r2, #2]
                if (blitOp.alpha == 255)
90001cbc:	3cff      	subs	r4, #255	; 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
90001cbe:	69d8      	ldr	r0, [r3, #28]
90001cc0:	4a1c      	ldr	r2, [pc, #112]	; (90001d34 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c4>)
90001cc2:	f101 31ff 	add.w	r1, r1, #4294967295
                if (blitOp.alpha == 255)
90001cc6:	bf18      	it	ne
90001cc8:	2401      	movne	r4, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
90001cca:	4002      	ands	r2, r0
90001ccc:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
90001cd0:	f042 0210 	orr.w	r2, r2, #16
90001cd4:	61da      	str	r2, [r3, #28]
                break;
90001cd6:	e7e0      	b.n	90001c9a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x12a>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001cd8:	7f0a      	ldrb	r2, [r1, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
90001cda:	45e6      	cmp	lr, ip
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001cdc:	4b12      	ldr	r3, [pc, #72]	; (90001d28 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b8>)
90001cde:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
90001ce2:	bf14      	ite	ne
90001ce4:	4a14      	ldrne	r2, [pc, #80]	; (90001d38 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c8>)
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
90001ce6:	f240 2201 	movweq	r2, #513	; 0x201
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001cea:	f445 3500 	orr.w	r5, r5, #131072	; 0x20000
90001cee:	61dd      	str	r5, [r3, #28]
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
90001cf0:	601a      	str	r2, [r3, #0]
}
90001cf2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001cf4:	7f0c      	ldrb	r4, [r1, #28]
90001cf6:	4a11      	ldr	r2, [pc, #68]	; (90001d3c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1cc>)
90001cf8:	e799      	b.n	90001c2e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xbe>
                WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
90001cfa:	4b0f      	ldr	r3, [pc, #60]	; (90001d38 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c8>)
90001cfc:	6013      	str	r3, [r2, #0]
}
90001cfe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        assert(0 && "Unsupported Format!");
90001d00:	4b0f      	ldr	r3, [pc, #60]	; (90001d40 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1d0>)
90001d02:	2166      	movs	r1, #102	; 0x66
90001d04:	4a0f      	ldr	r2, [pc, #60]	; (90001d44 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1d4>)
90001d06:	4810      	ldr	r0, [pc, #64]	; (90001d48 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1d8>)
90001d08:	f025 ff38 	bl	90027b7c <__assert_func>
        assert(0 && "Unsupported Format!");
90001d0c:	4b0c      	ldr	r3, [pc, #48]	; (90001d40 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1d0>)
90001d0e:	2187      	movs	r1, #135	; 0x87
90001d10:	4a0e      	ldr	r2, [pc, #56]	; (90001d4c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1dc>)
90001d12:	480d      	ldr	r0, [pc, #52]	; (90001d48 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1d8>)
90001d14:	f025 ff32 	bl	90027b7c <__assert_func>
                assert(0 && "Unsupported format");
90001d18:	4b0d      	ldr	r3, [pc, #52]	; (90001d50 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1e0>)
90001d1a:	f240 1111 	movw	r1, #273	; 0x111
90001d1e:	4a0d      	ldr	r2, [pc, #52]	; (90001d54 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1e4>)
90001d20:	4809      	ldr	r0, [pc, #36]	; (90001d48 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1d8>)
90001d22:	f025 ff2b 	bl	90027b7c <__assert_func>
90001d26:	bf00      	nop
90001d28:	52001000 	.word	0x52001000
90001d2c:	00020201 	.word	0x00020201
90001d30:	00020009 	.word	0x00020009
90001d34:	ffff00ef 	.word	0xffff00ef
90001d38:	00010201 	.word	0x00010201
90001d3c:	0002000a 	.word	0x0002000a
90001d40:	900292b8 	.word	0x900292b8
90001d44:	90029364 	.word	0x90029364
90001d48:	90029320 	.word	0x90029320
90001d4c:	900292d4 	.word	0x900292d4
90001d50:	900293b0 	.word	0x900293b0
90001d54:	900293cc 	.word	0x900293cc

90001d58 <DMA2D_XferCpltCallback>:
        dma.signalDMAInterrupt();
90001d58:	4b25      	ldr	r3, [pc, #148]	; (90001df0 <DMA2D_XferCpltCallback+0x98>)
90001d5a:	4926      	ldr	r1, [pc, #152]	; (90001df4 <DMA2D_XferCpltCallback+0x9c>)
90001d5c:	681b      	ldr	r3, [r3, #0]
    {
90001d5e:	b510      	push	{r4, lr}
90001d60:	685c      	ldr	r4, [r3, #4]
90001d62:	6823      	ldr	r3, [r4, #0]
90001d64:	695a      	ldr	r2, [r3, #20]
90001d66:	428a      	cmp	r2, r1
90001d68:	d120      	bne.n	90001dac <DMA2D_XferCpltCallback+0x54>
        if (!started_by_external_job)
90001d6a:	f894 2da0 	ldrb.w	r2, [r4, #3488]	; 0xda0
90001d6e:	b192      	cbz	r2, 90001d96 <DMA2D_XferCpltCallback+0x3e>
        if (isRunning)
90001d70:	7a23      	ldrb	r3, [r4, #8]
90001d72:	2b00      	cmp	r3, #0
90001d74:	d132      	bne.n	90001ddc <DMA2D_XferCpltCallback+0x84>
            if (!queue.isEmpty() && isAllowed)
90001d76:	6860      	ldr	r0, [r4, #4]
90001d78:	6803      	ldr	r3, [r0, #0]
90001d7a:	681b      	ldr	r3, [r3, #0]
90001d7c:	4798      	blx	r3
90001d7e:	4603      	mov	r3, r0
90001d80:	b998      	cbnz	r0, 90001daa <DMA2D_XferCpltCallback+0x52>
90001d82:	7a62      	ldrb	r2, [r4, #9]
90001d84:	b18a      	cbz	r2, 90001daa <DMA2D_XferCpltCallback+0x52>
                execute();
90001d86:	6822      	ldr	r2, [r4, #0]
90001d88:	4620      	mov	r0, r4
                started_by_external_job = false;
90001d8a:	f884 3da0 	strb.w	r3, [r4, #3488]	; 0xda0
                execute();
90001d8e:	6a53      	ldr	r3, [r2, #36]	; 0x24
    }
90001d90:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90001d94:	4718      	bx	r3
            executeCompleted();
90001d96:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90001d98:	4620      	mov	r0, r4
90001d9a:	4798      	blx	r3
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isReserved && !isRunning)
90001d9c:	4916      	ldr	r1, [pc, #88]	; (90001df8 <DMA2D_XferCpltCallback+0xa0>)
90001d9e:	4a17      	ldr	r2, [pc, #92]	; (90001dfc <DMA2D_XferCpltCallback+0xa4>)
90001da0:	680b      	ldr	r3, [r1, #0]
90001da2:	011b      	lsls	r3, r3, #4
90001da4:	5cd3      	ldrb	r3, [r2, r3]
90001da6:	2b01      	cmp	r3, #1
90001da8:	d004      	beq.n	90001db4 <DMA2D_XferCpltCallback+0x5c>
90001daa:	bd10      	pop	{r4, pc}
90001dac:	4620      	mov	r0, r4
90001dae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90001db2:	4710      	bx	r2
90001db4:	4812      	ldr	r0, [pc, #72]	; (90001e00 <DMA2D_XferCpltCallback+0xa8>)
90001db6:	6800      	ldr	r0, [r0, #0]
90001db8:	2800      	cmp	r0, #0
90001dba:	d1f6      	bne.n	90001daa <DMA2D_XferCpltCallback+0x52>
90001dbc:	7aa0      	ldrb	r0, [r4, #10]
90001dbe:	2800      	cmp	r0, #0
90001dc0:	d1f3      	bne.n	90001daa <DMA2D_XferCpltCallback+0x52>
90001dc2:	7a20      	ldrb	r0, [r4, #8]
90001dc4:	2800      	cmp	r0, #0
90001dc6:	d1f0      	bne.n	90001daa <DMA2D_XferCpltCallback+0x52>
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001dc8:	6808      	ldr	r0, [r1, #0]
                started_by_external_job = true;
90001dca:	f884 3da0 	strb.w	r3, [r4, #3488]	; 0xda0
        isRunning = true;
90001dce:	7223      	strb	r3, [r4, #8]
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001dd0:	eb02 1000 	add.w	r0, r2, r0, lsl #4
90001dd4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90001dd8:	f7ff bcc4 	b.w	90001764 <DMA2D_CopyBuffer>
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001ddc:	4906      	ldr	r1, [pc, #24]	; (90001df8 <DMA2D_XferCpltCallback+0xa0>)
            isRunning = false;
90001dde:	2200      	movs	r2, #0
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001de0:	4b06      	ldr	r3, [pc, #24]	; (90001dfc <DMA2D_XferCpltCallback+0xa4>)
90001de2:	6808      	ldr	r0, [r1, #0]
            isRunning = false;
90001de4:	7222      	strb	r2, [r4, #8]
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001de6:	eb03 1000 	add.w	r0, r3, r0, lsl #4
90001dea:	f7ff fcff 	bl	900017ec <DMA2D_ExternalJobCompleted>
90001dee:	e7c2      	b.n	90001d76 <DMA2D_XferCpltCallback+0x1e>
90001df0:	24039834 	.word	0x24039834
90001df4:	90001a31 	.word	0x90001a31
90001df8:	24005b90 	.word	0x24005b90
90001dfc:	24000008 	.word	0x24000008
90001e00:	24005b8c 	.word	0x24005b8c

90001e04 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
90001e04:	b570      	push	{r4, r5, r6, lr}
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false), mutexIsRunning(0)
90001e06:	4b10      	ldr	r3, [pc, #64]	; (90001e48 <_ZN8STM32DMAC1Ev+0x44>)
STM32DMA::STM32DMA()
90001e08:	4606      	mov	r6, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false), mutexIsRunning(0)
90001e0a:	4604      	mov	r4, r0
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
90001e0c:	2500      	movs	r5, #0
90001e0e:	300c      	adds	r0, #12
90001e10:	2260      	movs	r2, #96	; 0x60
90001e12:	7235      	strb	r5, [r6, #8]
90001e14:	7275      	strb	r5, [r6, #9]
90001e16:	6070      	str	r0, [r6, #4]
90001e18:	f844 3b20 	str.w	r3, [r4], #32
90001e1c:	4621      	mov	r1, r4
90001e1e:	f010 fb33 	bl	90012488 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
90001e22:	4621      	mov	r1, r4
90001e24:	f506 635a 	add.w	r3, r6, #3488	; 0xda0
        : color(0)
90001e28:	60cd      	str	r5, [r1, #12]
90001e2a:	3124      	adds	r1, #36	; 0x24
90001e2c:	428b      	cmp	r3, r1
90001e2e:	d1fb      	bne.n	90001e28 <_ZN8STM32DMAC1Ev+0x24>
90001e30:	f886 5da0 	strb.w	r5, [r6, #3488]	; 0xda0
    mutexIsRunning = MUTEX_CREATE();
90001e34:	2000      	movs	r0, #0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false), mutexIsRunning(0)
90001e36:	f8c6 5da4 	str.w	r5, [r6, #3492]	; 0xda4
    mutexIsRunning = MUTEX_CREATE();
90001e3a:	f00c fa0f 	bl	9000e25c <osMutexNew>
90001e3e:	4603      	mov	r3, r0
}
90001e40:	4630      	mov	r0, r6
    mutexIsRunning = MUTEX_CREATE();
90001e42:	f8c6 3da4 	str.w	r3, [r6, #3492]	; 0xda4
}
90001e46:	bd70      	pop	{r4, r5, r6, pc}
90001e48:	90029414 	.word	0x90029414

90001e4c <_ZN8touchgfx5paint8tearDownEv>:
* @brief Waits until previous DMA drawing operation has finished
*/
void tearDown()
{
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
90001e4c:	4a03      	ldr	r2, [pc, #12]	; (90001e5c <_ZN8touchgfx5paint8tearDownEv+0x10>)
90001e4e:	6813      	ldr	r3, [r2, #0]
90001e50:	07db      	lsls	r3, r3, #31
90001e52:	d4fc      	bmi.n	90001e4e <_ZN8touchgfx5paint8tearDownEv+0x2>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90001e54:	2323      	movs	r3, #35	; 0x23
90001e56:	6093      	str	r3, [r2, #8]
}
90001e58:	4770      	bx	lr
90001e5a:	bf00      	nop
90001e5c:	52001000 	.word	0x52001000

90001e60 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
*
* @brief Renders Canvas Widget chunks using DMA.
* This functions will not generate an interrupt, and will not affect the DMA queue.
*/
void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
90001e60:	b430      	push	{r4, r5}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
90001e62:	4c11      	ldr	r4, [pc, #68]	; (90001ea8 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x48>)
90001e64:	6825      	ldr	r5, [r4, #0]
90001e66:	07ed      	lsls	r5, r5, #31
90001e68:	d4fc      	bmi.n	90001e64 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90001e6a:	2523      	movs	r5, #35	; 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90001e6c:	0409      	lsls	r1, r1, #16

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    if (alpha < 0xFF)
90001e6e:	2bff      	cmp	r3, #255	; 0xff
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90001e70:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90001e72:	f041 0101 	orr.w	r1, r1, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90001e76:	f04f 0502 	mov.w	r5, #2
90001e7a:	6365      	str	r5, [r4, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90001e7c:	6461      	str	r1, [r4, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
90001e7e:	63e0      	str	r0, [r4, #60]	; 0x3c
    if (alpha < 0xFF)
90001e80:	d00b      	beq.n	90001e9a <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x3a>
    {
        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
90001e82:	490a      	ldr	r1, [pc, #40]	; (90001eac <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4c>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90001e84:	6265      	str	r5, [r4, #36]	; 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
90001e86:	ea41 6303 	orr.w	r3, r1, r3, lsl #24

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
90001e8a:	4909      	ldr	r1, [pc, #36]	; (90001eb0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x50>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
90001e8c:	61e3      	str	r3, [r4, #28]
        WRITE_REG(DMA2D->FGCOLR, color);
90001e8e:	6222      	str	r2, [r4, #32]
        WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
90001e90:	6160      	str	r0, [r4, #20]
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
90001e92:	60e0      	str	r0, [r4, #12]
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
90001e94:	6021      	str	r1, [r4, #0]
        WRITE_REG(DMA2D->OCOLR, color565);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
    }
}
90001e96:	bc30      	pop	{r4, r5}
90001e98:	4770      	bx	lr
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
90001e9a:	61e5      	str	r5, [r4, #28]
        WRITE_REG(DMA2D->OCOLR, color565);
90001e9c:	9a02      	ldr	r2, [sp, #8]
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
90001e9e:	4b05      	ldr	r3, [pc, #20]	; (90001eb4 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x54>)
        WRITE_REG(DMA2D->OCOLR, color565);
90001ea0:	63a2      	str	r2, [r4, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
90001ea2:	6023      	str	r3, [r4, #0]
}
90001ea4:	bc30      	pop	{r4, r5}
90001ea6:	4770      	bx	lr
90001ea8:	52001000 	.word	0x52001000
90001eac:	00010009 	.word	0x00010009
90001eb0:	00020001 	.word	0x00020001
90001eb4:	00030001 	.word	0x00030001

90001eb8 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
90001eb8:	2001      	movs	r0, #1
90001eba:	4770      	bx	lr

90001ebc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
90001ebc:	2038      	movs	r0, #56	; 0x38
90001ebe:	4770      	bx	lr

90001ec0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
90001ec0:	ebc1 01c1 	rsb	r1, r1, r1, lsl #3
90001ec4:	eb00 00c1 	add.w	r0, r0, r1, lsl #3
    }
90001ec8:	3008      	adds	r0, #8
90001eca:	4770      	bx	lr

90001ecc <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
90001ecc:	ebc1 01c1 	rsb	r1, r1, r1, lsl #3
90001ed0:	eb00 00c1 	add.w	r0, r0, r1, lsl #3
    }
90001ed4:	3008      	adds	r0, #8
90001ed6:	4770      	bx	lr

90001ed8 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI25screen_tictactoe_gameViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
90001ed8:	2001      	movs	r0, #1
90001eda:	4770      	bx	lr

90001edc <_ZN8touchgfx9PartitionINS_4meta8TypeListI25screen_tictactoe_gameViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
90001edc:	f242 705c 	movw	r0, #10076	; 0x275c
90001ee0:	4770      	bx	lr
90001ee2:	bf00      	nop

90001ee4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI25screen_tictactoe_gameViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90001ee4:	f242 735c 	movw	r3, #10076	; 0x275c
90001ee8:	fb03 0001 	mla	r0, r3, r1, r0
    }
90001eec:	3008      	adds	r0, #8
90001eee:	4770      	bx	lr

90001ef0 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI25screen_tictactoe_gameViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90001ef0:	f242 735c 	movw	r3, #10076	; 0x275c
90001ef4:	fb03 0001 	mla	r0, r3, r1, r0
    }
90001ef8:	3008      	adds	r0, #8
90001efa:	4770      	bx	lr

90001efc <_ZNK8touchgfx9PartitionINS_4meta8TypeListI30screen_tictactoe_gamePresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
90001efc:	2001      	movs	r0, #1
90001efe:	4770      	bx	lr

90001f00 <_ZN8touchgfx9PartitionINS_4meta8TypeListI30screen_tictactoe_gamePresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
90001f00:	2010      	movs	r0, #16
90001f02:	4770      	bx	lr

90001f04 <_ZN8touchgfx9PartitionINS_4meta8TypeListI30screen_tictactoe_gamePresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90001f04:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
90001f08:	3008      	adds	r0, #8
90001f0a:	4770      	bx	lr

90001f0c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI30screen_tictactoe_gamePresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90001f0c:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
90001f10:	3008      	adds	r0, #8
90001f12:	4770      	bx	lr

90001f14 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoscreen_main_menuScreenNoTransition();
90001f14:	4608      	mov	r0, r1
90001f16:	f001 bf6f 	b.w	90003df8 <_ZN23FrontendApplicationBase38gotoscreen_main_menuScreenNoTransitionEv>
90001f1a:	bf00      	nop

90001f1c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
90001f1c:	4b03      	ldr	r3, [pc, #12]	; (90001f2c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
90001f1e:	b510      	push	{r4, lr}
90001f20:	4604      	mov	r4, r0
90001f22:	6003      	str	r3, [r0, #0]
90001f24:	f00f f8fd 	bl	90011122 <_ZN8touchgfx17AbstractPartitionD1Ev>
90001f28:	4620      	mov	r0, r4
90001f2a:	bd10      	pop	{r4, pc}
90001f2c:	900294cc 	.word	0x900294cc

90001f30 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
90001f30:	4b05      	ldr	r3, [pc, #20]	; (90001f48 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED0Ev+0x18>)
90001f32:	b510      	push	{r4, lr}
90001f34:	4604      	mov	r4, r0
90001f36:	6003      	str	r3, [r0, #0]
90001f38:	f00f f8f3 	bl	90011122 <_ZN8touchgfx17AbstractPartitionD1Ev>
90001f3c:	2140      	movs	r1, #64	; 0x40
90001f3e:	4620      	mov	r0, r4
90001f40:	f025 fdee 	bl	90027b20 <_ZdlPvj>
90001f44:	4620      	mov	r0, r4
90001f46:	bd10      	pop	{r4, pc}
90001f48:	900294cc 	.word	0x900294cc

90001f4c <_ZN8touchgfx9PartitionINS_4meta8TypeListI25screen_tictactoe_gameViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
90001f4c:	4b03      	ldr	r3, [pc, #12]	; (90001f5c <_ZN8touchgfx9PartitionINS_4meta8TypeListI25screen_tictactoe_gameViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
90001f4e:	b510      	push	{r4, lr}
90001f50:	4604      	mov	r4, r0
90001f52:	6003      	str	r3, [r0, #0]
90001f54:	f00f f8e5 	bl	90011122 <_ZN8touchgfx17AbstractPartitionD1Ev>
90001f58:	4620      	mov	r0, r4
90001f5a:	bd10      	pop	{r4, pc}
90001f5c:	90029498 	.word	0x90029498

90001f60 <_ZN8touchgfx9PartitionINS_4meta8TypeListI25screen_tictactoe_gameViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
90001f60:	4b06      	ldr	r3, [pc, #24]	; (90001f7c <_ZN8touchgfx9PartitionINS_4meta8TypeListI25screen_tictactoe_gameViewNS2_INS1_3NilES4_EEEELt1EED0Ev+0x1c>)
90001f62:	b510      	push	{r4, lr}
90001f64:	4604      	mov	r4, r0
90001f66:	6003      	str	r3, [r0, #0]
90001f68:	f00f f8db 	bl	90011122 <_ZN8touchgfx17AbstractPartitionD1Ev>
90001f6c:	f242 7164 	movw	r1, #10084	; 0x2764
90001f70:	4620      	mov	r0, r4
90001f72:	f025 fdd5 	bl	90027b20 <_ZdlPvj>
90001f76:	4620      	mov	r0, r4
90001f78:	bd10      	pop	{r4, pc}
90001f7a:	bf00      	nop
90001f7c:	90029498 	.word	0x90029498

90001f80 <_ZN8touchgfx9PartitionINS_4meta8TypeListI30screen_tictactoe_gamePresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
90001f80:	4b03      	ldr	r3, [pc, #12]	; (90001f90 <_ZN8touchgfx9PartitionINS_4meta8TypeListI30screen_tictactoe_gamePresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
90001f82:	b510      	push	{r4, lr}
90001f84:	4604      	mov	r4, r0
90001f86:	6003      	str	r3, [r0, #0]
90001f88:	f00f f8cb 	bl	90011122 <_ZN8touchgfx17AbstractPartitionD1Ev>
90001f8c:	4620      	mov	r0, r4
90001f8e:	bd10      	pop	{r4, pc}
90001f90:	90029464 	.word	0x90029464

90001f94 <_ZN8touchgfx9PartitionINS_4meta8TypeListI30screen_tictactoe_gamePresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
90001f94:	4b05      	ldr	r3, [pc, #20]	; (90001fac <_ZN8touchgfx9PartitionINS_4meta8TypeListI30screen_tictactoe_gamePresenterNS2_INS1_3NilES4_EEEELt1EED0Ev+0x18>)
90001f96:	b510      	push	{r4, lr}
90001f98:	4604      	mov	r4, r0
90001f9a:	6003      	str	r3, [r0, #0]
90001f9c:	f00f f8c1 	bl	90011122 <_ZN8touchgfx17AbstractPartitionD1Ev>
90001fa0:	2118      	movs	r1, #24
90001fa2:	4620      	mov	r0, r4
90001fa4:	f025 fdbc 	bl	90027b20 <_ZdlPvj>
90001fa8:	4620      	mov	r0, r4
90001faa:	bd10      	pop	{r4, pc}
90001fac:	90029464 	.word	0x90029464

90001fb0 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
90001fb0:	b510      	push	{r4, lr}
90001fb2:	4604      	mov	r4, r0
90001fb4:	490c      	ldr	r1, [pc, #48]	; (90001fe8 <_ZN12FrontendHeapD1Ev+0x38>)
90001fb6:	4a0d      	ldr	r2, [pc, #52]	; (90001fec <_ZN12FrontendHeapD1Ev+0x3c>)
90001fb8:	f242 7090 	movw	r0, #10128	; 0x2790
90001fbc:	f504 5300 	add.w	r3, r4, #8192	; 0x2000
90001fc0:	6021      	str	r1, [r4, #0]
90001fc2:	4420      	add	r0, r4
90001fc4:	f8c3 2790 	str.w	r2, [r3, #1936]	; 0x790
90001fc8:	f00f f8ab 	bl	90011122 <_ZN8touchgfx17AbstractPartitionD1Ev>
90001fcc:	4620      	mov	r0, r4
90001fce:	4b08      	ldr	r3, [pc, #32]	; (90001ff0 <_ZN12FrontendHeapD1Ev+0x40>)
90001fd0:	f840 3f2c 	str.w	r3, [r0, #44]!
90001fd4:	f00f f8a5 	bl	90011122 <_ZN8touchgfx17AbstractPartitionD1Ev>
90001fd8:	4620      	mov	r0, r4
90001fda:	4b06      	ldr	r3, [pc, #24]	; (90001ff4 <_ZN12FrontendHeapD1Ev+0x44>)
90001fdc:	f840 3f14 	str.w	r3, [r0, #20]!
90001fe0:	f00f f89f 	bl	90011122 <_ZN8touchgfx17AbstractPartitionD1Ev>
90001fe4:	4620      	mov	r0, r4
90001fe6:	bd10      	pop	{r4, pc}
90001fe8:	90029500 	.word	0x90029500
90001fec:	900294cc 	.word	0x900294cc
90001ff0:	90029498 	.word	0x90029498
90001ff4:	90029464 	.word	0x90029464

90001ff8 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
90001ff8:	b510      	push	{r4, lr}
class FrontendHeap : public FrontendHeapBase
90001ffa:	4c0c      	ldr	r4, [pc, #48]	; (9000202c <__tcf_0+0x34>)
90001ffc:	4a0c      	ldr	r2, [pc, #48]	; (90002030 <__tcf_0+0x38>)
90001ffe:	f504 5300 	add.w	r3, r4, #8192	; 0x2000
90002002:	490c      	ldr	r1, [pc, #48]	; (90002034 <__tcf_0+0x3c>)
90002004:	480c      	ldr	r0, [pc, #48]	; (90002038 <__tcf_0+0x40>)
90002006:	f8c3 2790 	str.w	r2, [r3, #1936]	; 0x790
9000200a:	6021      	str	r1, [r4, #0]
9000200c:	f00f f889 	bl	90011122 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002010:	4620      	mov	r0, r4
90002012:	4b0a      	ldr	r3, [pc, #40]	; (9000203c <__tcf_0+0x44>)
90002014:	f840 3f2c 	str.w	r3, [r0, #44]!
90002018:	f00f f883 	bl	90011122 <_ZN8touchgfx17AbstractPartitionD1Ev>
9000201c:	4620      	mov	r0, r4
9000201e:	4b08      	ldr	r3, [pc, #32]	; (90002040 <__tcf_0+0x48>)
        static FrontendHeap instance;
90002020:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90002024:	f840 3f14 	str.w	r3, [r0, #20]!
90002028:	f00f b87b 	b.w	90011122 <_ZN8touchgfx17AbstractPartitionD1Ev>
9000202c:	24005be4 	.word	0x24005be4
90002030:	900294cc 	.word	0x900294cc
90002034:	90029500 	.word	0x90029500
90002038:	24008374 	.word	0x24008374
9000203c:	90029498 	.word	0x90029498
90002040:	90029464 	.word	0x90029464

90002044 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
90002044:	b510      	push	{r4, lr}
90002046:	4604      	mov	r4, r0
90002048:	4a0f      	ldr	r2, [pc, #60]	; (90002088 <_ZN12FrontendHeapD0Ev+0x44>)
9000204a:	4910      	ldr	r1, [pc, #64]	; (9000208c <_ZN12FrontendHeapD0Ev+0x48>)
9000204c:	f242 7090 	movw	r0, #10128	; 0x2790
90002050:	f504 5300 	add.w	r3, r4, #8192	; 0x2000
90002054:	6021      	str	r1, [r4, #0]
90002056:	4420      	add	r0, r4
90002058:	f8c3 2790 	str.w	r2, [r3, #1936]	; 0x790
9000205c:	f00f f861 	bl	90011122 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002060:	4620      	mov	r0, r4
90002062:	4b0b      	ldr	r3, [pc, #44]	; (90002090 <_ZN12FrontendHeapD0Ev+0x4c>)
90002064:	f840 3f2c 	str.w	r3, [r0, #44]!
90002068:	f00f f85b 	bl	90011122 <_ZN8touchgfx17AbstractPartitionD1Ev>
9000206c:	4b09      	ldr	r3, [pc, #36]	; (90002094 <_ZN12FrontendHeapD0Ev+0x50>)
9000206e:	4620      	mov	r0, r4
90002070:	f840 3f14 	str.w	r3, [r0, #20]!
90002074:	f00f f855 	bl	90011122 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002078:	4620      	mov	r0, r4
9000207a:	f642 1130 	movw	r1, #10544	; 0x2930
9000207e:	f025 fd4f 	bl	90027b20 <_ZdlPvj>
90002082:	4620      	mov	r0, r4
90002084:	bd10      	pop	{r4, pc}
90002086:	bf00      	nop
90002088:	900294cc 	.word	0x900294cc
9000208c:	90029500 	.word	0x90029500
90002090:	90029498 	.word	0x90029498
90002094:	90029464 	.word	0x90029464

90002098 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 480, 272);

void touchgfx_init()
{
90002098:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000209c:	b082      	sub	sp, #8
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
9000209e:	2400      	movs	r4, #0
900020a0:	f001 fa76 	bl	90003590 <_ZN14BitmapDatabase11getInstanceEv>
900020a4:	4605      	mov	r5, r0
900020a6:	f001 fa77 	bl	90003598 <_ZN14BitmapDatabase15getInstanceSizeEv>
900020aa:	4623      	mov	r3, r4
900020ac:	4601      	mov	r1, r0
900020ae:	4622      	mov	r2, r4
900020b0:	4628      	mov	r0, r5
900020b2:	9400      	str	r4, [sp, #0]
900020b4:	f017 fd8c 	bl	90019bd0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
900020b8:	4b29      	ldr	r3, [pc, #164]	; (90002160 <touchgfx_init+0xc8>)
900020ba:	4a2a      	ldr	r2, [pc, #168]	; (90002164 <touchgfx_init+0xcc>)
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
900020bc:	4620      	mov	r0, r4
        static FrontendHeap instance;
900020be:	4c2a      	ldr	r4, [pc, #168]	; (90002168 <touchgfx_init+0xd0>)
900020c0:	601a      	str	r2, [r3, #0]
900020c2:	f002 f875 	bl	900041b0 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
900020c6:	4829      	ldr	r0, [pc, #164]	; (9000216c <touchgfx_init+0xd4>)
900020c8:	f017 fcea 	bl	90019aa0 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
900020cc:	6823      	ldr	r3, [r4, #0]
900020ce:	f3bf 8f5b 	dmb	ish
900020d2:	07db      	lsls	r3, r3, #31
900020d4:	d505      	bpl.n	900020e2 <touchgfx_init+0x4a>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
900020d6:	4826      	ldr	r0, [pc, #152]	; (90002170 <touchgfx_init+0xd8>)
}
900020d8:	b002      	add	sp, #8
900020da:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
900020de:	f7fe bbf7 	b.w	900008d0 <_ZN11TouchGFXHAL10initializeEv>
900020e2:	4620      	mov	r0, r4
900020e4:	f025 fd1e 	bl	90027b24 <__cxa_guard_acquire>
900020e8:	2800      	cmp	r0, #0
900020ea:	d0f4      	beq.n	900020d6 <touchgfx_init+0x3e>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
900020ec:	4d21      	ldr	r5, [pc, #132]	; (90002174 <touchgfx_init+0xdc>)
          screenStorage(scr),
          transitionStorage(tra),
900020ee:	4f22      	ldr	r7, [pc, #136]	; (90002178 <touchgfx_init+0xe0>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
900020f0:	4b22      	ldr	r3, [pc, #136]	; (9000217c <touchgfx_init+0xe4>)
        : presenterStorage(pres),
900020f2:	f105 0014 	add.w	r0, r5, #20
          frontendApplication(app)
900020f6:	f107 0644 	add.w	r6, r7, #68	; 0x44
          screenStorage(scr),
900020fa:	f105 082c 	add.w	r8, r5, #44	; 0x2c
900020fe:	602b      	str	r3, [r5, #0]
          transitionStorage(tra),
90002100:	60ef      	str	r7, [r5, #12]
        : presenterStorage(pres),
90002102:	6068      	str	r0, [r5, #4]
          frontendApplication(app)
90002104:	612e      	str	r6, [r5, #16]
          screenStorage(scr),
90002106:	f8c5 8008 	str.w	r8, [r5, #8]
9000210a:	f00f f80b 	bl	90011124 <_ZN8touchgfx17AbstractPartitionC1Ev>
9000210e:	4b1c      	ldr	r3, [pc, #112]	; (90002180 <touchgfx_init+0xe8>)
90002110:	4640      	mov	r0, r8
90002112:	616b      	str	r3, [r5, #20]
90002114:	f00f f806 	bl	90011124 <_ZN8touchgfx17AbstractPartitionC1Ev>
90002118:	4b1a      	ldr	r3, [pc, #104]	; (90002184 <touchgfx_init+0xec>)
9000211a:	4638      	mov	r0, r7
9000211c:	62eb      	str	r3, [r5, #44]	; 0x2c
9000211e:	f00f f801 	bl	90011124 <_ZN8touchgfx17AbstractPartitionC1Ev>
90002122:	f505 5300 	add.w	r3, r5, #8192	; 0x2000
90002126:	4a18      	ldr	r2, [pc, #96]	; (90002188 <touchgfx_init+0xf0>)
90002128:	f503 60fa 	add.w	r0, r3, #2000	; 0x7d0
9000212c:	f8c3 2790 	str.w	r2, [r3, #1936]	; 0x790
90002130:	f004 fbd8 	bl	900068e4 <_ZN5ModelC1Ev>
90002134:	462a      	mov	r2, r5
90002136:	f107 0140 	add.w	r1, r7, #64	; 0x40
9000213a:	4630      	mov	r0, r6
9000213c:	f004 fbc8 	bl	900068d0 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
90002140:	4630      	mov	r0, r6
90002142:	f001 fe59 	bl	90003df8 <_ZN23FrontendApplicationBase38gotoscreen_main_menuScreenNoTransitionEv>
        static FrontendHeap instance;
90002146:	4811      	ldr	r0, [pc, #68]	; (9000218c <touchgfx_init+0xf4>)
90002148:	f025 fd36 	bl	90027bb8 <atexit>
9000214c:	4620      	mov	r0, r4
9000214e:	f025 fcf5 	bl	90027b3c <__cxa_guard_release>
90002152:	4807      	ldr	r0, [pc, #28]	; (90002170 <touchgfx_init+0xd8>)
}
90002154:	b002      	add	sp, #8
90002156:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
9000215a:	f7fe bbb9 	b.w	900008d0 <_ZN11TouchGFXHAL10initializeEv>
9000215e:	bf00      	nop
90002160:	24039898 	.word	0x24039898
90002164:	24009348 	.word	0x24009348
90002168:	24005be0 	.word	0x24005be0
9000216c:	2400002c 	.word	0x2400002c
90002170:	240092c0 	.word	0x240092c0
90002174:	24005be4 	.word	0x24005be4
90002178:	24008374 	.word	0x24008374
9000217c:	90029500 	.word	0x90029500
90002180:	90029464 	.word	0x90029464
90002184:	90029498 	.word	0x90029498
90002188:	900294cc 	.word	0x900294cc
9000218c:	90001ff9 	.word	0x90001ff9

90002190 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
90002190:	4770      	bx	lr
90002192:	bf00      	nop

90002194 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
90002194:	4801      	ldr	r0, [pc, #4]	; (9000219c <touchgfx_taskEntry+0x8>)
90002196:	f7fe bb61 	b.w	9000085c <_ZN11TouchGFXHAL9taskEntryEv>
9000219a:	bf00      	nop
9000219c:	240092c0 	.word	0x240092c0

900021a0 <_GLOBAL__sub_I_touchgfx_init>:
}
900021a0:	b570      	push	{r4, r5, r6, lr}
{
public:

    STM32TouchController() {}
900021a2:	4b25      	ldr	r3, [pc, #148]	; (90002238 <_GLOBAL__sub_I_touchgfx_init+0x98>)
900021a4:	4c25      	ldr	r4, [pc, #148]	; (9000223c <_GLOBAL__sub_I_touchgfx_init+0x9c>)
static STM32DMA dma;
900021a6:	4e26      	ldr	r6, [pc, #152]	; (90002240 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
static LCD16bpp display;
900021a8:	4d26      	ldr	r5, [pc, #152]	; (90002244 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
900021aa:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
900021ac:	4630      	mov	r0, r6
900021ae:	f7ff fe29 	bl	90001e04 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
900021b2:	4628      	mov	r0, r5
900021b4:	f01b ffe4 	bl	9001e180 <_ZN8touchgfx8LCD16bppC1Ev>
        : dma(dmaInterface),
900021b8:	4b23      	ldr	r3, [pc, #140]	; (90002248 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
          mcuInstrumentation(0),
900021ba:	2200      	movs	r2, #0
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
900021bc:	f44f 70f0 	mov.w	r0, #480	; 0x1e0
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
900021c0:	f44f 7188 	mov.w	r1, #272	; 0x110
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
900021c4:	62da      	str	r2, [r3, #44]	; 0x2c
900021c6:	861a      	strh	r2, [r3, #48]	; 0x30
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
900021c8:	655a      	str	r2, [r3, #84]	; 0x54
          useAuxiliaryLCD(false),
900021ca:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
          lastY(0),
900021ce:	665a      	str	r2, [r3, #100]	; 0x64
          vSyncCompensationEnabled(false),
900021d0:	66da      	str	r2, [r3, #108]	; 0x6c
          updateMCULoad(0),
900021d2:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
          mcuInstrumentation(0),
900021d6:	e9c3 4203 	strd	r4, r2, [r3, #12]
          touchSampleRate(1),
900021da:	4c1c      	ldr	r4, [pc, #112]	; (9000224c <_GLOBAL__sub_I_touchgfx_init+0xac>)
900021dc:	669c      	str	r4, [r3, #104]	; 0x68
        instance = this;
900021de:	4c1c      	ldr	r4, [pc, #112]	; (90002250 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
900021e0:	6023      	str	r3, [r4, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
900021e2:	4c1c      	ldr	r4, [pc, #112]	; (90002254 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
900021e4:	8020      	strh	r0, [r4, #0]
900021e6:	4c1c      	ldr	r4, [pc, #112]	; (90002258 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
900021e8:	8020      	strh	r0, [r4, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
900021ea:	4c1c      	ldr	r4, [pc, #112]	; (9000225c <_GLOBAL__sub_I_touchgfx_init+0xbc>)
900021ec:	481c      	ldr	r0, [pc, #112]	; (90002260 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
900021ee:	8021      	strh	r1, [r4, #0]
900021f0:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
900021f2:	4c1c      	ldr	r4, [pc, #112]	; (90002264 <_GLOBAL__sub_I_touchgfx_init+0xc4>)
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
900021f4:	491c      	ldr	r1, [pc, #112]	; (90002268 <_GLOBAL__sub_I_touchgfx_init+0xc8>)
          requestedOrientation(ORIENTATION_LANDSCAPE),
900021f6:	481d      	ldr	r0, [pc, #116]	; (9000226c <_GLOBAL__sub_I_touchgfx_init+0xcc>)
          lcdRef(display),
900021f8:	e9c3 6501 	strd	r6, r5, [r3, #4]
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
900021fc:	f44f 7580 	mov.w	r5, #256	; 0x100
          frameBufferAllocator(0),
90002200:	e9c3 2205 	strd	r2, r2, [r3, #20]
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
90002204:	649d      	str	r5, [r3, #72]	; 0x48
            : startX(0),
90002206:	e9c3 2207 	strd	r2, r2, [r3, #28]
        : drag(), listener(0), dragThresholdValue(0)
9000220a:	e9c3 2209 	strd	r2, r2, [r3, #36]	; 0x24
          frameBuffer0(0),
9000220e:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
          frameBuffer2(0),
90002212:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
90002216:	e9c3 2213 	strd	r2, r2, [r3, #76]	; 0x4c
          lastX(0),
9000221a:	e9c3 2217 	strd	r2, r2, [r3, #92]	; 0x5c
        DISPLAY_ROTATION = rotate0;
9000221e:	7022      	strb	r2, [r4, #0]
90002220:	6019      	str	r1, [r3, #0]
90002222:	4913      	ldr	r1, [pc, #76]	; (90002270 <_GLOBAL__sub_I_touchgfx_init+0xd0>)
        : cc_consumed(0),
90002224:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
90002228:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
          cc_in(0)
9000222c:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
90002230:	67d9      	str	r1, [r3, #124]	; 0x7c
          requestedOrientation(ORIENTATION_LANDSCAPE),
90002232:	e9c3 201d 	strd	r2, r0, [r3, #116]	; 0x74
}
90002236:	bd70      	pop	{r4, r5, r6, pc}
90002238:	90028c6c 	.word	0x90028c6c
9000223c:	24008514 	.word	0x24008514
90002240:	24008518 	.word	0x24008518
90002244:	2400934c 	.word	0x2400934c
90002248:	240092c0 	.word	0x240092c0
9000224c:	01000001 	.word	0x01000001
90002250:	24039834 	.word	0x24039834
90002254:	24039828 	.word	0x24039828
90002258:	2403982e 	.word	0x2403982e
9000225c:	2403982a 	.word	0x2403982a
90002260:	24039830 	.word	0x24039830
90002264:	2403982c 	.word	0x2403982c
90002268:	90028dfc 	.word	0x90028dfc
9000226c:	01010000 	.word	0x01010000
90002270:	90028c44 	.word	0x90028c44

90002274 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
90002274:	4801      	ldr	r0, [pc, #4]	; (9000227c <_GLOBAL__sub_D_touchgfx_init+0x8>)
90002276:	f7ff bb49 	b.w	9000190c <_ZN8STM32DMAD1Ev>
9000227a:	bf00      	nop
9000227c:	24008518 	.word	0x24008518

90002280 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
     * drawn by the widget.
     */
    virtual void invalidateContent() const
    {
        // Consider checking if *this is in the draw chain
        if (visible)
90002280:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
90002284:	b112      	cbz	r2, 9000228c <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
        {
            invalidate();
90002286:	6803      	ldr	r3, [r0, #0]
90002288:	695b      	ldr	r3, [r3, #20]
9000228a:	4718      	bx	r3
        }
    }
9000228c:	4770      	bx	lr
9000228e:	bf00      	nop

90002290 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
90002290:	2000      	movs	r0, #0
90002292:	4770      	bx	lr

90002294 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
90002294:	8081      	strh	r1, [r0, #4]
    }
90002296:	4770      	bx	lr

90002298 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
90002298:	80c1      	strh	r1, [r0, #6]
    }
9000229a:	4770      	bx	lr

9000229c <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
9000229c:	8101      	strh	r1, [r0, #8]
    }
9000229e:	4770      	bx	lr

900022a0 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
900022a0:	8141      	strh	r1, [r0, #10]
    }
900022a2:	4770      	bx	lr

900022a4 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
900022a4:	4770      	bx	lr
900022a6:	bf00      	nop

900022a8 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
900022a8:	4770      	bx	lr
900022aa:	bf00      	nop

900022ac <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
900022ac:	4770      	bx	lr
900022ae:	bf00      	nop

900022b0 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
900022b0:	4770      	bx	lr
900022b2:	bf00      	nop

900022b4 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
900022b4:	4770      	bx	lr
900022b6:	bf00      	nop

900022b8 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
    {
        moveRelative(x - rect.x, y - rect.y);
900022b8:	f8b0 c006 	ldrh.w	ip, [r0, #6]
900022bc:	6803      	ldr	r3, [r0, #0]
900022be:	eba2 020c 	sub.w	r2, r2, ip
900022c2:	f8b0 c004 	ldrh.w	ip, [r0, #4]
900022c6:	6d5b      	ldr	r3, [r3, #84]	; 0x54
900022c8:	eba1 010c 	sub.w	r1, r1, ip
900022cc:	b212      	sxth	r2, r2
900022ce:	b209      	sxth	r1, r1
900022d0:	4718      	bx	r3
900022d2:	bf00      	nop

900022d4 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
900022d4:	6813      	ldr	r3, [r2, #0]
        cachedVisibleRect.x = UNCACHED_INDICATOR;
900022d6:	f64f 7cff 	movw	ip, #65535	; 0xffff
        cachedAbsX = UNCACHED_INDICATOR;
900022da:	f04f 31ff 	mov.w	r1, #4294967295
        cachedVisibleRect.x = UNCACHED_INDICATOR;
900022de:	f8a0 c00c 	strh.w	ip, [r0, #12]
        nextDrawChainElement = *nextPreviousElement;
900022e2:	e9c0 3107 	strd	r3, r1, [r0, #28]
        *nextPreviousElement = this;
900022e6:	6010      	str	r0, [r2, #0]
    }
900022e8:	4770      	bx	lr
900022ea:	bf00      	nop

900022ec <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
900022ec:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
900022f0:	b11a      	cbz	r2, 900022fa <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
900022f2:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
900022f6:	b102      	cbz	r2, 900022fa <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
900022f8:	6018      	str	r0, [r3, #0]
        }
    }
900022fa:	4770      	bx	lr

900022fc <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
900022fc:	2000      	movs	r0, #0
900022fe:	4770      	bx	lr

90002300 <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @return True if the painter is ready to paint, false otherwise.
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
90002300:	4603      	mov	r3, r0
    {
        widgetWidth = widgetRect.width;
90002302:	888a      	ldrh	r2, [r1, #4]
        return true;
    }
90002304:	2001      	movs	r0, #1
        widgetWidth = widgetRect.width;
90002306:	809a      	strh	r2, [r3, #4]
    }
90002308:	4770      	bx	lr
9000230a:	bf00      	nop

9000230c <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
9000230c:	4770      	bx	lr
9000230e:	bf00      	nop

90002310 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
90002310:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
90002314:	4770      	bx	lr
90002316:	bf00      	nop

90002318 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
90002318:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
9000231c:	4770      	bx	lr
9000231e:	bf00      	nop

90002320 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90002320:	f04f 0c00 	mov.w	ip, #0
        return rect.width;
90002324:	688a      	ldr	r2, [r1, #8]
90002326:	f8c0 c000 	str.w	ip, [r0]
9000232a:	6042      	str	r2, [r0, #4]
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
9000232c:	4770      	bx	lr
9000232e:	bf00      	nop

90002330 <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
90002330:	2200      	movs	r2, #0
90002332:	6002      	str	r2, [r0, #0]
90002334:	6042      	str	r2, [r0, #4]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
90002336:	4770      	bx	lr

90002338 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
    }

    virtual Bitmap::BitmapFormat framebufferFormat() const
    {
        return Bitmap::RGB565;
    }
90002338:	2000      	movs	r0, #0
9000233a:	4770      	bx	lr

9000233c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
9000233c:	4b03      	ldr	r3, [pc, #12]	; (9000234c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
9000233e:	2290      	movs	r2, #144	; 0x90
90002340:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
90002344:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
90002348:	4770      	bx	lr
9000234a:	bf00      	nop
9000234c:	e000e100 	.word	0xe000e100

90002350 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
90002350:	4a09      	ldr	r2, [pc, #36]	; (90002378 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
90002352:	490a      	ldr	r1, [pc, #40]	; (9000237c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
90002354:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
90002356:	480a      	ldr	r0, [pc, #40]	; (90002380 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
90002358:	f3c3 030a 	ubfx	r3, r3, #0, #11
9000235c:	3b01      	subs	r3, #1
9000235e:	b29b      	uxth	r3, r3
90002360:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
90002362:	6911      	ldr	r1, [r2, #16]
90002364:	f3c1 010a 	ubfx	r1, r1, #0, #11
90002368:	3901      	subs	r1, #1
9000236a:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
9000236c:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
9000236e:	6b53      	ldr	r3, [r2, #52]	; 0x34
90002370:	f043 0301 	orr.w	r3, r3, #1
90002374:	6353      	str	r3, [r2, #52]	; 0x34
}
90002376:	4770      	bx	lr
90002378:	50001000 	.word	0x50001000
9000237c:	240093d2 	.word	0x240093d2
90002380:	240093d0 	.word	0x240093d0

90002384 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    dma.start();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
90002384:	4b01      	ldr	r3, [pc, #4]	; (9000238c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
90002386:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
9000238a:	4770      	bx	lr
9000238c:	50001000 	.word	0x50001000

90002390 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
90002390:	4b02      	ldr	r3, [pc, #8]	; (9000239c <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
90002392:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
90002394:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
90002398:	625a      	str	r2, [r3, #36]	; 0x24
}
9000239a:	4770      	bx	lr
9000239c:	50001000 	.word	0x50001000

900023a0 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setRGBBufferEPhj>:

    virtual void setRGBBuffer(uint8_t* buffer, size_t sizeOfBuffer)
    {
        // Running in UI thread / main

        bufferRGB = buffer;
900023a0:	e9c0 120c 	strd	r1, r2, [r0, #48]	; 0x30
        topBufferRGB = bufferRGB;
900023a4:	6381      	str	r1, [r0, #56]	; 0x38
        sizeBufferRGB = sizeOfBuffer;
    }
900023a6:	4770      	bx	lr

900023a8 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EED1Ev>:
class DedicatedBufferController : public touchgfx::VideoController
900023a8:	4770      	bx	lr
900023aa:	bf00      	nop

900023ac <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE>:
        mjpegDecoders[handle]->setVideoData(reader);
900023ac:	eb00 0081 	add.w	r0, r0, r1, lsl #2
900023b0:	4611      	mov	r1, r2
900023b2:	6840      	ldr	r0, [r0, #4]
900023b4:	6803      	ldr	r3, [r0, #0]
900023b6:	68db      	ldr	r3, [r3, #12]
900023b8:	4718      	bx	r3
900023ba:	bf00      	nop

900023bc <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EED0Ev>:
class DedicatedBufferController : public touchgfx::VideoController
900023bc:	b510      	push	{r4, lr}
900023be:	4604      	mov	r4, r0
900023c0:	2148      	movs	r1, #72	; 0x48
900023c2:	f025 fbad 	bl	90027b20 <_ZdlPvj>
900023c6:	4620      	mov	r0, r4
900023c8:	bd10      	pop	{r4, pc}
900023ca:	bf00      	nop

900023cc <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm>:
        mjpegDecoders[handle]->getVideoInfo(data);
    }

    virtual bool getIsPlaying(const Handle handle)
    {
        assert(handle < no_streams);
900023cc:	b911      	cbnz	r1, 900023d4 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x8>
        Stream& stream = streams[handle];
        return stream.isPlaying;
    }
900023ce:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
900023d2:	4770      	bx	lr
    virtual bool getIsPlaying(const Handle handle)
900023d4:	b508      	push	{r3, lr}
        assert(handle < no_streams);
900023d6:	4a03      	ldr	r2, [pc, #12]	; (900023e4 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x18>)
900023d8:	f44f 71b8 	mov.w	r1, #368	; 0x170
900023dc:	4b02      	ldr	r3, [pc, #8]	; (900023e8 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x1c>)
900023de:	4803      	ldr	r0, [pc, #12]	; (900023ec <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x20>)
900023e0:	f025 fbcc 	bl	90027b7c <__assert_func>
900023e4:	90029520 	.word	0x90029520
900023e8:	9002950c 	.word	0x9002950c
900023ec:	900296ac 	.word	0x900296ac

900023f0 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE>:
        assert(handle < no_streams);
900023f0:	b921      	cbnz	r1, 900023fc <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0xc>
        mjpegDecoders[handle]->getVideoInfo(data);
900023f2:	6840      	ldr	r0, [r0, #4]
900023f4:	4611      	mov	r1, r2
900023f6:	6803      	ldr	r3, [r0, #0]
900023f8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
900023fa:	4718      	bx	r3
        assert(handle < no_streams);
900023fc:	4b03      	ldr	r3, [pc, #12]	; (9000240c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x1c>)
900023fe:	f44f 71b5 	mov.w	r1, #362	; 0x16a
90002402:	4a03      	ldr	r2, [pc, #12]	; (90002410 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x20>)
90002404:	4803      	ldr	r0, [pc, #12]	; (90002414 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x24>)
    virtual void getVideoInformation(const Handle handle, touchgfx::VideoInformation* data)
90002406:	b510      	push	{r4, lr}
        assert(handle < no_streams);
90002408:	f025 fbb8 	bl	90027b7c <__assert_func>
9000240c:	9002950c 	.word	0x9002950c
90002410:	900296f0 	.word	0x900296f0
90002414:	900296ac 	.word	0x900296ac

90002418 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm>:
        assert(handle < no_streams);
90002418:	b909      	cbnz	r1, 9000241e <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x6>
    }
9000241a:	68c0      	ldr	r0, [r0, #12]
9000241c:	4770      	bx	lr
    virtual uint32_t getCurrentFrameNumber(const Handle handle)
9000241e:	b508      	push	{r3, lr}
        assert(handle < no_streams);
90002420:	4a02      	ldr	r2, [pc, #8]	; (9000242c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x14>)
90002422:	2179      	movs	r1, #121	; 0x79
90002424:	4b02      	ldr	r3, [pc, #8]	; (90002430 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x18>)
90002426:	4803      	ldr	r0, [pc, #12]	; (90002434 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x1c>)
90002428:	f025 fba8 	bl	90027b7c <__assert_func>
9000242c:	900298a0 	.word	0x900298a0
90002430:	9002950c 	.word	0x9002950c
90002434:	900296ac 	.word	0x900296ac

90002438 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm>:
    virtual void setVideoData(const Handle handle, const uint8_t* movie, const uint32_t length)
90002438:	b510      	push	{r4, lr}
        assert(handle < no_streams);
9000243a:	460c      	mov	r4, r1
9000243c:	b949      	cbnz	r1, 90002452 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x1a>
9000243e:	4611      	mov	r1, r2
90002440:	461a      	mov	r2, r3
        mjpegDecoders[handle]->setVideoData(movie, length);
90002442:	6843      	ldr	r3, [r0, #4]
        stream.frameNumber = 0;
90002444:	60c4      	str	r4, [r0, #12]
        mjpegDecoders[handle]->setVideoData(movie, length);
90002446:	681c      	ldr	r4, [r3, #0]
90002448:	4618      	mov	r0, r3
9000244a:	68a3      	ldr	r3, [r4, #8]
    }
9000244c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        mjpegDecoders[handle]->setVideoData(movie, length);
90002450:	4718      	bx	r3
        assert(handle < no_streams);
90002452:	4b03      	ldr	r3, [pc, #12]	; (90002460 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x28>)
90002454:	2190      	movs	r1, #144	; 0x90
90002456:	4a03      	ldr	r2, [pc, #12]	; (90002464 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x2c>)
90002458:	4803      	ldr	r0, [pc, #12]	; (90002468 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x30>)
9000245a:	f025 fb8f 	bl	90027b7c <__assert_func>
9000245e:	bf00      	nop
90002460:	9002950c 	.word	0x9002950c
90002464:	90029a54 	.word	0x90029a54
90002468:	900296ac 	.word	0x900296ac

9000246c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm>:
        assert(handle < no_streams);
9000246c:	b921      	cbnz	r1, 90002478 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0xc>
        stream.tickCount = 0;
9000246e:	e9c0 1104 	strd	r1, r1, [r0, #16]
        stream.frame_rate_video = video_frames;
90002472:	e9c0 3206 	strd	r3, r2, [r0, #24]
90002476:	4770      	bx	lr
    virtual void setFrameRate(const Handle handle, uint32_t ui_frames, uint32_t video_frames)
90002478:	b508      	push	{r3, lr}
        assert(handle < no_streams);
9000247a:	4a03      	ldr	r2, [pc, #12]	; (90002488 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x1c>)
9000247c:	2182      	movs	r1, #130	; 0x82
9000247e:	4b03      	ldr	r3, [pc, #12]	; (9000248c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x20>)
90002480:	4803      	ldr	r0, [pc, #12]	; (90002490 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x24>)
90002482:	f025 fb7b 	bl	90027b7c <__assert_func>
90002486:	bf00      	nop
90002488:	90029c30 	.word	0x90029c30
9000248c:	9002950c 	.word	0x9002950c
90002490:	900296ac 	.word	0x900296ac

90002494 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
90002494:	f00f b928 	b.w	900116e8 <_ZN8touchgfx3HAL10beginFrameEv>

90002498 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE>:
        if (firstDrawThisFrame)
90002498:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
9000249c:	b903      	cbnz	r3, 900024a0 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x8>
9000249e:	4770      	bx	lr
    virtual void draw(const Handle handle, const touchgfx::Rect& invalidatedArea, const touchgfx::VideoWidget& widget)
900024a0:	b510      	push	{r4, lr}
            MUTEX_LOCK(mutexBuffers);
900024a2:	f04f 31ff 	mov.w	r1, #4294967295
900024a6:	4604      	mov	r4, r0
900024a8:	6c40      	ldr	r0, [r0, #68]	; 0x44
900024aa:	f00b ff17 	bl	9000e2dc <osMutexAcquire>
            firstDrawThisFrame = false;
900024ae:	f44f 7380 	mov.w	r3, #256	; 0x100
900024b2:	f8a4 303d 	strh.w	r3, [r4, #61]	; 0x3d
    }
900024b6:	bd10      	pop	{r4, pc}

900024b8 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21unregisterVideoWidgetEm>:
    virtual void unregisterVideoWidget(const Handle handle)
900024b8:	b538      	push	{r3, r4, r5, lr}
900024ba:	460c      	mov	r4, r1
900024bc:	4605      	mov	r5, r0
        MUTEX_LOCK(mutexBuffers);
900024be:	f04f 31ff 	mov.w	r1, #4294967295
900024c2:	6c40      	ldr	r0, [r0, #68]	; 0x44
        streams[handle].isActive = false;
900024c4:	eb04 04c4 	add.w	r4, r4, r4, lsl #3
        MUTEX_LOCK(mutexBuffers);
900024c8:	f00b ff08 	bl	9000e2dc <osMutexAcquire>
        MUTEX_UNLOCK(mutexBuffers);
900024cc:	6c68      	ldr	r0, [r5, #68]	; 0x44
900024ce:	f00b ff29 	bl	9000e324 <osMutexRelease>
        streams[handle].isActive = false;
900024d2:	2300      	movs	r3, #0
900024d4:	eb05 0484 	add.w	r4, r5, r4, lsl #2
900024d8:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
        if (oneIsActive == false)
900024dc:	f895 3028 	ldrb.w	r3, [r5, #40]	; 0x28
900024e0:	b90b      	cbnz	r3, 900024e6 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21unregisterVideoWidgetEm+0x2e>
            topBufferRGB = bufferRGB;
900024e2:	6b2b      	ldr	r3, [r5, #48]	; 0x30
900024e4:	63ab      	str	r3, [r5, #56]	; 0x38
    }
900024e6:	bd38      	pop	{r3, r4, r5, pc}

900024e8 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
{
900024e8:	b570      	push	{r4, r5, r6, lr}
            if (stream.isPlaying || stream.isShowingOneFrame)
900024ea:	4c1c      	ldr	r4, [pc, #112]	; (9000255c <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x74>)
900024ec:	4605      	mov	r5, r0
    HAL::endFrame();
900024ee:	f00f f907 	bl	90011700 <_ZN8touchgfx3HAL8endFrameEv>
900024f2:	f894 3029 	ldrb.w	r3, [r4, #41]	; 0x29
900024f6:	b98b      	cbnz	r3, 9000251c <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x34>
900024f8:	f894 302a 	ldrb.w	r3, [r4, #42]	; 0x2a
900024fc:	b973      	cbnz	r3, 9000251c <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x34>
        firstDrawThisFrame = true;
900024fe:	2301      	movs	r3, #1
        SEM_POST(semDecode);
90002500:	6c20      	ldr	r0, [r4, #64]	; 0x40
        firstDrawThisFrame = true;
90002502:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        SEM_POST(semDecode);
90002506:	f00b ffb3 	bl	9000e470 <osSemaphoreRelease>
        if (uiHasMutex)
9000250a:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
9000250e:	b9f3      	cbnz	r3, 9000254e <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x66>
    dma.start();
90002510:	6868      	ldr	r0, [r5, #4]
90002512:	6803      	ldr	r3, [r0, #0]
}
90002514:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    dma.start();
90002518:	691b      	ldr	r3, [r3, #16]
9000251a:	4718      	bx	r3
    bool decodeForNextTick(Stream& stream)
    {
        // Running in UI thread

        // Compare tickCount/frameCount to frame_rate_ticks/frame_rate_video
        if ((stream.tickCount * stream.frame_rate_video) >= (stream.frame_rate_ticks * stream.frameCount))
9000251c:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
90002520:	69e1      	ldr	r1, [r4, #28]
90002522:	6922      	ldr	r2, [r4, #16]
90002524:	fb00 f303 	mul.w	r3, r0, r3
90002528:	fb01 f202 	mul.w	r2, r1, r2
9000252c:	4293      	cmp	r3, r2
9000252e:	d3e6      	bcc.n	900024fe <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x16>
        {
            if (allowSkipFrames)
90002530:	f894 003c 	ldrb.w	r0, [r4, #60]	; 0x3c
90002534:	b138      	cbz	r0, 90002546 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x5e>
            {
                stream.skip_frames = (stream.tickCount * stream.frame_rate_video - stream.frame_rate_ticks * stream.frameCount) / stream.frame_rate_ticks;
90002536:	1a9b      	subs	r3, r3, r2
90002538:	fbb3 f2f1 	udiv	r2, r3, r1
                if (stream.skip_frames > 0)
9000253c:	4299      	cmp	r1, r3
                {
                    stream.skip_frames--;
9000253e:	bf98      	it	ls
90002540:	f102 32ff 	addls.w	r2, r2, #4294967295
90002544:	6262      	str	r2, [r4, #36]	; 0x24
                    stream.doDecode = true;
90002546:	2301      	movs	r3, #1
90002548:	f884 302e 	strb.w	r3, [r4, #46]	; 0x2e
        for (uint32_t i = 0; i < no_streams; i++)
9000254c:	e7d7      	b.n	900024fe <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x16>
            MUTEX_UNLOCK(mutexBuffers);
9000254e:	6c60      	ldr	r0, [r4, #68]	; 0x44
90002550:	f00b fee8 	bl	9000e324 <osMutexRelease>
            uiHasMutex = false;
90002554:	2300      	movs	r3, #0
90002556:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
9000255a:	e7d9      	b.n	90002510 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x28>
9000255c:	2400941c 	.word	0x2400941c

90002560 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
90002560:	f00f b88c 	b.w	9001167c <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

90002564 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
90002564:	f00f b9ed 	b.w	90011942 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

90002568 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv>:
{
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then
    // the DCache must be flushed prior to DMA2D accessing it. That's done
    // using the function SCB_CleanInvalidateDCache(). Remember to enable "CPU Cache" in the
    // "System Core" settings for "Cortex M7" in CubeMX in order for this function call to work.
    if (SCB->CCR & SCB_CCR_DC_Msk)
90002568:	4814      	ldr	r0, [pc, #80]	; (900025bc <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x54>)
9000256a:	6943      	ldr	r3, [r0, #20]
9000256c:	03d9      	lsls	r1, r3, #15
9000256e:	d523      	bpl.n	900025b8 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x50>
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
90002570:	2300      	movs	r3, #0
{
90002572:	b510      	push	{r4, lr}
90002574:	f8c0 3084 	str.w	r3, [r0, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
90002578:	f3bf 8f4f 	dsb	sy
    ccsidr = SCB->CCSIDR;
9000257c:	f8d0 3080 	ldr.w	r3, [r0, #128]	; 0x80
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90002580:	f643 74e0 	movw	r4, #16352	; 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
90002584:	f3c3 3c4e 	ubfx	ip, r3, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90002588:	f3c3 0ec9 	ubfx	lr, r3, #3, #10
9000258c:	ea4f 1c4c 	mov.w	ip, ip, lsl #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90002590:	ea0c 0104 	and.w	r1, ip, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90002594:	4673      	mov	r3, lr
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90002596:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
      } while (ways-- != 0U);
9000259a:	3b01      	subs	r3, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
9000259c:	f8c0 2274 	str.w	r2, [r0, #628]	; 0x274
      } while (ways-- != 0U);
900025a0:	1c5a      	adds	r2, r3, #1
900025a2:	d1f8      	bne.n	90002596 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x2e>
    } while(sets-- != 0U);
900025a4:	f1ac 0c20 	sub.w	ip, ip, #32
900025a8:	f11c 0f20 	cmn.w	ip, #32
900025ac:	d1f0      	bne.n	90002590 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x28>
900025ae:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900025b2:	f3bf 8f6f 	isb	sy
    {
        SCB_CleanInvalidateDCache();
    }
}
900025b6:	bd10      	pop	{r4, pc}
900025b8:	4770      	bx	lr
900025ba:	bf00      	nop
900025bc:	e000ed00 	.word	0xe000ed00

900025c0 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm>:
    virtual void setCommand(const Handle handle, Command cmd, uint32_t param)
900025c0:	b510      	push	{r4, lr}
        assert(handle < no_streams);
900025c2:	2900      	cmp	r1, #0
900025c4:	d133      	bne.n	9000262e <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x6e>
900025c6:	4604      	mov	r4, r0
        switch (cmd)
900025c8:	2a05      	cmp	r2, #5
900025ca:	d809      	bhi.n	900025e0 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x20>
900025cc:	e8df f002 	tbb	[pc, r2]
900025d0:	27221e0f 	.word	0x27221e0f
900025d4:	0903      	.short	0x0903
            stream.isPlaying = false;
900025d6:	2200      	movs	r2, #0
            stream.seek_to_frame = 1;
900025d8:	2301      	movs	r3, #1
            stream.isPlaying = false;
900025da:	f880 2029 	strb.w	r2, [r0, #41]	; 0x29
            stream.seek_to_frame = 1;
900025de:	6203      	str	r3, [r0, #32]
    }
900025e0:	bd10      	pop	{r4, pc}
            stream.repeat = (param > 0);
900025e2:	3b00      	subs	r3, #0
900025e4:	bf18      	it	ne
900025e6:	2301      	movne	r3, #1
900025e8:	f880 302d 	strb.w	r3, [r0, #45]	; 0x2d
    }
900025ec:	bd10      	pop	{r4, pc}
            if (mjpegDecoders[handle]->hasVideo())
900025ee:	6840      	ldr	r0, [r0, #4]
900025f0:	6803      	ldr	r3, [r0, #0]
900025f2:	691b      	ldr	r3, [r3, #16]
900025f4:	4798      	blx	r3
900025f6:	2800      	cmp	r0, #0
900025f8:	d0f2      	beq.n	900025e0 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x20>
                stream.isPlaying = true;
900025fa:	2201      	movs	r2, #1
                stream.frameCount = 0;
900025fc:	2300      	movs	r3, #0
                stream.isPlaying = true;
900025fe:	f884 2029 	strb.w	r2, [r4, #41]	; 0x29
                stream.hasMoreFrames = true; // Assume more frames, lowered on end
90002602:	f884 202c 	strb.w	r2, [r4, #44]	; 0x2c
                stream.tickCount = 0;
90002606:	e9c4 3304 	strd	r3, r3, [r4, #16]
    }
9000260a:	bd10      	pop	{r4, pc}
            stream.isPlaying = false;
9000260c:	2300      	movs	r3, #0
9000260e:	f880 3029 	strb.w	r3, [r0, #41]	; 0x29
    }
90002612:	bd10      	pop	{r4, pc}
            stream.frameCount = 0;
90002614:	2200      	movs	r2, #0
            stream.seek_to_frame = param;
90002616:	6203      	str	r3, [r0, #32]
            stream.tickCount = 0;
90002618:	e9c0 2204 	strd	r2, r2, [r0, #16]
    }
9000261c:	bd10      	pop	{r4, pc}
            stream.frameCount = 0;
9000261e:	2200      	movs	r2, #0
            stream.isShowingOneFrame = true;
90002620:	2101      	movs	r1, #1
            stream.seek_to_frame = param;
90002622:	6203      	str	r3, [r0, #32]
            stream.isShowingOneFrame = true;
90002624:	f880 102a 	strb.w	r1, [r0, #42]	; 0x2a
            stream.tickCount = 0;
90002628:	e9c0 2204 	strd	r2, r2, [r0, #16]
    }
9000262c:	bd10      	pop	{r4, pc}
        assert(handle < no_streams);
9000262e:	4b03      	ldr	r3, [pc, #12]	; (9000263c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x7c>)
90002630:	21a2      	movs	r1, #162	; 0xa2
90002632:	4a03      	ldr	r2, [pc, #12]	; (90002640 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x80>)
90002634:	4803      	ldr	r0, [pc, #12]	; (90002644 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x84>)
90002636:	f025 faa1 	bl	90027b7c <__assert_func>
9000263a:	bf00      	nop
9000263c:	9002950c 	.word	0x9002950c
90002640:	90029dec 	.word	0x90029dec
90002644:	900296ac 	.word	0x900296ac

90002648 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE>:
    virtual bool updateFrame(const Handle handle, touchgfx::VideoWidget& widget)
90002648:	b510      	push	{r4, lr}
        assert(handle < no_streams);
9000264a:	bb39      	cbnz	r1, 9000269c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x54>
        if (stream.isPlaying)
9000264c:	f890 3029 	ldrb.w	r3, [r0, #41]	; 0x29
90002650:	4604      	mov	r4, r0
90002652:	b923      	cbnz	r3, 9000265e <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x16>
        if (stream.doInvalidateOnNextTick)
90002654:	f894 302b 	ldrb.w	r3, [r4, #43]	; 0x2b
90002658:	b963      	cbnz	r3, 90002674 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x2c>
        return true;
9000265a:	2001      	movs	r0, #1
    }
9000265c:	bd10      	pop	{r4, pc}
        return vSyncForFrame;
9000265e:	4912      	ldr	r1, [pc, #72]	; (900026a8 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x60>)
            stream.tickCount += HAL::getInstance()->getLCDRefreshCount();
90002660:	6943      	ldr	r3, [r0, #20]
90002662:	6809      	ldr	r1, [r1, #0]
90002664:	f891 106b 	ldrb.w	r1, [r1, #107]	; 0x6b
90002668:	440b      	add	r3, r1
9000266a:	6143      	str	r3, [r0, #20]
        if (stream.doInvalidateOnNextTick)
9000266c:	f894 302b 	ldrb.w	r3, [r4, #43]	; 0x2b
90002670:	2b00      	cmp	r3, #0
90002672:	d0f2      	beq.n	9000265a <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x12>
     *
     * @param [in] videoBuffer Video buffer.
     */
    void setVideoBuffer(uint8_t* const videoBuffer)
    {
        buffer = videoBuffer;
90002674:	68a1      	ldr	r1, [r4, #8]
            widget.invalidate();
90002676:	4610      	mov	r0, r2
90002678:	6813      	ldr	r3, [r2, #0]
9000267a:	695b      	ldr	r3, [r3, #20]
9000267c:	6311      	str	r1, [r2, #48]	; 0x30
9000267e:	4798      	blx	r3
            stream.doInvalidateOnNextTick = false;
90002680:	2300      	movs	r3, #0
            if (!stream.hasMoreFrames && !stream.repeat)
90002682:	f894 002c 	ldrb.w	r0, [r4, #44]	; 0x2c
            stream.doInvalidateOnNextTick = false;
90002686:	f884 302b 	strb.w	r3, [r4, #43]	; 0x2b
            if (!stream.hasMoreFrames && !stream.repeat)
9000268a:	2800      	cmp	r0, #0
9000268c:	d1e5      	bne.n	9000265a <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x12>
9000268e:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
90002692:	2b00      	cmp	r3, #0
90002694:	d1e2      	bne.n	9000265c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x14>
                stream.isPlaying = false;
90002696:	f884 0029 	strb.w	r0, [r4, #41]	; 0x29
    }
9000269a:	bd10      	pop	{r4, pc}
        assert(handle < no_streams);
9000269c:	4b03      	ldr	r3, [pc, #12]	; (900026ac <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x64>)
9000269e:	21d0      	movs	r1, #208	; 0xd0
900026a0:	4a03      	ldr	r2, [pc, #12]	; (900026b0 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x68>)
900026a2:	4804      	ldr	r0, [pc, #16]	; (900026b4 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x6c>)
900026a4:	f025 fa6a 	bl	90027b7c <__assert_func>
900026a8:	24039834 	.word	0x24039834
900026ac:	9002950c 	.word	0x9002950c
900026b0:	90029fc0 	.word	0x90029fc0
900026b4:	900296ac 	.word	0x900296ac

900026b8 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE>:
    {
        // Running in UI thread

        for (uint32_t i = 0; i < no_streams; i++)
        {
            if (streams[i].isActive == false)
900026b8:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
    virtual Handle registerVideoWidget(touchgfx::VideoWidget& widget)
900026bc:	b570      	push	{r4, r5, r6, lr}
            if (streams[i].isActive == false)
900026be:	b9fb      	cbnz	r3, 90002700 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x48>
            {
                // Reset stream parameters
                streams[i] = Stream();
900026c0:	2201      	movs	r2, #1
        if (topBufferRGB + sizeOfOneDecodeBuffer > (bufferRGB + sizeBufferRGB))
900026c2:	6b85      	ldr	r5, [r0, #56]	; 0x38
                streams[i] = Stream();
900026c4:	60c3      	str	r3, [r0, #12]
900026c6:	f8a0 202d 	strh.w	r2, [r0, #45]	; 0x2d
        if (topBufferRGB + sizeOfOneDecodeBuffer > (bufferRGB + sizeBufferRGB))
900026ca:	f505 2487 	add.w	r4, r5, #276480	; 0x43800
        streams[handle].isActive = true;
900026ce:	f880 2028 	strb.w	r2, [r0, #40]	; 0x28
                streams[i] = Stream();
900026d2:	6103      	str	r3, [r0, #16]
900026d4:	6143      	str	r3, [r0, #20]
900026d6:	6183      	str	r3, [r0, #24]
900026d8:	61c3      	str	r3, [r0, #28]
900026da:	6203      	str	r3, [r0, #32]
900026dc:	6243      	str	r3, [r0, #36]	; 0x24
900026de:	f8c0 3029 	str.w	r3, [r0, #41]	; 0x29
        if (topBufferRGB + sizeOfOneDecodeBuffer > (bufferRGB + sizeBufferRGB))
900026e2:	e9d0 260c 	ldrd	r2, r6, [r0, #48]	; 0x30
900026e6:	4432      	add	r2, r6
900026e8:	4294      	cmp	r4, r2
900026ea:	d810      	bhi.n	9000270e <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x56>
     * @param height Height of the videoBuffer in pixels
     */
    void setVideoBufferFormat(Bitmap::BitmapFormat bufferFormat, int16_t width, int16_t height)
    {
        format = bufferFormat;
        bufferWidth = width;
900026ec:	4a0b      	ldr	r2, [pc, #44]	; (9000271c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x64>)
        decodeBuffers[handle] = (uint32_t*)topBufferRGB;
900026ee:	6085      	str	r5, [r0, #8]
        topBufferRGB += sizeOfOneDecodeBuffer;
900026f0:	6384      	str	r4, [r0, #56]	; 0x38
    }
900026f2:	4618      	mov	r0, r3
        format = bufferFormat;
900026f4:	f881 3034 	strb.w	r3, [r1, #52]	; 0x34
        bufferWidth = width;
900026f8:	f8c1 2036 	str.w	r2, [r1, #54]	; 0x36
        buffer = videoBuffer;
900026fc:	630b      	str	r3, [r1, #48]	; 0x30
900026fe:	bd70      	pop	{r4, r5, r6, pc}

                return static_cast<VideoController::Handle>(i);
            }
        }

        assert(0 && "Unable to find free video stream handle!");
90002700:	4b07      	ldr	r3, [pc, #28]	; (90002720 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x68>)
90002702:	f240 11c5 	movw	r1, #453	; 0x1c5
90002706:	4a07      	ldr	r2, [pc, #28]	; (90002724 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x6c>)
90002708:	4807      	ldr	r0, [pc, #28]	; (90002728 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x70>)
9000270a:	f025 fa37 	bl	90027b7c <__assert_func>
            assert(0 && "registerVideoWidget: Unable to allocate RGB buffer!");
9000270e:	4b07      	ldr	r3, [pc, #28]	; (9000272c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x74>)
90002710:	2152      	movs	r1, #82	; 0x52
90002712:	4a07      	ldr	r2, [pc, #28]	; (90002730 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x78>)
90002714:	4804      	ldr	r0, [pc, #16]	; (90002728 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x70>)
90002716:	f025 fa31 	bl	90027b7c <__assert_func>
9000271a:	bf00      	nop
9000271c:	012001e0 	.word	0x012001e0
90002720:	9002a160 	.word	0x9002a160
90002724:	9002a190 	.word	0x9002a190
90002728:	900296ac 	.word	0x900296ac
9000272c:	9002a318 	.word	0x9002a318
90002730:	9002a354 	.word	0x9002a354

90002734 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90002734:	4b08      	ldr	r3, [pc, #32]	; (90002758 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
90002736:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
9000273a:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
9000273e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90002742:	f3bf 8f6f 	isb	sy
90002746:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
9000274a:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
9000274e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90002752:	f3bf 8f6f 	isb	sy
}
90002756:	4770      	bx	lr
90002758:	e000e100 	.word	0xe000e100

9000275c <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
9000275c:	4b03      	ldr	r3, [pc, #12]	; (9000276c <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
9000275e:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
90002762:	609a      	str	r2, [r3, #8]
90002764:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
90002768:	609a      	str	r2, [r3, #8]
}
9000276a:	4770      	bx	lr
9000276c:	e000e100 	.word	0xe000e100

90002770 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
90002770:	b538      	push	{r3, r4, r5, lr}
90002772:	4604      	mov	r4, r0
    HAL::initialize();
90002774:	f00e ffd1 	bl	9001171a <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
90002778:	6823      	ldr	r3, [r4, #0]
9000277a:	6e5d      	ldr	r5, [r3, #100]	; 0x64
9000277c:	f014 f892 	bl	900168a4 <_ZN8touchgfx11Application11getInstanceEv>
90002780:	4601      	mov	r1, r0
90002782:	4620      	mov	r0, r4
90002784:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
90002786:	6823      	ldr	r3, [r4, #0]
90002788:	4a16      	ldr	r2, [pc, #88]	; (900027e4 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x74>)
9000278a:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
9000278e:	4295      	cmp	r5, r2
90002790:	d11c      	bne.n	900027cc <_ZN20TouchGFXGeneratedHAL10initializeEv+0x5c>
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
90002792:	4a15      	ldr	r2, [pc, #84]	; (900027e8 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x78>)
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90002794:	2501      	movs	r5, #1
        setAnimationStorage(animationStorage);
90002796:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
9000279a:	f502 317f 	add.w	r1, r2, #261120	; 0x3fc00
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
9000279e:	4813      	ldr	r0, [pc, #76]	; (900027ec <_ZN20TouchGFXGeneratedHAL10initializeEv+0x7c>)
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
900027a0:	e9c4 210f 	strd	r2, r1, [r4, #60]	; 0x3c
        setAnimationStorage(animationStorage);
900027a4:	4a12      	ldr	r2, [pc, #72]	; (900027f0 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x80>)
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
900027a6:	7005      	strb	r5, [r0, #0]
900027a8:	4293      	cmp	r3, r2
900027aa:	d116      	bne.n	900027da <_ZN20TouchGFXGeneratedHAL10initializeEv+0x6a>
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
900027ac:	2300      	movs	r3, #0
        USE_ANIMATION_STORAGE = animationStorage != 0;
900027ae:	4a11      	ldr	r2, [pc, #68]	; (900027f4 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x84>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
900027b0:	6463      	str	r3, [r4, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
900027b2:	7013      	strb	r3, [r2, #0]
    void addDMA(touchgfx::DMA_Interface& dma)
    {
        this->dma = &dma;
900027b4:	6864      	ldr	r4, [r4, #4]
        sizeBufferRGB = sizeOfBuffer;
900027b6:	f44f 2087 	mov.w	r0, #276480	; 0x43800
        mjpegDecoders[index] = &decoder;
900027ba:	4b0f      	ldr	r3, [pc, #60]	; (900027f8 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x88>)
900027bc:	490f      	ldr	r1, [pc, #60]	; (900027fc <_ZN20TouchGFXGeneratedHAL10initializeEv+0x8c>)
        bufferRGB = buffer;
900027be:	4a10      	ldr	r2, [pc, #64]	; (90002800 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x90>)
900027c0:	644c      	str	r4, [r1, #68]	; 0x44
        mjpegDecoders[index] = &decoder;
900027c2:	6059      	str	r1, [r3, #4]
        bufferRGB = buffer;
900027c4:	631a      	str	r2, [r3, #48]	; 0x30
        sizeBufferRGB = sizeOfBuffer;
900027c6:	e9c3 020d 	strd	r0, r2, [r3, #52]	; 0x34
}
900027ca:	bd38      	pop	{r3, r4, r5, pc}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
900027cc:	4a0d      	ldr	r2, [pc, #52]	; (90002804 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x94>)
900027ce:	2300      	movs	r3, #0
900027d0:	4620      	mov	r0, r4
900027d2:	f5a2 317f 	sub.w	r1, r2, #261120	; 0x3fc00
900027d6:	47a8      	blx	r5
900027d8:	e7ec      	b.n	900027b4 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x44>
        setAnimationStorage(animationStorage);
900027da:	2100      	movs	r1, #0
900027dc:	4620      	mov	r0, r4
900027de:	4798      	blx	r3
900027e0:	e7e8      	b.n	900027b4 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x44>
900027e2:	bf00      	nop
900027e4:	90000805 	.word	0x90000805
900027e8:	d003fc00 	.word	0xd003fc00
900027ec:	24039832 	.word	0x24039832
900027f0:	90000675 	.word	0x90000675
900027f4:	24039833 	.word	0x24039833
900027f8:	2400941c 	.word	0x2400941c
900027fc:	240093d4 	.word	0x240093d4
90002800:	d00bf400 	.word	0xd00bf400
90002804:	d007f800 	.word	0xd007f800

90002808 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
90002808:	b510      	push	{r4, lr}
        return instance;
9000280a:	4c14      	ldr	r4, [pc, #80]	; (9000285c <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
9000280c:	6823      	ldr	r3, [r4, #0]
9000280e:	b323      	cbz	r3, 9000285a <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
90002810:	4b13      	ldr	r3, [pc, #76]	; (90002860 <HAL_LTDC_LineEventCallback+0x58>)
90002812:	4a14      	ldr	r2, [pc, #80]	; (90002864 <HAL_LTDC_LineEventCallback+0x5c>)
90002814:	6c1b      	ldr	r3, [r3, #64]	; 0x40
90002816:	8811      	ldrh	r1, [r2, #0]
90002818:	428b      	cmp	r3, r1
9000281a:	d00a      	beq.n	90002832 <HAL_LTDC_LineEventCallback+0x2a>
            GPIO::set(GPIO::VSYNC_FREQ);
        }
        else
        {
            //exiting active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
9000281c:	f009 fa2a 	bl	9000bc74 <HAL_LTDC_ProgramLineEvent>
90002820:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
90002822:	6803      	ldr	r3, [r0, #0]
90002824:	6a1b      	ldr	r3, [r3, #32]
90002826:	4798      	blx	r3

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
90002828:	2000      	movs	r0, #0
        }
    }
9000282a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
9000282e:	f7fd bec5 	b.w	900005bc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
90002832:	4b0d      	ldr	r3, [pc, #52]	; (90002868 <HAL_LTDC_LineEventCallback+0x60>)
90002834:	8819      	ldrh	r1, [r3, #0]
90002836:	f009 fa1d 	bl	9000bc74 <HAL_LTDC_ProgramLineEvent>
        return instance;
9000283a:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
9000283c:	f892 306a 	ldrb.w	r3, [r2, #106]	; 0x6a
90002840:	3301      	adds	r3, #1
90002842:	f882 306a 	strb.w	r3, [r2, #106]	; 0x6a
            OSWrappers::signalVSync();
90002846:	f7ff f83b 	bl	900018c0 <_ZN8touchgfx10OSWrappers11signalVSyncEv>
            HAL::getInstance()->swapFrameBuffers();
9000284a:	6820      	ldr	r0, [r4, #0]
9000284c:	f00f fcbe 	bl	900121cc <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            GPIO::set(GPIO::VSYNC_FREQ);
90002850:	2000      	movs	r0, #0
    }
90002852:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
90002856:	f7fd be7d 	b.w	90000554 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
    }
9000285a:	bd10      	pop	{r4, pc}
9000285c:	24039834 	.word	0x24039834
90002860:	50001000 	.word	0x50001000
90002864:	240093d2 	.word	0x240093d2
90002868:	240093d0 	.word	0x240093d0

9000286c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv>:
    void decoderTaskEntry()
9000286c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90002870:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 9000292c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0xc0>
90002874:	b083      	sub	sp, #12
                    stream.doInvalidateOnNextTick = true;
90002876:	2601      	movs	r6, #1
                    stream.hasMoreFrames = decoder->decodeNextFrame((uint8_t*)decodeBuffers[i], width, height, stride);
90002878:	f44f 7770 	mov.w	r7, #960	; 0x3c0
    void decoderTaskEntry()
9000287c:	4604      	mov	r4, r0
9000287e:	e024      	b.n	900028ca <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x5e>
                        decoder->gotoFrame(stream.seek_to_frame);
90002880:	682b      	ldr	r3, [r5, #0]
90002882:	4628      	mov	r0, r5
90002884:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90002886:	4798      	blx	r3
                        stream.seek_to_frame = 0;
90002888:	2300      	movs	r3, #0
9000288a:	6223      	str	r3, [r4, #32]
                    stream.hasMoreFrames = decoder->decodeNextFrame((uint8_t*)decodeBuffers[i], width, height, stride);
9000288c:	6829      	ldr	r1, [r5, #0]
9000288e:	f44f 7390 	mov.w	r3, #288	; 0x120
90002892:	9700      	str	r7, [sp, #0]
90002894:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
90002898:	f8d1 9014 	ldr.w	r9, [r1, #20]
9000289c:	4628      	mov	r0, r5
9000289e:	68a1      	ldr	r1, [r4, #8]
900028a0:	47c8      	blx	r9
                    stream.frameCount++;
900028a2:	6923      	ldr	r3, [r4, #16]
                    stream.hasMoreFrames = decoder->decodeNextFrame((uint8_t*)decodeBuffers[i], width, height, stride);
900028a4:	f884 002c 	strb.w	r0, [r4, #44]	; 0x2c
                    stream.frameCount++;
900028a8:	3301      	adds	r3, #1
900028aa:	6123      	str	r3, [r4, #16]
                    if (stream.hasMoreFrames)
900028ac:	2800      	cmp	r0, #0
900028ae:	d033      	beq.n	90002918 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0xac>
                        stream.frameNumber = decoder->getCurrentFrameNumber() - 1; // Points to frame after this
900028b0:	682b      	ldr	r3, [r5, #0]
900028b2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
900028b4:	4543      	cmp	r3, r8
900028b6:	d131      	bne.n	9000291c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0xb0>
        return frameNumber;
900028b8:	6968      	ldr	r0, [r5, #20]
900028ba:	3801      	subs	r0, #1
                    stream.doDecode = false;
900028bc:	2200      	movs	r2, #0
                        stream.frameNumber = decoder->getCurrentFrameNumber() - 1; // Points to frame after this
900028be:	60e0      	str	r0, [r4, #12]
                    stream.doDecode = false;
900028c0:	f884 202e 	strb.w	r2, [r4, #46]	; 0x2e
            MUTEX_UNLOCK(mutexBuffers);
900028c4:	6c60      	ldr	r0, [r4, #68]	; 0x44
900028c6:	f00b fd2d 	bl	9000e324 <osMutexRelease>
            SEM_WAIT(semDecode);
900028ca:	f04f 31ff 	mov.w	r1, #4294967295
900028ce:	6c20      	ldr	r0, [r4, #64]	; 0x40
900028d0:	f00b fd9a 	bl	9000e408 <osSemaphoreAcquire>
            MUTEX_LOCK(mutexBuffers);
900028d4:	f04f 31ff 	mov.w	r1, #4294967295
900028d8:	6c60      	ldr	r0, [r4, #68]	; 0x44
900028da:	f00b fcff 	bl	9000e2dc <osMutexAcquire>
                if (stream.doDecode)
900028de:	f894 302e 	ldrb.w	r3, [r4, #46]	; 0x2e
900028e2:	2b00      	cmp	r3, #0
900028e4:	d0ee      	beq.n	900028c4 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x58>
                    if (stream.seek_to_frame > 0)
900028e6:	6a21      	ldr	r1, [r4, #32]
                    MJPEGDecoder* const decoder = mjpegDecoders[i];
900028e8:	6865      	ldr	r5, [r4, #4]
                    stream.doInvalidateOnNextTick = true;
900028ea:	f884 602b 	strb.w	r6, [r4, #43]	; 0x2b
                    if (stream.seek_to_frame > 0)
900028ee:	2900      	cmp	r1, #0
900028f0:	d1c6      	bne.n	90002880 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x14>
                        if (stream.skip_frames > 0)
900028f2:	6a63      	ldr	r3, [r4, #36]	; 0x24
900028f4:	2b00      	cmp	r3, #0
900028f6:	d0c9      	beq.n	9000288c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x20>
                            decoder->gotoFrame(decoder->getCurrentFrameNumber() + stream.skip_frames);
900028f8:	682a      	ldr	r2, [r5, #0]
900028fa:	e9d2 9109 	ldrd	r9, r1, [r2, #36]	; 0x24
900028fe:	4541      	cmp	r1, r8
90002900:	d10f      	bne.n	90002922 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0xb6>
90002902:	6968      	ldr	r0, [r5, #20]
90002904:	18c1      	adds	r1, r0, r3
90002906:	4628      	mov	r0, r5
90002908:	47c8      	blx	r9
                            stream.frameCount += stream.skip_frames;
9000290a:	6923      	ldr	r3, [r4, #16]
9000290c:	6a61      	ldr	r1, [r4, #36]	; 0x24
                            stream.skip_frames = 0;
9000290e:	2200      	movs	r2, #0
                            stream.frameCount += stream.skip_frames;
90002910:	440b      	add	r3, r1
                            stream.skip_frames = 0;
90002912:	6262      	str	r2, [r4, #36]	; 0x24
                            stream.frameCount += stream.skip_frames;
90002914:	6123      	str	r3, [r4, #16]
90002916:	e7b9      	b.n	9000288c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x20>
90002918:	2001      	movs	r0, #1
9000291a:	e7cf      	b.n	900028bc <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x50>
                        stream.frameNumber = decoder->getCurrentFrameNumber() - 1; // Points to frame after this
9000291c:	4628      	mov	r0, r5
9000291e:	4798      	blx	r3
90002920:	e7cb      	b.n	900028ba <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x4e>
                            decoder->gotoFrame(decoder->getCurrentFrameNumber() + stream.skip_frames);
90002922:	4628      	mov	r0, r5
90002924:	4788      	blx	r1
90002926:	6a63      	ldr	r3, [r4, #36]	; 0x24
90002928:	e7ec      	b.n	90002904 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x98>
9000292a:	bf00      	nop
9000292c:	9000097d 	.word	0x9000097d

90002930 <videoTaskFunc>:
    videoController.decoderTaskEntry();
90002930:	4801      	ldr	r0, [pc, #4]	; (90002938 <videoTaskFunc+0x8>)
{
90002932:	b508      	push	{r3, lr}
    videoController.decoderTaskEntry();
90002934:	f7ff ff9a 	bl	9000286c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv>
90002938:	2400941c 	.word	0x2400941c

9000293c <_GLOBAL__sub_I_mjpegdecoder1>:
}
9000293c:	b538      	push	{r3, r4, r5, lr}
HardwareMJPEGDecoder mjpegdecoder1;
9000293e:	4815      	ldr	r0, [pc, #84]	; (90002994 <_GLOBAL__sub_I_mjpegdecoder1+0x58>)
        Stream() : frameNumber(0), frameCount(0), tickCount(0), frame_rate_video(0), frame_rate_ticks(0),
90002940:	2500      	movs	r5, #0
90002942:	f7fe fbc1 	bl	900010c8 <_ZN20HardwareMJPEGDecoderC1Ev>
          allowSkipFrames(false), firstDrawThisFrame(true), uiHasMutex(false), semDecode(0), mutexBuffers(0)
90002946:	4c14      	ldr	r4, [pc, #80]	; (90002998 <_GLOBAL__sub_I_mjpegdecoder1+0x5c>)
90002948:	4914      	ldr	r1, [pc, #80]	; (9000299c <_GLOBAL__sub_I_mjpegdecoder1+0x60>)
            doInvalidateOnNextTick(false), hasMoreFrames(false), repeat(true), doDecode(false) {}
9000294a:	f44f 7380 	mov.w	r3, #256	; 0x100
        semDecode = SEM_CREATE(); // Binary semaphore
9000294e:	462a      	mov	r2, r5
90002950:	2001      	movs	r0, #1
          allowSkipFrames(false), firstDrawThisFrame(true), uiHasMutex(false), semDecode(0), mutexBuffers(0)
90002952:	6021      	str	r1, [r4, #0]
        semDecode = SEM_CREATE(); // Binary semaphore
90002954:	4629      	mov	r1, r5
            doInvalidateOnNextTick(false), hasMoreFrames(false), repeat(true), doDecode(false) {}
90002956:	85a3      	strh	r3, [r4, #44]	; 0x2c
          allowSkipFrames(false), firstDrawThisFrame(true), uiHasMutex(false), semDecode(0), mutexBuffers(0)
90002958:	87a3      	strh	r3, [r4, #60]	; 0x3c
        Stream() : frameNumber(0), frameCount(0), tickCount(0), frame_rate_video(0), frame_rate_ticks(0),
9000295a:	60e5      	str	r5, [r4, #12]
            isActive(false), isPlaying(false), isShowingOneFrame(false),
9000295c:	62a5      	str	r5, [r4, #40]	; 0x28
            doInvalidateOnNextTick(false), hasMoreFrames(false), repeat(true), doDecode(false) {}
9000295e:	f884 502e 	strb.w	r5, [r4, #46]	; 0x2e
        : VideoController(), bufferRGB(0), sizeBufferRGB(0), topBufferRGB(0),
90002962:	63a5      	str	r5, [r4, #56]	; 0x38
          allowSkipFrames(false), firstDrawThisFrame(true), uiHasMutex(false), semDecode(0), mutexBuffers(0)
90002964:	f884 503e 	strb.w	r5, [r4, #62]	; 0x3e
        Stream() : frameNumber(0), frameCount(0), tickCount(0), frame_rate_video(0), frame_rate_ticks(0),
90002968:	e9c4 5504 	strd	r5, r5, [r4, #16]
9000296c:	e9c4 5506 	strd	r5, r5, [r4, #24]
            seek_to_frame(0), skip_frames(0),
90002970:	e9c4 5508 	strd	r5, r5, [r4, #32]
        : VideoController(), bufferRGB(0), sizeBufferRGB(0), topBufferRGB(0),
90002974:	e9c4 550c 	strd	r5, r5, [r4, #48]	; 0x30
          allowSkipFrames(false), firstDrawThisFrame(true), uiHasMutex(false), semDecode(0), mutexBuffers(0)
90002978:	e9c4 5510 	strd	r5, r5, [r4, #64]	; 0x40
9000297c:	e9c4 5501 	strd	r5, r5, [r4, #4]
        semDecode = SEM_CREATE(); // Binary semaphore
90002980:	f00b fcf2 	bl	9000e368 <osSemaphoreNew>
90002984:	4603      	mov	r3, r0
        mutexBuffers = MUTEX_CREATE();
90002986:	4628      	mov	r0, r5
        semDecode = SEM_CREATE(); // Binary semaphore
90002988:	6423      	str	r3, [r4, #64]	; 0x40
        mutexBuffers = MUTEX_CREATE();
9000298a:	f00b fc67 	bl	9000e25c <osMutexNew>
9000298e:	6460      	str	r0, [r4, #68]	; 0x44
}
90002990:	bd38      	pop	{r3, r4, r5, pc}
90002992:	bf00      	nop
90002994:	240093d4 	.word	0x240093d4
90002998:	2400941c 	.word	0x2400941c
9000299c:	9002a520 	.word	0x9002a520

900029a0 <vApplicationIdleHook>:
   vTaskDelete() API function (as this demo application does) then it is also
   important that vApplicationIdleHook() is permitted to return to its calling
   function, because it is the responsibility of the idle task to clean up
   memory allocated by the kernel to any task that has since been deleted. */
  
  vTaskSetApplicationTaskTag(NULL, IdleTaskHook);
900029a0:	4901      	ldr	r1, [pc, #4]	; (900029a8 <vApplicationIdleHook+0x8>)
900029a2:	2000      	movs	r0, #0
900029a4:	f00d bf00 	b.w	900107a8 <vTaskSetApplicationTaskTag>
900029a8:	90000959 	.word	0x90000959

900029ac <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
900029ac:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
900029ae:	2064      	movs	r0, #100	; 0x64
900029b0:	f00b fc46 	bl	9000e240 <osDelay>
  for(;;)
900029b4:	e7fb      	b.n	900029ae <StartDefaultTask+0x2>
900029b6:	bf00      	nop

900029b8 <SystemClock_Config>:
{
900029b8:	b570      	push	{r4, r5, r6, lr}
900029ba:	b09e      	sub	sp, #120	; 0x78
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
900029bc:	224c      	movs	r2, #76	; 0x4c
900029be:	2100      	movs	r1, #0
900029c0:	a80a      	add	r0, sp, #40	; 0x28
900029c2:	f025 fb63 	bl	9002808c <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
900029c6:	2220      	movs	r2, #32
900029c8:	2100      	movs	r1, #0
900029ca:	a802      	add	r0, sp, #8
900029cc:	f025 fb5e 	bl	9002808c <memset>
  HAL_PWREx_ConfigSupply(PWR_LDO_SUPPLY);
900029d0:	2002      	movs	r0, #2
900029d2:	f009 fb8d 	bl	9000c0f0 <HAL_PWREx_ConfigSupply>
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
900029d6:	4b22      	ldr	r3, [pc, #136]	; (90002a60 <SystemClock_Config+0xa8>)
900029d8:	2100      	movs	r1, #0
900029da:	4a22      	ldr	r2, [pc, #136]	; (90002a64 <SystemClock_Config+0xac>)
900029dc:	9101      	str	r1, [sp, #4]
900029de:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
900029e0:	f021 0101 	bic.w	r1, r1, #1
900029e4:	62d9      	str	r1, [r3, #44]	; 0x2c
900029e6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900029e8:	f003 0301 	and.w	r3, r3, #1
900029ec:	9301      	str	r3, [sp, #4]
900029ee:	6993      	ldr	r3, [r2, #24]
900029f0:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
900029f4:	6193      	str	r3, [r2, #24]
900029f6:	6993      	ldr	r3, [r2, #24]
900029f8:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
900029fc:	9301      	str	r3, [sp, #4]
900029fe:	9b01      	ldr	r3, [sp, #4]
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
90002a00:	6993      	ldr	r3, [r2, #24]
90002a02:	0499      	lsls	r1, r3, #18
90002a04:	d5fc      	bpl.n	90002a00 <SystemClock_Config+0x48>
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
90002a06:	2201      	movs	r2, #1
90002a08:	f44f 3380 	mov.w	r3, #65536	; 0x10000
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
90002a0c:	2402      	movs	r4, #2
  RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_2;
90002a0e:	2608      	movs	r6, #8
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
90002a10:	2500      	movs	r5, #0
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
90002a12:	a80a      	add	r0, sp, #40	; 0x28
  RCC_OscInitStruct.PLL.PLLP = 2;
90002a14:	9417      	str	r4, [sp, #92]	; 0x5c
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
90002a16:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
  RCC_OscInitStruct.PLL.PLLN = 160;
90002a1a:	2205      	movs	r2, #5
90002a1c:	23a0      	movs	r3, #160	; 0xa0
90002a1e:	e9cd 2315 	strd	r2, r3, [sp, #84]	; 0x54
  RCC_OscInitStruct.PLL.PLLQ = 4;
90002a22:	2304      	movs	r3, #4
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
90002a24:	e9cd 4413 	strd	r4, r4, [sp, #76]	; 0x4c
  RCC_OscInitStruct.PLL.PLLQ = 4;
90002a28:	9318      	str	r3, [sp, #96]	; 0x60
  RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_2;
90002a2a:	e9cd 4619 	strd	r4, r6, [sp, #100]	; 0x64
  RCC_OscInitStruct.PLL.PLLFRACN = 0;
90002a2e:	e9cd 551b 	strd	r5, r5, [sp, #108]	; 0x6c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
90002a32:	f009 fc05 	bl	9000c240 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
90002a36:	2340      	movs	r3, #64	; 0x40
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
90002a38:	223f      	movs	r2, #63	; 0x3f
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
90002a3a:	4621      	mov	r1, r4
  RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
90002a3c:	9307      	str	r3, [sp, #28]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
90002a3e:	eb0d 0006 	add.w	r0, sp, r6
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
90002a42:	9202      	str	r2, [sp, #8]
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
90002a44:	2203      	movs	r2, #3
  RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
90002a46:	9309      	str	r3, [sp, #36]	; 0x24
  RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
90002a48:	9504      	str	r5, [sp, #16]
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
90002a4a:	9203      	str	r2, [sp, #12]
  RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
90002a4c:	e9cd 6305 	strd	r6, r3, [sp, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
90002a50:	f44f 6380 	mov.w	r3, #1024	; 0x400
90002a54:	9308      	str	r3, [sp, #32]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
90002a56:	f009 ff87 	bl	9000c968 <HAL_RCC_ClockConfig>
}
90002a5a:	b01e      	add	sp, #120	; 0x78
90002a5c:	bd70      	pop	{r4, r5, r6, pc}
90002a5e:	bf00      	nop
90002a60:	58000400 	.word	0x58000400
90002a64:	58024800 	.word	0x58024800

90002a68 <main>:
{
90002a68:	b580      	push	{r7, lr}

/* MPU Configuration */

void MPU_Config(void)
{
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
90002a6a:	2400      	movs	r4, #0
{
90002a6c:	b098      	sub	sp, #96	; 0x60
  /* Disables the MPU */
  HAL_MPU_Disable();

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
90002a6e:	2501      	movs	r5, #1

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
  MPU_InitStruct.BaseAddress = 0x90000000;
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
90002a70:	271b      	movs	r7, #27

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
  MPU_InitStruct.Size = MPU_REGION_SIZE_128MB;
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
90002a72:	2603      	movs	r6, #3
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
90002a74:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
90002a78:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  HAL_MPU_Disable();
90002a7c:	f006 fb20 	bl	900090c0 <HAL_MPU_Disable>
  MPU_InitStruct.BaseAddress = 0x24000000;
90002a80:	f04f 5310 	mov.w	r3, #603979776	; 0x24000000
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
90002a84:	49d3      	ldr	r1, [pc, #844]	; (90002dd4 <main+0x36c>)
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002a86:	a80b      	add	r0, sp, #44	; 0x2c
  MPU_InitStruct.BaseAddress = 0x24000000;
90002a88:	930c      	str	r3, [sp, #48]	; 0x30
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
90002a8a:	4bd3      	ldr	r3, [pc, #844]	; (90002dd8 <main+0x370>)
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
90002a8c:	f8ad 502c 	strh.w	r5, [sp, #44]	; 0x2c
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
90002a90:	e9cd 130d 	strd	r1, r3, [sp, #52]	; 0x34
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002a94:	f006 fb32 	bl	900090fc <HAL_MPU_ConfigRegion>
  MPU_InitStruct.BaseAddress = 0x90000000;
90002a98:	f04f 4310 	mov.w	r3, #2415919104	; 0x90000000
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002a9c:	a80b      	add	r0, sp, #44	; 0x2c
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
90002a9e:	f88d 4037 	strb.w	r4, [sp, #55]	; 0x37
  MPU_InitStruct.BaseAddress = 0x90000000;
90002aa2:	930c      	str	r3, [sp, #48]	; 0x30
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
90002aa4:	f8ad 403a 	strh.w	r4, [sp, #58]	; 0x3a
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
90002aa8:	f88d 502d 	strb.w	r5, [sp, #45]	; 0x2d
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
90002aac:	f88d 7034 	strb.w	r7, [sp, #52]	; 0x34
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002ab0:	f006 fb24 	bl	900090fc <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
90002ab4:	2302      	movs	r3, #2
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_ENABLE;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
  MPU_InitStruct.IsBufferable = MPU_ACCESS_BUFFERABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002ab6:	a80b      	add	r0, sp, #44	; 0x2c
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
90002ab8:	f8ad 6037 	strh.w	r6, [sp, #55]	; 0x37
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
90002abc:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
  MPU_InitStruct.Size = MPU_REGION_SIZE_128MB;
90002ac0:	231a      	movs	r3, #26
90002ac2:	f88d 3034 	strb.w	r3, [sp, #52]	; 0x34
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
90002ac6:	f240 1301 	movw	r3, #257	; 0x101
90002aca:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002ace:	f006 fb15 	bl	900090fc <HAL_MPU_ConfigRegion>
  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER3;
  MPU_InitStruct.BaseAddress = 0xD0000000;
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
90002ad2:	f44f 7380 	mov.w	r3, #256	; 0x100
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_DISABLE;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
  MPU_InitStruct.IsBufferable = MPU_ACCESS_NOT_BUFFERABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002ad6:	a80b      	add	r0, sp, #44	; 0x2c
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
90002ad8:	f8ad 403a 	strh.w	r4, [sp, #58]	; 0x3a

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER4;
90002adc:	2404      	movs	r4, #4
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
90002ade:	f8ad 3037 	strh.w	r3, [sp, #55]	; 0x37
  MPU_InitStruct.BaseAddress = 0xD0000000;
90002ae2:	f04f 4350 	mov.w	r3, #3489660928	; 0xd0000000
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
90002ae6:	f88d 7034 	strb.w	r7, [sp, #52]	; 0x34
  MPU_InitStruct.BaseAddress = 0xD0000000;
90002aea:	930c      	str	r3, [sp, #48]	; 0x30
  MPU_InitStruct.Number = MPU_REGION_NUMBER3;
90002aec:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002af0:	f006 fb04 	bl	900090fc <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Size = MPU_REGION_SIZE_32MB;
90002af4:	2318      	movs	r3, #24
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002af6:	a80b      	add	r0, sp, #44	; 0x2c
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
90002af8:	f88d 6037 	strb.w	r6, [sp, #55]	; 0x37
  MPU_InitStruct.Size = MPU_REGION_SIZE_32MB;
90002afc:	f88d 3034 	strb.w	r3, [sp, #52]	; 0x34
  MPU_InitStruct.Number = MPU_REGION_NUMBER4;
90002b00:	f88d 402d 	strb.w	r4, [sp, #45]	; 0x2d
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
90002b04:	f88d 503a 	strb.w	r5, [sp, #58]	; 0x3a
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002b08:	f006 faf8 	bl	900090fc <HAL_MPU_ConfigRegion>
  /* Enables the MPU */
  HAL_MPU_Enable(MPU_PRIVILEGED_DEFAULT);
90002b0c:	4620      	mov	r0, r4
90002b0e:	f006 fae5 	bl	900090dc <HAL_MPU_Enable>
    if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
90002b12:	4ab2      	ldr	r2, [pc, #712]	; (90002ddc <main+0x374>)
90002b14:	6953      	ldr	r3, [r2, #20]
90002b16:	f413 3300 	ands.w	r3, r3, #131072	; 0x20000
90002b1a:	d111      	bne.n	90002b40 <main+0xd8>
  __ASM volatile ("dsb 0xF":::"memory");
90002b1c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90002b20:	f3bf 8f6f 	isb	sy
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
90002b24:	f8c2 3250 	str.w	r3, [r2, #592]	; 0x250
  __ASM volatile ("dsb 0xF":::"memory");
90002b28:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90002b2c:	f3bf 8f6f 	isb	sy
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
90002b30:	6953      	ldr	r3, [r2, #20]
90002b32:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
90002b36:	6153      	str	r3, [r2, #20]
  __ASM volatile ("dsb 0xF":::"memory");
90002b38:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90002b3c:	f3bf 8f6f 	isb	sy
    if (SCB->CCR & SCB_CCR_DC_Msk) return;  /* return if DCache is already enabled */
90002b40:	48a6      	ldr	r0, [pc, #664]	; (90002ddc <main+0x374>)
90002b42:	6943      	ldr	r3, [r0, #20]
90002b44:	f413 3380 	ands.w	r3, r3, #65536	; 0x10000
90002b48:	d124      	bne.n	90002b94 <main+0x12c>
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
90002b4a:	f8c0 3084 	str.w	r3, [r0, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
90002b4e:	f3bf 8f4f 	dsb	sy
    ccsidr = SCB->CCSIDR;
90002b52:	f8d0 5080 	ldr.w	r5, [r0, #128]	; 0x80
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90002b56:	f643 76e0 	movw	r6, #16352	; 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
90002b5a:	f3c5 344e 	ubfx	r4, r5, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90002b5e:	f3c5 05c9 	ubfx	r5, r5, #3, #10
90002b62:	0164      	lsls	r4, r4, #5
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90002b64:	ea04 0106 	and.w	r1, r4, r6
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90002b68:	462b      	mov	r3, r5
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90002b6a:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
      } while (ways-- != 0U);
90002b6e:	3b01      	subs	r3, #1
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90002b70:	f8c0 2260 	str.w	r2, [r0, #608]	; 0x260
      } while (ways-- != 0U);
90002b74:	1c5a      	adds	r2, r3, #1
90002b76:	d1f8      	bne.n	90002b6a <main+0x102>
    } while(sets-- != 0U);
90002b78:	3c20      	subs	r4, #32
90002b7a:	f114 0f20 	cmn.w	r4, #32
90002b7e:	d1f1      	bne.n	90002b64 <main+0xfc>
90002b80:	f3bf 8f4f 	dsb	sy
    SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
90002b84:	6943      	ldr	r3, [r0, #20]
90002b86:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
90002b8a:	6143      	str	r3, [r0, #20]
90002b8c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90002b90:	f3bf 8f6f 	isb	sy
  HAL_Init();
90002b94:	f006 f9dc 	bl	90008f50 <HAL_Init>
  SystemClock_Config();
90002b98:	f7ff ff0e 	bl	900029b8 <SystemClock_Config>
  __ASM volatile ("cpsie i" : : : "memory");
90002b9c:	b662      	cpsie	i
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90002b9e:	2400      	movs	r4, #0
  __HAL_RCC_GPIOK_CLK_ENABLE();
90002ba0:	4d8f      	ldr	r5, [pc, #572]	; (90002de0 <main+0x378>)
  HAL_GPIO_WritePin(GPIOB, FRAME_RATE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
90002ba2:	21c0      	movs	r1, #192	; 0xc0
90002ba4:	488f      	ldr	r0, [pc, #572]	; (90002de4 <main+0x37c>)
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90002ba6:	940f      	str	r4, [sp, #60]	; 0x3c
  HAL_GPIO_WritePin(GPIOB, FRAME_RATE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
90002ba8:	4622      	mov	r2, r4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90002baa:	2601      	movs	r6, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90002bac:	f04f 0903 	mov.w	r9, #3
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin;
90002bb0:	2708      	movs	r7, #8
  GPIO_InitStruct.Pin = LCD_RESET_Pin;
90002bb2:	f04f 0804 	mov.w	r8, #4
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
90002bb6:	f04f 0a05 	mov.w	sl, #5
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90002bba:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
90002bbe:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  __HAL_RCC_GPIOK_CLK_ENABLE();
90002bc2:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002bc6:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
90002bca:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002bce:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002bd2:	f403 6380 	and.w	r3, r3, #1024	; 0x400
90002bd6:	9301      	str	r3, [sp, #4]
90002bd8:	9b01      	ldr	r3, [sp, #4]
  __HAL_RCC_GPIOG_CLK_ENABLE();
90002bda:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002bde:	f043 0340 	orr.w	r3, r3, #64	; 0x40
90002be2:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002be6:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002bea:	f003 0340 	and.w	r3, r3, #64	; 0x40
90002bee:	9302      	str	r3, [sp, #8]
90002bf0:	9b02      	ldr	r3, [sp, #8]
  __HAL_RCC_GPIOI_CLK_ENABLE();
90002bf2:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002bf6:	f443 7380 	orr.w	r3, r3, #256	; 0x100
90002bfa:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002bfe:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c02:	f403 7380 	and.w	r3, r3, #256	; 0x100
90002c06:	9303      	str	r3, [sp, #12]
90002c08:	9b03      	ldr	r3, [sp, #12]
  __HAL_RCC_GPIOE_CLK_ENABLE();
90002c0a:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c0e:	f043 0310 	orr.w	r3, r3, #16
90002c12:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002c16:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c1a:	f003 0310 	and.w	r3, r3, #16
90002c1e:	9304      	str	r3, [sp, #16]
90002c20:	9b04      	ldr	r3, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
90002c22:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c26:	f043 0302 	orr.w	r3, r3, #2
90002c2a:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002c2e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c32:	f003 0302 	and.w	r3, r3, #2
90002c36:	9305      	str	r3, [sp, #20]
90002c38:	9b05      	ldr	r3, [sp, #20]
  __HAL_RCC_GPIOJ_CLK_ENABLE();
90002c3a:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c3e:	f443 7300 	orr.w	r3, r3, #512	; 0x200
90002c42:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002c46:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c4a:	f403 7300 	and.w	r3, r3, #512	; 0x200
90002c4e:	9306      	str	r3, [sp, #24]
90002c50:	9b06      	ldr	r3, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
90002c52:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c56:	f043 0308 	orr.w	r3, r3, #8
90002c5a:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002c5e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c62:	f003 0308 	and.w	r3, r3, #8
90002c66:	9307      	str	r3, [sp, #28]
90002c68:	9b07      	ldr	r3, [sp, #28]
  __HAL_RCC_GPIOF_CLK_ENABLE();
90002c6a:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c6e:	f043 0320 	orr.w	r3, r3, #32
90002c72:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002c76:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c7a:	f003 0320 	and.w	r3, r3, #32
90002c7e:	9308      	str	r3, [sp, #32]
90002c80:	9b08      	ldr	r3, [sp, #32]
  __HAL_RCC_GPIOH_CLK_ENABLE();
90002c82:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c86:	f043 0380 	orr.w	r3, r3, #128	; 0x80
90002c8a:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002c8e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c92:	f003 0380 	and.w	r3, r3, #128	; 0x80
90002c96:	9309      	str	r3, [sp, #36]	; 0x24
90002c98:	9b09      	ldr	r3, [sp, #36]	; 0x24
  __HAL_RCC_GPIOA_CLK_ENABLE();
90002c9a:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002c9e:	f043 0301 	orr.w	r3, r3, #1
90002ca2:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002ca6:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002caa:	f003 0301 	and.w	r3, r3, #1
90002cae:	930a      	str	r3, [sp, #40]	; 0x28
90002cb0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  HAL_GPIO_WritePin(GPIOB, FRAME_RATE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
90002cb2:	f006 fe13 	bl	900098dc <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_DE_GPIO_Port, LCD_DE_Pin, GPIO_PIN_RESET);
90002cb6:	4622      	mov	r2, r4
90002cb8:	2180      	movs	r1, #128	; 0x80
90002cba:	484b      	ldr	r0, [pc, #300]	; (90002de8 <main+0x380>)
90002cbc:	f006 fe0e 	bl	900098dc <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
90002cc0:	4622      	mov	r2, r4
90002cc2:	2108      	movs	r1, #8
90002cc4:	4849      	ldr	r0, [pc, #292]	; (90002dec <main+0x384>)
90002cc6:	f006 fe09 	bl	900098dc <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
90002cca:	2201      	movs	r2, #1
90002ccc:	4848      	ldr	r0, [pc, #288]	; (90002df0 <main+0x388>)
90002cce:	4611      	mov	r1, r2
90002cd0:	f006 fe04 	bl	900098dc <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOA, LCD_RESET_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
90002cd4:	4622      	mov	r2, r4
90002cd6:	2144      	movs	r1, #68	; 0x44
90002cd8:	4846      	ldr	r0, [pc, #280]	; (90002df4 <main+0x38c>)
90002cda:	f006 fdff 	bl	900098dc <HAL_GPIO_WritePin>
  GPIO_InitStruct.Pin = FRAME_RATE_Pin|RENDER_TIME_Pin;
90002cde:	23c0      	movs	r3, #192	; 0xc0
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
90002ce0:	a90b      	add	r1, sp, #44	; 0x2c
90002ce2:	4840      	ldr	r0, [pc, #256]	; (90002de4 <main+0x37c>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90002ce4:	e9cd 360b 	strd	r3, r6, [sp, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90002ce8:	e9cd 490d 	strd	r4, r9, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
90002cec:	f006 fbf6 	bl	900094dc <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = LCD_DE_Pin;
90002cf0:	2380      	movs	r3, #128	; 0x80
  HAL_GPIO_Init(LCD_DE_GPIO_Port, &GPIO_InitStruct);
90002cf2:	a90b      	add	r1, sp, #44	; 0x2c
90002cf4:	483c      	ldr	r0, [pc, #240]	; (90002de8 <main+0x380>)
  GPIO_InitStruct.Pin = LCD_DE_Pin;
90002cf6:	930b      	str	r3, [sp, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
90002cf8:	940e      	str	r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90002cfa:	e9cd 640c 	strd	r6, r4, [sp, #48]	; 0x30
  HAL_GPIO_Init(LCD_DE_GPIO_Port, &GPIO_InitStruct);
90002cfe:	f006 fbed 	bl	900094dc <HAL_GPIO_Init>
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
90002d02:	a90b      	add	r1, sp, #44	; 0x2c
90002d04:	4839      	ldr	r0, [pc, #228]	; (90002dec <main+0x384>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90002d06:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin;
90002d0a:	970b      	str	r7, [sp, #44]	; 0x2c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90002d0c:	e9cd 640c 	strd	r6, r4, [sp, #48]	; 0x30
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
90002d10:	f006 fbe4 	bl	900094dc <HAL_GPIO_Init>
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
90002d14:	a90b      	add	r1, sp, #44	; 0x2c
90002d16:	4836      	ldr	r0, [pc, #216]	; (90002df0 <main+0x388>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90002d18:	e9cd 660b 	strd	r6, r6, [sp, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
90002d1c:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
90002d20:	f006 fbdc 	bl	900094dc <HAL_GPIO_Init>
  HAL_GPIO_Init(LCD_RESET_GPIO_Port, &GPIO_InitStruct);
90002d24:	a90b      	add	r1, sp, #44	; 0x2c
90002d26:	4833      	ldr	r0, [pc, #204]	; (90002df4 <main+0x38c>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90002d28:	e9cd 860b 	strd	r8, r6, [sp, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
90002d2c:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  HAL_GPIO_Init(LCD_RESET_GPIO_Port, &GPIO_InitStruct);
90002d30:	f006 fbd4 	bl	900094dc <HAL_GPIO_Init>
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90002d34:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
  GPIO_InitStruct.Pin = MCU_ACTIVE_Pin;
90002d38:	f04f 0940 	mov.w	r9, #64	; 0x40
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
90002d3c:	a90b      	add	r1, sp, #44	; 0x2c
90002d3e:	482d      	ldr	r0, [pc, #180]	; (90002df4 <main+0x38c>)
  GPIO_InitStruct.Pin = MCU_ACTIVE_Pin;
90002d40:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90002d44:	e9cd 640c 	strd	r6, r4, [sp, #48]	; 0x30
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
90002d48:	f006 fbc8 	bl	900094dc <HAL_GPIO_Init>
  __HAL_RCC_MDMA_CLK_ENABLE();
90002d4c:	f8d5 30d4 	ldr.w	r3, [r5, #212]	; 0xd4
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
90002d50:	4622      	mov	r2, r4
90002d52:	2105      	movs	r1, #5
  __HAL_RCC_MDMA_CLK_ENABLE();
90002d54:	4333      	orrs	r3, r6
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
90002d56:	207a      	movs	r0, #122	; 0x7a
  __HAL_RCC_MDMA_CLK_ENABLE();
90002d58:	f8c5 30d4 	str.w	r3, [r5, #212]	; 0xd4
90002d5c:	f8d5 30d4 	ldr.w	r3, [r5, #212]	; 0xd4
  hltdc.Instance = LTDC;
90002d60:	4d25      	ldr	r5, [pc, #148]	; (90002df8 <main+0x390>)
  __HAL_RCC_MDMA_CLK_ENABLE();
90002d62:	4033      	ands	r3, r6
90002d64:	9300      	str	r3, [sp, #0]
90002d66:	9b00      	ldr	r3, [sp, #0]
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
90002d68:	f006 f94c 	bl	90009004 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(MDMA_IRQn);
90002d6c:	207a      	movs	r0, #122	; 0x7a
90002d6e:	f006 f987 	bl	90009080 <HAL_NVIC_EnableIRQ>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
90002d72:	2234      	movs	r2, #52	; 0x34
90002d74:	4621      	mov	r1, r4
90002d76:	a80b      	add	r0, sp, #44	; 0x2c
90002d78:	f025 f988 	bl	9002808c <memset>
  hltdc.Instance = LTDC;
90002d7c:	4b1f      	ldr	r3, [pc, #124]	; (90002dfc <main+0x394>)
  hltdc.Init.AccumulatedVBP = 11;
90002d7e:	202a      	movs	r0, #42	; 0x2a
  hltdc.Init.VerticalSync = 8;
90002d80:	61af      	str	r7, [r5, #24]
  hltdc.Instance = LTDC;
90002d82:	602b      	str	r3, [r5, #0]
  hltdc.Init.HorizontalSync = 39;
90002d84:	2327      	movs	r3, #39	; 0x27
  hltdc.Init.AccumulatedActiveH = 283;
90002d86:	f240 270a 	movw	r7, #522	; 0x20a
  hltdc.Init.TotalHeigh = 285;
90002d8a:	f44f 7c04 	mov.w	ip, #528	; 0x210
  hltdc.Init.HorizontalSync = 39;
90002d8e:	616b      	str	r3, [r5, #20]
  hltdc.Init.AccumulatedVBP = 11;
90002d90:	230b      	movs	r3, #11
  hltdc.Init.Backcolor.Blue = 0;
90002d92:	86ac      	strh	r4, [r5, #52]	; 0x34
  hltdc.Init.Backcolor.Red = 0;
90002d94:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  hltdc.Init.AccumulatedVBP = 11;
90002d98:	e9c5 0307 	strd	r0, r3, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 283;
90002d9c:	f240 131b 	movw	r3, #283	; 0x11b
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
90002da0:	4628      	mov	r0, r5
  hltdc.Init.AccumulatedActiveH = 283;
90002da2:	e9c5 7309 	strd	r7, r3, [r5, #36]	; 0x24
  hltdc.Init.TotalHeigh = 285;
90002da6:	f240 131d 	movw	r3, #285	; 0x11d
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
90002daa:	2702      	movs	r7, #2
  hltdc.Init.TotalHeigh = 285;
90002dac:	e9c5 c30b 	strd	ip, r3, [r5, #44]	; 0x2c
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
90002db0:	e9c5 4401 	strd	r4, r4, [r5, #4]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
90002db4:	e9c5 4403 	strd	r4, r4, [r5, #12]
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
90002db8:	f008 fdb6 	bl	9000b928 <HAL_LTDC_Init>
  pLayerCfg.WindowX1 = 480;
90002dbc:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90002dc0:	4622      	mov	r2, r4
90002dc2:	a90b      	add	r1, sp, #44	; 0x2c
  pLayerCfg.WindowX1 = 480;
90002dc4:	930c      	str	r3, [sp, #48]	; 0x30
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90002dc6:	4628      	mov	r0, r5
  pLayerCfg.ImageWidth = 480;
90002dc8:	9315      	str	r3, [sp, #84]	; 0x54
  pLayerCfg.WindowY1 = 272;
90002dca:	f44f 7388 	mov.w	r3, #272	; 0x110
  hdma2d.Instance = DMA2D;
90002dce:	4d0c      	ldr	r5, [pc, #48]	; (90002e00 <main+0x398>)
  pLayerCfg.WindowY1 = 272;
90002dd0:	930e      	str	r3, [sp, #56]	; 0x38
90002dd2:	e017      	b.n	90002e04 <main+0x39c>
90002dd4:	03000012 	.word	0x03000012
90002dd8:	01010001 	.word	0x01010001
90002ddc:	e000ed00 	.word	0xe000ed00
90002de0:	58024400 	.word	0x58024400
90002de4:	58020400 	.word	0x58020400
90002de8:	58020c00 	.word	0x58020c00
90002dec:	58021800 	.word	0x58021800
90002df0:	58022800 	.word	0x58022800
90002df4:	58020000 	.word	0x58020000
90002df8:	24009550 	.word	0x24009550
90002dfc:	50001000 	.word	0x50001000
90002e00:	24009490 	.word	0x24009490
  pLayerCfg.ImageHeight = 272;
90002e04:	9316      	str	r3, [sp, #88]	; 0x58
  pLayerCfg.Alpha = 255;
90002e06:	23ff      	movs	r3, #255	; 0xff
  pLayerCfg.WindowX0 = 0;
90002e08:	940b      	str	r4, [sp, #44]	; 0x2c
  pLayerCfg.Alpha = 255;
90002e0a:	9310      	str	r3, [sp, #64]	; 0x40
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
90002e0c:	f44f 6380 	mov.w	r3, #1024	; 0x400
  pLayerCfg.WindowY0 = 0;
90002e10:	940d      	str	r4, [sp, #52]	; 0x34
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
90002e12:	9312      	str	r3, [sp, #72]	; 0x48
  pLayerCfg.Alpha0 = 0;
90002e14:	9411      	str	r4, [sp, #68]	; 0x44
  pLayerCfg.FBStartAdress = 0;
90002e16:	9414      	str	r4, [sp, #80]	; 0x50
  pLayerCfg.Backcolor.Blue = 0;
90002e18:	f8ad 405c 	strh.w	r4, [sp, #92]	; 0x5c
  pLayerCfg.Backcolor.Red = 0;
90002e1c:	f88d 405e 	strb.w	r4, [sp, #94]	; 0x5e
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
90002e20:	970f      	str	r7, [sp, #60]	; 0x3c
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
90002e22:	f8cd a04c 	str.w	sl, [sp, #76]	; 0x4c
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90002e26:	f008 fe53 	bl	9000bad0 <HAL_LTDC_ConfigLayer>
  hdma2d.Instance = DMA2D;
90002e2a:	4b35      	ldr	r3, [pc, #212]	; (90002f00 <main+0x498>)
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
90002e2c:	4628      	mov	r0, r5
  hdma2d.LayerCfg[1].ChromaSubSampling = DMA2D_NO_CSS;
90002e2e:	65ec      	str	r4, [r5, #92]	; 0x5c
  hdma2d.Instance = DMA2D;
90002e30:	602b      	str	r3, [r5, #0]
  hdma2d.Init.OutputOffset = 0;
90002e32:	60ec      	str	r4, [r5, #12]
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
90002e34:	e9c5 4711 	strd	r4, r7, [r5, #68]	; 0x44
  hdma2d.LayerCfg[1].InputAlpha = 0;
90002e38:	e9c5 4413 	strd	r4, r4, [r5, #76]	; 0x4c
  hdma2d.LayerCfg[1].RedBlueSwap = DMA2D_RB_REGULAR;
90002e3c:	e9c5 4415 	strd	r4, r4, [r5, #84]	; 0x54
  hdma2d.Init.ColorMode = DMA2D_OUTPUT_RGB565;
90002e40:	e9c5 4701 	strd	r4, r7, [r5, #4]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
90002e44:	f006 fa02 	bl	9000924c <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
90002e48:	4631      	mov	r1, r6
90002e4a:	4628      	mov	r0, r5
90002e4c:	f006 fad6 	bl	900093fc <HAL_DMA2D_ConfigLayer>
  hsdram2.Instance = FMC_SDRAM_DEVICE;
90002e50:	482c      	ldr	r0, [pc, #176]	; (90002f04 <main+0x49c>)
  hsdram2.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
90002e52:	f44f 73c0 	mov.w	r3, #384	; 0x180
  if (HAL_SDRAM_Init(&hsdram2, &SdramTiming) != HAL_OK)
90002e56:	a90b      	add	r1, sp, #44	; 0x2c
  SdramTiming.WriteRecoveryTime = 5;
90002e58:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
  SdramTiming.LoadToActiveDelay = 2;
90002e5c:	970b      	str	r7, [sp, #44]	; 0x2c
  SdramTiming.SelfRefreshTime = 4;
90002e5e:	f8cd 8034 	str.w	r8, [sp, #52]	; 0x34
  hsdram2.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
90002e62:	f8c0 800c 	str.w	r8, [r0, #12]
  hsdram2.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
90002e66:	f8c0 9014 	str.w	r9, [r0, #20]
  hsdram2.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_0;
90002e6a:	6284      	str	r4, [r0, #40]	; 0x28
  hsdram2.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
90002e6c:	e9c0 3406 	strd	r3, r4, [r0, #24]
  hsdram2.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
90002e70:	f44f 6300 	mov.w	r3, #2048	; 0x800
90002e74:	6203      	str	r3, [r0, #32]
  hsdram2.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
90002e76:	f44f 5380 	mov.w	r3, #4096	; 0x1000
90002e7a:	6243      	str	r3, [r0, #36]	; 0x24
  SdramTiming.ExitSelfRefreshDelay = 7;
90002e7c:	2307      	movs	r3, #7
90002e7e:	930c      	str	r3, [sp, #48]	; 0x30
  SdramTiming.RowCycleDelay = 7;
90002e80:	930e      	str	r3, [sp, #56]	; 0x38
  hsdram2.Instance = FMC_SDRAM_DEVICE;
90002e82:	4b21      	ldr	r3, [pc, #132]	; (90002f08 <main+0x4a0>)
90002e84:	6003      	str	r3, [r0, #0]
  hsdram2.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
90002e86:	2310      	movs	r3, #16
  SdramTiming.RCDDelay = 2;
90002e88:	e9cd 7710 	strd	r7, r7, [sp, #64]	; 0x40
  hsdram2.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
90002e8c:	6103      	str	r3, [r0, #16]
  hsdram2.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
90002e8e:	e9c0 6401 	strd	r6, r4, [r0, #4]
  if (HAL_SDRAM_Init(&hsdram2, &SdramTiming) != HAL_OK)
90002e92:	f00a fe41 	bl	9000db18 <HAL_SDRAM_Init>
  BSP_SDRAM_DeInit(0);
90002e96:	4620      	mov	r0, r4
90002e98:	f005 fdec 	bl	90008a74 <BSP_SDRAM_DeInit>
  if(BSP_SDRAM_Init(0) != BSP_ERROR_NONE)
90002e9c:	4620      	mov	r0, r4
90002e9e:	f005 fe33 	bl	90008b08 <BSP_SDRAM_Init>
  MX_LIBJPEG_Init();
90002ea2:	f7fd fa97 	bl	900003d4 <MX_LIBJPEG_Init>
  hjpeg.Instance = JPEG;
90002ea6:	4b19      	ldr	r3, [pc, #100]	; (90002f0c <main+0x4a4>)
90002ea8:	4819      	ldr	r0, [pc, #100]	; (90002f10 <main+0x4a8>)
90002eaa:	6003      	str	r3, [r0, #0]
  if (HAL_JPEG_Init(&hjpeg) != HAL_OK)
90002eac:	f007 fd10 	bl	9000a8d0 <HAL_JPEG_Init>
  hcrc.Instance = CRC;
90002eb0:	4818      	ldr	r0, [pc, #96]	; (90002f14 <main+0x4ac>)
90002eb2:	4b19      	ldr	r3, [pc, #100]	; (90002f18 <main+0x4b0>)
  hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
90002eb4:	8084      	strh	r4, [r0, #4]
  hcrc.Instance = CRC;
90002eb6:	6003      	str	r3, [r0, #0]
  hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
90002eb8:	6206      	str	r6, [r0, #32]
  hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
90002eba:	e9c0 4405 	strd	r4, r4, [r0, #20]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
90002ebe:	f006 f94f 	bl	90009160 <HAL_CRC_Init>
  MX_TouchGFX_Init();
90002ec2:	f7fd fa8b 	bl	900003dc <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
90002ec6:	f7fd fa87 	bl	900003d8 <MX_TouchGFX_PreOSInit>
  osKernelInitialize();
90002eca:	f00b f943 	bl	9000e154 <osKernelInitialize>
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
90002ece:	4a13      	ldr	r2, [pc, #76]	; (90002f1c <main+0x4b4>)
90002ed0:	4621      	mov	r1, r4
90002ed2:	4813      	ldr	r0, [pc, #76]	; (90002f20 <main+0x4b8>)
90002ed4:	f00b f96a 	bl	9000e1ac <osThreadNew>
90002ed8:	4b12      	ldr	r3, [pc, #72]	; (90002f24 <main+0x4bc>)
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
90002eda:	4a13      	ldr	r2, [pc, #76]	; (90002f28 <main+0x4c0>)
90002edc:	4621      	mov	r1, r4
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
90002ede:	6018      	str	r0, [r3, #0]
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
90002ee0:	4812      	ldr	r0, [pc, #72]	; (90002f2c <main+0x4c4>)
90002ee2:	f00b f963 	bl	9000e1ac <osThreadNew>
90002ee6:	4b12      	ldr	r3, [pc, #72]	; (90002f30 <main+0x4c8>)
90002ee8:	4605      	mov	r5, r0
  videoTaskHandle = osThreadNew(videoTaskFunc, NULL, &videoTask_attributes);
90002eea:	4a12      	ldr	r2, [pc, #72]	; (90002f34 <main+0x4cc>)
90002eec:	4621      	mov	r1, r4
90002eee:	4812      	ldr	r0, [pc, #72]	; (90002f38 <main+0x4d0>)
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
90002ef0:	601d      	str	r5, [r3, #0]
  videoTaskHandle = osThreadNew(videoTaskFunc, NULL, &videoTask_attributes);
90002ef2:	f00b f95b 	bl	9000e1ac <osThreadNew>
90002ef6:	4b11      	ldr	r3, [pc, #68]	; (90002f3c <main+0x4d4>)
90002ef8:	6018      	str	r0, [r3, #0]
  osKernelStart();
90002efa:	f00b f93d 	bl	9000e178 <osKernelStart>
  while (1)
90002efe:	e7fe      	b.n	90002efe <main+0x496>
90002f00:	52001000 	.word	0x52001000
90002f04:	240096d0 	.word	0x240096d0
90002f08:	52004140 	.word	0x52004140
90002f0c:	52003000 	.word	0x52003000
90002f10:	240094f8 	.word	0x240094f8
90002f14:	2400946c 	.word	0x2400946c
90002f18:	58024c00 	.word	0x58024c00
90002f1c:	9002a59c 	.word	0x9002a59c
90002f20:	900029ad 	.word	0x900029ad
90002f24:	24009468 	.word	0x24009468
90002f28:	9002a578 	.word	0x9002a578
90002f2c:	900003ed 	.word	0x900003ed
90002f30:	24009464 	.word	0x24009464
90002f34:	9002a5c0 	.word	0x9002a5c0
90002f38:	90002931 	.word	0x90002931
90002f3c:	24009704 	.word	0x24009704

90002f40 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
90002f40:	4b03      	ldr	r3, [pc, #12]	; (90002f50 <HAL_TIM_PeriodElapsedCallback+0x10>)
90002f42:	6802      	ldr	r2, [r0, #0]
90002f44:	429a      	cmp	r2, r3
90002f46:	d000      	beq.n	90002f4a <HAL_TIM_PeriodElapsedCallback+0xa>
    HAL_IncTick();
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
90002f48:	4770      	bx	lr
    HAL_IncTick();
90002f4a:	f006 b831 	b.w	90008fb0 <HAL_IncTick>
90002f4e:	bf00      	nop
90002f50:	40001000 	.word	0x40001000

90002f54 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
90002f54:	4770      	bx	lr
90002f56:	bf00      	nop

90002f58 <HAL_MspInit>:
{
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
90002f58:	4b0b      	ldr	r3, [pc, #44]	; (90002f88 <HAL_MspInit+0x30>)

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
90002f5a:	2200      	movs	r2, #0
90002f5c:	210f      	movs	r1, #15
90002f5e:	f06f 0001 	mvn.w	r0, #1
{
90002f62:	b410      	push	{r4}
  __HAL_RCC_SYSCFG_CLK_ENABLE();
90002f64:	f8d3 40f4 	ldr.w	r4, [r3, #244]	; 0xf4
{
90002f68:	b083      	sub	sp, #12
  __HAL_RCC_SYSCFG_CLK_ENABLE();
90002f6a:	f044 0402 	orr.w	r4, r4, #2
90002f6e:	f8c3 40f4 	str.w	r4, [r3, #244]	; 0xf4
90002f72:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
90002f76:	f003 0302 	and.w	r3, r3, #2
90002f7a:	9301      	str	r3, [sp, #4]
90002f7c:	9b01      	ldr	r3, [sp, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
90002f7e:	b003      	add	sp, #12
90002f80:	f85d 4b04 	ldr.w	r4, [sp], #4
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
90002f84:	f006 b83e 	b.w	90009004 <HAL_NVIC_SetPriority>
90002f88:	58024400 	.word	0x58024400

90002f8c <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
90002f8c:	4b0a      	ldr	r3, [pc, #40]	; (90002fb8 <HAL_CRC_MspInit+0x2c>)
90002f8e:	6802      	ldr	r2, [r0, #0]
90002f90:	429a      	cmp	r2, r3
90002f92:	d000      	beq.n	90002f96 <HAL_CRC_MspInit+0xa>
90002f94:	4770      	bx	lr
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
90002f96:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
{
90002f9a:	b082      	sub	sp, #8
    __HAL_RCC_CRC_CLK_ENABLE();
90002f9c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90002fa0:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
90002fa4:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
90002fa8:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
90002fac:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
90002fb0:	9301      	str	r3, [sp, #4]
90002fb2:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
90002fb4:	b002      	add	sp, #8
90002fb6:	4770      	bx	lr
90002fb8:	58024c00 	.word	0x58024c00

90002fbc <HAL_DMA2D_MspInit>:
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
  if(hdma2d->Instance==DMA2D)
90002fbc:	4b0f      	ldr	r3, [pc, #60]	; (90002ffc <HAL_DMA2D_MspInit+0x40>)
90002fbe:	6802      	ldr	r2, [r0, #0]
90002fc0:	429a      	cmp	r2, r3
90002fc2:	d000      	beq.n	90002fc6 <HAL_DMA2D_MspInit+0xa>
90002fc4:	4770      	bx	lr
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
90002fc6:	4b0e      	ldr	r3, [pc, #56]	; (90003000 <HAL_DMA2D_MspInit+0x44>)
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
90002fc8:	205a      	movs	r0, #90	; 0x5a
90002fca:	2200      	movs	r2, #0
90002fcc:	2105      	movs	r1, #5
{
90002fce:	b510      	push	{r4, lr}
    __HAL_RCC_DMA2D_CLK_ENABLE();
90002fd0:	f8d3 40d4 	ldr.w	r4, [r3, #212]	; 0xd4
{
90002fd4:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_CLK_ENABLE();
90002fd6:	f044 0410 	orr.w	r4, r4, #16
90002fda:	f8c3 40d4 	str.w	r4, [r3, #212]	; 0xd4
90002fde:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
90002fe2:	f003 0310 	and.w	r3, r3, #16
90002fe6:	9301      	str	r3, [sp, #4]
90002fe8:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
90002fea:	f006 f80b 	bl	90009004 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
90002fee:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
90002ff0:	b002      	add	sp, #8
90002ff2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
90002ff6:	f006 b843 	b.w	90009080 <HAL_NVIC_EnableIRQ>
90002ffa:	bf00      	nop
90002ffc:	52001000 	.word	0x52001000
90003000:	58024400 	.word	0x58024400

90003004 <HAL_JPEG_MspInit>:
* @param hjpeg: JPEG handle pointer
* @retval None
*/
void HAL_JPEG_MspInit(JPEG_HandleTypeDef* hjpeg)
{
  if(hjpeg->Instance==JPEG)
90003004:	4b3f      	ldr	r3, [pc, #252]	; (90003104 <HAL_JPEG_MspInit+0x100>)
90003006:	6802      	ldr	r2, [r0, #0]
90003008:	429a      	cmp	r2, r3
9000300a:	d000      	beq.n	9000300e <HAL_JPEG_MspInit+0xa>
9000300c:	4770      	bx	lr
{
9000300e:	b570      	push	{r4, r5, r6, lr}
  /* USER CODE BEGIN JPEG_MspInit 0 */
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
  /* USER CODE END JPEG_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_JPEG_CLK_ENABLE();
90003010:	4b3d      	ldr	r3, [pc, #244]	; (90003108 <HAL_JPEG_MspInit+0x104>)
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
90003012:	2211      	movs	r2, #17
90003014:	4e3d      	ldr	r6, [pc, #244]	; (9000310c <HAL_JPEG_MspInit+0x108>)
{
90003016:	b082      	sub	sp, #8
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
90003018:	4d3d      	ldr	r5, [pc, #244]	; (90003110 <HAL_JPEG_MspInit+0x10c>)
9000301a:	4604      	mov	r4, r0
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
9000301c:	6072      	str	r2, [r6, #4]
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
    hmdma_jpeg_infifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
    hmdma_jpeg_infifo_th.Init.DestBurst = MDMA_DEST_BURST_16BEATS;
    hmdma_jpeg_infifo_th.Init.SourceBlockAddressOffset = 0;
    hmdma_jpeg_infifo_th.Init.DestBlockAddressOffset = 0;
    if (HAL_MDMA_Init(&hmdma_jpeg_infifo_th) != HAL_OK)
9000301e:	4630      	mov	r0, r6
    __HAL_RCC_JPEG_CLK_ENABLE();
90003020:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
    hmdma_jpeg_infifo_th.Instance = MDMA_Channel7;
90003024:	493b      	ldr	r1, [pc, #236]	; (90003114 <HAL_JPEG_MspInit+0x110>)
    __HAL_RCC_JPEG_CLK_ENABLE();
90003026:	f042 0220 	orr.w	r2, r2, #32
9000302a:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
    hmdma_jpeg_infifo_th.Init.Priority = MDMA_PRIORITY_HIGH;
9000302e:	2280      	movs	r2, #128	; 0x80
    __HAL_RCC_JPEG_CLK_ENABLE();
90003030:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
    hmdma_jpeg_infifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_WORD;
90003034:	6232      	str	r2, [r6, #32]
    __HAL_RCC_JPEG_CLK_ENABLE();
90003036:	f003 0320 	and.w	r3, r3, #32
    hmdma_jpeg_infifo_th.Instance = MDMA_Channel7;
9000303a:	6031      	str	r1, [r6, #0]
    __HAL_RCC_JPEG_CLK_ENABLE();
9000303c:	9301      	str	r3, [sp, #4]
    hmdma_jpeg_infifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
9000303e:	2300      	movs	r3, #0
    __HAL_RCC_JPEG_CLK_ENABLE();
90003040:	9901      	ldr	r1, [sp, #4]
    hmdma_jpeg_infifo_th.Init.Endianness = MDMA_LITTLE_ENDIANNESS_PRESERVE;
90003042:	6133      	str	r3, [r6, #16]
    hmdma_jpeg_infifo_th.Init.Priority = MDMA_PRIORITY_HIGH;
90003044:	e9c6 3202 	strd	r3, r2, [r6, #8]
    hmdma_jpeg_infifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
90003048:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
9000304c:	6272      	str	r2, [r6, #36]	; 0x24
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
9000304e:	2220      	movs	r2, #32
    hmdma_jpeg_infifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_BYTE;
90003050:	e9c6 3306 	strd	r3, r3, [r6, #24]
    hmdma_jpeg_infifo_th.Init.DestBlockAddressOffset = 0;
90003054:	e9c6 330d 	strd	r3, r3, [r6, #52]	; 0x34
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
90003058:	62b2      	str	r2, [r6, #40]	; 0x28
    hmdma_jpeg_infifo_th.Init.DestBurst = MDMA_DEST_BURST_16BEATS;
9000305a:	f44f 3300 	mov.w	r3, #131072	; 0x20000
9000305e:	f44f 42a0 	mov.w	r2, #20480	; 0x5000
90003062:	e9c6 230b 	strd	r2, r3, [r6, #44]	; 0x2c
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
90003066:	2313      	movs	r3, #19
90003068:	606b      	str	r3, [r5, #4]
    hmdma_jpeg_infifo_th.Init.SourceInc = MDMA_SRC_INC_BYTE;
9000306a:	2302      	movs	r3, #2
9000306c:	6173      	str	r3, [r6, #20]
    if (HAL_MDMA_Init(&hmdma_jpeg_infifo_th) != HAL_OK)
9000306e:	f008 fe23 	bl	9000bcb8 <HAL_MDMA_Init>
90003072:	2800      	cmp	r0, #0
90003074:	d13a      	bne.n	900030ec <HAL_JPEG_MspInit+0xe8>
    {
      Error_Handler();
    }

    if (HAL_MDMA_ConfigPostRequestMask(&hmdma_jpeg_infifo_th, 0, 0) != HAL_OK)
90003076:	2200      	movs	r2, #0
90003078:	4824      	ldr	r0, [pc, #144]	; (9000310c <HAL_JPEG_MspInit+0x108>)
9000307a:	4611      	mov	r1, r2
9000307c:	f008 feba 	bl	9000bdf4 <HAL_MDMA_ConfigPostRequestMask>
90003080:	2800      	cmp	r0, #0
90003082:	d13c      	bne.n	900030fe <HAL_JPEG_MspInit+0xfa>
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
    hmdma_jpeg_outfifo_th.Init.Endianness = MDMA_LITTLE_ENDIANNESS_PRESERVE;
    hmdma_jpeg_outfifo_th.Init.SourceInc = MDMA_SRC_INC_DISABLE;
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
    hmdma_jpeg_outfifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
90003084:	2220      	movs	r2, #32
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
90003086:	2300      	movs	r3, #0
    __HAL_LINKDMA(hjpeg,hdmain,hmdma_jpeg_infifo_th);
90003088:	6326      	str	r6, [r4, #48]	; 0x30
    hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
9000308a:	2013      	movs	r0, #19
    hmdma_jpeg_outfifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
9000308c:	61ea      	str	r2, [r5, #28]
    hmdma_jpeg_outfifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_BYTE;
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
    hmdma_jpeg_outfifo_th.Init.BufferTransferLength = 32;
9000308e:	62aa      	str	r2, [r5, #40]	; 0x28
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
    hmdma_jpeg_outfifo_th.Init.DestBurst = MDMA_DEST_BURST_32BEATS;
90003090:	f44f 3220 	mov.w	r2, #163840	; 0x28000
    hmdma_jpeg_outfifo_th.Instance = MDMA_Channel6;
90003094:	4920      	ldr	r1, [pc, #128]	; (90003118 <HAL_JPEG_MspInit+0x114>)
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
90003096:	60ab      	str	r3, [r5, #8]
    hmdma_jpeg_outfifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_BYTE;
90003098:	622b      	str	r3, [r5, #32]
    hmdma_jpeg_outfifo_th.Init.SourceBlockAddressOffset = 0;
    hmdma_jpeg_outfifo_th.Init.DestBlockAddressOffset = 0;
9000309a:	63ab      	str	r3, [r5, #56]	; 0x38
    __HAL_LINKDMA(hjpeg,hdmain,hmdma_jpeg_infifo_th);
9000309c:	6434      	str	r4, [r6, #64]	; 0x40
    hmdma_jpeg_outfifo_th.Init.DestBurst = MDMA_DEST_BURST_32BEATS;
9000309e:	e9c5 230c 	strd	r2, r3, [r5, #48]	; 0x30
    hmdma_jpeg_outfifo_th.Init.SourceInc = MDMA_SRC_INC_DISABLE;
900030a2:	e9c5 3304 	strd	r3, r3, [r5, #16]
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
900030a6:	2308      	movs	r3, #8
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
900030a8:	22c0      	movs	r2, #192	; 0xc0
    hmdma_jpeg_outfifo_th.Instance = MDMA_Channel6;
900030aa:	e9c5 1000 	strd	r1, r0, [r5]
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
900030ae:	61ab      	str	r3, [r5, #24]
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
900030b0:	f44f 41a0 	mov.w	r1, #20480	; 0x5000
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
900030b4:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
    if (HAL_MDMA_Init(&hmdma_jpeg_outfifo_th) != HAL_OK)
900030b8:	4815      	ldr	r0, [pc, #84]	; (90003110 <HAL_JPEG_MspInit+0x10c>)
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
900030ba:	62e9      	str	r1, [r5, #44]	; 0x2c
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
900030bc:	60ea      	str	r2, [r5, #12]
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
900030be:	626b      	str	r3, [r5, #36]	; 0x24
    if (HAL_MDMA_Init(&hmdma_jpeg_outfifo_th) != HAL_OK)
900030c0:	f008 fdfa 	bl	9000bcb8 <HAL_MDMA_Init>
900030c4:	b9c0      	cbnz	r0, 900030f8 <HAL_JPEG_MspInit+0xf4>
    {
      Error_Handler();
    }

    if (HAL_MDMA_ConfigPostRequestMask(&hmdma_jpeg_outfifo_th, 0, 0) != HAL_OK)
900030c6:	2200      	movs	r2, #0
900030c8:	4811      	ldr	r0, [pc, #68]	; (90003110 <HAL_JPEG_MspInit+0x10c>)
900030ca:	4611      	mov	r1, r2
900030cc:	f008 fe92 	bl	9000bdf4 <HAL_MDMA_ConfigPostRequestMask>
900030d0:	b978      	cbnz	r0, 900030f2 <HAL_JPEG_MspInit+0xee>
    {
      Error_Handler();
    }

    __HAL_LINKDMA(hjpeg,hdmaout,hmdma_jpeg_outfifo_th);
900030d2:	6365      	str	r5, [r4, #52]	; 0x34

    /* JPEG interrupt Init */
    HAL_NVIC_SetPriority(JPEG_IRQn, 5, 0);
900030d4:	2079      	movs	r0, #121	; 0x79
900030d6:	2200      	movs	r2, #0
900030d8:	2105      	movs	r1, #5
    __HAL_LINKDMA(hjpeg,hdmaout,hmdma_jpeg_outfifo_th);
900030da:	642c      	str	r4, [r5, #64]	; 0x40
    HAL_NVIC_SetPriority(JPEG_IRQn, 5, 0);
900030dc:	f005 ff92 	bl	90009004 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(JPEG_IRQn);
900030e0:	2079      	movs	r0, #121	; 0x79
  /* USER CODE BEGIN JPEG_MspInit 1 */

  /* USER CODE END JPEG_MspInit 1 */
  }

}
900030e2:	b002      	add	sp, #8
900030e4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    HAL_NVIC_EnableIRQ(JPEG_IRQn);
900030e8:	f005 bfca 	b.w	90009080 <HAL_NVIC_EnableIRQ>
      Error_Handler();
900030ec:	f7ff ff32 	bl	90002f54 <Error_Handler>
900030f0:	e7c1      	b.n	90003076 <HAL_JPEG_MspInit+0x72>
      Error_Handler();
900030f2:	f7ff ff2f 	bl	90002f54 <Error_Handler>
900030f6:	e7ec      	b.n	900030d2 <HAL_JPEG_MspInit+0xce>
      Error_Handler();
900030f8:	f7ff ff2c 	bl	90002f54 <Error_Handler>
900030fc:	e7e3      	b.n	900030c6 <HAL_JPEG_MspInit+0xc2>
      Error_Handler();
900030fe:	f7ff ff29 	bl	90002f54 <Error_Handler>
90003102:	e7bf      	b.n	90003084 <HAL_JPEG_MspInit+0x80>
90003104:	52003000 	.word	0x52003000
90003108:	58024400 	.word	0x58024400
9000310c:	240095f8 	.word	0x240095f8
90003110:	24009664 	.word	0x24009664
90003114:	52000200 	.word	0x52000200
90003118:	520001c0 	.word	0x520001c0

9000311c <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
9000311c:	b570      	push	{r4, r5, r6, lr}
9000311e:	b0ba      	sub	sp, #232	; 0xe8
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90003120:	2100      	movs	r1, #0
{
90003122:	4604      	mov	r4, r0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90003124:	22c0      	movs	r2, #192	; 0xc0
90003126:	a80a      	add	r0, sp, #40	; 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90003128:	9109      	str	r1, [sp, #36]	; 0x24
9000312a:	e9cd 1105 	strd	r1, r1, [sp, #20]
9000312e:	e9cd 1107 	strd	r1, r1, [sp, #28]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90003132:	f024 ffab 	bl	9002808c <memset>
  if(hltdc->Instance==LTDC)
90003136:	4b4a      	ldr	r3, [pc, #296]	; (90003260 <HAL_LTDC_MspInit+0x144>)
90003138:	6822      	ldr	r2, [r4, #0]
9000313a:	429a      	cmp	r2, r3
9000313c:	d001      	beq.n	90003142 <HAL_LTDC_MspInit+0x26>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
9000313e:	b03a      	add	sp, #232	; 0xe8
90003140:	bd70      	pop	{r4, r5, r6, pc}
    PeriphClkInitStruct.PLL3.PLL3P = 2;
90003142:	2302      	movs	r3, #2
    PeriphClkInitStruct.PLL3.PLL3M = 5;
90003144:	2205      	movs	r2, #5
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
90003146:	f04f 5400 	mov.w	r4, #536870912	; 0x20000000
9000314a:	2500      	movs	r5, #0
    PeriphClkInitStruct.PLL3.PLL3N = 160;
9000314c:	21a0      	movs	r1, #160	; 0xa0
    PeriphClkInitStruct.PLL3.PLL3P = 2;
9000314e:	9316      	str	r3, [sp, #88]	; 0x58
    PeriphClkInitStruct.PLL3.PLL3M = 5;
90003150:	9214      	str	r2, [sp, #80]	; 0x50
    PeriphClkInitStruct.PLL3.PLL3R = 83;
90003152:	2253      	movs	r2, #83	; 0x53
    PeriphClkInitStruct.PLL3.PLL3Q = 2;
90003154:	9317      	str	r3, [sp, #92]	; 0x5c
    PeriphClkInitStruct.PLL3.PLL3R = 83;
90003156:	f44f 6300 	mov.w	r3, #2048	; 0x800
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
9000315a:	a80a      	add	r0, sp, #40	; 0x28
    PeriphClkInitStruct.PLL3.PLL3N = 160;
9000315c:	9115      	str	r1, [sp, #84]	; 0x54
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
9000315e:	e9cd 450a 	strd	r4, r5, [sp, #40]	; 0x28
    PeriphClkInitStruct.PLL3.PLL3R = 83;
90003162:	e9cd 2318 	strd	r2, r3, [sp, #96]	; 0x60
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
90003166:	f009 fed7 	bl	9000cf18 <HAL_RCCEx_PeriphCLKConfig>
9000316a:	2800      	cmp	r0, #0
9000316c:	d174      	bne.n	90003258 <HAL_LTDC_MspInit+0x13c>
    __HAL_RCC_LTDC_CLK_ENABLE();
9000316e:	4b3d      	ldr	r3, [pc, #244]	; (90003264 <HAL_LTDC_MspInit+0x148>)
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
90003170:	2402      	movs	r4, #2
    GPIO_InitStruct.Pull = GPIO_NOPULL;
90003172:	2500      	movs	r5, #0
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
90003174:	260e      	movs	r6, #14
    __HAL_RCC_LTDC_CLK_ENABLE();
90003176:	f8d3 20e4 	ldr.w	r2, [r3, #228]	; 0xe4
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
9000317a:	a905      	add	r1, sp, #20
9000317c:	483a      	ldr	r0, [pc, #232]	; (90003268 <HAL_LTDC_MspInit+0x14c>)
    __HAL_RCC_LTDC_CLK_ENABLE();
9000317e:	f042 0208 	orr.w	r2, r2, #8
90003182:	f8c3 20e4 	str.w	r2, [r3, #228]	; 0xe4
90003186:	f8d3 20e4 	ldr.w	r2, [r3, #228]	; 0xe4
9000318a:	f002 0208 	and.w	r2, r2, #8
9000318e:	9200      	str	r2, [sp, #0]
90003190:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOK_CLK_ENABLE();
90003192:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90003196:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
9000319a:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
9000319e:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
900031a2:	f402 6280 	and.w	r2, r2, #1024	; 0x400
900031a6:	9201      	str	r2, [sp, #4]
900031a8:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOI_CLK_ENABLE();
900031aa:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
900031ae:	f442 7280 	orr.w	r2, r2, #256	; 0x100
900031b2:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
900031b6:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
900031ba:	f402 7280 	and.w	r2, r2, #256	; 0x100
900031be:	9202      	str	r2, [sp, #8]
900031c0:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOJ_CLK_ENABLE();
900031c2:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
900031c6:	f442 7200 	orr.w	r2, r2, #512	; 0x200
900031ca:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
900031ce:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
900031d2:	f402 7200 	and.w	r2, r2, #512	; 0x200
900031d6:	9203      	str	r2, [sp, #12]
900031d8:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOH_CLK_ENABLE();
900031da:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
900031de:	f042 0280 	orr.w	r2, r2, #128	; 0x80
900031e2:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
900031e6:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
900031ea:	9408      	str	r4, [sp, #32]
    __HAL_RCC_GPIOH_CLK_ENABLE();
900031ec:	f003 0380 	and.w	r3, r3, #128	; 0x80
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
900031f0:	9609      	str	r6, [sp, #36]	; 0x24
    __HAL_RCC_GPIOH_CLK_ENABLE();
900031f2:	9304      	str	r3, [sp, #16]
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_3
900031f4:	23fc      	movs	r3, #252	; 0xfc
    __HAL_RCC_GPIOH_CLK_ENABLE();
900031f6:	9a04      	ldr	r2, [sp, #16]
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_3
900031f8:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
900031fa:	e9cd 4506 	strd	r4, r5, [sp, #24]
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
900031fe:	f006 f96d 	bl	900094dc <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_9|GPIO_PIN_12
90003202:	f24d 2303 	movw	r3, #53763	; 0xd203
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
90003206:	a905      	add	r1, sp, #20
90003208:	4818      	ldr	r0, [pc, #96]	; (9000326c <HAL_LTDC_MspInit+0x150>)
    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_9|GPIO_PIN_12
9000320a:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
9000320c:	e9cd 4506 	strd	r4, r5, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
90003210:	e9cd 4608 	strd	r4, r6, [sp, #32]
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
90003214:	f006 f962 	bl	900094dc <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_14|GPIO_PIN_12|GPIO_PIN_13
90003218:	f64f 73fb 	movw	r3, #65531	; 0xfffb
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
9000321c:	a905      	add	r1, sp, #20
9000321e:	4814      	ldr	r0, [pc, #80]	; (90003270 <HAL_LTDC_MspInit+0x154>)
    GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_14|GPIO_PIN_12|GPIO_PIN_13
90003220:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
90003222:	e9cd 4506 	strd	r4, r5, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
90003226:	e9cd 4608 	strd	r4, r6, [sp, #32]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
9000322a:	f006 f957 	bl	900094dc <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_9;
9000322e:	f44f 7300 	mov.w	r3, #512	; 0x200
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
90003232:	a905      	add	r1, sp, #20
90003234:	480f      	ldr	r0, [pc, #60]	; (90003274 <HAL_LTDC_MspInit+0x158>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
90003236:	9609      	str	r6, [sp, #36]	; 0x24
    GPIO_InitStruct.Pin = GPIO_PIN_9;
90003238:	e9cd 3405 	strd	r3, r4, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
9000323c:	e9cd 5407 	strd	r5, r4, [sp, #28]
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
90003240:	f006 f94c 	bl	900094dc <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
90003244:	462a      	mov	r2, r5
90003246:	2105      	movs	r1, #5
90003248:	2058      	movs	r0, #88	; 0x58
9000324a:	f005 fedb 	bl	90009004 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
9000324e:	2058      	movs	r0, #88	; 0x58
90003250:	f005 ff16 	bl	90009080 <HAL_NVIC_EnableIRQ>
}
90003254:	b03a      	add	sp, #232	; 0xe8
90003256:	bd70      	pop	{r4, r5, r6, pc}
      Error_Handler();
90003258:	f7ff fe7c 	bl	90002f54 <Error_Handler>
9000325c:	e787      	b.n	9000316e <HAL_LTDC_MspInit+0x52>
9000325e:	bf00      	nop
90003260:	50001000 	.word	0x50001000
90003264:	58024400 	.word	0x58024400
90003268:	58022800 	.word	0x58022800
9000326c:	58022000 	.word	0x58022000
90003270:	58022400 	.word	0x58022400
90003274:	58021c00 	.word	0x58021c00

90003278 <HAL_SDRAM_MspInit>:
static void HAL_FMC_MspInit(void){
  /* USER CODE BEGIN FMC_MspInit 0 */

  /* USER CODE END FMC_MspInit 0 */
  GPIO_InitTypeDef GPIO_InitStruct ={0};
  if (FMC_Initialized) {
90003278:	4836      	ldr	r0, [pc, #216]	; (90003354 <HAL_SDRAM_MspInit+0xdc>)
  GPIO_InitTypeDef GPIO_InitStruct ={0};
9000327a:	2300      	movs	r3, #0
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
9000327c:	b5d0      	push	{r4, r6, r7, lr}
  if (FMC_Initialized) {
9000327e:	6801      	ldr	r1, [r0, #0]
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
90003280:	b0b8      	sub	sp, #224	; 0xe0
  GPIO_InitTypeDef GPIO_InitStruct ={0};
90003282:	e9cd 3302 	strd	r3, r3, [sp, #8]
90003286:	e9cd 3304 	strd	r3, r3, [sp, #16]
9000328a:	9306      	str	r3, [sp, #24]
  if (FMC_Initialized) {
9000328c:	b109      	cbz	r1, 90003292 <HAL_SDRAM_MspInit+0x1a>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
9000328e:	b038      	add	sp, #224	; 0xe0
90003290:	bdd0      	pop	{r4, r6, r7, pc}
  FMC_Initialized = 1;
90003292:	2301      	movs	r3, #1
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90003294:	22b8      	movs	r2, #184	; 0xb8
  FMC_Initialized = 1;
90003296:	6003      	str	r3, [r0, #0]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90003298:	a80a      	add	r0, sp, #40	; 0x28
9000329a:	f024 fef7 	bl	9002808c <memset>
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_FMC;
9000329e:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
900032a2:	2300      	movs	r3, #0
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
900032a4:	a808      	add	r0, sp, #32
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_FMC;
900032a6:	e9cd 2308 	strd	r2, r3, [sp, #32]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
900032aa:	f009 fe35 	bl	9000cf18 <HAL_RCCEx_PeriphCLKConfig>
900032ae:	2800      	cmp	r0, #0
900032b0:	d14c      	bne.n	9000334c <HAL_SDRAM_MspInit+0xd4>
  __HAL_RCC_FMC_CLK_ENABLE();
900032b2:	4b29      	ldr	r3, [pc, #164]	; (90003358 <HAL_SDRAM_MspInit+0xe0>)
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
900032b4:	f64f 7083 	movw	r0, #65411	; 0xff83
900032b8:	2102      	movs	r1, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
900032ba:	240c      	movs	r4, #12
  __HAL_RCC_FMC_CLK_ENABLE();
900032bc:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
900032c0:	2600      	movs	r6, #0
900032c2:	2703      	movs	r7, #3
  __HAL_RCC_FMC_CLK_ENABLE();
900032c4:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
900032c8:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
900032cc:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
900032d0:	9406      	str	r4, [sp, #24]
  __HAL_RCC_FMC_CLK_ENABLE();
900032d2:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
900032d6:	e9cd 0102 	strd	r0, r1, [sp, #8]
  __HAL_RCC_FMC_CLK_ENABLE();
900032da:	9301      	str	r3, [sp, #4]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
900032dc:	a902      	add	r1, sp, #8
900032de:	481f      	ldr	r0, [pc, #124]	; (9000335c <HAL_SDRAM_MspInit+0xe4>)
  __HAL_RCC_FMC_CLK_ENABLE();
900032e0:	9b01      	ldr	r3, [sp, #4]
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
900032e2:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
900032e6:	f006 f8f9 	bl	900094dc <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
900032ea:	f248 1233 	movw	r2, #33075	; 0x8133
900032ee:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
900032f0:	a902      	add	r1, sp, #8
900032f2:	481b      	ldr	r0, [pc, #108]	; (90003360 <HAL_SDRAM_MspInit+0xe8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
900032f4:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
900032f6:	e9cd 2302 	strd	r2, r3, [sp, #8]
900032fa:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
900032fe:	f006 f8ed 	bl	900094dc <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
90003302:	f24c 7203 	movw	r2, #50947	; 0xc703
90003306:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
90003308:	a902      	add	r1, sp, #8
9000330a:	4816      	ldr	r0, [pc, #88]	; (90003364 <HAL_SDRAM_MspInit+0xec>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
9000330c:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
9000330e:	e9cd 2302 	strd	r2, r3, [sp, #8]
90003312:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
90003316:	f006 f8e1 	bl	900094dc <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
9000331a:	f64f 023f 	movw	r2, #63551	; 0xf83f
9000331e:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
90003320:	a902      	add	r1, sp, #8
90003322:	4811      	ldr	r0, [pc, #68]	; (90003368 <HAL_SDRAM_MspInit+0xf0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90003324:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
90003326:	e9cd 2302 	strd	r2, r3, [sp, #8]
9000332a:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
9000332e:	f006 f8d5 	bl	900094dc <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
90003332:	22e0      	movs	r2, #224	; 0xe0
90003334:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
90003336:	a902      	add	r1, sp, #8
90003338:	480c      	ldr	r0, [pc, #48]	; (9000336c <HAL_SDRAM_MspInit+0xf4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
9000333a:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
9000333c:	e9cd 6704 	strd	r6, r7, [sp, #16]
90003340:	e9cd 2302 	strd	r2, r3, [sp, #8]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
90003344:	f006 f8ca 	bl	900094dc <HAL_GPIO_Init>
}
90003348:	b038      	add	sp, #224	; 0xe0
9000334a:	bdd0      	pop	{r4, r6, r7, pc}
      Error_Handler();
9000334c:	f7ff fe02 	bl	90002f54 <Error_Handler>
90003350:	e7af      	b.n	900032b2 <HAL_SDRAM_MspInit+0x3a>
90003352:	bf00      	nop
90003354:	2400970c 	.word	0x2400970c
90003358:	58024400 	.word	0x58024400
9000335c:	58021000 	.word	0x58021000
90003360:	58021800 	.word	0x58021800
90003364:	58020c00 	.word	0x58020c00
90003368:	58021400 	.word	0x58021400
9000336c:	58021c00 	.word	0x58021c00

90003370 <HAL_SDRAM_MspDeInit>:

static void HAL_FMC_MspDeInit(void){
  /* USER CODE BEGIN FMC_MspDeInit 0 */

  /* USER CODE END FMC_MspDeInit 0 */
  if (FMC_DeInitialized) {
90003370:	4b13      	ldr	r3, [pc, #76]	; (900033c0 <HAL_SDRAM_MspDeInit+0x50>)
90003372:	681a      	ldr	r2, [r3, #0]
90003374:	b102      	cbz	r2, 90003378 <HAL_SDRAM_MspDeInit+0x8>
90003376:	4770      	bx	lr
  /* USER CODE BEGIN FMC_MspDeInit 1 */

  /* USER CODE END FMC_MspDeInit 1 */
}

void HAL_SDRAM_MspDeInit(SDRAM_HandleTypeDef* hsdram){
90003378:	b510      	push	{r4, lr}
  __HAL_RCC_FMC_CLK_DISABLE();
9000337a:	4a12      	ldr	r2, [pc, #72]	; (900033c4 <HAL_SDRAM_MspDeInit+0x54>)
  FMC_DeInitialized = 1;
9000337c:	2401      	movs	r4, #1
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
9000337e:	f64f 7183 	movw	r1, #65411	; 0xff83
90003382:	4811      	ldr	r0, [pc, #68]	; (900033c8 <HAL_SDRAM_MspDeInit+0x58>)
  FMC_DeInitialized = 1;
90003384:	601c      	str	r4, [r3, #0]
  __HAL_RCC_FMC_CLK_DISABLE();
90003386:	f8d2 30d4 	ldr.w	r3, [r2, #212]	; 0xd4
9000338a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
9000338e:	f8c2 30d4 	str.w	r3, [r2, #212]	; 0xd4
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
90003392:	f006 f9d5 	bl	90009740 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOG, GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
90003396:	f248 1133 	movw	r1, #33075	; 0x8133
9000339a:	480c      	ldr	r0, [pc, #48]	; (900033cc <HAL_SDRAM_MspDeInit+0x5c>)
9000339c:	f006 f9d0 	bl	90009740 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOD, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
900033a0:	f24c 7103 	movw	r1, #50947	; 0xc703
900033a4:	480a      	ldr	r0, [pc, #40]	; (900033d0 <HAL_SDRAM_MspDeInit+0x60>)
900033a6:	f006 f9cb 	bl	90009740 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOF, GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
900033aa:	f64f 013f 	movw	r1, #63551	; 0xf83f
900033ae:	4809      	ldr	r0, [pc, #36]	; (900033d4 <HAL_SDRAM_MspDeInit+0x64>)
900033b0:	f006 f9c6 	bl	90009740 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7);
900033b4:	21e0      	movs	r1, #224	; 0xe0
900033b6:	4808      	ldr	r0, [pc, #32]	; (900033d8 <HAL_SDRAM_MspDeInit+0x68>)
  /* USER CODE END SDRAM_MspDeInit 0 */
  HAL_FMC_MspDeInit();
  /* USER CODE BEGIN SDRAM_MspDeInit 1 */

  /* USER CODE END SDRAM_MspDeInit 1 */
}
900033b8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7);
900033bc:	f006 b9c0 	b.w	90009740 <HAL_GPIO_DeInit>
900033c0:	24009708 	.word	0x24009708
900033c4:	58024400 	.word	0x58024400
900033c8:	58021000 	.word	0x58021000
900033cc:	58021800 	.word	0x58021800
900033d0:	58020c00 	.word	0x58020c00
900033d4:	58021400 	.word	0x58021400
900033d8:	58021c00 	.word	0x58021c00

900033dc <HAL_InitTick>:
  uint32_t              uwTimclock, uwAPB1Prescaler;

  uint32_t              uwPrescalerValue;
  uint32_t              pFLatency;
/*Configure the TIM6 IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
900033dc:	280f      	cmp	r0, #15
900033de:	d901      	bls.n	900033e4 <HAL_InitTick+0x8>
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
    uwTickPrio = TickPriority;
    }
  else
  {
    return HAL_ERROR;
900033e0:	2001      	movs	r0, #1
    return HAL_TIM_Base_Start_IT(&htim6);
  }

  /* Return function status */
  return HAL_ERROR;
}
900033e2:	4770      	bx	lr
{
900033e4:	b530      	push	{r4, r5, lr}
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0U);
900033e6:	4601      	mov	r1, r0
{
900033e8:	b08b      	sub	sp, #44	; 0x2c
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0U);
900033ea:	2200      	movs	r2, #0
900033ec:	4604      	mov	r4, r0
900033ee:	2036      	movs	r0, #54	; 0x36
900033f0:	f005 fe08 	bl	90009004 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
900033f4:	2036      	movs	r0, #54	; 0x36
900033f6:	f005 fe43 	bl	90009080 <HAL_NVIC_EnableIRQ>
  __HAL_RCC_TIM6_CLK_ENABLE();
900033fa:	4b1a      	ldr	r3, [pc, #104]	; (90003464 <HAL_InitTick+0x88>)
    uwTickPrio = TickPriority;
900033fc:	4a1a      	ldr	r2, [pc, #104]	; (90003468 <HAL_InitTick+0x8c>)
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
900033fe:	4669      	mov	r1, sp
90003400:	a802      	add	r0, sp, #8
    uwTickPrio = TickPriority;
90003402:	6014      	str	r4, [r2, #0]
  __HAL_RCC_TIM6_CLK_ENABLE();
90003404:	f8d3 20e8 	ldr.w	r2, [r3, #232]	; 0xe8
90003408:	f042 0210 	orr.w	r2, r2, #16
9000340c:	f8c3 20e8 	str.w	r2, [r3, #232]	; 0xe8
90003410:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
90003414:	f003 0310 	and.w	r3, r3, #16
90003418:	9301      	str	r3, [sp, #4]
9000341a:	9b01      	ldr	r3, [sp, #4]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
9000341c:	f009 fc5c 	bl	9000ccd8 <HAL_RCC_GetClockConfig>
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
90003420:	9b07      	ldr	r3, [sp, #28]
90003422:	b9bb      	cbnz	r3, 90003454 <HAL_InitTick+0x78>
    uwTimclock = HAL_RCC_GetPCLK1Freq();
90003424:	f009 fbc8 	bl	9000cbb8 <HAL_RCC_GetPCLK1Freq>
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
90003428:	4b10      	ldr	r3, [pc, #64]	; (9000346c <HAL_InitTick+0x90>)
  htim6.Init.ClockDivision = 0;
9000342a:	2200      	movs	r2, #0
  htim6.Instance = TIM6;
9000342c:	4c10      	ldr	r4, [pc, #64]	; (90003470 <HAL_InitTick+0x94>)
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
9000342e:	fba3 1300 	umull	r1, r3, r3, r0
  htim6.Instance = TIM6;
90003432:	4d10      	ldr	r5, [pc, #64]	; (90003474 <HAL_InitTick+0x98>)
  htim6.Init.Period = (1000000U / 1000U) - 1U;
90003434:	f240 31e7 	movw	r1, #999	; 0x3e7
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
90003438:	4620      	mov	r0, r4
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
9000343a:	0c9b      	lsrs	r3, r3, #18
  htim6.Instance = TIM6;
9000343c:	6025      	str	r5, [r4, #0]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
9000343e:	60a2      	str	r2, [r4, #8]
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
90003440:	3b01      	subs	r3, #1
  htim6.Init.Period = (1000000U / 1000U) - 1U;
90003442:	e9c4 1203 	strd	r1, r2, [r4, #12]
  htim6.Init.Prescaler = uwPrescalerValue;
90003446:	6063      	str	r3, [r4, #4]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
90003448:	f00a fbd8 	bl	9000dbfc <HAL_TIM_Base_Init>
9000344c:	b130      	cbz	r0, 9000345c <HAL_InitTick+0x80>
    return HAL_ERROR;
9000344e:	2001      	movs	r0, #1
}
90003450:	b00b      	add	sp, #44	; 0x2c
90003452:	bd30      	pop	{r4, r5, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
90003454:	f009 fbb0 	bl	9000cbb8 <HAL_RCC_GetPCLK1Freq>
90003458:	0040      	lsls	r0, r0, #1
9000345a:	e7e5      	b.n	90003428 <HAL_InitTick+0x4c>
    return HAL_TIM_Base_Start_IT(&htim6);
9000345c:	4620      	mov	r0, r4
9000345e:	f00a fc83 	bl	9000dd68 <HAL_TIM_Base_Start_IT>
90003462:	e7f5      	b.n	90003450 <HAL_InitTick+0x74>
90003464:	58024400 	.word	0x58024400
90003468:	24000078 	.word	0x24000078
9000346c:	431bde83 	.word	0x431bde83
90003470:	24009710 	.word	0x24009710
90003474:	40001000 	.word	0x40001000

90003478 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
90003478:	4770      	bx	lr
9000347a:	bf00      	nop

9000347c <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
9000347c:	e7fe      	b.n	9000347c <HardFault_Handler>
9000347e:	bf00      	nop

90003480 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
90003480:	e7fe      	b.n	90003480 <MemManage_Handler>
90003482:	bf00      	nop

90003484 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
90003484:	e7fe      	b.n	90003484 <BusFault_Handler>
90003486:	bf00      	nop

90003488 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
90003488:	e7fe      	b.n	90003488 <UsageFault_Handler>
9000348a:	bf00      	nop

9000348c <DebugMon_Handler>:
9000348c:	4770      	bx	lr
9000348e:	bf00      	nop

90003490 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
90003490:	4801      	ldr	r0, [pc, #4]	; (90003498 <TIM6_DAC_IRQHandler+0x8>)
90003492:	f00a bccd 	b.w	9000de30 <HAL_TIM_IRQHandler>
90003496:	bf00      	nop
90003498:	24009710 	.word	0x24009710

9000349c <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
9000349c:	4801      	ldr	r0, [pc, #4]	; (900034a4 <LTDC_IRQHandler+0x8>)
9000349e:	f008 bab5 	b.w	9000ba0c <HAL_LTDC_IRQHandler>
900034a2:	bf00      	nop
900034a4:	24009550 	.word	0x24009550

900034a8 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
900034a8:	4801      	ldr	r0, [pc, #4]	; (900034b0 <DMA2D_IRQHandler+0x8>)
900034aa:	f005 bf13 	b.w	900092d4 <HAL_DMA2D_IRQHandler>
900034ae:	bf00      	nop
900034b0:	24009490 	.word	0x24009490

900034b4 <JPEG_IRQHandler>:
void JPEG_IRQHandler(void)
{
  /* USER CODE BEGIN JPEG_IRQn 0 */

  /* USER CODE END JPEG_IRQn 0 */
  HAL_JPEG_IRQHandler(&hjpeg);
900034b4:	4801      	ldr	r0, [pc, #4]	; (900034bc <JPEG_IRQHandler+0x8>)
900034b6:	f008 b995 	b.w	9000b7e4 <HAL_JPEG_IRQHandler>
900034ba:	bf00      	nop
900034bc:	240094f8 	.word	0x240094f8

900034c0 <MDMA_IRQHandler>:
void MDMA_IRQHandler(void)
{
  /* USER CODE BEGIN MDMA_IRQn 0 */

  /* USER CODE END MDMA_IRQn 0 */
  HAL_MDMA_IRQHandler(&hmdma_jpeg_outfifo_th);
900034c0:	4804      	ldr	r0, [pc, #16]	; (900034d4 <MDMA_IRQHandler+0x14>)
{
900034c2:	b508      	push	{r3, lr}
  HAL_MDMA_IRQHandler(&hmdma_jpeg_outfifo_th);
900034c4:	f008 fd56 	bl	9000bf74 <HAL_MDMA_IRQHandler>
  HAL_MDMA_IRQHandler(&hmdma_jpeg_infifo_th);
900034c8:	4803      	ldr	r0, [pc, #12]	; (900034d8 <MDMA_IRQHandler+0x18>)
  /* USER CODE BEGIN MDMA_IRQn 1 */

  /* USER CODE END MDMA_IRQn 1 */
}
900034ca:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_MDMA_IRQHandler(&hmdma_jpeg_infifo_th);
900034ce:	f008 bd51 	b.w	9000bf74 <HAL_MDMA_IRQHandler>
900034d2:	bf00      	nop
900034d4:	24009664 	.word	0x24009664
900034d8:	240095f8 	.word	0x240095f8

900034dc <_getpid>:
}

int _getpid(void)
{
	return 1;
}
900034dc:	2001      	movs	r0, #1
900034de:	4770      	bx	lr

900034e0 <_kill>:

int _kill(int pid, int sig)
{
900034e0:	b508      	push	{r3, lr}
	errno = EINVAL;
900034e2:	f024 fe87 	bl	900281f4 <__errno>
900034e6:	2216      	movs	r2, #22
900034e8:	4603      	mov	r3, r0
	return -1;
}
900034ea:	f04f 30ff 	mov.w	r0, #4294967295
	errno = EINVAL;
900034ee:	601a      	str	r2, [r3, #0]
}
900034f0:	bd08      	pop	{r3, pc}
900034f2:	bf00      	nop

900034f4 <_exit>:

void _exit (int status)
{
900034f4:	b508      	push	{r3, lr}
	errno = EINVAL;
900034f6:	f024 fe7d 	bl	900281f4 <__errno>
900034fa:	2316      	movs	r3, #22
900034fc:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
900034fe:	e7fe      	b.n	900034fe <_exit+0xa>

90003500 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
90003500:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
90003502:	1e16      	subs	r6, r2, #0
90003504:	dd07      	ble.n	90003516 <_read+0x16>
90003506:	460c      	mov	r4, r1
90003508:	198d      	adds	r5, r1, r6
	{
		*ptr++ = __io_getchar();
9000350a:	f3af 8000 	nop.w
9000350e:	f804 0b01 	strb.w	r0, [r4], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
90003512:	42a5      	cmp	r5, r4
90003514:	d1f9      	bne.n	9000350a <_read+0xa>
	}

return len;
}
90003516:	4630      	mov	r0, r6
90003518:	bd70      	pop	{r4, r5, r6, pc}
9000351a:	bf00      	nop

9000351c <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
9000351c:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
9000351e:	1e16      	subs	r6, r2, #0
90003520:	dd07      	ble.n	90003532 <_write+0x16>
90003522:	460c      	mov	r4, r1
90003524:	198d      	adds	r5, r1, r6
	{
		__io_putchar(*ptr++);
90003526:	f814 0b01 	ldrb.w	r0, [r4], #1
9000352a:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
9000352e:	42ac      	cmp	r4, r5
90003530:	d1f9      	bne.n	90003526 <_write+0xa>
	}
	return len;
}
90003532:	4630      	mov	r0, r6
90003534:	bd70      	pop	{r4, r5, r6, pc}
90003536:	bf00      	nop

90003538 <_close>:

int _close(int file)
{
	return -1;
}
90003538:	f04f 30ff 	mov.w	r0, #4294967295
9000353c:	4770      	bx	lr
9000353e:	bf00      	nop

90003540 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
90003540:	f44f 5300 	mov.w	r3, #8192	; 0x2000
	return 0;
}
90003544:	2000      	movs	r0, #0
	st->st_mode = S_IFCHR;
90003546:	604b      	str	r3, [r1, #4]
}
90003548:	4770      	bx	lr
9000354a:	bf00      	nop

9000354c <_isatty>:

int _isatty(int file)
{
	return 1;
}
9000354c:	2001      	movs	r0, #1
9000354e:	4770      	bx	lr

90003550 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
90003550:	2000      	movs	r0, #0
90003552:	4770      	bx	lr

90003554 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
90003554:	4770      	bx	lr
90003556:	bf00      	nop

90003558 <_ZN23ApplicationFontProviderD0Ev>:
90003558:	b510      	push	{r4, lr}
9000355a:	4604      	mov	r4, r0
9000355c:	2104      	movs	r1, #4
9000355e:	f024 fadf 	bl	90027b20 <_ZdlPvj>
90003562:	4620      	mov	r0, r4
90003564:	bd10      	pop	{r4, pc}
90003566:	bf00      	nop

90003568 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
90003568:	2901      	cmp	r1, #1
{
9000356a:	b508      	push	{r3, lr}
    switch (typography)
9000356c:	d004      	beq.n	90003578 <_ZN23ApplicationFontProvider7getFontEt+0x10>
9000356e:	2902      	cmp	r1, #2
90003570:	d00a      	beq.n	90003588 <_ZN23ApplicationFontProvider7getFontEt+0x20>
90003572:	b129      	cbz	r1, 90003580 <_ZN23ApplicationFontProvider7getFontEt+0x18>
90003574:	2000      	movs	r0, #0
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
    }
}
90003576:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
90003578:	f000 fe68 	bl	9000424c <_ZN17TypedTextDatabase8getFontsEv>
9000357c:	6840      	ldr	r0, [r0, #4]
}
9000357e:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
90003580:	f000 fe64 	bl	9000424c <_ZN17TypedTextDatabase8getFontsEv>
90003584:	6800      	ldr	r0, [r0, #0]
}
90003586:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
90003588:	f000 fe60 	bl	9000424c <_ZN17TypedTextDatabase8getFontsEv>
9000358c:	6880      	ldr	r0, [r0, #8]
}
9000358e:	bd08      	pop	{r3, pc}

90003590 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
90003590:	4800      	ldr	r0, [pc, #0]	; (90003594 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
90003592:	4770      	bx	lr
90003594:	9002a5f8 	.word	0x9002a5f8

90003598 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
90003598:	200c      	movs	r0, #12
9000359a:	4770      	bx	lr

9000359c <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
    {
        if (unicode == 0)
9000359c:	b169      	cbz	r1, 900035ba <_ZNK8touchgfx4Font8getGlyphEt+0x1e>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
9000359e:	6802      	ldr	r2, [r0, #0]
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
900035a0:	b530      	push	{r4, r5, lr}
900035a2:	b083      	sub	sp, #12
        const uint8_t* dummyPixelDataPointer = 0;
900035a4:	2400      	movs	r4, #0
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
900035a6:	6895      	ldr	r5, [r2, #8]
900035a8:	f10d 0303 	add.w	r3, sp, #3
900035ac:	aa01      	add	r2, sp, #4
        const uint8_t* dummyPixelDataPointer = 0;
900035ae:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
900035b0:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
900035b4:	47a8      	blx	r5
        return glyph;
    }
900035b6:	b003      	add	sp, #12
900035b8:	bd30      	pop	{r4, r5, pc}
            return 0;
900035ba:	4608      	mov	r0, r1
    }
900035bc:	4770      	bx	lr
900035be:	bf00      	nop

900035c0 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
900035c0:	89c0      	ldrh	r0, [r0, #14]
900035c2:	4770      	bx	lr

900035c4 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
900035c4:	8a00      	ldrh	r0, [r0, #16]
900035c6:	4770      	bx	lr

900035c8 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
900035c8:	88c0      	ldrh	r0, [r0, #6]
900035ca:	4770      	bx	lr

900035cc <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
900035cc:	8880      	ldrh	r0, [r0, #4]
900035ce:	4770      	bx	lr

900035d0 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
900035d0:	7a80      	ldrb	r0, [r0, #10]
    }
900035d2:	f000 007f 	and.w	r0, r0, #127	; 0x7f
900035d6:	4770      	bx	lr

900035d8 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
900035d8:	7a80      	ldrb	r0, [r0, #10]
    }
900035da:	09c0      	lsrs	r0, r0, #7
900035dc:	4770      	bx	lr
900035de:	bf00      	nop

900035e0 <_ZN8touchgfx9TypedTextD1Ev>:
    }
900035e0:	4770      	bx	lr
900035e2:	bf00      	nop

900035e4 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
900035e4:	b510      	push	{r4, lr}
900035e6:	4604      	mov	r4, r0
    }
900035e8:	2108      	movs	r1, #8
900035ea:	f024 fa99 	bl	90027b20 <_ZdlPvj>
900035ee:	4620      	mov	r0, r4
900035f0:	bd10      	pop	{r4, pc}
900035f2:	bf00      	nop

900035f4 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
900035f4:	4770      	bx	lr
900035f6:	bf00      	nop

900035f8 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
900035f8:	f500 7398 	add.w	r3, r0, #304	; 0x130
900035fc:	6808      	ldr	r0, [r1, #0]
900035fe:	6849      	ldr	r1, [r1, #4]
90003600:	c303      	stmia	r3!, {r0, r1}
    }
90003602:	4770      	bx	lr

90003604 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
90003604:	4770      	bx	lr
90003606:	bf00      	nop

90003608 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
90003608:	4770      	bx	lr
9000360a:	bf00      	nop

9000360c <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
9000360c:	6041      	str	r1, [r0, #4]
    }
9000360e:	4770      	bx	lr

90003610 <_ZNK8touchgfx10Transition13FullSolidRect12getSolidRectEv>:
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90003610:	f04f 0c00 	mov.w	ip, #0
    class FullSolidRect : public Widget
    {
    public:
        virtual Rect getSolidRect() const
        {
            return Rect(0, 0, rect.width, rect.height);
90003614:	688a      	ldr	r2, [r1, #8]
90003616:	f8c0 c000 	str.w	ip, [r0]
9000361a:	6042      	str	r2, [r0, #4]
        }
9000361c:	4770      	bx	lr
9000361e:	bf00      	nop

90003620 <_ZNK8touchgfx10Transition13FullSolidRect4drawERKNS_4RectE>:

        virtual void draw(const Rect& area) const
        {
        }
90003620:	4770      	bx	lr
90003622:	bf00      	nop

90003624 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
90003624:	4770      	bx	lr
90003626:	bf00      	nop

90003628 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
90003628:	4905      	ldr	r1, [pc, #20]	; (90003640 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x18>)
9000362a:	2200      	movs	r2, #0
// screen_main_menu

void FrontendApplicationBase::gotoscreen_main_menuScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoscreen_main_menuScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
9000362c:	f500 73a2 	add.w	r3, r0, #324	; 0x144
90003630:	f8c0 2150 	str.w	r2, [r0, #336]	; 0x150
90003634:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
90003638:	e9c0 0152 	strd	r0, r1, [r0, #328]	; 0x148

    virtual void changeToStartScreen()
    {
        gotoscreen_main_menuScreenNoTransition();
    }
9000363c:	4770      	bx	lr
9000363e:	bf00      	nop
90003640:	90003b45 	.word	0x90003b45

90003644 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
90003644:	2301      	movs	r3, #1
90003646:	7203      	strb	r3, [r0, #8]
    }
90003648:	4770      	bx	lr
9000364a:	bf00      	nop

9000364c <_ZN8touchgfx10Transition13FullSolidRectD1Ev>:
    class FullSolidRect : public Widget
9000364c:	4770      	bx	lr
9000364e:	bf00      	nop

90003650 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED1Ev>:
 * the given direction.  This transition only draws the pixels in the
 * framebuffer once, and never moves any pixels. It is therefore very
 * useful on MCUs with limited performance.
 */
template <Direction templateDirection>
class WipeTransition : public Transition
90003650:	4770      	bx	lr
90003652:	bf00      	nop

90003654 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
90003654:	4770      	bx	lr
90003656:	bf00      	nop

90003658 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
90003658:	4770      	bx	lr
9000365a:	bf00      	nop

9000365c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE8tearDownEv>:
            // Synchronize framebuffers
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
        }
    }

    virtual void tearDown()
9000365c:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
9000365e:	6840      	ldr	r0, [r0, #4]
90003660:	6803      	ldr	r3, [r0, #0]
90003662:	3110      	adds	r1, #16
90003664:	6e5b      	ldr	r3, [r3, #100]	; 0x64
90003666:	4718      	bx	r3

90003668 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv>:
    }

    virtual void init()
90003668:	4601      	mov	r1, r0
    {
        Transition::init();
        // Add the solid (and not-drawing-anything) widget on top to cover the other widgets
        screenContainer->add(solid);
9000366a:	6840      	ldr	r0, [r0, #4]
9000366c:	6803      	ldr	r3, [r0, #0]
9000366e:	3110      	adds	r1, #16
90003670:	6e1b      	ldr	r3, [r3, #96]	; 0x60
90003672:	4718      	bx	r3

90003674 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv>:
     * Wipe transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
90003674:	4770      	bx	lr
90003676:	bf00      	nop

90003678 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
    {
        (pobject->*pmemfun)();
90003678:	68c2      	ldr	r2, [r0, #12]
    virtual void execute()
9000367a:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
9000367c:	6841      	ldr	r1, [r0, #4]
9000367e:	ea4f 0c62 	mov.w	ip, r2, asr #1
90003682:	eb01 0062 	add.w	r0, r1, r2, asr #1
90003686:	07d2      	lsls	r2, r2, #31
90003688:	d401      	bmi.n	9000368e <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x16>
9000368a:	689b      	ldr	r3, [r3, #8]
9000368c:	4718      	bx	r3
9000368e:	f851 200c 	ldr.w	r2, [r1, ip]
90003692:	689b      	ldr	r3, [r3, #8]
90003694:	58d3      	ldr	r3, [r2, r3]
90003696:	4718      	bx	r3

90003698 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
90003698:	6843      	ldr	r3, [r0, #4]
9000369a:	b13b      	cbz	r3, 900036ac <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
9000369c:	6883      	ldr	r3, [r0, #8]
9000369e:	b10b      	cbz	r3, 900036a4 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0xc>
900036a0:	2001      	movs	r0, #1
    }
900036a2:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
900036a4:	68c0      	ldr	r0, [r0, #12]
900036a6:	f000 0001 	and.w	r0, r0, #1
900036aa:	4770      	bx	lr
900036ac:	4618      	mov	r0, r3
900036ae:	4770      	bx	lr

900036b0 <_ZN8touchgfx12NoTransitionD0Ev>:
900036b0:	b510      	push	{r4, lr}
900036b2:	4604      	mov	r4, r0
900036b4:	210c      	movs	r1, #12
900036b6:	f024 fa33 	bl	90027b20 <_ZdlPvj>
900036ba:	4620      	mov	r0, r4
900036bc:	bd10      	pop	{r4, pc}
900036be:	bf00      	nop

900036c0 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
900036c0:	b510      	push	{r4, lr}
900036c2:	4604      	mov	r4, r0
900036c4:	2110      	movs	r1, #16
900036c6:	f024 fa2b 	bl	90027b20 <_ZdlPvj>
900036ca:	4620      	mov	r0, r4
900036cc:	bd10      	pop	{r4, pc}
900036ce:	bf00      	nop

900036d0 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
900036d0:	b510      	push	{r4, lr}
900036d2:	4604      	mov	r4, r0
900036d4:	f44f 71ae 	mov.w	r1, #348	; 0x15c
900036d8:	f024 fa22 	bl	90027b20 <_ZdlPvj>
900036dc:	4620      	mov	r0, r4
900036de:	bd10      	pop	{r4, pc}

900036e0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev>:
class WipeTransition : public Transition
900036e0:	b510      	push	{r4, lr}
900036e2:	4604      	mov	r4, r0
900036e4:	2138      	movs	r1, #56	; 0x38
900036e6:	f024 fa1b 	bl	90027b20 <_ZdlPvj>
900036ea:	4620      	mov	r0, r4
900036ec:	bd10      	pop	{r4, pc}
900036ee:	bf00      	nop

900036f0 <_ZN8touchgfx10Transition13FullSolidRectD0Ev>:
900036f0:	b510      	push	{r4, lr}
900036f2:	4604      	mov	r4, r0
900036f4:	2128      	movs	r1, #40	; 0x28
900036f6:	f024 fa13 	bl	90027b20 <_ZdlPvj>
900036fa:	4620      	mov	r0, r4
900036fc:	bd10      	pop	{r4, pc}
900036fe:	bf00      	nop

90003700 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
90003700:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
90003702:	f013 f8cf 	bl	900168a4 <_ZN8touchgfx11Application11getInstanceEv>
90003706:	6803      	ldr	r3, [r0, #0]
    }
90003708:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
9000370c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
9000370e:	4718      	bx	r3

90003710 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
90003710:	b510      	push	{r4, lr}
90003712:	4604      	mov	r4, r0
        animationCounter++;
90003714:	7a80      	ldrb	r0, [r0, #10]
    virtual void handleTickEvent()
90003716:	b082      	sub	sp, #8
        animationCounter++;
90003718:	3001      	adds	r0, #1
        if (animationCounter > animationSteps)
9000371a:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
9000371c:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
9000371e:	4298      	cmp	r0, r3
        animationCounter++;
90003720:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
90003722:	d905      	bls.n	90003730 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x20>
            done = true;
90003724:	2201      	movs	r2, #1
            animationCounter = 0;
90003726:	2300      	movs	r3, #0
            done = true;
90003728:	7222      	strb	r2, [r4, #8]
            animationCounter = 0;
9000372a:	72a3      	strb	r3, [r4, #10]
    }
9000372c:	b002      	add	sp, #8
9000372e:	bd10      	pop	{r4, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
90003730:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
90003734:	2100      	movs	r1, #0
90003736:	f014 fe9f 	bl	90018478 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
9000373a:	f010 0201 	ands.w	r2, r0, #1
9000373e:	b283      	uxth	r3, r0
90003740:	d127      	bne.n	90003792 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x82>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
90003742:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
90003744:	4a17      	ldr	r2, [pc, #92]	; (900037a4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x94>)
                const uint16_t prevSolidWidth = solid.getWidth();
90003746:	8b21      	ldrh	r1, [r4, #24]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
90003748:	8810      	ldrh	r0, [r2, #0]
9000374a:	1ac2      	subs	r2, r0, r3
                const uint16_t delta = prevSolidWidth - solid.getWidth();
9000374c:	1a09      	subs	r1, r1, r0
                screenContainer->invalidateRect(r);
9000374e:	6860      	ldr	r0, [r4, #4]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
90003750:	b212      	sxth	r2, r2
                const uint16_t delta = prevSolidWidth - solid.getWidth();
90003752:	440b      	add	r3, r1
                screenContainer->invalidateRect(r);
90003754:	4669      	mov	r1, sp
        rect.width = width;
90003756:	8322      	strh	r2, [r4, #24]
90003758:	f8ad 2000 	strh.w	r2, [sp]
9000375c:	2200      	movs	r2, #0
9000375e:	f8ad 3004 	strh.w	r3, [sp, #4]
90003762:	6803      	ldr	r3, [r0, #0]
90003764:	f8ad 2002 	strh.w	r2, [sp, #2]
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
90003768:	4a0f      	ldr	r2, [pc, #60]	; (900037a8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x98>)
                screenContainer->invalidateRect(r);
9000376a:	691b      	ldr	r3, [r3, #16]
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
9000376c:	f9b2 2000 	ldrsh.w	r2, [r2]
90003770:	f8ad 2006 	strh.w	r2, [sp, #6]
                screenContainer->invalidateRect(r);
90003774:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
90003776:	7aa3      	ldrb	r3, [r4, #10]
90003778:	2b01      	cmp	r3, #1
9000377a:	d1d7      	bne.n	9000372c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1c>
9000377c:	4b0b      	ldr	r3, [pc, #44]	; (900037ac <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x9c>)
9000377e:	781b      	ldrb	r3, [r3, #0]
90003780:	2b00      	cmp	r3, #0
90003782:	d0d3      	beq.n	9000372c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1c>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
90003784:	f013 f88e 	bl	900168a4 <_ZN8touchgfx11Application11getInstanceEv>
    }
90003788:	b002      	add	sp, #8
9000378a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
9000378e:	f013 b88f 	b.w	900168b0 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
90003792:	f64f 71ff 	movw	r1, #65535	; 0xffff
90003796:	2800      	cmp	r0, #0
90003798:	bfd8      	it	le
9000379a:	460a      	movle	r2, r1
9000379c:	4413      	add	r3, r2
9000379e:	b29b      	uxth	r3, r3
900037a0:	81e3      	strh	r3, [r4, #14]
900037a2:	e7cf      	b.n	90003744 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x34>
900037a4:	24039828 	.word	0x24039828
900037a8:	2403982a 	.word	0x2403982a
900037ac:	24039832 	.word	0x24039832

900037b0 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoscreen_snake_gameScreenWipeTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoscreen_snake_gameScreenWipeTransitionEastImpl()
{
900037b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<screen_snake_gameView, screen_snake_gamePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
900037b4:	e9d0 5355 	ldrd	r5, r3, [r0, #340]	; 0x154
{
900037b8:	b083      	sub	sp, #12
900037ba:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
900037bc:	68a8      	ldr	r0, [r5, #8]
    touchgfx::makeTransition<screen_snake_gameView, screen_snake_gamePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
900037be:	9301      	str	r3, [sp, #4]
900037c0:	6803      	ldr	r3, [r0, #0]
900037c2:	6a1b      	ldr	r3, [r3, #32]
900037c4:	4798      	blx	r3
900037c6:	f5b0 7f64 	cmp.w	r0, #912	; 0x390
900037ca:	f0c0 80ba 	bcc.w	90003942 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x192>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
900037ce:	6868      	ldr	r0, [r5, #4]
900037d0:	6803      	ldr	r3, [r0, #0]
900037d2:	6a1b      	ldr	r3, [r3, #32]
900037d4:	4798      	blx	r3
900037d6:	280f      	cmp	r0, #15
900037d8:	f240 80bf 	bls.w	9000395a <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1aa>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
900037dc:	68e8      	ldr	r0, [r5, #12]
900037de:	6803      	ldr	r3, [r0, #0]
900037e0:	6a1b      	ldr	r3, [r3, #32]
900037e2:	4798      	blx	r3
900037e4:	2837      	cmp	r0, #55	; 0x37
900037e6:	f240 80b2 	bls.w	9000394e <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x19e>
    if (*currentTrans)
900037ea:	f8df 91a8 	ldr.w	r9, [pc, #424]	; 90003994 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1e4>
    Application::getInstance()->clearAllTimerWidgets();
900037ee:	f013 f859 	bl	900168a4 <_ZN8touchgfx11Application11getInstanceEv>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
900037f2:	3004      	adds	r0, #4
900037f4:	f013 f8a3 	bl	9001693e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
900037f8:	f8d9 0000 	ldr.w	r0, [r9]
900037fc:	b140      	cbz	r0, 90003810 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x60>
        (*currentTrans)->tearDown();
900037fe:	6803      	ldr	r3, [r0, #0]
90003800:	68db      	ldr	r3, [r3, #12]
90003802:	4798      	blx	r3
    if (*currentTrans)
90003804:	f8d9 0000 	ldr.w	r0, [r9]
90003808:	b110      	cbz	r0, 90003810 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x60>
        (*currentTrans)->~Transition();
9000380a:	6803      	ldr	r3, [r0, #0]
9000380c:	681b      	ldr	r3, [r3, #0]
9000380e:	4798      	blx	r3
    if (*currentScreen)
90003810:	f8df 8184 	ldr.w	r8, [pc, #388]	; 90003998 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1e8>
90003814:	f8d8 0000 	ldr.w	r0, [r8]
90003818:	2800      	cmp	r0, #0
9000381a:	d07f      	beq.n	9000391c <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x16c>
        (*currentScreen)->tearDownScreen();
9000381c:	6803      	ldr	r3, [r0, #0]
9000381e:	695b      	ldr	r3, [r3, #20]
90003820:	4798      	blx	r3
    if (*currentPresenter)
90003822:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
90003826:	2800      	cmp	r0, #0
90003828:	d073      	beq.n	90003912 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x162>
        (*currentPresenter)->deactivate();
9000382a:	6803      	ldr	r3, [r0, #0]
9000382c:	685b      	ldr	r3, [r3, #4]
9000382e:	4798      	blx	r3
    if (*currentScreen)
90003830:	f8d8 0000 	ldr.w	r0, [r8]
90003834:	b110      	cbz	r0, 9000383c <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x8c>
        (*currentScreen)->~Screen();
90003836:	6803      	ldr	r3, [r0, #0]
90003838:	681b      	ldr	r3, [r3, #0]
9000383a:	4798      	blx	r3
    if (*currentPresenter)
9000383c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
90003840:	b110      	cbz	r0, 90003848 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x98>
        (*currentPresenter)->~Presenter();
90003842:	6803      	ldr	r3, [r0, #0]
90003844:	689b      	ldr	r3, [r3, #8]
90003846:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
90003848:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
9000384a:	2100      	movs	r1, #0
9000384c:	6802      	ldr	r2, [r0, #0]
        : screenContainer(0), done(false)
9000384e:	468a      	mov	sl, r1
90003850:	6a52      	ldr	r2, [r2, #36]	; 0x24
90003852:	4790      	blx	r2
          solid()
90003854:	4a44      	ldr	r2, [pc, #272]	; (90003968 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1b8>)
90003856:	f100 0b10 	add.w	fp, r0, #16
9000385a:	4604      	mov	r4, r0
9000385c:	6002      	str	r2, [r0, #0]
          animationSteps(transitionSteps),
9000385e:	2214      	movs	r2, #20
          solid()
90003860:	4651      	mov	r1, sl
90003862:	f8c0 a004 	str.w	sl, [r0, #4]
          animationSteps(transitionSteps),
90003866:	f8a0 2009 	strh.w	r2, [r0, #9]
          solid()
9000386a:	2228      	movs	r2, #40	; 0x28
9000386c:	f880 a008 	strb.w	sl, [r0, #8]
          calculatedValue(0),
90003870:	f8a0 a00e 	strh.w	sl, [r0, #14]
          solid()
90003874:	4658      	mov	r0, fp
90003876:	f024 fc09 	bl	9002808c <memset>
            targetValue = HAL::DISPLAY_WIDTH;
9000387a:	4a3c      	ldr	r2, [pc, #240]	; (9000396c <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1bc>)
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
9000387c:	68a8      	ldr	r0, [r5, #8]
          touchable(false),
9000387e:	f44f 7180 	mov.w	r1, #256	; 0x100
90003882:	f9b2 2000 	ldrsh.w	r2, [r2]
        rect.x = x;
90003886:	f8c4 a014 	str.w	sl, [r4, #20]
9000388a:	81a2      	strh	r2, [r4, #12]
        rect.width = width;
9000388c:	8322      	strh	r2, [r4, #24]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
9000388e:	4a38      	ldr	r2, [pc, #224]	; (90003970 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1c0>)
90003890:	f9b2 2000 	ldrsh.w	r2, [r2]
        rect.height = height;
90003894:	8362      	strh	r2, [r4, #26]
90003896:	6802      	ldr	r2, [r0, #0]
90003898:	6a52      	ldr	r2, [r2, #36]	; 0x24
          touchable(false),
9000389a:	86a1      	strh	r1, [r4, #52]	; 0x34
    class FullSolidRect : public Widget
9000389c:	4935      	ldr	r1, [pc, #212]	; (90003974 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1c4>)
9000389e:	6121      	str	r1, [r4, #16]
900038a0:	4651      	mov	r1, sl
900038a2:	4790      	blx	r2
900038a4:	4606      	mov	r6, r0
900038a6:	f003 f905 	bl	90006ab4 <_ZN21screen_snake_gameViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
900038aa:	6868      	ldr	r0, [r5, #4]
900038ac:	4651      	mov	r1, sl
900038ae:	6803      	ldr	r3, [r0, #0]
900038b0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
900038b2:	4798      	blx	r3
900038b4:	4605      	mov	r5, r0
900038b6:	4631      	mov	r1, r6
900038b8:	f003 f886 	bl	900069c8 <_ZN26screen_snake_gamePresenterC1ER21screen_snake_gameView>
    *currentTrans = newTransition;
900038bc:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
900038c0:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
900038c4:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
900038c8:	2d00      	cmp	r5, #0
900038ca:	d02c      	beq.n	90003926 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x176>
900038cc:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
900038ce:	9a01      	ldr	r2, [sp, #4]
    newScreen->setupScreen();
900038d0:	4630      	mov	r0, r6
900038d2:	6013      	str	r3, [r2, #0]
900038d4:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
900038d6:	60aa      	str	r2, [r5, #8]
900038d8:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
900038da:	63f5      	str	r5, [r6, #60]	; 0x3c
900038dc:	4798      	blx	r3
    newPresenter->activate();
900038de:	682b      	ldr	r3, [r5, #0]
900038e0:	4628      	mov	r0, r5
900038e2:	681b      	ldr	r3, [r3, #0]
900038e4:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
900038e6:	4621      	mov	r1, r4
900038e8:	4630      	mov	r0, r6
900038ea:	f014 fdbf 	bl	9001846c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
900038ee:	6823      	ldr	r3, [r4, #0]
900038f0:	4a21      	ldr	r2, [pc, #132]	; (90003978 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1c8>)
900038f2:	691b      	ldr	r3, [r3, #16]
900038f4:	4293      	cmp	r3, r2
900038f6:	d118      	bne.n	9000392a <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x17a>
        screenContainer->add(solid);
900038f8:	6860      	ldr	r0, [r4, #4]
900038fa:	4659      	mov	r1, fp
900038fc:	6803      	ldr	r3, [r0, #0]
900038fe:	6e1b      	ldr	r3, [r3, #96]	; 0x60
90003900:	4798      	blx	r3
    newTransition->invalidate();
90003902:	6823      	ldr	r3, [r4, #0]
90003904:	4a1d      	ldr	r2, [pc, #116]	; (9000397c <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1cc>)
90003906:	695b      	ldr	r3, [r3, #20]
90003908:	4293      	cmp	r3, r2
9000390a:	d115      	bne.n	90003938 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x188>
}
9000390c:	b003      	add	sp, #12
9000390e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    if (*currentScreen)
90003912:	f8d8 0000 	ldr.w	r0, [r8]
90003916:	2800      	cmp	r0, #0
90003918:	d18d      	bne.n	90003836 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x86>
9000391a:	e795      	b.n	90003848 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x98>
    if (*currentPresenter)
9000391c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
90003920:	2800      	cmp	r0, #0
90003922:	d182      	bne.n	9000382a <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x7a>
90003924:	e790      	b.n	90003848 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x98>
    model->bind(newPresenter);
90003926:	462b      	mov	r3, r5
90003928:	e7d1      	b.n	900038ce <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x11e>
    newTransition->init();
9000392a:	4620      	mov	r0, r4
9000392c:	4798      	blx	r3
    newTransition->invalidate();
9000392e:	6823      	ldr	r3, [r4, #0]
90003930:	4a12      	ldr	r2, [pc, #72]	; (9000397c <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1cc>)
90003932:	695b      	ldr	r3, [r3, #20]
90003934:	4293      	cmp	r3, r2
90003936:	d0e9      	beq.n	9000390c <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x15c>
90003938:	4620      	mov	r0, r4
9000393a:	b003      	add	sp, #12
9000393c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90003940:	4718      	bx	r3
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90003942:	4b0f      	ldr	r3, [pc, #60]	; (90003980 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1d0>)
90003944:	21a3      	movs	r1, #163	; 0xa3
90003946:	4a0f      	ldr	r2, [pc, #60]	; (90003984 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1d4>)
90003948:	480f      	ldr	r0, [pc, #60]	; (90003988 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1d8>)
9000394a:	f024 f917 	bl	90027b7c <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
9000394e:	4b0f      	ldr	r3, [pc, #60]	; (9000398c <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1dc>)
90003950:	21a5      	movs	r1, #165	; 0xa5
90003952:	4a0c      	ldr	r2, [pc, #48]	; (90003984 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1d4>)
90003954:	480c      	ldr	r0, [pc, #48]	; (90003988 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1d8>)
90003956:	f024 f911 	bl	90027b7c <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
9000395a:	4b0d      	ldr	r3, [pc, #52]	; (90003990 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1e0>)
9000395c:	21a4      	movs	r1, #164	; 0xa4
9000395e:	4a09      	ldr	r2, [pc, #36]	; (90003984 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1d4>)
90003960:	4809      	ldr	r0, [pc, #36]	; (90003988 <_ZN23FrontendApplicationBase49gotoscreen_snake_gameScreenWipeTransitionEastImplEv+0x1d8>)
90003962:	f024 f90b 	bl	90027b7c <__assert_func>
90003966:	bf00      	nop
90003968:	9002ad7c 	.word	0x9002ad7c
9000396c:	24039828 	.word	0x24039828
90003970:	2403982a 	.word	0x2403982a
90003974:	9002ac84 	.word	0x9002ac84
90003978:	90003669 	.word	0x90003669
9000397c:	90003675 	.word	0x90003675
90003980:	9002a6f8 	.word	0x9002a6f8
90003984:	9002a788 	.word	0x9002a788
90003988:	9002a8b4 	.word	0x9002a8b4
9000398c:	9002a9a0 	.word	0x9002a9a0
90003990:	9002a8fc 	.word	0x9002a8fc
90003994:	2403987c 	.word	0x2403987c
90003998:	24039878 	.word	0x24039878

9000399c <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoscreen_tictactoe_gameScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoscreen_tictactoe_gameScreenNoTransitionImpl()
{
9000399c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<screen_tictactoe_gameView, screen_tictactoe_gamePresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
900039a0:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
900039a4:	4607      	mov	r7, r0
900039a6:	b081      	sub	sp, #4
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
900039a8:	68a0      	ldr	r0, [r4, #8]
900039aa:	6803      	ldr	r3, [r0, #0]
900039ac:	6a1b      	ldr	r3, [r3, #32]
900039ae:	4798      	blx	r3
900039b0:	f242 735b 	movw	r3, #10075	; 0x275b
900039b4:	4298      	cmp	r0, r3
900039b6:	f240 809e 	bls.w	90003af6 <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x15a>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
900039ba:	6860      	ldr	r0, [r4, #4]
900039bc:	6803      	ldr	r3, [r0, #0]
900039be:	6a1b      	ldr	r3, [r3, #32]
900039c0:	4798      	blx	r3
900039c2:	280f      	cmp	r0, #15
900039c4:	f240 80a3 	bls.w	90003b0e <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x172>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
900039c8:	68e0      	ldr	r0, [r4, #12]
900039ca:	6803      	ldr	r3, [r0, #0]
900039cc:	6a1b      	ldr	r3, [r3, #32]
900039ce:	4798      	blx	r3
900039d0:	280b      	cmp	r0, #11
900039d2:	f240 8096 	bls.w	90003b02 <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x166>
    if (*currentTrans)
900039d6:	f8df 9164 	ldr.w	r9, [pc, #356]	; 90003b3c <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x1a0>
    Application::getInstance()->clearAllTimerWidgets();
900039da:	f012 ff63 	bl	900168a4 <_ZN8touchgfx11Application11getInstanceEv>
900039de:	3004      	adds	r0, #4
900039e0:	f012 ffad 	bl	9001693e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
900039e4:	f8d9 0000 	ldr.w	r0, [r9]
900039e8:	b140      	cbz	r0, 900039fc <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x60>
        (*currentTrans)->tearDown();
900039ea:	6803      	ldr	r3, [r0, #0]
900039ec:	68db      	ldr	r3, [r3, #12]
900039ee:	4798      	blx	r3
    if (*currentTrans)
900039f0:	f8d9 0000 	ldr.w	r0, [r9]
900039f4:	b110      	cbz	r0, 900039fc <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x60>
        (*currentTrans)->~Transition();
900039f6:	6803      	ldr	r3, [r0, #0]
900039f8:	681b      	ldr	r3, [r3, #0]
900039fa:	4798      	blx	r3
    if (*currentScreen)
900039fc:	f8df 8140 	ldr.w	r8, [pc, #320]	; 90003b40 <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x1a4>
90003a00:	f8d8 0000 	ldr.w	r0, [r8]
90003a04:	2800      	cmp	r0, #0
90003a06:	d063      	beq.n	90003ad0 <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x134>
        (*currentScreen)->tearDownScreen();
90003a08:	6803      	ldr	r3, [r0, #0]
90003a0a:	695b      	ldr	r3, [r3, #20]
90003a0c:	4798      	blx	r3
    if (*currentPresenter)
90003a0e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
90003a12:	2800      	cmp	r0, #0
90003a14:	d057      	beq.n	90003ac6 <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x12a>
        (*currentPresenter)->deactivate();
90003a16:	6803      	ldr	r3, [r0, #0]
90003a18:	685b      	ldr	r3, [r3, #4]
90003a1a:	4798      	blx	r3
    if (*currentScreen)
90003a1c:	f8d8 0000 	ldr.w	r0, [r8]
90003a20:	b110      	cbz	r0, 90003a28 <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x8c>
        (*currentScreen)->~Screen();
90003a22:	6803      	ldr	r3, [r0, #0]
90003a24:	681b      	ldr	r3, [r3, #0]
90003a26:	4798      	blx	r3
    if (*currentPresenter)
90003a28:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
90003a2c:	b110      	cbz	r0, 90003a34 <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x98>
        (*currentPresenter)->~Presenter();
90003a2e:	6803      	ldr	r3, [r0, #0]
90003a30:	689b      	ldr	r3, [r3, #8]
90003a32:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
90003a34:	68e0      	ldr	r0, [r4, #12]
90003a36:	2100      	movs	r1, #0
90003a38:	6803      	ldr	r3, [r0, #0]
        : screenContainer(0), done(false)
90003a3a:	468b      	mov	fp, r1
90003a3c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90003a3e:	4798      	blx	r3
90003a40:	4b36      	ldr	r3, [pc, #216]	; (90003b1c <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x180>)
90003a42:	4605      	mov	r5, r0
90003a44:	f8c0 b004 	str.w	fp, [r0, #4]
90003a48:	f880 b008 	strb.w	fp, [r0, #8]
90003a4c:	4659      	mov	r1, fp
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
90003a4e:	68a0      	ldr	r0, [r4, #8]
90003a50:	602b      	str	r3, [r5, #0]
90003a52:	6803      	ldr	r3, [r0, #0]
90003a54:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90003a56:	4798      	blx	r3
90003a58:	4606      	mov	r6, r0
90003a5a:	f003 fd01 	bl	90007460 <_ZN25screen_tictactoe_gameViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
90003a5e:	6860      	ldr	r0, [r4, #4]
90003a60:	4659      	mov	r1, fp
90003a62:	6803      	ldr	r3, [r0, #0]
90003a64:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90003a66:	4798      	blx	r3
90003a68:	4604      	mov	r4, r0
90003a6a:	4631      	mov	r1, r6
90003a6c:	f003 fc80 	bl	90007370 <_ZN30screen_tictactoe_gamePresenterC1ER25screen_tictactoe_gameView>
    *currentTrans = newTransition;
90003a70:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
90003a74:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
90003a78:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
90003a7c:	2c00      	cmp	r4, #0
90003a7e:	d02c      	beq.n	90003ada <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x13e>
90003a80:	1d23      	adds	r3, r4, #4
90003a82:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
90003a86:	4630      	mov	r0, r6
90003a88:	6833      	ldr	r3, [r6, #0]
90003a8a:	f8c4 a008 	str.w	sl, [r4, #8]
90003a8e:	68db      	ldr	r3, [r3, #12]
90003a90:	63f4      	str	r4, [r6, #60]	; 0x3c
90003a92:	4798      	blx	r3
    newPresenter->activate();
90003a94:	6823      	ldr	r3, [r4, #0]
90003a96:	4620      	mov	r0, r4
90003a98:	681b      	ldr	r3, [r3, #0]
90003a9a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
90003a9c:	4629      	mov	r1, r5
90003a9e:	4630      	mov	r0, r6
90003aa0:	f014 fce4 	bl	9001846c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
90003aa4:	682b      	ldr	r3, [r5, #0]
90003aa6:	491e      	ldr	r1, [pc, #120]	; (90003b20 <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x184>)
90003aa8:	691a      	ldr	r2, [r3, #16]
90003aaa:	428a      	cmp	r2, r1
90003aac:	d117      	bne.n	90003ade <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x142>
    newTransition->invalidate();
90003aae:	695b      	ldr	r3, [r3, #20]
90003ab0:	4a1c      	ldr	r2, [pc, #112]	; (90003b24 <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x188>)
90003ab2:	4293      	cmp	r3, r2
90003ab4:	d11a      	bne.n	90003aec <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x150>
        Application::getInstance()->invalidate();
90003ab6:	f012 fef5 	bl	900168a4 <_ZN8touchgfx11Application11getInstanceEv>
90003aba:	6803      	ldr	r3, [r0, #0]
90003abc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
}
90003abe:	b001      	add	sp, #4
90003ac0:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90003ac4:	4718      	bx	r3
    if (*currentScreen)
90003ac6:	f8d8 0000 	ldr.w	r0, [r8]
90003aca:	2800      	cmp	r0, #0
90003acc:	d1a9      	bne.n	90003a22 <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x86>
90003ace:	e7b1      	b.n	90003a34 <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x98>
    if (*currentPresenter)
90003ad0:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
90003ad4:	2800      	cmp	r0, #0
90003ad6:	d19e      	bne.n	90003a16 <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x7a>
90003ad8:	e7ac      	b.n	90003a34 <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x98>
    model->bind(newPresenter);
90003ada:	4623      	mov	r3, r4
90003adc:	e7d1      	b.n	90003a82 <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0xe6>
    newTransition->init();
90003ade:	4628      	mov	r0, r5
90003ae0:	4790      	blx	r2
    newTransition->invalidate();
90003ae2:	682b      	ldr	r3, [r5, #0]
90003ae4:	4a0f      	ldr	r2, [pc, #60]	; (90003b24 <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x188>)
90003ae6:	695b      	ldr	r3, [r3, #20]
90003ae8:	4293      	cmp	r3, r2
90003aea:	d0e4      	beq.n	90003ab6 <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x11a>
90003aec:	4628      	mov	r0, r5
90003aee:	b001      	add	sp, #4
90003af0:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90003af4:	4718      	bx	r3
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90003af6:	4b0c      	ldr	r3, [pc, #48]	; (90003b28 <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x18c>)
90003af8:	21a3      	movs	r1, #163	; 0xa3
90003afa:	4a0c      	ldr	r2, [pc, #48]	; (90003b2c <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x190>)
90003afc:	480c      	ldr	r0, [pc, #48]	; (90003b30 <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x194>)
90003afe:	f024 f83d 	bl	90027b7c <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90003b02:	4b0c      	ldr	r3, [pc, #48]	; (90003b34 <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x198>)
90003b04:	21a5      	movs	r1, #165	; 0xa5
90003b06:	4a09      	ldr	r2, [pc, #36]	; (90003b2c <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x190>)
90003b08:	4809      	ldr	r0, [pc, #36]	; (90003b30 <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x194>)
90003b0a:	f024 f837 	bl	90027b7c <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90003b0e:	4b0a      	ldr	r3, [pc, #40]	; (90003b38 <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x19c>)
90003b10:	21a4      	movs	r1, #164	; 0xa4
90003b12:	4a06      	ldr	r2, [pc, #24]	; (90003b2c <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x190>)
90003b14:	4806      	ldr	r0, [pc, #24]	; (90003b30 <_ZN23FrontendApplicationBase47gotoscreen_tictactoe_gameScreenNoTransitionImplEv+0x194>)
90003b16:	f024 f831 	bl	90027b7c <__assert_func>
90003b1a:	bf00      	nop
90003b1c:	9002ad58 	.word	0x9002ad58
90003b20:	90003609 	.word	0x90003609
90003b24:	90003701 	.word	0x90003701
90003b28:	9002a6f8 	.word	0x9002a6f8
90003b2c:	9002aa44 	.word	0x9002aa44
90003b30:	9002a8b4 	.word	0x9002a8b4
90003b34:	9002a9a0 	.word	0x9002a9a0
90003b38:	9002a8fc 	.word	0x9002a8fc
90003b3c:	2403987c 	.word	0x2403987c
90003b40:	24039878 	.word	0x24039878

90003b44 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv>:
{
90003b44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<screen_main_menuView, screen_main_menuPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
90003b48:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
90003b4c:	4607      	mov	r7, r0
90003b4e:	b081      	sub	sp, #4
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90003b50:	68a0      	ldr	r0, [r4, #8]
90003b52:	6803      	ldr	r3, [r0, #0]
90003b54:	6a1b      	ldr	r3, [r3, #32]
90003b56:	4798      	blx	r3
90003b58:	f5b0 7f86 	cmp.w	r0, #268	; 0x10c
90003b5c:	f0c0 809e 	bcc.w	90003c9c <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x158>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90003b60:	6860      	ldr	r0, [r4, #4]
90003b62:	6803      	ldr	r3, [r0, #0]
90003b64:	6a1b      	ldr	r3, [r3, #32]
90003b66:	4798      	blx	r3
90003b68:	280f      	cmp	r0, #15
90003b6a:	f240 80a3 	bls.w	90003cb4 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x170>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90003b6e:	68e0      	ldr	r0, [r4, #12]
90003b70:	6803      	ldr	r3, [r0, #0]
90003b72:	6a1b      	ldr	r3, [r3, #32]
90003b74:	4798      	blx	r3
90003b76:	280b      	cmp	r0, #11
90003b78:	f240 8096 	bls.w	90003ca8 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x164>
    if (*currentTrans)
90003b7c:	f8df 9160 	ldr.w	r9, [pc, #352]	; 90003ce0 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x19c>
    Application::getInstance()->clearAllTimerWidgets();
90003b80:	f012 fe90 	bl	900168a4 <_ZN8touchgfx11Application11getInstanceEv>
90003b84:	3004      	adds	r0, #4
90003b86:	f012 feda 	bl	9001693e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
90003b8a:	f8d9 0000 	ldr.w	r0, [r9]
90003b8e:	b140      	cbz	r0, 90003ba2 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x5e>
        (*currentTrans)->tearDown();
90003b90:	6803      	ldr	r3, [r0, #0]
90003b92:	68db      	ldr	r3, [r3, #12]
90003b94:	4798      	blx	r3
    if (*currentTrans)
90003b96:	f8d9 0000 	ldr.w	r0, [r9]
90003b9a:	b110      	cbz	r0, 90003ba2 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x5e>
        (*currentTrans)->~Transition();
90003b9c:	6803      	ldr	r3, [r0, #0]
90003b9e:	681b      	ldr	r3, [r3, #0]
90003ba0:	4798      	blx	r3
    if (*currentScreen)
90003ba2:	f8df 8140 	ldr.w	r8, [pc, #320]	; 90003ce4 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x1a0>
90003ba6:	f8d8 0000 	ldr.w	r0, [r8]
90003baa:	2800      	cmp	r0, #0
90003bac:	d063      	beq.n	90003c76 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x132>
        (*currentScreen)->tearDownScreen();
90003bae:	6803      	ldr	r3, [r0, #0]
90003bb0:	695b      	ldr	r3, [r3, #20]
90003bb2:	4798      	blx	r3
    if (*currentPresenter)
90003bb4:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
90003bb8:	2800      	cmp	r0, #0
90003bba:	d057      	beq.n	90003c6c <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x128>
        (*currentPresenter)->deactivate();
90003bbc:	6803      	ldr	r3, [r0, #0]
90003bbe:	685b      	ldr	r3, [r3, #4]
90003bc0:	4798      	blx	r3
    if (*currentScreen)
90003bc2:	f8d8 0000 	ldr.w	r0, [r8]
90003bc6:	b110      	cbz	r0, 90003bce <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x8a>
        (*currentScreen)->~Screen();
90003bc8:	6803      	ldr	r3, [r0, #0]
90003bca:	681b      	ldr	r3, [r3, #0]
90003bcc:	4798      	blx	r3
    if (*currentPresenter)
90003bce:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
90003bd2:	b110      	cbz	r0, 90003bda <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x96>
        (*currentPresenter)->~Presenter();
90003bd4:	6803      	ldr	r3, [r0, #0]
90003bd6:	689b      	ldr	r3, [r3, #8]
90003bd8:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
90003bda:	68e0      	ldr	r0, [r4, #12]
90003bdc:	2100      	movs	r1, #0
90003bde:	6803      	ldr	r3, [r0, #0]
        : screenContainer(0), done(false)
90003be0:	468b      	mov	fp, r1
90003be2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90003be4:	4798      	blx	r3
90003be6:	4b36      	ldr	r3, [pc, #216]	; (90003cc0 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x17c>)
90003be8:	4605      	mov	r5, r0
90003bea:	f8c0 b004 	str.w	fp, [r0, #4]
90003bee:	f880 b008 	strb.w	fp, [r0, #8]
90003bf2:	4659      	mov	r1, fp
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
90003bf4:	68a0      	ldr	r0, [r4, #8]
90003bf6:	602b      	str	r3, [r5, #0]
90003bf8:	6803      	ldr	r3, [r0, #0]
90003bfa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90003bfc:	4798      	blx	r3
90003bfe:	4606      	mov	r6, r0
90003c00:	f002 febc 	bl	9000697c <_ZN20screen_main_menuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
90003c04:	6860      	ldr	r0, [r4, #4]
90003c06:	4659      	mov	r1, fp
90003c08:	6803      	ldr	r3, [r0, #0]
90003c0a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90003c0c:	4798      	blx	r3
90003c0e:	4604      	mov	r4, r0
90003c10:	4631      	mov	r1, r6
90003c12:	f002 fe87 	bl	90006924 <_ZN25screen_main_menuPresenterC1ER20screen_main_menuView>
    *currentTrans = newTransition;
90003c16:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
90003c1a:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
90003c1e:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
90003c22:	2c00      	cmp	r4, #0
90003c24:	d02c      	beq.n	90003c80 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x13c>
90003c26:	1d23      	adds	r3, r4, #4
90003c28:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
90003c2c:	4630      	mov	r0, r6
90003c2e:	6833      	ldr	r3, [r6, #0]
90003c30:	f8c4 a008 	str.w	sl, [r4, #8]
90003c34:	68db      	ldr	r3, [r3, #12]
90003c36:	63f4      	str	r4, [r6, #60]	; 0x3c
90003c38:	4798      	blx	r3
    newPresenter->activate();
90003c3a:	6823      	ldr	r3, [r4, #0]
90003c3c:	4620      	mov	r0, r4
90003c3e:	681b      	ldr	r3, [r3, #0]
90003c40:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
90003c42:	4629      	mov	r1, r5
90003c44:	4630      	mov	r0, r6
90003c46:	f014 fc11 	bl	9001846c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
90003c4a:	682b      	ldr	r3, [r5, #0]
90003c4c:	491d      	ldr	r1, [pc, #116]	; (90003cc4 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x180>)
90003c4e:	691a      	ldr	r2, [r3, #16]
90003c50:	428a      	cmp	r2, r1
90003c52:	d117      	bne.n	90003c84 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x140>
    newTransition->invalidate();
90003c54:	695b      	ldr	r3, [r3, #20]
90003c56:	4a1c      	ldr	r2, [pc, #112]	; (90003cc8 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x184>)
90003c58:	4293      	cmp	r3, r2
90003c5a:	d11a      	bne.n	90003c92 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x14e>
        Application::getInstance()->invalidate();
90003c5c:	f012 fe22 	bl	900168a4 <_ZN8touchgfx11Application11getInstanceEv>
90003c60:	6803      	ldr	r3, [r0, #0]
90003c62:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
}
90003c64:	b001      	add	sp, #4
90003c66:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90003c6a:	4718      	bx	r3
    if (*currentScreen)
90003c6c:	f8d8 0000 	ldr.w	r0, [r8]
90003c70:	2800      	cmp	r0, #0
90003c72:	d1a9      	bne.n	90003bc8 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x84>
90003c74:	e7b1      	b.n	90003bda <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x96>
    if (*currentPresenter)
90003c76:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
90003c7a:	2800      	cmp	r0, #0
90003c7c:	d19e      	bne.n	90003bbc <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x78>
90003c7e:	e7ac      	b.n	90003bda <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x96>
    model->bind(newPresenter);
90003c80:	4623      	mov	r3, r4
90003c82:	e7d1      	b.n	90003c28 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0xe4>
    newTransition->init();
90003c84:	4628      	mov	r0, r5
90003c86:	4790      	blx	r2
    newTransition->invalidate();
90003c88:	682b      	ldr	r3, [r5, #0]
90003c8a:	4a0f      	ldr	r2, [pc, #60]	; (90003cc8 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x184>)
90003c8c:	695b      	ldr	r3, [r3, #20]
90003c8e:	4293      	cmp	r3, r2
90003c90:	d0e4      	beq.n	90003c5c <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x118>
90003c92:	4628      	mov	r0, r5
90003c94:	b001      	add	sp, #4
90003c96:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90003c9a:	4718      	bx	r3
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90003c9c:	4b0b      	ldr	r3, [pc, #44]	; (90003ccc <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x188>)
90003c9e:	21a3      	movs	r1, #163	; 0xa3
90003ca0:	4a0b      	ldr	r2, [pc, #44]	; (90003cd0 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x18c>)
90003ca2:	480c      	ldr	r0, [pc, #48]	; (90003cd4 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x190>)
90003ca4:	f023 ff6a 	bl	90027b7c <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90003ca8:	4b0b      	ldr	r3, [pc, #44]	; (90003cd8 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x194>)
90003caa:	21a5      	movs	r1, #165	; 0xa5
90003cac:	4a08      	ldr	r2, [pc, #32]	; (90003cd0 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x18c>)
90003cae:	4809      	ldr	r0, [pc, #36]	; (90003cd4 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x190>)
90003cb0:	f023 ff64 	bl	90027b7c <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90003cb4:	4b09      	ldr	r3, [pc, #36]	; (90003cdc <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x198>)
90003cb6:	21a4      	movs	r1, #164	; 0xa4
90003cb8:	4a05      	ldr	r2, [pc, #20]	; (90003cd0 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x18c>)
90003cba:	4806      	ldr	r0, [pc, #24]	; (90003cd4 <_ZN23FrontendApplicationBase42gotoscreen_main_menuScreenNoTransitionImplEv+0x190>)
90003cbc:	f023 ff5e 	bl	90027b7c <__assert_func>
90003cc0:	9002ad58 	.word	0x9002ad58
90003cc4:	90003609 	.word	0x90003609
90003cc8:	90003701 	.word	0x90003701
90003ccc:	9002a6f8 	.word	0x9002a6f8
90003cd0:	9002ab64 	.word	0x9002ab64
90003cd4:	9002a8b4 	.word	0x9002a8b4
90003cd8:	9002a9a0 	.word	0x9002a9a0
90003cdc:	9002a8fc 	.word	0x9002a8fc
90003ce0:	2403987c 	.word	0x2403987c
90003ce4:	24039878 	.word	0x24039878

90003ce8 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
90003ce8:	f8d0 3140 	ldr.w	r3, [r0, #320]	; 0x140
90003cec:	b1d3      	cbz	r3, 90003d24 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3c>
90003cee:	681a      	ldr	r2, [r3, #0]
    virtual void handlePendingScreenTransition()
90003cf0:	b570      	push	{r4, r5, r6, lr}
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
90003cf2:	68d1      	ldr	r1, [r2, #12]
90003cf4:	4604      	mov	r4, r0
90003cf6:	4818      	ldr	r0, [pc, #96]	; (90003d58 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x70>)
90003cf8:	4281      	cmp	r1, r0
90003cfa:	d118      	bne.n	90003d2e <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x46>
        return (pobject != 0) && (pmemfun != 0);
90003cfc:	6858      	ldr	r0, [r3, #4]
90003cfe:	b180      	cbz	r0, 90003d22 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
90003d00:	6899      	ldr	r1, [r3, #8]
90003d02:	b1e1      	cbz	r1, 90003d3e <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x56>
            pendingScreenTransitionCallback->execute();
90003d04:	6892      	ldr	r2, [r2, #8]
90003d06:	4915      	ldr	r1, [pc, #84]	; (90003d5c <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x74>)
90003d08:	428a      	cmp	r2, r1
90003d0a:	d122      	bne.n	90003d52 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x6a>
        (pobject->*pmemfun)();
90003d0c:	68da      	ldr	r2, [r3, #12]
90003d0e:	6858      	ldr	r0, [r3, #4]
90003d10:	eb00 0062 	add.w	r0, r0, r2, asr #1
90003d14:	07d2      	lsls	r2, r2, #31
90003d16:	d406      	bmi.n	90003d26 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3e>
90003d18:	689b      	ldr	r3, [r3, #8]
90003d1a:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
90003d1c:	2300      	movs	r3, #0
90003d1e:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
    }
90003d22:	bd70      	pop	{r4, r5, r6, pc}
90003d24:	4770      	bx	lr
90003d26:	6899      	ldr	r1, [r3, #8]
90003d28:	6803      	ldr	r3, [r0, #0]
90003d2a:	585b      	ldr	r3, [r3, r1]
90003d2c:	e7f5      	b.n	90003d1a <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x32>
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
90003d2e:	4618      	mov	r0, r3
90003d30:	4788      	blx	r1
90003d32:	2800      	cmp	r0, #0
90003d34:	d0f5      	beq.n	90003d22 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
            pendingScreenTransitionCallback->execute();
90003d36:	f8d4 3140 	ldr.w	r3, [r4, #320]	; 0x140
90003d3a:	681a      	ldr	r2, [r3, #0]
90003d3c:	e7e2      	b.n	90003d04 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x1c>
        return (pobject != 0) && (pmemfun != 0);
90003d3e:	68dd      	ldr	r5, [r3, #12]
90003d40:	07ee      	lsls	r6, r5, #31
90003d42:	d5ee      	bpl.n	90003d22 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
90003d44:	6892      	ldr	r2, [r2, #8]
90003d46:	4e05      	ldr	r6, [pc, #20]	; (90003d5c <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x74>)
90003d48:	42b2      	cmp	r2, r6
90003d4a:	d102      	bne.n	90003d52 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x6a>
        (pobject->*pmemfun)();
90003d4c:	eb00 0065 	add.w	r0, r0, r5, asr #1
90003d50:	e7ea      	b.n	90003d28 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x40>
90003d52:	4618      	mov	r0, r3
90003d54:	4790      	blx	r2
90003d56:	e7e1      	b.n	90003d1c <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x34>
90003d58:	90003699 	.word	0x90003699
90003d5c:	90003679 	.word	0x90003679

90003d60 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
90003d60:	b570      	push	{r4, r5, r6, lr}
90003d62:	4604      	mov	r4, r0
90003d64:	4615      	mov	r5, r2
90003d66:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
90003d68:	f012 fe8a 	bl	90016a80 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
90003d6c:	4a1d      	ldr	r2, [pc, #116]	; (90003de4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x84>)
        : currentPresenter(0),
90003d6e:	2300      	movs	r3, #0
      frontendHeap(heap),
90003d70:	f8c4 5154 	str.w	r5, [r4, #340]	; 0x154
        instance = this;
90003d74:	6014      	str	r4, [r2, #0]
        return instance;
90003d76:	4d1c      	ldr	r5, [pc, #112]	; (90003de8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x88>)
      model(m)
90003d78:	4a1c      	ldr	r2, [pc, #112]	; (90003dec <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x8c>)
90003d7a:	6828      	ldr	r0, [r5, #0]
90003d7c:	6022      	str	r2, [r4, #0]
        : pobject(0), pmemfun(0)
90003d7e:	4a1c      	ldr	r2, [pc, #112]	; (90003df0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x90>)
90003d80:	491c      	ldr	r1, [pc, #112]	; (90003df4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x94>)
90003d82:	f8c4 2144 	str.w	r2, [r4, #324]	; 0x144
90003d86:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
90003d8a:	f8c4 6158 	str.w	r6, [r4, #344]	; 0x158
90003d8e:	e9c4 3353 	strd	r3, r3, [r4, #332]	; 0x14c
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
90003d92:	6802      	ldr	r2, [r0, #0]
90003d94:	6892      	ldr	r2, [r2, #8]
90003d96:	428a      	cmp	r2, r1
          pendingScreenTransitionCallback(0)
90003d98:	e9c4 334f 	strd	r3, r3, [r4, #316]	; 0x13c
90003d9c:	d11f      	bne.n	90003dde <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x7e>
        requestedOrientation = orientation;
90003d9e:	f44f 7380 	mov.w	r3, #256	; 0x100
90003da2:	f8a0 3078 	strh.w	r3, [r0, #120]	; 0x78
    touchgfx::Texts::setLanguage(GB);
90003da6:	2000      	movs	r0, #0
90003da8:	f000 fa02 	bl	900041b0 <_ZN8touchgfx5Texts11setLanguageEt>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
90003dac:	682b      	ldr	r3, [r5, #0]
90003dae:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
90003db2:	b192      	cbz	r2, 90003dda <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x7a>
90003db4:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
90003db6:	b180      	cbz	r0, 90003dda <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x7a>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
90003db8:	f01c f811 	bl	9001fdde <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
90003dbc:	682b      	ldr	r3, [r5, #0]
90003dbe:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
90003dc2:	b12a      	cbz	r2, 90003dd0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x70>
90003dc4:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
90003dc6:	b118      	cbz	r0, 90003dd0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x70>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
90003dc8:	f01c f884 	bl	9001fed4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
90003dcc:	4620      	mov	r0, r4
90003dce:	bd70      	pop	{r4, r5, r6, pc}
        return instance->lcdRef;
90003dd0:	6898      	ldr	r0, [r3, #8]
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
90003dd2:	f01c f87f 	bl	9001fed4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
90003dd6:	4620      	mov	r0, r4
90003dd8:	bd70      	pop	{r4, r5, r6, pc}
90003dda:	6898      	ldr	r0, [r3, #8]
90003ddc:	e7ec      	b.n	90003db8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
90003dde:	4619      	mov	r1, r3
90003de0:	4790      	blx	r2
90003de2:	e7e0      	b.n	90003da6 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x46>
90003de4:	24039888 	.word	0x24039888
90003de8:	24039834 	.word	0x24039834
90003dec:	9002ad04 	.word	0x9002ad04
90003df0:	9002acec 	.word	0x9002acec
90003df4:	90000665 	.word	0x90000665

90003df8 <_ZN23FrontendApplicationBase38gotoscreen_main_menuScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
90003df8:	4905      	ldr	r1, [pc, #20]	; (90003e10 <_ZN23FrontendApplicationBase38gotoscreen_main_menuScreenNoTransitionEv+0x18>)
90003dfa:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
90003dfc:	f500 73a2 	add.w	r3, r0, #324	; 0x144
90003e00:	f8c0 2150 	str.w	r2, [r0, #336]	; 0x150
90003e04:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
90003e08:	e9c0 0152 	strd	r0, r1, [r0, #328]	; 0x148
}
90003e0c:	4770      	bx	lr
90003e0e:	bf00      	nop
90003e10:	90003b45 	.word	0x90003b45

90003e14 <_ZN23FrontendApplicationBase45gotoscreen_snake_gameScreenWipeTransitionEastEv>:
90003e14:	4905      	ldr	r1, [pc, #20]	; (90003e2c <_ZN23FrontendApplicationBase45gotoscreen_snake_gameScreenWipeTransitionEastEv+0x18>)
90003e16:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
90003e18:	f500 73a2 	add.w	r3, r0, #324	; 0x144
90003e1c:	f8c0 2150 	str.w	r2, [r0, #336]	; 0x150
90003e20:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
90003e24:	e9c0 0152 	strd	r0, r1, [r0, #328]	; 0x148
}
90003e28:	4770      	bx	lr
90003e2a:	bf00      	nop
90003e2c:	900037b1 	.word	0x900037b1

90003e30 <_ZN23FrontendApplicationBase43gotoscreen_tictactoe_gameScreenNoTransitionEv>:
90003e30:	4905      	ldr	r1, [pc, #20]	; (90003e48 <_ZN23FrontendApplicationBase43gotoscreen_tictactoe_gameScreenNoTransitionEv+0x18>)
90003e32:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
90003e34:	f500 73a2 	add.w	r3, r0, #324	; 0x144
90003e38:	f8c0 2150 	str.w	r2, [r0, #336]	; 0x150
90003e3c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
90003e40:	e9c0 0152 	strd	r0, r1, [r0, #328]	; 0x148
}
90003e44:	4770      	bx	lr
90003e46:	bf00      	nop
90003e48:	9000399d 	.word	0x9000399d

90003e4c <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
90003e4c:	6a40      	ldr	r0, [r0, #36]	; 0x24
90003e4e:	4770      	bx	lr

90003e50 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
90003e50:	6a80      	ldr	r0, [r0, #40]	; 0x28
90003e52:	4770      	bx	lr

90003e54 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
90003e54:	4770      	bx	lr
90003e56:	bf00      	nop

90003e58 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
90003e58:	888b      	ldrh	r3, [r1, #4]
90003e5a:	69c0      	ldr	r0, [r0, #28]
90003e5c:	0adb      	lsrs	r3, r3, #11
90003e5e:	680a      	ldr	r2, [r1, #0]
90003e60:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
90003e64:	4410      	add	r0, r2
90003e66:	4770      	bx	lr

90003e68 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
    if (!glyph || glyph->kerningTableSize == 0)
90003e68:	b1da      	cbz	r2, 90003ea2 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x3a>
{
90003e6a:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
90003e6c:	7b14      	ldrb	r4, [r2, #12]
90003e6e:	b1b4      	cbz	r4, 90003e9e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
90003e70:	f892 c00d 	ldrb.w	ip, [r2, #13]
90003e74:	f892 e00b 	ldrb.w	lr, [r2, #11]
90003e78:	ea4f 220c 	mov.w	r2, ip, lsl #8
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
90003e7c:	6a03      	ldr	r3, [r0, #32]
90003e7e:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
90003e82:	ea4e 0202 	orr.w	r2, lr, r2
90003e86:	eb03 0382 	add.w	r3, r3, r2, lsl #2
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
90003e8a:	eb03 0084 	add.w	r0, r3, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
90003e8e:	881a      	ldrh	r2, [r3, #0]
90003e90:	428a      	cmp	r2, r1
90003e92:	d008      	beq.n	90003ea6 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x3e>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
90003e94:	f103 0304 	add.w	r3, r3, #4
        {
            return kerndata->distance;
        }
        if (prevChar < kerndata->unicodePrevChar)
90003e98:	d801      	bhi.n	90003e9e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
90003e9a:	4283      	cmp	r3, r0
90003e9c:	d1f7      	bne.n	90003e8e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
90003e9e:	2000      	movs	r0, #0
        {
            break;
        }
    }
    return 0;
}
90003ea0:	bd10      	pop	{r4, pc}
        return 0;
90003ea2:	4610      	mov	r0, r2
}
90003ea4:	4770      	bx	lr
            return kerndata->distance;
90003ea6:	f993 0002 	ldrsb.w	r0, [r3, #2]
}
90003eaa:	bd10      	pop	{r4, pc}

90003eac <_ZN8touchgfx13GeneratedFontD0Ev>:
90003eac:	b510      	push	{r4, lr}
90003eae:	4604      	mov	r4, r0
90003eb0:	212c      	movs	r1, #44	; 0x2c
90003eb2:	f023 fe35 	bl	90027b20 <_ZdlPvj>
90003eb6:	4620      	mov	r0, r4
90003eb8:	bd10      	pop	{r4, pc}
90003eba:	bf00      	nop

90003ebc <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90003ebc:	b530      	push	{r4, r5, lr}
90003ebe:	b08b      	sub	sp, #44	; 0x2c
90003ec0:	4604      	mov	r4, r0
90003ec2:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
      arabicTable(formsTable)
90003ec6:	9500      	str	r5, [sp, #0]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90003ec8:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
      arabicTable(formsTable)
90003ecc:	9501      	str	r5, [sp, #4]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90003ece:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
      arabicTable(formsTable)
90003ed2:	9502      	str	r5, [sp, #8]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90003ed4:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
      arabicTable(formsTable)
90003ed8:	9503      	str	r5, [sp, #12]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90003eda:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
      arabicTable(formsTable)
90003ede:	9504      	str	r5, [sp, #16]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90003ee0:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
      arabicTable(formsTable)
90003ee4:	9505      	str	r5, [sp, #20]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90003ee6:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
      arabicTable(formsTable)
90003eea:	9506      	str	r5, [sp, #24]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90003eec:	f8bd 505c 	ldrh.w	r5, [sp, #92]	; 0x5c
      arabicTable(formsTable)
90003ef0:	9507      	str	r5, [sp, #28]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90003ef2:	f8bd 5060 	ldrh.w	r5, [sp, #96]	; 0x60
      arabicTable(formsTable)
90003ef6:	9508      	str	r5, [sp, #32]
90003ef8:	f013 fe22 	bl	90017b40 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
      glyphData(glyphDataInternalFlash),
90003efc:	9b15      	ldr	r3, [sp, #84]	; 0x54
}
90003efe:	4620      	mov	r0, r4
      glyphData(glyphDataInternalFlash),
90003f00:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
90003f02:	9b16      	ldr	r3, [sp, #88]	; 0x58
90003f04:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
90003f06:	9b19      	ldr	r3, [sp, #100]	; 0x64
90003f08:	6263      	str	r3, [r4, #36]	; 0x24
      arabicTable(formsTable)
90003f0a:	9b1a      	ldr	r3, [sp, #104]	; 0x68
90003f0c:	62a3      	str	r3, [r4, #40]	; 0x28
90003f0e:	4b02      	ldr	r3, [pc, #8]	; (90003f18 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
90003f10:	6023      	str	r3, [r4, #0]
}
90003f12:	b00b      	add	sp, #44	; 0x2c
90003f14:	bd30      	pop	{r4, r5, pc}
90003f16:	bf00      	nop
90003f18:	9002ada0 	.word	0x9002ada0

90003f1c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
90003f1c:	4770      	bx	lr
90003f1e:	bf00      	nop

90003f20 <_Z23getFont_verdana_10_4bppv>:
{
90003f20:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
90003f22:	4d18      	ldr	r5, [pc, #96]	; (90003f84 <_Z23getFont_verdana_10_4bppv+0x64>)
{
90003f24:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
90003f26:	682c      	ldr	r4, [r5, #0]
90003f28:	f3bf 8f5b 	dmb	ish
90003f2c:	f014 0401 	ands.w	r4, r4, #1
90003f30:	d002      	beq.n	90003f38 <_Z23getFont_verdana_10_4bppv+0x18>
    return verdana_10_4bpp;
}
90003f32:	4815      	ldr	r0, [pc, #84]	; (90003f88 <_Z23getFont_verdana_10_4bppv+0x68>)
90003f34:	b00f      	add	sp, #60	; 0x3c
90003f36:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
90003f38:	4628      	mov	r0, r5
90003f3a:	f023 fdf3 	bl	90027b24 <__cxa_guard_acquire>
90003f3e:	2800      	cmp	r0, #0
90003f40:	d0f7      	beq.n	90003f32 <_Z23getFont_verdana_10_4bppv+0x12>
90003f42:	213f      	movs	r1, #63	; 0x3f
90003f44:	2201      	movs	r2, #1
90003f46:	230a      	movs	r3, #10
90003f48:	2004      	movs	r0, #4
90003f4a:	9204      	str	r2, [sp, #16]
90003f4c:	9300      	str	r3, [sp, #0]
90003f4e:	9003      	str	r0, [sp, #12]
90003f50:	480d      	ldr	r0, [pc, #52]	; (90003f88 <_Z23getFont_verdana_10_4bppv+0x68>)
90003f52:	e9cd 1409 	strd	r1, r4, [sp, #36]	; 0x24
90003f56:	490d      	ldr	r1, [pc, #52]	; (90003f8c <_Z23getFont_verdana_10_4bppv+0x6c>)
90003f58:	9108      	str	r1, [sp, #32]
90003f5a:	490d      	ldr	r1, [pc, #52]	; (90003f90 <_Z23getFont_verdana_10_4bppv+0x70>)
90003f5c:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
90003f60:	9107      	str	r1, [sp, #28]
90003f62:	490c      	ldr	r1, [pc, #48]	; (90003f94 <_Z23getFont_verdana_10_4bppv+0x74>)
90003f64:	e9cd 4405 	strd	r4, r4, [sp, #20]
90003f68:	e9cd 4401 	strd	r4, r4, [sp, #4]
90003f6c:	f7ff ffa6 	bl	90003ebc <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
90003f70:	4809      	ldr	r0, [pc, #36]	; (90003f98 <_Z23getFont_verdana_10_4bppv+0x78>)
90003f72:	f023 fe21 	bl	90027bb8 <atexit>
90003f76:	4628      	mov	r0, r5
90003f78:	f023 fde0 	bl	90027b3c <__cxa_guard_release>
}
90003f7c:	4802      	ldr	r0, [pc, #8]	; (90003f88 <_Z23getFont_verdana_10_4bppv+0x68>)
90003f7e:	b00f      	add	sp, #60	; 0x3c
90003f80:	bd30      	pop	{r4, r5, pc}
90003f82:	bf00      	nop
90003f84:	2400975c 	.word	0x2400975c
90003f88:	24009760 	.word	0x24009760
90003f8c:	9002c3ec 	.word	0x9002c3ec
90003f90:	9002c4e8 	.word	0x9002c4e8
90003f94:	90201dbc 	.word	0x90201dbc
90003f98:	90003f1d 	.word	0x90003f1d

90003f9c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 65, 24, 20, 0, 0, 4, 1, 1, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
90003f9c:	4770      	bx	lr
90003f9e:	bf00      	nop

90003fa0 <_Z23getFont_verdana_20_4bppv>:
{
90003fa0:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 65, 24, 20, 0, 0, 4, 1, 1, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
90003fa2:	4d19      	ldr	r5, [pc, #100]	; (90004008 <_Z23getFont_verdana_20_4bppv+0x68>)
{
90003fa4:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 65, 24, 20, 0, 0, 4, 1, 1, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
90003fa6:	682c      	ldr	r4, [r5, #0]
90003fa8:	f3bf 8f5b 	dmb	ish
90003fac:	f014 0401 	ands.w	r4, r4, #1
90003fb0:	d002      	beq.n	90003fb8 <_Z23getFont_verdana_20_4bppv+0x18>
    return verdana_20_4bpp;
}
90003fb2:	4816      	ldr	r0, [pc, #88]	; (9000400c <_Z23getFont_verdana_20_4bppv+0x6c>)
90003fb4:	b00f      	add	sp, #60	; 0x3c
90003fb6:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 65, 24, 20, 0, 0, 4, 1, 1, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
90003fb8:	4628      	mov	r0, r5
90003fba:	f023 fdb3 	bl	90027b24 <__cxa_guard_acquire>
90003fbe:	2800      	cmp	r0, #0
90003fc0:	d0f7      	beq.n	90003fb2 <_Z23getFont_verdana_20_4bppv+0x12>
90003fc2:	213f      	movs	r1, #63	; 0x3f
90003fc4:	4a12      	ldr	r2, [pc, #72]	; (90004010 <_Z23getFont_verdana_20_4bppv+0x70>)
90003fc6:	2301      	movs	r3, #1
90003fc8:	2014      	movs	r0, #20
90003fca:	9208      	str	r2, [sp, #32]
90003fcc:	2204      	movs	r2, #4
90003fce:	9304      	str	r3, [sp, #16]
90003fd0:	9000      	str	r0, [sp, #0]
90003fd2:	9401      	str	r4, [sp, #4]
90003fd4:	480d      	ldr	r0, [pc, #52]	; (9000400c <_Z23getFont_verdana_20_4bppv+0x6c>)
90003fd6:	e9cd 1409 	strd	r1, r4, [sp, #36]	; 0x24
90003fda:	490e      	ldr	r1, [pc, #56]	; (90004014 <_Z23getFont_verdana_20_4bppv+0x74>)
90003fdc:	e9cd 3305 	strd	r3, r3, [sp, #20]
90003fe0:	9107      	str	r1, [sp, #28]
90003fe2:	2318      	movs	r3, #24
90003fe4:	490c      	ldr	r1, [pc, #48]	; (90004018 <_Z23getFont_verdana_20_4bppv+0x78>)
90003fe6:	e9cd 4202 	strd	r4, r2, [sp, #8]
90003fea:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
90003fee:	2241      	movs	r2, #65	; 0x41
90003ff0:	f7ff ff64 	bl	90003ebc <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
90003ff4:	4809      	ldr	r0, [pc, #36]	; (9000401c <_Z23getFont_verdana_20_4bppv+0x7c>)
90003ff6:	f023 fddf 	bl	90027bb8 <atexit>
90003ffa:	4628      	mov	r0, r5
90003ffc:	f023 fd9e 	bl	90027b3c <__cxa_guard_release>
}
90004000:	4802      	ldr	r0, [pc, #8]	; (9000400c <_Z23getFont_verdana_20_4bppv+0x6c>)
90004002:	b00f      	add	sp, #60	; 0x3c
90004004:	bd30      	pop	{r4, r5, pc}
90004006:	bf00      	nop
90004008:	2400978c 	.word	0x2400978c
9000400c:	24009790 	.word	0x24009790
90004010:	9002c3f0 	.word	0x9002c3f0
90004014:	9002c4ec 	.word	0x9002c4ec
90004018:	90201dcc 	.word	0x90201dcc
9000401c:	90003f9d 	.word	0x90003f9d

90004020 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 10, 41, 40, 0, 0, 4, 1, 0, 1, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
90004020:	4770      	bx	lr
90004022:	bf00      	nop

90004024 <_Z23getFont_verdana_40_4bppv>:
{
90004024:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 10, 41, 40, 0, 0, 4, 1, 0, 1, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
90004026:	4d19      	ldr	r5, [pc, #100]	; (9000408c <_Z23getFont_verdana_40_4bppv+0x68>)
{
90004028:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 10, 41, 40, 0, 0, 4, 1, 0, 1, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
9000402a:	682c      	ldr	r4, [r5, #0]
9000402c:	f3bf 8f5b 	dmb	ish
90004030:	f014 0401 	ands.w	r4, r4, #1
90004034:	d002      	beq.n	9000403c <_Z23getFont_verdana_40_4bppv+0x18>
    return verdana_40_4bpp;
}
90004036:	4816      	ldr	r0, [pc, #88]	; (90004090 <_Z23getFont_verdana_40_4bppv+0x6c>)
90004038:	b00f      	add	sp, #60	; 0x3c
9000403a:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 10, 41, 40, 0, 0, 4, 1, 0, 1, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
9000403c:	4628      	mov	r0, r5
9000403e:	f023 fd71 	bl	90027b24 <__cxa_guard_acquire>
90004042:	2800      	cmp	r0, #0
90004044:	d0f7      	beq.n	90004036 <_Z23getFont_verdana_40_4bppv+0x12>
90004046:	213f      	movs	r1, #63	; 0x3f
90004048:	4a12      	ldr	r2, [pc, #72]	; (90004094 <_Z23getFont_verdana_40_4bppv+0x70>)
9000404a:	2301      	movs	r3, #1
9000404c:	2028      	movs	r0, #40	; 0x28
9000404e:	9208      	str	r2, [sp, #32]
90004050:	2204      	movs	r2, #4
90004052:	9304      	str	r3, [sp, #16]
90004054:	9000      	str	r0, [sp, #0]
90004056:	9401      	str	r4, [sp, #4]
90004058:	480d      	ldr	r0, [pc, #52]	; (90004090 <_Z23getFont_verdana_40_4bppv+0x6c>)
9000405a:	e9cd 1409 	strd	r1, r4, [sp, #36]	; 0x24
9000405e:	490e      	ldr	r1, [pc, #56]	; (90004098 <_Z23getFont_verdana_40_4bppv+0x74>)
90004060:	e9cd 4305 	strd	r4, r3, [sp, #20]
90004064:	9107      	str	r1, [sp, #28]
90004066:	2329      	movs	r3, #41	; 0x29
90004068:	490c      	ldr	r1, [pc, #48]	; (9000409c <_Z23getFont_verdana_40_4bppv+0x78>)
9000406a:	e9cd 4202 	strd	r4, r2, [sp, #8]
9000406e:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
90004072:	220a      	movs	r2, #10
90004074:	f7ff ff22 	bl	90003ebc <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
90004078:	4809      	ldr	r0, [pc, #36]	; (900040a0 <_Z23getFont_verdana_40_4bppv+0x7c>)
9000407a:	f023 fd9d 	bl	90027bb8 <atexit>
9000407e:	4628      	mov	r0, r5
90004080:	f023 fd5c 	bl	90027b3c <__cxa_guard_release>
}
90004084:	4802      	ldr	r0, [pc, #8]	; (90004090 <_Z23getFont_verdana_40_4bppv+0x6c>)
90004086:	b00f      	add	sp, #60	; 0x3c
90004088:	bd30      	pop	{r4, r5, pc}
9000408a:	bf00      	nop
9000408c:	240097bc 	.word	0x240097bc
90004090:	240097c0 	.word	0x240097c0
90004094:	9002c4e0 	.word	0x9002c4e0
90004098:	9002c4f0 	.word	0x9002c4f0
9000409c:	9020215c 	.word	0x9020215c
900040a0:	90004021 	.word	0x90004021

900040a4 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
900040a4:	2000      	movs	r0, #0
900040a6:	4770      	bx	lr

900040a8 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
900040a8:	2000      	movs	r0, #0
900040aa:	4770      	bx	lr

900040ac <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
900040ac:	b40e      	push	{r1, r2, r3}
900040ae:	b500      	push	{lr}
900040b0:	b082      	sub	sp, #8
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
900040b2:	2100      	movs	r1, #0
{
900040b4:	ab03      	add	r3, sp, #12
900040b6:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
900040ba:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
900040bc:	f013 fb68 	bl	90017790 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
900040c0:	b002      	add	sp, #8
900040c2:	f85d eb04 	ldr.w	lr, [sp], #4
900040c6:	b003      	add	sp, #12
900040c8:	4770      	bx	lr
900040ca:	bf00      	nop

900040cc <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
900040cc:	b40c      	push	{r2, r3}
900040ce:	b500      	push	{lr}
900040d0:	b083      	sub	sp, #12
900040d2:	ab04      	add	r3, sp, #16
900040d4:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
900040d8:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
900040da:	f013 fb59 	bl	90017790 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
900040de:	b003      	add	sp, #12
900040e0:	f85d eb04 	ldr.w	lr, [sp], #4
900040e4:	b002      	add	sp, #8
900040e6:	4770      	bx	lr

900040e8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
900040e8:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
900040ea:	b510      	push	{r4, lr}
900040ec:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
900040ee:	b133      	cbz	r3, 900040fe <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
900040f0:	8f03      	ldrh	r3, [r0, #56]	; 0x38
900040f2:	b39b      	cbz	r3, 9000415c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>
            return buffer[pos];
900040f4:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
900040f6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
900040fa:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
900040fc:	b923      	cbnz	r3, 90004108 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x20>
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
900040fe:	4620      	mov	r0, r4
}
90004100:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
90004104:	f014 be18 	b.w	90018d38 <_ZN8touchgfx12TextProvider11getNextCharEv>
        substituteGlyphs();
90004108:	f014 ff14 	bl	90018f34 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
9000410c:	8f23      	ldrh	r3, [r4, #56]	; 0x38
9000410e:	2b01      	cmp	r3, #1
90004110:	d92a      	bls.n	90004168 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>
            const uint16_t index = pos + offset;
90004112:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
90004114:	1c53      	adds	r3, r2, #1
90004116:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
90004118:	2b09      	cmp	r3, #9
9000411a:	d812      	bhi.n	90004142 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x5a>
9000411c:	eb04 0143 	add.w	r1, r4, r3, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
90004120:	f640 103f 	movw	r0, #2367	; 0x93f
90004124:	8c49      	ldrh	r1, [r1, #34]	; 0x22
90004126:	4281      	cmp	r1, r0
90004128:	d1e9      	bne.n	900040fe <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[pos];
9000412a:	eb04 0142 	add.w	r1, r4, r2, lsl #1
9000412e:	0052      	lsls	r2, r2, #1
90004130:	8c49      	ldrh	r1, [r1, #34]	; 0x22

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
90004132:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            buffer[pos] = newChar;
90004136:	4422      	add	r2, r4
90004138:	f640 103f 	movw	r0, #2367	; 0x93f
            buffer[index < size ? index : 0] = newChar;
9000413c:	8459      	strh	r1, [r3, #34]	; 0x22
            buffer[pos] = newChar;
9000413e:	8450      	strh	r0, [r2, #34]	; 0x22
        }
90004140:	e7dd      	b.n	900040fe <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[index < size ? index : index - size];
90004142:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90004146:	f640 113f 	movw	r1, #2367	; 0x93f
9000414a:	89db      	ldrh	r3, [r3, #14]
9000414c:	428b      	cmp	r3, r1
9000414e:	d1d6      	bne.n	900040fe <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[pos];
90004150:	eb04 0142 	add.w	r1, r4, r2, lsl #1
90004154:	2300      	movs	r3, #0
90004156:	0052      	lsls	r2, r2, #1
90004158:	8c49      	ldrh	r1, [r1, #34]	; 0x22
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
9000415a:	e7ea      	b.n	90004132 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x4a>
            assert(used > 0);
9000415c:	4b05      	ldr	r3, [pc, #20]	; (90004174 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x8c>)
9000415e:	21c5      	movs	r1, #197	; 0xc5
90004160:	4a05      	ldr	r2, [pc, #20]	; (90004178 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x90>)
90004162:	4806      	ldr	r0, [pc, #24]	; (9000417c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x94>)
90004164:	f023 fd0a 	bl	90027b7c <__assert_func>
            assert(offset < used);
90004168:	4b05      	ldr	r3, [pc, #20]	; (90004180 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x98>)
9000416a:	21cb      	movs	r1, #203	; 0xcb
9000416c:	4a05      	ldr	r2, [pc, #20]	; (90004184 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x9c>)
9000416e:	4803      	ldr	r0, [pc, #12]	; (9000417c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x94>)
90004170:	f023 fd04 	bl	90027b7c <__assert_func>
90004174:	9002adf8 	.word	0x9002adf8
90004178:	9002ae04 	.word	0x9002ae04
9000417c:	9002aeb0 	.word	0x9002aeb0
90004180:	9002aefc 	.word	0x9002aefc
90004184:	9002af0c 	.word	0x9002af0c

90004188 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
90004188:	f014 bd9f 	b.w	90018cca <_ZN8touchgfx12TextProvider15fillInputBufferEv>

9000418c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
9000418c:	b510      	push	{r4, lr}
9000418e:	b086      	sub	sp, #24
90004190:	f10d 0c08 	add.w	ip, sp, #8
    va_list pArg;
    va_start(pArg, format);
90004194:	ac0a      	add	r4, sp, #40	; 0x28
{
90004196:	e88c 0006 	stmia.w	ip, {r1, r2}
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
9000419a:	461a      	mov	r2, r3
9000419c:	9b09      	ldr	r3, [sp, #36]	; 0x24
9000419e:	4661      	mov	r1, ip
900041a0:	9401      	str	r4, [sp, #4]
900041a2:	9300      	str	r3, [sp, #0]
900041a4:	9b08      	ldr	r3, [sp, #32]
    va_start(pArg, format);
900041a6:	9405      	str	r4, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
900041a8:	f011 fefc 	bl	90015fa4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
900041ac:	b006      	add	sp, #24
900041ae:	bd10      	pop	{r4, pc}

900041b0 <_ZN8touchgfx5Texts11setLanguageEt>:
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
900041b0:	b9e0      	cbnz	r0, 900041ec <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
{
900041b2:	b538      	push	{r3, r4, r5, lr}
    {
        if (languagesArray[id] != 0)
900041b4:	4b13      	ldr	r3, [pc, #76]	; (90004204 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
900041b6:	681b      	ldr	r3, [r3, #0]
900041b8:	b1cb      	cbz	r3, 900041ee <_ZN8touchgfx5Texts11setLanguageEt+0x3e>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
900041ba:	4c13      	ldr	r4, [pc, #76]	; (90004208 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
900041bc:	4813      	ldr	r0, [pc, #76]	; (9000420c <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
900041be:	e9d3 1200 	ldrd	r1, r2, [r3]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
900041c2:	4419      	add	r1, r3
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
900041c4:	441a      	add	r2, r3
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
900041c6:	6021      	str	r1, [r4, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
900041c8:	6899      	ldr	r1, [r3, #8]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
900041ca:	6002      	str	r2, [r0, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
900041cc:	185c      	adds	r4, r3, r1
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
900041ce:	4b10      	ldr	r3, [pc, #64]	; (90004210 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
900041d0:	2200      	movs	r2, #0
900041d2:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
900041d4:	f000 f83a 	bl	9000424c <_ZN17TypedTextDatabase8getFontsEv>
900041d8:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
900041da:	f000 f835 	bl	90004248 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
900041de:	4b0d      	ldr	r3, [pc, #52]	; (90004214 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
        fonts = f;
900041e0:	4a0d      	ldr	r2, [pc, #52]	; (90004218 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
        typedTexts = data;
900041e2:	601c      	str	r4, [r3, #0]
        numberOfTypedTexts = n;
900041e4:	4b0d      	ldr	r3, [pc, #52]	; (9000421c <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
        fonts = f;
900041e6:	6015      	str	r5, [r2, #0]
        numberOfTypedTexts = n;
900041e8:	8018      	strh	r0, [r3, #0]
    }
}
900041ea:	bd38      	pop	{r3, r4, r5, pc}
900041ec:	4770      	bx	lr
            currentLanguageTypedText = typedTextDatabaseArray[id];
900041ee:	4c0c      	ldr	r4, [pc, #48]	; (90004220 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
            currentLanguagePtr = texts_all_languages;
900041f0:	4905      	ldr	r1, [pc, #20]	; (90004208 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
            currentLanguageTypedText = typedTextDatabaseArray[id];
900041f2:	6824      	ldr	r4, [r4, #0]
            currentLanguagePtr = texts_all_languages;
900041f4:	480b      	ldr	r0, [pc, #44]	; (90004224 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
            currentLanguageIndices = staticLanguageIndices[id];
900041f6:	4b05      	ldr	r3, [pc, #20]	; (9000420c <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
900041f8:	4a0b      	ldr	r2, [pc, #44]	; (90004228 <_ZN8touchgfx5Texts11setLanguageEt+0x78>)
            currentLanguagePtr = texts_all_languages;
900041fa:	6008      	str	r0, [r1, #0]
            currentLanguageIndices = staticLanguageIndices[id];
900041fc:	601a      	str	r2, [r3, #0]
    if (currentLanguageTypedText)
900041fe:	2c00      	cmp	r4, #0
90004200:	d1e5      	bne.n	900041ce <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
90004202:	bd38      	pop	{r3, r4, r5, pc}
90004204:	240097ec 	.word	0x240097ec
90004208:	240097f0 	.word	0x240097f0
9000420c:	240097f4 	.word	0x240097f4
90004210:	240097f8 	.word	0x240097f8
90004214:	2403988c 	.word	0x2403988c
90004218:	24039894 	.word	0x24039894
9000421c:	24039890 	.word	0x24039890
90004220:	9020229c 	.word	0x9020229c
90004224:	90202210 	.word	0x90202210
90004228:	902021e8 	.word	0x902021e8

9000422c <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
9000422c:	4a04      	ldr	r2, [pc, #16]	; (90004240 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
9000422e:	4b05      	ldr	r3, [pc, #20]	; (90004244 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
90004230:	6812      	ldr	r2, [r2, #0]
90004232:	681b      	ldr	r3, [r3, #0]
90004234:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
}
90004238:	eb03 0040 	add.w	r0, r3, r0, lsl #1
9000423c:	4770      	bx	lr
9000423e:	bf00      	nop
90004240:	240097f4 	.word	0x240097f4
90004244:	240097f0 	.word	0x240097f0

90004248 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
90004248:	200a      	movs	r0, #10
9000424a:	4770      	bx	lr

9000424c <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
9000424c:	4800      	ldr	r0, [pc, #0]	; (90004250 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
9000424e:	4770      	bx	lr
90004250:	240097fc 	.word	0x240097fc

90004254 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
90004254:	b510      	push	{r4, lr}
};
90004256:	4c05      	ldr	r4, [pc, #20]	; (9000426c <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
    &(getFont_verdana_20_4bpp()),
90004258:	f7ff fea2 	bl	90003fa0 <_Z23getFont_verdana_20_4bppv>
};
9000425c:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
9000425e:	f7ff fee1 	bl	90004024 <_Z23getFont_verdana_40_4bppv>
};
90004262:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
90004264:	f7ff fe5c 	bl	90003f20 <_Z23getFont_verdana_10_4bppv>
};
90004268:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
9000426a:	bd10      	pop	{r4, pc}
9000426c:	240097fc 	.word	0x240097fc

90004270 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
90004270:	4770      	bx	lr
90004272:	bf00      	nop

90004274 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
90004274:	4770      	bx	lr
90004276:	bf00      	nop

90004278 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
90004278:	4770      	bx	lr
9000427a:	bf00      	nop

9000427c <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
9000427c:	4770      	bx	lr
9000427e:	bf00      	nop

90004280 <_ZN24screen_main_menuViewBaseD1Ev>:
}

screen_main_menuViewBase::~screen_main_menuViewBase()
{

}
90004280:	4770      	bx	lr
90004282:	bf00      	nop

90004284 <_ZN24screen_main_menuViewBase11setupScreenEv>:

void screen_main_menuViewBase::setupScreen()
{

}
90004284:	4770      	bx	lr
90004286:	bf00      	nop

90004288 <_ZN8touchgfx8CallbackI24screen_main_menuViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90004288:	4770      	bx	lr
9000428a:	bf00      	nop

9000428c <_ZN8touchgfx8CallbackI24screen_main_menuViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
9000428c:	b410      	push	{r4}
        (pobject->*pmemfun)(t1);
9000428e:	68c2      	ldr	r2, [r0, #12]
    virtual void execute(T1 t1)
90004290:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
90004292:	6844      	ldr	r4, [r0, #4]
90004294:	f012 0f01 	tst.w	r2, #1
90004298:	eb04 0062 	add.w	r0, r4, r2, asr #1
9000429c:	d103      	bne.n	900042a6 <_ZN8touchgfx8CallbackI24screen_main_menuViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x1a>
9000429e:	689b      	ldr	r3, [r3, #8]
    }
900042a0:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
900042a4:	4718      	bx	r3
900042a6:	ea4f 0c62 	mov.w	ip, r2, asr #1
900042aa:	689b      	ldr	r3, [r3, #8]
900042ac:	f854 200c 	ldr.w	r2, [r4, ip]
    }
900042b0:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
900042b4:	58d3      	ldr	r3, [r2, r3]
900042b6:	4718      	bx	r3

900042b8 <_ZNK8touchgfx8CallbackI24screen_main_menuViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
900042b8:	6843      	ldr	r3, [r0, #4]
900042ba:	b13b      	cbz	r3, 900042cc <_ZNK8touchgfx8CallbackI24screen_main_menuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
900042bc:	6883      	ldr	r3, [r0, #8]
900042be:	b10b      	cbz	r3, 900042c4 <_ZNK8touchgfx8CallbackI24screen_main_menuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0xc>
900042c0:	2001      	movs	r0, #1
    }
900042c2:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
900042c4:	68c0      	ldr	r0, [r0, #12]
900042c6:	f000 0001 	and.w	r0, r0, #1
900042ca:	4770      	bx	lr
900042cc:	4618      	mov	r0, r3
900042ce:	4770      	bx	lr

900042d0 <_ZN8touchgfx8CallbackI24screen_main_menuViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
900042d0:	b510      	push	{r4, lr}
900042d2:	4604      	mov	r4, r0
900042d4:	2110      	movs	r1, #16
900042d6:	f023 fc23 	bl	90027b20 <_ZdlPvj>
900042da:	4620      	mov	r0, r4
900042dc:	bd10      	pop	{r4, pc}
900042de:	bf00      	nop

900042e0 <_ZN24screen_main_menuViewBaseD0Ev>:
screen_main_menuViewBase::~screen_main_menuViewBase()
900042e0:	b510      	push	{r4, lr}
900042e2:	4604      	mov	r4, r0
}
900042e4:	f44f 7186 	mov.w	r1, #268	; 0x10c
900042e8:	f023 fc1a 	bl	90027b20 <_ZdlPvj>
900042ec:	4620      	mov	r0, r4
900042ee:	bd10      	pop	{r4, pc}

900042f0 <_ZN24screen_main_menuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void screen_main_menuViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
900042f0:	b538      	push	{r3, r4, r5, lr}
    if (&src == &snake_game)
900042f2:	f100 036c 	add.w	r3, r0, #108	; 0x6c
{
900042f6:	4604      	mov	r4, r0
900042f8:	460d      	mov	r5, r1
    if (&src == &snake_game)
900042fa:	4299      	cmp	r1, r3
900042fc:	d003      	beq.n	90004306 <_ZN24screen_main_menuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
        //intr_snake_game
        //When snake_game clicked change screen to screen_snake_game
        //Go to screen_snake_game with screen transition towards East
        application().gotoscreen_snake_gameScreenWipeTransitionEast();
    }
    if (&src == &btn_tictactoe)
900042fe:	34b4      	adds	r4, #180	; 0xb4
90004300:	42a5      	cmp	r5, r4
90004302:	d007      	beq.n	90004314 <_ZN24screen_main_menuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x24>
        //intr_tictactoe_game
        //When btn_tictactoe clicked change screen to screen_tictactoe_game
        //Go to screen_tictactoe_game with no screen transition
        application().gotoscreen_tictactoe_gameScreenNoTransition();
    }
}
90004304:	bd38      	pop	{r3, r4, r5, pc}
    if (&src == &btn_tictactoe)
90004306:	34b4      	adds	r4, #180	; 0xb4
    virtual ~screen_main_menuViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
90004308:	f012 facc 	bl	900168a4 <_ZN8touchgfx11Application11getInstanceEv>
        application().gotoscreen_snake_gameScreenWipeTransitionEast();
9000430c:	f7ff fd82 	bl	90003e14 <_ZN23FrontendApplicationBase45gotoscreen_snake_gameScreenWipeTransitionEastEv>
    if (&src == &btn_tictactoe)
90004310:	42a5      	cmp	r5, r4
90004312:	d1f7      	bne.n	90004304 <_ZN24screen_main_menuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
90004314:	f012 fac6 	bl	900168a4 <_ZN8touchgfx11Application11getInstanceEv>
}
90004318:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoscreen_tictactoe_gameScreenNoTransition();
9000431c:	f7ff bd88 	b.w	90003e30 <_ZN23FrontendApplicationBase43gotoscreen_tictactoe_gameScreenNoTransitionEv>

90004320 <_ZN24screen_main_menuViewBaseC1Ev>:
screen_main_menuViewBase::screen_main_menuViewBase() :
90004320:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90004324:	b084      	sub	sp, #16
90004326:	4604      	mov	r4, r0
        : presenter(0)
90004328:	f013 fef4 	bl	90018114 <_ZN8touchgfx6ScreenC1Ev>
9000432c:	f44f 7380 	mov.w	r3, #256	; 0x100
90004330:	2500      	movs	r5, #0
    buttonCallback(this, &screen_main_menuViewBase::buttonCallbackHandler)
90004332:	4a6f      	ldr	r2, [pc, #444]	; (900044f0 <_ZN24screen_main_menuViewBaseC1Ev+0x1d0>)
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
90004334:	496f      	ldr	r1, [pc, #444]	; (900044f4 <_ZN24screen_main_menuViewBaseC1Ev+0x1d4>)
90004336:	f104 096c 	add.w	r9, r4, #108	; 0x6c
9000433a:	f8a4 3064 	strh.w	r3, [r4, #100]	; 0x64
9000433e:	23ff      	movs	r3, #255	; 0xff
90004340:	f104 07b4 	add.w	r7, r4, #180	; 0xb4
90004344:	6022      	str	r2, [r4, #0]
90004346:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
9000434a:	4648      	mov	r0, r9
        : color(col)
9000434c:	66a5      	str	r5, [r4, #104]	; 0x68
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
9000434e:	1d26      	adds	r6, r4, #4
        return typedTextId < numberOfTypedTexts;
90004350:	f8df 81d4 	ldr.w	r8, [pc, #468]	; 90004528 <_ZN24screen_main_menuViewBaseC1Ev+0x208>
90004354:	e9c4 510f 	strd	r5, r1, [r4, #60]	; 0x3c
        : x(0), y(0), width(0), height(0)
90004358:	e9c4 5511 	strd	r5, r5, [r4, #68]	; 0x44
9000435c:	e9c4 5513 	strd	r5, r5, [r4, #76]	; 0x4c
          nextSibling(0),
90004360:	e9c4 5515 	strd	r5, r5, [r4, #84]	; 0x54
          cachedAbsX(0),
90004364:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
90004368:	f00f fee4 	bl	90014134 <_ZN8touchgfx15ButtonWithLabelC1Ev>
9000436c:	4638      	mov	r0, r7
9000436e:	f00f fee1 	bl	90014134 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
90004372:	4b61      	ldr	r3, [pc, #388]	; (900044f8 <_ZN24screen_main_menuViewBaseC1Ev+0x1d8>)
90004374:	f104 0140 	add.w	r1, r4, #64	; 0x40
90004378:	4630      	mov	r0, r6
9000437a:	f8c4 30fc 	str.w	r3, [r4, #252]	; 0xfc
9000437e:	4b5f      	ldr	r3, [pc, #380]	; (900044fc <_ZN24screen_main_menuViewBaseC1Ev+0x1dc>)
90004380:	f8c4 4100 	str.w	r4, [r4, #256]	; 0x100
90004384:	f8c4 3104 	str.w	r3, [r4, #260]	; 0x104
        rect.x = x;
90004388:	4b5d      	ldr	r3, [pc, #372]	; (90004500 <_ZN24screen_main_menuViewBaseC1Ev+0x1e0>)
9000438a:	f8c4 5108 	str.w	r5, [r4, #264]	; 0x108
9000438e:	64a3      	str	r3, [r4, #72]	; 0x48
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
90004390:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
90004394:	6465      	str	r5, [r4, #68]	; 0x44
90004396:	66a3      	str	r3, [r4, #104]	; 0x68
90004398:	f00c fed6 	bl	90011148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
9000439c:	4b59      	ldr	r3, [pc, #356]	; (90004504 <_ZN24screen_main_menuViewBaseC1Ev+0x1e4>)
    snake_game.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID));
9000439e:	a902      	add	r1, sp, #8
900043a0:	aa03      	add	r2, sp, #12
900043a2:	6723      	str	r3, [r4, #112]	; 0x70
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
900043a4:	2302      	movs	r3, #2
900043a6:	4648      	mov	r0, r9
900043a8:	f8ad 3008 	strh.w	r3, [sp, #8]
900043ac:	2303      	movs	r3, #3
900043ae:	f8ad 300c 	strh.w	r3, [sp, #12]
900043b2:	f00f fafc 	bl	900139ae <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
900043b6:	2109      	movs	r1, #9
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
    {
        if (typedText.hasValidId())
900043b8:	f8b8 3000 	ldrh.w	r3, [r8]
900043bc:	428b      	cmp	r3, r1
900043be:	f8a4 10a4 	strh.w	r1, [r4, #164]	; 0xa4
900043c2:	d925      	bls.n	90004410 <_ZN24screen_main_menuViewBaseC1Ev+0xf0>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
900043c4:	4b50      	ldr	r3, [pc, #320]	; (90004508 <_ZN24screen_main_menuViewBaseC1Ev+0x1e8>)
900043c6:	681b      	ldr	r3, [r3, #0]
900043c8:	2b00      	cmp	r3, #0
900043ca:	f000 808b 	beq.w	900044e4 <_ZN24screen_main_menuViewBaseC1Ev+0x1c4>
        return fonts[typedTexts[typedTextId].fontIdx];
900043ce:	7c9a      	ldrb	r2, [r3, #18]
900043d0:	4b4e      	ldr	r3, [pc, #312]	; (9000450c <_ZN24screen_main_menuViewBaseC1Ev+0x1ec>)
900043d2:	681b      	ldr	r3, [r3, #0]
900043d4:	f853 a022 	ldr.w	sl, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
900043d8:	4b4d      	ldr	r3, [pc, #308]	; (90004510 <_ZN24screen_main_menuViewBaseC1Ev+0x1f0>)
900043da:	6818      	ldr	r0, [r3, #0]
900043dc:	f7ff ff26 	bl	9000422c <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
900043e0:	f8da 3000 	ldr.w	r3, [sl]
900043e4:	4601      	mov	r1, r0
900043e6:	484b      	ldr	r0, [pc, #300]	; (90004514 <_ZN24screen_main_menuViewBaseC1Ev+0x1f4>)
900043e8:	6b9a      	ldr	r2, [r3, #56]	; 0x38
900043ea:	4282      	cmp	r2, r0
900043ec:	d16a      	bne.n	900044c4 <_ZN24screen_main_menuViewBaseC1Ev+0x1a4>
        return fontHeight;
900043ee:	f8ba 5004 	ldrh.w	r5, [sl, #4]
900043f2:	6c9b      	ldr	r3, [r3, #72]	; 0x48
900043f4:	4650      	mov	r0, sl
900043f6:	9101      	str	r1, [sp, #4]
900043f8:	4798      	blx	r3
900043fa:	fb15 f500 	smulbb	r5, r5, r0
900043fe:	f8da 3000 	ldr.w	r3, [sl]
90004402:	4650      	mov	r0, sl
90004404:	b2ad      	uxth	r5, r5
90004406:	9901      	ldr	r1, [sp, #4]
90004408:	6a5b      	ldr	r3, [r3, #36]	; 0x24
9000440a:	4798      	blx	r3
9000440c:	4405      	add	r5, r0
9000440e:	b22d      	sxth	r5, r5
90004410:	4649      	mov	r1, r9
        color = col;
90004412:	f04f 33ff 	mov.w	r3, #4294967295
    snake_game.setAction(buttonCallback);
90004416:	f104 09fc 	add.w	r9, r4, #252	; 0xfc
9000441a:	4630      	mov	r0, r6
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
9000441c:	f8a4 50b2 	strh.w	r5, [r4, #178]	; 0xb2
90004420:	2503      	movs	r5, #3
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
90004422:	f8c4 9094 	str.w	r9, [r4, #148]	; 0x94
        colorPressed = col;
90004426:	e9c4 332a 	strd	r3, r3, [r4, #168]	; 0xa8
9000442a:	f00c fe8d 	bl	90011148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
9000442e:	4b3a      	ldr	r3, [pc, #232]	; (90004518 <_ZN24screen_main_menuViewBaseC1Ev+0x1f8>)
    btn_tictactoe.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID));
90004430:	aa03      	add	r2, sp, #12
90004432:	a902      	add	r1, sp, #8
90004434:	f8c4 30b8 	str.w	r3, [r4, #184]	; 0xb8
90004438:	2302      	movs	r3, #2
9000443a:	4638      	mov	r0, r7
9000443c:	f8ad 500c 	strh.w	r5, [sp, #12]
90004440:	f8ad 3008 	strh.w	r3, [sp, #8]
90004444:	f00f fab3 	bl	900139ae <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        if (typedText.hasValidId())
90004448:	f8b8 3000 	ldrh.w	r3, [r8]
class TypedText
9000444c:	f8a4 50ec 	strh.w	r5, [r4, #236]	; 0xec
90004450:	42ab      	cmp	r3, r5
90004452:	d926      	bls.n	900044a2 <_ZN24screen_main_menuViewBaseC1Ev+0x182>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90004454:	4b2c      	ldr	r3, [pc, #176]	; (90004508 <_ZN24screen_main_menuViewBaseC1Ev+0x1e8>)
90004456:	681b      	ldr	r3, [r3, #0]
90004458:	2b00      	cmp	r3, #0
9000445a:	d043      	beq.n	900044e4 <_ZN24screen_main_menuViewBaseC1Ev+0x1c4>
        return fonts[typedTexts[typedTextId].fontIdx];
9000445c:	799a      	ldrb	r2, [r3, #6]
        return texts->getText(typedTextId);
9000445e:	4629      	mov	r1, r5
        return fonts[typedTexts[typedTextId].fontIdx];
90004460:	4b2a      	ldr	r3, [pc, #168]	; (9000450c <_ZN24screen_main_menuViewBaseC1Ev+0x1ec>)
90004462:	681b      	ldr	r3, [r3, #0]
90004464:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
90004468:	4b29      	ldr	r3, [pc, #164]	; (90004510 <_ZN24screen_main_menuViewBaseC1Ev+0x1f0>)
9000446a:	6818      	ldr	r0, [r3, #0]
9000446c:	f7ff fede 	bl	9000422c <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
90004470:	f8d8 3000 	ldr.w	r3, [r8]
90004474:	4601      	mov	r1, r0
90004476:	4827      	ldr	r0, [pc, #156]	; (90004514 <_ZN24screen_main_menuViewBaseC1Ev+0x1f4>)
90004478:	6b9a      	ldr	r2, [r3, #56]	; 0x38
9000447a:	4282      	cmp	r2, r0
9000447c:	d12a      	bne.n	900044d4 <_ZN24screen_main_menuViewBaseC1Ev+0x1b4>
9000447e:	f8b8 5004 	ldrh.w	r5, [r8, #4]
90004482:	6c9b      	ldr	r3, [r3, #72]	; 0x48
90004484:	4640      	mov	r0, r8
90004486:	9101      	str	r1, [sp, #4]
90004488:	4798      	blx	r3
9000448a:	fb15 f500 	smulbb	r5, r5, r0
9000448e:	f8d8 3000 	ldr.w	r3, [r8]
90004492:	4640      	mov	r0, r8
90004494:	b2ad      	uxth	r5, r5
90004496:	9901      	ldr	r1, [sp, #4]
90004498:	6a5b      	ldr	r3, [r3, #36]	; 0x24
9000449a:	4798      	blx	r3
9000449c:	4428      	add	r0, r5
9000449e:	b203      	sxth	r3, r0
900044a0:	e000      	b.n	900044a4 <_ZN24screen_main_menuViewBaseC1Ev+0x184>
900044a2:	2300      	movs	r3, #0
900044a4:	f8a4 30fa 	strh.w	r3, [r4, #250]	; 0xfa
        color = col;
900044a8:	f04f 33ff 	mov.w	r3, #4294967295
900044ac:	4630      	mov	r0, r6
900044ae:	4639      	mov	r1, r7
900044b0:	f8c4 90dc 	str.w	r9, [r4, #220]	; 0xdc
        colorPressed = col;
900044b4:	e9c4 333c 	strd	r3, r3, [r4, #240]	; 0xf0
900044b8:	f00c fe46 	bl	90011148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
900044bc:	4620      	mov	r0, r4
900044be:	b004      	add	sp, #16
900044c0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
900044c4:	9101      	str	r1, [sp, #4]
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
900044c6:	4650      	mov	r0, sl
900044c8:	4790      	blx	r2
900044ca:	f8da 3000 	ldr.w	r3, [sl]
900044ce:	4605      	mov	r5, r0
900044d0:	9901      	ldr	r1, [sp, #4]
900044d2:	e78e      	b.n	900043f2 <_ZN24screen_main_menuViewBaseC1Ev+0xd2>
900044d4:	9101      	str	r1, [sp, #4]
900044d6:	4640      	mov	r0, r8
900044d8:	4790      	blx	r2
900044da:	f8d8 3000 	ldr.w	r3, [r8]
900044de:	4605      	mov	r5, r0
900044e0:	9901      	ldr	r1, [sp, #4]
900044e2:	e7ce      	b.n	90004482 <_ZN24screen_main_menuViewBaseC1Ev+0x162>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
900044e4:	4b0d      	ldr	r3, [pc, #52]	; (9000451c <_ZN24screen_main_menuViewBaseC1Ev+0x1fc>)
900044e6:	216c      	movs	r1, #108	; 0x6c
900044e8:	4a0d      	ldr	r2, [pc, #52]	; (90004520 <_ZN24screen_main_menuViewBaseC1Ev+0x200>)
900044ea:	480e      	ldr	r0, [pc, #56]	; (90004524 <_ZN24screen_main_menuViewBaseC1Ev+0x204>)
900044ec:	f023 fb46 	bl	90027b7c <__assert_func>
900044f0:	9002b0c8 	.word	0x9002b0c8
900044f4:	9002bd34 	.word	0x9002bd34
900044f8:	9002b0b0 	.word	0x9002b0b0
900044fc:	900042f1 	.word	0x900042f1
90004500:	011001e0 	.word	0x011001e0
90004504:	00330026 	.word	0x00330026
90004508:	2403988c 	.word	0x2403988c
9000450c:	24039894 	.word	0x24039894
90004510:	24039898 	.word	0x24039898
90004514:	900035cd 	.word	0x900035cd
90004518:	00a70026 	.word	0x00a70026
9000451c:	9002afe0 	.word	0x9002afe0
90004520:	9002b024 	.word	0x9002b024
90004524:	9002b060 	.word	0x9002b060
90004528:	24039890 	.word	0x24039890

9000452c <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
9000452c:	b530      	push	{r4, r5, lr}
9000452e:	b085      	sub	sp, #20
90004530:	460a      	mov	r2, r1
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
90004532:	6803      	ldr	r3, [r0, #0]
    virtual void setWidth(int16_t width)
90004534:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
90004536:	466d      	mov	r5, sp
90004538:	4601      	mov	r1, r0
        rect.width = width;
9000453a:	8102      	strh	r2, [r0, #8]
9000453c:	343c      	adds	r4, #60	; 0x3c
9000453e:	4628      	mov	r0, r5
90004540:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
90004544:	4798      	blx	r3
90004546:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
9000454a:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
9000454e:	b005      	add	sp, #20
90004550:	bd30      	pop	{r4, r5, pc}
90004552:	bf00      	nop

90004554 <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
90004554:	b530      	push	{r4, r5, lr}
90004556:	b085      	sub	sp, #20
90004558:	460a      	mov	r2, r1
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
9000455a:	6803      	ldr	r3, [r0, #0]
    virtual void setHeight(int16_t height)
9000455c:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
9000455e:	466d      	mov	r5, sp
90004560:	4601      	mov	r1, r0
        rect.height = height;
90004562:	8142      	strh	r2, [r0, #10]
90004564:	343c      	adds	r4, #60	; 0x3c
90004566:	4628      	mov	r0, r5
90004568:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
9000456c:	4798      	blx	r3
9000456e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90004572:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
90004576:	b005      	add	sp, #20
90004578:	bd30      	pop	{r4, r5, pc}
9000457a:	bf00      	nop

9000457c <_ZNK8touchgfx8TextArea12getSolidRectEv>:
9000457c:	2200      	movs	r2, #0
9000457e:	6002      	str	r2, [r0, #0]
90004580:	6042      	str	r2, [r0, #4]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
90004582:	4770      	bx	lr

90004584 <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
90004584:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
90004588:	4770      	bx	lr
9000458a:	bf00      	nop

9000458c <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
9000458c:	2000      	movs	r0, #0
9000458e:	4770      	bx	lr

90004590 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
        if (visible)
90004590:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
90004594:	b112      	cbz	r2, 9000459c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xc>
            invalidate();
90004596:	6803      	ldr	r3, [r0, #0]
90004598:	695b      	ldr	r3, [r3, #20]
9000459a:	4718      	bx	r3
    virtual void draw(const Rect& area) const;

    virtual void invalidateContent() const
    {
        Widget::invalidateContent();
    }
9000459c:	4770      	bx	lr
9000459e:	bf00      	nop

900045a0 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
900045a0:	2200      	movs	r2, #0
900045a2:	f04f 31ff 	mov.w	r1, #4294967295
        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
              text(0)
900045a6:	6082      	str	r2, [r0, #8]
900045a8:	e9c0 2100 	strd	r2, r1, [r0]

protected:
    virtual TextArea::BoundingArea calculateBoundingArea() const
    {
        return TextArea::BoundingArea();
    }
900045ac:	4770      	bx	lr
900045ae:	bf00      	nop

900045b0 <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
900045b0:	6c80      	ldr	r0, [r0, #72]	; 0x48
900045b2:	4770      	bx	lr

900045b4 <_ZN25screen_snake_gameViewBase19change_direction_upEv>:
     * Virtual Action Handlers
     */
    virtual void change_direction_up()
    {
        // Override and implement this function in screen_snake_game
    }
900045b4:	4770      	bx	lr
900045b6:	bf00      	nop

900045b8 <_ZN25screen_snake_gameViewBase21change_direction_leftEv>:
    virtual void change_direction_left()
    {
        // Override and implement this function in screen_snake_game
    }
900045b8:	4770      	bx	lr
900045ba:	bf00      	nop

900045bc <_ZN25screen_snake_gameViewBase22change_direction_rightEv>:
    virtual void change_direction_right()
    {
        // Override and implement this function in screen_snake_game
    }
900045bc:	4770      	bx	lr
900045be:	bf00      	nop

900045c0 <_ZN25screen_snake_gameViewBase21change_direction_downEv>:
    virtual void change_direction_down()
    {
        // Override and implement this function in screen_snake_game
    }
900045c0:	4770      	bx	lr
900045c2:	bf00      	nop

900045c4 <_ZN25screen_snake_gameViewBase16game_snake_startEv>:
    virtual void game_snake_start()
    {
        // Override and implement this function in screen_snake_game
    }
900045c4:	4770      	bx	lr
900045c6:	bf00      	nop

900045c8 <_ZN25screen_snake_gameViewBaseD1Ev>:
}

screen_snake_gameViewBase::~screen_snake_gameViewBase()
{

}
900045c8:	4770      	bx	lr
900045ca:	bf00      	nop

900045cc <_ZN25screen_snake_gameViewBase11setupScreenEv>:

void screen_snake_gameViewBase::setupScreen()
{

}
900045cc:	4770      	bx	lr
900045ce:	bf00      	nop

900045d0 <_ZN8touchgfx8CallbackI25screen_snake_gameViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
900045d0:	4770      	bx	lr
900045d2:	bf00      	nop

900045d4 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
900045d4:	4770      	bx	lr
900045d6:	bf00      	nop

900045d8 <_ZN8touchgfx8CallbackI25screen_snake_gameViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
900045d8:	b410      	push	{r4}
        (pobject->*pmemfun)(t1);
900045da:	68c2      	ldr	r2, [r0, #12]
    virtual void execute(T1 t1)
900045dc:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
900045de:	6844      	ldr	r4, [r0, #4]
900045e0:	f012 0f01 	tst.w	r2, #1
900045e4:	eb04 0062 	add.w	r0, r4, r2, asr #1
900045e8:	d103      	bne.n	900045f2 <_ZN8touchgfx8CallbackI25screen_snake_gameViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x1a>
900045ea:	689b      	ldr	r3, [r3, #8]
    }
900045ec:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
900045f0:	4718      	bx	r3
900045f2:	ea4f 0c62 	mov.w	ip, r2, asr #1
900045f6:	689b      	ldr	r3, [r3, #8]
900045f8:	f854 200c 	ldr.w	r2, [r4, ip]
    }
900045fc:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
90004600:	58d3      	ldr	r3, [r2, r3]
90004602:	4718      	bx	r3

90004604 <_ZNK8touchgfx8CallbackI25screen_snake_gameViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
90004604:	6843      	ldr	r3, [r0, #4]
90004606:	b13b      	cbz	r3, 90004618 <_ZNK8touchgfx8CallbackI25screen_snake_gameViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
90004608:	6883      	ldr	r3, [r0, #8]
9000460a:	b10b      	cbz	r3, 90004610 <_ZNK8touchgfx8CallbackI25screen_snake_gameViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0xc>
9000460c:	2001      	movs	r0, #1
    }
9000460e:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
90004610:	68c0      	ldr	r0, [r0, #12]
90004612:	f000 0001 	and.w	r0, r0, #1
90004616:	4770      	bx	lr
90004618:	4618      	mov	r0, r3
9000461a:	4770      	bx	lr

9000461c <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
9000461c:	b510      	push	{r4, lr}
9000461e:	4604      	mov	r4, r0
90004620:	214c      	movs	r1, #76	; 0x4c
90004622:	f023 fa7d 	bl	90027b20 <_ZdlPvj>
90004626:	4620      	mov	r0, r4
90004628:	bd10      	pop	{r4, pc}
9000462a:	bf00      	nop

9000462c <_ZN8touchgfx8CallbackI25screen_snake_gameViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
9000462c:	b510      	push	{r4, lr}
9000462e:	4604      	mov	r4, r0
90004630:	2110      	movs	r1, #16
90004632:	f023 fa75 	bl	90027b20 <_ZdlPvj>
90004636:	4620      	mov	r0, r4
90004638:	bd10      	pop	{r4, pc}
9000463a:	bf00      	nop

9000463c <_ZN25screen_snake_gameViewBaseD0Ev>:
screen_snake_gameViewBase::~screen_snake_gameViewBase()
9000463c:	b510      	push	{r4, lr}
9000463e:	4604      	mov	r4, r0
}
90004640:	f44f 7164 	mov.w	r1, #912	; 0x390
90004644:	f023 fa6c 	bl	90027b20 <_ZdlPvj>
90004648:	4620      	mov	r0, r4
9000464a:	bd10      	pop	{r4, pc}

9000464c <_ZN8touchgfx8TextArea12setBaselineYEs>:
9000464c:	4b1b      	ldr	r3, [pc, #108]	; (900046bc <_ZN8touchgfx8TextArea12setBaselineYEs+0x70>)
        setY(baselineY - getTypedText().getFont()->getBaseline());
9000464e:	6802      	ldr	r2, [r0, #0]
90004650:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
90004652:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
90004654:	6b55      	ldr	r5, [r2, #52]	; 0x34
90004656:	b323      	cbz	r3, 900046a2 <_ZN8touchgfx8TextArea12setBaselineYEs+0x56>
90004658:	b28e      	uxth	r6, r1
        return typedTextId < numberOfTypedTexts;
9000465a:	4919      	ldr	r1, [pc, #100]	; (900046c0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x74>)
9000465c:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
9000465e:	4604      	mov	r4, r0
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90004660:	8809      	ldrh	r1, [r1, #0]
90004662:	4291      	cmp	r1, r2
90004664:	d923      	bls.n	900046ae <_ZN8touchgfx8TextArea12setBaselineYEs+0x62>
        return fonts[typedTexts[typedTextId].fontIdx];
90004666:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
9000466a:	4b16      	ldr	r3, [pc, #88]	; (900046c4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x78>)
9000466c:	681b      	ldr	r3, [r3, #0]
9000466e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
90004672:	4a15      	ldr	r2, [pc, #84]	; (900046c8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x7c>)
90004674:	6803      	ldr	r3, [r0, #0]
90004676:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90004678:	4293      	cmp	r3, r2
9000467a:	d107      	bne.n	9000468c <_ZN8touchgfx8TextArea12setBaselineYEs+0x40>
        return baselineHeight;
9000467c:	88c0      	ldrh	r0, [r0, #6]
9000467e:	4b13      	ldr	r3, [pc, #76]	; (900046cc <_ZN8touchgfx8TextArea12setBaselineYEs+0x80>)
90004680:	1a31      	subs	r1, r6, r0
90004682:	429d      	cmp	r5, r3
90004684:	b209      	sxth	r1, r1
90004686:	d107      	bne.n	90004698 <_ZN8touchgfx8TextArea12setBaselineYEs+0x4c>
        rect.y = y;
90004688:	80e1      	strh	r1, [r4, #6]
    }
9000468a:	bd70      	pop	{r4, r5, r6, pc}
        setY(baselineY - getTypedText().getFont()->getBaseline());
9000468c:	4798      	blx	r3
9000468e:	4b0f      	ldr	r3, [pc, #60]	; (900046cc <_ZN8touchgfx8TextArea12setBaselineYEs+0x80>)
90004690:	1a31      	subs	r1, r6, r0
90004692:	429d      	cmp	r5, r3
90004694:	b209      	sxth	r1, r1
90004696:	d0f7      	beq.n	90004688 <_ZN8touchgfx8TextArea12setBaselineYEs+0x3c>
90004698:	4620      	mov	r0, r4
9000469a:	462b      	mov	r3, r5
    }
9000469c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
900046a0:	4718      	bx	r3
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
900046a2:	4b0b      	ldr	r3, [pc, #44]	; (900046d0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x84>)
900046a4:	216c      	movs	r1, #108	; 0x6c
900046a6:	4a0b      	ldr	r2, [pc, #44]	; (900046d4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x88>)
900046a8:	480b      	ldr	r0, [pc, #44]	; (900046d8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x8c>)
900046aa:	f023 fa67 	bl	90027b7c <__assert_func>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
900046ae:	4b0b      	ldr	r3, [pc, #44]	; (900046dc <_ZN8touchgfx8TextArea12setBaselineYEs+0x90>)
900046b0:	216d      	movs	r1, #109	; 0x6d
900046b2:	4a08      	ldr	r2, [pc, #32]	; (900046d4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x88>)
900046b4:	4808      	ldr	r0, [pc, #32]	; (900046d8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x8c>)
900046b6:	f023 fa61 	bl	90027b7c <__assert_func>
900046ba:	bf00      	nop
900046bc:	2403988c 	.word	0x2403988c
900046c0:	24039890 	.word	0x24039890
900046c4:	24039894 	.word	0x24039894
900046c8:	900035c9 	.word	0x900035c9
900046cc:	90002299 	.word	0x90002299
900046d0:	9002afe0 	.word	0x9002afe0
900046d4:	9002b024 	.word	0x9002b024
900046d8:	9002b060 	.word	0x9002b060
900046dc:	9002b0f4 	.word	0x9002b0f4

900046e0 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void screen_snake_gameViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
900046e0:	b538      	push	{r3, r4, r5, lr}
    if (&src == &btn_up)
900046e2:	f500 739c 	add.w	r3, r0, #312	; 0x138
{
900046e6:	4604      	mov	r4, r0
900046e8:	460d      	mov	r5, r1
    if (&src == &btn_up)
900046ea:	4299      	cmp	r1, r3
900046ec:	d014      	beq.n	90004718 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x38>
        //intr_change_direction_up
        //When btn_up clicked call virtual function
        //Call change_direction_up
        change_direction_up();
    }
    if (&src == &btn_left)
900046ee:	f504 73f6 	add.w	r3, r4, #492	; 0x1ec
900046f2:	429d      	cmp	r5, r3
900046f4:	d02f      	beq.n	90004756 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x76>
        //intr_change_direction_left
        //When btn_left clicked call virtual function
        //Call change_direction_left
        change_direction_left();
    }
    if (&src == &btn_right)
900046f6:	f504 73ba 	add.w	r3, r4, #372	; 0x174
900046fa:	429d      	cmp	r5, r3
900046fc:	d023      	beq.n	90004746 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x66>
        //intr_change_direction_right
        //When btn_right clicked call virtual function
        //Call change_direction_right
        change_direction_right();
    }
    if (&src == &btn_down)
900046fe:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
90004702:	429d      	cmp	r5, r3
90004704:	d017      	beq.n	90004736 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x56>
        //intr_change_direction_down
        //When btn_down clicked call virtual function
        //Call change_direction_down
        change_direction_down();
    }
    if (&src == &btn_snake_start)
90004706:	f104 03c4 	add.w	r3, r4, #196	; 0xc4
9000470a:	429d      	cmp	r5, r3
9000470c:	d00b      	beq.n	90004726 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x46>
        //intr_game_snake_start
        //When btn_snake_start clicked call virtual function
        //Call game_snake_start
        game_snake_start();
    }
    if (&src == &btn_back)
9000470e:	f504 740a 	add.w	r4, r4, #552	; 0x228
90004712:	42a5      	cmp	r5, r4
90004714:	d027      	beq.n	90004766 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x86>
        //btn_back
        //When btn_back clicked change screen to screen_main_menu
        //Go to screen_main_menu with no screen transition
        application().gotoscreen_main_menuScreenNoTransition();
    }
}
90004716:	bd38      	pop	{r3, r4, r5, pc}
        change_direction_up();
90004718:	6803      	ldr	r3, [r0, #0]
9000471a:	4a16      	ldr	r2, [pc, #88]	; (90004774 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x94>)
9000471c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9000471e:	4293      	cmp	r3, r2
90004720:	d0e5      	beq.n	900046ee <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xe>
90004722:	4798      	blx	r3
90004724:	e7e3      	b.n	900046ee <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xe>
        game_snake_start();
90004726:	6823      	ldr	r3, [r4, #0]
90004728:	4a13      	ldr	r2, [pc, #76]	; (90004778 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x98>)
9000472a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
9000472c:	4293      	cmp	r3, r2
9000472e:	d0ee      	beq.n	9000470e <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x2e>
90004730:	4620      	mov	r0, r4
90004732:	4798      	blx	r3
90004734:	e7eb      	b.n	9000470e <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x2e>
        change_direction_down();
90004736:	6823      	ldr	r3, [r4, #0]
90004738:	4a10      	ldr	r2, [pc, #64]	; (9000477c <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x9c>)
9000473a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9000473c:	4293      	cmp	r3, r2
9000473e:	d0e2      	beq.n	90004706 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
90004740:	4620      	mov	r0, r4
90004742:	4798      	blx	r3
90004744:	e7df      	b.n	90004706 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
        change_direction_right();
90004746:	6823      	ldr	r3, [r4, #0]
90004748:	4a0d      	ldr	r2, [pc, #52]	; (90004780 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xa0>)
9000474a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
9000474c:	4293      	cmp	r3, r2
9000474e:	d0d6      	beq.n	900046fe <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x1e>
90004750:	4620      	mov	r0, r4
90004752:	4798      	blx	r3
90004754:	e7d3      	b.n	900046fe <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x1e>
        change_direction_left();
90004756:	6823      	ldr	r3, [r4, #0]
90004758:	4a0a      	ldr	r2, [pc, #40]	; (90004784 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xa4>)
9000475a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9000475c:	4293      	cmp	r3, r2
9000475e:	d0ca      	beq.n	900046f6 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
90004760:	4620      	mov	r0, r4
90004762:	4798      	blx	r3
90004764:	e7c7      	b.n	900046f6 <_ZN25screen_snake_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
90004766:	f012 f89d 	bl	900168a4 <_ZN8touchgfx11Application11getInstanceEv>
}
9000476a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoscreen_main_menuScreenNoTransition();
9000476e:	f7ff bb43 	b.w	90003df8 <_ZN23FrontendApplicationBase38gotoscreen_main_menuScreenNoTransitionEv>
90004772:	bf00      	nop
90004774:	900045b5 	.word	0x900045b5
90004778:	900045c5 	.word	0x900045c5
9000477c:	900045c1 	.word	0x900045c1
90004780:	900045bd 	.word	0x900045bd
90004784:	900045b9 	.word	0x900045b9

90004788 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
        setX(x);
90004788:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
9000478a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000478e:	4f25      	ldr	r7, [pc, #148]	; (90004824 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x9c>)
90004790:	4605      	mov	r5, r0
        setX(x);
90004792:	6b1e      	ldr	r6, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
90004794:	4690      	mov	r8, r2
90004796:	42be      	cmp	r6, r7
90004798:	d125      	bne.n	900047e6 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x5e>
        setBaselineY(baselineY);
9000479a:	6e5c      	ldr	r4, [r3, #100]	; 0x64
        rect.x = x;
9000479c:	80a9      	strh	r1, [r5, #4]
9000479e:	4922      	ldr	r1, [pc, #136]	; (90004828 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa0>)
900047a0:	428c      	cmp	r4, r1
900047a2:	d126      	bne.n	900047f2 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x6a>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
900047a4:	4921      	ldr	r1, [pc, #132]	; (9000482c <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa4>)
        setY(baselineY - getTypedText().getFont()->getBaseline());
900047a6:	fa1f f888 	uxth.w	r8, r8
900047aa:	6b5e      	ldr	r6, [r3, #52]	; 0x34
900047ac:	680b      	ldr	r3, [r1, #0]
900047ae:	2b00      	cmp	r3, #0
900047b0:	d032      	beq.n	90004818 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x90>
        return typedTextId < numberOfTypedTexts;
900047b2:	491f      	ldr	r1, [pc, #124]	; (90004830 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa8>)
900047b4:	8daa      	ldrh	r2, [r5, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
900047b6:	8809      	ldrh	r1, [r1, #0]
900047b8:	4291      	cmp	r1, r2
900047ba:	d927      	bls.n	9000480c <_ZN8touchgfx8TextArea13setXBaselineYEss+0x84>
        return fonts[typedTexts[typedTextId].fontIdx];
900047bc:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
900047c0:	4b1c      	ldr	r3, [pc, #112]	; (90004834 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xac>)
900047c2:	681b      	ldr	r3, [r3, #0]
900047c4:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
900047c8:	4a1b      	ldr	r2, [pc, #108]	; (90004838 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb0>)
900047ca:	6803      	ldr	r3, [r0, #0]
900047cc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
900047ce:	4293      	cmp	r3, r2
900047d0:	d11a      	bne.n	90004808 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x80>
900047d2:	88c0      	ldrh	r0, [r0, #6]
900047d4:	4b19      	ldr	r3, [pc, #100]	; (9000483c <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb4>)
900047d6:	eba8 0200 	sub.w	r2, r8, r0
900047da:	429e      	cmp	r6, r3
900047dc:	b211      	sxth	r1, r2
900047de:	d10e      	bne.n	900047fe <_ZN8touchgfx8TextArea13setXBaselineYEss+0x76>
        rect.y = y;
900047e0:	80e9      	strh	r1, [r5, #6]
    }
900047e2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        setX(x);
900047e6:	47b0      	blx	r6
        setBaselineY(baselineY);
900047e8:	682b      	ldr	r3, [r5, #0]
900047ea:	490f      	ldr	r1, [pc, #60]	; (90004828 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa0>)
900047ec:	6e5c      	ldr	r4, [r3, #100]	; 0x64
900047ee:	428c      	cmp	r4, r1
900047f0:	d0d8      	beq.n	900047a4 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x1c>
900047f2:	4641      	mov	r1, r8
900047f4:	4628      	mov	r0, r5
900047f6:	4623      	mov	r3, r4
    }
900047f8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        setBaselineY(baselineY);
900047fc:	4718      	bx	r3
        setY(baselineY - getTypedText().getFont()->getBaseline());
900047fe:	4628      	mov	r0, r5
90004800:	4633      	mov	r3, r6
    }
90004802:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
90004806:	4718      	bx	r3
90004808:	4798      	blx	r3
9000480a:	e7e3      	b.n	900047d4 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x4c>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
9000480c:	4b0c      	ldr	r3, [pc, #48]	; (90004840 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb8>)
9000480e:	216d      	movs	r1, #109	; 0x6d
90004810:	4a0c      	ldr	r2, [pc, #48]	; (90004844 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xbc>)
90004812:	480d      	ldr	r0, [pc, #52]	; (90004848 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xc0>)
90004814:	f023 f9b2 	bl	90027b7c <__assert_func>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90004818:	4b0c      	ldr	r3, [pc, #48]	; (9000484c <_ZN8touchgfx8TextArea13setXBaselineYEss+0xc4>)
9000481a:	216c      	movs	r1, #108	; 0x6c
9000481c:	4a09      	ldr	r2, [pc, #36]	; (90004844 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xbc>)
9000481e:	480a      	ldr	r0, [pc, #40]	; (90004848 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xc0>)
90004820:	f023 f9ac 	bl	90027b7c <__assert_func>
90004824:	90002295 	.word	0x90002295
90004828:	9000464d 	.word	0x9000464d
9000482c:	2403988c 	.word	0x2403988c
90004830:	24039890 	.word	0x24039890
90004834:	24039894 	.word	0x24039894
90004838:	900035c9 	.word	0x900035c9
9000483c:	90002299 	.word	0x90002299
90004840:	9002b0f4 	.word	0x9002b0f4
90004844:	9002b024 	.word	0x9002b024
90004848:	9002b060 	.word	0x9002b060
9000484c:	9002afe0 	.word	0x9002afe0

90004850 <_ZN25screen_snake_gameViewBaseC1Ev>:
screen_snake_gameViewBase::screen_snake_gameViewBase() :
90004850:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90004854:	4604      	mov	r4, r0
90004856:	2500      	movs	r5, #0
        : Widget(), alpha(255), color(0)
90004858:	f04f 08ff 	mov.w	r8, #255	; 0xff
          touchable(false),
9000485c:	f44f 7980 	mov.w	r9, #256	; 0x100
    buttonCallback(this, &screen_snake_gameViewBase::buttonCallbackHandler)
90004860:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
90004864:	4edb      	ldr	r6, [pc, #876]	; (90004bd4 <_ZN25screen_snake_gameViewBaseC1Ev+0x384>)
90004866:	f104 0bc4 	add.w	fp, r4, #196	; 0xc4
screen_snake_gameViewBase::screen_snake_gameViewBase() :
9000486a:	ed2d 8b04 	vpush	{d8-d9}
9000486e:	b093      	sub	sp, #76	; 0x4c
90004870:	f013 fc50 	bl	90018114 <_ZN8touchgfx6ScreenC1Ev>
    buttonCallback(this, &screen_snake_gameViewBase::buttonCallbackHandler)
90004874:	4bd8      	ldr	r3, [pc, #864]	; (90004bd8 <_ZN25screen_snake_gameViewBaseC1Ev+0x388>)
90004876:	af10      	add	r7, sp, #64	; 0x40
90004878:	4650      	mov	r0, sl
9000487a:	6023      	str	r3, [r4, #0]
9000487c:	f64f 73ff 	movw	r3, #65535	; 0xffff
90004880:	4639      	mov	r1, r7
90004882:	6426      	str	r6, [r4, #64]	; 0x40
90004884:	f884 8066 	strb.w	r8, [r4, #102]	; 0x66
90004888:	63e5      	str	r5, [r4, #60]	; 0x3c
        : x(0), y(0), width(0), height(0)
9000488a:	6465      	str	r5, [r4, #68]	; 0x44
          cachedAbsX(0),
9000488c:	6625      	str	r5, [r4, #96]	; 0x60
          touchable(false),
9000488e:	f8a4 9064 	strh.w	r9, [r4, #100]	; 0x64
        : color(col)
90004892:	66a5      	str	r5, [r4, #104]	; 0x68
90004894:	f8ad 3040 	strh.w	r3, [sp, #64]	; 0x40
        : x(0), y(0), width(0), height(0)
90004898:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
          parent(0),
9000489c:	e9c4 5514 	strd	r5, r5, [r4, #80]	; 0x50
          nextDrawChainElement(0),
900048a0:	e9c4 5516 	strd	r5, r5, [r4, #88]	; 0x58
900048a4:	f00e fad4 	bl	90012e50 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
900048a8:	f504 739c 	add.w	r3, r4, #312	; 0x138
900048ac:	f8c4 6098 	str.w	r6, [r4, #152]	; 0x98
900048b0:	4658      	mov	r0, fp
900048b2:	f884 80be 	strb.w	r8, [r4, #190]	; 0xbe
          touchable(false),
900048b6:	f8a4 90bc 	strh.w	r9, [r4, #188]	; 0xbc
        : color(col)
900048ba:	f8c4 50c0 	str.w	r5, [r4, #192]	; 0xc0
900048be:	9304      	str	r3, [sp, #16]
        : x(0), y(0), width(0), height(0)
900048c0:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
900048c4:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
          nextSibling(0),
900048c8:	e9c4 552b 	strd	r5, r5, [r4, #172]	; 0xac
          cachedAbsX(0),
900048cc:	e9c4 552d 	strd	r5, r5, [r4, #180]	; 0xb4
900048d0:	f00f fc30 	bl	90014134 <_ZN8touchgfx15ButtonWithLabelC1Ev>
900048d4:	f884 8132 	strb.w	r8, [r4, #306]	; 0x132
900048d8:	9804      	ldr	r0, [sp, #16]
900048da:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
          touchable(false),
900048de:	f8a4 9130 	strh.w	r9, [r4, #304]	; 0x130
        : color(col)
900048e2:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
        : x(0), y(0), width(0), height(0)
900048e6:	e9c4 6543 	strd	r6, r5, [r4, #268]	; 0x10c
900048ea:	e9c4 5545 	strd	r5, r5, [r4, #276]	; 0x114
900048ee:	f504 76ba 	add.w	r6, r4, #372	; 0x174
          parent(0),
900048f2:	e9c4 5547 	strd	r5, r5, [r4, #284]	; 0x11c
          nextDrawChainElement(0),
900048f6:	e9c4 5549 	strd	r5, r5, [r4, #292]	; 0x124
900048fa:	f00f fabd 	bl	90013e78 <_ZN8touchgfx14ButtonWithIconC1Ev>
900048fe:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
90004902:	4630      	mov	r0, r6
90004904:	ee08 6a90 	vmov	s17, r6
90004908:	9305      	str	r3, [sp, #20]
9000490a:	f504 76f6 	add.w	r6, r4, #492	; 0x1ec
9000490e:	f00f fab3 	bl	90013e78 <_ZN8touchgfx14ButtonWithIconC1Ev>
90004912:	9805      	ldr	r0, [sp, #20]
90004914:	f00f fab0 	bl	90013e78 <_ZN8touchgfx14ButtonWithIconC1Ev>
90004918:	f504 730a 	add.w	r3, r4, #552	; 0x228
9000491c:	4630      	mov	r0, r6
9000491e:	ee09 6a10 	vmov	s18, r6
90004922:	9306      	str	r3, [sp, #24]
90004924:	f00f faa8 	bl	90013e78 <_ZN8touchgfx14ButtonWithIconC1Ev>
90004928:	9806      	ldr	r0, [sp, #24]
9000492a:	1d26      	adds	r6, r4, #4
9000492c:	f00f faa4 	bl	90013e78 <_ZN8touchgfx14ButtonWithIconC1Ev>
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90004930:	f04f 32ff 	mov.w	r2, #4294967295
        : typedTextId(id)
90004934:	48a9      	ldr	r0, [pc, #676]	; (90004bdc <_ZN25screen_snake_gameViewBaseC1Ev+0x38c>)
90004936:	f64f 73ff 	movw	r3, #65535	; 0xffff
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
9000493a:	49a9      	ldr	r1, [pc, #676]	; (90004be0 <_ZN25screen_snake_gameViewBaseC1Ev+0x390>)
9000493c:	f8c4 22a4 	str.w	r2, [r4, #676]	; 0x2a4
90004940:	f8a4 22d8 	strh.w	r2, [r4, #728]	; 0x2d8
90004944:	f8a4 3290 	strh.w	r3, [r4, #656]	; 0x290
90004948:	f8c4 829a 	str.w	r8, [r4, #666]	; 0x29a
9000494c:	f8c4 82e2 	str.w	r8, [r4, #738]	; 0x2e2
90004950:	f8c4 028c 	str.w	r0, [r4, #652]	; 0x28c
90004954:	f8c4 02d4 	str.w	r0, [r4, #724]	; 0x2d4
90004958:	f8c4 1264 	str.w	r1, [r4, #612]	; 0x264
          touchable(false),
9000495c:	f8a4 9288 	strh.w	r9, [r4, #648]	; 0x288
        : color(col)
90004960:	f8c4 5294 	str.w	r5, [r4, #660]	; 0x294
90004964:	f8a4 5298 	strh.w	r5, [r4, #664]	; 0x298
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90004968:	f8c4 52a0 	str.w	r5, [r4, #672]	; 0x2a0
              text(0)
9000496c:	f8c4 52a8 	str.w	r5, [r4, #680]	; 0x2a8
90004970:	f8a4 92d0 	strh.w	r9, [r4, #720]	; 0x2d0
        : color(col)
90004974:	f8c4 52dc 	str.w	r5, [r4, #732]	; 0x2dc
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90004978:	f8a4 52e0 	strh.w	r5, [r4, #736]	; 0x2e0
        : x(0), y(0), width(0), height(0)
9000497c:	e9c4 559a 	strd	r5, r5, [r4, #616]	; 0x268
90004980:	e9c4 559c 	strd	r5, r5, [r4, #624]	; 0x270
          nextSibling(0),
90004984:	e9c4 559e 	strd	r5, r5, [r4, #632]	; 0x278
          cachedAbsX(0),
90004988:	e9c4 55a0 	strd	r5, r5, [r4, #640]	; 0x280
9000498c:	e9c4 55ac 	strd	r5, r5, [r4, #688]	; 0x2b0
90004990:	e9c4 55ae 	strd	r5, r5, [r4, #696]	; 0x2b8
          nextSibling(0),
90004994:	e9c4 55b0 	strd	r5, r5, [r4, #704]	; 0x2c0
          cachedAbsX(0),
90004998:	e9c4 55b2 	strd	r5, r5, [r4, #712]	; 0x2c8
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
9000499c:	f8c4 52e8 	str.w	r5, [r4, #744]	; 0x2e8
900049a0:	f8a4 3324 	strh.w	r3, [r4, #804]	; 0x324
        : TextAreaWithWildcardBase(), wc1(0)
900049a4:	4b8f      	ldr	r3, [pc, #572]	; (90004be4 <_ZN25screen_snake_gameViewBaseC1Ev+0x394>)
900049a6:	f8c4 832e 	str.w	r8, [r4, #814]	; 0x32e
900049aa:	f8c4 32ac 	str.w	r3, [r4, #684]	; 0x2ac
        : pobject(pObject), pmemfun(pmemfun_1)
900049ae:	4b8e      	ldr	r3, [pc, #568]	; (90004be8 <_ZN25screen_snake_gameViewBaseC1Ev+0x398>)
        rect.x = x;
900049b0:	f8df 826c 	ldr.w	r8, [pc, #620]	; 90004c20 <_ZN25screen_snake_gameViewBaseC1Ev+0x3d0>
900049b4:	f8c4 3380 	str.w	r3, [r4, #896]	; 0x380
900049b8:	4b8c      	ldr	r3, [pc, #560]	; (90004bec <_ZN25screen_snake_gameViewBaseC1Ev+0x39c>)
900049ba:	f8c4 22ec 	str.w	r2, [r4, #748]	; 0x2ec
900049be:	f8c4 3388 	str.w	r3, [r4, #904]	; 0x388
        color = newColor;
900049c2:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
900049c6:	f8c4 2338 	str.w	r2, [r4, #824]	; 0x338
900049ca:	f8c4 12f8 	str.w	r1, [r4, #760]	; 0x2f8
900049ce:	f104 0140 	add.w	r1, r4, #64	; 0x40
900049d2:	f8c4 0320 	str.w	r0, [r4, #800]	; 0x320
900049d6:	4630      	mov	r0, r6
900049d8:	f8c4 8048 	str.w	r8, [r4, #72]	; 0x48
900049dc:	66a3      	str	r3, [r4, #104]	; 0x68
          touchable(false),
900049de:	f8a4 931c 	strh.w	r9, [r4, #796]	; 0x31c
        : color(col)
900049e2:	f8c4 5328 	str.w	r5, [r4, #808]	; 0x328
900049e6:	f8a4 532c 	strh.w	r5, [r4, #812]	; 0x32c
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
900049ea:	f8c4 5334 	str.w	r5, [r4, #820]	; 0x334
              text(0)
900049ee:	f8c4 533c 	str.w	r5, [r4, #828]	; 0x33c
900049f2:	f8c4 4384 	str.w	r4, [r4, #900]	; 0x384
900049f6:	f8c4 538c 	str.w	r5, [r4, #908]	; 0x38c
        rect.x = x;
900049fa:	6465      	str	r5, [r4, #68]	; 0x44
900049fc:	e9c4 55bc 	strd	r5, r5, [r4, #752]	; 0x2f0
        : x(0), y(0), width(0), height(0)
90004a00:	e9c4 55bf 	strd	r5, r5, [r4, #764]	; 0x2fc
90004a04:	e9c4 55c1 	strd	r5, r5, [r4, #772]	; 0x304
          nextSibling(0),
90004a08:	e9c4 55c3 	strd	r5, r5, [r4, #780]	; 0x30c
          cachedAbsX(0),
90004a0c:	e9c4 55c5 	strd	r5, r5, [r4, #788]	; 0x314
90004a10:	f00c fb9a 	bl	90011148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90004a14:	2304      	movs	r3, #4
    scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_BLACK_BG_ID));
90004a16:	4650      	mov	r0, sl
90004a18:	4639      	mov	r1, r7
90004a1a:	f8ad 3040 	strh.w	r3, [sp, #64]	; 0x40
90004a1e:	f00f fa52 	bl	90013ec6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90004a22:	4650      	mov	r0, sl
90004a24:	4629      	mov	r1, r5
        rect.x = x;
90004a26:	e9c4 581c 	strd	r5, r8, [r4, #112]	; 0x70
90004a2a:	f00e f9cc 	bl	90012dc6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90004a2e:	4651      	mov	r1, sl
90004a30:	4630      	mov	r0, r6
    buttonCallback(this, &screen_snake_gameViewBase::buttonCallbackHandler)
90004a32:	f504 7a19 	add.w	sl, r4, #612	; 0x264
90004a36:	f00c fb87 	bl	90011148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90004a3a:	f04f 1096 	mov.w	r0, #9830550	; 0x960096
90004a3e:	f04f 130a 	mov.w	r3, #655370	; 0xa000a
90004a42:	f104 0198 	add.w	r1, r4, #152	; 0x98
90004a46:	f504 783e 	add.w	r8, r4, #760	; 0x2f8
90004a4a:	e9c4 0327 	strd	r0, r3, [r4, #156]	; 0x9c
90004a4e:	4b68      	ldr	r3, [pc, #416]	; (90004bf0 <_ZN25screen_snake_gameViewBaseC1Ev+0x3a0>)
90004a50:	4630      	mov	r0, r6
90004a52:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
90004a56:	f00c fb77 	bl	90011148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90004a5a:	4b66      	ldr	r3, [pc, #408]	; (90004bf4 <_ZN25screen_snake_gameViewBaseC1Ev+0x3a4>)
    btn_snake_start.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID));
90004a5c:	a90f      	add	r1, sp, #60	; 0x3c
90004a5e:	463a      	mov	r2, r7
90004a60:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
90004a64:	2302      	movs	r3, #2
90004a66:	4658      	mov	r0, fp
90004a68:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
90004a6c:	2303      	movs	r3, #3
90004a6e:	f8ad 3040 	strh.w	r3, [sp, #64]	; 0x40
90004a72:	f00e ff9c 	bl	900139ae <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        if (typedText.hasValidId())
90004a76:	4b60      	ldr	r3, [pc, #384]	; (90004bf8 <_ZN25screen_snake_gameViewBaseC1Ev+0x3a8>)
class TypedText
90004a78:	2108      	movs	r1, #8
90004a7a:	881b      	ldrh	r3, [r3, #0]
90004a7c:	f8a4 10fc 	strh.w	r1, [r4, #252]	; 0xfc
90004a80:	428b      	cmp	r3, r1
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90004a82:	4b5e      	ldr	r3, [pc, #376]	; (90004bfc <_ZN25screen_snake_gameViewBaseC1Ev+0x3ac>)
90004a84:	9307      	str	r3, [sp, #28]
90004a86:	d925      	bls.n	90004ad4 <_ZN25screen_snake_gameViewBaseC1Ev+0x284>
90004a88:	681b      	ldr	r3, [r3, #0]
90004a8a:	2b00      	cmp	r3, #0
90004a8c:	f000 81f3 	beq.w	90004e76 <_ZN25screen_snake_gameViewBaseC1Ev+0x626>
        return fonts[typedTexts[typedTextId].fontIdx];
90004a90:	7c1a      	ldrb	r2, [r3, #16]
90004a92:	4b5b      	ldr	r3, [pc, #364]	; (90004c00 <_ZN25screen_snake_gameViewBaseC1Ev+0x3b0>)
90004a94:	681b      	ldr	r3, [r3, #0]
90004a96:	f853 9022 	ldr.w	r9, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
90004a9a:	4b5a      	ldr	r3, [pc, #360]	; (90004c04 <_ZN25screen_snake_gameViewBaseC1Ev+0x3b4>)
90004a9c:	6818      	ldr	r0, [r3, #0]
90004a9e:	f7ff fbc5 	bl	9000422c <_ZNK8touchgfx5Texts7getTextEt>
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
90004aa2:	f8d9 2000 	ldr.w	r2, [r9]
90004aa6:	4601      	mov	r1, r0
90004aa8:	4857      	ldr	r0, [pc, #348]	; (90004c08 <_ZN25screen_snake_gameViewBaseC1Ev+0x3b8>)
90004aaa:	6b93      	ldr	r3, [r2, #56]	; 0x38
90004aac:	4283      	cmp	r3, r0
90004aae:	f040 81da 	bne.w	90004e66 <_ZN25screen_snake_gameViewBaseC1Ev+0x616>
        return fontHeight;
90004ab2:	f8b9 5004 	ldrh.w	r5, [r9, #4]
90004ab6:	6c93      	ldr	r3, [r2, #72]	; 0x48
90004ab8:	4648      	mov	r0, r9
90004aba:	9103      	str	r1, [sp, #12]
90004abc:	4798      	blx	r3
90004abe:	fb15 f500 	smulbb	r5, r5, r0
90004ac2:	f8d9 3000 	ldr.w	r3, [r9]
90004ac6:	4648      	mov	r0, r9
90004ac8:	b2ad      	uxth	r5, r5
90004aca:	9903      	ldr	r1, [sp, #12]
90004acc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90004ace:	4798      	blx	r3
90004ad0:	4405      	add	r5, r0
90004ad2:	b22d      	sxth	r5, r5
    btn_snake_start.setAction(buttonCallback);
90004ad4:	f504 7360 	add.w	r3, r4, #896	; 0x380
        color = col;
90004ad8:	f04f 32ff 	mov.w	r2, #4294967295
90004adc:	4659      	mov	r1, fp
90004ade:	4630      	mov	r0, r6
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
90004ae0:	f8a4 510a 	strh.w	r5, [r4, #266]	; 0x10a
90004ae4:	f04f 0901 	mov.w	r9, #1
90004ae8:	f8c4 30ec 	str.w	r3, [r4, #236]	; 0xec
90004aec:	2500      	movs	r5, #0
90004aee:	9303      	str	r3, [sp, #12]
    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
90004af0:	f04f 0b5a 	mov.w	fp, #90	; 0x5a
        colorPressed = col;
90004af4:	e9c4 2240 	strd	r2, r2, [r4, #256]	; 0x100
90004af8:	f00c fb26 	bl	90011148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90004afc:	4943      	ldr	r1, [pc, #268]	; (90004c0c <_ZN25screen_snake_gameViewBaseC1Ev+0x3bc>)
90004afe:	f04f 130a 	mov.w	r3, #655370	; 0xa000a
90004b02:	4630      	mov	r0, r6
90004b04:	e9c4 1344 	strd	r1, r3, [r4, #272]	; 0x110
90004b08:	4b41      	ldr	r3, [pc, #260]	; (90004c10 <_ZN25screen_snake_gameViewBaseC1Ev+0x3c0>)
90004b0a:	f504 7186 	add.w	r1, r4, #268	; 0x10c
90004b0e:	f8c4 3134 	str.w	r3, [r4, #308]	; 0x134
90004b12:	f00c fb19 	bl	90011148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90004b16:	4b3f      	ldr	r3, [pc, #252]	; (90004c14 <_ZN25screen_snake_gameViewBaseC1Ev+0x3c4>)
    btn_up.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_UP_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_UP_50_50_E8F6FB_SVG_ID));
90004b18:	ed9d 8a04 	vldr	s16, [sp, #16]
90004b1c:	aa0f      	add	r2, sp, #60	; 0x3c
90004b1e:	9700      	str	r7, [sp, #0]
90004b20:	a90d      	add	r1, sp, #52	; 0x34
90004b22:	f8c4 313c 	str.w	r3, [r4, #316]	; 0x13c
90004b26:	230a      	movs	r3, #10
90004b28:	ee18 0a10 	vmov	r0, s16
90004b2c:	f8ad 5034 	strh.w	r5, [sp, #52]	; 0x34
90004b30:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
90004b34:	f8ad 3040 	strh.w	r3, [sp, #64]	; 0x40
90004b38:	4613      	mov	r3, r2
90004b3a:	aa0e      	add	r2, sp, #56	; 0x38
90004b3c:	f8ad 9038 	strh.w	r9, [sp, #56]	; 0x38
90004b40:	f00f f904 	bl	90013d4c <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconX(int16_t x)
    {
        iconX = x;
90004b44:	f06f 1206 	mvn.w	r2, #393222	; 0x60006
90004b48:	9b03      	ldr	r3, [sp, #12]
90004b4a:	ee18 1a10 	vmov	r1, s16
90004b4e:	4630      	mov	r0, r6
90004b50:	f8c4 2170 	str.w	r2, [r4, #368]	; 0x170
90004b54:	f8c4 3160 	str.w	r3, [r4, #352]	; 0x160
90004b58:	f884 b16a 	strb.w	fp, [r4, #362]	; 0x16a
90004b5c:	f00c faf4 	bl	90011148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90004b60:	4b2d      	ldr	r3, [pc, #180]	; (90004c18 <_ZN25screen_snake_gameViewBaseC1Ev+0x3c8>)
    btn_right.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_RIGHT_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_RIGHT_50_50_E8F6FB_SVG_ID));
90004b62:	aa0f      	add	r2, sp, #60	; 0x3c
90004b64:	9700      	str	r7, [sp, #0]
90004b66:	f8c4 3178 	str.w	r3, [r4, #376]	; 0x178
90004b6a:	2309      	movs	r3, #9
90004b6c:	a90d      	add	r1, sp, #52	; 0x34
90004b6e:	ee18 0a90 	vmov	r0, s17
90004b72:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
90004b76:	f8ad 3040 	strh.w	r3, [sp, #64]	; 0x40
90004b7a:	4613      	mov	r3, r2
90004b7c:	aa0e      	add	r2, sp, #56	; 0x38
90004b7e:	f8ad 5034 	strh.w	r5, [sp, #52]	; 0x34
90004b82:	f8ad 9038 	strh.w	r9, [sp, #56]	; 0x38
90004b86:	f00f f8e1 	bl	90013d4c <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
90004b8a:	f06f 1206 	mvn.w	r2, #393222	; 0x60006
90004b8e:	9b03      	ldr	r3, [sp, #12]
90004b90:	ee18 1a90 	vmov	r1, s17
90004b94:	4630      	mov	r0, r6
90004b96:	f8c4 21ac 	str.w	r2, [r4, #428]	; 0x1ac
90004b9a:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
90004b9e:	f884 b1a6 	strb.w	fp, [r4, #422]	; 0x1a6
90004ba2:	f00c fad1 	bl	90011148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90004ba6:	4b1d      	ldr	r3, [pc, #116]	; (90004c1c <_ZN25screen_snake_gameViewBaseC1Ev+0x3cc>)
    btn_down.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_DOWN_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_DOWN_50_50_E8F6FB_SVG_ID));
90004ba8:	a90f      	add	r1, sp, #60	; 0x3c
90004baa:	f04f 0207 	mov.w	r2, #7
90004bae:	ed9d 8a05 	vldr	s16, [sp, #20]
90004bb2:	9700      	str	r7, [sp, #0]
90004bb4:	f8c4 31b4 	str.w	r3, [r4, #436]	; 0x1b4
90004bb8:	460b      	mov	r3, r1
90004bba:	a90e      	add	r1, sp, #56	; 0x38
90004bbc:	ee18 0a10 	vmov	r0, s16
90004bc0:	f8ad 203c 	strh.w	r2, [sp, #60]	; 0x3c
90004bc4:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
90004bc8:	460a      	mov	r2, r1
90004bca:	a90d      	add	r1, sp, #52	; 0x34
90004bcc:	f8ad 5034 	strh.w	r5, [sp, #52]	; 0x34
90004bd0:	e028      	b.n	90004c24 <_ZN25screen_snake_gameViewBaseC1Ev+0x3d4>
90004bd2:	bf00      	nop
90004bd4:	9002bd34 	.word	0x9002bd34
90004bd8:	9002b220 	.word	0x9002b220
90004bdc:	9002a6f0 	.word	0x9002a6f0
90004be0:	9002bca4 	.word	0x9002bca4
90004be4:	9002b178 	.word	0x9002b178
90004be8:	9002b208 	.word	0x9002b208
90004bec:	900046e1 	.word	0x900046e1
90004bf0:	ff1eff00 	.word	0xff1eff00
90004bf4:	006f0078 	.word	0x006f0078
90004bf8:	24039890 	.word	0x24039890
90004bfc:	2403988c 	.word	0x2403988c
90004c00:	24039894 	.word	0x24039894
90004c04:	24039898 	.word	0x24039898
90004c08:	900035cd 	.word	0x900035cd
90004c0c:	001e0014 	.word	0x001e0014
90004c10:	ffff0000 	.word	0xffff0000
90004c14:	0095018e 	.word	0x0095018e
90004c18:	00b901b2 	.word	0x00b901b2
90004c1c:	00dd018e 	.word	0x00dd018e
90004c20:	011001e0 	.word	0x011001e0
90004c24:	f8ad 9038 	strh.w	r9, [sp, #56]	; 0x38
90004c28:	f00f f890 	bl	90013d4c <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
90004c2c:	9b03      	ldr	r3, [sp, #12]
90004c2e:	f06f 1006 	mvn.w	r0, #393222	; 0x60006
90004c32:	ee18 1a10 	vmov	r1, s16
90004c36:	f884 b1e2 	strb.w	fp, [r4, #482]	; 0x1e2
90004c3a:	f8c4 01e8 	str.w	r0, [r4, #488]	; 0x1e8
90004c3e:	4630      	mov	r0, r6
90004c40:	f8c4 31d8 	str.w	r3, [r4, #472]	; 0x1d8
90004c44:	f00c fa80 	bl	90011148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90004c48:	4b94      	ldr	r3, [pc, #592]	; (90004e9c <_ZN25screen_snake_gameViewBaseC1Ev+0x64c>)
    btn_left.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_LEFT_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_LEFT_50_50_E8F6FB_SVG_ID));
90004c4a:	a90f      	add	r1, sp, #60	; 0x3c
90004c4c:	9700      	str	r7, [sp, #0]
90004c4e:	f8c4 31f0 	str.w	r3, [r4, #496]	; 0x1f0
90004c52:	2308      	movs	r3, #8
90004c54:	ee19 0a10 	vmov	r0, s18
90004c58:	f8ad 5034 	strh.w	r5, [sp, #52]	; 0x34
90004c5c:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
90004c60:	f8ad 3040 	strh.w	r3, [sp, #64]	; 0x40
90004c64:	460b      	mov	r3, r1
90004c66:	a90e      	add	r1, sp, #56	; 0x38
90004c68:	f8ad 9038 	strh.w	r9, [sp, #56]	; 0x38
90004c6c:	460a      	mov	r2, r1
90004c6e:	a90d      	add	r1, sp, #52	; 0x34
90004c70:	f00f f86c 	bl	90013d4c <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
90004c74:	9b03      	ldr	r3, [sp, #12]
90004c76:	f06f 1006 	mvn.w	r0, #393222	; 0x60006
90004c7a:	ee19 1a10 	vmov	r1, s18
90004c7e:	f8c4 3214 	str.w	r3, [r4, #532]	; 0x214
90004c82:	f8c4 0224 	str.w	r0, [r4, #548]	; 0x224
90004c86:	4630      	mov	r0, r6
90004c88:	f884 b21e 	strb.w	fp, [r4, #542]	; 0x21e
90004c8c:	f00c fa5c 	bl	90011148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btn_back.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_BACKSPACE_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_BACKSPACE_50_50_E8F6FB_SVG_ID));
90004c90:	a90f      	add	r1, sp, #60	; 0x3c
90004c92:	f04f 100c 	mov.w	r0, #786444	; 0xc000c
90004c96:	f8ad 9038 	strh.w	r9, [sp, #56]	; 0x38
90004c9a:	460b      	mov	r3, r1
90004c9c:	f8dd 9018 	ldr.w	r9, [sp, #24]
90004ca0:	a90e      	add	r1, sp, #56	; 0x38
90004ca2:	9700      	str	r7, [sp, #0]
90004ca4:	f8c4 022c 	str.w	r0, [r4, #556]	; 0x22c
90004ca8:	200b      	movs	r0, #11
90004caa:	460a      	mov	r2, r1
90004cac:	a90d      	add	r1, sp, #52	; 0x34
90004cae:	f8ad 003c 	strh.w	r0, [sp, #60]	; 0x3c
90004cb2:	f8ad 0040 	strh.w	r0, [sp, #64]	; 0x40
90004cb6:	4648      	mov	r0, r9
90004cb8:	f8ad 5034 	strh.w	r5, [sp, #52]	; 0x34
90004cbc:	f00f f846 	bl	90013d4c <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
90004cc0:	f06f 1c06 	mvn.w	ip, #393222	; 0x60006
90004cc4:	9b03      	ldr	r3, [sp, #12]
90004cc6:	4649      	mov	r1, r9
90004cc8:	4630      	mov	r0, r6
90004cca:	f8c4 c260 	str.w	ip, [r4, #608]	; 0x260
    lbl_score_val.setPosition(434, 0, 46, 24);
90004cce:	f504 792b 	add.w	r9, r4, #684	; 0x2ac
90004cd2:	f8c4 3250 	str.w	r3, [r4, #592]	; 0x250
90004cd6:	f00c fa37 	bl	90011148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
90004cda:	f04f 33ff 	mov.w	r3, #4294967295
        linespace = space;
90004cde:	f8a4 5298 	strh.w	r5, [r4, #664]	; 0x298
        boundingArea = calculateBoundingArea();
90004ce2:	ad08      	add	r5, sp, #32
        color = newColor;
90004ce4:	f8c4 3294 	str.w	r3, [r4, #660]	; 0x294
90004ce8:	f44f 73b4 	mov.w	r3, #360	; 0x168
        boundingArea = calculateBoundingArea();
90004cec:	4651      	mov	r1, sl
90004cee:	4628      	mov	r0, r5
90004cf0:	f8c4 3268 	str.w	r3, [r4, #616]	; 0x268
90004cf4:	f00e fb56 	bl	900133a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
        : typedTextId(id)
90004cf8:	f04f 0207 	mov.w	r2, #7
90004cfc:	4b68      	ldr	r3, [pc, #416]	; (90004ea0 <_ZN25screen_snake_gameViewBaseC1Ev+0x650>)
90004cfe:	f8ad 2044 	strh.w	r2, [sp, #68]	; 0x44
90004d02:	9310      	str	r3, [sp, #64]	; 0x40
90004d04:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
90004d08:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90004d0c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    lbl_score.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Y8W6));
90004d10:	4639      	mov	r1, r7
90004d12:	4650      	mov	r0, sl
90004d14:	f00e fdee 	bl	900138f4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
90004d18:	4651      	mov	r1, sl
90004d1a:	4630      	mov	r0, r6
        alpha = newAlpha;
90004d1c:	f884 b29a 	strb.w	fp, [r4, #666]	; 0x29a
90004d20:	f00c fa12 	bl	90011148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90004d24:	f44f 72d9 	mov.w	r2, #434	; 0x1b2
        setX(x);
90004d28:	f8d4 32ac 	ldr.w	r3, [r4, #684]	; 0x2ac
        setY(y);
90004d2c:	495d      	ldr	r1, [pc, #372]	; (90004ea4 <_ZN25screen_snake_gameViewBaseC1Ev+0x654>)
        rect.x = x;
90004d2e:	f8c4 22b0 	str.w	r2, [r4, #688]	; 0x2b0
        setWidth(width);
90004d32:	6b9a      	ldr	r2, [r3, #56]	; 0x38
90004d34:	428a      	cmp	r2, r1
90004d36:	f040 8092 	bne.w	90004e5e <_ZN25screen_snake_gameViewBaseC1Ev+0x60e>
        rect.width = width;
90004d3a:	222e      	movs	r2, #46	; 0x2e
        boundingArea = calculateBoundingArea();
90004d3c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
90004d40:	4649      	mov	r1, r9
90004d42:	4628      	mov	r0, r5
90004d44:	f8a4 22b4 	strh.w	r2, [r4, #692]	; 0x2b4
90004d48:	4798      	blx	r3
90004d4a:	f504 733a 	add.w	r3, r4, #744	; 0x2e8
90004d4e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90004d52:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        setHeight(height);
90004d56:	f8d4 32ac 	ldr.w	r3, [r4, #684]	; 0x2ac
90004d5a:	4953      	ldr	r1, [pc, #332]	; (90004ea8 <_ZN25screen_snake_gameViewBaseC1Ev+0x658>)
90004d5c:	6bda      	ldr	r2, [r3, #60]	; 0x3c
90004d5e:	428a      	cmp	r2, r1
90004d60:	d16f      	bne.n	90004e42 <_ZN25screen_snake_gameViewBaseC1Ev+0x5f2>
        rect.height = height;
90004d62:	2218      	movs	r2, #24
        boundingArea = calculateBoundingArea();
90004d64:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
90004d68:	4649      	mov	r1, r9
90004d6a:	4628      	mov	r0, r5
90004d6c:	f8a4 22b6 	strh.w	r2, [r4, #694]	; 0x2b6
90004d70:	4798      	blx	r3
90004d72:	f109 033c 	add.w	r3, r9, #60	; 0x3c
90004d76:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90004d7a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        boundingArea = calculateBoundingArea();
90004d7e:	f8d4 32ac 	ldr.w	r3, [r4, #684]	; 0x2ac
        color = newColor;
90004d82:	f04f 31ff 	mov.w	r1, #4294967295
90004d86:	4849      	ldr	r0, [pc, #292]	; (90004eac <_ZN25screen_snake_gameViewBaseC1Ev+0x65c>)
        boundingArea = calculateBoundingArea();
90004d88:	f8d3 2084 	ldr.w	r2, [r3, #132]	; 0x84
        linespace = space;
90004d8c:	2300      	movs	r3, #0
        color = newColor;
90004d8e:	f8c4 12dc 	str.w	r1, [r4, #732]	; 0x2dc
        linespace = space;
90004d92:	4282      	cmp	r2, r0
90004d94:	f8a4 32e0 	strh.w	r3, [r4, #736]	; 0x2e0
        boundingArea = calculateBoundingArea();
90004d98:	d157      	bne.n	90004e4a <_ZN25screen_snake_gameViewBaseC1Ev+0x5fa>
90004d9a:	f8c4 32f0 	str.w	r3, [r4, #752]	; 0x2f0
90004d9e:	e9c4 31ba 	strd	r3, r1, [r4, #744]	; 0x2e8
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90004da2:	9b07      	ldr	r3, [sp, #28]
    Unicode::snprintf(lbl_score_valBuffer, LBL_SCORE_VAL_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_8AZ9).getText());
90004da4:	f504 7a50 	add.w	sl, r4, #832	; 0x340
90004da8:	681b      	ldr	r3, [r3, #0]
90004daa:	2b00      	cmp	r3, #0
90004dac:	d069      	beq.n	90004e82 <_ZN25screen_snake_gameViewBaseC1Ev+0x632>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90004dae:	4b40      	ldr	r3, [pc, #256]	; (90004eb0 <_ZN25screen_snake_gameViewBaseC1Ev+0x660>)
90004db0:	881b      	ldrh	r3, [r3, #0]
90004db2:	2b05      	cmp	r3, #5
90004db4:	d96b      	bls.n	90004e8e <_ZN25screen_snake_gameViewBaseC1Ev+0x63e>
        return texts->getText(typedTextId);
90004db6:	4b3f      	ldr	r3, [pc, #252]	; (90004eb4 <_ZN25screen_snake_gameViewBaseC1Ev+0x664>)
90004db8:	2105      	movs	r1, #5
90004dba:	6818      	ldr	r0, [r3, #0]
90004dbc:	f7ff fa36 	bl	9000422c <_ZNK8touchgfx5Texts7getTextEt>
90004dc0:	4a3d      	ldr	r2, [pc, #244]	; (90004eb8 <_ZN25screen_snake_gameViewBaseC1Ev+0x668>)
90004dc2:	4603      	mov	r3, r0
90004dc4:	2120      	movs	r1, #32
90004dc6:	4650      	mov	r0, sl
90004dc8:	f014 fe5c 	bl	90019a84 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
90004dcc:	4b34      	ldr	r3, [pc, #208]	; (90004ea0 <_ZN25screen_snake_gameViewBaseC1Ev+0x650>)
    lbl_score_val.setTypedText(touchgfx::TypedText(T___SINGLEUSE_G1O3));
90004dce:	4639      	mov	r1, r7
90004dd0:	4648      	mov	r0, r9
90004dd2:	9310      	str	r3, [sp, #64]	; 0x40
90004dd4:	2306      	movs	r3, #6
        wc1 = value;
90004dd6:	f8c4 a2f4 	str.w	sl, [r4, #756]	; 0x2f4
90004dda:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
90004dde:	f00e fd89 	bl	900138f4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        alpha = newAlpha;
90004de2:	235a      	movs	r3, #90	; 0x5a
90004de4:	4649      	mov	r1, r9
90004de6:	4630      	mov	r0, r6
        linespace = space;
90004de8:	f04f 0900 	mov.w	r9, #0
        alpha = newAlpha;
90004dec:	f884 32e2 	strb.w	r3, [r4, #738]	; 0x2e2
90004df0:	f00c f9aa 	bl	90011148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        rect.x = x;
90004df4:	4b31      	ldr	r3, [pc, #196]	; (90004ebc <_ZN25screen_snake_gameViewBaseC1Ev+0x66c>)
        boundingArea = calculateBoundingArea();
90004df6:	4641      	mov	r1, r8
90004df8:	4628      	mov	r0, r5
90004dfa:	f8c4 32fc 	str.w	r3, [r4, #764]	; 0x2fc
        color = newColor;
90004dfe:	4b30      	ldr	r3, [pc, #192]	; (90004ec0 <_ZN25screen_snake_gameViewBaseC1Ev+0x670>)
        linespace = space;
90004e00:	f8a4 932c 	strh.w	r9, [r4, #812]	; 0x32c
        color = newColor;
90004e04:	f8c4 3328 	str.w	r3, [r4, #808]	; 0x328
        boundingArea = calculateBoundingArea();
90004e08:	f00e facc 	bl	900133a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
90004e0c:	4b24      	ldr	r3, [pc, #144]	; (90004ea0 <_ZN25screen_snake_gameViewBaseC1Ev+0x650>)
90004e0e:	2204      	movs	r2, #4
90004e10:	9310      	str	r3, [sp, #64]	; 0x40
90004e12:	f108 033c 	add.w	r3, r8, #60	; 0x3c
90004e16:	f8ad 2044 	strh.w	r2, [sp, #68]	; 0x44
90004e1a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90004e1e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    lbl_game_over.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6BFI));
90004e22:	4639      	mov	r1, r7
90004e24:	4640      	mov	r0, r8
90004e26:	f00e fd65 	bl	900138f4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
90004e2a:	4630      	mov	r0, r6
90004e2c:	4641      	mov	r1, r8
        visible = vis;
90004e2e:	f884 931d 	strb.w	r9, [r4, #797]	; 0x31d
90004e32:	f00c f989 	bl	90011148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
90004e36:	4620      	mov	r0, r4
90004e38:	b013      	add	sp, #76	; 0x4c
90004e3a:	ecbd 8b04 	vpop	{d8-d9}
90004e3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        setHeight(height);
90004e42:	2118      	movs	r1, #24
90004e44:	4648      	mov	r0, r9
90004e46:	4790      	blx	r2
90004e48:	e799      	b.n	90004d7e <_ZN25screen_snake_gameViewBaseC1Ev+0x52e>
90004e4a:	4649      	mov	r1, r9
90004e4c:	4628      	mov	r0, r5
90004e4e:	4790      	blx	r2
90004e50:	f109 033c 	add.w	r3, r9, #60	; 0x3c
90004e54:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90004e58:	e883 0007 	stmia.w	r3, {r0, r1, r2}
90004e5c:	e7a1      	b.n	90004da2 <_ZN25screen_snake_gameViewBaseC1Ev+0x552>
        setWidth(width);
90004e5e:	212e      	movs	r1, #46	; 0x2e
90004e60:	4648      	mov	r0, r9
90004e62:	4790      	blx	r2
90004e64:	e777      	b.n	90004d56 <_ZN25screen_snake_gameViewBaseC1Ev+0x506>
90004e66:	9103      	str	r1, [sp, #12]
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
90004e68:	4648      	mov	r0, r9
90004e6a:	4798      	blx	r3
90004e6c:	f8d9 2000 	ldr.w	r2, [r9]
90004e70:	4605      	mov	r5, r0
90004e72:	9903      	ldr	r1, [sp, #12]
90004e74:	e61f      	b.n	90004ab6 <_ZN25screen_snake_gameViewBaseC1Ev+0x266>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90004e76:	4b13      	ldr	r3, [pc, #76]	; (90004ec4 <_ZN25screen_snake_gameViewBaseC1Ev+0x674>)
90004e78:	216c      	movs	r1, #108	; 0x6c
90004e7a:	4a13      	ldr	r2, [pc, #76]	; (90004ec8 <_ZN25screen_snake_gameViewBaseC1Ev+0x678>)
90004e7c:	4813      	ldr	r0, [pc, #76]	; (90004ecc <_ZN25screen_snake_gameViewBaseC1Ev+0x67c>)
90004e7e:	f022 fe7d 	bl	90027b7c <__assert_func>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90004e82:	4b10      	ldr	r3, [pc, #64]	; (90004ec4 <_ZN25screen_snake_gameViewBaseC1Ev+0x674>)
90004e84:	2160      	movs	r1, #96	; 0x60
90004e86:	4a12      	ldr	r2, [pc, #72]	; (90004ed0 <_ZN25screen_snake_gameViewBaseC1Ev+0x680>)
90004e88:	4810      	ldr	r0, [pc, #64]	; (90004ecc <_ZN25screen_snake_gameViewBaseC1Ev+0x67c>)
90004e8a:	f022 fe77 	bl	90027b7c <__assert_func>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90004e8e:	4b11      	ldr	r3, [pc, #68]	; (90004ed4 <_ZN25screen_snake_gameViewBaseC1Ev+0x684>)
90004e90:	2161      	movs	r1, #97	; 0x61
90004e92:	4a0f      	ldr	r2, [pc, #60]	; (90004ed0 <_ZN25screen_snake_gameViewBaseC1Ev+0x680>)
90004e94:	480d      	ldr	r0, [pc, #52]	; (90004ecc <_ZN25screen_snake_gameViewBaseC1Ev+0x67c>)
90004e96:	f022 fe71 	bl	90027b7c <__assert_func>
90004e9a:	bf00      	nop
90004e9c:	00b9016a 	.word	0x00b9016a
90004ea0:	9002a6f0 	.word	0x9002a6f0
90004ea4:	9000452d 	.word	0x9000452d
90004ea8:	90004555 	.word	0x90004555
90004eac:	900045a1 	.word	0x900045a1
90004eb0:	24039890 	.word	0x24039890
90004eb4:	24039898 	.word	0x24039898
90004eb8:	9002b16c 	.word	0x9002b16c
90004ebc:	00700076 	.word	0x00700076
90004ec0:	ffff0000 	.word	0xffff0000
90004ec4:	9002afe0 	.word	0x9002afe0
90004ec8:	9002b024 	.word	0x9002b024
90004ecc:	9002b060 	.word	0x9002b060
90004ed0:	9002b134 	.word	0x9002b134
90004ed4:	9002b0f4 	.word	0x9002b0f4

90004ed8 <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
90004ed8:	6a80      	ldr	r0, [r0, #40]	; 0x28
90004eda:	4770      	bx	lr

90004edc <_ZN29screen_tictactoe_gameViewBase12pos1_clickedEv>:
     * Virtual Action Handlers
     */
    virtual void pos1_clicked()
    {
        // Override and implement this function in screen_tictactoe_game
    }
90004edc:	4770      	bx	lr
90004ede:	bf00      	nop

90004ee0 <_ZN29screen_tictactoe_gameViewBase12pos2_clickedEv>:
    virtual void pos2_clicked()
    {
        // Override and implement this function in screen_tictactoe_game
    }
90004ee0:	4770      	bx	lr
90004ee2:	bf00      	nop

90004ee4 <_ZN29screen_tictactoe_gameViewBase12pos3_clickedEv>:
    virtual void pos3_clicked()
    {
        // Override and implement this function in screen_tictactoe_game
    }
90004ee4:	4770      	bx	lr
90004ee6:	bf00      	nop

90004ee8 <_ZN29screen_tictactoe_gameViewBase12pos4_clickedEv>:
    virtual void pos4_clicked()
    {
        // Override and implement this function in screen_tictactoe_game
    }
90004ee8:	4770      	bx	lr
90004eea:	bf00      	nop

90004eec <_ZN29screen_tictactoe_gameViewBase12pos5_clickedEv>:
    virtual void pos5_clicked()
    {
        // Override and implement this function in screen_tictactoe_game
    }
90004eec:	4770      	bx	lr
90004eee:	bf00      	nop

90004ef0 <_ZN29screen_tictactoe_gameViewBase12pos6_clickedEv>:
    virtual void pos6_clicked()
    {
        // Override and implement this function in screen_tictactoe_game
    }
90004ef0:	4770      	bx	lr
90004ef2:	bf00      	nop

90004ef4 <_ZN29screen_tictactoe_gameViewBase12pos7_clickedEv>:
    virtual void pos7_clicked()
    {
        // Override and implement this function in screen_tictactoe_game
    }
90004ef4:	4770      	bx	lr
90004ef6:	bf00      	nop

90004ef8 <_ZN29screen_tictactoe_gameViewBase12pos8_clickedEv>:
    virtual void pos8_clicked()
    {
        // Override and implement this function in screen_tictactoe_game
    }
90004ef8:	4770      	bx	lr
90004efa:	bf00      	nop

90004efc <_ZN29screen_tictactoe_gameViewBase12pos9_clickedEv>:
    virtual void pos9_clicked()
    {
        // Override and implement this function in screen_tictactoe_game
    }
90004efc:	4770      	bx	lr
90004efe:	bf00      	nop

90004f00 <_ZN29screen_tictactoe_gameViewBase11setupScreenEv>:
}

void screen_tictactoe_gameViewBase::setupScreen()
{

}
90004f00:	4770      	bx	lr
90004f02:	bf00      	nop

90004f04 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>:
    colortype borderDown;    ///< The border down

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
    {
        borderBox.setColor(T::getPressed() ? down : up);
90004f04:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
90004f08:	b133      	cbz	r3, 90004f18 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x14>
90004f0a:	6ec2      	ldr	r2, [r0, #108]	; 0x6c
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90004f0c:	f100 0374 	add.w	r3, r0, #116	; 0x74
90004f10:	65c2      	str	r2, [r0, #92]	; 0x5c
90004f12:	681b      	ldr	r3, [r3, #0]
     *
     * @see setColor, getBorderColor, Color::getColorFromRGB
     */
    void setBorderColor(colortype colorBorder)
    {
        borderColor = colorBorder;
90004f14:	6603      	str	r3, [r0, #96]	; 0x60
        T::handlePressedUpdated();
    }
90004f16:	4770      	bx	lr
90004f18:	6e82      	ldr	r2, [r0, #104]	; 0x68
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90004f1a:	f100 0370 	add.w	r3, r0, #112	; 0x70
90004f1e:	65c2      	str	r2, [r0, #92]	; 0x5c
90004f20:	681b      	ldr	r3, [r3, #0]
90004f22:	6603      	str	r3, [r0, #96]	; 0x60
    }
90004f24:	4770      	bx	lr
90004f26:	bf00      	nop

90004f28 <_ZN8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90004f28:	4770      	bx	lr
90004f2a:	bf00      	nop

90004f2c <_ZN8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
90004f2c:	4770      	bx	lr
90004f2e:	bf00      	nop

90004f30 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>:
class BoxWithBorderButtonStyle : public T
90004f30:	4770      	bx	lr
90004f32:	bf00      	nop

90004f34 <_ZN8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
90004f34:	b410      	push	{r4}
        (pobject->*pmemfun)(t1);
90004f36:	68c2      	ldr	r2, [r0, #12]
    virtual void execute(T1 t1)
90004f38:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
90004f3a:	6844      	ldr	r4, [r0, #4]
90004f3c:	f012 0f01 	tst.w	r2, #1
90004f40:	eb04 0062 	add.w	r0, r4, r2, asr #1
90004f44:	d103      	bne.n	90004f4e <_ZN8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x1a>
90004f46:	689b      	ldr	r3, [r3, #8]
    }
90004f48:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
90004f4c:	4718      	bx	r3
90004f4e:	ea4f 0c62 	mov.w	ip, r2, asr #1
90004f52:	689b      	ldr	r3, [r3, #8]
90004f54:	f854 200c 	ldr.w	r2, [r4, ip]
    }
90004f58:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
90004f5c:	58d3      	ldr	r3, [r2, r3]
90004f5e:	4718      	bx	r3

90004f60 <_ZNK8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
90004f60:	6843      	ldr	r3, [r0, #4]
90004f62:	b13b      	cbz	r3, 90004f74 <_ZNK8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
90004f64:	6883      	ldr	r3, [r0, #8]
90004f66:	b10b      	cbz	r3, 90004f6c <_ZNK8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0xc>
90004f68:	2001      	movs	r0, #1
    }
90004f6a:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
90004f6c:	68c0      	ldr	r0, [r0, #12]
90004f6e:	f000 0001 	and.w	r0, r0, #1
90004f72:	4770      	bx	lr
90004f74:	4618      	mov	r0, r3
90004f76:	4770      	bx	lr

90004f78 <_ZN8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
90004f78:	b410      	push	{r4}
        (pobject->*pmemfun)(t1);
90004f7a:	68c2      	ldr	r2, [r0, #12]
    virtual void execute(T1 t1)
90004f7c:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
90004f7e:	6844      	ldr	r4, [r0, #4]
90004f80:	f012 0f01 	tst.w	r2, #1
90004f84:	eb04 0062 	add.w	r0, r4, r2, asr #1
90004f88:	d103      	bne.n	90004f92 <_ZN8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_+0x1a>
90004f8a:	689b      	ldr	r3, [r3, #8]
    }
90004f8c:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
90004f90:	4718      	bx	r3
90004f92:	ea4f 0c62 	mov.w	ip, r2, asr #1
90004f96:	689b      	ldr	r3, [r3, #8]
90004f98:	f854 200c 	ldr.w	r2, [r4, ip]
    }
90004f9c:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
90004fa0:	58d3      	ldr	r3, [r2, r3]
90004fa2:	4718      	bx	r3

90004fa4 <_ZNK8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
90004fa4:	6843      	ldr	r3, [r0, #4]
90004fa6:	b13b      	cbz	r3, 90004fb8 <_ZNK8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
90004fa8:	6883      	ldr	r3, [r0, #8]
90004faa:	b10b      	cbz	r3, 90004fb0 <_ZNK8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0xc>
90004fac:	2001      	movs	r0, #1
    }
90004fae:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
90004fb0:	68c0      	ldr	r0, [r0, #12]
90004fb2:	f000 0001 	and.w	r0, r0, #1
90004fb6:	4770      	bx	lr
90004fb8:	4618      	mov	r0, r3
90004fba:	4770      	bx	lr

90004fbc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE18handleAlphaUpdatedEv>:
    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
90004fbc:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
90004fc0:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        borderBox.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
90004fc4:	4770      	bx	lr
90004fc6:	bf00      	nop

90004fc8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED0Ev>:
class BoxWithBorderButtonStyle : public T
90004fc8:	b510      	push	{r4, lr}
90004fca:	4604      	mov	r4, r0
90004fcc:	2178      	movs	r1, #120	; 0x78
90004fce:	f022 fda7 	bl	90027b20 <_ZdlPvj>
90004fd2:	4620      	mov	r0, r4
90004fd4:	bd10      	pop	{r4, pc}
90004fd6:	bf00      	nop

90004fd8 <_ZN8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90004fd8:	b510      	push	{r4, lr}
90004fda:	4604      	mov	r4, r0
90004fdc:	2110      	movs	r1, #16
90004fde:	f022 fd9f 	bl	90027b20 <_ZdlPvj>
90004fe2:	4620      	mov	r0, r4
90004fe4:	bd10      	pop	{r4, pc}
90004fe6:	bf00      	nop

90004fe8 <_ZN8touchgfx8CallbackI29screen_tictactoe_gameViewBaseRKNS_14AbstractButtonEvvED0Ev>:
90004fe8:	b510      	push	{r4, lr}
90004fea:	4604      	mov	r4, r0
90004fec:	2110      	movs	r1, #16
90004fee:	f022 fd97 	bl	90027b20 <_ZdlPvj>
90004ff2:	4620      	mov	r0, r4
90004ff4:	bd10      	pop	{r4, pc}
90004ff6:	bf00      	nop

90004ff8 <_ZN29screen_tictactoe_gameViewBaseD1Ev>:
screen_tictactoe_gameViewBase::~screen_tictactoe_gameViewBase()
90004ff8:	4b03      	ldr	r3, [pc, #12]	; (90005008 <_ZN29screen_tictactoe_gameViewBaseD1Ev+0x10>)
90004ffa:	b510      	push	{r4, lr}
90004ffc:	4604      	mov	r4, r0
90004ffe:	6003      	str	r3, [r0, #0]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
90005000:	f00f ff4e 	bl	90014ea0 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
90005004:	4620      	mov	r0, r4
90005006:	bd10      	pop	{r4, pc}
90005008:	9002b434 	.word	0x9002b434

9000500c <_ZN29screen_tictactoe_gameViewBaseD0Ev>:
screen_tictactoe_gameViewBase::~screen_tictactoe_gameViewBase()
9000500c:	4b07      	ldr	r3, [pc, #28]	; (9000502c <_ZN29screen_tictactoe_gameViewBaseD0Ev+0x20>)
9000500e:	b500      	push	{lr}
90005010:	b083      	sub	sp, #12
90005012:	6003      	str	r3, [r0, #0]
90005014:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
90005016:	f00f ff43 	bl	90014ea0 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
9000501a:	9801      	ldr	r0, [sp, #4]
9000501c:	f242 715c 	movw	r1, #10076	; 0x275c
90005020:	f022 fd7e 	bl	90027b20 <_ZdlPvj>
90005024:	9801      	ldr	r0, [sp, #4]
90005026:	b003      	add	sp, #12
90005028:	f85d fb04 	ldr.w	pc, [sp], #4
9000502c:	9002b434 	.word	0x9002b434

90005030 <_ZN29screen_tictactoe_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    }
}

void screen_tictactoe_gameViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &btn_back)
90005030:	f600 206c 	addw	r0, r0, #2668	; 0xa6c
90005034:	4288      	cmp	r0, r1
90005036:	d000      	beq.n	9000503a <_ZN29screen_tictactoe_gameViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xa>
90005038:	4770      	bx	lr
{
9000503a:	b508      	push	{r3, lr}

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
9000503c:	f011 fc32 	bl	900168a4 <_ZN8touchgfx11Application11getInstanceEv>
        //intr_back
        //When btn_back clicked change screen to screen_main_menu
        //Go to screen_main_menu with no screen transition
        application().gotoscreen_main_menuScreenNoTransition();
    }
}
90005040:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoscreen_main_menuScreenNoTransition();
90005044:	f7fe bed8 	b.w	90003df8 <_ZN23FrontendApplicationBase38gotoscreen_main_menuScreenNoTransitionEv>

90005048 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:
    if (&src == &btn_pos1)
90005048:	f500 732a 	add.w	r3, r0, #680	; 0x2a8
9000504c:	4299      	cmp	r1, r3
{
9000504e:	b570      	push	{r4, r5, r6, lr}
90005050:	4604      	mov	r4, r0
90005052:	460d      	mov	r5, r1
    if (&src == &btn_pos1)
90005054:	d061      	beq.n	9000511a <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xd2>
    if (&src == &btn_pos2)
90005056:	f504 63a0 	add.w	r3, r4, #1280	; 0x500
9000505a:	429d      	cmp	r5, r3
9000505c:	d055      	beq.n	9000510a <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xc2>
    if (&src == &btn_pos3)
9000505e:	f504 63be 	add.w	r3, r4, #1520	; 0x5f0
90005062:	429d      	cmp	r5, r3
90005064:	d049      	beq.n	900050fa <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xb2>
    if (&src == &btn_pos4)
90005066:	f504 7348 	add.w	r3, r4, #800	; 0x320
9000506a:	429d      	cmp	r5, r3
9000506c:	d03d      	beq.n	900050ea <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xa2>
    if (&src == &btn_pos5)
9000506e:	f504 6382 	add.w	r3, r4, #1040	; 0x410
90005072:	429d      	cmp	r5, r3
90005074:	d031      	beq.n	900050da <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x92>
    if (&src == &btn_pos6)
90005076:	f504 7366 	add.w	r3, r4, #920	; 0x398
9000507a:	429d      	cmp	r5, r3
9000507c:	d025      	beq.n	900050ca <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x82>
    if (&src == &btn_pos7)
9000507e:	f504 6391 	add.w	r3, r4, #1160	; 0x488
90005082:	429d      	cmp	r5, r3
90005084:	d019      	beq.n	900050ba <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x72>
    if (&src == &btn_pos8)
90005086:	f504 63af 	add.w	r3, r4, #1400	; 0x578
9000508a:	429d      	cmp	r5, r3
9000508c:	d00d      	beq.n	900050aa <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x62>
    if (&src == &btn_pos9)
9000508e:	f504 63cd 	add.w	r3, r4, #1640	; 0x668
90005092:	429d      	cmp	r5, r3
90005094:	d000      	beq.n	90005098 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x50>
}
90005096:	bd70      	pop	{r4, r5, r6, pc}
        pos9_clicked();
90005098:	6823      	ldr	r3, [r4, #0]
9000509a:	4a23      	ldr	r2, [pc, #140]	; (90005128 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xe0>)
9000509c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
9000509e:	4293      	cmp	r3, r2
900050a0:	d0f9      	beq.n	90005096 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x4e>
900050a2:	4620      	mov	r0, r4
}
900050a4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        pos9_clicked();
900050a8:	4718      	bx	r3
        pos8_clicked();
900050aa:	6823      	ldr	r3, [r4, #0]
900050ac:	4a1f      	ldr	r2, [pc, #124]	; (9000512c <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xe4>)
900050ae:	6c9b      	ldr	r3, [r3, #72]	; 0x48
900050b0:	4293      	cmp	r3, r2
900050b2:	d0ec      	beq.n	9000508e <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x46>
900050b4:	4620      	mov	r0, r4
900050b6:	4798      	blx	r3
900050b8:	e7e9      	b.n	9000508e <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x46>
        pos7_clicked();
900050ba:	6823      	ldr	r3, [r4, #0]
900050bc:	4a1c      	ldr	r2, [pc, #112]	; (90005130 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xe8>)
900050be:	6c5b      	ldr	r3, [r3, #68]	; 0x44
900050c0:	4293      	cmp	r3, r2
900050c2:	d0e0      	beq.n	90005086 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x3e>
900050c4:	4620      	mov	r0, r4
900050c6:	4798      	blx	r3
900050c8:	e7dd      	b.n	90005086 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x3e>
        pos6_clicked();
900050ca:	6823      	ldr	r3, [r4, #0]
900050cc:	4a19      	ldr	r2, [pc, #100]	; (90005134 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xec>)
900050ce:	6c1b      	ldr	r3, [r3, #64]	; 0x40
900050d0:	4293      	cmp	r3, r2
900050d2:	d0d4      	beq.n	9000507e <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x36>
900050d4:	4620      	mov	r0, r4
900050d6:	4798      	blx	r3
900050d8:	e7d1      	b.n	9000507e <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x36>
        pos5_clicked();
900050da:	6823      	ldr	r3, [r4, #0]
900050dc:	4a16      	ldr	r2, [pc, #88]	; (90005138 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xf0>)
900050de:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
900050e0:	4293      	cmp	r3, r2
900050e2:	d0c8      	beq.n	90005076 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x2e>
900050e4:	4620      	mov	r0, r4
900050e6:	4798      	blx	r3
900050e8:	e7c5      	b.n	90005076 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x2e>
        pos4_clicked();
900050ea:	6823      	ldr	r3, [r4, #0]
900050ec:	4a13      	ldr	r2, [pc, #76]	; (9000513c <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xf4>)
900050ee:	6b9b      	ldr	r3, [r3, #56]	; 0x38
900050f0:	4293      	cmp	r3, r2
900050f2:	d0bc      	beq.n	9000506e <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x26>
900050f4:	4620      	mov	r0, r4
900050f6:	4798      	blx	r3
900050f8:	e7b9      	b.n	9000506e <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x26>
        pos3_clicked();
900050fa:	6823      	ldr	r3, [r4, #0]
900050fc:	4a10      	ldr	r2, [pc, #64]	; (90005140 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xf8>)
900050fe:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90005100:	4293      	cmp	r3, r2
90005102:	d0b0      	beq.n	90005066 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1e>
90005104:	4620      	mov	r0, r4
90005106:	4798      	blx	r3
90005108:	e7ad      	b.n	90005066 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1e>
        pos2_clicked();
9000510a:	6823      	ldr	r3, [r4, #0]
9000510c:	4a0d      	ldr	r2, [pc, #52]	; (90005144 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xfc>)
9000510e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90005110:	4293      	cmp	r3, r2
90005112:	d0a4      	beq.n	9000505e <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x16>
90005114:	4620      	mov	r0, r4
90005116:	4798      	blx	r3
90005118:	e7a1      	b.n	9000505e <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x16>
        pos1_clicked();
9000511a:	6803      	ldr	r3, [r0, #0]
9000511c:	4a0a      	ldr	r2, [pc, #40]	; (90005148 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x100>)
9000511e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90005120:	4293      	cmp	r3, r2
90005122:	d098      	beq.n	90005056 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xe>
90005124:	4798      	blx	r3
90005126:	e796      	b.n	90005056 <_ZN29screen_tictactoe_gameViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xe>
90005128:	90004efd 	.word	0x90004efd
9000512c:	90004ef9 	.word	0x90004ef9
90005130:	90004ef5 	.word	0x90004ef5
90005134:	90004ef1 	.word	0x90004ef1
90005138:	90004eed 	.word	0x90004eed
9000513c:	90004ee9 	.word	0x90004ee9
90005140:	90004ee5 	.word	0x90004ee5
90005144:	90004ee1 	.word	0x90004ee1
90005148:	90004edd 	.word	0x90004edd

9000514c <_ZN8touchgfx23AbstractButtonContainer13executeActionEv>:
     *
     * @see setAction
     */
    virtual void executeAction()
    {
        if (action && action->isValid())
9000514c:	6b03      	ldr	r3, [r0, #48]	; 0x30
9000514e:	b30b      	cbz	r3, 90005194 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x48>
90005150:	681a      	ldr	r2, [r3, #0]
    virtual void executeAction()
90005152:	b570      	push	{r4, r5, r6, lr}
        if (action && action->isValid())
90005154:	68d1      	ldr	r1, [r2, #12]
90005156:	4604      	mov	r4, r0
90005158:	481a      	ldr	r0, [pc, #104]	; (900051c4 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x78>)
9000515a:	4281      	cmp	r1, r0
9000515c:	d11b      	bne.n	90005196 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x4a>
        return (pobject != 0) && (pmemfun != 0);
9000515e:	6858      	ldr	r0, [r3, #4]
90005160:	b180      	cbz	r0, 90005184 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x38>
90005162:	6899      	ldr	r1, [r3, #8]
90005164:	b1f1      	cbz	r1, 900051a4 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x58>
        {
            action->execute(*this);
90005166:	6892      	ldr	r2, [r2, #8]
90005168:	4917      	ldr	r1, [pc, #92]	; (900051c8 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x7c>)
9000516a:	428a      	cmp	r2, r1
9000516c:	d124      	bne.n	900051b8 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x6c>
        (pobject->*pmemfun)(t1);
9000516e:	68da      	ldr	r2, [r3, #12]
90005170:	6858      	ldr	r0, [r3, #4]
90005172:	eb00 0062 	add.w	r0, r0, r2, asr #1
90005176:	07d2      	lsls	r2, r2, #31
90005178:	d405      	bmi.n	90005186 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x3a>
9000517a:	4621      	mov	r1, r4
9000517c:	689b      	ldr	r3, [r3, #8]
        }
    }
9000517e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90005182:	4718      	bx	r3
90005184:	bd70      	pop	{r4, r5, r6, pc}
90005186:	6899      	ldr	r1, [r3, #8]
90005188:	6803      	ldr	r3, [r0, #0]
9000518a:	585b      	ldr	r3, [r3, r1]
9000518c:	4621      	mov	r1, r4
9000518e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90005192:	4718      	bx	r3
90005194:	4770      	bx	lr
        if (action && action->isValid())
90005196:	4618      	mov	r0, r3
90005198:	4788      	blx	r1
9000519a:	2800      	cmp	r0, #0
9000519c:	d0f2      	beq.n	90005184 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x38>
            action->execute(*this);
9000519e:	6b23      	ldr	r3, [r4, #48]	; 0x30
900051a0:	681a      	ldr	r2, [r3, #0]
900051a2:	e7e0      	b.n	90005166 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1a>
        return (pobject != 0) && (pmemfun != 0);
900051a4:	68dd      	ldr	r5, [r3, #12]
900051a6:	07ee      	lsls	r6, r5, #31
900051a8:	d5ec      	bpl.n	90005184 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x38>
900051aa:	6892      	ldr	r2, [r2, #8]
900051ac:	4e06      	ldr	r6, [pc, #24]	; (900051c8 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x7c>)
900051ae:	42b2      	cmp	r2, r6
900051b0:	d102      	bne.n	900051b8 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x6c>
        (pobject->*pmemfun)(t1);
900051b2:	eb00 0065 	add.w	r0, r0, r5, asr #1
900051b6:	e7e7      	b.n	90005188 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x3c>
900051b8:	4621      	mov	r1, r4
900051ba:	4618      	mov	r0, r3
    }
900051bc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            action->execute(*this);
900051c0:	4710      	bx	r2
900051c2:	bf00      	nop
900051c4:	90004fa5 	.word	0x90004fa5
900051c8:	90004f79 	.word	0x90004f79

900051cc <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE>:
     *
     * @return The click type of this event.
     */
    ClickEventType getType() const
    {
        return clickEventType;
900051cc:	790b      	ldrb	r3, [r1, #4]
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        bool wasPressed = getPressed();
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
900051ce:	1e1a      	subs	r2, r3, #0
    virtual void handleClickEvent(const ClickEvent& event)
900051d0:	b570      	push	{r4, r5, r6, lr}
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
900051d2:	bf18      	it	ne
900051d4:	2201      	movne	r2, #1
        return pressed;
900051d6:	f890 602c 	ldrb.w	r6, [r0, #44]	; 0x2c
    virtual void handleClickEvent(const ClickEvent& event)
900051da:	460d      	mov	r5, r1
900051dc:	4604      	mov	r4, r0
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
900051de:	42b2      	cmp	r2, r6
900051e0:	d004      	beq.n	900051ec <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x20>
        {
            setPressed(newPressedValue);
            invalidate();
        }
        if (wasPressed && (event.getType() == ClickEvent::RELEASED))
900051e2:	b116      	cbz	r6, 900051ea <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1e>
900051e4:	792b      	ldrb	r3, [r5, #4]
900051e6:	2b01      	cmp	r3, #1
900051e8:	d00e      	beq.n	90005208 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x3c>
        {
            executeAction();
        }
    }
900051ea:	bd70      	pop	{r4, r5, r6, pc}
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
900051ec:	fab3 f383 	clz	r3, r3
900051f0:	095b      	lsrs	r3, r3, #5
900051f2:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
        handlePressedUpdated();
900051f6:	6803      	ldr	r3, [r0, #0]
900051f8:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
900051fc:	4798      	blx	r3
            invalidate();
900051fe:	6823      	ldr	r3, [r4, #0]
90005200:	4620      	mov	r0, r4
90005202:	695b      	ldr	r3, [r3, #20]
90005204:	4798      	blx	r3
90005206:	e7ec      	b.n	900051e2 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x16>
            executeAction();
90005208:	6823      	ldr	r3, [r4, #0]
9000520a:	4a20      	ldr	r2, [pc, #128]	; (9000528c <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xc0>)
9000520c:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
90005210:	4293      	cmp	r3, r2
90005212:	d127      	bne.n	90005264 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x98>
        if (action && action->isValid())
90005214:	6b23      	ldr	r3, [r4, #48]	; 0x30
90005216:	2b00      	cmp	r3, #0
90005218:	d0e7      	beq.n	900051ea <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1e>
9000521a:	6819      	ldr	r1, [r3, #0]
9000521c:	481c      	ldr	r0, [pc, #112]	; (90005290 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xc4>)
9000521e:	68ca      	ldr	r2, [r1, #12]
90005220:	4282      	cmp	r2, r0
90005222:	d123      	bne.n	9000526c <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xa0>
        return (pobject != 0) && (pmemfun != 0);
90005224:	685a      	ldr	r2, [r3, #4]
90005226:	2a00      	cmp	r2, #0
90005228:	d0df      	beq.n	900051ea <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1e>
9000522a:	689d      	ldr	r5, [r3, #8]
9000522c:	b175      	cbz	r5, 9000524c <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x80>
            action->execute(*this);
9000522e:	688e      	ldr	r6, [r1, #8]
90005230:	4a18      	ldr	r2, [pc, #96]	; (90005294 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xc8>)
90005232:	4296      	cmp	r6, r2
90005234:	d123      	bne.n	9000527e <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xb2>
        (pobject->*pmemfun)(t1);
90005236:	68d9      	ldr	r1, [r3, #12]
90005238:	685a      	ldr	r2, [r3, #4]
9000523a:	eb02 0061 	add.w	r0, r2, r1, asr #1
9000523e:	07ca      	lsls	r2, r1, #31
90005240:	d41b      	bmi.n	9000527a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xae>
90005242:	689b      	ldr	r3, [r3, #8]
90005244:	4621      	mov	r1, r4
    }
90005246:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9000524a:	4718      	bx	r3
        return (pobject != 0) && (pmemfun != 0);
9000524c:	68d8      	ldr	r0, [r3, #12]
9000524e:	07c6      	lsls	r6, r0, #31
90005250:	d5cb      	bpl.n	900051ea <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1e>
90005252:	688e      	ldr	r6, [r1, #8]
90005254:	490f      	ldr	r1, [pc, #60]	; (90005294 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xc8>)
90005256:	428e      	cmp	r6, r1
90005258:	d111      	bne.n	9000527e <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xb2>
        (pobject->*pmemfun)(t1);
9000525a:	eb02 0060 	add.w	r0, r2, r0, asr #1
9000525e:	6803      	ldr	r3, [r0, #0]
90005260:	595b      	ldr	r3, [r3, r5]
90005262:	e7ef      	b.n	90005244 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x78>
            executeAction();
90005264:	4620      	mov	r0, r4
    }
90005266:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            executeAction();
9000526a:	4718      	bx	r3
        if (action && action->isValid())
9000526c:	4618      	mov	r0, r3
9000526e:	4790      	blx	r2
90005270:	2800      	cmp	r0, #0
90005272:	d0ba      	beq.n	900051ea <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1e>
            action->execute(*this);
90005274:	6b23      	ldr	r3, [r4, #48]	; 0x30
90005276:	6819      	ldr	r1, [r3, #0]
90005278:	e7d9      	b.n	9000522e <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x62>
9000527a:	689d      	ldr	r5, [r3, #8]
9000527c:	e7ef      	b.n	9000525e <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x92>
9000527e:	4621      	mov	r1, r4
90005280:	4618      	mov	r0, r3
90005282:	4633      	mov	r3, r6
    }
90005284:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90005288:	4718      	bx	r3
9000528a:	bf00      	nop
9000528c:	9000514d 	.word	0x9000514d
90005290:	90004fa5 	.word	0x90004fa5
90005294:	90004f79 	.word	0x90004f79

90005298 <_ZN29screen_tictactoe_gameViewBaseC1Ev>:
screen_tictactoe_gameViewBase::screen_tictactoe_gameViewBase() :
90005298:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000529c:	ed2d 8b10 	vpush	{d8-d15}
900052a0:	b0a1      	sub	sp, #132	; 0x84
900052a2:	4604      	mov	r4, r0
900052a4:	f012 ff36 	bl	90018114 <_ZN8touchgfx6ScreenC1Ev>
          touchable(false),
900052a8:	f44f 7380 	mov.w	r3, #256	; 0x100
    buttonCallback(this, &screen_tictactoe_gameViewBase::buttonCallbackHandler)
900052ac:	4a2a      	ldr	r2, [pc, #168]	; (90005358 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xc0>)
900052ae:	2500      	movs	r5, #0
900052b0:	f8a4 3064 	strh.w	r3, [r4, #100]	; 0x64
        : Widget(), alpha(255), color(0)
900052b4:	23ff      	movs	r3, #255	; 0xff
900052b6:	4929      	ldr	r1, [pc, #164]	; (9000535c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xc4>)
900052b8:	f104 0698 	add.w	r6, r4, #152	; 0x98
900052bc:	6022      	str	r2, [r4, #0]
900052be:	f104 026c 	add.w	r2, r4, #108	; 0x6c
900052c2:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
900052c6:	f64f 73ff 	movw	r3, #65535	; 0xffff
900052ca:	4610      	mov	r0, r2
900052cc:	6421      	str	r1, [r4, #64]	; 0x40
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
900052ce:	4f24      	ldr	r7, [pc, #144]	; (90005360 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xc8>)
900052d0:	a91e      	add	r1, sp, #120	; 0x78
900052d2:	63e5      	str	r5, [r4, #60]	; 0x3c
900052d4:	ee0a 2a90 	vmov	s21, r2
900052d8:	6465      	str	r5, [r4, #68]	; 0x44
900052da:	ee08 6a10 	vmov	s16, r6
          cachedAbsX(0),
900052de:	6625      	str	r5, [r4, #96]	; 0x60
        : color(col)
900052e0:	66a5      	str	r5, [r4, #104]	; 0x68
900052e2:	f8ad 3078 	strh.w	r3, [sp, #120]	; 0x78
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
        : AbstractPainter()
900052e6:	f8df 808c 	ldr.w	r8, [pc, #140]	; 90005374 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xdc>
        : x(0), y(0), width(0), height(0)
900052ea:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
          parent(0),
900052ee:	e9c4 5514 	strd	r5, r5, [r4, #80]	; 0x50
          nextDrawChainElement(0),
900052f2:	e9c4 5516 	strd	r5, r5, [r4, #88]	; 0x58
900052f6:	f00d fdab 	bl	90012e50 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
900052fa:	4630      	mov	r0, r6
900052fc:	f00d fb7c 	bl	900129f8 <_ZN8touchgfx4LineC1Ev>
90005300:	683b      	ldr	r3, [r7, #0]
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
90005302:	f504 7184 	add.w	r1, r4, #264	; 0x108
        : widgetWidth(0)
90005306:	f8a4 510c 	strh.w	r5, [r4, #268]	; 0x10c
9000530a:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
9000530e:	f8c4 8108 	str.w	r8, [r4, #264]	; 0x108
90005312:	9112      	str	r1, [sp, #72]	; 0x48
90005314:	2a00      	cmp	r2, #0
90005316:	d02f      	beq.n	90005378 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xe0>
90005318:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
9000531a:	2800      	cmp	r0, #0
9000531c:	f001 81dd 	beq.w	900066da <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1442>
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
90005320:	6803      	ldr	r3, [r0, #0]
90005322:	4d10      	ldr	r5, [pc, #64]	; (90005364 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xcc>)
90005324:	6ada      	ldr	r2, [r3, #44]	; 0x2c
90005326:	42aa      	cmp	r2, r5
90005328:	d033      	beq.n	90005392 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xfa>
9000532a:	4790      	blx	r2
        return auxiliaryLCD;
9000532c:	683b      	ldr	r3, [r7, #0]
9000532e:	fab0 f680 	clz	r6, r0
90005332:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
90005334:	0976      	lsrs	r6, r6, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
90005336:	b140      	cbz	r0, 9000534a <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb2>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
90005338:	6803      	ldr	r3, [r0, #0]
9000533a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9000533c:	42ab      	cmp	r3, r5
9000533e:	d028      	beq.n	90005392 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xfa>
90005340:	4798      	blx	r3
90005342:	2800      	cmp	r0, #0
90005344:	bf08      	it	eq
90005346:	f046 0601 	orreq.w	r6, r6, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
9000534a:	bb16      	cbnz	r6, 90005392 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xfa>
9000534c:	4b06      	ldr	r3, [pc, #24]	; (90005368 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xd0>)
9000534e:	212c      	movs	r1, #44	; 0x2c
90005350:	4a06      	ldr	r2, [pc, #24]	; (9000536c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xd4>)
90005352:	4807      	ldr	r0, [pc, #28]	; (90005370 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xd8>)
90005354:	f022 fc12 	bl	90027b7c <__assert_func>
90005358:	9002b434 	.word	0x9002b434
9000535c:	9002bd34 	.word	0x9002bd34
90005360:	24039834 	.word	0x24039834
90005364:	90002339 	.word	0x90002339
90005368:	9002b260 	.word	0x9002b260
9000536c:	9002b2c0 	.word	0x9002b2c0
90005370:	9002b2fc 	.word	0x9002b2fc
90005374:	9002a500 	.word	0x9002a500
        return instance->lcdRef;
90005378:	6898      	ldr	r0, [r3, #8]
9000537a:	4de1      	ldr	r5, [pc, #900]	; (90005700 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x468>)
        bool compat = HAL::lcd().framebufferFormat() == format;
9000537c:	6802      	ldr	r2, [r0, #0]
9000537e:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
90005380:	42aa      	cmp	r2, r5
90005382:	d1d2      	bne.n	9000532a <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x92>
        return auxiliaryLCD;
90005384:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
        if (HAL::getInstance()->getAuxiliaryLCD())
90005386:	b120      	cbz	r0, 90005392 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xfa>
        bool compat = HAL::lcd().framebufferFormat() == format;
90005388:	6803      	ldr	r3, [r0, #0]
9000538a:	2601      	movs	r6, #1
9000538c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9000538e:	42ab      	cmp	r3, r5
90005390:	d1d6      	bne.n	90005340 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xa8>
90005392:	4edc      	ldr	r6, [pc, #880]	; (90005704 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x46c>)
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
90005394:	f04f 0a00 	mov.w	sl, #0
90005398:	f504 73c6 	add.w	r3, r4, #396	; 0x18c
9000539c:	f504 708e 	add.w	r0, r4, #284	; 0x11c
900053a0:	f106 0924 	add.w	r9, r6, #36	; 0x24
900053a4:	f8c4 6108 	str.w	r6, [r4, #264]	; 0x108
900053a8:	f8c4 a114 	str.w	sl, [r4, #276]	; 0x114
900053ac:	ee08 0a90 	vmov	s17, r0
900053b0:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
900053b4:	9314      	str	r3, [sp, #80]	; 0x50
900053b6:	f00d fb1f 	bl	900129f8 <_ZN8touchgfx4LineC1Ev>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
900053ba:	683b      	ldr	r3, [r7, #0]
        : widgetWidth(0)
900053bc:	f8a4 a190 	strh.w	sl, [r4, #400]	; 0x190
900053c0:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
        : AbstractPainter()
900053c4:	f8c4 818c 	str.w	r8, [r4, #396]	; 0x18c
900053c8:	2a00      	cmp	r2, #0
900053ca:	f001 818f 	beq.w	900066ec <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1454>
900053ce:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
900053d0:	b900      	cbnz	r0, 900053d4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x13c>
        return instance->lcdRef;
900053d2:	6898      	ldr	r0, [r3, #8]
        bool compat = HAL::lcd().framebufferFormat() == format;
900053d4:	6803      	ldr	r3, [r0, #0]
900053d6:	6ada      	ldr	r2, [r3, #44]	; 0x2c
900053d8:	42aa      	cmp	r2, r5
900053da:	f041 81f5 	bne.w	900067c8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1530>
900053de:	f04f 0a00 	mov.w	sl, #0
900053e2:	f504 7304 	add.w	r3, r4, #528	; 0x210
900053e6:	f504 70d0 	add.w	r0, r4, #416	; 0x1a0
900053ea:	f8c4 618c 	str.w	r6, [r4, #396]	; 0x18c
900053ee:	f8c4 9194 	str.w	r9, [r4, #404]	; 0x194
900053f2:	f8c4 a198 	str.w	sl, [r4, #408]	; 0x198
900053f6:	ee09 0a10 	vmov	s18, r0
900053fa:	9313      	str	r3, [sp, #76]	; 0x4c
900053fc:	f00d fafc 	bl	900129f8 <_ZN8touchgfx4LineC1Ev>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
90005400:	683b      	ldr	r3, [r7, #0]
        : widgetWidth(0)
90005402:	f8a4 a214 	strh.w	sl, [r4, #532]	; 0x214
90005406:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
9000540a:	f8c4 8210 	str.w	r8, [r4, #528]	; 0x210
9000540e:	2a00      	cmp	r2, #0
90005410:	f001 8187 	beq.w	90006722 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x148a>
90005414:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
90005416:	b900      	cbnz	r0, 9000541a <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x182>
        return instance->lcdRef;
90005418:	6898      	ldr	r0, [r3, #8]
        bool compat = HAL::lcd().framebufferFormat() == format;
9000541a:	6803      	ldr	r3, [r0, #0]
9000541c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
9000541e:	42aa      	cmp	r2, r5
90005420:	f041 81e9 	bne.w	900067f6 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x155e>
90005424:	f04f 0a00 	mov.w	sl, #0
90005428:	f504 7325 	add.w	r3, r4, #660	; 0x294
9000542c:	f504 7009 	add.w	r0, r4, #548	; 0x224
90005430:	f8c4 6210 	str.w	r6, [r4, #528]	; 0x210
90005434:	f8c4 9218 	str.w	r9, [r4, #536]	; 0x218
90005438:	f8c4 a21c 	str.w	sl, [r4, #540]	; 0x21c
9000543c:	ee09 0a90 	vmov	s19, r0
90005440:	9315      	str	r3, [sp, #84]	; 0x54
90005442:	f00d fad9 	bl	900129f8 <_ZN8touchgfx4LineC1Ev>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
90005446:	683b      	ldr	r3, [r7, #0]
        : widgetWidth(0)
90005448:	f8a4 a298 	strh.w	sl, [r4, #664]	; 0x298
9000544c:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
90005450:	f8c4 8294 	str.w	r8, [r4, #660]	; 0x294
90005454:	2a00      	cmp	r2, #0
90005456:	f001 817f 	beq.w	90006758 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x14c0>
9000545a:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
9000545c:	b900      	cbnz	r0, 90005460 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1c8>
        return instance->lcdRef;
9000545e:	6898      	ldr	r0, [r3, #8]
        bool compat = HAL::lcd().framebufferFormat() == format;
90005460:	6803      	ldr	r3, [r0, #0]
90005462:	6ada      	ldr	r2, [r3, #44]	; 0x2c
90005464:	42aa      	cmp	r2, r5
90005466:	f041 81bb 	bne.w	900067e0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1548>
          touchable(false),
9000546a:	f44f 7580 	mov.w	r5, #256	; 0x100
9000546e:	f04f 0bff 	mov.w	fp, #255	; 0xff
        : pressed(false), alpha(255), action(0)
90005472:	f44f 4a7f 	mov.w	sl, #65280	; 0xff00
        : T(), up(), down()
90005476:	f8df 8294 	ldr.w	r8, [pc, #660]	; 9000570c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x474>
        : Box(), borderColor(0), borderSize(0)
9000547a:	4fa3      	ldr	r7, [pc, #652]	; (90005708 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x470>)
9000547c:	f504 732a 	add.w	r3, r4, #680	; 0x2a8
90005480:	f8c4 6294 	str.w	r6, [r4, #660]	; 0x294
90005484:	2600      	movs	r6, #0
90005486:	f8c4 929c 	str.w	r9, [r4, #668]	; 0x29c
        touchable = touch;
9000548a:	f240 1901 	movw	r9, #257	; 0x101
9000548e:	f504 7248 	add.w	r2, r4, #800	; 0x320
        T::add(borderBox);
90005492:	4618      	mov	r0, r3
90005494:	f504 7137 	add.w	r1, r4, #732	; 0x2dc
90005498:	f8c4 62a0 	str.w	r6, [r4, #672]	; 0x2a0
          firstChild(0)
9000549c:	f8c4 62d0 	str.w	r6, [r4, #720]	; 0x2d0
900054a0:	ee0a 3a10 	vmov	s20, r3
900054a4:	f8c4 62d8 	str.w	r6, [r4, #728]	; 0x2d8
900054a8:	f8a4 630c 	strh.w	r6, [r4, #780]	; 0x30c
          touchable(false),
900054ac:	f8a4 5300 	strh.w	r5, [r4, #768]	; 0x300
900054b0:	f8a4 a2d4 	strh.w	sl, [r4, #724]	; 0x2d4
        touchable = touch;
900054b4:	f8a4 92cc 	strh.w	r9, [r4, #716]	; 0x2cc
        : T(), up(), down()
900054b8:	f8c4 82a8 	str.w	r8, [r4, #680]	; 0x2a8
900054bc:	f8c4 72dc 	str.w	r7, [r4, #732]	; 0x2dc
900054c0:	f884 b302 	strb.w	fp, [r4, #770]	; 0x302
900054c4:	e9c4 66ab 	strd	r6, r6, [r4, #684]	; 0x2ac
900054c8:	e9c4 66ad 	strd	r6, r6, [r4, #692]	; 0x2b4
          nextSibling(0),
900054cc:	e9c4 66af 	strd	r6, r6, [r4, #700]	; 0x2bc
          cachedAbsX(0),
900054d0:	e9c4 66b1 	strd	r6, r6, [r4, #708]	; 0x2c4
          nextSibling(0),
900054d4:	e9c4 66bc 	strd	r6, r6, [r4, #752]	; 0x2f0
          cachedAbsX(0),
900054d8:	e9c4 66be 	strd	r6, r6, [r4, #760]	; 0x2f8
        : color(col)
900054dc:	e9c4 66c1 	strd	r6, r6, [r4, #772]	; 0x304
        : color(0)
900054e0:	e9c4 66c4 	strd	r6, r6, [r4, #784]	; 0x310
900054e4:	e9c4 66c6 	strd	r6, r6, [r4, #792]	; 0x318
        rect.x = x;
900054e8:	e9c4 66b8 	strd	r6, r6, [r4, #736]	; 0x2e0
900054ec:	e9c4 66ba 	strd	r6, r6, [r4, #744]	; 0x2e8
900054f0:	9202      	str	r2, [sp, #8]
        T::add(borderBox);
900054f2:	f00b fe29 	bl	90011148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900054f6:	f504 7366 	add.w	r3, r4, #920	; 0x398
900054fa:	f504 7155 	add.w	r1, r4, #852	; 0x354
900054fe:	f8c4 6348 	str.w	r6, [r4, #840]	; 0x348
90005502:	9303      	str	r3, [sp, #12]
90005504:	f8a4 a34c 	strh.w	sl, [r4, #844]	; 0x34c
90005508:	f8c4 6350 	str.w	r6, [r4, #848]	; 0x350
        touchable = touch;
9000550c:	f8a4 9344 	strh.w	r9, [r4, #836]	; 0x344
        : T(), up(), down()
90005510:	f8c4 8320 	str.w	r8, [r4, #800]	; 0x320
          touchable(false),
90005514:	f8a4 5378 	strh.w	r5, [r4, #888]	; 0x378
        : color(col)
90005518:	f8c4 637c 	str.w	r6, [r4, #892]	; 0x37c
9000551c:	f8c4 7354 	str.w	r7, [r4, #852]	; 0x354
90005520:	f8c4 6380 	str.w	r6, [r4, #896]	; 0x380
90005524:	f8a4 6384 	strh.w	r6, [r4, #900]	; 0x384
90005528:	f884 b37a 	strb.w	fp, [r4, #890]	; 0x37a
        : x(0), y(0), width(0), height(0)
9000552c:	e9c4 66c9 	strd	r6, r6, [r4, #804]	; 0x324
90005530:	e9c4 66cb 	strd	r6, r6, [r4, #812]	; 0x32c
          nextSibling(0),
90005534:	e9c4 66cd 	strd	r6, r6, [r4, #820]	; 0x334
          cachedAbsX(0),
90005538:	e9c4 66cf 	strd	r6, r6, [r4, #828]	; 0x33c
          nextSibling(0),
9000553c:	e9c4 66da 	strd	r6, r6, [r4, #872]	; 0x368
          cachedAbsX(0),
90005540:	e9c4 66dc 	strd	r6, r6, [r4, #880]	; 0x370
        : color(0)
90005544:	e9c4 66e2 	strd	r6, r6, [r4, #904]	; 0x388
90005548:	e9c4 66e4 	strd	r6, r6, [r4, #912]	; 0x390
        rect.x = x;
9000554c:	e9c4 66d6 	strd	r6, r6, [r4, #856]	; 0x358
90005550:	e9c4 66d8 	strd	r6, r6, [r4, #864]	; 0x360
        T::add(borderBox);
90005554:	9802      	ldr	r0, [sp, #8]
90005556:	f00b fdf7 	bl	90011148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
9000555a:	f504 6282 	add.w	r2, r4, #1040	; 0x410
9000555e:	f504 7173 	add.w	r1, r4, #972	; 0x3cc
90005562:	f8c4 63c0 	str.w	r6, [r4, #960]	; 0x3c0
90005566:	9204      	str	r2, [sp, #16]
90005568:	f8a4 a3c4 	strh.w	sl, [r4, #964]	; 0x3c4
9000556c:	f8c4 63c8 	str.w	r6, [r4, #968]	; 0x3c8
        touchable = touch;
90005570:	f8a4 93bc 	strh.w	r9, [r4, #956]	; 0x3bc
        : T(), up(), down()
90005574:	f8c4 8398 	str.w	r8, [r4, #920]	; 0x398
          touchable(false),
90005578:	f8a4 53f0 	strh.w	r5, [r4, #1008]	; 0x3f0
        : color(col)
9000557c:	f8c4 63f4 	str.w	r6, [r4, #1012]	; 0x3f4
90005580:	f8c4 73cc 	str.w	r7, [r4, #972]	; 0x3cc
90005584:	f8c4 63f8 	str.w	r6, [r4, #1016]	; 0x3f8
90005588:	f8a4 63fc 	strh.w	r6, [r4, #1020]	; 0x3fc
        : color(0)
9000558c:	f8c4 6400 	str.w	r6, [r4, #1024]	; 0x400
90005590:	f8c4 6404 	str.w	r6, [r4, #1028]	; 0x404
90005594:	f8c4 6408 	str.w	r6, [r4, #1032]	; 0x408
90005598:	f8c4 640c 	str.w	r6, [r4, #1036]	; 0x40c
9000559c:	f884 b3f2 	strb.w	fp, [r4, #1010]	; 0x3f2
        : x(0), y(0), width(0), height(0)
900055a0:	e9c4 66e7 	strd	r6, r6, [r4, #924]	; 0x39c
900055a4:	e9c4 66e9 	strd	r6, r6, [r4, #932]	; 0x3a4
          nextSibling(0),
900055a8:	e9c4 66eb 	strd	r6, r6, [r4, #940]	; 0x3ac
          cachedAbsX(0),
900055ac:	e9c4 66ed 	strd	r6, r6, [r4, #948]	; 0x3b4
          nextSibling(0),
900055b0:	e9c4 66f8 	strd	r6, r6, [r4, #992]	; 0x3e0
          cachedAbsX(0),
900055b4:	e9c4 66fa 	strd	r6, r6, [r4, #1000]	; 0x3e8
        rect.x = x;
900055b8:	e9c4 66f4 	strd	r6, r6, [r4, #976]	; 0x3d0
900055bc:	e9c4 66f6 	strd	r6, r6, [r4, #984]	; 0x3d8
        T::add(borderBox);
900055c0:	9803      	ldr	r0, [sp, #12]
900055c2:	f00b fdc1 	bl	90011148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900055c6:	f504 6391 	add.w	r3, r4, #1160	; 0x488
900055ca:	f204 4144 	addw	r1, r4, #1092	; 0x444
900055ce:	f8c4 6414 	str.w	r6, [r4, #1044]	; 0x414
900055d2:	9305      	str	r3, [sp, #20]
900055d4:	f8c4 6418 	str.w	r6, [r4, #1048]	; 0x418
900055d8:	f8c4 641c 	str.w	r6, [r4, #1052]	; 0x41c
900055dc:	f8c4 6420 	str.w	r6, [r4, #1056]	; 0x420
          parent(0),
900055e0:	f8c4 6424 	str.w	r6, [r4, #1060]	; 0x424
          nextSibling(0),
900055e4:	f8c4 6428 	str.w	r6, [r4, #1064]	; 0x428
          nextDrawChainElement(0),
900055e8:	f8c4 642c 	str.w	r6, [r4, #1068]	; 0x42c
          cachedAbsX(0),
900055ec:	f8c4 6430 	str.w	r6, [r4, #1072]	; 0x430
900055f0:	f8c4 6438 	str.w	r6, [r4, #1080]	; 0x438
900055f4:	f8a4 a43c 	strh.w	sl, [r4, #1084]	; 0x43c
900055f8:	f8c4 6440 	str.w	r6, [r4, #1088]	; 0x440
        touchable = touch;
900055fc:	f8a4 9434 	strh.w	r9, [r4, #1076]	; 0x434
        : T(), up(), down()
90005600:	f8c4 8410 	str.w	r8, [r4, #1040]	; 0x410
          parent(0),
90005604:	f8c4 6458 	str.w	r6, [r4, #1112]	; 0x458
          nextSibling(0),
90005608:	f8c4 645c 	str.w	r6, [r4, #1116]	; 0x45c
          nextDrawChainElement(0),
9000560c:	f8c4 6460 	str.w	r6, [r4, #1120]	; 0x460
          cachedAbsX(0),
90005610:	f8c4 6464 	str.w	r6, [r4, #1124]	; 0x464
          touchable(false),
90005614:	f8a4 5468 	strh.w	r5, [r4, #1128]	; 0x468
        : color(col)
90005618:	f8c4 646c 	str.w	r6, [r4, #1132]	; 0x46c
9000561c:	f8c4 7444 	str.w	r7, [r4, #1092]	; 0x444
90005620:	f8c4 6470 	str.w	r6, [r4, #1136]	; 0x470
90005624:	f8a4 6474 	strh.w	r6, [r4, #1140]	; 0x474
        : color(0)
90005628:	f8c4 6478 	str.w	r6, [r4, #1144]	; 0x478
9000562c:	f8c4 647c 	str.w	r6, [r4, #1148]	; 0x47c
90005630:	f8c4 6480 	str.w	r6, [r4, #1152]	; 0x480
90005634:	f8c4 6484 	str.w	r6, [r4, #1156]	; 0x484
        rect.x = x;
90005638:	f8c4 6448 	str.w	r6, [r4, #1096]	; 0x448
9000563c:	f8c4 644c 	str.w	r6, [r4, #1100]	; 0x44c
90005640:	f8c4 6450 	str.w	r6, [r4, #1104]	; 0x450
90005644:	f8c4 6454 	str.w	r6, [r4, #1108]	; 0x454
90005648:	f884 b46a 	strb.w	fp, [r4, #1130]	; 0x46a
        T::add(borderBox);
9000564c:	9804      	ldr	r0, [sp, #16]
9000564e:	f00b fd7b 	bl	90011148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005652:	f504 62a0 	add.w	r2, r4, #1280	; 0x500
90005656:	f204 41bc 	addw	r1, r4, #1212	; 0x4bc
        : x(0), y(0), width(0), height(0)
9000565a:	f8c4 648c 	str.w	r6, [r4, #1164]	; 0x48c
9000565e:	9206      	str	r2, [sp, #24]
90005660:	f8c4 6490 	str.w	r6, [r4, #1168]	; 0x490
90005664:	f8c4 6494 	str.w	r6, [r4, #1172]	; 0x494
90005668:	f8c4 6498 	str.w	r6, [r4, #1176]	; 0x498
          parent(0),
9000566c:	f8c4 649c 	str.w	r6, [r4, #1180]	; 0x49c
          nextSibling(0),
90005670:	f8c4 64a0 	str.w	r6, [r4, #1184]	; 0x4a0
          nextDrawChainElement(0),
90005674:	f8c4 64a4 	str.w	r6, [r4, #1188]	; 0x4a4
          cachedAbsX(0),
90005678:	f8c4 64a8 	str.w	r6, [r4, #1192]	; 0x4a8
9000567c:	f8c4 64b0 	str.w	r6, [r4, #1200]	; 0x4b0
90005680:	f8a4 a4b4 	strh.w	sl, [r4, #1204]	; 0x4b4
90005684:	f8c4 64b8 	str.w	r6, [r4, #1208]	; 0x4b8
        touchable = touch;
90005688:	f8a4 94ac 	strh.w	r9, [r4, #1196]	; 0x4ac
        : T(), up(), down()
9000568c:	f8c4 8488 	str.w	r8, [r4, #1160]	; 0x488
          parent(0),
90005690:	f8c4 64d0 	str.w	r6, [r4, #1232]	; 0x4d0
          nextSibling(0),
90005694:	f8c4 64d4 	str.w	r6, [r4, #1236]	; 0x4d4
          nextDrawChainElement(0),
90005698:	f8c4 64d8 	str.w	r6, [r4, #1240]	; 0x4d8
          cachedAbsX(0),
9000569c:	f8c4 64dc 	str.w	r6, [r4, #1244]	; 0x4dc
          touchable(false),
900056a0:	f8a4 54e0 	strh.w	r5, [r4, #1248]	; 0x4e0
        : color(col)
900056a4:	f8c4 64e4 	str.w	r6, [r4, #1252]	; 0x4e4
900056a8:	f8c4 74bc 	str.w	r7, [r4, #1212]	; 0x4bc
900056ac:	f8c4 64e8 	str.w	r6, [r4, #1256]	; 0x4e8
900056b0:	f8a4 64ec 	strh.w	r6, [r4, #1260]	; 0x4ec
        : color(0)
900056b4:	f8c4 64f0 	str.w	r6, [r4, #1264]	; 0x4f0
900056b8:	f8c4 64f4 	str.w	r6, [r4, #1268]	; 0x4f4
900056bc:	f8c4 64f8 	str.w	r6, [r4, #1272]	; 0x4f8
900056c0:	f8c4 64fc 	str.w	r6, [r4, #1276]	; 0x4fc
        rect.x = x;
900056c4:	f8c4 64c0 	str.w	r6, [r4, #1216]	; 0x4c0
900056c8:	f8c4 64c4 	str.w	r6, [r4, #1220]	; 0x4c4
900056cc:	f8c4 64c8 	str.w	r6, [r4, #1224]	; 0x4c8
900056d0:	f8c4 64cc 	str.w	r6, [r4, #1228]	; 0x4cc
900056d4:	f884 b4e2 	strb.w	fp, [r4, #1250]	; 0x4e2
        T::add(borderBox);
900056d8:	9805      	ldr	r0, [sp, #20]
900056da:	f00b fd35 	bl	90011148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900056de:	f504 63af 	add.w	r3, r4, #1400	; 0x578
900056e2:	f204 5134 	addw	r1, r4, #1332	; 0x534
        : x(0), y(0), width(0), height(0)
900056e6:	f8c4 6504 	str.w	r6, [r4, #1284]	; 0x504
900056ea:	9307      	str	r3, [sp, #28]
900056ec:	f8c4 6508 	str.w	r6, [r4, #1288]	; 0x508
900056f0:	f8c4 650c 	str.w	r6, [r4, #1292]	; 0x50c
900056f4:	f8c4 6510 	str.w	r6, [r4, #1296]	; 0x510
          parent(0),
900056f8:	f8c4 6514 	str.w	r6, [r4, #1300]	; 0x514
900056fc:	e008      	b.n	90005710 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x478>
900056fe:	bf00      	nop
90005700:	90002339 	.word	0x90002339
90005704:	9002b9f4 	.word	0x9002b9f4
90005708:	9002bd9c 	.word	0x9002bd9c
9000570c:	9002b368 	.word	0x9002b368
          nextSibling(0),
90005710:	f8c4 6518 	str.w	r6, [r4, #1304]	; 0x518
          nextDrawChainElement(0),
90005714:	f8c4 651c 	str.w	r6, [r4, #1308]	; 0x51c
          cachedAbsX(0),
90005718:	f8c4 6520 	str.w	r6, [r4, #1312]	; 0x520
9000571c:	f8c4 6528 	str.w	r6, [r4, #1320]	; 0x528
90005720:	f8a4 a52c 	strh.w	sl, [r4, #1324]	; 0x52c
90005724:	f8c4 6530 	str.w	r6, [r4, #1328]	; 0x530
        touchable = touch;
90005728:	f8a4 9524 	strh.w	r9, [r4, #1316]	; 0x524
        : T(), up(), down()
9000572c:	f8c4 8500 	str.w	r8, [r4, #1280]	; 0x500
          parent(0),
90005730:	f8c4 6548 	str.w	r6, [r4, #1352]	; 0x548
          nextSibling(0),
90005734:	f8c4 654c 	str.w	r6, [r4, #1356]	; 0x54c
          nextDrawChainElement(0),
90005738:	f8c4 6550 	str.w	r6, [r4, #1360]	; 0x550
          cachedAbsX(0),
9000573c:	f8c4 6554 	str.w	r6, [r4, #1364]	; 0x554
          touchable(false),
90005740:	f8a4 5558 	strh.w	r5, [r4, #1368]	; 0x558
        : color(col)
90005744:	f8c4 655c 	str.w	r6, [r4, #1372]	; 0x55c
90005748:	f8c4 7534 	str.w	r7, [r4, #1332]	; 0x534
9000574c:	f8c4 6560 	str.w	r6, [r4, #1376]	; 0x560
90005750:	f8a4 6564 	strh.w	r6, [r4, #1380]	; 0x564
        : color(0)
90005754:	f8c4 6568 	str.w	r6, [r4, #1384]	; 0x568
90005758:	f8c4 656c 	str.w	r6, [r4, #1388]	; 0x56c
9000575c:	f8c4 6570 	str.w	r6, [r4, #1392]	; 0x570
90005760:	f8c4 6574 	str.w	r6, [r4, #1396]	; 0x574
        rect.x = x;
90005764:	f8c4 6538 	str.w	r6, [r4, #1336]	; 0x538
90005768:	f8c4 653c 	str.w	r6, [r4, #1340]	; 0x53c
9000576c:	f8c4 6540 	str.w	r6, [r4, #1344]	; 0x540
90005770:	f8c4 6544 	str.w	r6, [r4, #1348]	; 0x544
90005774:	f884 b55a 	strb.w	fp, [r4, #1370]	; 0x55a
        T::add(borderBox);
90005778:	9806      	ldr	r0, [sp, #24]
9000577a:	f00b fce5 	bl	90011148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
9000577e:	f504 62be 	add.w	r2, r4, #1520	; 0x5f0
90005782:	f204 51ac 	addw	r1, r4, #1452	; 0x5ac
        : x(0), y(0), width(0), height(0)
90005786:	f8c4 657c 	str.w	r6, [r4, #1404]	; 0x57c
9000578a:	9208      	str	r2, [sp, #32]
9000578c:	f8c4 6580 	str.w	r6, [r4, #1408]	; 0x580
90005790:	f8c4 6584 	str.w	r6, [r4, #1412]	; 0x584
90005794:	f8c4 6588 	str.w	r6, [r4, #1416]	; 0x588
          parent(0),
90005798:	f8c4 658c 	str.w	r6, [r4, #1420]	; 0x58c
          nextSibling(0),
9000579c:	f8c4 6590 	str.w	r6, [r4, #1424]	; 0x590
          nextDrawChainElement(0),
900057a0:	f8c4 6594 	str.w	r6, [r4, #1428]	; 0x594
          cachedAbsX(0),
900057a4:	f8c4 6598 	str.w	r6, [r4, #1432]	; 0x598
900057a8:	f8c4 65a0 	str.w	r6, [r4, #1440]	; 0x5a0
900057ac:	f8a4 a5a4 	strh.w	sl, [r4, #1444]	; 0x5a4
900057b0:	f8c4 65a8 	str.w	r6, [r4, #1448]	; 0x5a8
        touchable = touch;
900057b4:	f8a4 959c 	strh.w	r9, [r4, #1436]	; 0x59c
        : T(), up(), down()
900057b8:	f8c4 8578 	str.w	r8, [r4, #1400]	; 0x578
          parent(0),
900057bc:	f8c4 65c0 	str.w	r6, [r4, #1472]	; 0x5c0
          nextSibling(0),
900057c0:	f8c4 65c4 	str.w	r6, [r4, #1476]	; 0x5c4
          nextDrawChainElement(0),
900057c4:	f8c4 65c8 	str.w	r6, [r4, #1480]	; 0x5c8
          cachedAbsX(0),
900057c8:	f8c4 65cc 	str.w	r6, [r4, #1484]	; 0x5cc
          touchable(false),
900057cc:	f8a4 55d0 	strh.w	r5, [r4, #1488]	; 0x5d0
        : color(col)
900057d0:	f8c4 65d4 	str.w	r6, [r4, #1492]	; 0x5d4
900057d4:	f8c4 75ac 	str.w	r7, [r4, #1452]	; 0x5ac
900057d8:	f8c4 65d8 	str.w	r6, [r4, #1496]	; 0x5d8
900057dc:	f8a4 65dc 	strh.w	r6, [r4, #1500]	; 0x5dc
        : color(0)
900057e0:	f8c4 65e0 	str.w	r6, [r4, #1504]	; 0x5e0
900057e4:	f8c4 65e4 	str.w	r6, [r4, #1508]	; 0x5e4
900057e8:	f8c4 65e8 	str.w	r6, [r4, #1512]	; 0x5e8
900057ec:	f8c4 65ec 	str.w	r6, [r4, #1516]	; 0x5ec
        rect.x = x;
900057f0:	f8c4 65b0 	str.w	r6, [r4, #1456]	; 0x5b0
900057f4:	f8c4 65b4 	str.w	r6, [r4, #1460]	; 0x5b4
900057f8:	f8c4 65b8 	str.w	r6, [r4, #1464]	; 0x5b8
900057fc:	f8c4 65bc 	str.w	r6, [r4, #1468]	; 0x5bc
90005800:	f884 b5d2 	strb.w	fp, [r4, #1490]	; 0x5d2
        T::add(borderBox);
90005804:	9807      	ldr	r0, [sp, #28]
90005806:	f00b fc9f 	bl	90011148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
9000580a:	f504 63cd 	add.w	r3, r4, #1640	; 0x668
9000580e:	f204 6124 	addw	r1, r4, #1572	; 0x624
        : x(0), y(0), width(0), height(0)
90005812:	f8c4 65f4 	str.w	r6, [r4, #1524]	; 0x5f4
90005816:	9309      	str	r3, [sp, #36]	; 0x24
90005818:	f8c4 65f8 	str.w	r6, [r4, #1528]	; 0x5f8
9000581c:	f8c4 65fc 	str.w	r6, [r4, #1532]	; 0x5fc
90005820:	f8c4 6600 	str.w	r6, [r4, #1536]	; 0x600
          parent(0),
90005824:	f8c4 6604 	str.w	r6, [r4, #1540]	; 0x604
          nextSibling(0),
90005828:	f8c4 6608 	str.w	r6, [r4, #1544]	; 0x608
          nextDrawChainElement(0),
9000582c:	f8c4 660c 	str.w	r6, [r4, #1548]	; 0x60c
          cachedAbsX(0),
90005830:	f8c4 6610 	str.w	r6, [r4, #1552]	; 0x610
90005834:	f8c4 6618 	str.w	r6, [r4, #1560]	; 0x618
90005838:	f8a4 a61c 	strh.w	sl, [r4, #1564]	; 0x61c
9000583c:	f8c4 6620 	str.w	r6, [r4, #1568]	; 0x620
        touchable = touch;
90005840:	f8a4 9614 	strh.w	r9, [r4, #1556]	; 0x614
        : T(), up(), down()
90005844:	f8c4 85f0 	str.w	r8, [r4, #1520]	; 0x5f0
          parent(0),
90005848:	f8c4 6638 	str.w	r6, [r4, #1592]	; 0x638
          nextSibling(0),
9000584c:	f8c4 663c 	str.w	r6, [r4, #1596]	; 0x63c
          nextDrawChainElement(0),
90005850:	f8c4 6640 	str.w	r6, [r4, #1600]	; 0x640
          cachedAbsX(0),
90005854:	f8c4 6644 	str.w	r6, [r4, #1604]	; 0x644
          touchable(false),
90005858:	f8a4 5648 	strh.w	r5, [r4, #1608]	; 0x648
        : color(col)
9000585c:	f8c4 664c 	str.w	r6, [r4, #1612]	; 0x64c
90005860:	f8c4 7624 	str.w	r7, [r4, #1572]	; 0x624
90005864:	f8c4 6650 	str.w	r6, [r4, #1616]	; 0x650
90005868:	f8a4 6654 	strh.w	r6, [r4, #1620]	; 0x654
        : color(0)
9000586c:	f8c4 6658 	str.w	r6, [r4, #1624]	; 0x658
90005870:	f8c4 665c 	str.w	r6, [r4, #1628]	; 0x65c
90005874:	f8c4 6660 	str.w	r6, [r4, #1632]	; 0x660
90005878:	f8c4 6664 	str.w	r6, [r4, #1636]	; 0x664
        rect.x = x;
9000587c:	f8c4 6628 	str.w	r6, [r4, #1576]	; 0x628
90005880:	f8c4 662c 	str.w	r6, [r4, #1580]	; 0x62c
90005884:	f8c4 6630 	str.w	r6, [r4, #1584]	; 0x630
90005888:	f8c4 6634 	str.w	r6, [r4, #1588]	; 0x634
9000588c:	f884 b64a 	strb.w	fp, [r4, #1610]	; 0x64a
        T::add(borderBox);
90005890:	9808      	ldr	r0, [sp, #32]
90005892:	f00b fc59 	bl	90011148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005896:	f8a4 a694 	strh.w	sl, [r4, #1684]	; 0x694
9000589a:	f504 6adc 	add.w	sl, r4, #1760	; 0x6e0
9000589e:	f204 619c 	addw	r1, r4, #1692	; 0x69c
900058a2:	9809      	ldr	r0, [sp, #36]	; 0x24
        touchable = touch;
900058a4:	f8a4 968c 	strh.w	r9, [r4, #1676]	; 0x68c
900058a8:	f204 7964 	addw	r9, r4, #1892	; 0x764
        : T(), up(), down()
900058ac:	f8c4 8668 	str.w	r8, [r4, #1640]	; 0x668
900058b0:	f64f 78ff 	movw	r8, #65535	; 0xffff
900058b4:	f8c4 769c 	str.w	r7, [r4, #1692]	; 0x69c
900058b8:	f204 770c 	addw	r7, r4, #1804	; 0x70c
        : x(0), y(0), width(0), height(0)
900058bc:	f8c4 666c 	str.w	r6, [r4, #1644]	; 0x66c
900058c0:	f8c4 6670 	str.w	r6, [r4, #1648]	; 0x670
900058c4:	ee0b 7a10 	vmov	s22, r7
900058c8:	f8c4 6674 	str.w	r6, [r4, #1652]	; 0x674
900058cc:	f8c4 6678 	str.w	r6, [r4, #1656]	; 0x678
          parent(0),
900058d0:	f8c4 667c 	str.w	r6, [r4, #1660]	; 0x67c
          nextSibling(0),
900058d4:	f8c4 6680 	str.w	r6, [r4, #1664]	; 0x680
          nextDrawChainElement(0),
900058d8:	f8c4 6684 	str.w	r6, [r4, #1668]	; 0x684
          cachedAbsX(0),
900058dc:	f8c4 6688 	str.w	r6, [r4, #1672]	; 0x688
900058e0:	f8c4 6690 	str.w	r6, [r4, #1680]	; 0x690
900058e4:	f8c4 6698 	str.w	r6, [r4, #1688]	; 0x698
          parent(0),
900058e8:	f8c4 66b0 	str.w	r6, [r4, #1712]	; 0x6b0
          nextSibling(0),
900058ec:	f8c4 66b4 	str.w	r6, [r4, #1716]	; 0x6b4
          nextDrawChainElement(0),
900058f0:	f8c4 66b8 	str.w	r6, [r4, #1720]	; 0x6b8
          cachedAbsX(0),
900058f4:	f8c4 66bc 	str.w	r6, [r4, #1724]	; 0x6bc
          touchable(false),
900058f8:	f8a4 56c0 	strh.w	r5, [r4, #1728]	; 0x6c0
        : color(col)
900058fc:	f8c4 66c4 	str.w	r6, [r4, #1732]	; 0x6c4
90005900:	f8c4 66c8 	str.w	r6, [r4, #1736]	; 0x6c8
90005904:	f8a4 66cc 	strh.w	r6, [r4, #1740]	; 0x6cc
        : color(0)
90005908:	f8c4 66d0 	str.w	r6, [r4, #1744]	; 0x6d0
9000590c:	f8c4 66d4 	str.w	r6, [r4, #1748]	; 0x6d4
90005910:	f8c4 66d8 	str.w	r6, [r4, #1752]	; 0x6d8
90005914:	f8c4 66dc 	str.w	r6, [r4, #1756]	; 0x6dc
        rect.x = x;
90005918:	f8c4 66a0 	str.w	r6, [r4, #1696]	; 0x6a0
9000591c:	f8c4 66a4 	str.w	r6, [r4, #1700]	; 0x6a4
90005920:	f8c4 66a8 	str.w	r6, [r4, #1704]	; 0x6a8
90005924:	f8c4 66ac 	str.w	r6, [r4, #1708]	; 0x6ac
90005928:	f884 b6c2 	strb.w	fp, [r4, #1730]	; 0x6c2
        T::add(borderBox);
9000592c:	f00b fc0c 	bl	90011148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005930:	a91e      	add	r1, sp, #120	; 0x78
90005932:	4650      	mov	r0, sl
90005934:	f8ad 8078 	strh.w	r8, [sp, #120]	; 0x78
90005938:	f00d fa8a 	bl	90012e50 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
9000593c:	f504 63e7 	add.w	r3, r4, #1848	; 0x738
90005940:	a91e      	add	r1, sp, #120	; 0x78
90005942:	4638      	mov	r0, r7
90005944:	930a      	str	r3, [sp, #40]	; 0x28
90005946:	f504 67f2 	add.w	r7, r4, #1936	; 0x790
9000594a:	f8ad 8078 	strh.w	r8, [sp, #120]	; 0x78
9000594e:	f00d fa7f 	bl	90012e50 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90005952:	a91e      	add	r1, sp, #120	; 0x78
90005954:	980a      	ldr	r0, [sp, #40]	; 0x28
90005956:	f8ad 8078 	strh.w	r8, [sp, #120]	; 0x78
9000595a:	f00d fa79 	bl	90012e50 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
9000595e:	a91e      	add	r1, sp, #120	; 0x78
90005960:	4648      	mov	r0, r9
90005962:	f8ad 8078 	strh.w	r8, [sp, #120]	; 0x78
90005966:	f00d fa73 	bl	90012e50 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
9000596a:	f204 73bc 	addw	r3, r4, #1980	; 0x7bc
9000596e:	a91e      	add	r1, sp, #120	; 0x78
90005970:	4638      	mov	r0, r7
90005972:	ee0b 7a90 	vmov	s23, r7
90005976:	930b      	str	r3, [sp, #44]	; 0x2c
90005978:	f504 67fd 	add.w	r7, r4, #2024	; 0x7e8
9000597c:	f8ad 8078 	strh.w	r8, [sp, #120]	; 0x78
90005980:	f00d fa66 	bl	90012e50 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90005984:	a91e      	add	r1, sp, #120	; 0x78
90005986:	980b      	ldr	r0, [sp, #44]	; 0x2c
90005988:	f8ad 8078 	strh.w	r8, [sp, #120]	; 0x78
9000598c:	f00d fa60 	bl	90012e50 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90005990:	f604 0314 	addw	r3, r4, #2068	; 0x814
90005994:	a91e      	add	r1, sp, #120	; 0x78
90005996:	4638      	mov	r0, r7
90005998:	ee0c 7a10 	vmov	s24, r7
9000599c:	930c      	str	r3, [sp, #48]	; 0x30
9000599e:	f504 6704 	add.w	r7, r4, #2112	; 0x840
900059a2:	f8ad 8078 	strh.w	r8, [sp, #120]	; 0x78
900059a6:	f00d fa53 	bl	90012e50 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
900059aa:	a91e      	add	r1, sp, #120	; 0x78
900059ac:	980c      	ldr	r0, [sp, #48]	; 0x30
900059ae:	f8ad 8078 	strh.w	r8, [sp, #120]	; 0x78
900059b2:	f00d fa4d 	bl	90012e50 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
900059b6:	f604 036c 	addw	r3, r4, #2156	; 0x86c
900059ba:	a91e      	add	r1, sp, #120	; 0x78
900059bc:	4638      	mov	r0, r7
900059be:	ee0c 7a90 	vmov	s25, r7
900059c2:	930d      	str	r3, [sp, #52]	; 0x34
900059c4:	f604 0798 	addw	r7, r4, #2200	; 0x898
900059c8:	f8ad 8078 	strh.w	r8, [sp, #120]	; 0x78
900059cc:	f00d fa40 	bl	90012e50 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
900059d0:	a91e      	add	r1, sp, #120	; 0x78
900059d2:	980d      	ldr	r0, [sp, #52]	; 0x34
900059d4:	f8ad 8078 	strh.w	r8, [sp, #120]	; 0x78
900059d8:	f00d fa3a 	bl	90012e50 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
900059dc:	f604 03c4 	addw	r3, r4, #2244	; 0x8c4
900059e0:	a91e      	add	r1, sp, #120	; 0x78
900059e2:	4638      	mov	r0, r7
900059e4:	ee0d 7a10 	vmov	s26, r7
900059e8:	930e      	str	r3, [sp, #56]	; 0x38
900059ea:	f504 670f 	add.w	r7, r4, #2288	; 0x8f0
900059ee:	f8ad 8078 	strh.w	r8, [sp, #120]	; 0x78
900059f2:	f00d fa2d 	bl	90012e50 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
900059f6:	a91e      	add	r1, sp, #120	; 0x78
900059f8:	980e      	ldr	r0, [sp, #56]	; 0x38
900059fa:	f8ad 8078 	strh.w	r8, [sp, #120]	; 0x78
900059fe:	f00d fa27 	bl	90012e50 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90005a02:	f604 131c 	addw	r3, r4, #2332	; 0x91c
90005a06:	a91e      	add	r1, sp, #120	; 0x78
90005a08:	4638      	mov	r0, r7
90005a0a:	ee0d 7a90 	vmov	s27, r7
90005a0e:	930f      	str	r3, [sp, #60]	; 0x3c
90005a10:	f604 1748 	addw	r7, r4, #2376	; 0x948
90005a14:	f8ad 8078 	strh.w	r8, [sp, #120]	; 0x78
90005a18:	f00d fa1a 	bl	90012e50 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90005a1c:	a91e      	add	r1, sp, #120	; 0x78
90005a1e:	980f      	ldr	r0, [sp, #60]	; 0x3c
90005a20:	f8ad 8078 	strh.w	r8, [sp, #120]	; 0x78
90005a24:	f00d fa14 	bl	90012e50 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90005a28:	f604 1374 	addw	r3, r4, #2420	; 0x974
90005a2c:	a91e      	add	r1, sp, #120	; 0x78
90005a2e:	4638      	mov	r0, r7
90005a30:	ee0e 7a10 	vmov	s28, r7
90005a34:	9310      	str	r3, [sp, #64]	; 0x40
90005a36:	f504 671a 	add.w	r7, r4, #2464	; 0x9a0
90005a3a:	f8ad 8078 	strh.w	r8, [sp, #120]	; 0x78
90005a3e:	f00d fa07 	bl	90012e50 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90005a42:	a91e      	add	r1, sp, #120	; 0x78
90005a44:	9810      	ldr	r0, [sp, #64]	; 0x40
90005a46:	f8ad 8078 	strh.w	r8, [sp, #120]	; 0x78
90005a4a:	f00d fa01 	bl	90012e50 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90005a4e:	f604 13cc 	addw	r3, r4, #2508	; 0x9cc
90005a52:	a91e      	add	r1, sp, #120	; 0x78
90005a54:	4638      	mov	r0, r7
90005a56:	f8ad 8078 	strh.w	r8, [sp, #120]	; 0x78
90005a5a:	9311      	str	r3, [sp, #68]	; 0x44
90005a5c:	f00d f9f8 	bl	90012e50 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90005a60:	a91e      	add	r1, sp, #120	; 0x78
90005a62:	9811      	ldr	r0, [sp, #68]	; 0x44
90005a64:	f8ad 8078 	strh.w	r8, [sp, #120]	; 0x78
90005a68:	f00d f9f2 	bl	90012e50 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90005a6c:	4be6      	ldr	r3, [pc, #920]	; (90005e08 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb70>)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90005a6e:	f04f 32ff 	mov.w	r2, #4294967295
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90005a72:	49e6      	ldr	r1, [pc, #920]	; (90005e0c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb74>)
90005a74:	ee0e 7a90 	vmov	s29, r7
90005a78:	f8c4 39f8 	str.w	r3, [r4, #2552]	; 0x9f8
90005a7c:	1d27      	adds	r7, r4, #4
        : typedTextId(id)
90005a7e:	4be4      	ldr	r3, [pc, #912]	; (90005e10 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb78>)
90005a80:	f8c4 2a64 	str.w	r2, [r4, #2660]	; 0xa64
90005a84:	f604 226c 	addw	r2, r4, #2668	; 0xa6c
        : x(0), y(0), width(0), height(0)
90005a88:	f8c4 69fc 	str.w	r6, [r4, #2556]	; 0x9fc
90005a8c:	4610      	mov	r0, r2
90005a8e:	f8c4 6a00 	str.w	r6, [r4, #2560]	; 0xa00
90005a92:	f8c4 6a04 	str.w	r6, [r4, #2564]	; 0xa04
90005a96:	ee0f 2a10 	vmov	s30, r2
90005a9a:	f8c4 6a08 	str.w	r6, [r4, #2568]	; 0xa08
          parent(0),
90005a9e:	f8c4 6a0c 	str.w	r6, [r4, #2572]	; 0xa0c
          nextSibling(0),
90005aa2:	f8c4 6a10 	str.w	r6, [r4, #2576]	; 0xa10
          nextDrawChainElement(0),
90005aa6:	f8c4 6a14 	str.w	r6, [r4, #2580]	; 0xa14
          cachedAbsX(0),
90005aaa:	f8c4 6a18 	str.w	r6, [r4, #2584]	; 0xa18
          touchable(false),
90005aae:	f8a4 5a1c 	strh.w	r5, [r4, #2588]	; 0xa1c
        : color(col)
90005ab2:	f8c4 6a20 	str.w	r6, [r4, #2592]	; 0xa20
        : x(0), y(0), width(0), height(0)
90005ab6:	f8c4 6a28 	str.w	r6, [r4, #2600]	; 0xa28
90005aba:	f8c4 6a2c 	str.w	r6, [r4, #2604]	; 0xa2c
90005abe:	f8c4 6a30 	str.w	r6, [r4, #2608]	; 0xa30
90005ac2:	f8c4 6a34 	str.w	r6, [r4, #2612]	; 0xa34
          parent(0),
90005ac6:	f8c4 6a38 	str.w	r6, [r4, #2616]	; 0xa38
          nextSibling(0),
90005aca:	f8c4 6a3c 	str.w	r6, [r4, #2620]	; 0xa3c
          nextDrawChainElement(0),
90005ace:	f8c4 6a40 	str.w	r6, [r4, #2624]	; 0xa40
          cachedAbsX(0),
90005ad2:	f8c4 6a44 	str.w	r6, [r4, #2628]	; 0xa44
          touchable(false),
90005ad6:	f8a4 5a48 	strh.w	r5, [r4, #2632]	; 0xa48
        : color(col)
90005ada:	f8c4 6a54 	str.w	r6, [r4, #2644]	; 0xa54
90005ade:	f8a4 6a58 	strh.w	r6, [r4, #2648]	; 0xa58
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90005ae2:	f8c4 6a60 	str.w	r6, [r4, #2656]	; 0xa60
              text(0)
90005ae6:	f8c4 6a68 	str.w	r6, [r4, #2664]	; 0xa68
90005aea:	f8c4 3a4c 	str.w	r3, [r4, #2636]	; 0xa4c
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90005aee:	f8c4 1a24 	str.w	r1, [r4, #2596]	; 0xa24
90005af2:	f884 8a1e 	strb.w	r8, [r4, #2590]	; 0xa1e
90005af6:	f8a4 8a50 	strh.w	r8, [r4, #2640]	; 0xa50
90005afa:	f8c4 ba5a 	str.w	fp, [r4, #2650]	; 0xa5a
90005afe:	f00e f9bb 	bl	90013e78 <_ZN8touchgfx14ButtonWithIconC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
90005b02:	48c4      	ldr	r0, [pc, #784]	; (90005e14 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb7c>)
        : pobject(pObject), pmemfun(pmemfun_1)
90005b04:	f504 5100 	add.w	r1, r4, #8192	; 0x2000
90005b08:	f04f 32ff 	mov.w	r2, #4294967295
90005b0c:	f8c4 0aa8 	str.w	r0, [r4, #2728]	; 0xaa8
90005b10:	4bbf      	ldr	r3, [pc, #764]	; (90005e10 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb78>)
90005b12:	48c1      	ldr	r0, [pc, #772]	; (90005e18 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb80>)
90005b14:	f8c4 3ad0 	str.w	r3, [r4, #2768]	; 0xad0
90005b18:	f8a4 2ad4 	strh.w	r2, [r4, #2772]	; 0xad4
90005b1c:	f8c4 2ae8 	str.w	r2, [r4, #2792]	; 0xae8
90005b20:	f8a4 5acc 	strh.w	r5, [r4, #2764]	; 0xacc
        : x(0), y(0), width(0), height(0)
90005b24:	f8c4 6aac 	str.w	r6, [r4, #2732]	; 0xaac
90005b28:	f8c4 6ab0 	str.w	r6, [r4, #2736]	; 0xab0
90005b2c:	f8c4 6ab4 	str.w	r6, [r4, #2740]	; 0xab4
90005b30:	f8c4 6ab8 	str.w	r6, [r4, #2744]	; 0xab8
          parent(0),
90005b34:	f8c4 6abc 	str.w	r6, [r4, #2748]	; 0xabc
          nextSibling(0),
90005b38:	f8c4 6ac0 	str.w	r6, [r4, #2752]	; 0xac0
          nextDrawChainElement(0),
90005b3c:	f8c4 6ac4 	str.w	r6, [r4, #2756]	; 0xac4
          cachedAbsX(0),
90005b40:	f8c4 6ac8 	str.w	r6, [r4, #2760]	; 0xac8
        : color(col)
90005b44:	f8c4 6ad8 	str.w	r6, [r4, #2776]	; 0xad8
90005b48:	f8a4 6adc 	strh.w	r6, [r4, #2780]	; 0xadc
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90005b4c:	f8c4 6ae4 	str.w	r6, [r4, #2788]	; 0xae4
              text(0)
90005b50:	f8c4 6aec 	str.w	r6, [r4, #2796]	; 0xaec
90005b54:	f8c4 6af0 	str.w	r6, [r4, #2800]	; 0xaf0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90005b58:	f8c4 bade 	str.w	fp, [r4, #2782]	; 0xade
90005b5c:	f8c1 073c 	str.w	r0, [r1, #1852]	; 0x73c
90005b60:	48ae      	ldr	r0, [pc, #696]	; (90005e1c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb84>)
90005b62:	f8c1 6748 	str.w	r6, [r1, #1864]	; 0x748
90005b66:	f8c1 0744 	str.w	r0, [r1, #1860]	; 0x744
90005b6a:	48ad      	ldr	r0, [pc, #692]	; (90005e20 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb88>)
90005b6c:	f8c1 6758 	str.w	r6, [r1, #1880]	; 0x758
90005b70:	f8c1 074c 	str.w	r0, [r1, #1868]	; 0x74c
90005b74:	48ab      	ldr	r0, [pc, #684]	; (90005e24 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb8c>)
90005b76:	f8c1 4740 	str.w	r4, [r1, #1856]	; 0x740
90005b7a:	f8c1 0754 	str.w	r0, [r1, #1876]	; 0x754
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
90005b7e:	f604 301c 	addw	r0, r4, #2844	; 0xb1c
90005b82:	f8c1 4750 	str.w	r4, [r1, #1872]	; 0x750
90005b86:	f44f 51e1 	mov.w	r1, #7200	; 0x1c20
90005b8a:	f00f f97f 	bl	90014e8c <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
        rect.x = x;
90005b8e:	4da6      	ldr	r5, [pc, #664]	; (90005e28 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb90>)
        color = newColor;
90005b90:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
90005b94:	4638      	mov	r0, r7
90005b96:	6466      	str	r6, [r4, #68]	; 0x44
90005b98:	66a1      	str	r1, [r4, #104]	; 0x68
90005b9a:	f104 0140 	add.w	r1, r4, #64	; 0x40
90005b9e:	64a5      	str	r5, [r4, #72]	; 0x48
90005ba0:	f00b fad2 	bl	90011148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005ba4:	2104      	movs	r1, #4
    scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_BLACK_BG_ID));
90005ba6:	ee1a 0a90 	vmov	r0, s21
90005baa:	f8ad 1078 	strh.w	r1, [sp, #120]	; 0x78
90005bae:	a91e      	add	r1, sp, #120	; 0x78
90005bb0:	f00e f989 	bl	90013ec6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90005bb4:	4631      	mov	r1, r6
90005bb6:	ee1a 0a90 	vmov	r0, s21
90005bba:	e9c4 651c 	strd	r6, r5, [r4, #112]	; 0x70
90005bbe:	f00d f902 	bl	90012dc6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90005bc2:	ee1a 1a90 	vmov	r1, s21
90005bc6:	4638      	mov	r0, r7
90005bc8:	4e98      	ldr	r6, [pc, #608]	; (90005e2c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb94>)
90005bca:	f00b fabd 	bl	90011148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        canvasPainter = &painter;
90005bce:	9b12      	ldr	r3, [sp, #72]	; 0x48
90005bd0:	f04f 32ff 	mov.w	r2, #4294967295
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setStart(T x, T y)
    {
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
90005bd4:	ee18 0a10 	vmov	r0, s16
90005bd8:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
90005bdc:	f8c4 2114 	str.w	r2, [r4, #276]	; 0x114
90005be0:	22a0      	movs	r2, #160	; 0xa0
90005be2:	4b93      	ldr	r3, [pc, #588]	; (90005e30 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb98>)
90005be4:	4611      	mov	r1, r2
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
90005be6:	f8a4 8118 	strh.w	r8, [r4, #280]	; 0x118
90005bea:	e9c4 6327 	strd	r6, r3, [r4, #156]	; 0x9c
90005bee:	f00d f819 	bl	90012c24 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setEnd(T x, T y)
    {
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
90005bf2:	f44f 52fa 	mov.w	r2, #8000	; 0x1f40
90005bf6:	21a0      	movs	r1, #160	; 0xa0
90005bf8:	ee18 0a10 	vmov	r0, s16
90005bfc:	f00d f81d 	bl	90012c3a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
     *
     * @note The area containing the Line is not invalidated.
     */
    void setLineWidth(CWRUtil::Q5 widthQ5)
    {
        if (lineWidthQ5 == widthQ5)
90005c00:	f8d4 30d4 	ldr.w	r3, [r4, #212]	; 0xd4
    buttonCallback(this, &screen_tictactoe_gameViewBase::buttonCallbackHandler)
90005c04:	f604 2224 	addw	r2, r4, #2596	; 0xa24
90005c08:	f5b3 7fa0 	cmp.w	r3, #320	; 0x140
90005c0c:	ee0a 2a90 	vmov	s21, r2
90005c10:	d007      	beq.n	90005c22 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x98a>
        {
            return;
        }

        lineWidthQ5 = widthQ5;
90005c12:	f44f 73a0 	mov.w	r3, #320	; 0x140

        updateCachedShape();
90005c16:	ee18 0a10 	vmov	r0, s16
        lineWidthQ5 = widthQ5;
90005c1a:	f8c4 30d4 	str.w	r3, [r4, #212]	; 0xd4
        updateCachedShape();
90005c1e:	f00c ff0b 	bl	90012a38 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line_vertical1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
90005c22:	2101      	movs	r1, #1
90005c24:	ee18 0a10 	vmov	r0, s16
90005c28:	f00d f812 	bl	90012c50 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
90005c2c:	ee18 1a10 	vmov	r1, s16
90005c30:	4638      	mov	r0, r7
90005c32:	4d80      	ldr	r5, [pc, #512]	; (90005e34 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb9c>)
90005c34:	f00b fa88 	bl	90011148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005c38:	9b14      	ldr	r3, [sp, #80]	; 0x50
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
90005c3a:	22a0      	movs	r2, #160	; 0xa0
90005c3c:	ee18 0a90 	vmov	r0, s17
90005c40:	f8c4 3144 	str.w	r3, [r4, #324]	; 0x144
90005c44:	f04f 33ff 	mov.w	r3, #4294967295
90005c48:	4611      	mov	r1, r2
90005c4a:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
90005c4e:	f8a4 319c 	strh.w	r3, [r4, #412]	; 0x19c
90005c52:	4b77      	ldr	r3, [pc, #476]	; (90005e30 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb98>)
90005c54:	e9c4 5348 	strd	r5, r3, [r4, #288]	; 0x120
90005c58:	f00c ffe4 	bl	90012c24 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
90005c5c:	f44f 52fa 	mov.w	r2, #8000	; 0x1f40
90005c60:	21a0      	movs	r1, #160	; 0xa0
90005c62:	ee18 0a90 	vmov	r0, s17
90005c66:	f00c ffe8 	bl	90012c3a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
90005c6a:	f8d4 3158 	ldr.w	r3, [r4, #344]	; 0x158
90005c6e:	f5b3 7fa0 	cmp.w	r3, #320	; 0x140
90005c72:	d007      	beq.n	90005c84 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x9ec>
        lineWidthQ5 = widthQ5;
90005c74:	f44f 73a0 	mov.w	r3, #320	; 0x140
        updateCachedShape();
90005c78:	ee18 0a90 	vmov	r0, s17
        lineWidthQ5 = widthQ5;
90005c7c:	f8c4 3158 	str.w	r3, [r4, #344]	; 0x158
        updateCachedShape();
90005c80:	f00c feda 	bl	90012a38 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line_vertical2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
90005c84:	2101      	movs	r1, #1
90005c86:	ee18 0a90 	vmov	r0, s17
90005c8a:	f00c ffe1 	bl	90012c50 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
90005c8e:	ee18 1a90 	vmov	r1, s17
90005c92:	4638      	mov	r0, r7
90005c94:	f00b fa58 	bl	90011148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005c98:	9b13      	ldr	r3, [sp, #76]	; 0x4c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
90005c9a:	22a0      	movs	r2, #160	; 0xa0
90005c9c:	4866      	ldr	r0, [pc, #408]	; (90005e38 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xba0>)
90005c9e:	f8c4 31c8 	str.w	r3, [r4, #456]	; 0x1c8
90005ca2:	f04f 33ff 	mov.w	r3, #4294967295
90005ca6:	4611      	mov	r1, r2
90005ca8:	f8c4 321c 	str.w	r3, [r4, #540]	; 0x21c
90005cac:	f8a4 3220 	strh.w	r3, [r4, #544]	; 0x220
90005cb0:	4b62      	ldr	r3, [pc, #392]	; (90005e3c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xba4>)
90005cb2:	e9c4 0369 	strd	r0, r3, [r4, #420]	; 0x1a4
90005cb6:	ee19 0a10 	vmov	r0, s18
90005cba:	f00c ffb3 	bl	90012c24 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
90005cbe:	22a0      	movs	r2, #160	; 0xa0
90005cc0:	f44f 512f 	mov.w	r1, #11200	; 0x2bc0
90005cc4:	ee19 0a10 	vmov	r0, s18
90005cc8:	f00c ffb7 	bl	90012c3a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
90005ccc:	f8d4 31dc 	ldr.w	r3, [r4, #476]	; 0x1dc
90005cd0:	f5b3 7fa0 	cmp.w	r3, #320	; 0x140
90005cd4:	d007      	beq.n	90005ce6 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xa4e>
        lineWidthQ5 = widthQ5;
90005cd6:	f44f 73a0 	mov.w	r3, #320	; 0x140
        updateCachedShape();
90005cda:	ee19 0a10 	vmov	r0, s18
        lineWidthQ5 = widthQ5;
90005cde:	f8c4 31dc 	str.w	r3, [r4, #476]	; 0x1dc
        updateCachedShape();
90005ce2:	f00c fea9 	bl	90012a38 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line_horizontal1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
90005ce6:	2101      	movs	r1, #1
90005ce8:	ee19 0a10 	vmov	r0, s18
90005cec:	f00c ffb0 	bl	90012c50 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
90005cf0:	ee19 1a10 	vmov	r1, s18
90005cf4:	4638      	mov	r0, r7
90005cf6:	f00b fa27 	bl	90011148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005cfa:	9b15      	ldr	r3, [sp, #84]	; 0x54
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
90005cfc:	22a0      	movs	r2, #160	; 0xa0
90005cfe:	4950      	ldr	r1, [pc, #320]	; (90005e40 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xba8>)
90005d00:	f8c4 324c 	str.w	r3, [r4, #588]	; 0x24c
90005d04:	f04f 33ff 	mov.w	r3, #4294967295
90005d08:	ee19 0a90 	vmov	r0, s19
90005d0c:	f8c4 32a0 	str.w	r3, [r4, #672]	; 0x2a0
90005d10:	f8a4 32a4 	strh.w	r3, [r4, #676]	; 0x2a4
90005d14:	4b4b      	ldr	r3, [pc, #300]	; (90005e44 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xbac>)
90005d16:	e9c4 138a 	strd	r1, r3, [r4, #552]	; 0x228
90005d1a:	4611      	mov	r1, r2
90005d1c:	f00c ff82 	bl	90012c24 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
90005d20:	22a0      	movs	r2, #160	; 0xa0
90005d22:	f44f 512f 	mov.w	r1, #11200	; 0x2bc0
90005d26:	ee19 0a90 	vmov	r0, s19
90005d2a:	f00c ff86 	bl	90012c3a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
90005d2e:	f8d4 3260 	ldr.w	r3, [r4, #608]	; 0x260
90005d32:	f5b3 7fa0 	cmp.w	r3, #320	; 0x140
90005d36:	d007      	beq.n	90005d48 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xab0>
        lineWidthQ5 = widthQ5;
90005d38:	f44f 73a0 	mov.w	r3, #320	; 0x140
        updateCachedShape();
90005d3c:	ee19 0a90 	vmov	r0, s19
        lineWidthQ5 = widthQ5;
90005d40:	f8c4 3260 	str.w	r3, [r4, #608]	; 0x260
        updateCachedShape();
90005d44:	f00c fe78 	bl	90012a38 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line_horizontal2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
90005d48:	2101      	movs	r1, #1
90005d4a:	ee19 0a90 	vmov	r0, s19
90005d4e:	f00c ff7f 	bl	90012c50 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
90005d52:	ee19 1a90 	vmov	r1, s19
90005d56:	4638      	mov	r0, r7
90005d58:	f04f 0b00 	mov.w	fp, #0
90005d5c:	f00b f9f4 	bl	90011148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005d60:	4b39      	ldr	r3, [pc, #228]	; (90005e48 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xbb0>)
        borderUp = borderColorReleased;
90005d62:	493a      	ldr	r1, [pc, #232]	; (90005e4c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xbb4>)
        down = colorPressed;
90005d64:	4a3a      	ldr	r2, [pc, #232]	; (90005e50 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xbb8>)
        borderUp = borderColorReleased;
90005d66:	f8c4 1318 	str.w	r1, [r4, #792]	; 0x318
        borderDown = borderColorPressed;
90005d6a:	f101 1133 	add.w	r1, r1, #3342387	; 0x330033
        borderBox.setColor(T::getPressed() ? down : up);
90005d6e:	f894 02d4 	ldrb.w	r0, [r4, #724]	; 0x2d4
        borderDown = borderColorPressed;
90005d72:	f501 514c 	add.w	r1, r1, #13056	; 0x3300
90005d76:	e9c4 b3b8 	strd	fp, r3, [r4, #736]	; 0x2e0
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
    {
        borderSize = size;
90005d7a:	2305      	movs	r3, #5
90005d7c:	f8c4 131c 	str.w	r1, [r4, #796]	; 0x31c
        handlePressedUpdated();
90005d80:	f8d4 12a8 	ldr.w	r1, [r4, #680]	; 0x2a8
90005d84:	f8a4 330c 	strh.w	r3, [r4, #780]	; 0x30c
        down = colorPressed;
90005d88:	4b32      	ldr	r3, [pc, #200]	; (90005e54 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xbbc>)
90005d8a:	e9c4 32c4 	strd	r3, r2, [r4, #784]	; 0x310
        borderBox.setColor(T::getPressed() ? down : up);
90005d8e:	2800      	cmp	r0, #0
90005d90:	f000 8516 	beq.w	900067c0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1528>
90005d94:	4613      	mov	r3, r2
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90005d96:	f504 7247 	add.w	r2, r4, #796	; 0x31c
90005d9a:	f8c4 3304 	str.w	r3, [r4, #772]	; 0x304
90005d9e:	6813      	ldr	r3, [r2, #0]
        borderColor = colorBorder;
90005da0:	4e2d      	ldr	r6, [pc, #180]	; (90005e58 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xbc0>)
90005da2:	f8c4 3308 	str.w	r3, [r4, #776]	; 0x308
        alpha = newAlpha;
90005da6:	2300      	movs	r3, #0
90005da8:	f884 32d5 	strb.w	r3, [r4, #725]	; 0x2d5
        handleAlphaUpdated();
90005dac:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
90005db0:	42b2      	cmp	r2, r6
90005db2:	f040 853f 	bne.w	90006834 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x159c>
        alpha = newAlpha;
90005db6:	f884 3302 	strb.w	r3, [r4, #770]	; 0x302
    btn_pos1.setAction(flexButtonCallback);
90005dba:	f242 753c 	movw	r5, #10044	; 0x273c
90005dbe:	4b22      	ldr	r3, [pc, #136]	; (90005e48 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xbb0>)
90005dc0:	f8df e09c 	ldr.w	lr, [pc, #156]	; 90005e60 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xbc8>
90005dc4:	ee1a 1a10 	vmov	r1, s20
90005dc8:	4425      	add	r5, r4
90005dca:	4638      	mov	r0, r7
90005dcc:	f04f 0800 	mov.w	r8, #0
        action = &callback;
90005dd0:	f8c4 52d8 	str.w	r5, [r4, #728]	; 0x2d8
90005dd4:	e9c4 e3ab 	strd	lr, r3, [r4, #684]	; 0x2ac
90005dd8:	f00b f9b6 	bl	90011148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005ddc:	4b1f      	ldr	r3, [pc, #124]	; (90005e5c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xbc4>)
        borderUp = borderColorReleased;
90005dde:	491b      	ldr	r1, [pc, #108]	; (90005e4c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xbb4>)
        down = colorPressed;
90005de0:	4a1b      	ldr	r2, [pc, #108]	; (90005e50 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xbb8>)
        borderUp = borderColorReleased;
90005de2:	f8c4 1390 	str.w	r1, [r4, #912]	; 0x390
        borderDown = borderColorPressed;
90005de6:	f101 1133 	add.w	r1, r1, #3342387	; 0x330033
        borderBox.setColor(T::getPressed() ? down : up);
90005dea:	f894 034c 	ldrb.w	r0, [r4, #844]	; 0x34c
        borderDown = borderColorPressed;
90005dee:	f501 514c 	add.w	r1, r1, #13056	; 0x3300
90005df2:	e9c4 83d6 	strd	r8, r3, [r4, #856]	; 0x358
        borderSize = size;
90005df6:	2305      	movs	r3, #5
90005df8:	f8c4 1394 	str.w	r1, [r4, #916]	; 0x394
        handlePressedUpdated();
90005dfc:	f8d4 1320 	ldr.w	r1, [r4, #800]	; 0x320
90005e00:	f8a4 3384 	strh.w	r3, [r4, #900]	; 0x384
90005e04:	e02e      	b.n	90005e64 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xbcc>
90005e06:	bf00      	nop
90005e08:	9002bd34 	.word	0x9002bd34
90005e0c:	9002bca4 	.word	0x9002bca4
90005e10:	9002a6f0 	.word	0x9002a6f0
90005e14:	9002b178 	.word	0x9002b178
90005e18:	9002b404 	.word	0x9002b404
90005e1c:	90005049 	.word	0x90005049
90005e20:	9002b41c 	.word	0x9002b41c
90005e24:	90005031 	.word	0x90005031
90005e28:	011001e0 	.word	0x011001e0
90005e2c:	0007009c 	.word	0x0007009c
90005e30:	0102000f 	.word	0x0102000f
90005e34:	00070123 	.word	0x00070123
90005e38:	004e0038 	.word	0x004e0038
90005e3c:	000f0167 	.word	0x000f0167
90005e40:	00b90038 	.word	0x00b90038
90005e44:	000f0166 	.word	0x000f0166
90005e48:	00470064 	.word	0x00470064
90005e4c:	ff003366 	.word	0xff003366
90005e50:	ff0099cc 	.word	0xff0099cc
90005e54:	ff006699 	.word	0xff006699
90005e58:	90004fbd 	.word	0x90004fbd
90005e5c:	00610064 	.word	0x00610064
90005e60:	00070038 	.word	0x00070038
        down = colorPressed;
90005e64:	4bda      	ldr	r3, [pc, #872]	; (900061d0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf38>)
90005e66:	e9c4 32e2 	strd	r3, r2, [r4, #904]	; 0x388
        borderBox.setColor(T::getPressed() ? down : up);
90005e6a:	2800      	cmp	r0, #0
90005e6c:	f000 84a4 	beq.w	900067b8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1520>
        color = newColor;
90005e70:	4613      	mov	r3, r2
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90005e72:	f504 7265 	add.w	r2, r4, #916	; 0x394
90005e76:	f8c4 337c 	str.w	r3, [r4, #892]	; 0x37c
90005e7a:	6813      	ldr	r3, [r2, #0]
        borderColor = colorBorder;
90005e7c:	f8c4 3380 	str.w	r3, [r4, #896]	; 0x380
        alpha = newAlpha;
90005e80:	2300      	movs	r3, #0
90005e82:	f884 334d 	strb.w	r3, [r4, #845]	; 0x34d
        handleAlphaUpdated();
90005e86:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
90005e8a:	42b2      	cmp	r2, r6
90005e8c:	f040 84ce 	bne.w	9000682c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1594>
        alpha = newAlpha;
90005e90:	f884 337a 	strb.w	r3, [r4, #890]	; 0x37a
90005e94:	4bcf      	ldr	r3, [pc, #828]	; (900061d4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf3c>)
90005e96:	48d0      	ldr	r0, [pc, #832]	; (900061d8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf40>)
90005e98:	9902      	ldr	r1, [sp, #8]
        action = &callback;
90005e9a:	f8c4 5350 	str.w	r5, [r4, #848]	; 0x350
90005e9e:	e9c4 03c9 	strd	r0, r3, [r4, #804]	; 0x324
90005ea2:	4638      	mov	r0, r7
90005ea4:	f00b f950 	bl	90011148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005ea8:	4bcc      	ldr	r3, [pc, #816]	; (900061dc <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf44>)
        borderUp = borderColorReleased;
90005eaa:	49cd      	ldr	r1, [pc, #820]	; (900061e0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf48>)
90005eac:	f04f 0c00 	mov.w	ip, #0
        down = colorPressed;
90005eb0:	4acc      	ldr	r2, [pc, #816]	; (900061e4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf4c>)
        borderUp = borderColorReleased;
90005eb2:	f8c4 1408 	str.w	r1, [r4, #1032]	; 0x408
        borderDown = borderColorPressed;
90005eb6:	f101 1133 	add.w	r1, r1, #3342387	; 0x330033
        borderBox.setColor(T::getPressed() ? down : up);
90005eba:	f894 03c4 	ldrb.w	r0, [r4, #964]	; 0x3c4
        borderDown = borderColorPressed;
90005ebe:	f501 514c 	add.w	r1, r1, #13056	; 0x3300
        down = colorPressed;
90005ec2:	f8c4 2404 	str.w	r2, [r4, #1028]	; 0x404
90005ec6:	e9c4 c3f4 	strd	ip, r3, [r4, #976]	; 0x3d0
        borderSize = size;
90005eca:	2305      	movs	r3, #5
        borderDown = borderColorPressed;
90005ecc:	f8c4 140c 	str.w	r1, [r4, #1036]	; 0x40c
        handlePressedUpdated();
90005ed0:	f8d4 1398 	ldr.w	r1, [r4, #920]	; 0x398
90005ed4:	f8a4 33fc 	strh.w	r3, [r4, #1020]	; 0x3fc
        up = colorReleased;
90005ed8:	4bbd      	ldr	r3, [pc, #756]	; (900061d0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf38>)
90005eda:	f8c4 3400 	str.w	r3, [r4, #1024]	; 0x400
        borderBox.setColor(T::getPressed() ? down : up);
90005ede:	2800      	cmp	r0, #0
90005ee0:	f000 8466 	beq.w	900067b0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1518>
        color = newColor;
90005ee4:	4613      	mov	r3, r2
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90005ee6:	f204 420c 	addw	r2, r4, #1036	; 0x40c
90005eea:	f8c4 33f4 	str.w	r3, [r4, #1012]	; 0x3f4
90005eee:	6813      	ldr	r3, [r2, #0]
        borderColor = colorBorder;
90005ef0:	f8c4 33f8 	str.w	r3, [r4, #1016]	; 0x3f8
        alpha = newAlpha;
90005ef4:	2300      	movs	r3, #0
90005ef6:	f884 33c5 	strb.w	r3, [r4, #965]	; 0x3c5
        handleAlphaUpdated();
90005efa:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
90005efe:	42b2      	cmp	r2, r6
90005f00:	f040 8490 	bne.w	90006824 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x158c>
        alpha = newAlpha;
90005f04:	f884 33f2 	strb.w	r3, [r4, #1010]	; 0x3f2
90005f08:	4ab7      	ldr	r2, [pc, #732]	; (900061e8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf50>)
90005f0a:	4638      	mov	r0, r7
90005f0c:	4bb3      	ldr	r3, [pc, #716]	; (900061dc <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf44>)
90005f0e:	9903      	ldr	r1, [sp, #12]
        action = &callback;
90005f10:	f8c4 53c8 	str.w	r5, [r4, #968]	; 0x3c8
90005f14:	e9c4 23e7 	strd	r2, r3, [r4, #924]	; 0x39c
90005f18:	f00b f916 	bl	90011148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005f1c:	2300      	movs	r3, #0
        borderUp = borderColorReleased;
90005f1e:	49b0      	ldr	r1, [pc, #704]	; (900061e0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf48>)
90005f20:	f8c4 3448 	str.w	r3, [r4, #1096]	; 0x448
90005f24:	4bb1      	ldr	r3, [pc, #708]	; (900061ec <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf54>)
90005f26:	f8c4 1480 	str.w	r1, [r4, #1152]	; 0x480
        borderDown = borderColorPressed;
90005f2a:	f101 1133 	add.w	r1, r1, #3342387	; 0x330033
90005f2e:	f8c4 344c 	str.w	r3, [r4, #1100]	; 0x44c
        borderSize = size;
90005f32:	2305      	movs	r3, #5
90005f34:	f501 514c 	add.w	r1, r1, #13056	; 0x3300
        down = colorPressed;
90005f38:	4aaa      	ldr	r2, [pc, #680]	; (900061e4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf4c>)
90005f3a:	f8a4 3474 	strh.w	r3, [r4, #1140]	; 0x474
        borderBox.setColor(T::getPressed() ? down : up);
90005f3e:	f894 043c 	ldrb.w	r0, [r4, #1084]	; 0x43c
        up = colorReleased;
90005f42:	4ba3      	ldr	r3, [pc, #652]	; (900061d0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf38>)
        borderDown = borderColorPressed;
90005f44:	f8c4 1484 	str.w	r1, [r4, #1156]	; 0x484
        up = colorReleased;
90005f48:	f8c4 3478 	str.w	r3, [r4, #1144]	; 0x478
        handlePressedUpdated();
90005f4c:	f8d4 1410 	ldr.w	r1, [r4, #1040]	; 0x410
        down = colorPressed;
90005f50:	f8c4 247c 	str.w	r2, [r4, #1148]	; 0x47c
        borderBox.setColor(T::getPressed() ? down : up);
90005f54:	2800      	cmp	r0, #0
90005f56:	f000 8427 	beq.w	900067a8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1510>
        color = newColor;
90005f5a:	4613      	mov	r3, r2
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90005f5c:	f204 4284 	addw	r2, r4, #1156	; 0x484
90005f60:	f8c4 346c 	str.w	r3, [r4, #1132]	; 0x46c
90005f64:	6813      	ldr	r3, [r2, #0]
        borderColor = colorBorder;
90005f66:	f8c4 3470 	str.w	r3, [r4, #1136]	; 0x470
        alpha = newAlpha;
90005f6a:	2300      	movs	r3, #0
90005f6c:	f884 343d 	strb.w	r3, [r4, #1085]	; 0x43d
        handleAlphaUpdated();
90005f70:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
90005f74:	42b2      	cmp	r2, r6
90005f76:	f040 8451 	bne.w	9000681c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1584>
        alpha = newAlpha;
90005f7a:	f884 346a 	strb.w	r3, [r4, #1130]	; 0x46a
90005f7e:	4b9c      	ldr	r3, [pc, #624]	; (900061f0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf58>)
90005f80:	4638      	mov	r0, r7
90005f82:	9904      	ldr	r1, [sp, #16]
90005f84:	f8c4 3414 	str.w	r3, [r4, #1044]	; 0x414
90005f88:	4b98      	ldr	r3, [pc, #608]	; (900061ec <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf54>)
        action = &callback;
90005f8a:	f8c4 5440 	str.w	r5, [r4, #1088]	; 0x440
90005f8e:	f8c4 3418 	str.w	r3, [r4, #1048]	; 0x418
90005f92:	f00b f8d9 	bl	90011148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005f96:	2300      	movs	r3, #0
        borderUp = borderColorReleased;
90005f98:	4991      	ldr	r1, [pc, #580]	; (900061e0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf48>)
90005f9a:	f8c4 34c0 	str.w	r3, [r4, #1216]	; 0x4c0
90005f9e:	4b95      	ldr	r3, [pc, #596]	; (900061f4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf5c>)
90005fa0:	f8c4 14f8 	str.w	r1, [r4, #1272]	; 0x4f8
        borderDown = borderColorPressed;
90005fa4:	f101 1133 	add.w	r1, r1, #3342387	; 0x330033
90005fa8:	f8c4 34c4 	str.w	r3, [r4, #1220]	; 0x4c4
        borderSize = size;
90005fac:	2305      	movs	r3, #5
90005fae:	f501 514c 	add.w	r1, r1, #13056	; 0x3300
        down = colorPressed;
90005fb2:	4a8c      	ldr	r2, [pc, #560]	; (900061e4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf4c>)
90005fb4:	f8a4 34ec 	strh.w	r3, [r4, #1260]	; 0x4ec
        borderBox.setColor(T::getPressed() ? down : up);
90005fb8:	f894 04b4 	ldrb.w	r0, [r4, #1204]	; 0x4b4
        up = colorReleased;
90005fbc:	4b84      	ldr	r3, [pc, #528]	; (900061d0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf38>)
        borderDown = borderColorPressed;
90005fbe:	f8c4 14fc 	str.w	r1, [r4, #1276]	; 0x4fc
        up = colorReleased;
90005fc2:	f8c4 34f0 	str.w	r3, [r4, #1264]	; 0x4f0
        handlePressedUpdated();
90005fc6:	f8d4 1488 	ldr.w	r1, [r4, #1160]	; 0x488
        down = colorPressed;
90005fca:	f8c4 24f4 	str.w	r2, [r4, #1268]	; 0x4f4
        borderBox.setColor(T::getPressed() ? down : up);
90005fce:	2800      	cmp	r0, #0
90005fd0:	f000 83e7 	beq.w	900067a2 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x150a>
        color = newColor;
90005fd4:	4613      	mov	r3, r2
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90005fd6:	f204 42fc 	addw	r2, r4, #1276	; 0x4fc
90005fda:	f8c4 34e4 	str.w	r3, [r4, #1252]	; 0x4e4
90005fde:	6813      	ldr	r3, [r2, #0]
        borderColor = colorBorder;
90005fe0:	f8c4 34e8 	str.w	r3, [r4, #1256]	; 0x4e8
        alpha = newAlpha;
90005fe4:	2300      	movs	r3, #0
90005fe6:	f884 34b5 	strb.w	r3, [r4, #1205]	; 0x4b5
        handleAlphaUpdated();
90005fea:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
90005fee:	42b2      	cmp	r2, r6
90005ff0:	f040 8410 	bne.w	90006814 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x157c>
        alpha = newAlpha;
90005ff4:	f884 34e2 	strb.w	r3, [r4, #1250]	; 0x4e2
90005ff8:	4b7f      	ldr	r3, [pc, #508]	; (900061f8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf60>)
90005ffa:	4638      	mov	r0, r7
90005ffc:	9905      	ldr	r1, [sp, #20]
90005ffe:	f8c4 348c 	str.w	r3, [r4, #1164]	; 0x48c
90006002:	4b7c      	ldr	r3, [pc, #496]	; (900061f4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf5c>)
        action = &callback;
90006004:	f8c4 54b8 	str.w	r5, [r4, #1208]	; 0x4b8
90006008:	f8c4 3490 	str.w	r3, [r4, #1168]	; 0x490
9000600c:	f00b f89c 	bl	90011148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90006010:	2300      	movs	r3, #0
        borderUp = borderColorReleased;
90006012:	4973      	ldr	r1, [pc, #460]	; (900061e0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf48>)
90006014:	f8c4 3538 	str.w	r3, [r4, #1336]	; 0x538
90006018:	4b78      	ldr	r3, [pc, #480]	; (900061fc <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf64>)
9000601a:	f8c4 1570 	str.w	r1, [r4, #1392]	; 0x570
        borderDown = borderColorPressed;
9000601e:	f101 1133 	add.w	r1, r1, #3342387	; 0x330033
90006022:	f8c4 353c 	str.w	r3, [r4, #1340]	; 0x53c
        borderSize = size;
90006026:	2305      	movs	r3, #5
90006028:	f501 514c 	add.w	r1, r1, #13056	; 0x3300
        down = colorPressed;
9000602c:	4a6d      	ldr	r2, [pc, #436]	; (900061e4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf4c>)
9000602e:	f8a4 3564 	strh.w	r3, [r4, #1380]	; 0x564
        borderBox.setColor(T::getPressed() ? down : up);
90006032:	f894 052c 	ldrb.w	r0, [r4, #1324]	; 0x52c
        up = colorReleased;
90006036:	4b66      	ldr	r3, [pc, #408]	; (900061d0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf38>)
        borderDown = borderColorPressed;
90006038:	f8c4 1574 	str.w	r1, [r4, #1396]	; 0x574
        up = colorReleased;
9000603c:	f8c4 3568 	str.w	r3, [r4, #1384]	; 0x568
        handlePressedUpdated();
90006040:	f8d4 1500 	ldr.w	r1, [r4, #1280]	; 0x500
        down = colorPressed;
90006044:	f8c4 256c 	str.w	r2, [r4, #1388]	; 0x56c
        borderBox.setColor(T::getPressed() ? down : up);
90006048:	2800      	cmp	r0, #0
9000604a:	f000 83a7 	beq.w	9000679c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1504>
        color = newColor;
9000604e:	4613      	mov	r3, r2
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90006050:	f204 5274 	addw	r2, r4, #1396	; 0x574
90006054:	f8c4 355c 	str.w	r3, [r4, #1372]	; 0x55c
90006058:	6813      	ldr	r3, [r2, #0]
        borderColor = colorBorder;
9000605a:	f8c4 3560 	str.w	r3, [r4, #1376]	; 0x560
        alpha = newAlpha;
9000605e:	2300      	movs	r3, #0
90006060:	f884 352d 	strb.w	r3, [r4, #1325]	; 0x52d
        handleAlphaUpdated();
90006064:	f8d1 2090 	ldr.w	r2, [r1, #144]	; 0x90
90006068:	42b2      	cmp	r2, r6
9000606a:	f040 83d0 	bne.w	9000680e <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1576>
        alpha = newAlpha;
9000606e:	f884 355a 	strb.w	r3, [r4, #1370]	; 0x55a
90006072:	4b63      	ldr	r3, [pc, #396]	; (90006200 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf68>)
90006074:	4638      	mov	r0, r7
90006076:	4e61      	ldr	r6, [pc, #388]	; (900061fc <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf64>)
90006078:	9906      	ldr	r1, [sp, #24]
9000607a:	f8c4 3504 	str.w	r3, [r4, #1284]	; 0x504
        action = &callback;
9000607e:	f8c4 5530 	str.w	r5, [r4, #1328]	; 0x530
90006082:	f8c4 6508 	str.w	r6, [r4, #1288]	; 0x508
90006086:	f00b f85f 	bl	90011148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        borderUp = borderColorReleased;
9000608a:	4955      	ldr	r1, [pc, #340]	; (900061e0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf48>)
9000608c:	2300      	movs	r3, #0
        down = colorPressed;
9000608e:	4a55      	ldr	r2, [pc, #340]	; (900061e4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf4c>)
        borderUp = borderColorReleased;
90006090:	f8c4 15e8 	str.w	r1, [r4, #1512]	; 0x5e8
        borderDown = borderColorPressed;
90006094:	f101 1133 	add.w	r1, r1, #3342387	; 0x330033
90006098:	f8c4 35b0 	str.w	r3, [r4, #1456]	; 0x5b0
        borderSize = size;
9000609c:	2305      	movs	r3, #5
9000609e:	f501 514c 	add.w	r1, r1, #13056	; 0x3300
900060a2:	f8c4 65b4 	str.w	r6, [r4, #1460]	; 0x5b4
900060a6:	f8a4 35dc 	strh.w	r3, [r4, #1500]	; 0x5dc
900060aa:	f8c4 15ec 	str.w	r1, [r4, #1516]	; 0x5ec
        up = colorReleased;
900060ae:	4b48      	ldr	r3, [pc, #288]	; (900061d0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf38>)
        borderBox.setColor(T::getPressed() ? down : up);
900060b0:	f894 15a4 	ldrb.w	r1, [r4, #1444]	; 0x5a4
        up = colorReleased;
900060b4:	f8c4 35e0 	str.w	r3, [r4, #1504]	; 0x5e0
        down = colorPressed;
900060b8:	f8c4 25e4 	str.w	r2, [r4, #1508]	; 0x5e4
        borderBox.setColor(T::getPressed() ? down : up);
900060bc:	2900      	cmp	r1, #0
900060be:	f000 836a 	beq.w	90006796 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x14fe>
        color = newColor;
900060c2:	4613      	mov	r3, r2
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
900060c4:	f204 52ec 	addw	r2, r4, #1516	; 0x5ec
900060c8:	f8c4 35d4 	str.w	r3, [r4, #1492]	; 0x5d4
        alpha = newAlpha;
900060cc:	2600      	movs	r6, #0
900060ce:	6813      	ldr	r3, [r2, #0]
900060d0:	4638      	mov	r0, r7
900060d2:	9907      	ldr	r1, [sp, #28]
        borderColor = colorBorder;
900060d4:	f8c4 35d8 	str.w	r3, [r4, #1496]	; 0x5d8
900060d8:	4b4a      	ldr	r3, [pc, #296]	; (90006204 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf6c>)
        action = &callback;
900060da:	f8c4 55a8 	str.w	r5, [r4, #1448]	; 0x5a8
900060de:	f8c4 357c 	str.w	r3, [r4, #1404]	; 0x57c
900060e2:	4b46      	ldr	r3, [pc, #280]	; (900061fc <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf64>)
        alpha = newAlpha;
900060e4:	f884 65a5 	strb.w	r6, [r4, #1445]	; 0x5a5
900060e8:	f8c4 3580 	str.w	r3, [r4, #1408]	; 0x580
        alpha = newAlpha;
900060ec:	f884 65d2 	strb.w	r6, [r4, #1490]	; 0x5d2
900060f0:	f00b f82a 	bl	90011148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        borderUp = borderColorReleased;
900060f4:	493a      	ldr	r1, [pc, #232]	; (900061e0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf48>)
900060f6:	4b44      	ldr	r3, [pc, #272]	; (90006208 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf70>)
900060f8:	f8c4 1660 	str.w	r1, [r4, #1632]	; 0x660
        borderDown = borderColorPressed;
900060fc:	f101 1133 	add.w	r1, r1, #3342387	; 0x330033
90006100:	f8c4 362c 	str.w	r3, [r4, #1580]	; 0x62c
        borderSize = size;
90006104:	2305      	movs	r3, #5
90006106:	f501 514c 	add.w	r1, r1, #13056	; 0x3300
        down = colorPressed;
9000610a:	4a36      	ldr	r2, [pc, #216]	; (900061e4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf4c>)
9000610c:	f8a4 3654 	strh.w	r3, [r4, #1620]	; 0x654
        borderDown = borderColorPressed;
90006110:	f8c4 1664 	str.w	r1, [r4, #1636]	; 0x664
        up = colorReleased;
90006114:	4b2e      	ldr	r3, [pc, #184]	; (900061d0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf38>)
        borderBox.setColor(T::getPressed() ? down : up);
90006116:	f894 161c 	ldrb.w	r1, [r4, #1564]	; 0x61c
9000611a:	f8c4 6628 	str.w	r6, [r4, #1576]	; 0x628
        up = colorReleased;
9000611e:	f8c4 3658 	str.w	r3, [r4, #1624]	; 0x658
        down = colorPressed;
90006122:	f8c4 265c 	str.w	r2, [r4, #1628]	; 0x65c
        borderBox.setColor(T::getPressed() ? down : up);
90006126:	2900      	cmp	r1, #0
90006128:	f000 8332 	beq.w	90006790 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x14f8>
        color = newColor;
9000612c:	4613      	mov	r3, r2
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
9000612e:	f204 6264 	addw	r2, r4, #1636	; 0x664
90006132:	f8c4 364c 	str.w	r3, [r4, #1612]	; 0x64c
90006136:	2600      	movs	r6, #0
90006138:	6813      	ldr	r3, [r2, #0]
9000613a:	4638      	mov	r0, r7
9000613c:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 90006208 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf70>
        borderColor = colorBorder;
90006140:	f8c4 3650 	str.w	r3, [r4, #1616]	; 0x650
90006144:	4b31      	ldr	r3, [pc, #196]	; (9000620c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf74>)
90006146:	9908      	ldr	r1, [sp, #32]
90006148:	f8c4 35f4 	str.w	r3, [r4, #1524]	; 0x5f4
        action = &callback;
9000614c:	f8c4 5620 	str.w	r5, [r4, #1568]	; 0x620
        alpha = newAlpha;
90006150:	f884 661d 	strb.w	r6, [r4, #1565]	; 0x61d
        alpha = newAlpha;
90006154:	f884 664a 	strb.w	r6, [r4, #1610]	; 0x64a
90006158:	f8c4 85f8 	str.w	r8, [r4, #1528]	; 0x5f8
9000615c:	f00a fff4 	bl	90011148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        borderUp = borderColorReleased;
90006160:	491f      	ldr	r1, [pc, #124]	; (900061e0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf48>)
        borderSize = size;
90006162:	2305      	movs	r3, #5
        down = colorPressed;
90006164:	4a1f      	ldr	r2, [pc, #124]	; (900061e4 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf4c>)
        borderUp = borderColorReleased;
90006166:	f8c4 16d8 	str.w	r1, [r4, #1752]	; 0x6d8
        borderDown = borderColorPressed;
9000616a:	f101 1133 	add.w	r1, r1, #3342387	; 0x330033
9000616e:	f8a4 36cc 	strh.w	r3, [r4, #1740]	; 0x6cc
90006172:	f501 514c 	add.w	r1, r1, #13056	; 0x3300
        up = colorReleased;
90006176:	4b16      	ldr	r3, [pc, #88]	; (900061d0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf38>)
90006178:	f8c4 66a0 	str.w	r6, [r4, #1696]	; 0x6a0
        borderDown = borderColorPressed;
9000617c:	f8c4 16dc 	str.w	r1, [r4, #1756]	; 0x6dc
        borderBox.setColor(T::getPressed() ? down : up);
90006180:	f894 1694 	ldrb.w	r1, [r4, #1684]	; 0x694
90006184:	f8c4 86a4 	str.w	r8, [r4, #1700]	; 0x6a4
        up = colorReleased;
90006188:	f8c4 36d0 	str.w	r3, [r4, #1744]	; 0x6d0
        down = colorPressed;
9000618c:	f8c4 26d4 	str.w	r2, [r4, #1748]	; 0x6d4
        borderBox.setColor(T::getPressed() ? down : up);
90006190:	2900      	cmp	r1, #0
90006192:	f000 82fa 	beq.w	9000678a <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x14f2>
        color = newColor;
90006196:	4613      	mov	r3, r2
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90006198:	f204 62dc 	addw	r2, r4, #1756	; 0x6dc
9000619c:	f8c4 36c4 	str.w	r3, [r4, #1732]	; 0x6c4
900061a0:	f04f 1650 	mov.w	r6, #5242960	; 0x500050
900061a4:	6813      	ldr	r3, [r2, #0]
900061a6:	f04f 0805 	mov.w	r8, #5
        action = &callback;
900061aa:	f8c4 5698 	str.w	r5, [r4, #1688]	; 0x698
        alpha = newAlpha;
900061ae:	2500      	movs	r5, #0
        borderColor = colorBorder;
900061b0:	f8c4 36c8 	str.w	r3, [r4, #1736]	; 0x6c8
900061b4:	4638      	mov	r0, r7
900061b6:	4b16      	ldr	r3, [pc, #88]	; (90006210 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf78>)
900061b8:	f8df b058 	ldr.w	fp, [pc, #88]	; 90006214 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf7c>
900061bc:	f8c4 366c 	str.w	r3, [r4, #1644]	; 0x66c
900061c0:	4b11      	ldr	r3, [pc, #68]	; (90006208 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf70>)
900061c2:	9909      	ldr	r1, [sp, #36]	; 0x24
900061c4:	f8c4 3670 	str.w	r3, [r4, #1648]	; 0x670
900061c8:	f884 5695 	strb.w	r5, [r4, #1685]	; 0x695
900061cc:	e024      	b.n	90006218 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf80>
900061ce:	bf00      	nop
900061d0:	ff006699 	.word	0xff006699
900061d4:	00610064 	.word	0x00610064
900061d8:	00580038 	.word	0x00580038
900061dc:	00610070 	.word	0x00610070
900061e0:	ff003366 	.word	0xff003366
900061e4:	ff0099cc 	.word	0xff0099cc
900061e8:	0058012e 	.word	0x0058012e
900061ec:	0061007c 	.word	0x0061007c
900061f0:	005800a7 	.word	0x005800a7
900061f4:	00470064 	.word	0x00470064
900061f8:	00c20038 	.word	0x00c20038
900061fc:	0047007c 	.word	0x0047007c
90006200:	000700a7 	.word	0x000700a7
90006204:	00c200a7 	.word	0x00c200a7
90006208:	00470071 	.word	0x00470071
9000620c:	0007012e 	.word	0x0007012e
90006210:	00c2012e 	.word	0x00c2012e
90006214:	fffe0042 	.word	0xfffe0042
        alpha = newAlpha;
90006218:	f884 56c2 	strb.w	r5, [r4, #1730]	; 0x6c2
9000621c:	f00a ff94 	bl	90011148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos1_circle.setBitmap(touchgfx::Bitmap(BITMAP_CIRCLE_ID));
90006220:	4650      	mov	r0, sl
90006222:	a91e      	add	r1, sp, #120	; 0x78
90006224:	f8ad 8078 	strh.w	r8, [sp, #120]	; 0x78
90006228:	f00d fe4d 	bl	90013ec6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos1_circle.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
9000622c:	4650      	mov	r0, sl
9000622e:	4629      	mov	r1, r5
90006230:	f8c4 b6e4 	str.w	fp, [r4, #1764]	; 0x6e4
90006234:	f8c4 66e8 	str.w	r6, [r4, #1768]	; 0x6e8
90006238:	f00c fdc5 	bl	90012dc6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
9000623c:	4651      	mov	r1, sl
9000623e:	4638      	mov	r0, r7
90006240:	f04f 0a06 	mov.w	sl, #6
        visible = vis;
90006244:	f884 5705 	strb.w	r5, [r4, #1797]	; 0x705
90006248:	f00a ff7e 	bl	90011148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos1_cross.setBitmap(touchgfx::Bitmap(BITMAP_CROSS_ID));
9000624c:	a91e      	add	r1, sp, #120	; 0x78
9000624e:	ee1b 0a10 	vmov	r0, s22
90006252:	f8ad a078 	strh.w	sl, [sp, #120]	; 0x78
90006256:	f00d fe36 	bl	90013ec6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos1_cross.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
9000625a:	4629      	mov	r1, r5
9000625c:	ee1b 0a10 	vmov	r0, s22
        rect.x = x;
90006260:	f8c4 b710 	str.w	fp, [r4, #1808]	; 0x710
90006264:	f8c4 6714 	str.w	r6, [r4, #1812]	; 0x714
90006268:	f10b 0b7a 	add.w	fp, fp, #122	; 0x7a
9000626c:	f00c fdab 	bl	90012dc6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90006270:	ee1b 1a10 	vmov	r1, s22
90006274:	4638      	mov	r0, r7
        visible = vis;
90006276:	f884 5731 	strb.w	r5, [r4, #1841]	; 0x731
9000627a:	f00a ff65 	bl	90011148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos2_cross.setBitmap(touchgfx::Bitmap(BITMAP_CROSS_ID));
9000627e:	ed9d 8a0a 	vldr	s16, [sp, #40]	; 0x28
90006282:	a91e      	add	r1, sp, #120	; 0x78
90006284:	f8ad a078 	strh.w	sl, [sp, #120]	; 0x78
90006288:	ee18 0a10 	vmov	r0, s16
9000628c:	f00d fe1b 	bl	90013ec6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos2_cross.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90006290:	4629      	mov	r1, r5
90006292:	ee18 0a10 	vmov	r0, s16
        rect.x = x;
90006296:	f8c4 b73c 	str.w	fp, [r4, #1852]	; 0x73c
9000629a:	f8c4 6740 	str.w	r6, [r4, #1856]	; 0x740
9000629e:	f00c fd92 	bl	90012dc6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
900062a2:	ee18 1a10 	vmov	r1, s16
900062a6:	4638      	mov	r0, r7
        visible = vis;
900062a8:	f884 575d 	strb.w	r5, [r4, #1885]	; 0x75d
900062ac:	f00a ff4c 	bl	90011148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos2_circle.setBitmap(touchgfx::Bitmap(BITMAP_CIRCLE_ID));
900062b0:	4648      	mov	r0, r9
900062b2:	a91e      	add	r1, sp, #120	; 0x78
900062b4:	f8ad 8078 	strh.w	r8, [sp, #120]	; 0x78
900062b8:	f00d fe05 	bl	90013ec6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos2_circle.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
900062bc:	4648      	mov	r0, r9
900062be:	4629      	mov	r1, r5
        rect.x = x;
900062c0:	f8c4 b768 	str.w	fp, [r4, #1896]	; 0x768
900062c4:	f8c4 676c 	str.w	r6, [r4, #1900]	; 0x76c
900062c8:	f00c fd7d 	bl	90012dc6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
900062cc:	4649      	mov	r1, r9
900062ce:	4638      	mov	r0, r7
900062d0:	f8df 95c0 	ldr.w	r9, [pc, #1472]	; 90006894 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x15fc>
        visible = vis;
900062d4:	f884 5789 	strb.w	r5, [r4, #1929]	; 0x789
900062d8:	f00a ff36 	bl	90011148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos3_cross.setBitmap(touchgfx::Bitmap(BITMAP_CROSS_ID));
900062dc:	a91e      	add	r1, sp, #120	; 0x78
900062de:	ee1b 0a90 	vmov	r0, s23
900062e2:	f8ad a078 	strh.w	sl, [sp, #120]	; 0x78
900062e6:	f00d fdee 	bl	90013ec6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos3_cross.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
900062ea:	4629      	mov	r1, r5
900062ec:	ee1b 0a90 	vmov	r0, s23
        rect.x = x;
900062f0:	f8c4 9794 	str.w	r9, [r4, #1940]	; 0x794
900062f4:	f8c4 6798 	str.w	r6, [r4, #1944]	; 0x798
900062f8:	f00c fd65 	bl	90012dc6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
900062fc:	ee1b 1a90 	vmov	r1, s23
90006300:	4638      	mov	r0, r7
        visible = vis;
90006302:	f884 57b5 	strb.w	r5, [r4, #1973]	; 0x7b5
90006306:	f00a ff1f 	bl	90011148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos3_circle.setBitmap(touchgfx::Bitmap(BITMAP_CIRCLE_ID));
9000630a:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
9000630e:	a91e      	add	r1, sp, #120	; 0x78
90006310:	f8ad 8078 	strh.w	r8, [sp, #120]	; 0x78
90006314:	4658      	mov	r0, fp
90006316:	f00d fdd6 	bl	90013ec6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos3_circle.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
9000631a:	4658      	mov	r0, fp
9000631c:	4629      	mov	r1, r5
        rect.x = x;
9000631e:	f8c4 97c0 	str.w	r9, [r4, #1984]	; 0x7c0
90006322:	f8c4 67c4 	str.w	r6, [r4, #1988]	; 0x7c4
90006326:	f00c fd4e 	bl	90012dc6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
9000632a:	f8df 956c 	ldr.w	r9, [pc, #1388]	; 90006898 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1600>
9000632e:	4659      	mov	r1, fp
90006330:	4638      	mov	r0, r7
        visible = vis;
90006332:	f884 57e1 	strb.w	r5, [r4, #2017]	; 0x7e1
90006336:	f00a ff07 	bl	90011148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos4_cross.setBitmap(touchgfx::Bitmap(BITMAP_CROSS_ID));
9000633a:	a91e      	add	r1, sp, #120	; 0x78
9000633c:	ee1c 0a10 	vmov	r0, s24
90006340:	f8ad a078 	strh.w	sl, [sp, #120]	; 0x78
90006344:	f00d fdbf 	bl	90013ec6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos4_cross.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90006348:	4629      	mov	r1, r5
9000634a:	ee1c 0a10 	vmov	r0, s24
        rect.x = x;
9000634e:	f8c4 97ec 	str.w	r9, [r4, #2028]	; 0x7ec
90006352:	f8c4 67f0 	str.w	r6, [r4, #2032]	; 0x7f0
90006356:	f00c fd36 	bl	90012dc6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
9000635a:	ee1c 1a10 	vmov	r1, s24
9000635e:	4638      	mov	r0, r7
        visible = vis;
90006360:	f884 580d 	strb.w	r5, [r4, #2061]	; 0x80d
90006364:	f00a fef0 	bl	90011148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos4_circle.setBitmap(touchgfx::Bitmap(BITMAP_CIRCLE_ID));
90006368:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
9000636c:	a91e      	add	r1, sp, #120	; 0x78
9000636e:	f8ad 8078 	strh.w	r8, [sp, #120]	; 0x78
90006372:	4658      	mov	r0, fp
90006374:	f00d fda7 	bl	90013ec6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos4_circle.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90006378:	4658      	mov	r0, fp
9000637a:	4629      	mov	r1, r5
        rect.x = x;
9000637c:	f8c4 9818 	str.w	r9, [r4, #2072]	; 0x818
90006380:	f8c4 681c 	str.w	r6, [r4, #2076]	; 0x81c
90006384:	f109 097a 	add.w	r9, r9, #122	; 0x7a
90006388:	f00c fd1d 	bl	90012dc6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
9000638c:	4659      	mov	r1, fp
9000638e:	4638      	mov	r0, r7
        visible = vis;
90006390:	f884 5839 	strb.w	r5, [r4, #2105]	; 0x839
90006394:	f00a fed8 	bl	90011148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos5_cross.setBitmap(touchgfx::Bitmap(BITMAP_CROSS_ID));
90006398:	a91e      	add	r1, sp, #120	; 0x78
9000639a:	ee1c 0a90 	vmov	r0, s25
9000639e:	f8ad a078 	strh.w	sl, [sp, #120]	; 0x78
900063a2:	f00d fd90 	bl	90013ec6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos5_cross.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
900063a6:	4629      	mov	r1, r5
900063a8:	ee1c 0a90 	vmov	r0, s25
        rect.x = x;
900063ac:	f8c4 9844 	str.w	r9, [r4, #2116]	; 0x844
900063b0:	f8c4 6848 	str.w	r6, [r4, #2120]	; 0x848
900063b4:	f00c fd07 	bl	90012dc6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
900063b8:	ee1c 1a90 	vmov	r1, s25
900063bc:	4638      	mov	r0, r7
        visible = vis;
900063be:	f884 5865 	strb.w	r5, [r4, #2149]	; 0x865
900063c2:	f00a fec1 	bl	90011148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos5_circle.setBitmap(touchgfx::Bitmap(BITMAP_CIRCLE_ID));
900063c6:	f8dd b034 	ldr.w	fp, [sp, #52]	; 0x34
900063ca:	a91e      	add	r1, sp, #120	; 0x78
900063cc:	f8ad 8078 	strh.w	r8, [sp, #120]	; 0x78
900063d0:	4658      	mov	r0, fp
900063d2:	f00d fd78 	bl	90013ec6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos5_circle.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
900063d6:	4658      	mov	r0, fp
900063d8:	4629      	mov	r1, r5
        rect.x = x;
900063da:	f8c4 9870 	str.w	r9, [r4, #2160]	; 0x870
900063de:	f8c4 6874 	str.w	r6, [r4, #2164]	; 0x874
900063e2:	f109 0976 	add.w	r9, r9, #118	; 0x76
900063e6:	f00c fcee 	bl	90012dc6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
900063ea:	4659      	mov	r1, fp
900063ec:	4638      	mov	r0, r7
        visible = vis;
900063ee:	f884 5891 	strb.w	r5, [r4, #2193]	; 0x891
900063f2:	f00a fea9 	bl	90011148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos6_cross.setBitmap(touchgfx::Bitmap(BITMAP_CROSS_ID));
900063f6:	a91e      	add	r1, sp, #120	; 0x78
900063f8:	ee1d 0a10 	vmov	r0, s26
900063fc:	f8ad a078 	strh.w	sl, [sp, #120]	; 0x78
90006400:	f00d fd61 	bl	90013ec6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos6_cross.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90006404:	4629      	mov	r1, r5
90006406:	ee1d 0a10 	vmov	r0, s26
        rect.x = x;
9000640a:	f8c4 989c 	str.w	r9, [r4, #2204]	; 0x89c
9000640e:	f8c4 68a0 	str.w	r6, [r4, #2208]	; 0x8a0
90006412:	f00c fcd8 	bl	90012dc6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90006416:	ee1d 1a10 	vmov	r1, s26
9000641a:	4638      	mov	r0, r7
        visible = vis;
9000641c:	f884 58bd 	strb.w	r5, [r4, #2237]	; 0x8bd
90006420:	f00a fe92 	bl	90011148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos6_circle.setBitmap(touchgfx::Bitmap(BITMAP_CIRCLE_ID));
90006424:	f8dd b038 	ldr.w	fp, [sp, #56]	; 0x38
90006428:	a91e      	add	r1, sp, #120	; 0x78
9000642a:	f8ad 8078 	strh.w	r8, [sp, #120]	; 0x78
9000642e:	4658      	mov	r0, fp
90006430:	f00d fd49 	bl	90013ec6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos6_circle.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90006434:	4658      	mov	r0, fp
90006436:	4629      	mov	r1, r5
        rect.x = x;
90006438:	f8c4 98c8 	str.w	r9, [r4, #2248]	; 0x8c8
9000643c:	f8c4 68cc 	str.w	r6, [r4, #2252]	; 0x8cc
90006440:	f00c fcc1 	bl	90012dc6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90006444:	f8df 9454 	ldr.w	r9, [pc, #1108]	; 9000689c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1604>
90006448:	4659      	mov	r1, fp
9000644a:	4638      	mov	r0, r7
        visible = vis;
9000644c:	f884 58e9 	strb.w	r5, [r4, #2281]	; 0x8e9
90006450:	f00a fe7a 	bl	90011148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos7_circle.setBitmap(touchgfx::Bitmap(BITMAP_CIRCLE_ID));
90006454:	a91e      	add	r1, sp, #120	; 0x78
90006456:	ee1d 0a90 	vmov	r0, s27
9000645a:	f8ad 8078 	strh.w	r8, [sp, #120]	; 0x78
9000645e:	f00d fd32 	bl	90013ec6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos7_circle.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90006462:	4629      	mov	r1, r5
90006464:	ee1d 0a90 	vmov	r0, s27
        rect.x = x;
90006468:	f8c4 98f4 	str.w	r9, [r4, #2292]	; 0x8f4
9000646c:	f8c4 68f8 	str.w	r6, [r4, #2296]	; 0x8f8
90006470:	f00c fca9 	bl	90012dc6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90006474:	ee1d 1a90 	vmov	r1, s27
90006478:	4638      	mov	r0, r7
        visible = vis;
9000647a:	f884 5915 	strb.w	r5, [r4, #2325]	; 0x915
9000647e:	f00a fe63 	bl	90011148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos7_cross.setBitmap(touchgfx::Bitmap(BITMAP_CROSS_ID));
90006482:	f8dd b03c 	ldr.w	fp, [sp, #60]	; 0x3c
90006486:	a91e      	add	r1, sp, #120	; 0x78
90006488:	f8ad a078 	strh.w	sl, [sp, #120]	; 0x78
9000648c:	4658      	mov	r0, fp
9000648e:	f00d fd1a 	bl	90013ec6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos7_cross.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90006492:	4658      	mov	r0, fp
90006494:	4629      	mov	r1, r5
        rect.x = x;
90006496:	f8c4 9920 	str.w	r9, [r4, #2336]	; 0x920
9000649a:	f8c4 6924 	str.w	r6, [r4, #2340]	; 0x924
9000649e:	f109 097e 	add.w	r9, r9, #126	; 0x7e
900064a2:	f00c fc90 	bl	90012dc6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
900064a6:	4659      	mov	r1, fp
900064a8:	4638      	mov	r0, r7
        visible = vis;
900064aa:	f884 5941 	strb.w	r5, [r4, #2369]	; 0x941
900064ae:	f00a fe4b 	bl	90011148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos8_circle.setBitmap(touchgfx::Bitmap(BITMAP_CIRCLE_ID));
900064b2:	a91e      	add	r1, sp, #120	; 0x78
900064b4:	ee1e 0a10 	vmov	r0, s28
900064b8:	f8ad 8078 	strh.w	r8, [sp, #120]	; 0x78
900064bc:	f00d fd03 	bl	90013ec6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos8_circle.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
900064c0:	4629      	mov	r1, r5
900064c2:	ee1e 0a10 	vmov	r0, s28
        rect.x = x;
900064c6:	f8c4 994c 	str.w	r9, [r4, #2380]	; 0x94c
900064ca:	f8c4 6950 	str.w	r6, [r4, #2384]	; 0x950
900064ce:	f00c fc7a 	bl	90012dc6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
900064d2:	ee1e 1a10 	vmov	r1, s28
900064d6:	4638      	mov	r0, r7
        visible = vis;
900064d8:	f884 596d 	strb.w	r5, [r4, #2413]	; 0x96d
900064dc:	f00a fe34 	bl	90011148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos8_cross.setBitmap(touchgfx::Bitmap(BITMAP_CROSS_ID));
900064e0:	f8dd b040 	ldr.w	fp, [sp, #64]	; 0x40
900064e4:	a91e      	add	r1, sp, #120	; 0x78
900064e6:	f8ad a078 	strh.w	sl, [sp, #120]	; 0x78
900064ea:	4658      	mov	r0, fp
900064ec:	f00d fceb 	bl	90013ec6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos8_cross.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
900064f0:	4658      	mov	r0, fp
900064f2:	4629      	mov	r1, r5
        rect.x = x;
900064f4:	f8c4 9978 	str.w	r9, [r4, #2424]	; 0x978
900064f8:	f8c4 697c 	str.w	r6, [r4, #2428]	; 0x97c
900064fc:	f00c fc63 	bl	90012dc6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90006500:	4659      	mov	r1, fp
90006502:	4638      	mov	r0, r7
        visible = vis;
90006504:	f884 5999 	strb.w	r5, [r4, #2457]	; 0x999
90006508:	f00a fe1e 	bl	90011148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
9000650c:	f8ad 8078 	strh.w	r8, [sp, #120]	; 0x78
        rect.x = x;
90006510:	f8df 838c 	ldr.w	r8, [pc, #908]	; 900068a0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1608>
    pos9_circle.setBitmap(touchgfx::Bitmap(BITMAP_CIRCLE_ID));
90006514:	a91e      	add	r1, sp, #120	; 0x78
90006516:	ee1e 0a90 	vmov	r0, s29
    Unicode::snprintf(lbl_resultBuffer, LBL_RESULT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_LKZS).getText());
9000651a:	f604 2bf4 	addw	fp, r4, #2804	; 0xaf4
    pos9_circle.setBitmap(touchgfx::Bitmap(BITMAP_CIRCLE_ID));
9000651e:	f00d fcd2 	bl	90013ec6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos9_circle.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90006522:	4629      	mov	r1, r5
90006524:	ee1e 0a90 	vmov	r0, s29
90006528:	f8c4 89a4 	str.w	r8, [r4, #2468]	; 0x9a4
9000652c:	f8c4 69a8 	str.w	r6, [r4, #2472]	; 0x9a8
90006530:	f00c fc49 	bl	90012dc6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90006534:	ee1e 1a90 	vmov	r1, s29
90006538:	4638      	mov	r0, r7
        visible = vis;
9000653a:	f884 59c5 	strb.w	r5, [r4, #2501]	; 0x9c5
9000653e:	f00a fe03 	bl	90011148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pos9_cross.setBitmap(touchgfx::Bitmap(BITMAP_CROSS_ID));
90006542:	f8dd 9044 	ldr.w	r9, [sp, #68]	; 0x44
90006546:	a91e      	add	r1, sp, #120	; 0x78
90006548:	f8ad a078 	strh.w	sl, [sp, #120]	; 0x78
9000654c:	4648      	mov	r0, r9
9000654e:	f04f 0a01 	mov.w	sl, #1
90006552:	f00d fcb8 	bl	90013ec6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    pos9_cross.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90006556:	4648      	mov	r0, r9
90006558:	4629      	mov	r1, r5
        rect.x = x;
9000655a:	f8c4 89d0 	str.w	r8, [r4, #2512]	; 0x9d0
9000655e:	f8c4 69d4 	str.w	r6, [r4, #2516]	; 0x9d4
        boundingArea = calculateBoundingArea();
90006562:	ae16      	add	r6, sp, #88	; 0x58
90006564:	f00c fc2f 	bl	90012dc6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90006568:	4649      	mov	r1, r9
9000656a:	4638      	mov	r0, r7
        visible = vis;
9000656c:	f884 59f1 	strb.w	r5, [r4, #2545]	; 0x9f1
90006570:	f00a fdea 	bl	90011148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        rect.x = x;
90006574:	4bb8      	ldr	r3, [pc, #736]	; (90006858 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x15c0>)
90006576:	f604 11f8 	addw	r1, r4, #2552	; 0x9f8
9000657a:	4638      	mov	r0, r7
9000657c:	f8c4 39fc 	str.w	r3, [r4, #2556]	; 0x9fc
    lbl_result.setPosition(100, 142, 258, 24);
90006580:	f604 29a8 	addw	r9, r4, #2728	; 0xaa8
90006584:	4bb5      	ldr	r3, [pc, #724]	; (9000685c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x15c4>)
        boundingArea = calculateBoundingArea();
90006586:	f604 28e4 	addw	r8, r4, #2788	; 0xae4
        visible = vis;
9000658a:	f884 5a1d 	strb.w	r5, [r4, #2589]	; 0xa1d
        rect.x = x;
9000658e:	f8c4 3a00 	str.w	r3, [r4, #2560]	; 0xa00
        color = newColor;
90006592:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
90006596:	f8c4 3a20 	str.w	r3, [r4, #2592]	; 0xa20
9000659a:	f00a fdd5 	bl	90011148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
9000659e:	4bb0      	ldr	r3, [pc, #704]	; (90006860 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x15c8>)
        boundingArea = calculateBoundingArea();
900065a0:	ee1a 1a90 	vmov	r1, s21
900065a4:	4630      	mov	r0, r6
900065a6:	f8c4 3a28 	str.w	r3, [r4, #2600]	; 0xa28
        color = newColor;
900065aa:	4bae      	ldr	r3, [pc, #696]	; (90006864 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x15cc>)
        linespace = space;
900065ac:	f8a4 5a58 	strh.w	r5, [r4, #2648]	; 0xa58
        color = newColor;
900065b0:	f8c4 3a54 	str.w	r3, [r4, #2644]	; 0xa54
        boundingArea = calculateBoundingArea();
900065b4:	f00c fef6 	bl	900133a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
900065b8:	4aab      	ldr	r2, [pc, #684]	; (90006868 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x15d0>)
900065ba:	ee1a 3a90 	vmov	r3, s21
900065be:	921e      	str	r2, [sp, #120]	; 0x78
900065c0:	2202      	movs	r2, #2
900065c2:	333c      	adds	r3, #60	; 0x3c
900065c4:	f8ad 207c 	strh.w	r2, [sp, #124]	; 0x7c
900065c8:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
900065cc:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    lbl_game_over.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FP7G));
900065d0:	a91e      	add	r1, sp, #120	; 0x78
900065d2:	ee1a 0a90 	vmov	r0, s21
900065d6:	f00d f98d 	bl	900138f4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
900065da:	ee1a 1a90 	vmov	r1, s21
900065de:	4638      	mov	r0, r7
        visible = vis;
900065e0:	f884 5a49 	strb.w	r5, [r4, #2633]	; 0xa49
900065e4:	f00a fdb0 	bl	90011148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btn_back.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_BACKSPACE_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_BACKSPACE_50_50_E8F6FB_SVG_ID));
900065e8:	ab1e      	add	r3, sp, #120	; 0x78
900065ea:	aa1c      	add	r2, sp, #112	; 0x70
900065ec:	a91b      	add	r1, sp, #108	; 0x6c
900065ee:	9300      	str	r3, [sp, #0]
        rect.x = x;
900065f0:	f04f 130c 	mov.w	r3, #786444	; 0xc000c
900065f4:	ee1f 0a10 	vmov	r0, s30
900065f8:	f8ad 506c 	strh.w	r5, [sp, #108]	; 0x6c
900065fc:	f8c4 3a70 	str.w	r3, [r4, #2672]	; 0xa70
90006600:	230b      	movs	r3, #11
90006602:	f8ad a070 	strh.w	sl, [sp, #112]	; 0x70
90006606:	f8ad 3074 	strh.w	r3, [sp, #116]	; 0x74
9000660a:	f8ad 3078 	strh.w	r3, [sp, #120]	; 0x78
9000660e:	ab1d      	add	r3, sp, #116	; 0x74
90006610:	f00d fb9c 	bl	90013d4c <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    btn_back.setAction(buttonCallback);
90006614:	f242 734c 	movw	r3, #10060	; 0x274c
90006618:	ee1f 1a10 	vmov	r1, s30
9000661c:	4638      	mov	r0, r7
9000661e:	4423      	add	r3, r4
        visible = vis;
90006620:	f884 5a91 	strb.w	r5, [r4, #2705]	; 0xa91
90006624:	f8c4 3a94 	str.w	r3, [r4, #2708]	; 0xa94
90006628:	f06f 1306 	mvn.w	r3, #393222	; 0x60006
9000662c:	f8c4 3aa4 	str.w	r3, [r4, #2724]	; 0xaa4
90006630:	f00a fd8a 	bl	90011148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        rect.x = x;
90006634:	4b8d      	ldr	r3, [pc, #564]	; (9000686c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x15d4>)
        boundingArea = calculateBoundingArea();
90006636:	4649      	mov	r1, r9
90006638:	4630      	mov	r0, r6
9000663a:	f8c4 3aac 	str.w	r3, [r4, #2732]	; 0xaac
        rect.width = width;
9000663e:	f44f 7381 	mov.w	r3, #258	; 0x102
90006642:	f8a4 3ab0 	strh.w	r3, [r4, #2736]	; 0xab0
90006646:	f7fd ffab 	bl	900045a0 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>
        rect.height = height;
9000664a:	2318      	movs	r3, #24
9000664c:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
90006650:	e888 0007 	stmia.w	r8, {r0, r1, r2}
        boundingArea = calculateBoundingArea();
90006654:	4649      	mov	r1, r9
90006656:	4630      	mov	r0, r6
90006658:	f8a4 3ab2 	strh.w	r3, [r4, #2738]	; 0xab2
9000665c:	f7fd ffa0 	bl	900045a0 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90006660:	4b83      	ldr	r3, [pc, #524]	; (90006870 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x15d8>)
90006662:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
90006666:	f8d3 c000 	ldr.w	ip, [r3]
        color = newColor;
9000666a:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
9000666e:	e888 0007 	stmia.w	r8, {r0, r1, r2}
        color = newColor;
90006672:	f8c4 3ad8 	str.w	r3, [r4, #2776]	; 0xad8
        boundingArea = calculateBoundingArea();
90006676:	f8c4 3ae8 	str.w	r3, [r4, #2792]	; 0xae8
        linespace = space;
9000667a:	f8a4 5adc 	strh.w	r5, [r4, #2780]	; 0xadc
        boundingArea = calculateBoundingArea();
9000667e:	f8c4 5ae4 	str.w	r5, [r4, #2788]	; 0xae4
90006682:	f8c4 5aec 	str.w	r5, [r4, #2796]	; 0xaec
90006686:	f1bc 0f00 	cmp.w	ip, #0
9000668a:	f000 80d8 	beq.w	9000683e <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x15a6>
        return typedTextId < numberOfTypedTexts;
9000668e:	4b79      	ldr	r3, [pc, #484]	; (90006874 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x15dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90006690:	881b      	ldrh	r3, [r3, #0]
90006692:	2b00      	cmp	r3, #0
90006694:	f000 80d9 	beq.w	9000684a <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x15b2>
        return texts->getText(typedTextId);
90006698:	4b77      	ldr	r3, [pc, #476]	; (90006878 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x15e0>)
9000669a:	4629      	mov	r1, r5
9000669c:	6818      	ldr	r0, [r3, #0]
9000669e:	f7fd fdc5 	bl	9000422c <_ZNK8touchgfx5Texts7getTextEt>
    Unicode::snprintf(lbl_resultBuffer, LBL_RESULT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_LKZS).getText());
900066a2:	4a76      	ldr	r2, [pc, #472]	; (9000687c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x15e4>)
900066a4:	4603      	mov	r3, r0
900066a6:	2114      	movs	r1, #20
900066a8:	4658      	mov	r0, fp
900066aa:	f013 f9eb 	bl	90019a84 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
900066ae:	4b6e      	ldr	r3, [pc, #440]	; (90006868 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x15d0>)
    lbl_result.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DOP9));
900066b0:	a91e      	add	r1, sp, #120	; 0x78
900066b2:	4648      	mov	r0, r9
        wc1 = value;
900066b4:	f8c4 baf0 	str.w	fp, [r4, #2800]	; 0xaf0
900066b8:	931e      	str	r3, [sp, #120]	; 0x78
900066ba:	f8ad a07c 	strh.w	sl, [sp, #124]	; 0x7c
900066be:	f00d f919 	bl	900138f4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
900066c2:	4638      	mov	r0, r7
900066c4:	4649      	mov	r1, r9
        visible = vis;
900066c6:	f884 5acd 	strb.w	r5, [r4, #2765]	; 0xacd
900066ca:	f00a fd3d 	bl	90011148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
900066ce:	4620      	mov	r0, r4
900066d0:	b021      	add	sp, #132	; 0x84
900066d2:	ecbd 8b10 	vpop	{d8-d15}
900066d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900066da:	6898      	ldr	r0, [r3, #8]
900066dc:	4d68      	ldr	r5, [pc, #416]	; (90006880 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x15e8>)
900066de:	6803      	ldr	r3, [r0, #0]
900066e0:	6ada      	ldr	r2, [r3, #44]	; 0x2c
900066e2:	42aa      	cmp	r2, r5
900066e4:	f43e ae55 	beq.w	90005392 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xfa>
900066e8:	f7fe be1f 	b.w	9000532a <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x92>
900066ec:	6898      	ldr	r0, [r3, #8]
900066ee:	6802      	ldr	r2, [r0, #0]
900066f0:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
900066f2:	42aa      	cmp	r2, r5
900066f4:	d168      	bne.n	900067c8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1530>
        return auxiliaryLCD;
900066f6:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
        if (HAL::getInstance()->getAuxiliaryLCD())
900066f8:	2800      	cmp	r0, #0
900066fa:	f43e ae70 	beq.w	900053de <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x146>
        bool compat = HAL::lcd().framebufferFormat() == format;
900066fe:	6803      	ldr	r3, [r0, #0]
90006700:	f04f 0a01 	mov.w	sl, #1
90006704:	6adb      	ldr	r3, [r3, #44]	; 0x2c
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
90006706:	42ab      	cmp	r3, r5
90006708:	f43e ae69 	beq.w	900053de <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x146>
9000670c:	4798      	blx	r3
9000670e:	2800      	cmp	r0, #0
90006710:	bf08      	it	eq
90006712:	f04a 0a01 	orreq.w	sl, sl, #1
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
90006716:	f1ba 0f00 	cmp.w	sl, #0
9000671a:	f47e ae60 	bne.w	900053de <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x146>
9000671e:	f7fe be15 	b.w	9000534c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb4>
        return instance->lcdRef;
90006722:	6898      	ldr	r0, [r3, #8]
        bool compat = HAL::lcd().framebufferFormat() == format;
90006724:	6802      	ldr	r2, [r0, #0]
90006726:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
90006728:	42aa      	cmp	r2, r5
9000672a:	d164      	bne.n	900067f6 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x155e>
        return auxiliaryLCD;
9000672c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
        if (HAL::getInstance()->getAuxiliaryLCD())
9000672e:	2800      	cmp	r0, #0
90006730:	f43e ae78 	beq.w	90005424 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x18c>
        bool compat = HAL::lcd().framebufferFormat() == format;
90006734:	6803      	ldr	r3, [r0, #0]
90006736:	f04f 0a01 	mov.w	sl, #1
9000673a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
9000673c:	42ab      	cmp	r3, r5
9000673e:	f43e ae71 	beq.w	90005424 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x18c>
90006742:	4798      	blx	r3
90006744:	2800      	cmp	r0, #0
90006746:	bf08      	it	eq
90006748:	f04a 0a01 	orreq.w	sl, sl, #1
9000674c:	f1ba 0f00 	cmp.w	sl, #0
90006750:	f47e ae68 	bne.w	90005424 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x18c>
90006754:	f7fe bdfa 	b.w	9000534c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb4>
        return instance->lcdRef;
90006758:	6898      	ldr	r0, [r3, #8]
        bool compat = HAL::lcd().framebufferFormat() == format;
9000675a:	6802      	ldr	r2, [r0, #0]
9000675c:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
9000675e:	42aa      	cmp	r2, r5
90006760:	d13e      	bne.n	900067e0 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1548>
        return auxiliaryLCD;
90006762:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
        if (HAL::getInstance()->getAuxiliaryLCD())
90006764:	2800      	cmp	r0, #0
90006766:	f43e ae80 	beq.w	9000546a <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1d2>
        bool compat = HAL::lcd().framebufferFormat() == format;
9000676a:	6803      	ldr	r3, [r0, #0]
9000676c:	2701      	movs	r7, #1
9000676e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
90006770:	42ab      	cmp	r3, r5
90006772:	f43e ae7a 	beq.w	9000546a <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1d2>
90006776:	4798      	blx	r3
90006778:	2800      	cmp	r0, #0
9000677a:	bf08      	it	eq
9000677c:	f047 0701 	orreq.w	r7, r7, #1
90006780:	2f00      	cmp	r7, #0
90006782:	f47e ae72 	bne.w	9000546a <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x1d2>
90006786:	f7fe bde1 	b.w	9000534c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb4>
9000678a:	f504 62db 	add.w	r2, r4, #1752	; 0x6d8
9000678e:	e505      	b.n	9000619c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xf04>
90006790:	f504 62cc 	add.w	r2, r4, #1632	; 0x660
90006794:	e4cd      	b.n	90006132 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xe9a>
90006796:	f504 62bd 	add.w	r2, r4, #1512	; 0x5e8
9000679a:	e495      	b.n	900060c8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xe30>
9000679c:	f504 62ae 	add.w	r2, r4, #1392	; 0x570
900067a0:	e458      	b.n	90006054 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xdbc>
900067a2:	f504 629f 	add.w	r2, r4, #1272	; 0x4f8
900067a6:	e418      	b.n	90005fda <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xd42>
900067a8:	f504 6290 	add.w	r2, r4, #1152	; 0x480
900067ac:	f7ff bbd8 	b.w	90005f60 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xcc8>
900067b0:	f504 6281 	add.w	r2, r4, #1032	; 0x408
900067b4:	f7ff bb99 	b.w	90005eea <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xc52>
900067b8:	f504 7264 	add.w	r2, r4, #912	; 0x390
900067bc:	f7ff bb5b 	b.w	90005e76 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xbde>
900067c0:	f504 7246 	add.w	r2, r4, #792	; 0x318
900067c4:	f7ff bae9 	b.w	90005d9a <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb02>
        bool compat = HAL::lcd().framebufferFormat() == format;
900067c8:	4790      	blx	r2
900067ca:	683b      	ldr	r3, [r7, #0]
900067cc:	fab0 fa80 	clz	sl, r0
900067d0:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
900067d2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
        if (HAL::getInstance()->getAuxiliaryLCD())
900067d6:	2800      	cmp	r0, #0
900067d8:	d09d      	beq.n	90006716 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x147e>
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
900067da:	6803      	ldr	r3, [r0, #0]
900067dc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900067de:	e792      	b.n	90006706 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x146e>
        bool compat = HAL::lcd().framebufferFormat() == format;
900067e0:	4790      	blx	r2
900067e2:	683b      	ldr	r3, [r7, #0]
900067e4:	fab0 f780 	clz	r7, r0
900067e8:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
900067ea:	097f      	lsrs	r7, r7, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
900067ec:	2800      	cmp	r0, #0
900067ee:	d0c7      	beq.n	90006780 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x14e8>
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
900067f0:	6803      	ldr	r3, [r0, #0]
900067f2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900067f4:	e7bc      	b.n	90006770 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x14d8>
        bool compat = HAL::lcd().framebufferFormat() == format;
900067f6:	4790      	blx	r2
900067f8:	683b      	ldr	r3, [r7, #0]
900067fa:	fab0 fa80 	clz	sl, r0
900067fe:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
90006800:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
        if (HAL::getInstance()->getAuxiliaryLCD())
90006804:	2800      	cmp	r0, #0
90006806:	d0a1      	beq.n	9000674c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x14b4>
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
90006808:	6803      	ldr	r3, [r0, #0]
9000680a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9000680c:	e796      	b.n	9000673c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x14a4>
        handleAlphaUpdated();
9000680e:	9806      	ldr	r0, [sp, #24]
90006810:	4790      	blx	r2
90006812:	e42e      	b.n	90006072 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xdda>
90006814:	9805      	ldr	r0, [sp, #20]
90006816:	4790      	blx	r2
90006818:	f7ff bbee 	b.w	90005ff8 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xd60>
9000681c:	9804      	ldr	r0, [sp, #16]
9000681e:	4790      	blx	r2
90006820:	f7ff bbad 	b.w	90005f7e <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xce6>
90006824:	9803      	ldr	r0, [sp, #12]
90006826:	4790      	blx	r2
90006828:	f7ff bb6e 	b.w	90005f08 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xc70>
9000682c:	9802      	ldr	r0, [sp, #8]
9000682e:	4790      	blx	r2
90006830:	f7ff bb30 	b.w	90005e94 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xbfc>
90006834:	ee1a 0a10 	vmov	r0, s20
90006838:	4790      	blx	r2
9000683a:	f7ff babe 	b.w	90005dba <_ZN29screen_tictactoe_gameViewBaseC1Ev+0xb22>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
9000683e:	4b11      	ldr	r3, [pc, #68]	; (90006884 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x15ec>)
90006840:	2160      	movs	r1, #96	; 0x60
90006842:	4a11      	ldr	r2, [pc, #68]	; (90006888 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x15f0>)
90006844:	4811      	ldr	r0, [pc, #68]	; (9000688c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x15f4>)
90006846:	f021 f999 	bl	90027b7c <__assert_func>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
9000684a:	4b11      	ldr	r3, [pc, #68]	; (90006890 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x15f8>)
9000684c:	2161      	movs	r1, #97	; 0x61
9000684e:	4a0e      	ldr	r2, [pc, #56]	; (90006888 <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x15f0>)
90006850:	480e      	ldr	r0, [pc, #56]	; (9000688c <_ZN29screen_tictactoe_gameViewBaseC1Ev+0x15f4>)
90006852:	f021 f993 	bl	90027b7c <__assert_func>
90006856:	bf00      	nop
90006858:	003f006a 	.word	0x003f006a
9000685c:	00980110 	.word	0x00980110
90006860:	00550076 	.word	0x00550076
90006864:	ffff0000 	.word	0xffff0000
90006868:	9002a6f0 	.word	0x9002a6f0
9000686c:	008e0064 	.word	0x008e0064
90006870:	2403988c 	.word	0x2403988c
90006874:	24039890 	.word	0x24039890
90006878:	24039898 	.word	0x24039898
9000687c:	9002b16c 	.word	0x9002b16c
90006880:	90002339 	.word	0x90002339
90006884:	9002afe0 	.word	0x9002afe0
90006888:	9002b134 	.word	0x9002b134
9000688c:	9002b060 	.word	0x9002b060
90006890:	9002b0f4 	.word	0x9002b0f4
90006894:	fffe0132 	.word	0xfffe0132
90006898:	00600042 	.word	0x00600042
9000689c:	00c30042 	.word	0x00c30042
900068a0:	00c30132 	.word	0x00c30132

900068a4 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
900068a4:	4770      	bx	lr
900068a6:	bf00      	nop

900068a8 <_ZN19FrontendApplicationD0Ev>:
900068a8:	b510      	push	{r4, lr}
900068aa:	4604      	mov	r4, r0
900068ac:	f44f 71ae 	mov.w	r1, #348	; 0x15c
900068b0:	f021 f936 	bl	90027b20 <_ZdlPvj>
900068b4:	4620      	mov	r0, r4
900068b6:	bd10      	pop	{r4, pc}

900068b8 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
900068b8:	b510      	push	{r4, lr}
900068ba:	4604      	mov	r4, r0
    {
        model.tick();
900068bc:	f8d0 0158 	ldr.w	r0, [r0, #344]	; 0x158
900068c0:	f000 f814 	bl	900068ec <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
900068c4:	4620      	mov	r0, r4
    }
900068c6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
900068ca:	f010 b895 	b.w	900169f8 <_ZN8touchgfx11Application15handleTickEventEv>
900068ce:	bf00      	nop

900068d0 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
900068d0:	b510      	push	{r4, lr}
900068d2:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
900068d4:	f7fd fa44 	bl	90003d60 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
900068d8:	4b01      	ldr	r3, [pc, #4]	; (900068e0 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
{

}
900068da:	4620      	mov	r0, r4
    : FrontendApplicationBase(m, heap)
900068dc:	6023      	str	r3, [r4, #0]
}
900068de:	bd10      	pop	{r4, pc}
900068e0:	9002b48c 	.word	0x9002b48c

900068e4 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
900068e4:	2200      	movs	r2, #0
900068e6:	6002      	str	r2, [r0, #0]
{

}
900068e8:	4770      	bx	lr
900068ea:	bf00      	nop

900068ec <_ZN5Model4tickEv>:

void Model::tick()
{

}
900068ec:	4770      	bx	lr
900068ee:	bf00      	nop

900068f0 <_ZN25screen_main_menuPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~screen_main_menuPresenter() {}
900068f0:	4770      	bx	lr
900068f2:	bf00      	nop

900068f4 <_ZThn4_N25screen_main_menuPresenterD1Ev>:
900068f4:	3804      	subs	r0, #4
900068f6:	4770      	bx	lr

900068f8 <_ZN25screen_main_menuPresenter10deactivateEv>:
}

void screen_main_menuPresenter::activate()
{

}
900068f8:	4770      	bx	lr
900068fa:	bf00      	nop

900068fc <_ZN25screen_main_menuPresenterD0Ev>:
900068fc:	b510      	push	{r4, lr}
900068fe:	4604      	mov	r4, r0
90006900:	2110      	movs	r1, #16
90006902:	f021 f90d 	bl	90027b20 <_ZdlPvj>
90006906:	4620      	mov	r0, r4
90006908:	bd10      	pop	{r4, pc}
9000690a:	bf00      	nop

9000690c <_ZThn4_N25screen_main_menuPresenterD0Ev>:
9000690c:	b500      	push	{lr}
9000690e:	3804      	subs	r0, #4
90006910:	b083      	sub	sp, #12
90006912:	2110      	movs	r1, #16
90006914:	9001      	str	r0, [sp, #4]
90006916:	f021 f903 	bl	90027b20 <_ZdlPvj>
9000691a:	9801      	ldr	r0, [sp, #4]
9000691c:	b003      	add	sp, #12
9000691e:	f85d fb04 	ldr.w	pc, [sp], #4
90006922:	bf00      	nop

90006924 <_ZN25screen_main_menuPresenterC1ER20screen_main_menuView>:
    : view(v)
90006924:	4a06      	ldr	r2, [pc, #24]	; (90006940 <_ZN25screen_main_menuPresenterC1ER20screen_main_menuView+0x1c>)
90006926:	60c1      	str	r1, [r0, #12]
screen_main_menuPresenter::screen_main_menuPresenter(screen_main_menuView& v)
90006928:	b410      	push	{r4}
    ModelListener() : model(0) {}
9000692a:	2400      	movs	r4, #0
9000692c:	6084      	str	r4, [r0, #8]
    : view(v)
9000692e:	f102 0408 	add.w	r4, r2, #8
90006932:	3220      	adds	r2, #32
90006934:	e9c0 4200 	strd	r4, r2, [r0]
}
90006938:	f85d 4b04 	ldr.w	r4, [sp], #4
9000693c:	4770      	bx	lr
9000693e:	bf00      	nop
90006940:	9002b4d8 	.word	0x9002b4d8

90006944 <_ZN20screen_main_menuView14tearDownScreenEv>:
}

void screen_main_menuView::tearDownScreen()
{
    screen_main_menuViewBase::tearDownScreen();
}
90006944:	4770      	bx	lr
90006946:	bf00      	nop

90006948 <_ZN20screen_main_menuViewD1Ev>:

class screen_main_menuView : public screen_main_menuViewBase
{
public:
    screen_main_menuView();
    virtual ~screen_main_menuView() {}
90006948:	4b03      	ldr	r3, [pc, #12]	; (90006958 <_ZN20screen_main_menuViewD1Ev+0x10>)
9000694a:	b510      	push	{r4, lr}
9000694c:	4604      	mov	r4, r0
9000694e:	6003      	str	r3, [r0, #0]
90006950:	f7fd fc96 	bl	90004280 <_ZN24screen_main_menuViewBaseD1Ev>
90006954:	4620      	mov	r0, r4
90006956:	bd10      	pop	{r4, pc}
90006958:	9002b508 	.word	0x9002b508

9000695c <_ZN20screen_main_menuViewD0Ev>:
9000695c:	4b06      	ldr	r3, [pc, #24]	; (90006978 <_ZN20screen_main_menuViewD0Ev+0x1c>)
9000695e:	b510      	push	{r4, lr}
90006960:	4604      	mov	r4, r0
90006962:	6003      	str	r3, [r0, #0]
90006964:	f7fd fc8c 	bl	90004280 <_ZN24screen_main_menuViewBaseD1Ev>
90006968:	f44f 7186 	mov.w	r1, #268	; 0x10c
9000696c:	4620      	mov	r0, r4
9000696e:	f021 f8d7 	bl	90027b20 <_ZdlPvj>
90006972:	4620      	mov	r0, r4
90006974:	bd10      	pop	{r4, pc}
90006976:	bf00      	nop
90006978:	9002b508 	.word	0x9002b508

9000697c <_ZN20screen_main_menuViewC1Ev>:
screen_main_menuView::screen_main_menuView()
9000697c:	b510      	push	{r4, lr}
9000697e:	4604      	mov	r4, r0
90006980:	f7fd fcce 	bl	90004320 <_ZN24screen_main_menuViewBaseC1Ev>
90006984:	4b01      	ldr	r3, [pc, #4]	; (9000698c <_ZN20screen_main_menuViewC1Ev+0x10>)
}
90006986:	4620      	mov	r0, r4
screen_main_menuView::screen_main_menuView()
90006988:	6023      	str	r3, [r4, #0]
}
9000698a:	bd10      	pop	{r4, pc}
9000698c:	9002b508 	.word	0x9002b508

90006990 <_ZN20screen_main_menuView11setupScreenEv>:
    screen_main_menuViewBase::setupScreen();
90006990:	f7fd bc78 	b.w	90004284 <_ZN24screen_main_menuViewBase11setupScreenEv>

90006994 <_ZN26screen_snake_gamePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~screen_snake_gamePresenter() {}
90006994:	4770      	bx	lr
90006996:	bf00      	nop

90006998 <_ZThn4_N26screen_snake_gamePresenterD1Ev>:
90006998:	3804      	subs	r0, #4
9000699a:	4770      	bx	lr

9000699c <_ZN26screen_snake_gamePresenter10deactivateEv>:
}

void screen_snake_gamePresenter::activate()
{

}
9000699c:	4770      	bx	lr
9000699e:	bf00      	nop

900069a0 <_ZN26screen_snake_gamePresenterD0Ev>:
900069a0:	b510      	push	{r4, lr}
900069a2:	4604      	mov	r4, r0
900069a4:	2110      	movs	r1, #16
900069a6:	f021 f8bb 	bl	90027b20 <_ZdlPvj>
900069aa:	4620      	mov	r0, r4
900069ac:	bd10      	pop	{r4, pc}
900069ae:	bf00      	nop

900069b0 <_ZThn4_N26screen_snake_gamePresenterD0Ev>:
900069b0:	b500      	push	{lr}
900069b2:	3804      	subs	r0, #4
900069b4:	b083      	sub	sp, #12
900069b6:	2110      	movs	r1, #16
900069b8:	9001      	str	r0, [sp, #4]
900069ba:	f021 f8b1 	bl	90027b20 <_ZdlPvj>
900069be:	9801      	ldr	r0, [sp, #4]
900069c0:	b003      	add	sp, #12
900069c2:	f85d fb04 	ldr.w	pc, [sp], #4
900069c6:	bf00      	nop

900069c8 <_ZN26screen_snake_gamePresenterC1ER21screen_snake_gameView>:
    : view(v)
900069c8:	4a06      	ldr	r2, [pc, #24]	; (900069e4 <_ZN26screen_snake_gamePresenterC1ER21screen_snake_gameView+0x1c>)
900069ca:	60c1      	str	r1, [r0, #12]
screen_snake_gamePresenter::screen_snake_gamePresenter(screen_snake_gameView& v)
900069cc:	b410      	push	{r4}
900069ce:	2400      	movs	r4, #0
900069d0:	6084      	str	r4, [r0, #8]
    : view(v)
900069d2:	f102 0408 	add.w	r4, r2, #8
900069d6:	3220      	adds	r2, #32
900069d8:	e9c0 4200 	strd	r4, r2, [r0]
}
900069dc:	f85d 4b04 	ldr.w	r4, [sp], #4
900069e0:	4770      	bx	lr
900069e2:	bf00      	nop
900069e4:	9002b534 	.word	0x9002b534

900069e8 <_ZN21screen_snake_gameView14tearDownScreenEv>:
}

void screen_snake_gameView::tearDownScreen()
{
    screen_snake_gameViewBase::tearDownScreen();
}
900069e8:	4770      	bx	lr
900069ea:	bf00      	nop

900069ec <_ZN21screen_snake_gameView19change_direction_upEv>:
	add(error_square);
	error_square.getParent()->invalidate();
}

void screen_snake_gameView::change_direction_up() {
	snake_direction = SNAKE_UP;
900069ec:	4b01      	ldr	r3, [pc, #4]	; (900069f4 <_ZN21screen_snake_gameView19change_direction_upEv+0x8>)
900069ee:	2201      	movs	r2, #1
900069f0:	801a      	strh	r2, [r3, #0]
}
900069f2:	4770      	bx	lr
900069f4:	24000030 	.word	0x24000030

900069f8 <_ZN21screen_snake_gameView21change_direction_downEv>:

void screen_snake_gameView::change_direction_down() {
	snake_direction = SNAKE_DOWN;
900069f8:	4b01      	ldr	r3, [pc, #4]	; (90006a00 <_ZN21screen_snake_gameView21change_direction_downEv+0x8>)
900069fa:	2203      	movs	r2, #3
900069fc:	801a      	strh	r2, [r3, #0]
}
900069fe:	4770      	bx	lr
90006a00:	24000030 	.word	0x24000030

90006a04 <_ZN21screen_snake_gameView21change_direction_leftEv>:

void screen_snake_gameView::change_direction_left() {
	snake_direction = SNAKE_LEFT;
90006a04:	4b01      	ldr	r3, [pc, #4]	; (90006a0c <_ZN21screen_snake_gameView21change_direction_leftEv+0x8>)
90006a06:	2202      	movs	r2, #2
90006a08:	801a      	strh	r2, [r3, #0]
}
90006a0a:	4770      	bx	lr
90006a0c:	24000030 	.word	0x24000030

90006a10 <_ZN21screen_snake_gameView22change_direction_rightEv>:

void screen_snake_gameView::change_direction_right() {
	snake_direction = SNAKE_RIGHT;
90006a10:	4b01      	ldr	r3, [pc, #4]	; (90006a18 <_ZN21screen_snake_gameView22change_direction_rightEv+0x8>)
90006a12:	2200      	movs	r2, #0
90006a14:	801a      	strh	r2, [r3, #0]
}
90006a16:	4770      	bx	lr
90006a18:	24000030 	.word	0x24000030

90006a1c <_ZN21screen_snake_gameView13pseudo_randomEi>:

int screen_snake_gameView::pseudo_random(int tick) {
	return (3*snake_length + SNAKE_SPEED*3*tick + 3*tail->pixel->getX() * 3*tail->pixel->getY());
90006a1c:	4b09      	ldr	r3, [pc, #36]	; (90006a44 <_ZN21screen_snake_gameView13pseudo_randomEi+0x28>)
90006a1e:	ebc1 1101 	rsb	r1, r1, r1, lsl #4
90006a22:	4a09      	ldr	r2, [pc, #36]	; (90006a48 <_ZN21screen_snake_gameView13pseudo_randomEi+0x2c>)
90006a24:	681b      	ldr	r3, [r3, #0]
90006a26:	6810      	ldr	r0, [r2, #0]
90006a28:	689a      	ldr	r2, [r3, #8]
90006a2a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90006a2e:	8893      	ldrh	r3, [r2, #4]
90006a30:	88d2      	ldrh	r2, [r2, #6]
90006a32:	eb00 0041 	add.w	r0, r0, r1, lsl #1
90006a36:	fb13 f302 	smulbb	r3, r3, r2
90006a3a:	eb03 03c3 	add.w	r3, r3, r3, lsl #3
}
90006a3e:	4418      	add	r0, r3
90006a40:	4770      	bx	lr
90006a42:	bf00      	nop
90006a44:	2401f814 	.word	0x2401f814
90006a48:	24000034 	.word	0x24000034

90006a4c <_ZN21screen_snake_gameView14pseudo_random2Ei>:

int screen_snake_gameView::pseudo_random2(int tick) {
	return (7*snake_length + SNAKE_SPEED*7*tick + 7*tail->pixel->getX() * 7*tail->pixel->getY());
90006a4c:	4b0a      	ldr	r3, [pc, #40]	; (90006a78 <_ZN21screen_snake_gameView14pseudo_random2Ei+0x2c>)
90006a4e:	f04f 0c46 	mov.w	ip, #70	; 0x46
90006a52:	4a0a      	ldr	r2, [pc, #40]	; (90006a7c <_ZN21screen_snake_gameView14pseudo_random2Ei+0x30>)
90006a54:	681b      	ldr	r3, [r3, #0]
90006a56:	6810      	ldr	r0, [r2, #0]
90006a58:	689a      	ldr	r2, [r3, #8]
90006a5a:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
90006a5e:	8893      	ldrh	r3, [r2, #4]
90006a60:	88d2      	ldrh	r2, [r2, #6]
90006a62:	fb0c 0001 	mla	r0, ip, r1, r0
90006a66:	fb13 f302 	smulbb	r3, r3, r2
90006a6a:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90006a6e:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
}
90006a72:	4418      	add	r0, r3
90006a74:	4770      	bx	lr
90006a76:	bf00      	nop
90006a78:	2401f814 	.word	0x2401f814
90006a7c:	24000034 	.word	0x24000034

90006a80 <_ZN21screen_snake_gameViewD1Ev>:

class screen_snake_gameView : public screen_snake_gameViewBase
{
public:
    screen_snake_gameView();
    virtual ~screen_snake_gameView() {}
90006a80:	4b03      	ldr	r3, [pc, #12]	; (90006a90 <_ZN21screen_snake_gameViewD1Ev+0x10>)
90006a82:	b510      	push	{r4, lr}
90006a84:	4604      	mov	r4, r0
90006a86:	6003      	str	r3, [r0, #0]
90006a88:	f7fd fd9e 	bl	900045c8 <_ZN25screen_snake_gameViewBaseD1Ev>
90006a8c:	4620      	mov	r0, r4
90006a8e:	bd10      	pop	{r4, pc}
90006a90:	9002b568 	.word	0x9002b568

90006a94 <_ZN21screen_snake_gameViewD0Ev>:
90006a94:	4b06      	ldr	r3, [pc, #24]	; (90006ab0 <_ZN21screen_snake_gameViewD0Ev+0x1c>)
90006a96:	b510      	push	{r4, lr}
90006a98:	4604      	mov	r4, r0
90006a9a:	6003      	str	r3, [r0, #0]
90006a9c:	f7fd fd94 	bl	900045c8 <_ZN25screen_snake_gameViewBaseD1Ev>
90006aa0:	f44f 7164 	mov.w	r1, #912	; 0x390
90006aa4:	4620      	mov	r0, r4
90006aa6:	f021 f83b 	bl	90027b20 <_ZdlPvj>
90006aaa:	4620      	mov	r0, r4
90006aac:	bd10      	pop	{r4, pc}
90006aae:	bf00      	nop
90006ab0:	9002b568 	.word	0x9002b568

90006ab4 <_ZN21screen_snake_gameViewC1Ev>:
screen_snake_gameView::screen_snake_gameView()
90006ab4:	b510      	push	{r4, lr}
90006ab6:	4604      	mov	r4, r0
90006ab8:	f7fd feca 	bl	90004850 <_ZN25screen_snake_gameViewBaseC1Ev>
90006abc:	4b01      	ldr	r3, [pc, #4]	; (90006ac4 <_ZN21screen_snake_gameViewC1Ev+0x10>)
}
90006abe:	4620      	mov	r0, r4
screen_snake_gameView::screen_snake_gameView()
90006ac0:	6023      	str	r3, [r4, #0]
}
90006ac2:	bd10      	pop	{r4, pc}
90006ac4:	9002b568 	.word	0x9002b568

90006ac8 <_GLOBAL__sub_I_game_started>:
touchgfx::Box snake_pixels[MAX_SNAKE_PIECES];
90006ac8:	4b0e      	ldr	r3, [pc, #56]	; (90006b04 <_GLOBAL__sub_I_game_started+0x3c>)
        : x(0), y(0), width(0), height(0)
90006aca:	2200      	movs	r2, #0
          touchable(false),
90006acc:	f44f 7c80 	mov.w	ip, #256	; 0x100
        : Widget(), alpha(255), color(0)
90006ad0:	21ff      	movs	r1, #255	; 0xff
90006ad2:	f503 30b0 	add.w	r0, r3, #90112	; 0x16000
}
90006ad6:	b410      	push	{r4}
90006ad8:	4c0b      	ldr	r4, [pc, #44]	; (90006b08 <_GLOBAL__sub_I_game_started+0x40>)
90006ada:	f8a3 c024 	strh.w	ip, [r3, #36]	; 0x24
90006ade:	601c      	str	r4, [r3, #0]
90006ae0:	f883 1026 	strb.w	r1, [r3, #38]	; 0x26
        : color(col)
90006ae4:	629a      	str	r2, [r3, #40]	; 0x28
        : x(0), y(0), width(0), height(0)
90006ae6:	e9c3 2201 	strd	r2, r2, [r3, #4]
90006aea:	e9c3 2203 	strd	r2, r2, [r3, #12]
          nextSibling(0),
90006aee:	e9c3 2205 	strd	r2, r2, [r3, #20]
          cachedAbsX(0),
90006af2:	e9c3 2207 	strd	r2, r2, [r3, #28]
touchgfx::Box snake_pixels[MAX_SNAKE_PIECES];
90006af6:	332c      	adds	r3, #44	; 0x2c
90006af8:	4283      	cmp	r3, r0
90006afa:	d1ee      	bne.n	90006ada <_GLOBAL__sub_I_game_started+0x12>
}
90006afc:	f85d 4b04 	ldr.w	r4, [sp], #4
90006b00:	4770      	bx	lr
90006b02:	bf00      	nop
90006b04:	24009814 	.word	0x24009814
90006b08:	9002bd34 	.word	0x9002bd34

90006b0c <_GLOBAL__sub_D_game_started>:
90006b0c:	b538      	push	{r3, r4, r5, lr}
touchgfx::Box snake_pixels[MAX_SNAKE_PIECES];
90006b0e:	4c05      	ldr	r4, [pc, #20]	; (90006b24 <_GLOBAL__sub_D_game_started+0x18>)
90006b10:	f5a4 35b0 	sub.w	r5, r4, #90112	; 0x16000
90006b14:	f854 3d2c 	ldr.w	r3, [r4, #-44]!
90006b18:	681b      	ldr	r3, [r3, #0]
90006b1a:	4620      	mov	r0, r4
90006b1c:	4798      	blx	r3
90006b1e:	42ac      	cmp	r4, r5
90006b20:	d1f8      	bne.n	90006b14 <_GLOBAL__sub_D_game_started+0x8>
}
90006b22:	bd38      	pop	{r3, r4, r5, pc}
90006b24:	2401f814 	.word	0x2401f814

90006b28 <_ZN21screen_snake_gameView11setupScreenEv>:
    screen_snake_gameViewBase::setupScreen();
90006b28:	f7fd bd50 	b.w	900045cc <_ZN25screen_snake_gameViewBase11setupScreenEv>

90006b2c <_ZN21screen_snake_gameView16game_snake_startEv>:
{
90006b2c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
        visible = vis;
90006b30:	2500      	movs	r5, #0
90006b32:	4606      	mov	r6, r0
	btn_snake_start.invalidate();
90006b34:	30c4      	adds	r0, #196	; 0xc4
class Drawable
90006b36:	4c2c      	ldr	r4, [pc, #176]	; (90006be8 <_ZN21screen_snake_gameView16game_snake_startEv+0xbc>)
        visible = vis;
90006b38:	f886 50e9 	strb.w	r5, [r6, #233]	; 0xe9
90006b3c:	f010 ff53 	bl	900179e6 <_ZNK8touchgfx8Drawable10invalidateEv>
	btn_back.invalidate();
90006b40:	f506 700a 	add.w	r0, r6, #552	; 0x228
90006b44:	f886 524d 	strb.w	r5, [r6, #589]	; 0x24d
90006b48:	f010 ff4d 	bl	900179e6 <_ZNK8touchgfx8Drawable10invalidateEv>
	snake_head.invalidate();
90006b4c:	f106 0098 	add.w	r0, r6, #152	; 0x98
90006b50:	f886 50bd 	strb.w	r5, [r6, #189]	; 0xbd
90006b54:	f010 ff47 	bl	900179e6 <_ZNK8touchgfx8Drawable10invalidateEv>
	lbl_game_over.invalidate();
90006b58:	f506 703e 	add.w	r0, r6, #760	; 0x2f8
90006b5c:	f886 531d 	strb.w	r5, [r6, #797]	; 0x31d
90006b60:	f010 ff41 	bl	900179e6 <_ZNK8touchgfx8Drawable10invalidateEv>
	if( head == NULL )
90006b64:	4f21      	ldr	r7, [pc, #132]	; (90006bec <_ZN21screen_snake_gameView16game_snake_startEv+0xc0>)
class Drawable
90006b66:	f44f 7380 	mov.w	r3, #256	; 0x100
class Box : public Widget
90006b6a:	62a5      	str	r5, [r4, #40]	; 0x28
90006b6c:	6838      	ldr	r0, [r7, #0]
90006b6e:	84a3      	strh	r3, [r4, #36]	; 0x24
90006b70:	23ff      	movs	r3, #255	; 0xff
90006b72:	e9c4 5501 	strd	r5, r5, [r4, #4]
90006b76:	e9c4 5503 	strd	r5, r5, [r4, #12]
90006b7a:	e9c4 5505 	strd	r5, r5, [r4, #20]
90006b7e:	e9c4 5507 	strd	r5, r5, [r4, #28]
90006b82:	f884 3026 	strb.w	r3, [r4, #38]	; 0x26
90006b86:	b318      	cbz	r0, 90006bd0 <_ZN21screen_snake_gameView16game_snake_startEv+0xa4>
        rect.x = x;
90006b88:	4b19      	ldr	r3, [pc, #100]	; (90006bf0 <_ZN21screen_snake_gameView16game_snake_startEv+0xc4>)
90006b8a:	f04f 120a 	mov.w	r2, #655370	; 0xa000a
	head->pixel = &snake_pixels[0];
90006b8e:	6084      	str	r4, [r0, #8]
90006b90:	1d30      	adds	r0, r6, #4
90006b92:	6063      	str	r3, [r4, #4]
        color = newColor;
90006b94:	4b17      	ldr	r3, [pc, #92]	; (90006bf4 <_ZN21screen_snake_gameView16game_snake_startEv+0xc8>)
90006b96:	60a2      	str	r2, [r4, #8]
90006b98:	4913      	ldr	r1, [pc, #76]	; (90006be8 <_ZN21screen_snake_gameView16game_snake_startEv+0xbc>)
90006b9a:	62a3      	str	r3, [r4, #40]	; 0x28
90006b9c:	f00a fad4 	bl	90011148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
	head->pixel->getParent()->invalidate();
90006ba0:	683b      	ldr	r3, [r7, #0]
	tail = head;
90006ba2:	4c15      	ldr	r4, [pc, #84]	; (90006bf8 <_ZN21screen_snake_gameView16game_snake_startEv+0xcc>)
        return parent;
90006ba4:	689b      	ldr	r3, [r3, #8]
90006ba6:	6958      	ldr	r0, [r3, #20]
	head->pixel->getParent()->invalidate();
90006ba8:	6803      	ldr	r3, [r0, #0]
90006baa:	695b      	ldr	r3, [r3, #20]
90006bac:	4798      	blx	r3
	head->next = NULL;
90006bae:	683b      	ldr	r3, [r7, #0]
90006bb0:	2200      	movs	r2, #0
	snake_length = 1;
90006bb2:	2101      	movs	r1, #1
	snake_direction = SNAKE_DOWN;
90006bb4:	4811      	ldr	r0, [pc, #68]	; (90006bfc <_ZN21screen_snake_gameView16game_snake_startEv+0xd0>)
	head->prev = NULL;
90006bb6:	e9c3 2200 	strd	r2, r2, [r3]
	head->old_y = 0;
90006bba:	e9c3 2203 	strd	r2, r2, [r3, #12]
	tail = head;
90006bbe:	6023      	str	r3, [r4, #0]
	snake_direction = SNAKE_DOWN;
90006bc0:	2403      	movs	r4, #3
	snake_length = 1;
90006bc2:	4a0f      	ldr	r2, [pc, #60]	; (90006c00 <_ZN21screen_snake_gameView16game_snake_startEv+0xd4>)
	game_started = true;
90006bc4:	4b0f      	ldr	r3, [pc, #60]	; (90006c04 <_ZN21screen_snake_gameView16game_snake_startEv+0xd8>)
	snake_direction = SNAKE_DOWN;
90006bc6:	8004      	strh	r4, [r0, #0]
	snake_length = 1;
90006bc8:	6011      	str	r1, [r2, #0]
	game_started = true;
90006bca:	7019      	strb	r1, [r3, #0]
}
90006bcc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		head = (snake_piece*)malloc(sizeof(snake_piece));
90006bd0:	2014      	movs	r0, #20
90006bd2:	f020 fff7 	bl	90027bc4 <malloc>
90006bd6:	6038      	str	r0, [r7, #0]
	if( head == NULL ) {
90006bd8:	2800      	cmp	r0, #0
90006bda:	d1d5      	bne.n	90006b88 <_ZN21screen_snake_gameView16game_snake_startEv+0x5c>
		error();
90006bdc:	6833      	ldr	r3, [r6, #0]
90006bde:	4630      	mov	r0, r6
90006be0:	6c9b      	ldr	r3, [r3, #72]	; 0x48
}
90006be2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
		error();
90006be6:	4718      	bx	r3
90006be8:	24009814 	.word	0x24009814
90006bec:	24009810 	.word	0x24009810
90006bf0:	0014000a 	.word	0x0014000a
90006bf4:	ff00ff32 	.word	0xff00ff32
90006bf8:	2401f814 	.word	0x2401f814
90006bfc:	24000030 	.word	0x24000030
90006c00:	24000034 	.word	0x24000034
90006c04:	2400980c 	.word	0x2400980c

90006c08 <_ZN21screen_snake_gameView15handleTickEventEv>:
void screen_snake_gameView::handleTickEvent() {
90006c08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( game_started )
90006c0c:	4fbb      	ldr	r7, [pc, #748]	; (90006efc <_ZN21screen_snake_gameView15handleTickEventEv+0x2f4>)
void screen_snake_gameView::handleTickEvent() {
90006c0e:	b083      	sub	sp, #12
90006c10:	4681      	mov	r9, r0
	if( game_started )
90006c12:	783e      	ldrb	r6, [r7, #0]
90006c14:	2e00      	cmp	r6, #0
90006c16:	f000 81cb 	beq.w	90006fb0 <_ZN21screen_snake_gameView15handleTickEventEv+0x3a8>
		if( ++tick % SNAKE_SPEED == 0 )
90006c1a:	4eb9      	ldr	r6, [pc, #740]	; (90006f00 <_ZN21screen_snake_gameView15handleTickEventEv+0x2f8>)
90006c1c:	49b9      	ldr	r1, [pc, #740]	; (90006f04 <_ZN21screen_snake_gameView15handleTickEventEv+0x2fc>)
90006c1e:	6833      	ldr	r3, [r6, #0]
90006c20:	4ab9      	ldr	r2, [pc, #740]	; (90006f08 <_ZN21screen_snake_gameView15handleTickEventEv+0x300>)
90006c22:	3301      	adds	r3, #1
90006c24:	fb01 2203 	mla	r2, r1, r3, r2
90006c28:	6033      	str	r3, [r6, #0]
90006c2a:	4bb8      	ldr	r3, [pc, #736]	; (90006f0c <_ZN21screen_snake_gameView15handleTickEventEv+0x304>)
90006c2c:	ebb3 0f72 	cmp.w	r3, r2, ror #1
90006c30:	f240 81bb 	bls.w	90006faa <_ZN21screen_snake_gameView15handleTickEventEv+0x3a2>
			if( head->pixel->getX() > SCREEN_WIDTH || head->pixel->getX() < 0 ||
90006c34:	f8df a308 	ldr.w	sl, [pc, #776]	; 90006f40 <_ZN21screen_snake_gameView15handleTickEventEv+0x338>
90006c38:	f8da c000 	ldr.w	ip, [sl]
90006c3c:	f8dc 5008 	ldr.w	r5, [ip, #8]
        return rect.x;
90006c40:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
90006c44:	b293      	uxth	r3, r2
90006c46:	f5b3 7feb 	cmp.w	r3, #470	; 0x1d6
90006c4a:	f240 8209 	bls.w	90007060 <_ZN21screen_snake_gameView15handleTickEventEv+0x458>
				game_started = false;
90006c4e:	2300      	movs	r3, #0
90006c50:	703b      	strb	r3, [r7, #0]
			snake_piece *snake_part = head->next;
90006c52:	f8dc 3000 	ldr.w	r3, [ip]
			while( snake_part != NULL )
90006c56:	b913      	cbnz	r3, 90006c5e <_ZN21screen_snake_gameView15handleTickEventEv+0x56>
90006c58:	e00f      	b.n	90006c7a <_ZN21screen_snake_gameView15handleTickEventEv+0x72>
				snake_part = snake_part->next;
90006c5a:	681b      	ldr	r3, [r3, #0]
			while( snake_part != NULL )
90006c5c:	b16b      	cbz	r3, 90006c7a <_ZN21screen_snake_gameView15handleTickEventEv+0x72>
				if( snake_part->pixel->getX() == head->pixel->getX() && snake_part->pixel->getY() == head->pixel->getY() ) {
90006c5e:	6899      	ldr	r1, [r3, #8]
90006c60:	f9b1 4004 	ldrsh.w	r4, [r1, #4]
90006c64:	4294      	cmp	r4, r2
90006c66:	d1f8      	bne.n	90006c5a <_ZN21screen_snake_gameView15handleTickEventEv+0x52>
90006c68:	f9b1 0006 	ldrsh.w	r0, [r1, #6]
90006c6c:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
90006c70:	4288      	cmp	r0, r1
90006c72:	d1f2      	bne.n	90006c5a <_ZN21screen_snake_gameView15handleTickEventEv+0x52>
					game_started = false;
90006c74:	2300      	movs	r3, #0
90006c76:	703b      	strb	r3, [r7, #0]
					tick = 0;
90006c78:	6033      	str	r3, [r6, #0]
90006c7a:	f9b9 0110 	ldrsh.w	r0, [r9, #272]	; 0x110
90006c7e:	4629      	mov	r1, r5
90006c80:	4663      	mov	r3, ip
90006c82:	e006      	b.n	90006c92 <_ZN21screen_snake_gameView15handleTickEventEv+0x8a>
				snake_part = snake_part->next;
90006c84:	681b      	ldr	r3, [r3, #0]
			while( snake_part != NULL )
90006c86:	2b00      	cmp	r3, #0
90006c88:	f000 80e4 	beq.w	90006e54 <_ZN21screen_snake_gameView15handleTickEventEv+0x24c>
				if( snake_part->pixel->getX() == food.getX() && snake_part->pixel->getY() == food.getY() ) {
90006c8c:	6899      	ldr	r1, [r3, #8]
90006c8e:	f9b1 2004 	ldrsh.w	r2, [r1, #4]
90006c92:	4290      	cmp	r0, r2
90006c94:	d1f6      	bne.n	90006c84 <_ZN21screen_snake_gameView15handleTickEventEv+0x7c>
90006c96:	f9b1 1006 	ldrsh.w	r1, [r1, #6]
90006c9a:	f9b9 2112 	ldrsh.w	r2, [r9, #274]	; 0x112
90006c9e:	4291      	cmp	r1, r2
90006ca0:	d1f0      	bne.n	90006c84 <_ZN21screen_snake_gameView15handleTickEventEv+0x7c>
					snake_length++;
90006ca2:	4d9b      	ldr	r5, [pc, #620]	; (90006f10 <_ZN21screen_snake_gameView15handleTickEventEv+0x308>)
					if( snake_length == MAX_SNAKE_PIECES-1 ) {
90006ca4:	f240 72ff 	movw	r2, #2047	; 0x7ff
					snake_length++;
90006ca8:	682c      	ldr	r4, [r5, #0]
90006caa:	1c63      	adds	r3, r4, #1
					if( snake_length == MAX_SNAKE_PIECES-1 ) {
90006cac:	4293      	cmp	r3, r2
					snake_length++;
90006cae:	602b      	str	r3, [r5, #0]
					if( snake_length == MAX_SNAKE_PIECES-1 ) {
90006cb0:	f000 81e9 	beq.w	90007086 <_ZN21screen_snake_gameView15handleTickEventEv+0x47e>
					snake_piece *new_piece = (snake_piece*)malloc(sizeof(snake_piece));
90006cb4:	2014      	movs	r0, #20
90006cb6:	f020 ff85 	bl	90027bc4 <malloc>
					if( new_piece == NULL ) {
90006cba:	4680      	mov	r8, r0
90006cbc:	2800      	cmp	r0, #0
90006cbe:	f000 8308 	beq.w	900072d2 <_ZN21screen_snake_gameView15handleTickEventEv+0x6ca>
					snake_pixels[snake_length-1] = Box();
90006cc2:	222c      	movs	r2, #44	; 0x2c
90006cc4:	f8df b27c 	ldr.w	fp, [pc, #636]	; 90006f44 <_ZN21screen_snake_gameView15handleTickEventEv+0x33c>
class Drawable
90006cc8:	2100      	movs	r1, #0
90006cca:	f44f 7380 	mov.w	r3, #256	; 0x100
90006cce:	fb04 f202 	mul.w	r2, r4, r2
90006cd2:	eb0b 0702 	add.w	r7, fp, r2
90006cd6:	84bb      	strh	r3, [r7, #36]	; 0x24
					new_piece->pixel = &snake_pixels[snake_length-1];
90006cd8:	6087      	str	r7, [r0, #8]
class Box : public Widget
90006cda:	20ff      	movs	r0, #255	; 0xff
90006cdc:	e9c7 1101 	strd	r1, r1, [r7, #4]
90006ce0:	e9c7 1103 	strd	r1, r1, [r7, #12]
90006ce4:	e9c7 1105 	strd	r1, r1, [r7, #20]
90006ce8:	e9c7 1107 	strd	r1, r1, [r7, #28]
        setX(x);
90006cec:	f85b 3002 	ldr.w	r3, [fp, r2]
90006cf0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90006cf2:	f887 0026 	strb.w	r0, [r7, #38]	; 0x26
90006cf6:	f10b 0028 	add.w	r0, fp, #40	; 0x28
90006cfa:	5081      	str	r1, [r0, r2]
90006cfc:	4a85      	ldr	r2, [pc, #532]	; (90006f14 <_ZN21screen_snake_gameView15handleTickEventEv+0x30c>)
90006cfe:	4293      	cmp	r3, r2
90006d00:	f040 820a 	bne.w	90007118 <_ZN21screen_snake_gameView15handleTickEventEv+0x510>
        rect.x = x;
90006d04:	80b9      	strh	r1, [r7, #4]
        setY(y);
90006d06:	232c      	movs	r3, #44	; 0x2c
90006d08:	4983      	ldr	r1, [pc, #524]	; (90006f18 <_ZN21screen_snake_gameView15handleTickEventEv+0x310>)
90006d0a:	fb04 f303 	mul.w	r3, r4, r3
90006d0e:	f85b 2003 	ldr.w	r2, [fp, r3]
90006d12:	445b      	add	r3, fp
90006d14:	6b52      	ldr	r2, [r2, #52]	; 0x34
90006d16:	428a      	cmp	r2, r1
90006d18:	f040 82bd 	bne.w	90007296 <_ZN21screen_snake_gameView15handleTickEventEv+0x68e>
        rect.y = y;
90006d1c:	2200      	movs	r2, #0
90006d1e:	80da      	strh	r2, [r3, #6]
        setWidth(width);
90006d20:	222c      	movs	r2, #44	; 0x2c
90006d22:	210a      	movs	r1, #10
90006d24:	4638      	mov	r0, r7
90006d26:	fb04 f202 	mul.w	r2, r4, r2
					tail->next = new_piece;
90006d2a:	4c7c      	ldr	r4, [pc, #496]	; (90006f1c <_ZN21screen_snake_gameView15handleTickEventEv+0x314>)
90006d2c:	f85b 3002 	ldr.w	r3, [fp, r2]
90006d30:	9201      	str	r2, [sp, #4]
90006d32:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90006d34:	4798      	blx	r3
        setHeight(height);
90006d36:	9a01      	ldr	r2, [sp, #4]
90006d38:	4638      	mov	r0, r7
90006d3a:	210a      	movs	r1, #10
90006d3c:	f85b 3002 	ldr.w	r3, [fp, r2]
90006d40:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90006d42:	4798      	blx	r3
					new_piece->pixel->setColor(touchgfx::Color::getColorFromRGB(255, 130, 0));
90006d44:	f8d8 1008 	ldr.w	r1, [r8, #8]
        color = newColor;
90006d48:	4b75      	ldr	r3, [pc, #468]	; (90006f20 <_ZN21screen_snake_gameView15handleTickEventEv+0x318>)
90006d4a:	f109 0004 	add.w	r0, r9, #4
90006d4e:	628b      	str	r3, [r1, #40]	; 0x28
        visible = vis;
90006d50:	2301      	movs	r3, #1
90006d52:	f881 3025 	strb.w	r3, [r1, #37]	; 0x25
90006d56:	f00a f9f7 	bl	90011148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        return parent;
90006d5a:	f8d8 3008 	ldr.w	r3, [r8, #8]
90006d5e:	6958      	ldr	r0, [r3, #20]
					new_piece->pixel->getParent()->invalidate();
90006d60:	6803      	ldr	r3, [r0, #0]
90006d62:	695b      	ldr	r3, [r3, #20]
90006d64:	4798      	blx	r3
					tail->next = new_piece;
90006d66:	6823      	ldr	r3, [r4, #0]
					int food_new_x = pseudo_random(tick) % 480;
90006d68:	f8d9 2000 	ldr.w	r2, [r9]
					tail->next = new_piece;
90006d6c:	f8c3 8000 	str.w	r8, [r3]
					new_piece->prev = tail;
90006d70:	f8c8 3004 	str.w	r3, [r8, #4]
					new_piece->next = NULL;
90006d74:	2300      	movs	r3, #0
90006d76:	486b      	ldr	r0, [pc, #428]	; (90006f24 <_ZN21screen_snake_gameView15handleTickEventEv+0x31c>)
90006d78:	f8c8 3000 	str.w	r3, [r8]
					int food_new_x = pseudo_random(tick) % 480;
90006d7c:	6831      	ldr	r1, [r6, #0]
					tail = new_piece;
90006d7e:	f8c4 8000 	str.w	r8, [r4]
					new_piece->old_y = 0;
90006d82:	e9c8 3303 	strd	r3, r3, [r8, #12]
					int food_new_x = pseudo_random(tick) % 480;
90006d86:	6c13      	ldr	r3, [r2, #64]	; 0x40
90006d88:	4283      	cmp	r3, r0
90006d8a:	f040 827e 	bne.w	9000728a <_ZN21screen_snake_gameView15handleTickEventEv+0x682>
	return (3*snake_length + SNAKE_SPEED*3*tick + 3*tail->pixel->getX() * 3*tail->pixel->getY());
90006d8e:	f8d8 6008 	ldr.w	r6, [r8, #8]
90006d92:	6828      	ldr	r0, [r5, #0]
90006d94:	88b3      	ldrh	r3, [r6, #4]
90006d96:	88f6      	ldrh	r6, [r6, #6]
90006d98:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90006d9c:	fb13 f306 	smulbb	r3, r3, r6
90006da0:	ebc1 1601 	rsb	r6, r1, r1, lsl #4
90006da4:	eb03 03c3 	add.w	r3, r3, r3, lsl #3
90006da8:	eb00 0046 	add.w	r0, r0, r6, lsl #1
90006dac:	4418      	add	r0, r3
					int food_new_x = pseudo_random(tick) % 480;
90006dae:	4b5e      	ldr	r3, [pc, #376]	; (90006f28 <_ZN21screen_snake_gameView15handleTickEventEv+0x320>)
					int food_new_y = pseudo_random2(tick) % 272;
90006db0:	6c52      	ldr	r2, [r2, #68]	; 0x44
					int food_new_x = pseudo_random(tick) % 480;
90006db2:	fb83 6300 	smull	r6, r3, r3, r0
90006db6:	17c6      	asrs	r6, r0, #31
90006db8:	4403      	add	r3, r0
90006dba:	ebc6 2623 	rsb	r6, r6, r3, asr #8
90006dbe:	4b5b      	ldr	r3, [pc, #364]	; (90006f2c <_ZN21screen_snake_gameView15handleTickEventEv+0x324>)
90006dc0:	ebc6 1606 	rsb	r6, r6, r6, lsl #4
90006dc4:	429a      	cmp	r2, r3
90006dc6:	eba0 1646 	sub.w	r6, r0, r6, lsl #5
					int food_new_y = pseudo_random2(tick) % 272;
90006dca:	f040 825b 	bne.w	90007284 <_ZN21screen_snake_gameView15handleTickEventEv+0x67c>
	return (7*snake_length + SNAKE_SPEED*7*tick + 7*tail->pixel->getX() * 7*tail->pixel->getY());
90006dce:	6823      	ldr	r3, [r4, #0]
90006dd0:	6898      	ldr	r0, [r3, #8]
90006dd2:	682b      	ldr	r3, [r5, #0]
90006dd4:	8882      	ldrh	r2, [r0, #4]
90006dd6:	88c0      	ldrh	r0, [r0, #6]
90006dd8:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90006ddc:	fb12 f200 	smulbb	r2, r2, r0
90006de0:	2046      	movs	r0, #70	; 0x46
90006de2:	ebc2 02c2 	rsb	r2, r2, r2, lsl #3
90006de6:	fb00 3301 	mla	r3, r0, r1, r3
90006dea:	ebc2 02c2 	rsb	r2, r2, r2, lsl #3
90006dee:	1898      	adds	r0, r3, r2
					int food_new_y = pseudo_random2(tick) % 272;
90006df0:	4a4f      	ldr	r2, [pc, #316]	; (90006f30 <_ZN21screen_snake_gameView15handleTickEventEv+0x328>)
					food_new_x = food_new_x - (food_new_x % 10);
90006df2:	4950      	ldr	r1, [pc, #320]	; (90006f34 <_ZN21screen_snake_gameView15handleTickEventEv+0x32c>)
					int food_new_y = pseudo_random2(tick) % 272;
90006df4:	fb82 3200 	smull	r3, r2, r2, r0
90006df8:	17c3      	asrs	r3, r0, #31
90006dfa:	ebc3 13e2 	rsb	r3, r3, r2, asr #7
					food_new_x = food_new_x - (food_new_x % 10);
90006dfe:	17f2      	asrs	r2, r6, #31
					int food_new_y = pseudo_random2(tick) % 272;
90006e00:	eb03 1303 	add.w	r3, r3, r3, lsl #4
90006e04:	eba0 1303 	sub.w	r3, r0, r3, lsl #4
					food_new_x = food_new_x - (food_new_x % 10);
90006e08:	fb81 0606 	smull	r0, r6, r1, r6
					food_new_y = food_new_y - (food_new_y % 10);
90006e0c:	fb81 0103 	smull	r0, r1, r1, r3
90006e10:	17db      	asrs	r3, r3, #31
					food_new_x = food_new_x - (food_new_x % 10);
90006e12:	ebc2 02a6 	rsb	r2, r2, r6, asr #2
					food.invalidate();
90006e16:	f509 7086 	add.w	r0, r9, #268	; 0x10c
					food_new_y = food_new_y - (food_new_y % 10);
90006e1a:	ebc3 03a1 	rsb	r3, r3, r1, asr #2
					food_new_x = food_new_x - (food_new_x % 10);
90006e1e:	eb02 0282 	add.w	r2, r2, r2, lsl #2
					food_new_y = food_new_y - (food_new_y % 10);
90006e22:	eb03 0383 	add.w	r3, r3, r3, lsl #2
					food_new_x = food_new_x - (food_new_x % 10);
90006e26:	0052      	lsls	r2, r2, #1
					food_new_y = food_new_y - (food_new_y % 10);
90006e28:	005b      	lsls	r3, r3, #1
					food.setXY(food_new_x, food_new_y);
90006e2a:	f8a9 2110 	strh.w	r2, [r9, #272]	; 0x110
90006e2e:	f8a9 3112 	strh.w	r3, [r9, #274]	; 0x112
					food.invalidate();
90006e32:	f010 fdd8 	bl	900179e6 <_ZNK8touchgfx8Drawable10invalidateEv>
					Unicode::snprintf(lbl_score_valBuffer, LBL_SCORE_VAL_SIZE, "%d", snake_length);
90006e36:	682b      	ldr	r3, [r5, #0]
90006e38:	4a3f      	ldr	r2, [pc, #252]	; (90006f38 <_ZN21screen_snake_gameView15handleTickEventEv+0x330>)
90006e3a:	2120      	movs	r1, #32
90006e3c:	f509 7050 	add.w	r0, r9, #832	; 0x340
90006e40:	f012 fe20 	bl	90019a84 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
					lbl_score_val.invalidate();
90006e44:	f509 702b 	add.w	r0, r9, #684	; 0x2ac
90006e48:	f010 fdcd 	bl	900179e6 <_ZNK8touchgfx8Drawable10invalidateEv>
				head->old_x = head->pixel->getX();
90006e4c:	f8da c000 	ldr.w	ip, [sl]
90006e50:	f8dc 5008 	ldr.w	r5, [ip, #8]
			if( snake_direction == SNAKE_RIGHT )
90006e54:	4b39      	ldr	r3, [pc, #228]	; (90006f3c <_ZN21screen_snake_gameView15handleTickEventEv+0x334>)
90006e56:	f9b3 3000 	ldrsh.w	r3, [r3]
90006e5a:	2b00      	cmp	r3, #0
90006e5c:	f040 80f2 	bne.w	90007044 <_ZN21screen_snake_gameView15handleTickEventEv+0x43c>
        return rect.x;
90006e60:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
        return rect.y;
90006e64:	f9b5 4006 	ldrsh.w	r4, [r5, #6]
        setX(x);
90006e68:	682a      	ldr	r2, [r5, #0]
				head->old_x = head->pixel->getX();
90006e6a:	f8cc 300c 	str.w	r3, [ip, #12]
				head->pixel->setXY(head->old_x+(SNAKE_MOVE), head->old_y);
90006e6e:	330a      	adds	r3, #10
90006e70:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 90006f14 <_ZN21screen_snake_gameView15handleTickEventEv+0x30c>
90006e74:	b219      	sxth	r1, r3
90006e76:	6b13      	ldr	r3, [r2, #48]	; 0x30
				head->old_y = head->pixel->getY();
90006e78:	f8cc 4010 	str.w	r4, [ip, #16]
90006e7c:	4543      	cmp	r3, r8
90006e7e:	f040 81fb 	bne.w	90007278 <_ZN21screen_snake_gameView15handleTickEventEv+0x670>
        rect.x = x;
90006e82:	80a9      	strh	r1, [r5, #4]
        setY(y);
90006e84:	6b53      	ldr	r3, [r2, #52]	; 0x34
90006e86:	4f24      	ldr	r7, [pc, #144]	; (90006f18 <_ZN21screen_snake_gameView15handleTickEventEv+0x310>)
90006e88:	42bb      	cmp	r3, r7
90006e8a:	f040 81f1 	bne.w	90007270 <_ZN21screen_snake_gameView15handleTickEventEv+0x668>
        rect.y = y;
90006e8e:	80ec      	strh	r4, [r5, #6]
				head->pixel->getParent()->invalidate();
90006e90:	f8da 3000 	ldr.w	r3, [sl]
        return parent;
90006e94:	689b      	ldr	r3, [r3, #8]
90006e96:	6958      	ldr	r0, [r3, #20]
90006e98:	6803      	ldr	r3, [r0, #0]
90006e9a:	695b      	ldr	r3, [r3, #20]
90006e9c:	4798      	blx	r3
				snake_piece *piece = head->next;
90006e9e:	f8da 3000 	ldr.w	r3, [sl]
90006ea2:	681c      	ldr	r4, [r3, #0]
				while( piece != NULL )
90006ea4:	b97c      	cbnz	r4, 90006ec6 <_ZN21screen_snake_gameView15handleTickEventEv+0x2be>
90006ea6:	e1eb      	b.n	90007280 <_ZN21screen_snake_gameView15handleTickEventEv+0x678>
        setY(y);
90006ea8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
        rect.x = x;
90006eaa:	80a9      	strh	r1, [r5, #4]
        rect.y = y;
90006eac:	42bb      	cmp	r3, r7
90006eae:	d120      	bne.n	90006ef2 <_ZN21screen_snake_gameView15handleTickEventEv+0x2ea>
        return parent;
90006eb0:	68a3      	ldr	r3, [r4, #8]
        rect.y = y;
90006eb2:	f8a5 9006 	strh.w	r9, [r5, #6]
        return parent;
90006eb6:	6958      	ldr	r0, [r3, #20]
					piece->pixel->getParent()->invalidate();
90006eb8:	6803      	ldr	r3, [r0, #0]
90006eba:	695b      	ldr	r3, [r3, #20]
90006ebc:	4798      	blx	r3
					piece = piece->next;
90006ebe:	6824      	ldr	r4, [r4, #0]
				while( piece != NULL )
90006ec0:	2c00      	cmp	r4, #0
90006ec2:	f000 80d3 	beq.w	9000706c <_ZN21screen_snake_gameView15handleTickEventEv+0x464>
					piece->pixel->setXY(piece->prev->old_x, piece->prev->old_y);
90006ec6:	e9d4 2501 	ldrd	r2, r5, [r4, #4]
					piece->old_x = piece->pixel->getX();
90006eca:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
					piece->old_y = piece->pixel->getY();
90006ece:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
					piece->old_x = piece->pixel->getX();
90006ed2:	60e3      	str	r3, [r4, #12]
        setX(x);
90006ed4:	682b      	ldr	r3, [r5, #0]
					piece->old_y = piece->pixel->getY();
90006ed6:	6121      	str	r1, [r4, #16]
90006ed8:	6b1e      	ldr	r6, [r3, #48]	; 0x30
					piece->pixel->setXY(piece->prev->old_x, piece->prev->old_y);
90006eda:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
90006ede:	4546      	cmp	r6, r8
90006ee0:	f9b2 100c 	ldrsh.w	r1, [r2, #12]
        rect.x = x;
90006ee4:	d0e0      	beq.n	90006ea8 <_ZN21screen_snake_gameView15handleTickEventEv+0x2a0>
        setX(x);
90006ee6:	4628      	mov	r0, r5
90006ee8:	47b0      	blx	r6
        setY(y);
90006eea:	682b      	ldr	r3, [r5, #0]
90006eec:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90006eee:	42bb      	cmp	r3, r7
90006ef0:	d0de      	beq.n	90006eb0 <_ZN21screen_snake_gameView15handleTickEventEv+0x2a8>
90006ef2:	4649      	mov	r1, r9
90006ef4:	4628      	mov	r0, r5
90006ef6:	4798      	blx	r3
        return parent;
90006ef8:	68a3      	ldr	r3, [r4, #8]
90006efa:	e7dc      	b.n	90006eb6 <_ZN21screen_snake_gameView15handleTickEventEv+0x2ae>
90006efc:	2400980c 	.word	0x2400980c
90006f00:	24009808 	.word	0x24009808
90006f04:	cccccccd 	.word	0xcccccccd
90006f08:	19999998 	.word	0x19999998
90006f0c:	19999999 	.word	0x19999999
90006f10:	24000034 	.word	0x24000034
90006f14:	90002295 	.word	0x90002295
90006f18:	90002299 	.word	0x90002299
90006f1c:	2401f814 	.word	0x2401f814
90006f20:	ffff8200 	.word	0xffff8200
90006f24:	90006a1d 	.word	0x90006a1d
90006f28:	88888889 	.word	0x88888889
90006f2c:	90006a4d 	.word	0x90006a4d
90006f30:	78787879 	.word	0x78787879
90006f34:	66666667 	.word	0x66666667
90006f38:	9002b55c 	.word	0x9002b55c
90006f3c:	24000030 	.word	0x24000030
90006f40:	24009810 	.word	0x24009810
90006f44:	24009814 	.word	0x24009814
			else if (head != tail ) {
90006f48:	4c9e      	ldr	r4, [pc, #632]	; (900071c4 <_ZN21screen_snake_gameView15handleTickEventEv+0x5bc>)
90006f4a:	f8da 3000 	ldr.w	r3, [sl]
90006f4e:	6820      	ldr	r0, [r4, #0]
90006f50:	4283      	cmp	r3, r0
90006f52:	d003      	beq.n	90006f5c <_ZN21screen_snake_gameView15handleTickEventEv+0x354>
				free(tail);
90006f54:	f020 fe3e 	bl	90027bd4 <free>
		if( head != NULL ) {
90006f58:	f8da 0000 	ldr.w	r0, [sl]
90006f5c:	b1d0      	cbz	r0, 90006f94 <_ZN21screen_snake_gameView15handleTickEventEv+0x38c>
			tail = head;
90006f5e:	6020      	str	r0, [r4, #0]
			head->next = NULL;
90006f60:	2300      	movs	r3, #0
			head->pixel->setXY(20, 50);
90006f62:	6884      	ldr	r4, [r0, #8]
			head->next = NULL;
90006f64:	6003      	str	r3, [r0, #0]
        setX(x);
90006f66:	6823      	ldr	r3, [r4, #0]
90006f68:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90006f6a:	4542      	cmp	r2, r8
90006f6c:	f040 8082 	bne.w	90007074 <_ZN21screen_snake_gameView15handleTickEventEv+0x46c>
        rect.x = x;
90006f70:	2214      	movs	r2, #20
90006f72:	80a2      	strh	r2, [r4, #4]
        setY(y);
90006f74:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90006f76:	42bb      	cmp	r3, r7
90006f78:	f040 8081 	bne.w	9000707e <_ZN21screen_snake_gameView15handleTickEventEv+0x476>
        rect.y = y;
90006f7c:	2332      	movs	r3, #50	; 0x32
90006f7e:	80e3      	strh	r3, [r4, #6]
			head->pixel->getParent()->invalidate();
90006f80:	f8da 3000 	ldr.w	r3, [sl]
        return parent;
90006f84:	689b      	ldr	r3, [r3, #8]
90006f86:	6958      	ldr	r0, [r3, #20]
90006f88:	6803      	ldr	r3, [r0, #0]
90006f8a:	695b      	ldr	r3, [r3, #20]
90006f8c:	4798      	blx	r3
			snake_length = 1;
90006f8e:	4b8e      	ldr	r3, [pc, #568]	; (900071c8 <_ZN21screen_snake_gameView15handleTickEventEv+0x5c0>)
90006f90:	2201      	movs	r2, #1
90006f92:	601a      	str	r2, [r3, #0]
        visible = vis;
90006f94:	2401      	movs	r4, #1
		btn_back.invalidate();
90006f96:	f509 700a 	add.w	r0, r9, #552	; 0x228
90006f9a:	f889 424d 	strb.w	r4, [r9, #589]	; 0x24d
90006f9e:	f010 fd22 	bl	900179e6 <_ZNK8touchgfx8Drawable10invalidateEv>
		if( tick > 0 ) {
90006fa2:	4b8a      	ldr	r3, [pc, #552]	; (900071cc <_ZN21screen_snake_gameView15handleTickEventEv+0x5c4>)
90006fa4:	681a      	ldr	r2, [r3, #0]
90006fa6:	2a00      	cmp	r2, #0
90006fa8:	dc41      	bgt.n	9000702e <_ZN21screen_snake_gameView15handleTickEventEv+0x426>
}
90006faa:	b003      	add	sp, #12
90006fac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
		if( head != NULL ) {
90006fb0:	f8df a220 	ldr.w	sl, [pc, #544]	; 900071d4 <_ZN21screen_snake_gameView15handleTickEventEv+0x5cc>
90006fb4:	f8da 0000 	ldr.w	r0, [sl]
90006fb8:	2800      	cmp	r0, #0
90006fba:	d0eb      	beq.n	90006f94 <_ZN21screen_snake_gameView15handleTickEventEv+0x38c>
			old = head->next;
90006fbc:	6804      	ldr	r4, [r0, #0]
		while( old != NULL ) {
90006fbe:	f8df 8218 	ldr.w	r8, [pc, #536]	; 900071d8 <_ZN21screen_snake_gameView15handleTickEventEv+0x5d0>
90006fc2:	4f83      	ldr	r7, [pc, #524]	; (900071d0 <_ZN21screen_snake_gameView15handleTickEventEv+0x5c8>)
90006fc4:	2c00      	cmp	r4, #0
90006fc6:	f000 8182 	beq.w	900072ce <_ZN21screen_snake_gameView15handleTickEventEv+0x6c6>
			old->pixel->setXY(-1, -1);
90006fca:	68a5      	ldr	r5, [r4, #8]
        rect.x = x;
90006fcc:	f64f 7bff 	movw	fp, #65535	; 0xffff
        setX(x);
90006fd0:	682b      	ldr	r3, [r5, #0]
90006fd2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90006fd4:	4542      	cmp	r2, r8
90006fd6:	d119      	bne.n	9000700c <_ZN21screen_snake_gameView15handleTickEventEv+0x404>
        setY(y);
90006fd8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
        rect.x = x;
90006fda:	f8a5 b004 	strh.w	fp, [r5, #4]
        rect.y = y;
90006fde:	42bb      	cmp	r3, r7
90006fe0:	d11c      	bne.n	9000701c <_ZN21screen_snake_gameView15handleTickEventEv+0x414>
			old->pixel->setVisible(false);
90006fe2:	68a3      	ldr	r3, [r4, #8]
90006fe4:	f8a5 b006 	strh.w	fp, [r5, #6]
        return parent;
90006fe8:	6958      	ldr	r0, [r3, #20]
        visible = vis;
90006fea:	f883 6025 	strb.w	r6, [r3, #37]	; 0x25
			old->pixel->getParent()->invalidate();
90006fee:	6803      	ldr	r3, [r0, #0]
90006ff0:	695b      	ldr	r3, [r3, #20]
90006ff2:	4798      	blx	r3
			old = old->next;
90006ff4:	6824      	ldr	r4, [r4, #0]
			if( old != NULL ) {
90006ff6:	2c00      	cmp	r4, #0
90006ff8:	d0a6      	beq.n	90006f48 <_ZN21screen_snake_gameView15handleTickEventEv+0x340>
				free(old->prev);
90006ffa:	6860      	ldr	r0, [r4, #4]
90006ffc:	f020 fdea 	bl	90027bd4 <free>
			old->pixel->setXY(-1, -1);
90007000:	68a5      	ldr	r5, [r4, #8]
				old->prev = NULL;
90007002:	6066      	str	r6, [r4, #4]
        setX(x);
90007004:	682b      	ldr	r3, [r5, #0]
90007006:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90007008:	4542      	cmp	r2, r8
9000700a:	d0e5      	beq.n	90006fd8 <_ZN21screen_snake_gameView15handleTickEventEv+0x3d0>
9000700c:	f04f 31ff 	mov.w	r1, #4294967295
90007010:	4628      	mov	r0, r5
90007012:	4790      	blx	r2
        setY(y);
90007014:	682b      	ldr	r3, [r5, #0]
90007016:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90007018:	42bb      	cmp	r3, r7
9000701a:	d0e2      	beq.n	90006fe2 <_ZN21screen_snake_gameView15handleTickEventEv+0x3da>
9000701c:	4628      	mov	r0, r5
9000701e:	f04f 31ff 	mov.w	r1, #4294967295
90007022:	4798      	blx	r3
			old->pixel->setVisible(false);
90007024:	68a3      	ldr	r3, [r4, #8]
        return parent;
90007026:	6958      	ldr	r0, [r3, #20]
        visible = vis;
90007028:	f883 6025 	strb.w	r6, [r3, #37]	; 0x25
        return parent;
9000702c:	e7df      	b.n	90006fee <_ZN21screen_snake_gameView15handleTickEventEv+0x3e6>
			tick = 0;
9000702e:	2200      	movs	r2, #0
			lbl_game_over.invalidate();
90007030:	f509 703e 	add.w	r0, r9, #760	; 0x2f8
        visible = vis;
90007034:	f889 431d 	strb.w	r4, [r9, #797]	; 0x31d
			tick = 0;
90007038:	601a      	str	r2, [r3, #0]
}
9000703a:	b003      	add	sp, #12
9000703c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
			lbl_game_over.invalidate();
90007040:	f010 bcd1 	b.w	900179e6 <_ZNK8touchgfx8Drawable10invalidateEv>
			else if( snake_direction == SNAKE_LEFT )
90007044:	2b02      	cmp	r3, #2
90007046:	d06a      	beq.n	9000711e <_ZN21screen_snake_gameView15handleTickEventEv+0x516>
			else if( snake_direction == SNAKE_UP )
90007048:	2b01      	cmp	r3, #1
9000704a:	f000 80c7 	beq.w	900071dc <_ZN21screen_snake_gameView15handleTickEventEv+0x5d4>
			else if( snake_direction == SNAKE_DOWN )
9000704e:	2b03      	cmp	r3, #3
90007050:	d01c      	beq.n	9000708c <_ZN21screen_snake_gameView15handleTickEventEv+0x484>
        return parent;
90007052:	6968      	ldr	r0, [r5, #20]
			head->pixel->getParent()->invalidate();
90007054:	6803      	ldr	r3, [r0, #0]
90007056:	695b      	ldr	r3, [r3, #20]
}
90007058:	b003      	add	sp, #12
9000705a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
			head->pixel->getParent()->invalidate();
9000705e:	4718      	bx	r3
				head->pixel->getY() > SCREEN_HEIGHT || head->pixel->getY() < 0)
90007060:	88eb      	ldrh	r3, [r5, #6]
90007062:	f5b3 7f83 	cmp.w	r3, #262	; 0x106
90007066:	f63f adf2 	bhi.w	90006c4e <_ZN21screen_snake_gameView15handleTickEventEv+0x46>
9000706a:	e5f2      	b.n	90006c52 <_ZN21screen_snake_gameView15handleTickEventEv+0x4a>
			head->pixel->getParent()->invalidate();
9000706c:	f8da 3000 	ldr.w	r3, [sl]
90007070:	689d      	ldr	r5, [r3, #8]
90007072:	e7ee      	b.n	90007052 <_ZN21screen_snake_gameView15handleTickEventEv+0x44a>
        setX(x);
90007074:	2114      	movs	r1, #20
90007076:	4620      	mov	r0, r4
90007078:	4790      	blx	r2
        setY(y);
9000707a:	6823      	ldr	r3, [r4, #0]
9000707c:	e77a      	b.n	90006f74 <_ZN21screen_snake_gameView15handleTickEventEv+0x36c>
9000707e:	2132      	movs	r1, #50	; 0x32
90007080:	4620      	mov	r0, r4
90007082:	4798      	blx	r3
90007084:	e77c      	b.n	90006f80 <_ZN21screen_snake_gameView15handleTickEventEv+0x378>
						game_started = false;
90007086:	2300      	movs	r3, #0
90007088:	703b      	strb	r3, [r7, #0]
9000708a:	e613      	b.n	90006cb4 <_ZN21screen_snake_gameView15handleTickEventEv+0xac>
        return rect.y;
9000708c:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
        return rect.x;
90007090:	f9b5 1004 	ldrsh.w	r1, [r5, #4]
				head->old_y = head->pixel->getY();
90007094:	f8cc 3010 	str.w	r3, [ip, #16]
				head->pixel->setXY(head->old_x, head->old_y+(SNAKE_MOVE));
90007098:	330a      	adds	r3, #10
9000709a:	f8df 813c 	ldr.w	r8, [pc, #316]	; 900071d8 <_ZN21screen_snake_gameView15handleTickEventEv+0x5d0>
9000709e:	b21c      	sxth	r4, r3
        setX(x);
900070a0:	682b      	ldr	r3, [r5, #0]
				head->old_x = head->pixel->getX();
900070a2:	f8cc 100c 	str.w	r1, [ip, #12]
900070a6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
900070a8:	4542      	cmp	r2, r8
900070aa:	f040 810c 	bne.w	900072c6 <_ZN21screen_snake_gameView15handleTickEventEv+0x6be>
        rect.x = x;
900070ae:	80a9      	strh	r1, [r5, #4]
        setY(y);
900070b0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
900070b2:	4f47      	ldr	r7, [pc, #284]	; (900071d0 <_ZN21screen_snake_gameView15handleTickEventEv+0x5c8>)
900070b4:	42bb      	cmp	r3, r7
900070b6:	f040 8102 	bne.w	900072be <_ZN21screen_snake_gameView15handleTickEventEv+0x6b6>
        rect.y = y;
900070ba:	80ec      	strh	r4, [r5, #6]
				head->pixel->getParent()->invalidate();
900070bc:	f8da 3000 	ldr.w	r3, [sl]
        return parent;
900070c0:	689b      	ldr	r3, [r3, #8]
900070c2:	6958      	ldr	r0, [r3, #20]
900070c4:	6803      	ldr	r3, [r0, #0]
900070c6:	695b      	ldr	r3, [r3, #20]
900070c8:	4798      	blx	r3
				snake_piece *piece = head->next;
900070ca:	f8da 3000 	ldr.w	r3, [sl]
900070ce:	681c      	ldr	r4, [r3, #0]
				while( piece != NULL )
900070d0:	b974      	cbnz	r4, 900070f0 <_ZN21screen_snake_gameView15handleTickEventEv+0x4e8>
900070d2:	e0d5      	b.n	90007280 <_ZN21screen_snake_gameView15handleTickEventEv+0x678>
        rect.x = x;
900070d4:	80a9      	strh	r1, [r5, #4]
        setY(y);
900070d6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
900070d8:	42bb      	cmp	r3, r7
900070da:	d16d      	bne.n	900071b8 <_ZN21screen_snake_gameView15handleTickEventEv+0x5b0>
        return parent;
900070dc:	68a3      	ldr	r3, [r4, #8]
        rect.y = y;
900070de:	f8a5 9006 	strh.w	r9, [r5, #6]
        return parent;
900070e2:	6958      	ldr	r0, [r3, #20]
					piece->pixel->getParent()->invalidate();
900070e4:	6803      	ldr	r3, [r0, #0]
900070e6:	695b      	ldr	r3, [r3, #20]
900070e8:	4798      	blx	r3
					piece = piece->next;
900070ea:	6824      	ldr	r4, [r4, #0]
				while( piece != NULL )
900070ec:	2c00      	cmp	r4, #0
900070ee:	d0bd      	beq.n	9000706c <_ZN21screen_snake_gameView15handleTickEventEv+0x464>
					piece->pixel->setXY(piece->prev->old_x, piece->prev->old_y);
900070f0:	e9d4 2501 	ldrd	r2, r5, [r4, #4]
					piece->old_x = piece->pixel->getX();
900070f4:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
					piece->old_y = piece->pixel->getY();
900070f8:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
					piece->old_x = piece->pixel->getX();
900070fc:	60e3      	str	r3, [r4, #12]
        setX(x);
900070fe:	682b      	ldr	r3, [r5, #0]
					piece->old_y = piece->pixel->getY();
90007100:	6121      	str	r1, [r4, #16]
90007102:	6b1e      	ldr	r6, [r3, #48]	; 0x30
					piece->pixel->setXY(piece->prev->old_x, piece->prev->old_y);
90007104:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
90007108:	4546      	cmp	r6, r8
9000710a:	f9b2 100c 	ldrsh.w	r1, [r2, #12]
        rect.x = x;
9000710e:	d0e1      	beq.n	900070d4 <_ZN21screen_snake_gameView15handleTickEventEv+0x4cc>
        setX(x);
90007110:	4628      	mov	r0, r5
90007112:	47b0      	blx	r6
        setY(y);
90007114:	682b      	ldr	r3, [r5, #0]
90007116:	e7de      	b.n	900070d6 <_ZN21screen_snake_gameView15handleTickEventEv+0x4ce>
        setX(x);
90007118:	4638      	mov	r0, r7
9000711a:	4798      	blx	r3
9000711c:	e5f3      	b.n	90006d06 <_ZN21screen_snake_gameView15handleTickEventEv+0xfe>
9000711e:	682a      	ldr	r2, [r5, #0]
        return rect.x;
90007120:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
90007124:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 900071d8 <_ZN21screen_snake_gameView15handleTickEventEv+0x5d0>
        setX(x);
90007128:	6b16      	ldr	r6, [r2, #48]	; 0x30
        return rect.y;
9000712a:	f9b5 4006 	ldrsh.w	r4, [r5, #6]
9000712e:	4546      	cmp	r6, r8
				head->old_x = head->pixel->getX();
90007130:	f8cc 300c 	str.w	r3, [ip, #12]
				head->pixel->setXY(head->old_x-(SNAKE_MOVE), head->old_y);
90007134:	f1a3 030a 	sub.w	r3, r3, #10
				head->old_y = head->pixel->getY();
90007138:	f8cc 4010 	str.w	r4, [ip, #16]
				head->pixel->setXY(head->old_x-(SNAKE_MOVE), head->old_y);
9000713c:	b219      	sxth	r1, r3
        setX(x);
9000713e:	f040 80b2 	bne.w	900072a6 <_ZN21screen_snake_gameView15handleTickEventEv+0x69e>
        rect.x = x;
90007142:	80a9      	strh	r1, [r5, #4]
        setY(y);
90007144:	6b53      	ldr	r3, [r2, #52]	; 0x34
90007146:	4f22      	ldr	r7, [pc, #136]	; (900071d0 <_ZN21screen_snake_gameView15handleTickEventEv+0x5c8>)
90007148:	42bb      	cmp	r3, r7
9000714a:	f040 80a8 	bne.w	9000729e <_ZN21screen_snake_gameView15handleTickEventEv+0x696>
        rect.y = y;
9000714e:	80ec      	strh	r4, [r5, #6]
				head->pixel->getParent()->invalidate();
90007150:	f8da 3000 	ldr.w	r3, [sl]
        return parent;
90007154:	689b      	ldr	r3, [r3, #8]
90007156:	6958      	ldr	r0, [r3, #20]
90007158:	6803      	ldr	r3, [r0, #0]
9000715a:	695b      	ldr	r3, [r3, #20]
9000715c:	4798      	blx	r3
				snake_piece *piece = head->next;
9000715e:	f8da 3000 	ldr.w	r3, [sl]
90007162:	681c      	ldr	r4, [r3, #0]
				while( piece != NULL )
90007164:	b97c      	cbnz	r4, 90007186 <_ZN21screen_snake_gameView15handleTickEventEv+0x57e>
90007166:	e08b      	b.n	90007280 <_ZN21screen_snake_gameView15handleTickEventEv+0x678>
        rect.x = x;
90007168:	80a9      	strh	r1, [r5, #4]
        setY(y);
9000716a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
9000716c:	42bb      	cmp	r3, r7
9000716e:	d11e      	bne.n	900071ae <_ZN21screen_snake_gameView15handleTickEventEv+0x5a6>
        return parent;
90007170:	68a3      	ldr	r3, [r4, #8]
        rect.y = y;
90007172:	f8a5 9006 	strh.w	r9, [r5, #6]
        return parent;
90007176:	6958      	ldr	r0, [r3, #20]
					piece->pixel->getParent()->invalidate();
90007178:	6803      	ldr	r3, [r0, #0]
9000717a:	695b      	ldr	r3, [r3, #20]
9000717c:	4798      	blx	r3
					piece = piece->next;
9000717e:	6824      	ldr	r4, [r4, #0]
				while( piece != NULL )
90007180:	2c00      	cmp	r4, #0
90007182:	f43f af73 	beq.w	9000706c <_ZN21screen_snake_gameView15handleTickEventEv+0x464>
					piece->pixel->setXY(piece->prev->old_x, piece->prev->old_y);
90007186:	e9d4 2501 	ldrd	r2, r5, [r4, #4]
					piece->old_x = piece->pixel->getX();
9000718a:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
					piece->old_y = piece->pixel->getY();
9000718e:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
					piece->old_x = piece->pixel->getX();
90007192:	60e3      	str	r3, [r4, #12]
        setX(x);
90007194:	682b      	ldr	r3, [r5, #0]
					piece->old_y = piece->pixel->getY();
90007196:	6121      	str	r1, [r4, #16]
90007198:	6b1e      	ldr	r6, [r3, #48]	; 0x30
					piece->pixel->setXY(piece->prev->old_x, piece->prev->old_y);
9000719a:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
9000719e:	4546      	cmp	r6, r8
900071a0:	f9b2 100c 	ldrsh.w	r1, [r2, #12]
        rect.x = x;
900071a4:	d0e0      	beq.n	90007168 <_ZN21screen_snake_gameView15handleTickEventEv+0x560>
        setX(x);
900071a6:	4628      	mov	r0, r5
900071a8:	47b0      	blx	r6
        setY(y);
900071aa:	682b      	ldr	r3, [r5, #0]
900071ac:	e7dd      	b.n	9000716a <_ZN21screen_snake_gameView15handleTickEventEv+0x562>
900071ae:	4649      	mov	r1, r9
900071b0:	4628      	mov	r0, r5
900071b2:	4798      	blx	r3
        return parent;
900071b4:	68a3      	ldr	r3, [r4, #8]
900071b6:	e7de      	b.n	90007176 <_ZN21screen_snake_gameView15handleTickEventEv+0x56e>
        setY(y);
900071b8:	4649      	mov	r1, r9
900071ba:	4628      	mov	r0, r5
900071bc:	4798      	blx	r3
        return parent;
900071be:	68a3      	ldr	r3, [r4, #8]
900071c0:	e78f      	b.n	900070e2 <_ZN21screen_snake_gameView15handleTickEventEv+0x4da>
900071c2:	bf00      	nop
900071c4:	2401f814 	.word	0x2401f814
900071c8:	24000034 	.word	0x24000034
900071cc:	24009808 	.word	0x24009808
900071d0:	90002299 	.word	0x90002299
900071d4:	24009810 	.word	0x24009810
900071d8:	90002295 	.word	0x90002295
        return rect.y;
900071dc:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
        return rect.x;
900071e0:	f9b5 1004 	ldrsh.w	r1, [r5, #4]
				head->old_y = head->pixel->getY();
900071e4:	f8cc 3010 	str.w	r3, [ip, #16]
				head->pixel->setXY(head->old_x, head->old_y-(SNAKE_MOVE));
900071e8:	3b0a      	subs	r3, #10
900071ea:	f8df 80f8 	ldr.w	r8, [pc, #248]	; 900072e4 <_ZN21screen_snake_gameView15handleTickEventEv+0x6dc>
900071ee:	b21c      	sxth	r4, r3
        setX(x);
900071f0:	682b      	ldr	r3, [r5, #0]
				head->old_x = head->pixel->getX();
900071f2:	f8cc 100c 	str.w	r1, [ip, #12]
900071f6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
900071f8:	4542      	cmp	r2, r8
900071fa:	d15c      	bne.n	900072b6 <_ZN21screen_snake_gameView15handleTickEventEv+0x6ae>
        rect.x = x;
900071fc:	80a9      	strh	r1, [r5, #4]
        setY(y);
900071fe:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90007200:	4f36      	ldr	r7, [pc, #216]	; (900072dc <_ZN21screen_snake_gameView15handleTickEventEv+0x6d4>)
90007202:	42bb      	cmp	r3, r7
90007204:	d153      	bne.n	900072ae <_ZN21screen_snake_gameView15handleTickEventEv+0x6a6>
        rect.y = y;
90007206:	80ec      	strh	r4, [r5, #6]
				head->pixel->getParent()->invalidate();
90007208:	f8da 3000 	ldr.w	r3, [sl]
        return parent;
9000720c:	689b      	ldr	r3, [r3, #8]
9000720e:	6958      	ldr	r0, [r3, #20]
90007210:	6803      	ldr	r3, [r0, #0]
90007212:	695b      	ldr	r3, [r3, #20]
90007214:	4798      	blx	r3
				snake_piece *piece = head->next;
90007216:	f8da 3000 	ldr.w	r3, [sl]
9000721a:	681c      	ldr	r4, [r3, #0]
				while( piece != NULL )
9000721c:	b97c      	cbnz	r4, 9000723e <_ZN21screen_snake_gameView15handleTickEventEv+0x636>
9000721e:	e02f      	b.n	90007280 <_ZN21screen_snake_gameView15handleTickEventEv+0x678>
        rect.x = x;
90007220:	80a9      	strh	r1, [r5, #4]
        setY(y);
90007222:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90007224:	42bb      	cmp	r3, r7
90007226:	d11e      	bne.n	90007266 <_ZN21screen_snake_gameView15handleTickEventEv+0x65e>
        return parent;
90007228:	68a3      	ldr	r3, [r4, #8]
        rect.y = y;
9000722a:	f8a5 9006 	strh.w	r9, [r5, #6]
        return parent;
9000722e:	6958      	ldr	r0, [r3, #20]
					piece->pixel->getParent()->invalidate();
90007230:	6803      	ldr	r3, [r0, #0]
90007232:	695b      	ldr	r3, [r3, #20]
90007234:	4798      	blx	r3
					piece = piece->next;
90007236:	6824      	ldr	r4, [r4, #0]
				while( piece != NULL )
90007238:	2c00      	cmp	r4, #0
9000723a:	f43f af17 	beq.w	9000706c <_ZN21screen_snake_gameView15handleTickEventEv+0x464>
					piece->pixel->setXY(piece->prev->old_x, piece->prev->old_y);
9000723e:	e9d4 2501 	ldrd	r2, r5, [r4, #4]
					piece->old_x = piece->pixel->getX();
90007242:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
					piece->old_y = piece->pixel->getY();
90007246:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
					piece->old_x = piece->pixel->getX();
9000724a:	60e3      	str	r3, [r4, #12]
        setX(x);
9000724c:	682b      	ldr	r3, [r5, #0]
					piece->old_y = piece->pixel->getY();
9000724e:	6121      	str	r1, [r4, #16]
90007250:	6b1e      	ldr	r6, [r3, #48]	; 0x30
					piece->pixel->setXY(piece->prev->old_x, piece->prev->old_y);
90007252:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
90007256:	4546      	cmp	r6, r8
90007258:	f9b2 100c 	ldrsh.w	r1, [r2, #12]
        rect.x = x;
9000725c:	d0e0      	beq.n	90007220 <_ZN21screen_snake_gameView15handleTickEventEv+0x618>
        setX(x);
9000725e:	4628      	mov	r0, r5
90007260:	47b0      	blx	r6
        setY(y);
90007262:	682b      	ldr	r3, [r5, #0]
90007264:	e7dd      	b.n	90007222 <_ZN21screen_snake_gameView15handleTickEventEv+0x61a>
90007266:	4649      	mov	r1, r9
90007268:	4628      	mov	r0, r5
9000726a:	4798      	blx	r3
        return parent;
9000726c:	68a3      	ldr	r3, [r4, #8]
9000726e:	e7de      	b.n	9000722e <_ZN21screen_snake_gameView15handleTickEventEv+0x626>
        setY(y);
90007270:	4621      	mov	r1, r4
90007272:	4628      	mov	r0, r5
90007274:	4798      	blx	r3
90007276:	e60b      	b.n	90006e90 <_ZN21screen_snake_gameView15handleTickEventEv+0x288>
        setX(x);
90007278:	4628      	mov	r0, r5
9000727a:	4798      	blx	r3
        setY(y);
9000727c:	682a      	ldr	r2, [r5, #0]
9000727e:	e601      	b.n	90006e84 <_ZN21screen_snake_gameView15handleTickEventEv+0x27c>
			head->pixel->getParent()->invalidate();
90007280:	689d      	ldr	r5, [r3, #8]
90007282:	e6e6      	b.n	90007052 <_ZN21screen_snake_gameView15handleTickEventEv+0x44a>
					int food_new_y = pseudo_random2(tick) % 272;
90007284:	4648      	mov	r0, r9
90007286:	4790      	blx	r2
90007288:	e5b2      	b.n	90006df0 <_ZN21screen_snake_gameView15handleTickEventEv+0x1e8>
					int food_new_x = pseudo_random(tick) % 480;
9000728a:	4648      	mov	r0, r9
9000728c:	4798      	blx	r3
					int food_new_y = pseudo_random2(tick) % 272;
9000728e:	6831      	ldr	r1, [r6, #0]
90007290:	f8d9 2000 	ldr.w	r2, [r9]
90007294:	e58b      	b.n	90006dae <_ZN21screen_snake_gameView15handleTickEventEv+0x1a6>
90007296:	2100      	movs	r1, #0
90007298:	4638      	mov	r0, r7
9000729a:	4790      	blx	r2
9000729c:	e540      	b.n	90006d20 <_ZN21screen_snake_gameView15handleTickEventEv+0x118>
9000729e:	4621      	mov	r1, r4
900072a0:	4628      	mov	r0, r5
900072a2:	4798      	blx	r3
900072a4:	e754      	b.n	90007150 <_ZN21screen_snake_gameView15handleTickEventEv+0x548>
        setX(x);
900072a6:	4628      	mov	r0, r5
900072a8:	47b0      	blx	r6
        setY(y);
900072aa:	682a      	ldr	r2, [r5, #0]
900072ac:	e74a      	b.n	90007144 <_ZN21screen_snake_gameView15handleTickEventEv+0x53c>
900072ae:	4621      	mov	r1, r4
900072b0:	4628      	mov	r0, r5
900072b2:	4798      	blx	r3
900072b4:	e7a8      	b.n	90007208 <_ZN21screen_snake_gameView15handleTickEventEv+0x600>
        setX(x);
900072b6:	4628      	mov	r0, r5
900072b8:	4790      	blx	r2
        setY(y);
900072ba:	682b      	ldr	r3, [r5, #0]
900072bc:	e79f      	b.n	900071fe <_ZN21screen_snake_gameView15handleTickEventEv+0x5f6>
900072be:	4621      	mov	r1, r4
900072c0:	4628      	mov	r0, r5
900072c2:	4798      	blx	r3
900072c4:	e6fa      	b.n	900070bc <_ZN21screen_snake_gameView15handleTickEventEv+0x4b4>
        setX(x);
900072c6:	4628      	mov	r0, r5
900072c8:	4790      	blx	r2
        setY(y);
900072ca:	682b      	ldr	r3, [r5, #0]
900072cc:	e6f0      	b.n	900070b0 <_ZN21screen_snake_gameView15handleTickEventEv+0x4a8>
900072ce:	4c04      	ldr	r4, [pc, #16]	; (900072e0 <_ZN21screen_snake_gameView15handleTickEventEv+0x6d8>)
900072d0:	e645      	b.n	90006f5e <_ZN21screen_snake_gameView15handleTickEventEv+0x356>
						error();
900072d2:	f8d9 3000 	ldr.w	r3, [r9]
900072d6:	4648      	mov	r0, r9
900072d8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
900072da:	e6bd      	b.n	90007058 <_ZN21screen_snake_gameView15handleTickEventEv+0x450>
900072dc:	90002299 	.word	0x90002299
900072e0:	2401f814 	.word	0x2401f814
900072e4:	90002295 	.word	0x90002295

900072e8 <_ZN21screen_snake_gameView5errorEv>:
void screen_snake_gameView::error() {
900072e8:	b500      	push	{lr}
          touchable(false),
900072ea:	f44f 7180 	mov.w	r1, #256	; 0x100
900072ee:	b08d      	sub	sp, #52	; 0x34
        : Widget(), alpha(255), color(0)
900072f0:	4a0f      	ldr	r2, [pc, #60]	; (90007330 <_ZN21screen_snake_gameView5errorEv+0x48>)
          parent(0),
900072f2:	2300      	movs	r3, #0
          touchable(false),
900072f4:	f8ad 1028 	strh.w	r1, [sp, #40]	; 0x28
900072f8:	f04f 0cff 	mov.w	ip, #255	; 0xff
        rect.x = x;
900072fc:	490d      	ldr	r1, [pc, #52]	; (90007334 <_ZN21screen_snake_gameView5errorEv+0x4c>)
900072fe:	3004      	adds	r0, #4
90007300:	9201      	str	r2, [sp, #4]
        color = newColor;
90007302:	4a0d      	ldr	r2, [pc, #52]	; (90007338 <_ZN21screen_snake_gameView5errorEv+0x50>)
        : Widget(), alpha(255), color(0)
90007304:	f88d c02a 	strb.w	ip, [sp, #42]	; 0x2a
        color = newColor;
90007308:	920b      	str	r2, [sp, #44]	; 0x2c
9000730a:	e9cd 3102 	strd	r3, r1, [sp, #8]
9000730e:	a901      	add	r1, sp, #4
          nextSibling(0),
90007310:	e9cd 3306 	strd	r3, r3, [sp, #24]
          cachedAbsX(0),
90007314:	e9cd 3308 	strd	r3, r3, [sp, #32]
        rect.x = x;
90007318:	e9cd 3304 	strd	r3, r3, [sp, #16]
9000731c:	f009 ff14 	bl	90011148 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        return parent;
90007320:	9806      	ldr	r0, [sp, #24]
	error_square.getParent()->invalidate();
90007322:	6803      	ldr	r3, [r0, #0]
90007324:	695b      	ldr	r3, [r3, #20]
90007326:	4798      	blx	r3
}
90007328:	b00d      	add	sp, #52	; 0x34
9000732a:	f85d fb04 	ldr.w	pc, [sp], #4
9000732e:	bf00      	nop
90007330:	9002bd34 	.word	0x9002bd34
90007334:	011001e0 	.word	0x011001e0
90007338:	ffff0000 	.word	0xffff0000

9000733c <_ZN30screen_tictactoe_gamePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~screen_tictactoe_gamePresenter() {}
9000733c:	4770      	bx	lr
9000733e:	bf00      	nop

90007340 <_ZThn4_N30screen_tictactoe_gamePresenterD1Ev>:
90007340:	3804      	subs	r0, #4
90007342:	4770      	bx	lr

90007344 <_ZN30screen_tictactoe_gamePresenter10deactivateEv>:
}

void screen_tictactoe_gamePresenter::activate()
{

}
90007344:	4770      	bx	lr
90007346:	bf00      	nop

90007348 <_ZN30screen_tictactoe_gamePresenterD0Ev>:
90007348:	b510      	push	{r4, lr}
9000734a:	4604      	mov	r4, r0
9000734c:	2110      	movs	r1, #16
9000734e:	f020 fbe7 	bl	90027b20 <_ZdlPvj>
90007352:	4620      	mov	r0, r4
90007354:	bd10      	pop	{r4, pc}
90007356:	bf00      	nop

90007358 <_ZThn4_N30screen_tictactoe_gamePresenterD0Ev>:
90007358:	b500      	push	{lr}
9000735a:	3804      	subs	r0, #4
9000735c:	b083      	sub	sp, #12
9000735e:	2110      	movs	r1, #16
90007360:	9001      	str	r0, [sp, #4]
90007362:	f020 fbdd 	bl	90027b20 <_ZdlPvj>
90007366:	9801      	ldr	r0, [sp, #4]
90007368:	b003      	add	sp, #12
9000736a:	f85d fb04 	ldr.w	pc, [sp], #4
9000736e:	bf00      	nop

90007370 <_ZN30screen_tictactoe_gamePresenterC1ER25screen_tictactoe_gameView>:
    : view(v)
90007370:	4a06      	ldr	r2, [pc, #24]	; (9000738c <_ZN30screen_tictactoe_gamePresenterC1ER25screen_tictactoe_gameView+0x1c>)
90007372:	60c1      	str	r1, [r0, #12]
screen_tictactoe_gamePresenter::screen_tictactoe_gamePresenter(screen_tictactoe_gameView& v)
90007374:	b410      	push	{r4}
90007376:	2400      	movs	r4, #0
90007378:	6084      	str	r4, [r0, #8]
    : view(v)
9000737a:	f102 0408 	add.w	r4, r2, #8
9000737e:	3220      	adds	r2, #32
90007380:	e9c0 4200 	strd	r4, r2, [r0]
}
90007384:	f85d 4b04 	ldr.w	r4, [sp], #4
90007388:	4770      	bx	lr
9000738a:	bf00      	nop
9000738c:	9002b5b4 	.word	0x9002b5b4

90007390 <_ZN25screen_tictactoe_gameView14tearDownScreenEv>:
}

void screen_tictactoe_gameView::tearDownScreen()
{
    screen_tictactoe_gameViewBase::tearDownScreen();
}
90007390:	4770      	bx	lr
90007392:	bf00      	nop

90007394 <_ZN25screen_tictactoe_gameView12is_game_overEii>:
	// 2 -> player 2 wins
	// 3 -> tie

	char symbol;

	if(turn)
90007394:	4b22      	ldr	r3, [pc, #136]	; (90007420 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x8c>)
90007396:	7818      	ldrb	r0, [r3, #0]
	else
		symbol = 'O';

    //check col
    for(short i = 0; i < 3; i++){
        if(board[x][i] != symbol)
90007398:	eb01 0341 	add.w	r3, r1, r1, lsl #1
		symbol = 'O';
9000739c:	2800      	cmp	r0, #0
short screen_tictactoe_gameView::is_game_over(int x, int y) {
9000739e:	b530      	push	{r4, r5, lr}
        if(board[x][i] != symbol)
900073a0:	4d20      	ldr	r5, [pc, #128]	; (90007424 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x90>)
		symbol = 'O';
900073a2:	bf14      	ite	ne
900073a4:	2458      	movne	r4, #88	; 0x58
900073a6:	244f      	moveq	r4, #79	; 0x4f
        if(board[x][i] != symbol)
900073a8:	f815 c003 	ldrb.w	ip, [r5, r3]
900073ac:	442b      	add	r3, r5
900073ae:	45a4      	cmp	ip, r4
900073b0:	d109      	bne.n	900073c6 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x32>
900073b2:	f893 e001 	ldrb.w	lr, [r3, #1]
900073b6:	45e6      	cmp	lr, ip
900073b8:	d105      	bne.n	900073c6 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x32>
900073ba:	789b      	ldrb	r3, [r3, #2]
900073bc:	4573      	cmp	r3, lr
900073be:	d102      	bne.n	900073c6 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x32>
    if(x + y == 3-1){
        for(int i = 0; i < 3; i++){
            if(board[i][(3-1)-i] != symbol)
                break;
            if(i == 3-1){
                if( turn )
900073c0:	f1c0 0002 	rsb	r0, r0, #2

	if( turn_number == 9 )
		return 3;

	return 0;
}
900073c4:	bd30      	pop	{r4, r5, pc}
        if(board[i][y] != symbol)
900073c6:	5cab      	ldrb	r3, [r5, r2]
900073c8:	42a3      	cmp	r3, r4
900073ca:	d107      	bne.n	900073dc <_ZN25screen_tictactoe_gameView12is_game_overEii+0x48>
900073cc:	18ab      	adds	r3, r5, r2
900073ce:	f893 c003 	ldrb.w	ip, [r3, #3]
900073d2:	45a4      	cmp	ip, r4
900073d4:	d102      	bne.n	900073dc <_ZN25screen_tictactoe_gameView12is_game_overEii+0x48>
900073d6:	799b      	ldrb	r3, [r3, #6]
900073d8:	42a3      	cmp	r3, r4
900073da:	d0f1      	beq.n	900073c0 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x2c>
    if(x == y){
900073dc:	4291      	cmp	r1, r2
900073de:	d00a      	beq.n	900073f6 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x62>
    if(x + y == 3-1){
900073e0:	440a      	add	r2, r1
900073e2:	2a02      	cmp	r2, #2
900073e4:	d011      	beq.n	9000740a <_ZN25screen_tictactoe_gameView12is_game_overEii+0x76>
	if( turn_number == 9 )
900073e6:	4b10      	ldr	r3, [pc, #64]	; (90007428 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x94>)
900073e8:	f9b3 3000 	ldrsh.w	r3, [r3]
		return 3;
900073ec:	2b09      	cmp	r3, #9
900073ee:	bf14      	ite	ne
900073f0:	2000      	movne	r0, #0
900073f2:	2003      	moveq	r0, #3
}
900073f4:	bd30      	pop	{r4, r5, pc}
            if(board[i][i] != symbol)
900073f6:	782b      	ldrb	r3, [r5, #0]
900073f8:	42a3      	cmp	r3, r4
900073fa:	d1f1      	bne.n	900073e0 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x4c>
900073fc:	792b      	ldrb	r3, [r5, #4]
900073fe:	42a3      	cmp	r3, r4
90007400:	d1ee      	bne.n	900073e0 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x4c>
90007402:	7a2b      	ldrb	r3, [r5, #8]
90007404:	42a3      	cmp	r3, r4
90007406:	d0db      	beq.n	900073c0 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x2c>
90007408:	e7ea      	b.n	900073e0 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x4c>
            if(board[i][(3-1)-i] != symbol)
9000740a:	78ab      	ldrb	r3, [r5, #2]
9000740c:	42a3      	cmp	r3, r4
9000740e:	d1ea      	bne.n	900073e6 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x52>
90007410:	792b      	ldrb	r3, [r5, #4]
90007412:	42a3      	cmp	r3, r4
90007414:	d1e7      	bne.n	900073e6 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x52>
90007416:	79ab      	ldrb	r3, [r5, #6]
90007418:	42a3      	cmp	r3, r4
9000741a:	d0d1      	beq.n	900073c0 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x2c>
9000741c:	e7e3      	b.n	900073e6 <_ZN25screen_tictactoe_gameView12is_game_overEii+0x52>
9000741e:	bf00      	nop
90007420:	24000038 	.word	0x24000038
90007424:	2401f818 	.word	0x2401f818
90007428:	2401f824 	.word	0x2401f824

9000742c <_ZN25screen_tictactoe_gameViewD1Ev>:

class screen_tictactoe_gameView : public screen_tictactoe_gameViewBase
{
public:
    screen_tictactoe_gameView();
    virtual ~screen_tictactoe_gameView() {}
9000742c:	4b03      	ldr	r3, [pc, #12]	; (9000743c <_ZN25screen_tictactoe_gameViewD1Ev+0x10>)
9000742e:	b510      	push	{r4, lr}
90007430:	4604      	mov	r4, r0
90007432:	6003      	str	r3, [r0, #0]
90007434:	f7fd fde0 	bl	90004ff8 <_ZN29screen_tictactoe_gameViewBaseD1Ev>
90007438:	4620      	mov	r0, r4
9000743a:	bd10      	pop	{r4, pc}
9000743c:	9002b608 	.word	0x9002b608

90007440 <_ZN25screen_tictactoe_gameViewD0Ev>:
90007440:	4b06      	ldr	r3, [pc, #24]	; (9000745c <_ZN25screen_tictactoe_gameViewD0Ev+0x1c>)
90007442:	b510      	push	{r4, lr}
90007444:	4604      	mov	r4, r0
90007446:	6003      	str	r3, [r0, #0]
90007448:	f7fd fdd6 	bl	90004ff8 <_ZN29screen_tictactoe_gameViewBaseD1Ev>
9000744c:	f242 715c 	movw	r1, #10076	; 0x275c
90007450:	4620      	mov	r0, r4
90007452:	f020 fb65 	bl	90027b20 <_ZdlPvj>
90007456:	4620      	mov	r0, r4
90007458:	bd10      	pop	{r4, pc}
9000745a:	bf00      	nop
9000745c:	9002b608 	.word	0x9002b608

90007460 <_ZN25screen_tictactoe_gameViewC1Ev>:
screen_tictactoe_gameView::screen_tictactoe_gameView()
90007460:	b538      	push	{r3, r4, r5, lr}
90007462:	4604      	mov	r4, r0
			board[i][j] = 0;
90007464:	2500      	movs	r5, #0
screen_tictactoe_gameView::screen_tictactoe_gameView()
90007466:	f7fd ff17 	bl	90005298 <_ZN29screen_tictactoe_gameViewBaseC1Ev>
			board[i][j] = 0;
9000746a:	4b13      	ldr	r3, [pc, #76]	; (900074b8 <_ZN25screen_tictactoe_gameViewC1Ev+0x58>)
screen_tictactoe_gameView::screen_tictactoe_gameView()
9000746c:	4913      	ldr	r1, [pc, #76]	; (900074bc <_ZN25screen_tictactoe_gameViewC1Ev+0x5c>)
	lbl_game_over.invalidate();
9000746e:	f604 2024 	addw	r0, r4, #2596	; 0xa24
	game_over = false;
90007472:	4a13      	ldr	r2, [pc, #76]	; (900074c0 <_ZN25screen_tictactoe_gameViewC1Ev+0x60>)
screen_tictactoe_gameView::screen_tictactoe_gameView()
90007474:	6021      	str	r1, [r4, #0]
			board[i][j] = 0;
90007476:	721d      	strb	r5, [r3, #8]
        visible = vis;
90007478:	f884 5a49 	strb.w	r5, [r4, #2633]	; 0xa49
	game_over = false;
9000747c:	7015      	strb	r5, [r2, #0]
			board[i][j] = 0;
9000747e:	e9c3 5500 	strd	r5, r5, [r3]
	lbl_game_over.invalidate();
90007482:	f010 fab0 	bl	900179e6 <_ZNK8touchgfx8Drawable10invalidateEv>
	box_background.invalidate();
90007486:	f604 10f8 	addw	r0, r4, #2552	; 0x9f8
9000748a:	f884 5a1d 	strb.w	r5, [r4, #2589]	; 0xa1d
9000748e:	f010 faaa 	bl	900179e6 <_ZNK8touchgfx8Drawable10invalidateEv>
	lbl_result.invalidate();
90007492:	f604 20a8 	addw	r0, r4, #2728	; 0xaa8
90007496:	f884 5acd 	strb.w	r5, [r4, #2765]	; 0xacd
9000749a:	f010 faa4 	bl	900179e6 <_ZNK8touchgfx8Drawable10invalidateEv>
	btn_back.invalidate();
9000749e:	f604 206c 	addw	r0, r4, #2668	; 0xa6c
900074a2:	f884 5a91 	strb.w	r5, [r4, #2705]	; 0xa91
900074a6:	f010 fa9e 	bl	900179e6 <_ZNK8touchgfx8Drawable10invalidateEv>
	turn_number = 0;
900074aa:	4906      	ldr	r1, [pc, #24]	; (900074c4 <_ZN25screen_tictactoe_gameViewC1Ev+0x64>)
	turn = true;
900074ac:	4b06      	ldr	r3, [pc, #24]	; (900074c8 <_ZN25screen_tictactoe_gameViewC1Ev+0x68>)
900074ae:	2201      	movs	r2, #1
}
900074b0:	4620      	mov	r0, r4
	turn_number = 0;
900074b2:	800d      	strh	r5, [r1, #0]
	turn = true;
900074b4:	701a      	strb	r2, [r3, #0]
}
900074b6:	bd38      	pop	{r3, r4, r5, pc}
900074b8:	2401f818 	.word	0x2401f818
900074bc:	9002b608 	.word	0x9002b608
900074c0:	2401f821 	.word	0x2401f821
900074c4:	2401f824 	.word	0x2401f824
900074c8:	24000038 	.word	0x24000038

900074cc <_ZN25screen_tictactoe_gameView12pos1_clickedEv>:
void screen_tictactoe_gameView::pos1_clicked() {
900074cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	if( !game_over && board[0][0] == 0 ) {
900074d0:	4d2d      	ldr	r5, [pc, #180]	; (90007588 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0xbc>)
900074d2:	782b      	ldrb	r3, [r5, #0]
900074d4:	2b00      	cmp	r3, #0
900074d6:	d12e      	bne.n	90007536 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x6a>
900074d8:	4e2c      	ldr	r6, [pc, #176]	; (9000758c <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0xc0>)
900074da:	7833      	ldrb	r3, [r6, #0]
900074dc:	bb5b      	cbnz	r3, 90007536 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x6a>
		if( turn ) {
900074de:	4f2c      	ldr	r7, [pc, #176]	; (90007590 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0xc4>)
900074e0:	4604      	mov	r4, r0
900074e2:	783b      	ldrb	r3, [r7, #0]
900074e4:	bb4b      	cbnz	r3, 9000753a <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x6e>
			board[0][0] = 'O';
900074e6:	234f      	movs	r3, #79	; 0x4f
			pos1_circle.invalidate();
900074e8:	f500 60dc 	add.w	r0, r0, #1760	; 0x6e0
			board[0][0] = 'O';
900074ec:	7033      	strb	r3, [r6, #0]
900074ee:	2301      	movs	r3, #1
900074f0:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos1_circle.invalidate();
900074f4:	f010 fa77 	bl	900179e6 <_ZNK8touchgfx8Drawable10invalidateEv>
		turn_number++;
900074f8:	4a26      	ldr	r2, [pc, #152]	; (90007594 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0xc8>)
		short temp_result = is_game_over(0, 0);
900074fa:	6823      	ldr	r3, [r4, #0]
900074fc:	f8d3 8050 	ldr.w	r8, [r3, #80]	; 0x50
		turn_number++;
90007500:	8813      	ldrh	r3, [r2, #0]
90007502:	3301      	adds	r3, #1
90007504:	b21b      	sxth	r3, r3
90007506:	8013      	strh	r3, [r2, #0]
		short temp_result = is_game_over(0, 0);
90007508:	4a23      	ldr	r2, [pc, #140]	; (90007598 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0xcc>)
9000750a:	4590      	cmp	r8, r2
9000750c:	d11f      	bne.n	9000754e <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x82>
	if(turn)
9000750e:	7838      	ldrb	r0, [r7, #0]
        if(board[x][i] != symbol)
90007510:	7832      	ldrb	r2, [r6, #0]
		symbol = 'O';
90007512:	2800      	cmp	r0, #0
90007514:	bf14      	ite	ne
90007516:	2458      	movne	r4, #88	; 0x58
90007518:	244f      	moveq	r4, #79	; 0x4f
        if(board[x][i] != symbol)
9000751a:	42a2      	cmp	r2, r4
9000751c:	d12f      	bne.n	9000757e <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0xb2>
9000751e:	7871      	ldrb	r1, [r6, #1]
90007520:	4291      	cmp	r1, r2
90007522:	d120      	bne.n	90007566 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x9a>
90007524:	78b2      	ldrb	r2, [r6, #2]
90007526:	428a      	cmp	r2, r1
90007528:	d11d      	bne.n	90007566 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x9a>
                if( turn )
9000752a:	f1c0 0002 	rsb	r0, r0, #2
			game_over = true;
9000752e:	2201      	movs	r2, #1
			result = temp_result;
90007530:	4b1a      	ldr	r3, [pc, #104]	; (9000759c <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0xd0>)
			game_over = true;
90007532:	702a      	strb	r2, [r5, #0]
			result = temp_result;
90007534:	8018      	strh	r0, [r3, #0]
}
90007536:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			board[0][0] = 'X';
9000753a:	2358      	movs	r3, #88	; 0x58
			pos1_cross.invalidate();
9000753c:	f200 700c 	addw	r0, r0, #1804	; 0x70c
			board[0][0] = 'X';
90007540:	7033      	strb	r3, [r6, #0]
90007542:	2301      	movs	r3, #1
90007544:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos1_cross.invalidate();
90007548:	f010 fa4d 	bl	900179e6 <_ZNK8touchgfx8Drawable10invalidateEv>
9000754c:	e7d4      	b.n	900074f8 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x2c>
		short temp_result = is_game_over(0, 0);
9000754e:	2200      	movs	r2, #0
90007550:	4620      	mov	r0, r4
90007552:	4611      	mov	r1, r2
90007554:	47c0      	blx	r8
		if( temp_result != 0 ) {
90007556:	2800      	cmp	r0, #0
90007558:	d1e9      	bne.n	9000752e <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x62>
		turn = !turn;
9000755a:	783b      	ldrb	r3, [r7, #0]
9000755c:	f083 0301 	eor.w	r3, r3, #1
90007560:	703b      	strb	r3, [r7, #0]
}
90007562:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if(board[i][y] != symbol)
90007566:	78f2      	ldrb	r2, [r6, #3]
90007568:	42a2      	cmp	r2, r4
9000756a:	d102      	bne.n	90007572 <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0xa6>
9000756c:	79b2      	ldrb	r2, [r6, #6]
9000756e:	42a2      	cmp	r2, r4
90007570:	d0db      	beq.n	9000752a <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x5e>
            if(board[i][i] != symbol)
90007572:	7932      	ldrb	r2, [r6, #4]
90007574:	42a2      	cmp	r2, r4
90007576:	d102      	bne.n	9000757e <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0xb2>
90007578:	7a32      	ldrb	r2, [r6, #8]
9000757a:	42a2      	cmp	r2, r4
9000757c:	d0d5      	beq.n	9000752a <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x5e>
	if( turn_number == 9 )
9000757e:	2b09      	cmp	r3, #9
90007580:	d1eb      	bne.n	9000755a <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x8e>
		return 3;
90007582:	2003      	movs	r0, #3
90007584:	e7d3      	b.n	9000752e <_ZN25screen_tictactoe_gameView12pos1_clickedEv+0x62>
90007586:	bf00      	nop
90007588:	2401f821 	.word	0x2401f821
9000758c:	2401f818 	.word	0x2401f818
90007590:	24000038 	.word	0x24000038
90007594:	2401f824 	.word	0x2401f824
90007598:	90007395 	.word	0x90007395
9000759c:	2401f822 	.word	0x2401f822

900075a0 <_ZN25screen_tictactoe_gameView12pos2_clickedEv>:
void screen_tictactoe_gameView::pos2_clicked() {
900075a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	if( !game_over && board[0][1] == 0 ) {
900075a4:	4d2b      	ldr	r5, [pc, #172]	; (90007654 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0xb4>)
900075a6:	782b      	ldrb	r3, [r5, #0]
900075a8:	2b00      	cmp	r3, #0
900075aa:	d12e      	bne.n	9000760a <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0x6a>
900075ac:	4e2a      	ldr	r6, [pc, #168]	; (90007658 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0xb8>)
900075ae:	7873      	ldrb	r3, [r6, #1]
900075b0:	bb5b      	cbnz	r3, 9000760a <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0x6a>
		if( turn ) {
900075b2:	4f2a      	ldr	r7, [pc, #168]	; (9000765c <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0xbc>)
900075b4:	4604      	mov	r4, r0
900075b6:	783b      	ldrb	r3, [r7, #0]
900075b8:	bb4b      	cbnz	r3, 9000760e <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0x6e>
			board[0][1] = 'O';
900075ba:	234f      	movs	r3, #79	; 0x4f
			pos2_circle.invalidate();
900075bc:	f200 7064 	addw	r0, r0, #1892	; 0x764
			board[0][1] = 'O';
900075c0:	7073      	strb	r3, [r6, #1]
900075c2:	2301      	movs	r3, #1
900075c4:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos2_circle.invalidate();
900075c8:	f010 fa0d 	bl	900179e6 <_ZNK8touchgfx8Drawable10invalidateEv>
		turn_number++;
900075cc:	4a24      	ldr	r2, [pc, #144]	; (90007660 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0xc0>)
		short temp_result = is_game_over(0, 1);
900075ce:	6823      	ldr	r3, [r4, #0]
900075d0:	f8d3 8050 	ldr.w	r8, [r3, #80]	; 0x50
		turn_number++;
900075d4:	8813      	ldrh	r3, [r2, #0]
900075d6:	3301      	adds	r3, #1
900075d8:	b21b      	sxth	r3, r3
900075da:	8013      	strh	r3, [r2, #0]
		short temp_result = is_game_over(0, 1);
900075dc:	4a21      	ldr	r2, [pc, #132]	; (90007664 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0xc4>)
900075de:	4590      	cmp	r8, r2
900075e0:	d11f      	bne.n	90007622 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0x82>
	if(turn)
900075e2:	7838      	ldrb	r0, [r7, #0]
        if(board[x][i] != symbol)
900075e4:	7832      	ldrb	r2, [r6, #0]
		symbol = 'O';
900075e6:	2800      	cmp	r0, #0
900075e8:	bf14      	ite	ne
900075ea:	2458      	movne	r4, #88	; 0x58
900075ec:	244f      	moveq	r4, #79	; 0x4f
        if(board[x][i] != symbol)
900075ee:	42a2      	cmp	r2, r4
900075f0:	d123      	bne.n	9000763a <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0x9a>
900075f2:	7871      	ldrb	r1, [r6, #1]
900075f4:	4291      	cmp	r1, r2
900075f6:	d129      	bne.n	9000764c <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0xac>
900075f8:	78b2      	ldrb	r2, [r6, #2]
900075fa:	428a      	cmp	r2, r1
900075fc:	d120      	bne.n	90007640 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0xa0>
            if( turn )
900075fe:	f1c0 0002 	rsb	r0, r0, #2
			game_over = true;
90007602:	2201      	movs	r2, #1
			result = temp_result;
90007604:	4b18      	ldr	r3, [pc, #96]	; (90007668 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0xc8>)
			game_over = true;
90007606:	702a      	strb	r2, [r5, #0]
			result = temp_result;
90007608:	8018      	strh	r0, [r3, #0]
}
9000760a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			board[0][1] = 'X';
9000760e:	2358      	movs	r3, #88	; 0x58
			pos2_cross.invalidate();
90007610:	f500 60e7 	add.w	r0, r0, #1848	; 0x738
			board[0][1] = 'X';
90007614:	7073      	strb	r3, [r6, #1]
90007616:	2301      	movs	r3, #1
90007618:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos2_cross.invalidate();
9000761c:	f010 f9e3 	bl	900179e6 <_ZNK8touchgfx8Drawable10invalidateEv>
90007620:	e7d4      	b.n	900075cc <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0x2c>
		short temp_result = is_game_over(0, 1);
90007622:	2201      	movs	r2, #1
90007624:	4620      	mov	r0, r4
90007626:	2100      	movs	r1, #0
90007628:	47c0      	blx	r8
		if( temp_result != 0 ) {
9000762a:	2800      	cmp	r0, #0
9000762c:	d1e9      	bne.n	90007602 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0x62>
		turn = !turn;
9000762e:	7838      	ldrb	r0, [r7, #0]
90007630:	f080 0001 	eor.w	r0, r0, #1
90007634:	7038      	strb	r0, [r7, #0]
}
90007636:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if(board[i][y] != symbol)
9000763a:	7872      	ldrb	r2, [r6, #1]
9000763c:	42a2      	cmp	r2, r4
9000763e:	d105      	bne.n	9000764c <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0xac>
90007640:	7932      	ldrb	r2, [r6, #4]
90007642:	42a2      	cmp	r2, r4
90007644:	d102      	bne.n	9000764c <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0xac>
90007646:	79f2      	ldrb	r2, [r6, #7]
90007648:	42a2      	cmp	r2, r4
9000764a:	d0d8      	beq.n	900075fe <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0x5e>
	if( turn_number == 9 )
9000764c:	2b09      	cmp	r3, #9
9000764e:	d1ef      	bne.n	90007630 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0x90>
		return 3;
90007650:	2003      	movs	r0, #3
90007652:	e7d6      	b.n	90007602 <_ZN25screen_tictactoe_gameView12pos2_clickedEv+0x62>
90007654:	2401f821 	.word	0x2401f821
90007658:	2401f818 	.word	0x2401f818
9000765c:	24000038 	.word	0x24000038
90007660:	2401f824 	.word	0x2401f824
90007664:	90007395 	.word	0x90007395
90007668:	2401f822 	.word	0x2401f822

9000766c <_ZN25screen_tictactoe_gameView12pos3_clickedEv>:
void screen_tictactoe_gameView::pos3_clicked() {
9000766c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	if( !game_over && board[0][2] == 0 ) {
90007670:	4d2e      	ldr	r5, [pc, #184]	; (9000772c <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0xc0>)
90007672:	782b      	ldrb	r3, [r5, #0]
90007674:	2b00      	cmp	r3, #0
90007676:	d12e      	bne.n	900076d6 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x6a>
90007678:	4e2d      	ldr	r6, [pc, #180]	; (90007730 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0xc4>)
9000767a:	78b3      	ldrb	r3, [r6, #2]
9000767c:	bb5b      	cbnz	r3, 900076d6 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x6a>
		if( turn ) {
9000767e:	4f2d      	ldr	r7, [pc, #180]	; (90007734 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0xc8>)
90007680:	4604      	mov	r4, r0
90007682:	783b      	ldrb	r3, [r7, #0]
90007684:	bb4b      	cbnz	r3, 900076da <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x6e>
			board[0][2] = 'O';
90007686:	234f      	movs	r3, #79	; 0x4f
			pos3_circle.invalidate();
90007688:	f200 70bc 	addw	r0, r0, #1980	; 0x7bc
			board[0][2] = 'O';
9000768c:	70b3      	strb	r3, [r6, #2]
9000768e:	2301      	movs	r3, #1
90007690:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos3_circle.invalidate();
90007694:	f010 f9a7 	bl	900179e6 <_ZNK8touchgfx8Drawable10invalidateEv>
		turn_number++;
90007698:	4a27      	ldr	r2, [pc, #156]	; (90007738 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0xcc>)
		short temp_result = is_game_over(0, 2);
9000769a:	6823      	ldr	r3, [r4, #0]
9000769c:	f8d3 8050 	ldr.w	r8, [r3, #80]	; 0x50
		turn_number++;
900076a0:	8813      	ldrh	r3, [r2, #0]
900076a2:	3301      	adds	r3, #1
900076a4:	b21b      	sxth	r3, r3
900076a6:	8013      	strh	r3, [r2, #0]
		short temp_result = is_game_over(0, 2);
900076a8:	4a24      	ldr	r2, [pc, #144]	; (9000773c <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0xd0>)
900076aa:	4590      	cmp	r8, r2
900076ac:	d11f      	bne.n	900076ee <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x82>
	if(turn)
900076ae:	7838      	ldrb	r0, [r7, #0]
        if(board[x][i] != symbol)
900076b0:	7832      	ldrb	r2, [r6, #0]
		symbol = 'O';
900076b2:	2800      	cmp	r0, #0
900076b4:	bf14      	ite	ne
900076b6:	2458      	movne	r4, #88	; 0x58
900076b8:	244f      	moveq	r4, #79	; 0x4f
        if(board[x][i] != symbol)
900076ba:	42a2      	cmp	r2, r4
900076bc:	d123      	bne.n	90007706 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x9a>
900076be:	7871      	ldrb	r1, [r6, #1]
900076c0:	4291      	cmp	r1, r2
900076c2:	d120      	bne.n	90007706 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x9a>
900076c4:	78b2      	ldrb	r2, [r6, #2]
900076c6:	428a      	cmp	r2, r1
900076c8:	d12c      	bne.n	90007724 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0xb8>
                if( turn )
900076ca:	f1c0 0002 	rsb	r0, r0, #2
			game_over = true;
900076ce:	2201      	movs	r2, #1
			result = temp_result;
900076d0:	4b1b      	ldr	r3, [pc, #108]	; (90007740 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0xd4>)
			game_over = true;
900076d2:	702a      	strb	r2, [r5, #0]
			result = temp_result;
900076d4:	8018      	strh	r0, [r3, #0]
}
900076d6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			board[0][2] = 'X';
900076da:	2358      	movs	r3, #88	; 0x58
			pos3_cross.invalidate();
900076dc:	f500 60f2 	add.w	r0, r0, #1936	; 0x790
			board[0][2] = 'X';
900076e0:	70b3      	strb	r3, [r6, #2]
900076e2:	2301      	movs	r3, #1
900076e4:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos3_cross.invalidate();
900076e8:	f010 f97d 	bl	900179e6 <_ZNK8touchgfx8Drawable10invalidateEv>
900076ec:	e7d4      	b.n	90007698 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x2c>
		short temp_result = is_game_over(0, 2);
900076ee:	2202      	movs	r2, #2
900076f0:	4620      	mov	r0, r4
900076f2:	2100      	movs	r1, #0
900076f4:	47c0      	blx	r8
		if( temp_result != 0 ) {
900076f6:	2800      	cmp	r0, #0
900076f8:	d1e9      	bne.n	900076ce <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x62>
		turn = !turn;
900076fa:	7838      	ldrb	r0, [r7, #0]
900076fc:	f080 0001 	eor.w	r0, r0, #1
90007700:	7038      	strb	r0, [r7, #0]
}
90007702:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if(board[i][y] != symbol)
90007706:	78b2      	ldrb	r2, [r6, #2]
90007708:	42a2      	cmp	r2, r4
9000770a:	d10b      	bne.n	90007724 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0xb8>
9000770c:	7972      	ldrb	r2, [r6, #5]
9000770e:	42a2      	cmp	r2, r4
90007710:	d102      	bne.n	90007718 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0xac>
90007712:	7a32      	ldrb	r2, [r6, #8]
90007714:	42a2      	cmp	r2, r4
90007716:	d0d8      	beq.n	900076ca <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x5e>
            if(board[i][(3-1)-i] != symbol)
90007718:	7932      	ldrb	r2, [r6, #4]
9000771a:	42a2      	cmp	r2, r4
9000771c:	d102      	bne.n	90007724 <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0xb8>
9000771e:	79b2      	ldrb	r2, [r6, #6]
90007720:	42a2      	cmp	r2, r4
90007722:	d0d2      	beq.n	900076ca <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x5e>
	if( turn_number == 9 )
90007724:	2b09      	cmp	r3, #9
90007726:	d1e9      	bne.n	900076fc <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x90>
		return 3;
90007728:	2003      	movs	r0, #3
9000772a:	e7d0      	b.n	900076ce <_ZN25screen_tictactoe_gameView12pos3_clickedEv+0x62>
9000772c:	2401f821 	.word	0x2401f821
90007730:	2401f818 	.word	0x2401f818
90007734:	24000038 	.word	0x24000038
90007738:	2401f824 	.word	0x2401f824
9000773c:	90007395 	.word	0x90007395
90007740:	2401f822 	.word	0x2401f822

90007744 <_ZN25screen_tictactoe_gameView12pos4_clickedEv>:
void screen_tictactoe_gameView::pos4_clicked() {
90007744:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	if( !game_over && board[1][0] == 0 ) {
90007748:	4d2a      	ldr	r5, [pc, #168]	; (900077f4 <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0xb0>)
9000774a:	782b      	ldrb	r3, [r5, #0]
9000774c:	2b00      	cmp	r3, #0
9000774e:	d12e      	bne.n	900077ae <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0x6a>
90007750:	4e29      	ldr	r6, [pc, #164]	; (900077f8 <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0xb4>)
90007752:	78f3      	ldrb	r3, [r6, #3]
90007754:	bb5b      	cbnz	r3, 900077ae <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0x6a>
		if( turn ) {
90007756:	4f29      	ldr	r7, [pc, #164]	; (900077fc <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0xb8>)
90007758:	4604      	mov	r4, r0
9000775a:	783b      	ldrb	r3, [r7, #0]
9000775c:	bb4b      	cbnz	r3, 900077b2 <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0x6e>
			board[1][0] = 'O';
9000775e:	234f      	movs	r3, #79	; 0x4f
			pos4_circle.invalidate();
90007760:	f600 0014 	addw	r0, r0, #2068	; 0x814
			board[1][0] = 'O';
90007764:	70f3      	strb	r3, [r6, #3]
90007766:	2301      	movs	r3, #1
90007768:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos4_circle.invalidate();
9000776c:	f010 f93b 	bl	900179e6 <_ZNK8touchgfx8Drawable10invalidateEv>
		turn_number++;
90007770:	4a23      	ldr	r2, [pc, #140]	; (90007800 <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0xbc>)
		short temp_result = is_game_over(1, 0);
90007772:	6823      	ldr	r3, [r4, #0]
90007774:	f8d3 8050 	ldr.w	r8, [r3, #80]	; 0x50
		turn_number++;
90007778:	8813      	ldrh	r3, [r2, #0]
9000777a:	3301      	adds	r3, #1
9000777c:	b21b      	sxth	r3, r3
9000777e:	8013      	strh	r3, [r2, #0]
		short temp_result = is_game_over(1, 0);
90007780:	4a20      	ldr	r2, [pc, #128]	; (90007804 <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0xc0>)
90007782:	4590      	cmp	r8, r2
90007784:	d11f      	bne.n	900077c6 <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0x82>
	if(turn)
90007786:	7838      	ldrb	r0, [r7, #0]
        if(board[x][i] != symbol)
90007788:	78f2      	ldrb	r2, [r6, #3]
		symbol = 'O';
9000778a:	2800      	cmp	r0, #0
9000778c:	bf14      	ite	ne
9000778e:	2458      	movne	r4, #88	; 0x58
90007790:	244f      	moveq	r4, #79	; 0x4f
        if(board[x][i] != symbol)
90007792:	42a2      	cmp	r2, r4
90007794:	d129      	bne.n	900077ea <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0xa6>
90007796:	7931      	ldrb	r1, [r6, #4]
90007798:	4291      	cmp	r1, r2
9000779a:	d120      	bne.n	900077de <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0x9a>
9000779c:	7972      	ldrb	r2, [r6, #5]
9000779e:	428a      	cmp	r2, r1
900077a0:	d11d      	bne.n	900077de <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0x9a>
            if( turn )
900077a2:	f1c0 0002 	rsb	r0, r0, #2
			game_over = true;
900077a6:	2201      	movs	r2, #1
			result = temp_result;
900077a8:	4b17      	ldr	r3, [pc, #92]	; (90007808 <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0xc4>)
			game_over = true;
900077aa:	702a      	strb	r2, [r5, #0]
			result = temp_result;
900077ac:	8018      	strh	r0, [r3, #0]
}
900077ae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			board[1][0] = 'X';
900077b2:	2358      	movs	r3, #88	; 0x58
			pos4_cross.invalidate();
900077b4:	f500 60fd 	add.w	r0, r0, #2024	; 0x7e8
			board[1][0] = 'X';
900077b8:	70f3      	strb	r3, [r6, #3]
900077ba:	2301      	movs	r3, #1
900077bc:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos4_cross.invalidate();
900077c0:	f010 f911 	bl	900179e6 <_ZNK8touchgfx8Drawable10invalidateEv>
900077c4:	e7d4      	b.n	90007770 <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0x2c>
		short temp_result = is_game_over(1, 0);
900077c6:	2200      	movs	r2, #0
900077c8:	4620      	mov	r0, r4
900077ca:	2101      	movs	r1, #1
900077cc:	47c0      	blx	r8
		if( temp_result != 0 ) {
900077ce:	2800      	cmp	r0, #0
900077d0:	d1e9      	bne.n	900077a6 <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0x62>
		turn = !turn;
900077d2:	7838      	ldrb	r0, [r7, #0]
900077d4:	f080 0001 	eor.w	r0, r0, #1
900077d8:	7038      	strb	r0, [r7, #0]
}
900077da:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if(board[i][y] != symbol)
900077de:	7832      	ldrb	r2, [r6, #0]
900077e0:	42a2      	cmp	r2, r4
900077e2:	d102      	bne.n	900077ea <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0xa6>
900077e4:	79b2      	ldrb	r2, [r6, #6]
900077e6:	42a2      	cmp	r2, r4
900077e8:	d0db      	beq.n	900077a2 <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0x5e>
	if( turn_number == 9 )
900077ea:	2b09      	cmp	r3, #9
900077ec:	d1f2      	bne.n	900077d4 <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0x90>
		return 3;
900077ee:	2003      	movs	r0, #3
900077f0:	e7d9      	b.n	900077a6 <_ZN25screen_tictactoe_gameView12pos4_clickedEv+0x62>
900077f2:	bf00      	nop
900077f4:	2401f821 	.word	0x2401f821
900077f8:	2401f818 	.word	0x2401f818
900077fc:	24000038 	.word	0x24000038
90007800:	2401f824 	.word	0x2401f824
90007804:	90007395 	.word	0x90007395
90007808:	2401f822 	.word	0x2401f822

9000780c <_ZN25screen_tictactoe_gameView12pos5_clickedEv>:
void screen_tictactoe_gameView::pos5_clicked() {
9000780c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	if( !game_over && board[1][1] == 0 ) {
90007810:	4d3c      	ldr	r5, [pc, #240]	; (90007904 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xf8>)
90007812:	782b      	ldrb	r3, [r5, #0]
90007814:	2b00      	cmp	r3, #0
90007816:	d12e      	bne.n	90007876 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x6a>
90007818:	4e3b      	ldr	r6, [pc, #236]	; (90007908 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xfc>)
9000781a:	7933      	ldrb	r3, [r6, #4]
9000781c:	bb5b      	cbnz	r3, 90007876 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x6a>
		if( turn ) {
9000781e:	4f3b      	ldr	r7, [pc, #236]	; (9000790c <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x100>)
90007820:	4604      	mov	r4, r0
90007822:	783b      	ldrb	r3, [r7, #0]
90007824:	bb4b      	cbnz	r3, 9000787a <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x6e>
			board[1][1] = 'O';
90007826:	234f      	movs	r3, #79	; 0x4f
			pos5_circle.invalidate();
90007828:	f600 006c 	addw	r0, r0, #2156	; 0x86c
			board[1][1] = 'O';
9000782c:	7133      	strb	r3, [r6, #4]
9000782e:	2301      	movs	r3, #1
90007830:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos5_circle.invalidate();
90007834:	f010 f8d7 	bl	900179e6 <_ZNK8touchgfx8Drawable10invalidateEv>
		turn_number++;
90007838:	4a35      	ldr	r2, [pc, #212]	; (90007910 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x104>)
		short temp_result = is_game_over(1, 1);
9000783a:	6823      	ldr	r3, [r4, #0]
9000783c:	f8d3 8050 	ldr.w	r8, [r3, #80]	; 0x50
		turn_number++;
90007840:	8813      	ldrh	r3, [r2, #0]
90007842:	3301      	adds	r3, #1
90007844:	b21b      	sxth	r3, r3
90007846:	8013      	strh	r3, [r2, #0]
		short temp_result = is_game_over(1, 1);
90007848:	4a32      	ldr	r2, [pc, #200]	; (90007914 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x108>)
9000784a:	4590      	cmp	r8, r2
9000784c:	d11f      	bne.n	9000788e <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x82>
	if(turn)
9000784e:	783a      	ldrb	r2, [r7, #0]
        if(board[x][i] != symbol)
90007850:	78f1      	ldrb	r1, [r6, #3]
		symbol = 'O';
90007852:	2a00      	cmp	r2, #0
90007854:	bf14      	ite	ne
90007856:	2458      	movne	r4, #88	; 0x58
90007858:	244f      	moveq	r4, #79	; 0x4f
        if(board[x][i] != symbol)
9000785a:	42a1      	cmp	r1, r4
9000785c:	d123      	bne.n	900078a6 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x9a>
9000785e:	7930      	ldrb	r0, [r6, #4]
90007860:	4288      	cmp	r0, r1
90007862:	d120      	bne.n	900078a6 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x9a>
90007864:	7971      	ldrb	r1, [r6, #5]
90007866:	4281      	cmp	r1, r0
90007868:	d136      	bne.n	900078d8 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xcc>
                if( turn )
9000786a:	f1c2 0002 	rsb	r0, r2, #2
			game_over = true;
9000786e:	2201      	movs	r2, #1
			result = temp_result;
90007870:	4b29      	ldr	r3, [pc, #164]	; (90007918 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x10c>)
			game_over = true;
90007872:	702a      	strb	r2, [r5, #0]
			result = temp_result;
90007874:	8018      	strh	r0, [r3, #0]
}
90007876:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			board[1][1] = 'X';
9000787a:	2358      	movs	r3, #88	; 0x58
			pos5_cross.invalidate();
9000787c:	f500 6004 	add.w	r0, r0, #2112	; 0x840
			board[1][1] = 'X';
90007880:	7133      	strb	r3, [r6, #4]
90007882:	2301      	movs	r3, #1
90007884:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos5_cross.invalidate();
90007888:	f010 f8ad 	bl	900179e6 <_ZNK8touchgfx8Drawable10invalidateEv>
9000788c:	e7d4      	b.n	90007838 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x2c>
		short temp_result = is_game_over(1, 1);
9000788e:	2201      	movs	r2, #1
90007890:	4620      	mov	r0, r4
90007892:	4611      	mov	r1, r2
90007894:	47c0      	blx	r8
		if( temp_result != 0 ) {
90007896:	2800      	cmp	r0, #0
90007898:	d1e9      	bne.n	9000786e <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x62>
		turn = !turn;
9000789a:	783b      	ldrb	r3, [r7, #0]
9000789c:	f083 0301 	eor.w	r3, r3, #1
900078a0:	703b      	strb	r3, [r7, #0]
}
900078a2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if(board[i][y] != symbol)
900078a6:	7871      	ldrb	r1, [r6, #1]
900078a8:	42a1      	cmp	r1, r4
900078aa:	d123      	bne.n	900078f4 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xe8>
900078ac:	7931      	ldrb	r1, [r6, #4]
900078ae:	42a1      	cmp	r1, r4
900078b0:	d116      	bne.n	900078e0 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xd4>
900078b2:	79f1      	ldrb	r1, [r6, #7]
900078b4:	42a1      	cmp	r1, r4
900078b6:	d0d8      	beq.n	9000786a <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x5e>
            if(board[i][i] != symbol)
900078b8:	7831      	ldrb	r1, [r6, #0]
900078ba:	42a1      	cmp	r1, r4
900078bc:	d113      	bne.n	900078e6 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xda>
900078be:	7a31      	ldrb	r1, [r6, #8]
900078c0:	42a1      	cmp	r1, r4
900078c2:	d0d2      	beq.n	9000786a <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x5e>
            if(board[i][(3-1)-i] != symbol)
900078c4:	78b1      	ldrb	r1, [r6, #2]
900078c6:	42a1      	cmp	r1, r4
900078c8:	d102      	bne.n	900078d0 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xc4>
900078ca:	79b1      	ldrb	r1, [r6, #6]
900078cc:	42a1      	cmp	r1, r4
900078ce:	d0cc      	beq.n	9000786a <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x5e>
	if( turn_number == 9 )
900078d0:	2b09      	cmp	r3, #9
900078d2:	d1e2      	bne.n	9000789a <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x8e>
		return 3;
900078d4:	2003      	movs	r0, #3
900078d6:	e7ca      	b.n	9000786e <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0x62>
        if(board[i][y] != symbol)
900078d8:	7871      	ldrb	r1, [r6, #1]
900078da:	42a1      	cmp	r1, r4
900078dc:	d0e9      	beq.n	900078b2 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xa6>
900078de:	e7eb      	b.n	900078b8 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xac>
            if(board[i][i] != symbol)
900078e0:	7831      	ldrb	r1, [r6, #0]
900078e2:	42a1      	cmp	r1, r4
900078e4:	d0f4      	beq.n	900078d0 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xc4>
            if(board[i][(3-1)-i] != symbol)
900078e6:	78b1      	ldrb	r1, [r6, #2]
900078e8:	42a1      	cmp	r1, r4
900078ea:	d1f1      	bne.n	900078d0 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xc4>
900078ec:	7931      	ldrb	r1, [r6, #4]
900078ee:	42a1      	cmp	r1, r4
900078f0:	d0eb      	beq.n	900078ca <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xbe>
900078f2:	e7ed      	b.n	900078d0 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xc4>
            if(board[i][i] != symbol)
900078f4:	7831      	ldrb	r1, [r6, #0]
900078f6:	42a1      	cmp	r1, r4
900078f8:	d1f5      	bne.n	900078e6 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xda>
900078fa:	7931      	ldrb	r1, [r6, #4]
900078fc:	42a1      	cmp	r1, r4
900078fe:	d0de      	beq.n	900078be <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xb2>
90007900:	e7e6      	b.n	900078d0 <_ZN25screen_tictactoe_gameView12pos5_clickedEv+0xc4>
90007902:	bf00      	nop
90007904:	2401f821 	.word	0x2401f821
90007908:	2401f818 	.word	0x2401f818
9000790c:	24000038 	.word	0x24000038
90007910:	2401f824 	.word	0x2401f824
90007914:	90007395 	.word	0x90007395
90007918:	2401f822 	.word	0x2401f822

9000791c <_ZN25screen_tictactoe_gameView12pos6_clickedEv>:
void screen_tictactoe_gameView::pos6_clicked() {
9000791c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	if( !game_over && board[1][2] == 0 ) {
90007920:	4d2b      	ldr	r5, [pc, #172]	; (900079d0 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0xb4>)
90007922:	782b      	ldrb	r3, [r5, #0]
90007924:	2b00      	cmp	r3, #0
90007926:	d12e      	bne.n	90007986 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0x6a>
90007928:	4e2a      	ldr	r6, [pc, #168]	; (900079d4 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0xb8>)
9000792a:	7973      	ldrb	r3, [r6, #5]
9000792c:	bb5b      	cbnz	r3, 90007986 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0x6a>
		if( turn ) {
9000792e:	4f2a      	ldr	r7, [pc, #168]	; (900079d8 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0xbc>)
90007930:	4604      	mov	r4, r0
90007932:	783b      	ldrb	r3, [r7, #0]
90007934:	bb4b      	cbnz	r3, 9000798a <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0x6e>
			board[1][2] = 'O';
90007936:	234f      	movs	r3, #79	; 0x4f
			pos6_circle.invalidate();
90007938:	f600 00c4 	addw	r0, r0, #2244	; 0x8c4
			board[1][2] = 'O';
9000793c:	7173      	strb	r3, [r6, #5]
9000793e:	2301      	movs	r3, #1
90007940:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos6_circle.invalidate();
90007944:	f010 f84f 	bl	900179e6 <_ZNK8touchgfx8Drawable10invalidateEv>
		turn_number++;
90007948:	4a24      	ldr	r2, [pc, #144]	; (900079dc <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0xc0>)
		short temp_result = is_game_over(1, 2);
9000794a:	6823      	ldr	r3, [r4, #0]
9000794c:	f8d3 8050 	ldr.w	r8, [r3, #80]	; 0x50
		turn_number++;
90007950:	8813      	ldrh	r3, [r2, #0]
90007952:	3301      	adds	r3, #1
90007954:	b21b      	sxth	r3, r3
90007956:	8013      	strh	r3, [r2, #0]
		short temp_result = is_game_over(1, 2);
90007958:	4a21      	ldr	r2, [pc, #132]	; (900079e0 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0xc4>)
9000795a:	4590      	cmp	r8, r2
9000795c:	d11f      	bne.n	9000799e <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0x82>
	if(turn)
9000795e:	7838      	ldrb	r0, [r7, #0]
        if(board[x][i] != symbol)
90007960:	78f2      	ldrb	r2, [r6, #3]
		symbol = 'O';
90007962:	2800      	cmp	r0, #0
90007964:	bf14      	ite	ne
90007966:	2458      	movne	r4, #88	; 0x58
90007968:	244f      	moveq	r4, #79	; 0x4f
        if(board[x][i] != symbol)
9000796a:	42a2      	cmp	r2, r4
9000796c:	d123      	bne.n	900079b6 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0x9a>
9000796e:	7931      	ldrb	r1, [r6, #4]
90007970:	4291      	cmp	r1, r2
90007972:	d120      	bne.n	900079b6 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0x9a>
90007974:	7972      	ldrb	r2, [r6, #5]
90007976:	428a      	cmp	r2, r1
90007978:	d126      	bne.n	900079c8 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0xac>
            if( turn )
9000797a:	f1c0 0002 	rsb	r0, r0, #2
			game_over = true;
9000797e:	2201      	movs	r2, #1
			result = temp_result;
90007980:	4b18      	ldr	r3, [pc, #96]	; (900079e4 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0xc8>)
			game_over = true;
90007982:	702a      	strb	r2, [r5, #0]
			result = temp_result;
90007984:	8018      	strh	r0, [r3, #0]
}
90007986:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			board[1][2] = 'X';
9000798a:	2358      	movs	r3, #88	; 0x58
			pos6_cross.invalidate();
9000798c:	f600 0098 	addw	r0, r0, #2200	; 0x898
			board[1][2] = 'X';
90007990:	7173      	strb	r3, [r6, #5]
90007992:	2301      	movs	r3, #1
90007994:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos6_cross.invalidate();
90007998:	f010 f825 	bl	900179e6 <_ZNK8touchgfx8Drawable10invalidateEv>
9000799c:	e7d4      	b.n	90007948 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0x2c>
		short temp_result = is_game_over(1, 2);
9000799e:	2202      	movs	r2, #2
900079a0:	4620      	mov	r0, r4
900079a2:	2101      	movs	r1, #1
900079a4:	47c0      	blx	r8
		if( temp_result != 0 ) {
900079a6:	2800      	cmp	r0, #0
900079a8:	d1e9      	bne.n	9000797e <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0x62>
		turn = !turn;
900079aa:	7838      	ldrb	r0, [r7, #0]
900079ac:	f080 0001 	eor.w	r0, r0, #1
900079b0:	7038      	strb	r0, [r7, #0]
}
900079b2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if(board[i][y] != symbol)
900079b6:	78b2      	ldrb	r2, [r6, #2]
900079b8:	42a2      	cmp	r2, r4
900079ba:	d105      	bne.n	900079c8 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0xac>
900079bc:	7972      	ldrb	r2, [r6, #5]
900079be:	42a2      	cmp	r2, r4
900079c0:	d102      	bne.n	900079c8 <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0xac>
900079c2:	7a32      	ldrb	r2, [r6, #8]
900079c4:	42a2      	cmp	r2, r4
900079c6:	d0d8      	beq.n	9000797a <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0x5e>
	if( turn_number == 9 )
900079c8:	2b09      	cmp	r3, #9
900079ca:	d1ef      	bne.n	900079ac <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0x90>
		return 3;
900079cc:	2003      	movs	r0, #3
900079ce:	e7d6      	b.n	9000797e <_ZN25screen_tictactoe_gameView12pos6_clickedEv+0x62>
900079d0:	2401f821 	.word	0x2401f821
900079d4:	2401f818 	.word	0x2401f818
900079d8:	24000038 	.word	0x24000038
900079dc:	2401f824 	.word	0x2401f824
900079e0:	90007395 	.word	0x90007395
900079e4:	2401f822 	.word	0x2401f822

900079e8 <_ZN25screen_tictactoe_gameView12pos7_clickedEv>:
void screen_tictactoe_gameView::pos7_clicked() {
900079e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	if( !game_over && board[2][0] == 0 ) {
900079ec:	4d2d      	ldr	r5, [pc, #180]	; (90007aa4 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0xbc>)
900079ee:	782b      	ldrb	r3, [r5, #0]
900079f0:	2b00      	cmp	r3, #0
900079f2:	d12f      	bne.n	90007a54 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x6c>
900079f4:	4e2c      	ldr	r6, [pc, #176]	; (90007aa8 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0xc0>)
900079f6:	79b3      	ldrb	r3, [r6, #6]
900079f8:	bb63      	cbnz	r3, 90007a54 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x6c>
		if( turn ) {
900079fa:	4f2c      	ldr	r7, [pc, #176]	; (90007aac <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0xc4>)
900079fc:	4604      	mov	r4, r0
900079fe:	783b      	ldrb	r3, [r7, #0]
90007a00:	bb53      	cbnz	r3, 90007a58 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x70>
			board[2][0] = 'O';
90007a02:	234f      	movs	r3, #79	; 0x4f
			pos7_circle.invalidate();
90007a04:	f500 600f 	add.w	r0, r0, #2288	; 0x8f0
			board[2][0] = 'O';
90007a08:	71b3      	strb	r3, [r6, #6]
90007a0a:	2301      	movs	r3, #1
90007a0c:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos7_circle.invalidate();
90007a10:	f00f ffe9 	bl	900179e6 <_ZNK8touchgfx8Drawable10invalidateEv>
		turn_number++;
90007a14:	4a26      	ldr	r2, [pc, #152]	; (90007ab0 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0xc8>)
		short temp_result = is_game_over(2, 0);
90007a16:	6823      	ldr	r3, [r4, #0]
90007a18:	f8d3 8050 	ldr.w	r8, [r3, #80]	; 0x50
		turn_number++;
90007a1c:	8813      	ldrh	r3, [r2, #0]
90007a1e:	3301      	adds	r3, #1
90007a20:	b21b      	sxth	r3, r3
90007a22:	8013      	strh	r3, [r2, #0]
		short temp_result = is_game_over(2, 0);
90007a24:	4a23      	ldr	r2, [pc, #140]	; (90007ab4 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0xcc>)
90007a26:	4590      	cmp	r8, r2
90007a28:	d120      	bne.n	90007a6c <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x84>
	if(turn)
90007a2a:	7838      	ldrb	r0, [r7, #0]
        if(board[x][i] != symbol)
90007a2c:	79b4      	ldrb	r4, [r6, #6]
		symbol = 'O';
90007a2e:	2800      	cmp	r0, #0
90007a30:	bf14      	ite	ne
90007a32:	2258      	movne	r2, #88	; 0x58
90007a34:	224f      	moveq	r2, #79	; 0x4f
        if(board[x][i] != symbol)
90007a36:	42a2      	cmp	r2, r4
90007a38:	d130      	bne.n	90007a9c <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0xb4>
90007a3a:	79f1      	ldrb	r1, [r6, #7]
90007a3c:	4291      	cmp	r1, r2
90007a3e:	d121      	bne.n	90007a84 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x9c>
90007a40:	f896 c008 	ldrb.w	ip, [r6, #8]
90007a44:	458c      	cmp	ip, r1
90007a46:	d11d      	bne.n	90007a84 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x9c>
                if( turn )
90007a48:	f1c0 0002 	rsb	r0, r0, #2
			game_over = true;
90007a4c:	2201      	movs	r2, #1
			result = temp_result;
90007a4e:	4b1a      	ldr	r3, [pc, #104]	; (90007ab8 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0xd0>)
			game_over = true;
90007a50:	702a      	strb	r2, [r5, #0]
			result = temp_result;
90007a52:	8018      	strh	r0, [r3, #0]
}
90007a54:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			board[2][0] = 'X';
90007a58:	2358      	movs	r3, #88	; 0x58
			pos7_cross.invalidate();
90007a5a:	f600 101c 	addw	r0, r0, #2332	; 0x91c
			board[2][0] = 'X';
90007a5e:	71b3      	strb	r3, [r6, #6]
90007a60:	2301      	movs	r3, #1
90007a62:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos7_cross.invalidate();
90007a66:	f00f ffbe 	bl	900179e6 <_ZNK8touchgfx8Drawable10invalidateEv>
90007a6a:	e7d3      	b.n	90007a14 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x2c>
		short temp_result = is_game_over(2, 0);
90007a6c:	2200      	movs	r2, #0
90007a6e:	4620      	mov	r0, r4
90007a70:	2102      	movs	r1, #2
90007a72:	47c0      	blx	r8
		if( temp_result != 0 ) {
90007a74:	2800      	cmp	r0, #0
90007a76:	d1e9      	bne.n	90007a4c <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x64>
		turn = !turn;
90007a78:	7838      	ldrb	r0, [r7, #0]
90007a7a:	f080 0001 	eor.w	r0, r0, #1
90007a7e:	7038      	strb	r0, [r7, #0]
}
90007a80:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if(board[i][y] != symbol)
90007a84:	7831      	ldrb	r1, [r6, #0]
90007a86:	42a1      	cmp	r1, r4
90007a88:	d102      	bne.n	90007a90 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0xa8>
90007a8a:	78f1      	ldrb	r1, [r6, #3]
90007a8c:	42a1      	cmp	r1, r4
90007a8e:	d0db      	beq.n	90007a48 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x60>
            if(board[i][(3-1)-i] != symbol)
90007a90:	78b1      	ldrb	r1, [r6, #2]
90007a92:	4291      	cmp	r1, r2
90007a94:	d102      	bne.n	90007a9c <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0xb4>
90007a96:	7931      	ldrb	r1, [r6, #4]
90007a98:	4291      	cmp	r1, r2
90007a9a:	d0d5      	beq.n	90007a48 <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x60>
	if( turn_number == 9 )
90007a9c:	2b09      	cmp	r3, #9
90007a9e:	d1ec      	bne.n	90007a7a <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x92>
		return 3;
90007aa0:	2003      	movs	r0, #3
90007aa2:	e7d3      	b.n	90007a4c <_ZN25screen_tictactoe_gameView12pos7_clickedEv+0x64>
90007aa4:	2401f821 	.word	0x2401f821
90007aa8:	2401f818 	.word	0x2401f818
90007aac:	24000038 	.word	0x24000038
90007ab0:	2401f824 	.word	0x2401f824
90007ab4:	90007395 	.word	0x90007395
90007ab8:	2401f822 	.word	0x2401f822

90007abc <_ZN25screen_tictactoe_gameView12pos8_clickedEv>:
void screen_tictactoe_gameView::pos8_clicked() {
90007abc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	if( !game_over && board[2][1] == 0 ) {
90007ac0:	4d2b      	ldr	r5, [pc, #172]	; (90007b70 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0xb4>)
90007ac2:	782b      	ldrb	r3, [r5, #0]
90007ac4:	2b00      	cmp	r3, #0
90007ac6:	d12e      	bne.n	90007b26 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x6a>
90007ac8:	4e2a      	ldr	r6, [pc, #168]	; (90007b74 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0xb8>)
90007aca:	79f3      	ldrb	r3, [r6, #7]
90007acc:	bb5b      	cbnz	r3, 90007b26 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x6a>
		if( turn ) {
90007ace:	4f2a      	ldr	r7, [pc, #168]	; (90007b78 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0xbc>)
90007ad0:	4604      	mov	r4, r0
90007ad2:	783b      	ldrb	r3, [r7, #0]
90007ad4:	bb4b      	cbnz	r3, 90007b2a <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x6e>
			board[2][1] = 'O';
90007ad6:	234f      	movs	r3, #79	; 0x4f
			pos8_circle.invalidate();
90007ad8:	f600 1048 	addw	r0, r0, #2376	; 0x948
			board[2][1] = 'O';
90007adc:	71f3      	strb	r3, [r6, #7]
90007ade:	2301      	movs	r3, #1
90007ae0:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos8_circle.invalidate();
90007ae4:	f00f ff7f 	bl	900179e6 <_ZNK8touchgfx8Drawable10invalidateEv>
		turn_number++;
90007ae8:	4a24      	ldr	r2, [pc, #144]	; (90007b7c <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0xc0>)
		short temp_result = is_game_over(2, 1);
90007aea:	6823      	ldr	r3, [r4, #0]
90007aec:	f8d3 8050 	ldr.w	r8, [r3, #80]	; 0x50
		turn_number++;
90007af0:	8813      	ldrh	r3, [r2, #0]
90007af2:	3301      	adds	r3, #1
90007af4:	b21b      	sxth	r3, r3
90007af6:	8013      	strh	r3, [r2, #0]
		short temp_result = is_game_over(2, 1);
90007af8:	4a21      	ldr	r2, [pc, #132]	; (90007b80 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0xc4>)
90007afa:	4590      	cmp	r8, r2
90007afc:	d11f      	bne.n	90007b3e <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x82>
	if(turn)
90007afe:	7838      	ldrb	r0, [r7, #0]
        if(board[x][i] != symbol)
90007b00:	79b2      	ldrb	r2, [r6, #6]
		symbol = 'O';
90007b02:	2800      	cmp	r0, #0
90007b04:	bf14      	ite	ne
90007b06:	2458      	movne	r4, #88	; 0x58
90007b08:	244f      	moveq	r4, #79	; 0x4f
        if(board[x][i] != symbol)
90007b0a:	42a2      	cmp	r2, r4
90007b0c:	d123      	bne.n	90007b56 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x9a>
90007b0e:	79f1      	ldrb	r1, [r6, #7]
90007b10:	4291      	cmp	r1, r2
90007b12:	d120      	bne.n	90007b56 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x9a>
90007b14:	7a32      	ldrb	r2, [r6, #8]
90007b16:	428a      	cmp	r2, r1
90007b18:	d11d      	bne.n	90007b56 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x9a>
            if( turn )
90007b1a:	f1c0 0002 	rsb	r0, r0, #2
			game_over = true;
90007b1e:	2201      	movs	r2, #1
			result = temp_result;
90007b20:	4b18      	ldr	r3, [pc, #96]	; (90007b84 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0xc8>)
			game_over = true;
90007b22:	702a      	strb	r2, [r5, #0]
			result = temp_result;
90007b24:	8018      	strh	r0, [r3, #0]
}
90007b26:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			board[2][1] = 'X';
90007b2a:	2358      	movs	r3, #88	; 0x58
			pos8_cross.invalidate();
90007b2c:	f600 1074 	addw	r0, r0, #2420	; 0x974
			board[2][1] = 'X';
90007b30:	71f3      	strb	r3, [r6, #7]
90007b32:	2301      	movs	r3, #1
90007b34:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos8_cross.invalidate();
90007b38:	f00f ff55 	bl	900179e6 <_ZNK8touchgfx8Drawable10invalidateEv>
90007b3c:	e7d4      	b.n	90007ae8 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x2c>
		short temp_result = is_game_over(2, 1);
90007b3e:	2201      	movs	r2, #1
90007b40:	4620      	mov	r0, r4
90007b42:	2102      	movs	r1, #2
90007b44:	47c0      	blx	r8
		if( temp_result != 0 ) {
90007b46:	2800      	cmp	r0, #0
90007b48:	d1e9      	bne.n	90007b1e <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x62>
		turn = !turn;
90007b4a:	7838      	ldrb	r0, [r7, #0]
90007b4c:	f080 0001 	eor.w	r0, r0, #1
90007b50:	7038      	strb	r0, [r7, #0]
}
90007b52:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if(board[i][y] != symbol)
90007b56:	7872      	ldrb	r2, [r6, #1]
90007b58:	42a2      	cmp	r2, r4
90007b5a:	d105      	bne.n	90007b68 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0xac>
90007b5c:	7932      	ldrb	r2, [r6, #4]
90007b5e:	42a2      	cmp	r2, r4
90007b60:	d102      	bne.n	90007b68 <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0xac>
90007b62:	79f2      	ldrb	r2, [r6, #7]
90007b64:	42a2      	cmp	r2, r4
90007b66:	d0d8      	beq.n	90007b1a <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x5e>
	if( turn_number == 9 )
90007b68:	2b09      	cmp	r3, #9
90007b6a:	d1ef      	bne.n	90007b4c <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x90>
		return 3;
90007b6c:	2003      	movs	r0, #3
90007b6e:	e7d6      	b.n	90007b1e <_ZN25screen_tictactoe_gameView12pos8_clickedEv+0x62>
90007b70:	2401f821 	.word	0x2401f821
90007b74:	2401f818 	.word	0x2401f818
90007b78:	24000038 	.word	0x24000038
90007b7c:	2401f824 	.word	0x2401f824
90007b80:	90007395 	.word	0x90007395
90007b84:	2401f822 	.word	0x2401f822

90007b88 <_ZN25screen_tictactoe_gameView12pos9_clickedEv>:
void screen_tictactoe_gameView::pos9_clicked() {
90007b88:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	if( !game_over && board[2][2] == 0 ) {
90007b8c:	4d30      	ldr	r5, [pc, #192]	; (90007c50 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0xc8>)
90007b8e:	782b      	ldrb	r3, [r5, #0]
90007b90:	2b00      	cmp	r3, #0
90007b92:	d12e      	bne.n	90007bf2 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x6a>
90007b94:	4e2f      	ldr	r6, [pc, #188]	; (90007c54 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0xcc>)
90007b96:	7a33      	ldrb	r3, [r6, #8]
90007b98:	bb5b      	cbnz	r3, 90007bf2 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x6a>
		if( turn ) {
90007b9a:	4f2f      	ldr	r7, [pc, #188]	; (90007c58 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0xd0>)
90007b9c:	4604      	mov	r4, r0
90007b9e:	783b      	ldrb	r3, [r7, #0]
90007ba0:	bb4b      	cbnz	r3, 90007bf6 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x6e>
			board[2][2] = 'O';
90007ba2:	234f      	movs	r3, #79	; 0x4f
			pos9_circle.invalidate();
90007ba4:	f500 601a 	add.w	r0, r0, #2464	; 0x9a0
			board[2][2] = 'O';
90007ba8:	7233      	strb	r3, [r6, #8]
90007baa:	2301      	movs	r3, #1
90007bac:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos9_circle.invalidate();
90007bb0:	f00f ff19 	bl	900179e6 <_ZNK8touchgfx8Drawable10invalidateEv>
		turn_number++;
90007bb4:	4a29      	ldr	r2, [pc, #164]	; (90007c5c <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0xd4>)
		short temp_result = is_game_over(2, 2);
90007bb6:	6823      	ldr	r3, [r4, #0]
90007bb8:	f8d3 8050 	ldr.w	r8, [r3, #80]	; 0x50
		turn_number++;
90007bbc:	8813      	ldrh	r3, [r2, #0]
90007bbe:	3301      	adds	r3, #1
90007bc0:	b21b      	sxth	r3, r3
90007bc2:	8013      	strh	r3, [r2, #0]
		short temp_result = is_game_over(2, 2);
90007bc4:	4a26      	ldr	r2, [pc, #152]	; (90007c60 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0xd8>)
90007bc6:	4590      	cmp	r8, r2
90007bc8:	d11f      	bne.n	90007c0a <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x82>
	if(turn)
90007bca:	7838      	ldrb	r0, [r7, #0]
        if(board[x][i] != symbol)
90007bcc:	79b2      	ldrb	r2, [r6, #6]
		symbol = 'O';
90007bce:	2800      	cmp	r0, #0
90007bd0:	bf14      	ite	ne
90007bd2:	2458      	movne	r4, #88	; 0x58
90007bd4:	244f      	moveq	r4, #79	; 0x4f
        if(board[x][i] != symbol)
90007bd6:	42a2      	cmp	r2, r4
90007bd8:	d123      	bne.n	90007c22 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x9a>
90007bda:	79f1      	ldrb	r1, [r6, #7]
90007bdc:	4291      	cmp	r1, r2
90007bde:	d120      	bne.n	90007c22 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x9a>
90007be0:	7a32      	ldrb	r2, [r6, #8]
90007be2:	428a      	cmp	r2, r1
90007be4:	d11d      	bne.n	90007c22 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x9a>
                if( turn )
90007be6:	f1c0 0002 	rsb	r0, r0, #2
			game_over = true;
90007bea:	2201      	movs	r2, #1
			result = temp_result;
90007bec:	4b1d      	ldr	r3, [pc, #116]	; (90007c64 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0xdc>)
			game_over = true;
90007bee:	702a      	strb	r2, [r5, #0]
			result = temp_result;
90007bf0:	8018      	strh	r0, [r3, #0]
}
90007bf2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			board[2][2] = 'X';
90007bf6:	2358      	movs	r3, #88	; 0x58
			pos9_cross.invalidate();
90007bf8:	f600 10cc 	addw	r0, r0, #2508	; 0x9cc
			board[2][2] = 'X';
90007bfc:	7233      	strb	r3, [r6, #8]
90007bfe:	2301      	movs	r3, #1
90007c00:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
			pos9_cross.invalidate();
90007c04:	f00f feef 	bl	900179e6 <_ZNK8touchgfx8Drawable10invalidateEv>
90007c08:	e7d4      	b.n	90007bb4 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x2c>
		short temp_result = is_game_over(2, 2);
90007c0a:	2202      	movs	r2, #2
90007c0c:	4620      	mov	r0, r4
90007c0e:	4611      	mov	r1, r2
90007c10:	47c0      	blx	r8
		if( temp_result != 0 ) {
90007c12:	2800      	cmp	r0, #0
90007c14:	d1e9      	bne.n	90007bea <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x62>
		turn = !turn;
90007c16:	783b      	ldrb	r3, [r7, #0]
90007c18:	f083 0301 	eor.w	r3, r3, #1
90007c1c:	703b      	strb	r3, [r7, #0]
}
90007c1e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if(board[i][y] != symbol)
90007c22:	78b2      	ldrb	r2, [r6, #2]
90007c24:	42a2      	cmp	r2, r4
90007c26:	d105      	bne.n	90007c34 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0xac>
90007c28:	7972      	ldrb	r2, [r6, #5]
90007c2a:	42a2      	cmp	r2, r4
90007c2c:	d102      	bne.n	90007c34 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0xac>
90007c2e:	7a32      	ldrb	r2, [r6, #8]
90007c30:	42a2      	cmp	r2, r4
90007c32:	d0d8      	beq.n	90007be6 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x5e>
            if(board[i][i] != symbol)
90007c34:	7832      	ldrb	r2, [r6, #0]
90007c36:	42a2      	cmp	r2, r4
90007c38:	d105      	bne.n	90007c46 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0xbe>
90007c3a:	7932      	ldrb	r2, [r6, #4]
90007c3c:	42a2      	cmp	r2, r4
90007c3e:	d102      	bne.n	90007c46 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0xbe>
90007c40:	7a32      	ldrb	r2, [r6, #8]
90007c42:	42a2      	cmp	r2, r4
90007c44:	d0cf      	beq.n	90007be6 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x5e>
	if( turn_number == 9 )
90007c46:	2b09      	cmp	r3, #9
90007c48:	d1e5      	bne.n	90007c16 <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x8e>
		return 3;
90007c4a:	2003      	movs	r0, #3
90007c4c:	e7cd      	b.n	90007bea <_ZN25screen_tictactoe_gameView12pos9_clickedEv+0x62>
90007c4e:	bf00      	nop
90007c50:	2401f821 	.word	0x2401f821
90007c54:	2401f818 	.word	0x2401f818
90007c58:	24000038 	.word	0x24000038
90007c5c:	2401f824 	.word	0x2401f824
90007c60:	90007395 	.word	0x90007395
90007c64:	2401f822 	.word	0x2401f822

90007c68 <_ZN25screen_tictactoe_gameView15handleTickEventEv>:
void screen_tictactoe_gameView::handleTickEvent() {
90007c68:	b538      	push	{r3, r4, r5, lr}
	if( game_over ) {
90007c6a:	4b1f      	ldr	r3, [pc, #124]	; (90007ce8 <_ZN25screen_tictactoe_gameView15handleTickEventEv+0x80>)
90007c6c:	781b      	ldrb	r3, [r3, #0]
90007c6e:	b903      	cbnz	r3, 90007c72 <_ZN25screen_tictactoe_gameView15handleTickEventEv+0xa>
}
90007c70:	bd38      	pop	{r3, r4, r5, pc}
90007c72:	4604      	mov	r4, r0
90007c74:	2501      	movs	r5, #1
		btn_back.invalidate();
90007c76:	f600 206c 	addw	r0, r0, #2668	; 0xa6c
90007c7a:	f884 5a91 	strb.w	r5, [r4, #2705]	; 0xa91
90007c7e:	f00f feb2 	bl	900179e6 <_ZNK8touchgfx8Drawable10invalidateEv>
		box_background.invalidate();
90007c82:	f604 10f8 	addw	r0, r4, #2552	; 0x9f8
90007c86:	f884 5a1d 	strb.w	r5, [r4, #2589]	; 0xa1d
90007c8a:	f00f feac 	bl	900179e6 <_ZNK8touchgfx8Drawable10invalidateEv>
		lbl_game_over.invalidate();
90007c8e:	f604 2024 	addw	r0, r4, #2596	; 0xa24
90007c92:	f884 5a49 	strb.w	r5, [r4, #2633]	; 0xa49
90007c96:	f00f fea6 	bl	900179e6 <_ZNK8touchgfx8Drawable10invalidateEv>
		if( result == 1 )
90007c9a:	4b14      	ldr	r3, [pc, #80]	; (90007cec <_ZN25screen_tictactoe_gameView15handleTickEventEv+0x84>)
90007c9c:	f884 5acd 	strb.w	r5, [r4, #2765]	; 0xacd
90007ca0:	f9b3 3000 	ldrsh.w	r3, [r3]
90007ca4:	42ab      	cmp	r3, r5
90007ca6:	d009      	beq.n	90007cbc <_ZN25screen_tictactoe_gameView15handleTickEventEv+0x54>
		else if( result == 2 )
90007ca8:	2b02      	cmp	r3, #2
90007caa:	d00e      	beq.n	90007cca <_ZN25screen_tictactoe_gameView15handleTickEventEv+0x62>
		else if( result == 3 )
90007cac:	2b03      	cmp	r3, #3
90007cae:	d013      	beq.n	90007cd8 <_ZN25screen_tictactoe_gameView15handleTickEventEv+0x70>
		lbl_result.invalidate();
90007cb0:	f604 20a8 	addw	r0, r4, #2728	; 0xaa8
}
90007cb4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		lbl_result.invalidate();
90007cb8:	f00f be95 	b.w	900179e6 <_ZNK8touchgfx8Drawable10invalidateEv>
			Unicode::snprintf(lbl_resultBuffer, LBL_RESULT_SIZE, "Player 1 wins");
90007cbc:	4a0c      	ldr	r2, [pc, #48]	; (90007cf0 <_ZN25screen_tictactoe_gameView15handleTickEventEv+0x88>)
90007cbe:	2114      	movs	r1, #20
90007cc0:	f604 20f4 	addw	r0, r4, #2804	; 0xaf4
90007cc4:	f011 fede 	bl	90019a84 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
90007cc8:	e7f2      	b.n	90007cb0 <_ZN25screen_tictactoe_gameView15handleTickEventEv+0x48>
			Unicode::snprintf(lbl_resultBuffer, LBL_RESULT_SIZE, "Player 2 wins");
90007cca:	4a0a      	ldr	r2, [pc, #40]	; (90007cf4 <_ZN25screen_tictactoe_gameView15handleTickEventEv+0x8c>)
90007ccc:	2114      	movs	r1, #20
90007cce:	f604 20f4 	addw	r0, r4, #2804	; 0xaf4
90007cd2:	f011 fed7 	bl	90019a84 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
90007cd6:	e7eb      	b.n	90007cb0 <_ZN25screen_tictactoe_gameView15handleTickEventEv+0x48>
			Unicode::snprintf(lbl_resultBuffer, LBL_RESULT_SIZE, "Tie");
90007cd8:	4a07      	ldr	r2, [pc, #28]	; (90007cf8 <_ZN25screen_tictactoe_gameView15handleTickEventEv+0x90>)
90007cda:	2114      	movs	r1, #20
90007cdc:	f604 20f4 	addw	r0, r4, #2804	; 0xaf4
90007ce0:	f011 fed0 	bl	90019a84 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
90007ce4:	e7e4      	b.n	90007cb0 <_ZN25screen_tictactoe_gameView15handleTickEventEv+0x48>
90007ce6:	bf00      	nop
90007ce8:	2401f821 	.word	0x2401f821
90007cec:	2401f822 	.word	0x2401f822
90007cf0:	9002b5dc 	.word	0x9002b5dc
90007cf4:	9002b5ec 	.word	0x9002b5ec
90007cf8:	9002b5fc 	.word	0x9002b5fc

90007cfc <_ZN25screen_tictactoe_gameView11setupScreenEv>:
    screen_tictactoe_gameViewBase::setupScreen();
90007cfc:	f7fd b900 	b.w	90004f00 <_ZN29screen_tictactoe_gameViewBase11setupScreenEv>

90007d00 <FT5336_GetCapabilities>:
{
  /* Prevent unused argument(s) compilation warning */
  (void)(pObj);

  /* Store component's capabilities */
  Capabilities->MultiTouch = 1;
90007d00:	f240 1c01 	movw	ip, #257	; 0x101
  Capabilities->Gesture    = 1;
  Capabilities->MaxTouch   = FT5336_MAX_NB_TOUCH;
90007d04:	2005      	movs	r0, #5
  Capabilities->MaxXl      = FT5336_MAX_X_LENGTH;
90007d06:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
  Capabilities->MaxYl      = FT5336_MAX_Y_LENGTH;
90007d0a:	f44f 7388 	mov.w	r3, #272	; 0x110
  Capabilities->MaxTouch   = FT5336_MAX_NB_TOUCH;
90007d0e:	7088      	strb	r0, [r1, #2]

  return FT5336_OK;
}
90007d10:	2000      	movs	r0, #0
  Capabilities->MultiTouch = 1;
90007d12:	f8a1 c000 	strh.w	ip, [r1]
  Capabilities->MaxYl      = FT5336_MAX_Y_LENGTH;
90007d16:	e9c1 2301 	strd	r2, r3, [r1, #4]
}
90007d1a:	4770      	bx	lr

90007d1c <FT5336_DeInit>:
  */
int32_t FT5336_DeInit(FT5336_Object_t *pObj)
{
  int32_t ret = FT5336_OK;

  if(pObj->IsInitialized == 1U)
90007d1c:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
90007d20:	2b01      	cmp	r3, #1
90007d22:	d102      	bne.n	90007d2a <FT5336_DeInit+0xe>
  {
    pObj->IsInitialized = 0;
90007d24:	2300      	movs	r3, #0
90007d26:	f880 3024 	strb.w	r3, [r0, #36]	; 0x24
  }

  return ret;
}
90007d2a:	2000      	movs	r0, #0
90007d2c:	4770      	bx	lr
90007d2e:	bf00      	nop

90007d30 <FT5336_ITStatus>:
  /* Prevent unused argument(s) compilation warning */
  (void)(pObj);

  /* Always return FT5336_OK as feature not applicable to FT5336 */
  return FT5336_OK;
}
90007d30:	2000      	movs	r0, #0
90007d32:	4770      	bx	lr

90007d34 <ReadRegWrap>:
  * @param  pData: The target register value to be written
  * @param  Length: buffer size to be written
  * @retval error status
  */
static int32_t ReadRegWrap(void *handle, uint8_t Reg, uint8_t* pData, uint16_t Length)
{
90007d34:	b410      	push	{r4}
  FT5336_Object_t *pObj = (FT5336_Object_t *)handle;

  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
90007d36:	6904      	ldr	r4, [r0, #16]
90007d38:	8900      	ldrh	r0, [r0, #8]
90007d3a:	46a4      	mov	ip, r4
}
90007d3c:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
90007d40:	4760      	bx	ip
90007d42:	bf00      	nop

90007d44 <WriteRegWrap>:
  * @param  pData: The target register value to be written
  * @param  Length: buffer size to be written
  * @retval error status
  */
static int32_t WriteRegWrap(void *handle, uint8_t Reg, uint8_t* pData, uint16_t Length)
{
90007d44:	b410      	push	{r4}
  FT5336_Object_t *pObj = (FT5336_Object_t *)handle;

  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
90007d46:	68c4      	ldr	r4, [r0, #12]
90007d48:	8900      	ldrh	r0, [r0, #8]
90007d4a:	46a4      	mov	ip, r4
}
90007d4c:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
90007d50:	4760      	bx	ip
90007d52:	bf00      	nop

90007d54 <FT5336_GestureConfig>:
{
90007d54:	b570      	push	{r4, r5, r6, lr}
  ret = ft5336_radian_value(&pObj->Ctx, (uint8_t)GestureInit->Radian);
90007d56:	f100 0518 	add.w	r5, r0, #24
{
90007d5a:	460e      	mov	r6, r1
  ret = ft5336_radian_value(&pObj->Ctx, (uint8_t)GestureInit->Radian);
90007d5c:	7809      	ldrb	r1, [r1, #0]
90007d5e:	4628      	mov	r0, r5
90007d60:	f000 f96c 	bl	9000803c <ft5336_radian_value>
90007d64:	4604      	mov	r4, r0
  ret += ft5336_offset_left_right(&pObj->Ctx, (uint8_t)GestureInit->OffsetLeftRight);
90007d66:	7931      	ldrb	r1, [r6, #4]
90007d68:	4628      	mov	r0, r5
90007d6a:	f000 f975 	bl	90008058 <ft5336_offset_left_right>
90007d6e:	4404      	add	r4, r0
  ret += ft5336_offset_up_down(&pObj->Ctx, (uint8_t)GestureInit->OffsetUpDown);
90007d70:	7a31      	ldrb	r1, [r6, #8]
90007d72:	4628      	mov	r0, r5
90007d74:	f000 f97e 	bl	90008074 <ft5336_offset_up_down>
90007d78:	4404      	add	r4, r0
  ret += ft5336_disatnce_left_right(&pObj->Ctx, (uint8_t)GestureInit->DistanceLeftRight);
90007d7a:	7b31      	ldrb	r1, [r6, #12]
90007d7c:	4628      	mov	r0, r5
90007d7e:	f000 f987 	bl	90008090 <ft5336_disatnce_left_right>
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
90007d82:	7c31      	ldrb	r1, [r6, #16]
  ret += ft5336_disatnce_left_right(&pObj->Ctx, (uint8_t)GestureInit->DistanceLeftRight);
90007d84:	4404      	add	r4, r0
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
90007d86:	4628      	mov	r0, r5
90007d88:	f000 f990 	bl	900080ac <ft5336_distance_up_down>
90007d8c:	4603      	mov	r3, r0
  ret += ft5336_distance_zoom(&pObj->Ctx, (uint8_t)GestureInit->DistanceZoom);
90007d8e:	7d31      	ldrb	r1, [r6, #20]
90007d90:	4628      	mov	r0, r5
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
90007d92:	441c      	add	r4, r3
  ret += ft5336_distance_zoom(&pObj->Ctx, (uint8_t)GestureInit->DistanceZoom);
90007d94:	f000 f998 	bl	900080c8 <ft5336_distance_zoom>
  if(ret != FT5336_OK)
90007d98:	42c4      	cmn	r4, r0
}
90007d9a:	bf14      	ite	ne
90007d9c:	f04f 30ff 	movne.w	r0, #4294967295
90007da0:	2000      	moveq	r0, #0
90007da2:	bd70      	pop	{r4, r5, r6, pc}

90007da4 <FT5336_ReadID>:
  return ft5336_chip_id(&pObj->Ctx, (uint8_t *)Id);
90007da4:	3018      	adds	r0, #24
90007da6:	f000 b9ab 	b.w	90008100 <ft5336_chip_id>
90007daa:	bf00      	nop

90007dac <FT5336_GetState>:
{
90007dac:	b530      	push	{r4, r5, lr}
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
90007dae:	f100 0518 	add.w	r5, r0, #24
{
90007db2:	b083      	sub	sp, #12
90007db4:	460c      	mov	r4, r1
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
90007db6:	4628      	mov	r0, r5
90007db8:	a901      	add	r1, sp, #4
90007dba:	f000 f931 	bl	90008020 <ft5336_td_status>
90007dbe:	bb10      	cbnz	r0, 90007e06 <FT5336_GetState+0x5a>
    if(nb_touch > FT5336_MAX_NB_TOUCH)
90007dc0:	f89d 3004 	ldrb.w	r3, [sp, #4]
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
90007dc4:	2b05      	cmp	r3, #5
90007dc6:	bf94      	ite	ls
90007dc8:	4619      	movls	r1, r3
90007dca:	2100      	movhi	r1, #0
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
90007dcc:	2304      	movs	r3, #4
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
90007dce:	6021      	str	r1, [r4, #0]
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
90007dd0:	4628      	mov	r0, r5
90007dd2:	2103      	movs	r1, #3
90007dd4:	eb0d 0203 	add.w	r2, sp, r3
90007dd8:	f000 f910 	bl	90007ffc <ft5336_read_reg>
90007ddc:	b9b0      	cbnz	r0, 90007e0c <FT5336_GetState+0x60>
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
90007dde:	f89d 2004 	ldrb.w	r2, [sp, #4]
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
90007de2:	f89d 3006 	ldrb.w	r3, [sp, #6]
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
90007de6:	0212      	lsls	r2, r2, #8
90007de8:	f89d 1005 	ldrb.w	r1, [sp, #5]
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
90007dec:	021b      	lsls	r3, r3, #8
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
90007dee:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
90007df2:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
90007df6:	430a      	orrs	r2, r1
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
90007df8:	f89d 1007 	ldrb.w	r1, [sp, #7]
90007dfc:	430b      	orrs	r3, r1
90007dfe:	e9c4 2301 	strd	r2, r3, [r4, #4]
}
90007e02:	b003      	add	sp, #12
90007e04:	bd30      	pop	{r4, r5, pc}
90007e06:	f04f 31ff 	mov.w	r1, #4294967295
90007e0a:	e7df      	b.n	90007dcc <FT5336_GetState+0x20>
    ret = FT5336_ERROR;
90007e0c:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
90007e10:	e7f7      	b.n	90007e02 <FT5336_GetState+0x56>
90007e12:	bf00      	nop

90007e14 <FT5336_GetMultiTouchState>:
{
90007e14:	b570      	push	{r4, r5, r6, lr}
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
90007e16:	f100 0518 	add.w	r5, r0, #24
{
90007e1a:	b088      	sub	sp, #32
90007e1c:	460c      	mov	r4, r1
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
90007e1e:	4628      	mov	r0, r5
90007e20:	4669      	mov	r1, sp
90007e22:	f000 f8fd 	bl	90008020 <ft5336_td_status>
90007e26:	2800      	cmp	r0, #0
90007e28:	f040 809a 	bne.w	90007f60 <FT5336_GetMultiTouchState+0x14c>
    if(nb_touch > FT5336_MAX_NB_TOUCH)
90007e2c:	f89d 3000 	ldrb.w	r3, [sp]
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
90007e30:	2b05      	cmp	r3, #5
90007e32:	bf94      	ite	ls
90007e34:	4619      	movls	r1, r3
90007e36:	2100      	movhi	r1, #0
90007e38:	6021      	str	r1, [r4, #0]
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
90007e3a:	231e      	movs	r3, #30
90007e3c:	466a      	mov	r2, sp
90007e3e:	4628      	mov	r0, r5
90007e40:	2103      	movs	r1, #3
90007e42:	f000 f8db 	bl	90007ffc <ft5336_read_reg>
90007e46:	2800      	cmp	r0, #0
90007e48:	f040 808d 	bne.w	90007f66 <FT5336_GetMultiTouchState+0x152>
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90007e4c:	f89d 1000 	ldrb.w	r1, [sp]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90007e50:	f89d 3002 	ldrb.w	r3, [sp, #2]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90007e54:	020a      	lsls	r2, r1, #8
90007e56:	f89d 5001 	ldrb.w	r5, [sp, #1]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90007e5a:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90007e5c:	f89d c007 	ldrb.w	ip, [sp, #7]
90007e60:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90007e64:	0989      	lsrs	r1, r1, #6
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90007e66:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90007e6a:	f89d 6011 	ldrb.w	r6, [sp, #17]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90007e6e:	432a      	orrs	r2, r5
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90007e70:	f89d 5003 	ldrb.w	r5, [sp, #3]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90007e74:	6421      	str	r1, [r4, #64]	; 0x40
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90007e76:	0936      	lsrs	r6, r6, #4
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90007e78:	432b      	orrs	r3, r5
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90007e7a:	6062      	str	r2, [r4, #4]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90007e7c:	f89d 2004 	ldrb.w	r2, [sp, #4]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90007e80:	61a3      	str	r3, [r4, #24]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90007e82:	f89d 3005 	ldrb.w	r3, [sp, #5]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90007e86:	f89d 1006 	ldrb.w	r1, [sp, #6]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90007e8a:	091b      	lsrs	r3, r3, #4
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90007e8c:	62e2      	str	r2, [r4, #44]	; 0x2c
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90007e8e:	f89d 200b 	ldrb.w	r2, [sp, #11]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90007e92:	020d      	lsls	r5, r1, #8
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90007e94:	6563      	str	r3, [r4, #84]	; 0x54
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90007e96:	0989      	lsrs	r1, r1, #6
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90007e98:	f89d 300c 	ldrb.w	r3, [sp, #12]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90007e9c:	0912      	lsrs	r2, r2, #4
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90007e9e:	6461      	str	r1, [r4, #68]	; 0x44
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90007ea0:	f405 6570 	and.w	r5, r5, #3840	; 0xf00
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90007ea4:	f89d 100a 	ldrb.w	r1, [sp, #10]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90007ea8:	65a2      	str	r2, [r4, #88]	; 0x58
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90007eaa:	021a      	lsls	r2, r3, #8
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90007eac:	6321      	str	r1, [r4, #48]	; 0x30
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90007eae:	ea45 050c 	orr.w	r5, r5, ip
90007eb2:	f402 6170 	and.w	r1, r2, #3840	; 0xf00
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90007eb6:	f89d 2008 	ldrb.w	r2, [sp, #8]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90007eba:	099b      	lsrs	r3, r3, #6
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90007ebc:	60a5      	str	r5, [r4, #8]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90007ebe:	0212      	lsls	r2, r2, #8
90007ec0:	f89d 5009 	ldrb.w	r5, [sp, #9]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90007ec4:	64a3      	str	r3, [r4, #72]	; 0x48
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90007ec6:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90007eca:	f89d 3010 	ldrb.w	r3, [sp, #16]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90007ece:	432a      	orrs	r2, r5
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90007ed0:	6363      	str	r3, [r4, #52]	; 0x34
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90007ed2:	f89d 300e 	ldrb.w	r3, [sp, #14]
90007ed6:	61e2      	str	r2, [r4, #28]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90007ed8:	f89d 200d 	ldrb.w	r2, [sp, #13]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90007edc:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90007ede:	430a      	orrs	r2, r1
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90007ee0:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90007ee4:	60e2      	str	r2, [r4, #12]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90007ee6:	f89d 200f 	ldrb.w	r2, [sp, #15]
90007eea:	4313      	orrs	r3, r2
90007eec:	6223      	str	r3, [r4, #32]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90007eee:	65e6      	str	r6, [r4, #92]	; 0x5c
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90007ef0:	f89d 1012 	ldrb.w	r1, [sp, #18]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90007ef4:	f89d 3014 	ldrb.w	r3, [sp, #20]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90007ef8:	020a      	lsls	r2, r1, #8
90007efa:	f89d 5013 	ldrb.w	r5, [sp, #19]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90007efe:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90007f00:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90007f04:	0989      	lsrs	r1, r1, #6
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90007f06:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90007f0a:	432a      	orrs	r2, r5
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90007f0c:	f89d 5015 	ldrb.w	r5, [sp, #21]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90007f10:	64e1      	str	r1, [r4, #76]	; 0x4c
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90007f12:	432b      	orrs	r3, r5
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90007f14:	f89d 1018 	ldrb.w	r1, [sp, #24]
90007f18:	6122      	str	r2, [r4, #16]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90007f1a:	6263      	str	r3, [r4, #36]	; 0x24
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90007f1c:	020b      	lsls	r3, r1, #8
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90007f1e:	f89d 2016 	ldrb.w	r2, [sp, #22]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90007f22:	0989      	lsrs	r1, r1, #6
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90007f24:	f89d 5017 	ldrb.w	r5, [sp, #23]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90007f28:	63a2      	str	r2, [r4, #56]	; 0x38
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90007f2a:	f403 6270 	and.w	r2, r3, #3840	; 0xf00
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90007f2e:	f89d 301d 	ldrb.w	r3, [sp, #29]
90007f32:	092d      	lsrs	r5, r5, #4
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90007f34:	6521      	str	r1, [r4, #80]	; 0x50
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90007f36:	091b      	lsrs	r3, r3, #4
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90007f38:	f89d 101c 	ldrb.w	r1, [sp, #28]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90007f3c:	6625      	str	r5, [r4, #96]	; 0x60
90007f3e:	6663      	str	r3, [r4, #100]	; 0x64
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90007f40:	f89d 301a 	ldrb.w	r3, [sp, #26]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90007f44:	63e1      	str	r1, [r4, #60]	; 0x3c
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90007f46:	021b      	lsls	r3, r3, #8
90007f48:	f89d 101b 	ldrb.w	r1, [sp, #27]
90007f4c:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
90007f50:	430b      	orrs	r3, r1
90007f52:	62a3      	str	r3, [r4, #40]	; 0x28
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90007f54:	f89d 3019 	ldrb.w	r3, [sp, #25]
90007f58:	4313      	orrs	r3, r2
90007f5a:	6163      	str	r3, [r4, #20]
}
90007f5c:	b008      	add	sp, #32
90007f5e:	bd70      	pop	{r4, r5, r6, pc}
90007f60:	f04f 31ff 	mov.w	r1, #4294967295
90007f64:	e768      	b.n	90007e38 <FT5336_GetMultiTouchState+0x24>
    ret = FT5336_ERROR;
90007f66:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
90007f6a:	e7f7      	b.n	90007f5c <FT5336_GetMultiTouchState+0x148>

90007f6c <FT5336_GetGesture>:
  return ft5336_gest_id(&pObj->Ctx, GestureId);
90007f6c:	3018      	adds	r0, #24
90007f6e:	f000 b84d 	b.w	9000800c <ft5336_gest_id>
90007f72:	bf00      	nop

90007f74 <FT5336_EnableIT>:
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_TRIGGER);
90007f74:	2101      	movs	r1, #1
90007f76:	3018      	adds	r0, #24
90007f78:	f000 b8b4 	b.w	900080e4 <ft5336_g_mode>

90007f7c <FT5336_DisableIT>:
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_POLLING);
90007f7c:	2100      	movs	r1, #0
90007f7e:	3018      	adds	r0, #24
90007f80:	f000 b8b0 	b.w	900080e4 <ft5336_g_mode>

90007f84 <FT5336_Init>:
{
90007f84:	b570      	push	{r4, r5, r6, lr}
  if(pObj->IsInitialized == 0U)
90007f86:	f890 5024 	ldrb.w	r5, [r0, #36]	; 0x24
90007f8a:	b98d      	cbnz	r5, 90007fb0 <FT5336_Init+0x2c>
    pObj->IO.Init();
90007f8c:	4606      	mov	r6, r0
90007f8e:	4604      	mov	r4, r0
90007f90:	f856 3b18 	ldr.w	r3, [r6], #24
90007f94:	4798      	blx	r3
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_POLLING);
90007f96:	4629      	mov	r1, r5
90007f98:	4630      	mov	r0, r6
90007f9a:	f000 f8a3 	bl	900080e4 <ft5336_g_mode>
  if(ret != FT5336_OK)
90007f9e:	3800      	subs	r0, #0
    pObj->IsInitialized = 1;
90007fa0:	f04f 0301 	mov.w	r3, #1
  if(ret != FT5336_OK)
90007fa4:	bf18      	it	ne
90007fa6:	2001      	movne	r0, #1
    pObj->IsInitialized = 1;
90007fa8:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
  if(ret != FT5336_OK)
90007fac:	4240      	negs	r0, r0
}
90007fae:	bd70      	pop	{r4, r5, r6, pc}
  int32_t ret = FT5336_OK;
90007fb0:	2000      	movs	r0, #0
}
90007fb2:	bd70      	pop	{r4, r5, r6, pc}

90007fb4 <FT5336_ClearIT>:
90007fb4:	2000      	movs	r0, #0
90007fb6:	4770      	bx	lr

90007fb8 <FT5336_RegisterBusIO>:
  if (pObj == NULL)
90007fb8:	b1c0      	cbz	r0, 90007fec <FT5336_RegisterBusIO+0x34>
    pObj->IO.Address   = pIO->Address;
90007fba:	890a      	ldrh	r2, [r1, #8]
{
90007fbc:	b430      	push	{r4, r5}
    pObj->IO.DeInit    = pIO->DeInit;
90007fbe:	e9d1 3400 	ldrd	r3, r4, [r1]
    pObj->IO.Address   = pIO->Address;
90007fc2:	8102      	strh	r2, [r0, #8]
    pObj->IO.DeInit    = pIO->DeInit;
90007fc4:	e9c0 3400 	strd	r3, r4, [r0]
    pObj->IO.WriteReg  = pIO->WriteReg;
90007fc8:	694a      	ldr	r2, [r1, #20]
90007fca:	e9d1 5403 	ldrd	r5, r4, [r1, #12]
    pObj->Ctx.ReadReg  = ReadRegWrap;
90007fce:	4909      	ldr	r1, [pc, #36]	; (90007ff4 <FT5336_RegisterBusIO+0x3c>)
    pObj->IO.WriteReg  = pIO->WriteReg;
90007fd0:	60c5      	str	r5, [r0, #12]
90007fd2:	e9c0 4204 	strd	r4, r2, [r0, #16]
    pObj->Ctx.WriteReg = WriteRegWrap;
90007fd6:	4a08      	ldr	r2, [pc, #32]	; (90007ff8 <FT5336_RegisterBusIO+0x40>)
    pObj->Ctx.handle   = pObj;
90007fd8:	e9c0 1007 	strd	r1, r0, [r0, #28]
    pObj->Ctx.WriteReg = WriteRegWrap;
90007fdc:	6182      	str	r2, [r0, #24]
    if(pObj->IO.Init != NULL)
90007fde:	b10b      	cbz	r3, 90007fe4 <FT5336_RegisterBusIO+0x2c>
}
90007fe0:	bc30      	pop	{r4, r5}
      ret = pObj->IO.Init();
90007fe2:	4718      	bx	r3
}
90007fe4:	f04f 30ff 	mov.w	r0, #4294967295
90007fe8:	bc30      	pop	{r4, r5}
90007fea:	4770      	bx	lr
90007fec:	f04f 30ff 	mov.w	r0, #4294967295
90007ff0:	4770      	bx	lr
90007ff2:	bf00      	nop
90007ff4:	90007d35 	.word	0x90007d35
90007ff8:	90007d45 	.word	0x90007d45

90007ffc <ft5336_read_reg>:
  * @param  pdata pointer to data to be read
  * @param  length Length of data to read   
  * @retval Component status
  */
int32_t ft5336_read_reg(ft5336_ctx_t *ctx, uint8_t reg, uint8_t* pdata, uint16_t length)
{
90007ffc:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90007ffe:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
90008002:	46a4      	mov	ip, r4
}
90008004:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90008008:	4760      	bx	ip
9000800a:	bf00      	nop

9000800c <ft5336_gest_id>:
  * @param  ctx Component context 
  * @param  value pointer to the value of FT5336_GEST_ID_REG register
  * @retval Component status
  */
int32_t  ft5336_gest_id(ft5336_ctx_t *ctx, uint8_t *value)
{
9000800c:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
9000800e:	2301      	movs	r3, #1
{
90008010:	460a      	mov	r2, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90008012:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
90008016:	4619      	mov	r1, r3
90008018:	46a4      	mov	ip, r4
  return ft5336_read_reg(ctx, FT5336_GEST_ID_REG, (uint8_t *)value, 1);
}
9000801a:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
9000801e:	4760      	bx	ip

90008020 <ft5336_td_status>:
  * @param  ctx Component context 
  * @param  value pointer to the value of Touch Data Status register
  * @retval Component status
  */
int32_t  ft5336_td_status(ft5336_ctx_t *ctx, uint8_t *value)
{
90008020:	b538      	push	{r3, r4, r5, lr}
90008022:	460c      	mov	r4, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90008024:	2301      	movs	r3, #1
90008026:	2102      	movs	r1, #2
90008028:	4622      	mov	r2, r4
9000802a:	e9d0 5001 	ldrd	r5, r0, [r0, #4]
9000802e:	47a8      	blx	r5
  int32_t ret;
  
  ret = ft5336_read_reg(ctx, FT5336_TD_STAT_REG, (uint8_t *)value, 1);
  
  if(ret == 0)
90008030:	b918      	cbnz	r0, 9000803a <ft5336_td_status+0x1a>
  {
    *value &= FT5336_TD_STATUS_BIT_MASK; 
90008032:	7823      	ldrb	r3, [r4, #0]
90008034:	f003 030f 	and.w	r3, r3, #15
90008038:	7023      	strb	r3, [r4, #0]
    *value = *value >> FT5336_TD_STATUS_BIT_POSITION; 
  }
  
  return ret;
}
9000803a:	bd38      	pop	{r3, r4, r5, pc}

9000803c <ft5336_radian_value>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_RADIAN_VALUE_REG register
  * @retval Component status
  */
int32_t  ft5336_radian_value(ft5336_ctx_t *ctx, uint8_t value)
{
9000803c:	b510      	push	{r4, lr}
9000803e:	460c      	mov	r4, r1
90008040:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90008042:	2301      	movs	r3, #1
90008044:	2191      	movs	r1, #145	; 0x91
{
90008046:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
9000804a:	f10d 0207 	add.w	r2, sp, #7
9000804e:	6804      	ldr	r4, [r0, #0]
90008050:	6880      	ldr	r0, [r0, #8]
90008052:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_RADIAN_VALUE_REG, &value, 1);
}
90008054:	b002      	add	sp, #8
90008056:	bd10      	pop	{r4, pc}

90008058 <ft5336_offset_left_right>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_OFFSET_LR_REG register
  * @retval Component status
  */
int32_t  ft5336_offset_left_right(ft5336_ctx_t *ctx, uint8_t value)
{
90008058:	b510      	push	{r4, lr}
9000805a:	460c      	mov	r4, r1
9000805c:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
9000805e:	2301      	movs	r3, #1
90008060:	2192      	movs	r1, #146	; 0x92
{
90008062:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90008066:	f10d 0207 	add.w	r2, sp, #7
9000806a:	6804      	ldr	r4, [r0, #0]
9000806c:	6880      	ldr	r0, [r0, #8]
9000806e:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_OFFSET_LR_REG, &value, 1);
}
90008070:	b002      	add	sp, #8
90008072:	bd10      	pop	{r4, pc}

90008074 <ft5336_offset_up_down>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_OFFSET_UD_REG register
  * @retval Component status
  */
int32_t  ft5336_offset_up_down(ft5336_ctx_t *ctx, uint8_t value)
{
90008074:	b510      	push	{r4, lr}
90008076:	460c      	mov	r4, r1
90008078:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
9000807a:	2301      	movs	r3, #1
9000807c:	2193      	movs	r1, #147	; 0x93
{
9000807e:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90008082:	f10d 0207 	add.w	r2, sp, #7
90008086:	6804      	ldr	r4, [r0, #0]
90008088:	6880      	ldr	r0, [r0, #8]
9000808a:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_OFFSET_UD_REG, &value, 1);
}
9000808c:	b002      	add	sp, #8
9000808e:	bd10      	pop	{r4, pc}

90008090 <ft5336_disatnce_left_right>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_LR_REG register
  * @retval Component status
  */
int32_t  ft5336_disatnce_left_right(ft5336_ctx_t *ctx, uint8_t value)
{
90008090:	b510      	push	{r4, lr}
90008092:	460c      	mov	r4, r1
90008094:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90008096:	2301      	movs	r3, #1
90008098:	2194      	movs	r1, #148	; 0x94
{
9000809a:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
9000809e:	f10d 0207 	add.w	r2, sp, #7
900080a2:	6804      	ldr	r4, [r0, #0]
900080a4:	6880      	ldr	r0, [r0, #8]
900080a6:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_LR_REG, &value, 1);
}
900080a8:	b002      	add	sp, #8
900080aa:	bd10      	pop	{r4, pc}

900080ac <ft5336_distance_up_down>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_UD_REG register
  * @retval Component status
  */
int32_t  ft5336_distance_up_down(ft5336_ctx_t *ctx, uint8_t value)
{
900080ac:	b510      	push	{r4, lr}
900080ae:	460c      	mov	r4, r1
900080b0:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
900080b2:	2301      	movs	r3, #1
900080b4:	2195      	movs	r1, #149	; 0x95
{
900080b6:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
900080ba:	f10d 0207 	add.w	r2, sp, #7
900080be:	6804      	ldr	r4, [r0, #0]
900080c0:	6880      	ldr	r0, [r0, #8]
900080c2:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_UD_REG, &value, 1);
}
900080c4:	b002      	add	sp, #8
900080c6:	bd10      	pop	{r4, pc}

900080c8 <ft5336_distance_zoom>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_ZOOM_REG register
  * @retval Component status
  */
int32_t  ft5336_distance_zoom(ft5336_ctx_t *ctx, uint8_t value)
{
900080c8:	b510      	push	{r4, lr}
900080ca:	460c      	mov	r4, r1
900080cc:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
900080ce:	2301      	movs	r3, #1
900080d0:	2196      	movs	r1, #150	; 0x96
{
900080d2:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
900080d6:	f10d 0207 	add.w	r2, sp, #7
900080da:	6804      	ldr	r4, [r0, #0]
900080dc:	6880      	ldr	r0, [r0, #8]
900080de:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_ZOOM_REG, &value, 1);
}
900080e0:	b002      	add	sp, #8
900080e2:	bd10      	pop	{r4, pc}

900080e4 <ft5336_g_mode>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_GMODE_REG register
  * @retval Component status
  */
int32_t  ft5336_g_mode(ft5336_ctx_t *ctx, uint8_t value)
{
900080e4:	b510      	push	{r4, lr}
900080e6:	460c      	mov	r4, r1
900080e8:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
900080ea:	2301      	movs	r3, #1
900080ec:	21a4      	movs	r1, #164	; 0xa4
{
900080ee:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
900080f2:	f10d 0207 	add.w	r2, sp, #7
900080f6:	6804      	ldr	r4, [r0, #0]
900080f8:	6880      	ldr	r0, [r0, #8]
900080fa:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_GMODE_REG, &value, 1);
}
900080fc:	b002      	add	sp, #8
900080fe:	bd10      	pop	{r4, pc}

90008100 <ft5336_chip_id>:
  * @param  ctx Component context 
  * @param  value Pointer to FT5336_CHIP_ID_REG register value
  * @retval Component status
  */
int32_t  ft5336_chip_id(ft5336_ctx_t *ctx, uint8_t *value)
{
90008100:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90008102:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
{
90008106:	460a      	mov	r2, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90008108:	2301      	movs	r3, #1
9000810a:	46a4      	mov	ip, r4
9000810c:	21a8      	movs	r1, #168	; 0xa8
    *value &= FT5336_CHIP_ID_BIT_MASK; 
    *value = *value >> FT5336_CHIP_ID_BIT_POSITION; 
  }
  
  return ret;
}
9000810e:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90008112:	4760      	bx	ip

90008114 <MT48LC4M32B2_Init>:
  * @param  Ctx : Component object pointer
  * @param  pRegMode : Pointer to Register Mode stucture
  * @retval error status
  */
int32_t MT48LC4M32B2_Init(SDRAM_HandleTypeDef *Ctx, MT48LC4M32B2_Context_t *pRegMode) 
{
90008114:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  int32_t ret = MT48LC4M32B2_ERROR;
  
  /* Step 1: Configure a clock configuration enable command */
  if(MT48LC4M32B2_ClockEnable(Ctx, pRegMode->TargetBank) == MT48LC4M32B2_OK)
90008116:	680b      	ldr	r3, [r1, #0]
{
90008118:	460d      	mov	r5, r1
  * @param  Interface : Could be FMC_SDRAM_CMD_TARGET_BANK1 or FMC_SDRAM_CMD_TARGET_BANK2
  * @retval error status
  */
int32_t MT48LC4M32B2_ClockEnable(SDRAM_HandleTypeDef *Ctx, uint32_t Interface) 
{
  Command.CommandMode            = MT48LC4M32B2_CLK_ENABLE_CMD;
9000811a:	4c2a      	ldr	r4, [pc, #168]	; (900081c4 <MT48LC4M32B2_Init+0xb0>)
  Command.CommandTarget          = Interface;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
9000811c:	f64f 72ff 	movw	r2, #65535	; 0xffff
{
90008120:	4607      	mov	r7, r0
  Command.CommandTarget          = Interface;
90008122:	6063      	str	r3, [r4, #4]
  Command.ModeRegisterDefinition = 0;
90008124:	2300      	movs	r3, #0
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90008126:	4621      	mov	r1, r4
  Command.ModeRegisterDefinition = 0;
90008128:	60e3      	str	r3, [r4, #12]
  Command.CommandMode            = MT48LC4M32B2_CLK_ENABLE_CMD;
9000812a:	2301      	movs	r3, #1
9000812c:	6023      	str	r3, [r4, #0]
  Command.AutoRefreshNumber      = 1;
9000812e:	60a3      	str	r3, [r4, #8]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90008130:	f005 fd2a 	bl	9000db88 <HAL_SDRAM_SendCommand>
90008134:	2800      	cmp	r0, #0
90008136:	d142      	bne.n	900081be <MT48LC4M32B2_Init+0xaa>
  * @retval MT48LC4M32B2_OK
  */
static int32_t MT48LC4M32B2_Delay(uint32_t Delay)
{  
  uint32_t tickstart;
  tickstart = HAL_GetTick();
90008138:	f000 ff46 	bl	90008fc8 <HAL_GetTick>
9000813c:	4606      	mov	r6, r0
  while((HAL_GetTick() - tickstart) < Delay)
9000813e:	f000 ff43 	bl	90008fc8 <HAL_GetTick>
90008142:	4286      	cmp	r6, r0
90008144:	d0fb      	beq.n	9000813e <MT48LC4M32B2_Init+0x2a>
  Command.CommandMode            = MT48LC4M32B2_PALL_CMD;
90008146:	2302      	movs	r3, #2
    if(MT48LC4M32B2_Precharge(Ctx, pRegMode->TargetBank) == MT48LC4M32B2_OK)
90008148:	682a      	ldr	r2, [r5, #0]
  Command.AutoRefreshNumber      = 1;
9000814a:	2601      	movs	r6, #1
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
9000814c:	491d      	ldr	r1, [pc, #116]	; (900081c4 <MT48LC4M32B2_Init+0xb0>)
  Command.CommandMode            = MT48LC4M32B2_PALL_CMD;
9000814e:	6023      	str	r3, [r4, #0]
  Command.ModeRegisterDefinition = 0;
90008150:	2300      	movs	r3, #0
  Command.CommandTarget          = Interface;
90008152:	6062      	str	r2, [r4, #4]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90008154:	4638      	mov	r0, r7
90008156:	f64f 72ff 	movw	r2, #65535	; 0xffff
  Command.AutoRefreshNumber      = 1;
9000815a:	60a6      	str	r6, [r4, #8]
  Command.ModeRegisterDefinition = 0;
9000815c:	60e3      	str	r3, [r4, #12]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
9000815e:	f005 fd13 	bl	9000db88 <HAL_SDRAM_SendCommand>
90008162:	bb60      	cbnz	r0, 900081be <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90008164:	4917      	ldr	r1, [pc, #92]	; (900081c4 <MT48LC4M32B2_Init+0xb0>)
  Command.CommandMode            = RefreshMode;
90008166:	e9d5 3200 	ldrd	r3, r2, [r5]
  Command.ModeRegisterDefinition = 0;
9000816a:	60e0      	str	r0, [r4, #12]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
9000816c:	4638      	mov	r0, r7
  Command.CommandMode            = RefreshMode;
9000816e:	e9c4 2300 	strd	r2, r3, [r4]
  Command.AutoRefreshNumber      = 8;
90008172:	2308      	movs	r3, #8
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90008174:	f64f 72ff 	movw	r2, #65535	; 0xffff
  Command.AutoRefreshNumber      = 8;
90008178:	60a3      	str	r3, [r4, #8]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
9000817a:	f005 fd05 	bl	9000db88 <HAL_SDRAM_SendCommand>
9000817e:	b9f0      	cbnz	r0, 900081be <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90008180:	4910      	ldr	r1, [pc, #64]	; (900081c4 <MT48LC4M32B2_Init+0xb0>)
90008182:	4638      	mov	r0, r7
  tmpmrd = (uint32_t)pRegMode->BurstLength   |\
90008184:	e9d5 3203 	ldrd	r3, r2, [r5, #12]
90008188:	4313      	orrs	r3, r2
                     pRegMode->BurstType     |\
9000818a:	696a      	ldr	r2, [r5, #20]
9000818c:	4313      	orrs	r3, r2
                     pRegMode->CASLatency    |\
9000818e:	69aa      	ldr	r2, [r5, #24]
90008190:	4313      	orrs	r3, r2
  tmpmrd = (uint32_t)pRegMode->BurstLength   |\
90008192:	69ea      	ldr	r2, [r5, #28]
90008194:	4313      	orrs	r3, r2
  Command.CommandTarget          = pRegMode->TargetBank;
90008196:	682a      	ldr	r2, [r5, #0]
  Command.ModeRegisterDefinition = tmpmrd;
90008198:	60e3      	str	r3, [r4, #12]
  Command.CommandMode            = MT48LC4M32B2_LOAD_MODE_CMD;
9000819a:	2304      	movs	r3, #4
  Command.CommandTarget          = pRegMode->TargetBank;
9000819c:	e9c4 2601 	strd	r2, r6, [r4, #4]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
900081a0:	f64f 72ff 	movw	r2, #65535	; 0xffff
  Command.CommandMode            = MT48LC4M32B2_LOAD_MODE_CMD;
900081a4:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
900081a6:	f005 fcef 	bl	9000db88 <HAL_SDRAM_SendCommand>
900081aa:	b940      	cbnz	r0, 900081be <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_ProgramRefreshRate(Ctx, RefreshCount) != HAL_OK)
900081ac:	68a9      	ldr	r1, [r5, #8]
900081ae:	4638      	mov	r0, r7
900081b0:	f005 fd0a 	bl	9000dbc8 <HAL_SDRAM_ProgramRefreshRate>
900081b4:	3800      	subs	r0, #0
900081b6:	bf18      	it	ne
900081b8:	2001      	movne	r0, #1
900081ba:	4240      	negs	r0, r0
}
900081bc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  int32_t ret = MT48LC4M32B2_ERROR;
900081be:	f04f 30ff 	mov.w	r0, #4294967295
}
900081c2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
900081c4:	2401f828 	.word	0x2401f828

900081c8 <BSP_I2C4_DeInit>:
  */
int32_t BSP_I2C4_DeInit(void)
{
  int32_t ret  = BSP_ERROR_NONE;

  I2c4InitCounter--;
900081c8:	4a10      	ldr	r2, [pc, #64]	; (9000820c <BSP_I2C4_DeInit+0x44>)
{
900081ca:	b508      	push	{r3, lr}
  I2c4InitCounter--;
900081cc:	6813      	ldr	r3, [r2, #0]
900081ce:	3b01      	subs	r3, #1
900081d0:	6013      	str	r3, [r2, #0]

  if (I2c4InitCounter == 0U)
900081d2:	b10b      	cbz	r3, 900081d8 <BSP_I2C4_DeInit+0x10>
  int32_t ret  = BSP_ERROR_NONE;
900081d4:	2000      	movs	r0, #0
      ret = BSP_ERROR_BUS_FAILURE;
    }
  }

  return ret;
}
900081d6:	bd08      	pop	{r3, pc}
  /* Prevent unused argument(s) compilation warning */
  UNUSED(phi2c);

  /* Configure I2C Tx, Rx as alternate function */
  gpio_init_structure.Pin = BUS_I2C4_SCL_PIN;
  HAL_GPIO_DeInit(BUS_I2C4_SCL_GPIO_PORT, gpio_init_structure.Pin );
900081d8:	f44f 5180 	mov.w	r1, #4096	; 0x1000
900081dc:	480c      	ldr	r0, [pc, #48]	; (90008210 <BSP_I2C4_DeInit+0x48>)
900081de:	f001 faaf 	bl	90009740 <HAL_GPIO_DeInit>
  gpio_init_structure.Pin = BUS_I2C4_SDA_PIN;
  HAL_GPIO_DeInit(BUS_I2C4_SDA_GPIO_PORT, gpio_init_structure.Pin);
900081e2:	480b      	ldr	r0, [pc, #44]	; (90008210 <BSP_I2C4_DeInit+0x48>)
900081e4:	f44f 5100 	mov.w	r1, #8192	; 0x2000
900081e8:	f001 faaa 	bl	90009740 <HAL_GPIO_DeInit>

  /* Disable I2C clock */
  BUS_I2C4_CLK_DISABLE();
900081ec:	4a09      	ldr	r2, [pc, #36]	; (90008214 <BSP_I2C4_DeInit+0x4c>)
    if (HAL_I2C_DeInit(&hbus_i2c4) != HAL_OK)
900081ee:	480a      	ldr	r0, [pc, #40]	; (90008218 <BSP_I2C4_DeInit+0x50>)
  BUS_I2C4_CLK_DISABLE();
900081f0:	f8d2 30f4 	ldr.w	r3, [r2, #244]	; 0xf4
900081f4:	f023 0380 	bic.w	r3, r3, #128	; 0x80
900081f8:	f8c2 30f4 	str.w	r3, [r2, #244]	; 0xf4
    if (HAL_I2C_DeInit(&hbus_i2c4) != HAL_OK)
900081fc:	f001 fd48 	bl	90009c90 <HAL_I2C_DeInit>
90008200:	2800      	cmp	r0, #0
90008202:	d0e7      	beq.n	900081d4 <BSP_I2C4_DeInit+0xc>
      ret = BSP_ERROR_BUS_FAILURE;
90008204:	f06f 0007 	mvn.w	r0, #7
}
90008208:	bd08      	pop	{r3, pc}
9000820a:	bf00      	nop
9000820c:	2401f838 	.word	0x2401f838
90008210:	58020c00 	.word	0x58020c00
90008214:	58024400 	.word	0x58024400
90008218:	24020240 	.word	0x24020240

9000821c <MX_I2C4_Init>:
  hI2c->Init.OwnAddress1      = 0;
9000821c:	2300      	movs	r3, #0
  hI2c->Init.AddressingMode   = I2C_ADDRESSINGMODE_7BIT;
9000821e:	2201      	movs	r2, #1
{
90008220:	b510      	push	{r4, lr}
  hI2c->Init.OwnAddress1      = 0;
90008222:	e9c0 1301 	strd	r1, r3, [r0, #4]
  hI2c->Init.DualAddressMode  = I2C_DUALADDRESS_DISABLE;
90008226:	e9c0 2303 	strd	r2, r3, [r0, #12]
  hI2c->Init.OwnAddress2Masks = I2C_OA2_NOMASK;
9000822a:	e9c0 3305 	strd	r3, r3, [r0, #20]
  hI2c->Init.NoStretchMode    = I2C_NOSTRETCH_DISABLE;
9000822e:	e9c0 3307 	strd	r3, r3, [r0, #28]
{
90008232:	4604      	mov	r4, r0
  if (HAL_I2C_Init(hI2c) != HAL_OK)
90008234:	f001 fcd4 	bl	90009be0 <HAL_I2C_Init>
90008238:	b108      	cbz	r0, 9000823e <MX_I2C4_Init+0x22>
    status = HAL_ERROR;
9000823a:	2001      	movs	r0, #1
}
9000823c:	bd10      	pop	{r4, pc}
    if (HAL_I2CEx_ConfigAnalogFilter(hI2c, analog_filter) != HAL_OK)
9000823e:	4601      	mov	r1, r0
90008240:	4620      	mov	r0, r4
90008242:	f001 ffe3 	bl	9000a20c <HAL_I2CEx_ConfigAnalogFilter>
90008246:	2800      	cmp	r0, #0
90008248:	d1f7      	bne.n	9000823a <MX_I2C4_Init+0x1e>
      if (HAL_I2CEx_ConfigDigitalFilter(hI2c, I2C_DIGITAL_FILTER_COEF) != HAL_OK)
9000824a:	4601      	mov	r1, r0
9000824c:	4620      	mov	r0, r4
9000824e:	f002 f807 	bl	9000a260 <HAL_I2CEx_ConfigDigitalFilter>
    status = HAL_ERROR;
90008252:	3800      	subs	r0, #0
90008254:	bf18      	it	ne
90008256:	2001      	movne	r0, #1
}
90008258:	bd10      	pop	{r4, pc}
9000825a:	bf00      	nop

9000825c <BSP_I2C4_Init>:
  if (I2c4InitCounter == 0U)
9000825c:	4b99      	ldr	r3, [pc, #612]	; (900084c4 <BSP_I2C4_Init+0x268>)
  hbus_i2c4.Instance = BUS_I2C4;
9000825e:	489a      	ldr	r0, [pc, #616]	; (900084c8 <BSP_I2C4_Init+0x26c>)
90008260:	4a9a      	ldr	r2, [pc, #616]	; (900084cc <BSP_I2C4_Init+0x270>)
  if (I2c4InitCounter == 0U)
90008262:	6819      	ldr	r1, [r3, #0]
{
90008264:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90008268:	b09f      	sub	sp, #124	; 0x7c
  hbus_i2c4.Instance = BUS_I2C4;
9000826a:	6002      	str	r2, [r0, #0]
  if (I2c4InitCounter == 0U)
9000826c:	9103      	str	r1, [sp, #12]
9000826e:	b119      	cbz	r1, 90008278 <BSP_I2C4_Init+0x1c>
  int32_t ret = BSP_ERROR_NONE;
90008270:	2000      	movs	r0, #0
}
90008272:	b01f      	add	sp, #124	; 0x7c
90008274:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    I2c4InitCounter++;
90008278:	2201      	movs	r2, #1
9000827a:	601a      	str	r2, [r3, #0]
    if (HAL_I2C_GetState(&hbus_i2c4) == HAL_I2C_STATE_RESET)
9000827c:	f001 ffc0 	bl	9000a200 <HAL_I2C_GetState>
90008280:	2800      	cmp	r0, #0
90008282:	d1f5      	bne.n	90008270 <BSP_I2C4_Init+0x14>
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
90008284:	4c92      	ldr	r4, [pc, #584]	; (900084d0 <BSP_I2C4_Init+0x274>)
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
90008286:	f44f 5080 	mov.w	r0, #4096	; 0x1000
9000828a:	2112      	movs	r1, #18
  gpio_init_structure.Alternate = BUS_I2C4_SCL_AF;
9000828c:	2504      	movs	r5, #4
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
9000828e:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
90008292:	2600      	movs	r6, #0
90008294:	2702      	movs	r7, #2
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
90008296:	f043 0308 	orr.w	r3, r3, #8
9000829a:	f8c4 30e0 	str.w	r3, [r4, #224]	; 0xe0
9000829e:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
900082a2:	f003 0308 	and.w	r3, r3, #8
900082a6:	9315      	str	r3, [sp, #84]	; 0x54
900082a8:	9b15      	ldr	r3, [sp, #84]	; 0x54
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
900082aa:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
900082ae:	f043 0308 	orr.w	r3, r3, #8
900082b2:	f8c4 30e0 	str.w	r3, [r4, #224]	; 0xe0
900082b6:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
  gpio_init_structure.Alternate = BUS_I2C4_SCL_AF;
900082ba:	951c      	str	r5, [sp, #112]	; 0x70
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
900082bc:	f003 0308 	and.w	r3, r3, #8
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
900082c0:	e9cd 0118 	strd	r0, r1, [sp, #96]	; 0x60
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
900082c4:	9316      	str	r3, [sp, #88]	; 0x58
  HAL_GPIO_Init(BUS_I2C4_SCL_GPIO_PORT, &gpio_init_structure);
900082c6:	a918      	add	r1, sp, #96	; 0x60
900082c8:	4882      	ldr	r0, [pc, #520]	; (900084d4 <BSP_I2C4_Init+0x278>)
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
900082ca:	9b16      	ldr	r3, [sp, #88]	; 0x58
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
900082cc:	e9cd 671a 	strd	r6, r7, [sp, #104]	; 0x68
  HAL_GPIO_Init(BUS_I2C4_SCL_GPIO_PORT, &gpio_init_structure);
900082d0:	f001 f904 	bl	900094dc <HAL_GPIO_Init>
  gpio_init_structure.Pin       = BUS_I2C4_SDA_PIN;
900082d4:	2312      	movs	r3, #18
900082d6:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  HAL_GPIO_Init(BUS_I2C4_SDA_GPIO_PORT, &gpio_init_structure);
900082da:	a918      	add	r1, sp, #96	; 0x60
900082dc:	487d      	ldr	r0, [pc, #500]	; (900084d4 <BSP_I2C4_Init+0x278>)
  gpio_init_structure.Alternate = BUS_I2C4_SDA_AF;
900082de:	951c      	str	r5, [sp, #112]	; 0x70
  gpio_init_structure.Pin       = BUS_I2C4_SDA_PIN;
900082e0:	e9cd 2318 	strd	r2, r3, [sp, #96]	; 0x60
900082e4:	e9cd 671a 	strd	r6, r7, [sp, #104]	; 0x68
  HAL_GPIO_Init(BUS_I2C4_SDA_GPIO_PORT, &gpio_init_structure);
900082e8:	f001 f8f8 	bl	900094dc <HAL_GPIO_Init>
  BUS_I2C4_CLK_ENABLE();
900082ec:	f8d4 30f4 	ldr.w	r3, [r4, #244]	; 0xf4
900082f0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
900082f4:	f8c4 30f4 	str.w	r3, [r4, #244]	; 0xf4
900082f8:	f8d4 30f4 	ldr.w	r3, [r4, #244]	; 0xf4
900082fc:	f003 0380 	and.w	r3, r3, #128	; 0x80
90008300:	9317      	str	r3, [sp, #92]	; 0x5c
90008302:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  BUS_I2C4_FORCE_RESET();
90008304:	f8d4 309c 	ldr.w	r3, [r4, #156]	; 0x9c
90008308:	f043 0380 	orr.w	r3, r3, #128	; 0x80
9000830c:	f8c4 309c 	str.w	r3, [r4, #156]	; 0x9c
  BUS_I2C4_RELEASE_RESET();
90008310:	f8d4 309c 	ldr.w	r3, [r4, #156]	; 0x9c
90008314:	f023 0380 	bic.w	r3, r3, #128	; 0x80
90008318:	f8c4 309c 	str.w	r3, [r4, #156]	; 0x9c
        if (MX_I2C4_Init(&hbus_i2c4, I2C_GetTiming(HAL_RCC_GetPCLK2Freq(), BUS_I2C4_FREQUENCY)) != HAL_OK)
9000831c:	f004 fc94 	bl	9000cc48 <HAL_RCC_GetPCLK2Freq>
  if((clock_src_freq != 0U) && (i2c_freq != 0U))
90008320:	2800      	cmp	r0, #0
90008322:	f000 81f6 	beq.w	90008712 <BSP_I2C4_Init+0x4b6>
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
90008326:	4b6c      	ldr	r3, [pc, #432]	; (900084d8 <BSP_I2C4_Init+0x27c>)
  uint32_t prev_presc = I2C_PRESC_MAX;
90008328:	f04f 0b10 	mov.w	fp, #16
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
9000832c:	9e03      	ldr	r6, [sp, #12]
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
9000832e:	eb03 0350 	add.w	r3, r3, r0, lsr #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008332:	f8df a1ac 	ldr.w	sl, [pc, #428]	; 900084e0 <BSP_I2C4_Init+0x284>
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
90008336:	4635      	mov	r5, r6
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
90008338:	fbb3 f7f0 	udiv	r7, r3, r0
    (int32_t)tafdel_max - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 4) * (int32_t)ti2cclk);
9000833c:	00bb      	lsls	r3, r7, #2
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
9000833e:	9702      	str	r7, [sp, #8]
    (int32_t)tafdel_min - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 3) * (int32_t)ti2cclk);
90008340:	eb07 0247 	add.w	r2, r7, r7, lsl #1
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
90008344:	f5c3 7cc3 	rsb	ip, r3, #390	; 0x186
90008348:	4b64      	ldr	r3, [pc, #400]	; (900084dc <BSP_I2C4_Init+0x280>)
  tsdadel_min = (int32_t)I2C_Charac[I2C_speed].tfall + (int32_t)I2C_Charac[I2C_speed].hddat_min -
9000834a:	f1c2 0432 	rsb	r4, r2, #50	; 0x32
    (int32_t)tafdel_min - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 3) * (int32_t)ti2cclk);
9000834e:	0079      	lsls	r1, r7, #1
90008350:	681b      	ldr	r3, [r3, #0]
90008352:	ea2c 7cec 	bic.w	ip, ip, ip, asr #31
90008356:	ea24 74e4 	bic.w	r4, r4, r4, asr #31
9000835a:	9113      	str	r1, [sp, #76]	; 0x4c
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
9000835c:	4699      	mov	r9, r3
9000835e:	930a      	str	r3, [sp, #40]	; 0x28
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
90008360:	ebb4 0f47 	cmp.w	r4, r7, lsl #1
90008364:	46b8      	mov	r8, r7
90008366:	eb07 0347 	add.w	r3, r7, r7, lsl #1
9000836a:	bf94      	ite	ls
9000836c:	2101      	movls	r1, #1
9000836e:	2100      	movhi	r1, #0
90008370:	ebbc 0f47 	cmp.w	ip, r7, lsl #1
90008374:	f001 0101 	and.w	r1, r1, #1
90008378:	eb07 0287 	add.w	r2, r7, r7, lsl #2
9000837c:	bf38      	it	cc
9000837e:	2100      	movcc	r1, #0
90008380:	429c      	cmp	r4, r3
90008382:	ebc7 00c7 	rsb	r0, r7, r7, lsl #3
90008386:	9105      	str	r1, [sp, #20]
90008388:	bf8c      	ite	hi
9000838a:	2100      	movhi	r1, #0
9000838c:	2101      	movls	r1, #1
9000838e:	459c      	cmp	ip, r3
90008390:	bf38      	it	cc
90008392:	2100      	movcc	r1, #0
90008394:	ebb4 0f87 	cmp.w	r4, r7, lsl #2
90008398:	9106      	str	r1, [sp, #24]
9000839a:	eb07 0142 	add.w	r1, r7, r2, lsl #1
9000839e:	9104      	str	r1, [sp, #16]
900083a0:	eb07 0183 	add.w	r1, r7, r3, lsl #2
900083a4:	9111      	str	r1, [sp, #68]	; 0x44
900083a6:	bf94      	ite	ls
900083a8:	2101      	movls	r1, #1
900083aa:	2100      	movhi	r1, #0
900083ac:	ebbc 0f87 	cmp.w	ip, r7, lsl #2
900083b0:	f001 0e01 	and.w	lr, r1, #1
900083b4:	bf38      	it	cc
900083b6:	f04f 0e00 	movcc.w	lr, #0
900083ba:	4294      	cmp	r4, r2
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
900083bc:	f04f 0100 	mov.w	r1, #0
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
900083c0:	f8cd e01c 	str.w	lr, [sp, #28]
900083c4:	bf8c      	ite	hi
900083c6:	f04f 0e00 	movhi.w	lr, #0
900083ca:	f04f 0e01 	movls.w	lr, #1
900083ce:	4594      	cmp	ip, r2
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
900083d0:	9101      	str	r1, [sp, #4]
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
900083d2:	bf38      	it	cc
900083d4:	f04f 0e00 	movcc.w	lr, #0
900083d8:	ebb4 0f43 	cmp.w	r4, r3, lsl #1
900083dc:	bf98      	it	ls
900083de:	2101      	movls	r1, #1
900083e0:	ebbc 0f43 	cmp.w	ip, r3, lsl #1
900083e4:	f8cd e020 	str.w	lr, [sp, #32]
900083e8:	f001 0101 	and.w	r1, r1, #1
900083ec:	bf38      	it	cc
900083ee:	2100      	movcc	r1, #0
900083f0:	4284      	cmp	r4, r0
900083f2:	9109      	str	r1, [sp, #36]	; 0x24
900083f4:	4601      	mov	r1, r0
900083f6:	bf8c      	ite	hi
900083f8:	2000      	movhi	r0, #0
900083fa:	2001      	movls	r0, #1
900083fc:	458c      	cmp	ip, r1
900083fe:	bf38      	it	cc
90008400:	2000      	movcc	r0, #0
90008402:	ebb4 0fc7 	cmp.w	r4, r7, lsl #3
90008406:	900b      	str	r0, [sp, #44]	; 0x2c
90008408:	bf94      	ite	ls
9000840a:	2001      	movls	r0, #1
9000840c:	2000      	movhi	r0, #0
9000840e:	ebbc 0fc7 	cmp.w	ip, r7, lsl #3
90008412:	f000 0001 	and.w	r0, r0, #1
90008416:	bf38      	it	cc
90008418:	2000      	movcc	r0, #0
9000841a:	900c      	str	r0, [sp, #48]	; 0x30
9000841c:	eb07 00c7 	add.w	r0, r7, r7, lsl #3
90008420:	4284      	cmp	r4, r0
90008422:	bf8c      	ite	hi
90008424:	f04f 0e00 	movhi.w	lr, #0
90008428:	f04f 0e01 	movls.w	lr, #1
9000842c:	4584      	cmp	ip, r0
9000842e:	bf38      	it	cc
90008430:	f04f 0e00 	movcc.w	lr, #0
90008434:	ebb4 0f42 	cmp.w	r4, r2, lsl #1
90008438:	4670      	mov	r0, lr
9000843a:	bf94      	ite	ls
9000843c:	2001      	movls	r0, #1
9000843e:	2000      	movhi	r0, #0
90008440:	ebbc 0f42 	cmp.w	ip, r2, lsl #1
90008444:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
90008448:	f04f 0e00 	mov.w	lr, #0
9000844c:	f000 0001 	and.w	r0, r0, #1
90008450:	bf38      	it	cc
90008452:	2000      	movcc	r0, #0
90008454:	900e      	str	r0, [sp, #56]	; 0x38
90008456:	9804      	ldr	r0, [sp, #16]
90008458:	4284      	cmp	r4, r0
9000845a:	4602      	mov	r2, r0
9000845c:	bf8c      	ite	hi
9000845e:	2200      	movhi	r2, #0
90008460:	2201      	movls	r2, #1
90008462:	4584      	cmp	ip, r0
90008464:	bf38      	it	cc
90008466:	2200      	movcc	r2, #0
90008468:	ebb4 0f83 	cmp.w	r4, r3, lsl #2
9000846c:	920f      	str	r2, [sp, #60]	; 0x3c
9000846e:	bf94      	ite	ls
90008470:	2201      	movls	r2, #1
90008472:	2200      	movhi	r2, #0
90008474:	ebbc 0f83 	cmp.w	ip, r3, lsl #2
90008478:	f002 0201 	and.w	r2, r2, #1
9000847c:	bf38      	it	cc
9000847e:	2200      	movcc	r2, #0
90008480:	9210      	str	r2, [sp, #64]	; 0x40
90008482:	9a11      	ldr	r2, [sp, #68]	; 0x44
90008484:	4294      	cmp	r4, r2
90008486:	4613      	mov	r3, r2
90008488:	bf8c      	ite	hi
9000848a:	2300      	movhi	r3, #0
9000848c:	2301      	movls	r3, #1
9000848e:	4594      	cmp	ip, r2
90008490:	bf38      	it	cc
90008492:	2300      	movcc	r3, #0
90008494:	ebb4 0f41 	cmp.w	r4, r1, lsl #1
90008498:	9311      	str	r3, [sp, #68]	; 0x44
9000849a:	bf94      	ite	ls
9000849c:	2301      	movls	r3, #1
9000849e:	2300      	movhi	r3, #0
900084a0:	ebbc 0f41 	cmp.w	ip, r1, lsl #1
900084a4:	f003 0301 	and.w	r3, r3, #1
900084a8:	bf38      	it	cc
900084aa:	2300      	movcc	r3, #0
900084ac:	9312      	str	r3, [sp, #72]	; 0x48
900084ae:	ebc7 1307 	rsb	r3, r7, r7, lsl #4
900084b2:	429c      	cmp	r4, r3
900084b4:	bf8c      	ite	hi
900084b6:	2200      	movhi	r2, #0
900084b8:	2201      	movls	r2, #1
900084ba:	459c      	cmp	ip, r3
900084bc:	bf38      	it	cc
900084be:	2200      	movcc	r2, #0
900084c0:	9204      	str	r2, [sp, #16]
900084c2:	e014      	b.n	900084ee <BSP_I2C4_Init+0x292>
900084c4:	2401f838 	.word	0x2401f838
900084c8:	24020240 	.word	0x24020240
900084cc:	58001c00 	.word	0x58001c00
900084d0:	58024400 	.word	0x58024400
900084d4:	58020c00 	.word	0x58020c00
900084d8:	3b9aca00 	.word	0x3b9aca00
900084dc:	2402023c 	.word	0x2402023c
900084e0:	2401f83c 	.word	0x2401f83c
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
900084e4:	f1be 0f10 	cmp.w	lr, #16
900084e8:	44b8      	add	r8, r7
900084ea:	f000 826c 	beq.w	900089c6 <BSP_I2C4_Init+0x76a>
      if (tscldel >= (uint32_t)tscldel_min)
900084ee:	f5b8 7faf 	cmp.w	r8, #350	; 0x15e
900084f2:	4673      	mov	r3, lr
      uint32_t tscldel = (scldel + 1U) * (presc + 1U) * ti2cclk;
900084f4:	f10e 0e01 	add.w	lr, lr, #1
      if (tscldel >= (uint32_t)tscldel_min)
900084f8:	d3f4      	bcc.n	900084e4 <BSP_I2C4_Init+0x288>
            if(presc != prev_presc)
900084fa:	ebbb 0205 	subs.w	r2, fp, r5
900084fe:	bf18      	it	ne
90008500:	2201      	movne	r2, #1
90008502:	2c00      	cmp	r4, #0
90008504:	bf18      	it	ne
90008506:	2200      	movne	r2, #0
90008508:	2a00      	cmp	r2, #0
9000850a:	f040 824a 	bne.w	900089a2 <BSP_I2C4_Init+0x746>
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
9000850e:	45bc      	cmp	ip, r7
90008510:	bf34      	ite	cc
90008512:	2200      	movcc	r2, #0
90008514:	2201      	movcs	r2, #1
90008516:	42bc      	cmp	r4, r7
90008518:	bf88      	it	hi
9000851a:	2200      	movhi	r2, #0
            if(presc != prev_presc)
9000851c:	45ab      	cmp	fp, r5
9000851e:	bf0c      	ite	eq
90008520:	2200      	moveq	r2, #0
90008522:	f002 0201 	andne.w	r2, r2, #1
90008526:	2a00      	cmp	r2, #0
90008528:	f000 80fd 	beq.w	90008726 <BSP_I2C4_Init+0x4ca>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000852c:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90008530:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90008534:	2001      	movs	r0, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008536:	f84a 5021 	str.w	r5, [sl, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000853a:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000853e:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90008542:	6088      	str	r0, [r1, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008544:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90008546:	604b      	str	r3, [r1, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90008548:	f200 81a5 	bhi.w	90008896 <BSP_I2C4_Init+0x63a>
9000854c:	46ab      	mov	fp, r5
            if(presc != prev_presc)
9000854e:	9906      	ldr	r1, [sp, #24]
90008550:	45ab      	cmp	fp, r5
90008552:	bf0c      	ite	eq
90008554:	2100      	moveq	r1, #0
90008556:	f001 0101 	andne.w	r1, r1, #1
9000855a:	2900      	cmp	r1, #0
9000855c:	f000 80ff 	beq.w	9000875e <BSP_I2C4_Init+0x502>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008560:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90008564:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90008568:	2003      	movs	r0, #3
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000856a:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000856e:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008572:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90008576:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008578:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000857a:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000857c:	f200 818b 	bhi.w	90008896 <BSP_I2C4_Init+0x63a>
90008580:	460a      	mov	r2, r1
90008582:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90008584:	9908      	ldr	r1, [sp, #32]
90008586:	45ab      	cmp	fp, r5
90008588:	bf0c      	ite	eq
9000858a:	2100      	moveq	r1, #0
9000858c:	f001 0101 	andne.w	r1, r1, #1
90008590:	2900      	cmp	r1, #0
90008592:	f000 80ff 	beq.w	90008794 <BSP_I2C4_Init+0x538>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008596:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000859a:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000859e:	2005      	movs	r0, #5
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900085a0:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900085a4:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900085a8:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900085ac:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900085ae:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900085b0:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900085b2:	f200 8170 	bhi.w	90008896 <BSP_I2C4_Init+0x63a>
900085b6:	460a      	mov	r2, r1
900085b8:	46ab      	mov	fp, r5
            if(presc != prev_presc)
900085ba:	990b      	ldr	r1, [sp, #44]	; 0x2c
900085bc:	45ab      	cmp	fp, r5
900085be:	bf0c      	ite	eq
900085c0:	2100      	moveq	r1, #0
900085c2:	f001 0101 	andne.w	r1, r1, #1
900085c6:	2900      	cmp	r1, #0
900085c8:	f000 80fe 	beq.w	900087c8 <BSP_I2C4_Init+0x56c>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900085cc:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900085d0:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900085d4:	2007      	movs	r0, #7
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900085d6:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900085da:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900085de:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900085e2:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900085e4:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900085e6:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900085e8:	f200 8155 	bhi.w	90008896 <BSP_I2C4_Init+0x63a>
900085ec:	460a      	mov	r2, r1
900085ee:	46ab      	mov	fp, r5
            if(presc != prev_presc)
900085f0:	990d      	ldr	r1, [sp, #52]	; 0x34
900085f2:	45ab      	cmp	fp, r5
900085f4:	bf0c      	ite	eq
900085f6:	2100      	moveq	r1, #0
900085f8:	f001 0101 	andne.w	r1, r1, #1
900085fc:	2900      	cmp	r1, #0
900085fe:	f000 80fd 	beq.w	900087fc <BSP_I2C4_Init+0x5a0>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008602:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90008606:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000860a:	2009      	movs	r0, #9
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000860c:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90008610:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008614:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90008618:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000861a:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000861c:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000861e:	f200 813a 	bhi.w	90008896 <BSP_I2C4_Init+0x63a>
90008622:	460a      	mov	r2, r1
90008624:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90008626:	990f      	ldr	r1, [sp, #60]	; 0x3c
90008628:	45ab      	cmp	fp, r5
9000862a:	bf0c      	ite	eq
9000862c:	2100      	moveq	r1, #0
9000862e:	f001 0101 	andne.w	r1, r1, #1
90008632:	2900      	cmp	r1, #0
90008634:	f000 80fc 	beq.w	90008830 <BSP_I2C4_Init+0x5d4>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008638:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000863c:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90008640:	200b      	movs	r0, #11
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008642:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90008646:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000864a:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000864e:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008650:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90008652:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90008654:	f200 811f 	bhi.w	90008896 <BSP_I2C4_Init+0x63a>
90008658:	46ab      	mov	fp, r5
            if(presc != prev_presc)
9000865a:	9e11      	ldr	r6, [sp, #68]	; 0x44
9000865c:	455d      	cmp	r5, fp
9000865e:	bf0c      	ite	eq
90008660:	2600      	moveq	r6, #0
90008662:	f006 0601 	andne.w	r6, r6, #1
90008666:	2e00      	cmp	r6, #0
90008668:	f000 80fb 	beq.w	90008862 <BSP_I2C4_Init+0x606>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000866c:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90008670:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90008674:	210d      	movs	r1, #13
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008676:	4650      	mov	r0, sl
90008678:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000867c:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008680:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90008684:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90008686:	6091      	str	r1, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90008688:	f200 8105 	bhi.w	90008896 <BSP_I2C4_Init+0x63a>
9000868c:	4631      	mov	r1, r6
9000868e:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90008690:	9e04      	ldr	r6, [sp, #16]
90008692:	455d      	cmp	r5, fp
90008694:	bf0c      	ite	eq
90008696:	2600      	moveq	r6, #0
90008698:	f006 0601 	andne.w	r6, r6, #1
9000869c:	2e00      	cmp	r6, #0
9000869e:	f000 817c 	beq.w	9000899a <BSP_I2C4_Init+0x73e>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900086a2:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900086a6:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900086aa:	4650      	mov	r0, sl
900086ac:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
900086b0:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900086b4:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900086b8:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900086ba:	f04f 030f 	mov.w	r3, #15
900086be:	6093      	str	r3, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900086c0:	f200 80e9 	bhi.w	90008896 <BSP_I2C4_Init+0x63a>
900086c4:	46ab      	mov	fp, r5
        for (sdadel = 0; sdadel < I2C_SDADEL_MAX; sdadel++)
900086c6:	e70d      	b.n	900084e4 <BSP_I2C4_Init+0x288>
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
900086c8:	9a07      	ldr	r2, [sp, #28]
900086ca:	9b08      	ldr	r3, [sp, #32]
900086cc:	3214      	adds	r2, #20
900086ce:	3301      	adds	r3, #1
900086d0:	9207      	str	r2, [sp, #28]
900086d2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
900086d4:	9308      	str	r3, [sp, #32]
900086d6:	4293      	cmp	r3, r2
900086d8:	f040 80ff 	bne.w	900088da <BSP_I2C4_Init+0x67e>
        if (idx < I2C_VALID_TIMING_NBR)
900086dc:	297f      	cmp	r1, #127	; 0x7f
900086de:	d818      	bhi.n	90008712 <BSP_I2C4_Init+0x4b6>
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
900086e0:	eb01 0381 	add.w	r3, r1, r1, lsl #2
900086e4:	990b      	ldr	r1, [sp, #44]	; 0x2c
900086e6:	eb01 0283 	add.w	r2, r1, r3, lsl #2
900086ea:	f851 4023 	ldr.w	r4, [r1, r3, lsl #2]
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
900086ee:	6850      	ldr	r0, [r2, #4]
                ((I2c_valid_timing[idx].scll & 0xFFU) << 0);
900086f0:	7c13      	ldrb	r3, [r2, #16]
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
900086f2:	0500      	lsls	r0, r0, #20
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
900086f4:	ea43 7304 	orr.w	r3, r3, r4, lsl #28
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
900086f8:	f400 0070 	and.w	r0, r0, #15728640	; 0xf00000
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
900086fc:	e9d2 1202 	ldrd	r1, r2, [r2, #8]
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
90008700:	4303      	orrs	r3, r0
                ((I2c_valid_timing[idx].tsdadel & 0x0FU) << 16) |\
90008702:	0409      	lsls	r1, r1, #16
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
90008704:	0212      	lsls	r2, r2, #8
                ((I2c_valid_timing[idx].tsdadel & 0x0FU) << 16) |\
90008706:	f401 2170 	and.w	r1, r1, #983040	; 0xf0000
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
9000870a:	b292      	uxth	r2, r2
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
9000870c:	430b      	orrs	r3, r1
9000870e:	4313      	orrs	r3, r2
90008710:	9303      	str	r3, [sp, #12]
        if (MX_I2C4_Init(&hbus_i2c4, I2C_GetTiming(HAL_RCC_GetPCLK2Freq(), BUS_I2C4_FREQUENCY)) != HAL_OK)
90008712:	9903      	ldr	r1, [sp, #12]
90008714:	48b5      	ldr	r0, [pc, #724]	; (900089ec <BSP_I2C4_Init+0x790>)
90008716:	f7ff fd81 	bl	9000821c <MX_I2C4_Init>
9000871a:	2800      	cmp	r0, #0
9000871c:	f43f ada8 	beq.w	90008270 <BSP_I2C4_Init+0x14>
          ret = BSP_ERROR_BUS_FAILURE;
90008720:	f06f 0007 	mvn.w	r0, #7
  return ret;
90008724:	e5a5      	b.n	90008272 <BSP_I2C4_Init+0x16>
            if(presc != prev_presc)
90008726:	4632      	mov	r2, r6
90008728:	9905      	ldr	r1, [sp, #20]
9000872a:	45ab      	cmp	fp, r5
9000872c:	bf0c      	ite	eq
9000872e:	2100      	moveq	r1, #0
90008730:	f001 0101 	andne.w	r1, r1, #1
90008734:	2900      	cmp	r1, #0
90008736:	f43f af0a 	beq.w	9000854e <BSP_I2C4_Init+0x2f2>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000873a:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000873e:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90008742:	2002      	movs	r0, #2
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008744:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90008748:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000874c:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90008750:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008752:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90008754:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90008756:	f200 809e 	bhi.w	90008896 <BSP_I2C4_Init+0x63a>
9000875a:	460a      	mov	r2, r1
9000875c:	46ab      	mov	fp, r5
            if(presc != prev_presc)
9000875e:	9907      	ldr	r1, [sp, #28]
90008760:	45ab      	cmp	fp, r5
90008762:	bf0c      	ite	eq
90008764:	2100      	moveq	r1, #0
90008766:	f001 0101 	andne.w	r1, r1, #1
9000876a:	2900      	cmp	r1, #0
9000876c:	f43f af0a 	beq.w	90008584 <BSP_I2C4_Init+0x328>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008770:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90008774:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90008778:	2004      	movs	r0, #4
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000877a:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000877e:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008782:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90008786:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008788:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000878a:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000878c:	f200 8083 	bhi.w	90008896 <BSP_I2C4_Init+0x63a>
90008790:	460a      	mov	r2, r1
90008792:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90008794:	9909      	ldr	r1, [sp, #36]	; 0x24
90008796:	45ab      	cmp	fp, r5
90008798:	bf0c      	ite	eq
9000879a:	2100      	moveq	r1, #0
9000879c:	f001 0101 	andne.w	r1, r1, #1
900087a0:	2900      	cmp	r1, #0
900087a2:	f43f af0a 	beq.w	900085ba <BSP_I2C4_Init+0x35e>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900087a6:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900087aa:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900087ae:	2006      	movs	r0, #6
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900087b0:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900087b4:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900087b8:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900087bc:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900087be:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900087c0:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900087c2:	d868      	bhi.n	90008896 <BSP_I2C4_Init+0x63a>
900087c4:	460a      	mov	r2, r1
900087c6:	46ab      	mov	fp, r5
            if(presc != prev_presc)
900087c8:	990c      	ldr	r1, [sp, #48]	; 0x30
900087ca:	45ab      	cmp	fp, r5
900087cc:	bf0c      	ite	eq
900087ce:	2100      	moveq	r1, #0
900087d0:	f001 0101 	andne.w	r1, r1, #1
900087d4:	2900      	cmp	r1, #0
900087d6:	f43f af0b 	beq.w	900085f0 <BSP_I2C4_Init+0x394>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900087da:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900087de:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900087e2:	2008      	movs	r0, #8
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900087e4:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900087e8:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900087ec:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900087f0:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900087f2:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900087f4:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900087f6:	d84e      	bhi.n	90008896 <BSP_I2C4_Init+0x63a>
900087f8:	460a      	mov	r2, r1
900087fa:	46ab      	mov	fp, r5
            if(presc != prev_presc)
900087fc:	990e      	ldr	r1, [sp, #56]	; 0x38
900087fe:	45ab      	cmp	fp, r5
90008800:	bf0c      	ite	eq
90008802:	2100      	moveq	r1, #0
90008804:	f001 0101 	andne.w	r1, r1, #1
90008808:	2900      	cmp	r1, #0
9000880a:	f43f af0c 	beq.w	90008626 <BSP_I2C4_Init+0x3ca>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000880e:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90008812:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90008816:	200a      	movs	r0, #10
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008818:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000881c:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008820:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90008824:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008826:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90008828:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000882a:	d834      	bhi.n	90008896 <BSP_I2C4_Init+0x63a>
9000882c:	460a      	mov	r2, r1
9000882e:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90008830:	9910      	ldr	r1, [sp, #64]	; 0x40
90008832:	45ab      	cmp	fp, r5
90008834:	bf0c      	ite	eq
90008836:	2100      	moveq	r1, #0
90008838:	f001 0101 	andne.w	r1, r1, #1
9000883c:	2900      	cmp	r1, #0
9000883e:	f000 80ae 	beq.w	9000899e <BSP_I2C4_Init+0x742>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008842:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90008846:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000884a:	200c      	movs	r0, #12
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000884c:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90008850:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008854:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90008858:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000885a:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000885c:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000885e:	d81a      	bhi.n	90008896 <BSP_I2C4_Init+0x63a>
90008860:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90008862:	9e12      	ldr	r6, [sp, #72]	; 0x48
90008864:	455d      	cmp	r5, fp
90008866:	bf0c      	ite	eq
90008868:	2600      	moveq	r6, #0
9000886a:	f006 0601 	andne.w	r6, r6, #1
9000886e:	2e00      	cmp	r6, #0
90008870:	f43f af0e 	beq.w	90008690 <BSP_I2C4_Init+0x434>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90008874:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90008878:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000887c:	4650      	mov	r0, sl
9000887e:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
90008882:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90008886:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000888a:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000888c:	f04f 030e 	mov.w	r3, #14
90008890:	6093      	str	r3, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90008892:	f67f af17 	bls.w	900086c4 <BSP_I2C4_Init+0x468>
90008896:	4b56      	ldr	r3, [pc, #344]	; (900089f0 <BSP_I2C4_Init+0x794>)
90008898:	900b      	str	r0, [sp, #44]	; 0x2c
9000889a:	f8c3 9000 	str.w	r9, [r3]
              I2c_valid_timing_nbr ++;
9000889e:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
900088a2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
900088a4:	f240 4201 	movw	r2, #1025	; 0x401
900088a8:	f240 2657 	movw	r6, #599	; 0x257
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
900088ac:	f640 1ac4 	movw	sl, #2500	; 0x9c4
900088b0:	1ad2      	subs	r2, r2, r3
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
900088b2:	f240 4b12 	movw	fp, #1042	; 0x412
900088b6:	920d      	str	r2, [sp, #52]	; 0x34
900088b8:	9a02      	ldr	r2, [sp, #8]
900088ba:	4296      	cmp	r6, r2
900088bc:	bf38      	it	cc
900088be:	4616      	movcc	r6, r2
900088c0:	4a4c      	ldr	r2, [pc, #304]	; (900089f4 <BSP_I2C4_Init+0x798>)
900088c2:	9207      	str	r2, [sp, #28]
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
900088c4:	2200      	movs	r2, #0
900088c6:	9208      	str	r2, [sp, #32]
900088c8:	f04f 32ff 	mov.w	r2, #4294967295
900088cc:	4611      	mov	r1, r2
900088ce:	f103 0232 	add.w	r2, r3, #50	; 0x32
900088d2:	f6a3 0334 	subw	r3, r3, #2100	; 0x834
900088d6:	920c      	str	r2, [sp, #48]	; 0x30
900088d8:	930e      	str	r3, [sp, #56]	; 0x38
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
900088da:	9b07      	ldr	r3, [sp, #28]
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
900088dc:	f04f 0800 	mov.w	r8, #0
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
900088e0:	6818      	ldr	r0, [r3, #0]
900088e2:	9b02      	ldr	r3, [sp, #8]
900088e4:	fb00 3003 	mla	r0, r0, r3, r3
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
900088e8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
900088ea:	1a1b      	subs	r3, r3, r0
900088ec:	ea4f 0943 	mov.w	r9, r3, lsl #1
900088f0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
900088f2:	eb03 0e00 	add.w	lr, r3, r0
900088f6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
900088f8:	4403      	add	r3, r0
900088fa:	9309      	str	r3, [sp, #36]	; 0x24
900088fc:	e006      	b.n	9000890c <BSP_I2C4_Init+0x6b0>
900088fe:	f5b8 7f80 	cmp.w	r8, #256	; 0x100
90008902:	4486      	add	lr, r0
90008904:	eba9 0900 	sub.w	r9, r9, r0
90008908:	f43f aede 	beq.w	900086c8 <BSP_I2C4_Init+0x46c>
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
9000890c:	f240 5214 	movw	r2, #1300	; 0x514
90008910:	f8cd 8004 	str.w	r8, [sp, #4]
90008914:	f1ae 0332 	sub.w	r3, lr, #50	; 0x32
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
90008918:	f108 0801 	add.w	r8, r8, #1
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
9000891c:	4596      	cmp	lr, r2
9000891e:	d9ee      	bls.n	900088fe <BSP_I2C4_Init+0x6a2>
90008920:	9a02      	ldr	r2, [sp, #8]
90008922:	ebb2 0f93 	cmp.w	r2, r3, lsr #2
90008926:	d2ea      	bcs.n	900088fe <BSP_I2C4_Init+0x6a2>
90008928:	f640 0c34 	movw	ip, #2100	; 0x834
9000892c:	464c      	mov	r4, r9
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
9000892e:	f8cd 9018 	str.w	r9, [sp, #24]
90008932:	2200      	movs	r2, #0
90008934:	ebac 0c03 	sub.w	ip, ip, r3
90008938:	9b09      	ldr	r3, [sp, #36]	; 0x24
9000893a:	4689      	mov	r9, r1
9000893c:	4473      	add	r3, lr
9000893e:	e9cd e804 	strd	lr, r8, [sp, #16]
90008942:	f8dd 8020 	ldr.w	r8, [sp, #32]
90008946:	f8dd e01c 	ldr.w	lr, [sp, #28]
9000894a:	e005      	b.n	90008958 <BSP_I2C4_Init+0x6fc>
9000894c:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
90008950:	4403      	add	r3, r0
90008952:	eba4 0400 	sub.w	r4, r4, r0
90008956:	d01a      	beq.n	9000898e <BSP_I2C4_Init+0x732>
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
90008958:	eb0c 0103 	add.w	r1, ip, r3
9000895c:	4617      	mov	r7, r2
9000895e:	f203 15a1 	addw	r5, r3, #417	; 0x1a1
          uint32_t tscl_h = tafdel_min + dnf_delay + (2U * ti2cclk) + ((sclh + 1U) * tpresc);
90008962:	3201      	adds	r2, #1
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
90008964:	42b1      	cmp	r1, r6
90008966:	d9f1      	bls.n	9000894c <BSP_I2C4_Init+0x6f0>
90008968:	455d      	cmp	r5, fp
9000896a:	d8ef      	bhi.n	9000894c <BSP_I2C4_Init+0x6f0>
            if (error < 0)
9000896c:	ea33 0123 	bics.w	r1, r3, r3, asr #32
90008970:	bf28      	it	cs
90008972:	4621      	movcs	r1, r4
            if ((uint32_t)error < prev_error)
90008974:	458a      	cmp	sl, r1
90008976:	d9e9      	bls.n	9000894c <BSP_I2C4_Init+0x6f0>
              I2c_valid_timing[count].sclh = sclh;
90008978:	468a      	mov	sl, r1
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
9000897a:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
              I2c_valid_timing[count].scll = scll;
9000897e:	9901      	ldr	r1, [sp, #4]
              I2c_valid_timing[count].sclh = sclh;
90008980:	46c1      	mov	r9, r8
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
90008982:	4403      	add	r3, r0
90008984:	eba4 0400 	sub.w	r4, r4, r0
              I2c_valid_timing[count].sclh = sclh;
90008988:	e9ce 7103 	strd	r7, r1, [lr, #12]
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
9000898c:	d1e4      	bne.n	90008958 <BSP_I2C4_Init+0x6fc>
9000898e:	4649      	mov	r1, r9
90008990:	f8dd 9018 	ldr.w	r9, [sp, #24]
90008994:	e9dd e804 	ldrd	lr, r8, [sp, #16]
90008998:	e7b1      	b.n	900088fe <BSP_I2C4_Init+0x6a2>
9000899a:	460e      	mov	r6, r1
9000899c:	e5a2      	b.n	900084e4 <BSP_I2C4_Init+0x288>
            if(presc != prev_presc)
9000899e:	4611      	mov	r1, r2
900089a0:	e65b      	b.n	9000865a <BSP_I2C4_Init+0x3fe>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900089a2:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900089a6:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900089aa:	2000      	movs	r0, #0
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900089ac:	f84a 5021 	str.w	r5, [sl, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900089b0:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900089b4:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900089b8:	6088      	str	r0, [r1, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900089ba:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900089bc:	604b      	str	r3, [r1, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900089be:	f63f af6a 	bhi.w	90008896 <BSP_I2C4_Init+0x63a>
900089c2:	46ab      	mov	fp, r5
900089c4:	e6b0      	b.n	90008728 <BSP_I2C4_Init+0x4cc>
  for (presc = 0; presc < I2C_PRESC_MAX; presc++)
900089c6:	3501      	adds	r5, #1
900089c8:	9b02      	ldr	r3, [sp, #8]
900089ca:	2d10      	cmp	r5, #16
900089cc:	441f      	add	r7, r3
900089ce:	f47f acc7 	bne.w	90008360 <BSP_I2C4_Init+0x104>
900089d2:	b126      	cbz	r6, 900089de <BSP_I2C4_Init+0x782>
900089d4:	4b06      	ldr	r3, [pc, #24]	; (900089f0 <BSP_I2C4_Init+0x794>)
900089d6:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
900089da:	f8c3 9000 	str.w	r9, [r3]
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
900089de:	9b0a      	ldr	r3, [sp, #40]	; 0x28
900089e0:	2b00      	cmp	r3, #0
900089e2:	f43f ae96 	beq.w	90008712 <BSP_I2C4_Init+0x4b6>
900089e6:	4b03      	ldr	r3, [pc, #12]	; (900089f4 <BSP_I2C4_Init+0x798>)
900089e8:	930b      	str	r3, [sp, #44]	; 0x2c
900089ea:	e75a      	b.n	900088a2 <BSP_I2C4_Init+0x646>
900089ec:	24020240 	.word	0x24020240
900089f0:	2402023c 	.word	0x2402023c
900089f4:	2401f83c 	.word	0x2401f83c

900089f8 <BSP_I2C4_WriteReg>:
{
900089f8:	b530      	push	{r4, r5, lr}
900089fa:	4614      	mov	r4, r2
900089fc:	b085      	sub	sp, #20
  * @param  Length     data length in bytes
  * @retval BSP status
  */
static int32_t I2C4_WriteReg(uint16_t DevAddr, uint16_t Reg, uint16_t MemAddSize, uint8_t *pData, uint16_t Length)
{
  if(HAL_I2C_Mem_Write(&hbus_i2c4, DevAddr, Reg, MemAddSize, pData, Length, 1000) == HAL_OK)
900089fe:	f44f 757a 	mov.w	r5, #1000	; 0x3e8
90008a02:	460a      	mov	r2, r1
90008a04:	9301      	str	r3, [sp, #4]
90008a06:	4601      	mov	r1, r0
90008a08:	2301      	movs	r3, #1
90008a0a:	4809      	ldr	r0, [pc, #36]	; (90008a30 <BSP_I2C4_WriteReg+0x38>)
90008a0c:	9502      	str	r5, [sp, #8]
90008a0e:	9400      	str	r4, [sp, #0]
90008a10:	f001 f958 	bl	90009cc4 <HAL_I2C_Mem_Write>
90008a14:	b908      	cbnz	r0, 90008a1a <BSP_I2C4_WriteReg+0x22>
}
90008a16:	b005      	add	sp, #20
90008a18:	bd30      	pop	{r4, r5, pc}
    if( HAL_I2C_GetError(&hbus_i2c4) == HAL_I2C_ERROR_AF)
90008a1a:	4805      	ldr	r0, [pc, #20]	; (90008a30 <BSP_I2C4_WriteReg+0x38>)
90008a1c:	f001 fbf4 	bl	9000a208 <HAL_I2C_GetError>
      ret =  BSP_ERROR_PERIPH_FAILURE;
90008a20:	2804      	cmp	r0, #4
90008a22:	bf0c      	ite	eq
90008a24:	f06f 0065 	mvneq.w	r0, #101	; 0x65
90008a28:	f06f 0003 	mvnne.w	r0, #3
90008a2c:	e7f3      	b.n	90008a16 <BSP_I2C4_WriteReg+0x1e>
90008a2e:	bf00      	nop
90008a30:	24020240 	.word	0x24020240

90008a34 <BSP_I2C4_ReadReg>:
{
90008a34:	b530      	push	{r4, r5, lr}
90008a36:	4614      	mov	r4, r2
90008a38:	b085      	sub	sp, #20
  * @param  Length     data length in bytes
  * @retval BSP status
  */
static int32_t I2C4_ReadReg(uint16_t DevAddr, uint16_t Reg, uint16_t MemAddSize, uint8_t *pData, uint16_t Length)
{
  if (HAL_I2C_Mem_Read(&hbus_i2c4, DevAddr, Reg, MemAddSize, pData, Length, 1000) == HAL_OK)
90008a3a:	f44f 757a 	mov.w	r5, #1000	; 0x3e8
90008a3e:	460a      	mov	r2, r1
90008a40:	9301      	str	r3, [sp, #4]
90008a42:	4601      	mov	r1, r0
90008a44:	2301      	movs	r3, #1
90008a46:	4809      	ldr	r0, [pc, #36]	; (90008a6c <BSP_I2C4_ReadReg+0x38>)
90008a48:	9502      	str	r5, [sp, #8]
90008a4a:	9400      	str	r4, [sp, #0]
90008a4c:	f001 fa6e 	bl	90009f2c <HAL_I2C_Mem_Read>
90008a50:	b908      	cbnz	r0, 90008a56 <BSP_I2C4_ReadReg+0x22>
}
90008a52:	b005      	add	sp, #20
90008a54:	bd30      	pop	{r4, r5, pc}
    if( HAL_I2C_GetError(&hbus_i2c4) == HAL_I2C_ERROR_AF)
90008a56:	4805      	ldr	r0, [pc, #20]	; (90008a6c <BSP_I2C4_ReadReg+0x38>)
90008a58:	f001 fbd6 	bl	9000a208 <HAL_I2C_GetError>
      ret =  BSP_ERROR_PERIPH_FAILURE;
90008a5c:	2804      	cmp	r0, #4
90008a5e:	bf0c      	ite	eq
90008a60:	f06f 0065 	mvneq.w	r0, #101	; 0x65
90008a64:	f06f 0003 	mvnne.w	r0, #3
90008a68:	e7f3      	b.n	90008a52 <BSP_I2C4_ReadReg+0x1e>
90008a6a:	bf00      	nop
90008a6c:	24020240 	.word	0x24020240

90008a70 <BSP_GetTick>:
  return (int32_t)HAL_GetTick();
90008a70:	f000 baaa 	b.w	90008fc8 <HAL_GetTick>

90008a74 <BSP_SDRAM_DeInit>:
  */
int32_t BSP_SDRAM_DeInit(uint32_t Instance)
{
  int32_t ret = BSP_ERROR_NONE;

  if(Instance >= SDRAM_INSTANCES_NBR)
90008a74:	b970      	cbnz	r0, 90008a94 <BSP_SDRAM_DeInit+0x20>
{
90008a76:	b510      	push	{r4, lr}
90008a78:	4604      	mov	r4, r0
  {
    ret =  BSP_ERROR_WRONG_PARAM;
  }
  else
  {
    (void)HAL_SDRAM_DeInit(&hsdram[Instance]);
90008a7a:	4808      	ldr	r0, [pc, #32]	; (90008a9c <BSP_SDRAM_DeInit+0x28>)
90008a7c:	f005 f876 	bl	9000db6c <HAL_SDRAM_DeInit>

  /* Prevent unused argument(s) compilation warning */
  UNUSED(hSdram);

  /* Disable NVIC configuration for DMA interrupt */
  HAL_NVIC_DisableIRQ(SDRAM_MDMAx_IRQn);
90008a80:	207a      	movs	r0, #122	; 0x7a
90008a82:	f000 fb0b 	bl	9000909c <HAL_NVIC_DisableIRQ>

  /* Deinitialize the stream for new transfer */
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
90008a86:	4b06      	ldr	r3, [pc, #24]	; (90008aa0 <BSP_SDRAM_DeInit+0x2c>)
90008a88:	4806      	ldr	r0, [pc, #24]	; (90008aa4 <BSP_SDRAM_DeInit+0x30>)
90008a8a:	6003      	str	r3, [r0, #0]
  (void)HAL_MDMA_DeInit(&mdma_handle);
90008a8c:	f003 f98e 	bl	9000bdac <HAL_MDMA_DeInit>
  int32_t ret = BSP_ERROR_NONE;
90008a90:	4620      	mov	r0, r4
}
90008a92:	bd10      	pop	{r4, pc}
    ret =  BSP_ERROR_WRONG_PARAM;
90008a94:	f06f 0001 	mvn.w	r0, #1
}
90008a98:	4770      	bx	lr
90008a9a:	bf00      	nop
90008a9c:	24020294 	.word	0x24020294
90008aa0:	52000040 	.word	0x52000040
90008aa4:	240202c8 	.word	0x240202c8

90008aa8 <MX_SDRAM_BANK2_Init>:
{
90008aa8:	b530      	push	{r4, r5, lr}
  hSdram->Init.MemoryDataWidth    = MemoryDataWidth;
90008aaa:	6102      	str	r2, [r0, #16]
  hSdram->Init.ColumnBitsNumber   = FMC_SDRAM_COLUMN_BITS_NUM_8;
90008aac:	2200      	movs	r2, #0
{
90008aae:	b089      	sub	sp, #36	; 0x24
  hsdram->Instance = FMC_SDRAM_DEVICE;
90008ab0:	4c13      	ldr	r4, [pc, #76]	; (90008b00 <MX_SDRAM_BANK2_Init+0x58>)
  hSdram->Init.ColumnBitsNumber   = FMC_SDRAM_COLUMN_BITS_NUM_8;
90008ab2:	6082      	str	r2, [r0, #8]
  hsdram->Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
90008ab4:	2540      	movs	r5, #64	; 0x40
  hSdram->Init.WriteProtection    = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
90008ab6:	61c2      	str	r2, [r0, #28]
  sdram_timing.ExitSelfRefreshDelay = 7;
90008ab8:	2307      	movs	r3, #7
  hSdram->Init.ReadPipeDelay      = FMC_SDRAM_RPIPE_DELAY_0;
90008aba:	6282      	str	r2, [r0, #40]	; 0x28
  sdram_timing.LoadToActiveDelay    = 2;
90008abc:	2202      	movs	r2, #2
  hSdram->Init.RowBitsNumber      = RowBitsNumber;
90008abe:	60c1      	str	r1, [r0, #12]
  hSdram->Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
90008ac0:	f44f 71c0 	mov.w	r1, #384	; 0x180
  sdram_timing.LoadToActiveDelay    = 2;
90008ac4:	9200      	str	r2, [sp, #0]
  sdram_timing.RCDDelay             = 2;
90008ac6:	9206      	str	r2, [sp, #24]
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
90008ac8:	2201      	movs	r2, #1
  sdram_timing.ExitSelfRefreshDelay = 7;
90008aca:	9301      	str	r3, [sp, #4]
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
90008acc:	6042      	str	r2, [r0, #4]
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
90008ace:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  hsdram->Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
90008ad2:	6165      	str	r5, [r4, #20]
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
90008ad4:	f44f 6500 	mov.w	r5, #2048	; 0x800
  hSdram->Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
90008ad8:	6181      	str	r1, [r0, #24]
  if(HAL_SDRAM_Init(hSdram, &sdram_timing) != HAL_OK)
90008ada:	4669      	mov	r1, sp
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
90008adc:	e9c0 5208 	strd	r5, r2, [r0, #32]
  sdram_timing.SelfRefreshTime      = 4;
90008ae0:	2204      	movs	r2, #4
90008ae2:	e9cd 2302 	strd	r2, r3, [sp, #8]
  sdram_timing.WriteRecoveryTime    = 2;
90008ae6:	2202      	movs	r2, #2
90008ae8:	2302      	movs	r3, #2
90008aea:	e9cd 2304 	strd	r2, r3, [sp, #16]
  hsdram->Instance = FMC_SDRAM_DEVICE;
90008aee:	4b05      	ldr	r3, [pc, #20]	; (90008b04 <MX_SDRAM_BANK2_Init+0x5c>)
90008af0:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_Init(hSdram, &sdram_timing) != HAL_OK)
90008af2:	f005 f811 	bl	9000db18 <HAL_SDRAM_Init>
}
90008af6:	3800      	subs	r0, #0
90008af8:	bf18      	it	ne
90008afa:	2001      	movne	r0, #1
90008afc:	b009      	add	sp, #36	; 0x24
90008afe:	bd30      	pop	{r4, r5, pc}
90008b00:	24020294 	.word	0x24020294
90008b04:	52004140 	.word	0x52004140

90008b08 <BSP_SDRAM_Init>:
  if(Instance >=SDRAM_INSTANCES_NBR)
90008b08:	2800      	cmp	r0, #0
90008b0a:	f040 80d2 	bne.w	90008cb2 <BSP_SDRAM_Init+0x1aa>
  __HAL_RCC_FMC_CLK_ENABLE();
90008b0e:	4b6c      	ldr	r3, [pc, #432]	; (90008cc0 <BSP_SDRAM_Init+0x1b8>)
  gpio_init_structure.Alternate = GPIO_AF12_FMC;
90008b10:	210c      	movs	r1, #12
  __HAL_RCC_FMC_CLK_ENABLE();
90008b12:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
90008b16:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
{
90008b1a:	b570      	push	{r4, r5, r6, lr}
  __HAL_RCC_FMC_CLK_ENABLE();
90008b1c:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
{
90008b20:	b08e      	sub	sp, #56	; 0x38
  __HAL_RCC_FMC_CLK_ENABLE();
90008b22:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
90008b26:	4605      	mov	r5, r0
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
90008b28:	f24c 7003 	movw	r0, #50947	; 0xc703
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
90008b2c:	4c65      	ldr	r4, [pc, #404]	; (90008cc4 <BSP_SDRAM_Init+0x1bc>)
  __HAL_RCC_FMC_CLK_ENABLE();
90008b2e:	f402 5280 	and.w	r2, r2, #4096	; 0x1000
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
90008b32:	4e65      	ldr	r6, [pc, #404]	; (90008cc8 <BSP_SDRAM_Init+0x1c0>)
  __HAL_RCC_FMC_CLK_ENABLE();
90008b34:	9201      	str	r2, [sp, #4]
90008b36:	9a01      	ldr	r2, [sp, #4]
  SDRAM_MDMAx_CLK_ENABLE();
90008b38:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
90008b3c:	f042 0201 	orr.w	r2, r2, #1
90008b40:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
90008b44:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
90008b48:	f002 0201 	and.w	r2, r2, #1
90008b4c:	9202      	str	r2, [sp, #8]
90008b4e:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOD_CLK_ENABLE();
90008b50:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90008b54:	f042 0208 	orr.w	r2, r2, #8
90008b58:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
90008b5c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90008b60:	f002 0208 	and.w	r2, r2, #8
90008b64:	9203      	str	r2, [sp, #12]
90008b66:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOE_CLK_ENABLE();
90008b68:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90008b6c:	f042 0210 	orr.w	r2, r2, #16
90008b70:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
90008b74:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90008b78:	f002 0210 	and.w	r2, r2, #16
90008b7c:	9204      	str	r2, [sp, #16]
90008b7e:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOF_CLK_ENABLE();
90008b80:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90008b84:	f042 0220 	orr.w	r2, r2, #32
90008b88:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
90008b8c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90008b90:	f002 0220 	and.w	r2, r2, #32
90008b94:	9205      	str	r2, [sp, #20]
90008b96:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
90008b98:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90008b9c:	f042 0240 	orr.w	r2, r2, #64	; 0x40
90008ba0:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
90008ba4:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90008ba8:	f002 0240 	and.w	r2, r2, #64	; 0x40
90008bac:	9206      	str	r2, [sp, #24]
90008bae:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOH_CLK_ENABLE();
90008bb0:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90008bb4:	f042 0280 	orr.w	r2, r2, #128	; 0x80
90008bb8:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
90008bbc:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
  gpio_init_structure.Alternate = GPIO_AF12_FMC;
90008bc0:	910c      	str	r1, [sp, #48]	; 0x30
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
90008bc2:	2102      	movs	r1, #2
  __HAL_RCC_GPIOH_CLK_ENABLE();
90008bc4:	f003 0380 	and.w	r3, r3, #128	; 0x80
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
90008bc8:	e9cd 0108 	strd	r0, r1, [sp, #32]
90008bcc:	2001      	movs	r0, #1
90008bce:	2103      	movs	r1, #3
  __HAL_RCC_GPIOH_CLK_ENABLE();
90008bd0:	9307      	str	r3, [sp, #28]
90008bd2:	9b07      	ldr	r3, [sp, #28]
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
90008bd4:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
90008bd8:	a908      	add	r1, sp, #32
90008bda:	483c      	ldr	r0, [pc, #240]	; (90008ccc <BSP_SDRAM_Init+0x1c4>)
90008bdc:	f000 fc7e 	bl	900094dc <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
90008be0:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &gpio_init_structure);
90008be4:	a908      	add	r1, sp, #32
90008be6:	483a      	ldr	r0, [pc, #232]	; (90008cd0 <BSP_SDRAM_Init+0x1c8>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
90008be8:	9308      	str	r3, [sp, #32]
  HAL_GPIO_Init(GPIOE, &gpio_init_structure);
90008bea:	f000 fc77 	bl	900094dc <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
90008bee:	f64f 033f 	movw	r3, #63551	; 0xf83f
  HAL_GPIO_Init(GPIOF, &gpio_init_structure);
90008bf2:	a908      	add	r1, sp, #32
90008bf4:	4837      	ldr	r0, [pc, #220]	; (90008cd4 <BSP_SDRAM_Init+0x1cc>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
90008bf6:	9308      	str	r3, [sp, #32]
  HAL_GPIO_Init(GPIOF, &gpio_init_structure);
90008bf8:	f000 fc70 	bl	900094dc <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_8 | GPIO_PIN_15;
90008bfc:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &gpio_init_structure);
90008c00:	a908      	add	r1, sp, #32
90008c02:	4835      	ldr	r0, [pc, #212]	; (90008cd8 <BSP_SDRAM_Init+0x1d0>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_8 | GPIO_PIN_15;
90008c04:	9308      	str	r3, [sp, #32]
  HAL_GPIO_Init(GPIOG, &gpio_init_structure);
90008c06:	f000 fc69 	bl	900094dc <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 ;
90008c0a:	23e0      	movs	r3, #224	; 0xe0
  HAL_GPIO_Init(GPIOH, &gpio_init_structure);
90008c0c:	a908      	add	r1, sp, #32
90008c0e:	4833      	ldr	r0, [pc, #204]	; (90008cdc <BSP_SDRAM_Init+0x1d4>)
  gpio_init_structure.Pin   = GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 ;
90008c10:	9308      	str	r3, [sp, #32]
  HAL_GPIO_Init(GPIOH, &gpio_init_structure);
90008c12:	f000 fc63 	bl	900094dc <HAL_GPIO_Init>
  mdma_handle.Init.Priority = MDMA_PRIORITY_HIGH;
90008c16:	2380      	movs	r3, #128	; 0x80
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
90008c18:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
  mdma_handle.Init.SourceInc = MDMA_SRC_INC_WORD;
90008c1c:	f240 2102 	movw	r1, #514	; 0x202
  HAL_MDMA_DeInit(&mdma_handle);
90008c20:	4620      	mov	r0, r4
  mdma_handle.Init.DestDataSize = MDMA_DEST_DATASIZE_WORD;
90008c22:	6223      	str	r3, [r4, #32]
  mdma_handle.Init.BufferTransferLength = 128;
90008c24:	62a3      	str	r3, [r4, #40]	; 0x28
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
90008c26:	6062      	str	r2, [r4, #4]
  mdma_handle.Init.TransferTriggerMode = MDMA_BLOCK_TRANSFER;
90008c28:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
  mdma_handle.Init.SourceInc = MDMA_SRC_INC_WORD;
90008c2c:	6161      	str	r1, [r4, #20]
  mdma_handle.Init.TransferTriggerMode = MDMA_BLOCK_TRANSFER;
90008c2e:	60a2      	str	r2, [r4, #8]
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
90008c30:	4a2b      	ldr	r2, [pc, #172]	; (90008ce0 <BSP_SDRAM_Init+0x1d8>)
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
90008c32:	6334      	str	r4, [r6, #48]	; 0x30
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
90008c34:	6022      	str	r2, [r4, #0]
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
90008c36:	6426      	str	r6, [r4, #64]	; 0x40
  mdma_handle.Init.Priority = MDMA_PRIORITY_HIGH;
90008c38:	e9c4 3503 	strd	r3, r5, [r4, #12]
  mdma_handle.Init.DestinationInc = MDMA_DEST_INC_WORD;
90008c3c:	f640 0308 	movw	r3, #2056	; 0x808
90008c40:	61a3      	str	r3, [r4, #24]
  mdma_handle.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
90008c42:	2320      	movs	r3, #32
90008c44:	61e3      	str	r3, [r4, #28]
  mdma_handle.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
90008c46:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
  mdma_handle.Init.DestBurst = MDMA_DEST_BURST_SINGLE;
90008c4a:	e9c4 550b 	strd	r5, r5, [r4, #44]	; 0x2c
  mdma_handle.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
90008c4e:	6263      	str	r3, [r4, #36]	; 0x24
  mdma_handle.Init.DestBlockAddressOffset = 0;
90008c50:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
  HAL_MDMA_DeInit(&mdma_handle);
90008c54:	f003 f8aa 	bl	9000bdac <HAL_MDMA_DeInit>
  HAL_MDMA_Init(&mdma_handle);
90008c58:	4620      	mov	r0, r4
90008c5a:	f003 f82d 	bl	9000bcb8 <HAL_MDMA_Init>
  HAL_NVIC_SetPriority(SDRAM_MDMAx_IRQn, 0x0F, 0);
90008c5e:	462a      	mov	r2, r5
90008c60:	210f      	movs	r1, #15
90008c62:	207a      	movs	r0, #122	; 0x7a
90008c64:	f000 f9ce 	bl	90009004 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(SDRAM_MDMAx_IRQn);
90008c68:	207a      	movs	r0, #122	; 0x7a
90008c6a:	f000 fa09 	bl	90009080 <HAL_NVIC_EnableIRQ>
    if(MX_SDRAM_BANK2_Init(&hsdram[Instance],FMC_SDRAM_ROW_BITS_NUM_12, FMC_SDRAM_MEM_BUS_WIDTH_16) != HAL_OK)
90008c6e:	2210      	movs	r2, #16
90008c70:	2104      	movs	r1, #4
90008c72:	4630      	mov	r0, r6
90008c74:	f7ff ff18 	bl	90008aa8 <MX_SDRAM_BANK2_Init>
90008c78:	b9f0      	cbnz	r0, 90008cb8 <BSP_SDRAM_Init+0x1b0>
      pRegMode.TargetBank      = FMC_SDRAM_CMD_TARGET_BANK2;
90008c7a:	491a      	ldr	r1, [pc, #104]	; (90008ce4 <BSP_SDRAM_Init+0x1dc>)
90008c7c:	2208      	movs	r2, #8
90008c7e:	2303      	movs	r3, #3
      if(MT48LC4M32B2_Init(&hsdram[Instance], &pRegMode) != MT48LC4M32B2_OK)
90008c80:	4630      	mov	r0, r6
      pRegMode.TargetBank      = FMC_SDRAM_CMD_TARGET_BANK2;
90008c82:	e9c1 2300 	strd	r2, r3, [r1]
90008c86:	f240 6203 	movw	r2, #1539	; 0x603
90008c8a:	2300      	movs	r3, #0
90008c8c:	e9c1 2302 	strd	r2, r3, [r1, #8]
90008c90:	2200      	movs	r2, #0
90008c92:	2330      	movs	r3, #48	; 0x30
90008c94:	e9c1 2304 	strd	r2, r3, [r1, #16]
90008c98:	2200      	movs	r2, #0
90008c9a:	f44f 7300 	mov.w	r3, #512	; 0x200
90008c9e:	e9c1 2306 	strd	r2, r3, [r1, #24]
      if(MT48LC4M32B2_Init(&hsdram[Instance], &pRegMode) != MT48LC4M32B2_OK)
90008ca2:	f7ff fa37 	bl	90008114 <MT48LC4M32B2_Init>
        ret =  BSP_ERROR_COMPONENT_FAILURE;
90008ca6:	2800      	cmp	r0, #0
90008ca8:	bf18      	it	ne
90008caa:	f06f 0004 	mvnne.w	r0, #4
}
90008cae:	b00e      	add	sp, #56	; 0x38
90008cb0:	bd70      	pop	{r4, r5, r6, pc}
    ret =  BSP_ERROR_WRONG_PARAM;
90008cb2:	f06f 0001 	mvn.w	r0, #1
}
90008cb6:	4770      	bx	lr
      ret = BSP_ERROR_NO_INIT;
90008cb8:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
90008cbc:	e7f7      	b.n	90008cae <BSP_SDRAM_Init+0x1a6>
90008cbe:	bf00      	nop
90008cc0:	58024400 	.word	0x58024400
90008cc4:	24020334 	.word	0x24020334
90008cc8:	24020294 	.word	0x24020294
90008ccc:	58020c00 	.word	0x58020c00
90008cd0:	58021000 	.word	0x58021000
90008cd4:	58021400 	.word	0x58021400
90008cd8:	58021800 	.word	0x58021800
90008cdc:	58021c00 	.word	0x58021c00
90008ce0:	52000040 	.word	0x52000040
90008ce4:	240203a0 	.word	0x240203a0

90008ce8 <BSP_TS_Init>:
  * @param  Instance TS instance. Could be only 0.
  * @param  TS_Init  TS Init structure
  * @retval BSP status
  */
int32_t BSP_TS_Init(uint32_t Instance, TS_Init_t *TS_Init)
{
90008ce8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90008cec:	b088      	sub	sp, #32
  int32_t ret = BSP_ERROR_NONE;

  if((Instance >=TS_INSTANCES_NBR) || (TS_Init->Width == 0U) ||( TS_Init->Width > TS_MAX_WIDTH) ||\
90008cee:	2800      	cmp	r0, #0
90008cf0:	d16b      	bne.n	90008dca <BSP_TS_Init+0xe2>
90008cf2:	680b      	ldr	r3, [r1, #0]
90008cf4:	460c      	mov	r4, r1
90008cf6:	1e5a      	subs	r2, r3, #1
90008cf8:	f5b2 7ff0 	cmp.w	r2, #480	; 0x1e0
90008cfc:	d265      	bcs.n	90008dca <BSP_TS_Init+0xe2>
                         (TS_Init->Height == 0U) ||( TS_Init->Height > TS_MAX_HEIGHT) ||\
90008cfe:	684a      	ldr	r2, [r1, #4]
90008d00:	1e51      	subs	r1, r2, #1
90008d02:	f5b1 7f88 	cmp.w	r1, #272	; 0x110
90008d06:	d260      	bcs.n	90008dca <BSP_TS_Init+0xe2>
                         (TS_Init->Accuracy > TS_MIN((TS_Init->Width), (TS_Init->Height))))
90008d08:	4293      	cmp	r3, r2
90008d0a:	bf28      	it	cs
90008d0c:	4613      	movcs	r3, r2
                         (TS_Init->Height == 0U) ||( TS_Init->Height > TS_MAX_HEIGHT) ||\
90008d0e:	68e2      	ldr	r2, [r4, #12]
90008d10:	429a      	cmp	r2, r3
90008d12:	d85a      	bhi.n	90008dca <BSP_TS_Init+0xe2>
  FT5336_IO_t              IOCtx;
  static FT5336_Object_t   FT5336Obj;
  uint32_t ft5336_id       = 0;

  /* Configure the touch screen driver */
  IOCtx.Address     = TS_I2C_ADDRESS;
90008d14:	2270      	movs	r2, #112	; 0x70
  IOCtx.Init        = BSP_I2C4_Init;
90008d16:	4b31      	ldr	r3, [pc, #196]	; (90008ddc <BSP_TS_Init+0xf4>)
  IOCtx.DeInit      = BSP_I2C4_DeInit;
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
  IOCtx.GetTick     = BSP_GetTick;

  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
90008d18:	4d31      	ldr	r5, [pc, #196]	; (90008de0 <BSP_TS_Init+0xf8>)
90008d1a:	a902      	add	r1, sp, #8
  IOCtx.Address     = TS_I2C_ADDRESS;
90008d1c:	f8ad 2010 	strh.w	r2, [sp, #16]
  IOCtx.Init        = BSP_I2C4_Init;
90008d20:	9302      	str	r3, [sp, #8]
  IOCtx.DeInit      = BSP_I2C4_DeInit;
90008d22:	4a30      	ldr	r2, [pc, #192]	; (90008de4 <BSP_TS_Init+0xfc>)
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
90008d24:	4b30      	ldr	r3, [pc, #192]	; (90008de8 <BSP_TS_Init+0x100>)
  IOCtx.DeInit      = BSP_I2C4_DeInit;
90008d26:	9203      	str	r2, [sp, #12]
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
90008d28:	9306      	str	r3, [sp, #24]
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
90008d2a:	4a30      	ldr	r2, [pc, #192]	; (90008dec <BSP_TS_Init+0x104>)
  IOCtx.GetTick     = BSP_GetTick;
90008d2c:	4b30      	ldr	r3, [pc, #192]	; (90008df0 <BSP_TS_Init+0x108>)
  uint32_t ft5336_id       = 0;
90008d2e:	9001      	str	r0, [sp, #4]
  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
90008d30:	4628      	mov	r0, r5
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
90008d32:	9205      	str	r2, [sp, #20]
  IOCtx.GetTick     = BSP_GetTick;
90008d34:	9307      	str	r3, [sp, #28]
  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
90008d36:	f7ff f93f 	bl	90007fb8 <FT5336_RegisterBusIO>
90008d3a:	2800      	cmp	r0, #0
90008d3c:	d14b      	bne.n	90008dd6 <BSP_TS_Init+0xee>
  {
    ret = BSP_ERROR_BUS_FAILURE;
  }
  else if(FT5336_ReadID(&FT5336Obj, &ft5336_id) != FT5336_OK)
90008d3e:	a901      	add	r1, sp, #4
90008d40:	4628      	mov	r0, r5
90008d42:	f7ff f82f 	bl	90007da4 <FT5336_ReadID>
90008d46:	2800      	cmp	r0, #0
90008d48:	d145      	bne.n	90008dd6 <BSP_TS_Init+0xee>
  {
    ret = BSP_ERROR_COMPONENT_FAILURE;
  }
  else if(ft5336_id != FT5336_ID)
90008d4a:	9b01      	ldr	r3, [sp, #4]
90008d4c:	2b51      	cmp	r3, #81	; 0x51
90008d4e:	d142      	bne.n	90008dd6 <BSP_TS_Init+0xee>
    ret = BSP_ERROR_UNKNOWN_COMPONENT;
  }
  else
  {
    Ts_CompObj[Instance] = &FT5336Obj;
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
90008d50:	4b28      	ldr	r3, [pc, #160]	; (90008df4 <BSP_TS_Init+0x10c>)

    if(Ts_Drv->Init(Ts_CompObj[Instance]) != FT5336_OK)
90008d52:	4628      	mov	r0, r5
    Ts_CompObj[Instance] = &FT5336Obj;
90008d54:	4f28      	ldr	r7, [pc, #160]	; (90008df8 <BSP_TS_Init+0x110>)
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
90008d56:	f8df 80a8 	ldr.w	r8, [pc, #168]	; 90008e00 <BSP_TS_Init+0x118>
    Ts_CompObj[Instance] = &FT5336Obj;
90008d5a:	603d      	str	r5, [r7, #0]
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
90008d5c:	f8c8 3000 	str.w	r3, [r8]
    if(Ts_Drv->Init(Ts_CompObj[Instance]) != FT5336_OK)
90008d60:	681b      	ldr	r3, [r3, #0]
90008d62:	4798      	blx	r3
90008d64:	4606      	mov	r6, r0
90008d66:	2800      	cmp	r0, #0
90008d68:	d135      	bne.n	90008dd6 <BSP_TS_Init+0xee>
      Ts_Ctx[Instance].Width             = TS_Init->Width;
90008d6a:	4d24      	ldr	r5, [pc, #144]	; (90008dfc <BSP_TS_Init+0x114>)
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
90008d6c:	a902      	add	r1, sp, #8
90008d6e:	6838      	ldr	r0, [r7, #0]
90008d70:	f8d8 3000 	ldr.w	r3, [r8]
      Ts_Ctx[Instance].Width             = TS_Init->Width;
90008d74:	e9d4 7200 	ldrd	r7, r2, [r4]
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
90008d78:	69db      	ldr	r3, [r3, #28]
      Ts_Ctx[Instance].Width             = TS_Init->Width;
90008d7a:	e9c5 7200 	strd	r7, r2, [r5]
90008d7e:	68a2      	ldr	r2, [r4, #8]
90008d80:	60aa      	str	r2, [r5, #8]
90008d82:	68e2      	ldr	r2, [r4, #12]
90008d84:	60ea      	str	r2, [r5, #12]
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
90008d86:	4798      	blx	r3
90008d88:	2800      	cmp	r0, #0
90008d8a:	db18      	blt.n	90008dbe <BSP_TS_Init+0xd6>
        Ts_Ctx[Instance].MaxX = Capabilities.MaxXl;
90008d8c:	e9dd 3203 	ldrd	r3, r2, [sp, #12]
90008d90:	e9c5 3204 	strd	r3, r2, [r5, #16]
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90008d94:	68e3      	ldr	r3, [r4, #12]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90008d96:	e9d4 2100 	ldrd	r2, r1, [r4]
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90008d9a:	441a      	add	r2, r3
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90008d9c:	440b      	add	r3, r1
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90008d9e:	3201      	adds	r2, #1
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90008da0:	3301      	adds	r3, #1
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90008da2:	e9c5 2206 	strd	r2, r2, [r5, #24]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90008da6:	e9c5 330b 	strd	r3, r3, [r5, #44]	; 0x2c
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90008daa:	622a      	str	r2, [r5, #32]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90008dac:	636b      	str	r3, [r5, #52]	; 0x34
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90008dae:	626a      	str	r2, [r5, #36]	; 0x24
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90008db0:	63ab      	str	r3, [r5, #56]	; 0x38
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90008db2:	62aa      	str	r2, [r5, #40]	; 0x28
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90008db4:	63eb      	str	r3, [r5, #60]	; 0x3c
}
90008db6:	4630      	mov	r0, r6
90008db8:	b008      	add	sp, #32
90008dba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        ret = BSP_ERROR_COMPONENT_FAILURE;
90008dbe:	f06f 0604 	mvn.w	r6, #4
}
90008dc2:	4630      	mov	r0, r6
90008dc4:	b008      	add	sp, #32
90008dc6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    ret = BSP_ERROR_WRONG_PARAM;
90008dca:	f06f 0601 	mvn.w	r6, #1
}
90008dce:	4630      	mov	r0, r6
90008dd0:	b008      	add	sp, #32
90008dd2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      ret = BSP_ERROR_NO_INIT;
90008dd6:	f04f 36ff 	mov.w	r6, #4294967295
90008dda:	e7ec      	b.n	90008db6 <BSP_TS_Init+0xce>
90008ddc:	9000825d 	.word	0x9000825d
90008de0:	240203c0 	.word	0x240203c0
90008de4:	900081c9 	.word	0x900081c9
90008de8:	90008a35 	.word	0x90008a35
90008dec:	900089f9 	.word	0x900089f9
90008df0:	90008a71 	.word	0x90008a71
90008df4:	2400003c 	.word	0x2400003c
90008df8:	240203e8 	.word	0x240203e8
90008dfc:	240203ec 	.word	0x240203ec
90008e00:	2402042c 	.word	0x2402042c

90008e04 <BSP_TS_GetState>:
  if(Instance >= TS_INSTANCES_NBR)
90008e04:	2800      	cmp	r0, #0
90008e06:	d157      	bne.n	90008eb8 <BSP_TS_GetState+0xb4>
    if(Ts_Drv->GetState(Ts_CompObj[Instance], &state) < 0)
90008e08:	4b2d      	ldr	r3, [pc, #180]	; (90008ec0 <BSP_TS_GetState+0xbc>)
90008e0a:	4a2e      	ldr	r2, [pc, #184]	; (90008ec4 <BSP_TS_GetState+0xc0>)
90008e0c:	681b      	ldr	r3, [r3, #0]
90008e0e:	6810      	ldr	r0, [r2, #0]
90008e10:	691b      	ldr	r3, [r3, #16]
{
90008e12:	b5f0      	push	{r4, r5, r6, r7, lr}
90008e14:	b085      	sub	sp, #20
90008e16:	460c      	mov	r4, r1
    if(Ts_Drv->GetState(Ts_CompObj[Instance], &state) < 0)
90008e18:	a901      	add	r1, sp, #4
90008e1a:	4798      	blx	r3
90008e1c:	2800      	cmp	r0, #0
90008e1e:	db41      	blt.n	90008ea4 <BSP_TS_GetState+0xa0>
    else if(state.TouchDetected != 0U)
90008e20:	9d01      	ldr	r5, [sp, #4]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
90008e22:	4b29      	ldr	r3, [pc, #164]	; (90008ec8 <BSP_TS_GetState+0xc4>)
    else if(state.TouchDetected != 0U)
90008e24:	b93d      	cbnz	r5, 90008e36 <BSP_TS_GetState+0x32>
      TS_State->TouchX = Ts_Ctx[Instance].PreviousX[0];
90008e26:	699a      	ldr	r2, [r3, #24]
  int32_t ret = BSP_ERROR_NONE;
90008e28:	4628      	mov	r0, r5
      TS_State->TouchY = Ts_Ctx[Instance].PreviousY[0];
90008e2a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
      TS_State->TouchDetected = 0U;
90008e2c:	6025      	str	r5, [r4, #0]
      TS_State->TouchY = Ts_Ctx[Instance].PreviousY[0];
90008e2e:	e9c4 2301 	strd	r2, r3, [r4, #4]
}
90008e32:	b005      	add	sp, #20
90008e34:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
90008e36:	6898      	ldr	r0, [r3, #8]
90008e38:	0702      	lsls	r2, r0, #28
      y_oriented = state.TouchY;
90008e3a:	e9dd c702 	ldrd	ip, r7, [sp, #8]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
90008e3e:	d435      	bmi.n	90008eac <BSP_TS_GetState+0xa8>
      y_oriented = state.TouchY;
90008e40:	4639      	mov	r1, r7
      x_oriented = state.TouchX;
90008e42:	4662      	mov	r2, ip
        x_oriented = Ts_Ctx[Instance].MaxX - state.TouchX - 1UL;
90008e44:	691e      	ldr	r6, [r3, #16]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_X) == TS_SWAP_X)
90008e46:	f010 0f02 	tst.w	r0, #2
        x_oriented = Ts_Ctx[Instance].MaxX - state.TouchX - 1UL;
90008e4a:	bf1c      	itt	ne
90008e4c:	f106 32ff 	addne.w	r2, r6, #4294967295
90008e50:	eba2 020c 	subne.w	r2, r2, ip
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_Y) == TS_SWAP_Y)
90008e54:	f010 0f04 	tst.w	r0, #4
        y_oriented = Ts_Ctx[Instance].MaxY - state.TouchY;
90008e58:	6958      	ldr	r0, [r3, #20]
90008e5a:	bf18      	it	ne
90008e5c:	1bc1      	subne	r1, r0, r7
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
90008e5e:	681f      	ldr	r7, [r3, #0]
90008e60:	fb07 f202 	mul.w	r2, r7, r2
90008e64:	fbb2 f2f6 	udiv	r2, r2, r6
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90008e68:	685e      	ldr	r6, [r3, #4]
      TS_State->TouchDetected = state.TouchDetected;
90008e6a:	6025      	str	r5, [r4, #0]
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90008e6c:	fb06 f101 	mul.w	r1, r6, r1
      x_diff = (TS_State->TouchX > Ts_Ctx[Instance].PreviousX[0])?
90008e70:	699e      	ldr	r6, [r3, #24]
        y_diff = (TS_State->TouchY > Ts_Ctx[Instance].PreviousY[0])?
90008e72:	6add      	ldr	r5, [r3, #44]	; 0x2c
        (TS_State->TouchX - Ts_Ctx[Instance].PreviousX[0]):
90008e74:	42b2      	cmp	r2, r6
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
90008e76:	6062      	str	r2, [r4, #4]
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90008e78:	fbb1 f1f0 	udiv	r1, r1, r0
        (TS_State->TouchX - Ts_Ctx[Instance].PreviousX[0]):
90008e7c:	bf8c      	ite	hi
90008e7e:	1b90      	subhi	r0, r2, r6
90008e80:	1ab0      	subls	r0, r6, r2
          (TS_State->TouchY - Ts_Ctx[Instance].PreviousY[0]):
90008e82:	42a9      	cmp	r1, r5
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90008e84:	60a1      	str	r1, [r4, #8]
          (TS_State->TouchY - Ts_Ctx[Instance].PreviousY[0]):
90008e86:	bf8c      	ite	hi
90008e88:	1b4f      	subhi	r7, r1, r5
90008e8a:	1a6f      	subls	r7, r5, r1
          if ((x_diff > Ts_Ctx[Instance].Accuracy) || (y_diff > Ts_Ctx[Instance].Accuracy))
90008e8c:	42b8      	cmp	r0, r7
90008e8e:	bf38      	it	cc
90008e90:	4638      	movcc	r0, r7
90008e92:	68df      	ldr	r7, [r3, #12]
90008e94:	4287      	cmp	r7, r0
  int32_t ret = BSP_ERROR_NONE;
90008e96:	f04f 0000 	mov.w	r0, #0
          if ((x_diff > Ts_Ctx[Instance].Accuracy) || (y_diff > Ts_Ctx[Instance].Accuracy))
90008e9a:	d20a      	bcs.n	90008eb2 <BSP_TS_GetState+0xae>
            Ts_Ctx[Instance].PreviousX[0] = TS_State->TouchX;
90008e9c:	619a      	str	r2, [r3, #24]
            Ts_Ctx[Instance].PreviousY[0] = TS_State->TouchY;
90008e9e:	62d9      	str	r1, [r3, #44]	; 0x2c
}
90008ea0:	b005      	add	sp, #20
90008ea2:	bdf0      	pop	{r4, r5, r6, r7, pc}
      ret = BSP_ERROR_COMPONENT_FAILURE;
90008ea4:	f06f 0004 	mvn.w	r0, #4
}
90008ea8:	b005      	add	sp, #20
90008eaa:	bdf0      	pop	{r4, r5, r6, r7, pc}
        y_oriented = state.TouchX;
90008eac:	4661      	mov	r1, ip
        x_oriented = state.TouchY;
90008eae:	463a      	mov	r2, r7
90008eb0:	e7c8      	b.n	90008e44 <BSP_TS_GetState+0x40>
            TS_State->TouchY = Ts_Ctx[Instance].PreviousY[0];
90008eb2:	e9c4 6501 	strd	r6, r5, [r4, #4]
90008eb6:	e7bc      	b.n	90008e32 <BSP_TS_GetState+0x2e>
    ret = BSP_ERROR_WRONG_PARAM;
90008eb8:	f06f 0001 	mvn.w	r0, #1
}
90008ebc:	4770      	bx	lr
90008ebe:	bf00      	nop
90008ec0:	2402042c 	.word	0x2402042c
90008ec4:	240203e8 	.word	0x240203e8
90008ec8:	240203ec 	.word	0x240203ec

90008ecc <SystemInit>:
#endif

extern unsigned int VECTOR_TABLE_LOCATION;

void SystemInit (void)
{
90008ecc:	b410      	push	{r4}
 __IO uint32_t tmpreg;
#endif /* DATA_IN_D2_SRAM */

  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
90008ece:	4c19      	ldr	r4, [pc, #100]	; (90008f34 <SystemInit+0x68>)
  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set HSION bit */
  RCC->CR |= RCC_CR_HSION;

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;
90008ed0:	2200      	movs	r2, #0
  RCC->CR |= RCC_CR_HSION;
90008ed2:	4b19      	ldr	r3, [pc, #100]	; (90008f38 <SystemInit+0x6c>)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
90008ed4:	f8d4 1088 	ldr.w	r1, [r4, #136]	; 0x88

  /* Reset HSEON, CSSON , CSION,RC48ON, CSIKERON PLL1ON, PLL2ON and PLL3ON bits */
  RCC->CR &= 0xEAF6ED7FU;
90008ed8:	4818      	ldr	r0, [pc, #96]	; (90008f3c <SystemInit+0x70>)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
90008eda:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
90008ede:	f8c4 1088 	str.w	r1, [r4, #136]	; 0x88
  RCC->CR |= RCC_CR_HSION;
90008ee2:	6819      	ldr	r1, [r3, #0]
  SCB->VTOR = FLASH_BANK2_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
#endif /* VECT_TAB_SRAM */

#else
  /* dual core CM7 or single core line */
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
90008ee4:	4c16      	ldr	r4, [pc, #88]	; (90008f40 <SystemInit+0x74>)
  RCC->CR |= RCC_CR_HSION;
90008ee6:	f041 0101 	orr.w	r1, r1, #1
90008eea:	6019      	str	r1, [r3, #0]
  RCC->CFGR = 0x00000000;
90008eec:	611a      	str	r2, [r3, #16]
  RCC->CR &= 0xEAF6ED7FU;
90008eee:	6819      	ldr	r1, [r3, #0]
90008ef0:	4008      	ands	r0, r1
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
90008ef2:	4914      	ldr	r1, [pc, #80]	; (90008f44 <SystemInit+0x78>)
  RCC->CR &= 0xEAF6ED7FU;
90008ef4:	6018      	str	r0, [r3, #0]
  RCC->D1CFGR = 0x00000000;
90008ef6:	619a      	str	r2, [r3, #24]
  RCC->D2CFGR = 0x00000000;
90008ef8:	61da      	str	r2, [r3, #28]
  RCC->D3CFGR = 0x00000000;
90008efa:	621a      	str	r2, [r3, #32]
  RCC->PLLCKSELR = 0x00000000;
90008efc:	629a      	str	r2, [r3, #40]	; 0x28
  RCC->PLLCFGR = 0x00000000;
90008efe:	62da      	str	r2, [r3, #44]	; 0x2c
  RCC->PLL1DIVR = 0x00000000;
90008f00:	631a      	str	r2, [r3, #48]	; 0x30
  RCC->PLL1FRACR = 0x00000000;
90008f02:	635a      	str	r2, [r3, #52]	; 0x34
  RCC->PLL2DIVR = 0x00000000;
90008f04:	639a      	str	r2, [r3, #56]	; 0x38
  RCC->PLL2FRACR = 0x00000000;
90008f06:	63da      	str	r2, [r3, #60]	; 0x3c
  RCC->PLL3DIVR = 0x00000000;
90008f08:	641a      	str	r2, [r3, #64]	; 0x40
  RCC->PLL3FRACR = 0x00000000;
90008f0a:	645a      	str	r2, [r3, #68]	; 0x44
  RCC->CR &= 0xFFFBFFFFU;
90008f0c:	6818      	ldr	r0, [r3, #0]
90008f0e:	f420 2080 	bic.w	r0, r0, #262144	; 0x40000
90008f12:	6018      	str	r0, [r3, #0]
  RCC->CIER = 0x00000000;
90008f14:	661a      	str	r2, [r3, #96]	; 0x60
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
90008f16:	6823      	ldr	r3, [r4, #0]
90008f18:	4019      	ands	r1, r3
90008f1a:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
90008f1e:	d203      	bcs.n	90008f28 <SystemInit+0x5c>
  {
    /* if stm32h7 revY*/
    /* Change  the switch matrix read issuing capability to 1 for the AXI SRAM target (Target 7) */
    *((__IO uint32_t*)0x51008108) = 0x000000001U;
90008f20:	4b09      	ldr	r3, [pc, #36]	; (90008f48 <SystemInit+0x7c>)
90008f22:	2201      	movs	r2, #1
90008f24:	f8c3 2108 	str.w	r2, [r3, #264]	; 0x108

  /* Configure the Vector Table location add offset address for cortex-M7 ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = D1_AXISRAM_BASE  | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal D1 AXI-RAM */
#elif defined(VECT_TAB_QSPI)
  SCB->VTOR = (unsigned int)&VECTOR_TABLE_LOCATION; /* Vector Table Relocation in External FLASH */
90008f28:	4a08      	ldr	r2, [pc, #32]	; (90008f4c <SystemInit+0x80>)
90008f2a:	4b02      	ldr	r3, [pc, #8]	; (90008f34 <SystemInit+0x68>)
  SCB->VTOR = FLASH_BANK1_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
#endif

#endif /*DUAL_CORE && CORE_CM4*/

}
90008f2c:	f85d 4b04 	ldr.w	r4, [sp], #4
  SCB->VTOR = (unsigned int)&VECTOR_TABLE_LOCATION; /* Vector Table Relocation in External FLASH */
90008f30:	609a      	str	r2, [r3, #8]
}
90008f32:	4770      	bx	lr
90008f34:	e000ed00 	.word	0xe000ed00
90008f38:	58024400 	.word	0x58024400
90008f3c:	eaf6ed7f 	.word	0xeaf6ed7f
90008f40:	5c001000 	.word	0x5c001000
90008f44:	ffff0000 	.word	0xffff0000
90008f48:	51008000 	.word	0x51008000
90008f4c:	90000000 	.word	0x90000000

90008f50 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
90008f50:	b510      	push	{r4, lr}
   __HAL_ART_CONFIG_BASE_ADDRESS(0x08100000UL);  /* Configure the Cortex-M4 ART Base address to the Flash Bank 2 : */
   __HAL_ART_ENABLE();                           /* Enable the Cortex-M4 ART */
#endif /* DUAL_CORE &&  CORE_CM4 */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
90008f52:	2003      	movs	r0, #3
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE)>> RCC_CDCFGR1_CDCPRE_Pos]) & 0x1FU);
#endif

  /* Update the SystemD2Clock global variable */
#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90008f54:	4c12      	ldr	r4, [pc, #72]	; (90008fa0 <HAL_Init+0x50>)
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
90008f56:	f000 f843 	bl	90008fe0 <HAL_NVIC_SetPriorityGrouping>
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90008f5a:	f003 fc65 	bl	9000c828 <HAL_RCC_GetSysClockFreq>
90008f5e:	4b11      	ldr	r3, [pc, #68]	; (90008fa4 <HAL_Init+0x54>)
90008f60:	4911      	ldr	r1, [pc, #68]	; (90008fa8 <HAL_Init+0x58>)
90008f62:	699a      	ldr	r2, [r3, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90008f64:	699b      	ldr	r3, [r3, #24]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90008f66:	f3c2 2203 	ubfx	r2, r2, #8, #4
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90008f6a:	f003 030f 	and.w	r3, r3, #15
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90008f6e:	5c8a      	ldrb	r2, [r1, r2]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90008f70:	5ccb      	ldrb	r3, [r1, r3]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90008f72:	f002 021f 	and.w	r2, r2, #31
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
90008f76:	490d      	ldr	r1, [pc, #52]	; (90008fac <HAL_Init+0x5c>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90008f78:	f003 031f 	and.w	r3, r3, #31
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90008f7c:	40d0      	lsrs	r0, r2
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90008f7e:	fa20 f303 	lsr.w	r3, r0, r3
  SystemCoreClock = common_system_clock;
90008f82:	6008      	str	r0, [r1, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
90008f84:	2000      	movs	r0, #0
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90008f86:	6023      	str	r3, [r4, #0]
  if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
90008f88:	f7fa fa28 	bl	900033dc <HAL_InitTick>
90008f8c:	b110      	cbz	r0, 90008f94 <HAL_Init+0x44>
  {
    return HAL_ERROR;
90008f8e:	2401      	movs	r4, #1
  /* Init the low level hardware */
  HAL_MspInit();

  /* Return function status */
  return HAL_OK;
}
90008f90:	4620      	mov	r0, r4
90008f92:	bd10      	pop	{r4, pc}
90008f94:	4604      	mov	r4, r0
  HAL_MspInit();
90008f96:	f7f9 ffdf 	bl	90002f58 <HAL_MspInit>
}
90008f9a:	4620      	mov	r0, r4
90008f9c:	bd10      	pop	{r4, pc}
90008f9e:	bf00      	nop
90008fa0:	24000070 	.word	0x24000070
90008fa4:	58024400 	.word	0x58024400
90008fa8:	9002b65c 	.word	0x9002b65c
90008fac:	2400006c 	.word	0x2400006c

90008fb0 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += (uint32_t)uwTickFreq;
90008fb0:	4a03      	ldr	r2, [pc, #12]	; (90008fc0 <HAL_IncTick+0x10>)
90008fb2:	4b04      	ldr	r3, [pc, #16]	; (90008fc4 <HAL_IncTick+0x14>)
90008fb4:	6811      	ldr	r1, [r2, #0]
90008fb6:	781b      	ldrb	r3, [r3, #0]
90008fb8:	440b      	add	r3, r1
90008fba:	6013      	str	r3, [r2, #0]
}
90008fbc:	4770      	bx	lr
90008fbe:	bf00      	nop
90008fc0:	24020430 	.word	0x24020430
90008fc4:	24000074 	.word	0x24000074

90008fc8 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
90008fc8:	4b01      	ldr	r3, [pc, #4]	; (90008fd0 <HAL_GetTick+0x8>)
90008fca:	6818      	ldr	r0, [r3, #0]
}
90008fcc:	4770      	bx	lr
90008fce:	bf00      	nop
90008fd0:	24020430 	.word	0x24020430

90008fd4 <HAL_GetREVID>:
  * @brief  Returns the device revision identifier.
  * @retval Device revision identifier
  */
uint32_t HAL_GetREVID(void)
{
   return((DBGMCU->IDCODE) >> 16);
90008fd4:	4b01      	ldr	r3, [pc, #4]	; (90008fdc <HAL_GetREVID+0x8>)
90008fd6:	6818      	ldr	r0, [r3, #0]
}
90008fd8:	0c00      	lsrs	r0, r0, #16
90008fda:	4770      	bx	lr
90008fdc:	5c001000 	.word	0x5c001000

90008fe0 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
90008fe0:	4906      	ldr	r1, [pc, #24]	; (90008ffc <HAL_NVIC_SetPriorityGrouping+0x1c>)
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
90008fe2:	f64f 0cff 	movw	ip, #63743	; 0xf8ff
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
90008fe6:	0200      	lsls	r0, r0, #8
  reg_value  =  (reg_value                                   |
90008fe8:	4b05      	ldr	r3, [pc, #20]	; (90009000 <HAL_NVIC_SetPriorityGrouping+0x20>)
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
90008fea:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
90008fec:	f400 60e0 	and.w	r0, r0, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
90008ff0:	ea02 020c 	and.w	r2, r2, ip
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
90008ff4:	4310      	orrs	r0, r2
  reg_value  =  (reg_value                                   |
90008ff6:	4303      	orrs	r3, r0
  SCB->AIRCR =  reg_value;
90008ff8:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));

  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
90008ffa:	4770      	bx	lr
90008ffc:	e000ed00 	.word	0xe000ed00
90009000:	05fa0000 	.word	0x05fa0000

90009004 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
90009004:	4b1b      	ldr	r3, [pc, #108]	; (90009074 <HAL_NVIC_SetPriority+0x70>)
90009006:	68db      	ldr	r3, [r3, #12]
90009008:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
9000900c:	b500      	push	{lr}
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
9000900e:	f1c3 0e07 	rsb	lr, r3, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
90009012:	f103 0c04 	add.w	ip, r3, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
90009016:	f1be 0f04 	cmp.w	lr, #4
9000901a:	bf28      	it	cs
9000901c:	f04f 0e04 	movcs.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
90009020:	f1bc 0f06 	cmp.w	ip, #6
90009024:	d91a      	bls.n	9000905c <HAL_NVIC_SetPriority+0x58>
90009026:	3b03      	subs	r3, #3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
90009028:	f04f 3cff 	mov.w	ip, #4294967295
9000902c:	fa0c fc03 	lsl.w	ip, ip, r3
90009030:	ea22 020c 	bic.w	r2, r2, ip
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
90009034:	f04f 3cff 	mov.w	ip, #4294967295
  if ((int32_t)(IRQn) >= 0)
90009038:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
9000903a:	fa0c fc0e 	lsl.w	ip, ip, lr
9000903e:	ea21 010c 	bic.w	r1, r1, ip
90009042:	fa01 f103 	lsl.w	r1, r1, r3
90009046:	ea41 0102 	orr.w	r1, r1, r2
  if ((int32_t)(IRQn) >= 0)
9000904a:	db0a      	blt.n	90009062 <HAL_NVIC_SetPriority+0x5e>
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
9000904c:	0109      	lsls	r1, r1, #4
9000904e:	4b0a      	ldr	r3, [pc, #40]	; (90009078 <HAL_NVIC_SetPriority+0x74>)
90009050:	b2c9      	uxtb	r1, r1
90009052:	4403      	add	r3, r0
90009054:	f883 1300 	strb.w	r1, [r3, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));

  prioritygroup = NVIC_GetPriorityGrouping();

  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
90009058:	f85d fb04 	ldr.w	pc, [sp], #4
9000905c:	2200      	movs	r2, #0
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
9000905e:	4613      	mov	r3, r2
90009060:	e7e8      	b.n	90009034 <HAL_NVIC_SetPriority+0x30>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
90009062:	f000 000f 	and.w	r0, r0, #15
90009066:	0109      	lsls	r1, r1, #4
90009068:	4b04      	ldr	r3, [pc, #16]	; (9000907c <HAL_NVIC_SetPriority+0x78>)
9000906a:	b2c9      	uxtb	r1, r1
9000906c:	4403      	add	r3, r0
9000906e:	7619      	strb	r1, [r3, #24]
90009070:	f85d fb04 	ldr.w	pc, [sp], #4
90009074:	e000ed00 	.word	0xe000ed00
90009078:	e000e100 	.word	0xe000e100
9000907c:	e000ecfc 	.word	0xe000ecfc

90009080 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
90009080:	2800      	cmp	r0, #0
90009082:	db07      	blt.n	90009094 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90009084:	2301      	movs	r3, #1
90009086:	f000 011f 	and.w	r1, r0, #31
9000908a:	4a03      	ldr	r2, [pc, #12]	; (90009098 <HAL_NVIC_EnableIRQ+0x18>)
9000908c:	0940      	lsrs	r0, r0, #5
9000908e:	408b      	lsls	r3, r1
90009090:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
90009094:	4770      	bx	lr
90009096:	bf00      	nop
90009098:	e000e100 	.word	0xe000e100

9000909c <HAL_NVIC_DisableIRQ>:
  if ((int32_t)(IRQn) >= 0)
9000909c:	2800      	cmp	r0, #0
9000909e:	db0c      	blt.n	900090ba <HAL_NVIC_DisableIRQ+0x1e>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
900090a0:	0943      	lsrs	r3, r0, #5
900090a2:	2201      	movs	r2, #1
900090a4:	f000 001f 	and.w	r0, r0, #31
900090a8:	4904      	ldr	r1, [pc, #16]	; (900090bc <HAL_NVIC_DisableIRQ+0x20>)
900090aa:	3320      	adds	r3, #32
900090ac:	4082      	lsls	r2, r0
900090ae:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
900090b2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900090b6:	f3bf 8f6f 	isb	sy
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
}
900090ba:	4770      	bx	lr
900090bc:	e000e100 	.word	0xe000e100

900090c0 <HAL_MPU_Disable>:
  \details Ensures the apparent order of the explicit memory operations before
           and after the instruction, without ensuring their completion.
 */
__STATIC_FORCEINLINE void __DMB(void)
{
  __ASM volatile ("dmb 0xF":::"memory");
900090c0:	f3bf 8f5f 	dmb	sy
{
  /* Make sure outstanding transfers are done */
  __DMB();

  /* Disable fault exceptions */
  SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
900090c4:	4b04      	ldr	r3, [pc, #16]	; (900090d8 <HAL_MPU_Disable+0x18>)

  /* Disable the MPU and clear the control register*/
  MPU->CTRL = 0;
900090c6:	2100      	movs	r1, #0
  SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
900090c8:	6a5a      	ldr	r2, [r3, #36]	; 0x24
900090ca:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
900090ce:	625a      	str	r2, [r3, #36]	; 0x24
  MPU->CTRL = 0;
900090d0:	f8c3 1094 	str.w	r1, [r3, #148]	; 0x94
}
900090d4:	4770      	bx	lr
900090d6:	bf00      	nop
900090d8:	e000ed00 	.word	0xe000ed00

900090dc <HAL_MPU_Enable>:
  * @retval None
  */
void HAL_MPU_Enable(uint32_t MPU_Control)
{
  /* Enable the MPU */
  MPU->CTRL = MPU_Control | MPU_CTRL_ENABLE_Msk;
900090dc:	4b06      	ldr	r3, [pc, #24]	; (900090f8 <HAL_MPU_Enable+0x1c>)
900090de:	f040 0001 	orr.w	r0, r0, #1
900090e2:	f8c3 0094 	str.w	r0, [r3, #148]	; 0x94

  /* Enable fault exceptions */
  SCB->SHCSR |= SCB_SHCSR_MEMFAULTENA_Msk;
900090e6:	6a5a      	ldr	r2, [r3, #36]	; 0x24
900090e8:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
900090ec:	625a      	str	r2, [r3, #36]	; 0x24
  __ASM volatile ("dsb 0xF":::"memory");
900090ee:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900090f2:	f3bf 8f6f 	isb	sy

  /* Ensure MPU setting take effects */
  __DSB();
  __ISB();
}
900090f6:	4770      	bx	lr
900090f8:	e000ed00 	.word	0xe000ed00

900090fc <HAL_MPU_ConfigRegion>:
  /* Check the parameters */
  assert_param(IS_MPU_REGION_NUMBER(MPU_Init->Number));
  assert_param(IS_MPU_REGION_ENABLE(MPU_Init->Enable));

  /* Set the Region number */
  MPU->RNR = MPU_Init->Number;
900090fc:	4a17      	ldr	r2, [pc, #92]	; (9000915c <HAL_MPU_ConfigRegion+0x60>)
900090fe:	7843      	ldrb	r3, [r0, #1]
90009100:	f8c2 3098 	str.w	r3, [r2, #152]	; 0x98

  if ((MPU_Init->Enable) != 0UL)
90009104:	7801      	ldrb	r1, [r0, #0]
90009106:	b321      	cbz	r1, 90009152 <HAL_MPU_ConfigRegion+0x56>
    assert_param(IS_MPU_ACCESS_CACHEABLE(MPU_Init->IsCacheable));
    assert_param(IS_MPU_ACCESS_BUFFERABLE(MPU_Init->IsBufferable));
    assert_param(IS_MPU_SUB_REGION_DISABLE(MPU_Init->SubRegionDisable));
    assert_param(IS_MPU_REGION_SIZE(MPU_Init->Size));

    MPU->RBAR = MPU_Init->BaseAddress;
90009108:	6843      	ldr	r3, [r0, #4]
{
9000910a:	b500      	push	{lr}
    MPU->RBAR = MPU_Init->BaseAddress;
9000910c:	f8c2 309c 	str.w	r3, [r2, #156]	; 0x9c
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
                ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
90009110:	7ac3      	ldrb	r3, [r0, #11]
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
90009112:	f890 c00c 	ldrb.w	ip, [r0, #12]
                ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
90009116:	061b      	lsls	r3, r3, #24
                ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
                ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
                ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
                ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
90009118:	f890 e00f 	ldrb.w	lr, [r0, #15]
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
9000911c:	ea43 730c 	orr.w	r3, r3, ip, lsl #28
                ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
90009120:	f890 c00a 	ldrb.w	ip, [r0, #10]
                ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
90009124:	430b      	orrs	r3, r1
                ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
90009126:	7b81      	ldrb	r1, [r0, #14]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
90009128:	ea43 43cc 	orr.w	r3, r3, ip, lsl #19
                ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
9000912c:	f890 c00d 	ldrb.w	ip, [r0, #13]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
90009130:	ea43 438c 	orr.w	r3, r3, ip, lsl #18
                ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
90009134:	f890 c009 	ldrb.w	ip, [r0, #9]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
90009138:	ea43 4341 	orr.w	r3, r3, r1, lsl #17
9000913c:	7a01      	ldrb	r1, [r0, #8]
9000913e:	ea43 430e 	orr.w	r3, r3, lr, lsl #16
90009142:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
90009146:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
9000914a:	f8c2 30a0 	str.w	r3, [r2, #160]	; 0xa0
  else
  {
    MPU->RBAR = 0x00;
    MPU->RASR = 0x00;
  }
}
9000914e:	f85d fb04 	ldr.w	pc, [sp], #4
    MPU->RBAR = 0x00;
90009152:	f8c2 109c 	str.w	r1, [r2, #156]	; 0x9c
    MPU->RASR = 0x00;
90009156:	f8c2 10a0 	str.w	r1, [r2, #160]	; 0xa0
9000915a:	4770      	bx	lr
9000915c:	e000ed00 	.word	0xe000ed00

90009160 <HAL_CRC_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
90009160:	2800      	cmp	r0, #0
90009162:	d036      	beq.n	900091d2 <HAL_CRC_Init+0x72>
{
90009164:	b510      	push	{r4, lr}
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
90009166:	7f43      	ldrb	r3, [r0, #29]
90009168:	4604      	mov	r4, r0
9000916a:	f003 02ff 	and.w	r2, r3, #255	; 0xff
9000916e:	b363      	cbz	r3, 900091ca <HAL_CRC_Init+0x6a>
    hcrc->Lock = HAL_UNLOCKED;
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
  }

  hcrc->State = HAL_CRC_STATE_BUSY;
90009170:	2202      	movs	r2, #2

  /* check whether or not non-default generating polynomial has been
   * picked up by user */
  assert_param(IS_DEFAULT_POLYNOMIAL(hcrc->Init.DefaultPolynomialUse));
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
90009172:	7923      	ldrb	r3, [r4, #4]
  hcrc->State = HAL_CRC_STATE_BUSY;
90009174:	7762      	strb	r2, [r4, #29]
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
90009176:	b9f3      	cbnz	r3, 900091b6 <HAL_CRC_Init+0x56>
  {
    /* initialize peripheral with default generating polynomial */
    WRITE_REG(hcrc->Instance->POL, DEFAULT_CRC32_POLY);
90009178:	6823      	ldr	r3, [r4, #0]
9000917a:	4a17      	ldr	r2, [pc, #92]	; (900091d8 <HAL_CRC_Init+0x78>)
9000917c:	615a      	str	r2, [r3, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, CRC_POLYLENGTH_32B);
9000917e:	689a      	ldr	r2, [r3, #8]
90009180:	f022 0218 	bic.w	r2, r2, #24
90009184:	609a      	str	r2, [r3, #8]
  }

  /* check whether or not non-default CRC initial value has been
   * picked up by user */
  assert_param(IS_DEFAULT_INIT_VALUE(hcrc->Init.DefaultInitValueUse));
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
90009186:	7962      	ldrb	r2, [r4, #5]
90009188:	b18a      	cbz	r2, 900091ae <HAL_CRC_Init+0x4e>
  {
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
  }
  else
  {
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
9000918a:	6922      	ldr	r2, [r4, #16]
9000918c:	611a      	str	r2, [r3, #16]
  }


  /* set input data inversion mode */
  assert_param(IS_CRC_INPUTDATA_INVERSION_MODE(hcrc->Init.InputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
9000918e:	689a      	ldr	r2, [r3, #8]

  /* set output data inversion mode */
  assert_param(IS_CRC_OUTPUTDATA_INVERSION_MODE(hcrc->Init.OutputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
90009190:	e9d4 0105 	ldrd	r0, r1, [r4, #20]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
90009194:	f022 0260 	bic.w	r2, r2, #96	; 0x60
90009198:	4302      	orrs	r2, r0

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;

  /* Return function status */
  return HAL_OK;
9000919a:	2000      	movs	r0, #0
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
9000919c:	609a      	str	r2, [r3, #8]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
9000919e:	689a      	ldr	r2, [r3, #8]
900091a0:	f022 0280 	bic.w	r2, r2, #128	; 0x80
900091a4:	430a      	orrs	r2, r1
  hcrc->State = HAL_CRC_STATE_READY;
900091a6:	2101      	movs	r1, #1
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
900091a8:	609a      	str	r2, [r3, #8]
  hcrc->State = HAL_CRC_STATE_READY;
900091aa:	7761      	strb	r1, [r4, #29]
}
900091ac:	bd10      	pop	{r4, pc}
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
900091ae:	f04f 32ff 	mov.w	r2, #4294967295
900091b2:	611a      	str	r2, [r3, #16]
900091b4:	e7eb      	b.n	9000918e <HAL_CRC_Init+0x2e>
    if (HAL_CRCEx_Polynomial_Set(hcrc, hcrc->Init.GeneratingPolynomial, hcrc->Init.CRCLength) != HAL_OK)
900091b6:	e9d4 1202 	ldrd	r1, r2, [r4, #8]
900091ba:	4620      	mov	r0, r4
900091bc:	f000 f80e 	bl	900091dc <HAL_CRCEx_Polynomial_Set>
900091c0:	b908      	cbnz	r0, 900091c6 <HAL_CRC_Init+0x66>
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
900091c2:	6823      	ldr	r3, [r4, #0]
900091c4:	e7df      	b.n	90009186 <HAL_CRC_Init+0x26>
    return HAL_ERROR;
900091c6:	2001      	movs	r0, #1
}
900091c8:	bd10      	pop	{r4, pc}
    hcrc->Lock = HAL_UNLOCKED;
900091ca:	7702      	strb	r2, [r0, #28]
    HAL_CRC_MspInit(hcrc);
900091cc:	f7f9 fede 	bl	90002f8c <HAL_CRC_MspInit>
900091d0:	e7ce      	b.n	90009170 <HAL_CRC_Init+0x10>
    return HAL_ERROR;
900091d2:	2001      	movs	r0, #1
}
900091d4:	4770      	bx	lr
900091d6:	bf00      	nop
900091d8:	04c11db7 	.word	0x04c11db7

900091dc <HAL_CRCEx_Polynomial_Set>:

  /* Check the parameters */
  assert_param(IS_CRC_POL_LENGTH(PolyLength));

  /* Ensure that the generating polynomial is odd */ 
  if ((Pol & (uint32_t)(0x1U)) ==  0U)
900091dc:	07cb      	lsls	r3, r1, #31
900091de:	d51a      	bpl.n	90009216 <HAL_CRCEx_Polynomial_Set+0x3a>
     * definition. HAL_ERROR is reported if Pol degree is
     * larger than that indicated by PolyLength.
     * Look for MSB position: msb will contain the degree of
     *  the second to the largest polynomial member. E.g., for
     *  X^7 + X^6 + X^5 + X^2 + 1, msb = 6. */
    while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
900091e0:	231e      	movs	r3, #30
{
900091e2:	b410      	push	{r4}
900091e4:	e001      	b.n	900091ea <HAL_CRCEx_Polynomial_Set+0xe>
    while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
900091e6:	3b01      	subs	r3, #1
900091e8:	d317      	bcc.n	9000921a <HAL_CRCEx_Polynomial_Set+0x3e>
900091ea:	fa21 fc03 	lsr.w	ip, r1, r3
900091ee:	f01c 0f01 	tst.w	ip, #1
900091f2:	d0f8      	beq.n	900091e6 <HAL_CRCEx_Polynomial_Set+0xa>
    {
    }

    switch (PolyLength)
900091f4:	2a18      	cmp	r2, #24
900091f6:	d811      	bhi.n	9000921c <HAL_CRCEx_Polynomial_Set+0x40>
900091f8:	e8df f002 	tbb	[pc, r2]
900091fc:	10101016 	.word	0x10101016
90009200:	10101010 	.word	0x10101010
90009204:	10101024 	.word	0x10101024
90009208:	10101010 	.word	0x10101010
9000920c:	10101021 	.word	0x10101021
90009210:	10101010 	.word	0x10101010
90009214:	14          	.byte	0x14
90009215:	00          	.byte	0x00
    status =  HAL_ERROR;
90009216:	2001      	movs	r0, #1
    /* set generating polynomial size */
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
  }
  /* Return function status */
  return status;
}
90009218:	4770      	bx	lr
    switch (PolyLength)
9000921a:	b12a      	cbz	r2, 90009228 <HAL_CRCEx_Polynomial_Set+0x4c>
        status =  HAL_ERROR;
9000921c:	2001      	movs	r0, #1
}
9000921e:	f85d 4b04 	ldr.w	r4, [sp], #4
90009222:	4770      	bx	lr
        if (msb >= HAL_CRC_LENGTH_7B)
90009224:	2b06      	cmp	r3, #6
90009226:	d8f9      	bhi.n	9000921c <HAL_CRCEx_Polynomial_Set+0x40>
    WRITE_REG(hcrc->Instance->POL, Pol);
90009228:	6804      	ldr	r4, [r0, #0]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
9000922a:	2000      	movs	r0, #0
    WRITE_REG(hcrc->Instance->POL, Pol);
9000922c:	6161      	str	r1, [r4, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
9000922e:	68a3      	ldr	r3, [r4, #8]
90009230:	f023 0318 	bic.w	r3, r3, #24
90009234:	4313      	orrs	r3, r2
90009236:	60a3      	str	r3, [r4, #8]
}
90009238:	f85d 4b04 	ldr.w	r4, [sp], #4
9000923c:	4770      	bx	lr
        if (msb >= HAL_CRC_LENGTH_8B)
9000923e:	2b07      	cmp	r3, #7
90009240:	d9f2      	bls.n	90009228 <HAL_CRCEx_Polynomial_Set+0x4c>
90009242:	e7eb      	b.n	9000921c <HAL_CRCEx_Polynomial_Set+0x40>
        if (msb >= HAL_CRC_LENGTH_16B)
90009244:	2b0f      	cmp	r3, #15
90009246:	d9ef      	bls.n	90009228 <HAL_CRCEx_Polynomial_Set+0x4c>
90009248:	e7e8      	b.n	9000921c <HAL_CRCEx_Polynomial_Set+0x40>
9000924a:	bf00      	nop

9000924c <HAL_DMA2D_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
9000924c:	2800      	cmp	r0, #0
9000924e:	d035      	beq.n	900092bc <HAL_DMA2D_Init+0x70>
{
90009250:	b538      	push	{r3, r4, r5, lr}

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
90009252:	f890 3061 	ldrb.w	r3, [r0, #97]	; 0x61
90009256:	4604      	mov	r4, r0
90009258:	f003 02ff 	and.w	r2, r3, #255	; 0xff
9000925c:	b34b      	cbz	r3, 900092b2 <HAL_DMA2D_Init+0x66>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
9000925e:	6823      	ldr	r3, [r4, #0]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
90009260:	2002      	movs	r0, #2
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
90009262:	6862      	ldr	r2, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
90009264:	f884 0061 	strb.w	r0, [r4, #97]	; 0x61
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
90009268:	69e1      	ldr	r1, [r4, #28]
9000926a:	681d      	ldr	r5, [r3, #0]
9000926c:	4814      	ldr	r0, [pc, #80]	; (900092c0 <HAL_DMA2D_Init+0x74>)
9000926e:	4311      	orrs	r1, r2

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
90009270:	68a2      	ldr	r2, [r4, #8]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
90009272:	4028      	ands	r0, r5
             hdma2d->Init.ColorMode | hdma2d->Init.BytesSwap);

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
90009274:	68e5      	ldr	r5, [r4, #12]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
90009276:	4301      	orrs	r1, r0
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
90009278:	69a0      	ldr	r0, [r4, #24]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
9000927a:	6019      	str	r1, [r3, #0]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
9000927c:	4302      	orrs	r2, r0
9000927e:	6b59      	ldr	r1, [r3, #52]	; 0x34
90009280:	4810      	ldr	r0, [pc, #64]	; (900092c4 <HAL_DMA2D_Init+0x78>)
90009282:	4008      	ands	r0, r1
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
90009284:	4910      	ldr	r1, [pc, #64]	; (900092c8 <HAL_DMA2D_Init+0x7c>)
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
90009286:	4302      	orrs	r2, r0
90009288:	635a      	str	r2, [r3, #52]	; 0x34
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
9000928a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
9000928c:	4011      	ands	r1, r2
  /* DMA2D OPFCCR AI and RBS fields setting (Output Alpha Inversion)*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
9000928e:	e9d4 0204 	ldrd	r0, r2, [r4, #16]
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
90009292:	4329      	orrs	r1, r5
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
90009294:	0552      	lsls	r2, r2, #21
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
90009296:	6419      	str	r1, [r3, #64]	; 0x40
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
90009298:	6b59      	ldr	r1, [r3, #52]	; 0x34
9000929a:	ea42 5200 	orr.w	r2, r2, r0, lsl #20
             ((hdma2d->Init.AlphaInverted << DMA2D_OPFCCR_AI_Pos) | \
              (hdma2d->Init.RedBlueSwap << DMA2D_OPFCCR_RBS_Pos)));


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
9000929e:	2000      	movs	r0, #0
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
900092a0:	f421 1140 	bic.w	r1, r1, #3145728	; 0x300000
900092a4:	430a      	orrs	r2, r1
900092a6:	635a      	str	r2, [r3, #52]	; 0x34

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
900092a8:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
900092aa:	6660      	str	r0, [r4, #100]	; 0x64
  hdma2d->State  = HAL_DMA2D_STATE_READY;
900092ac:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61

  return HAL_OK;
}
900092b0:	bd38      	pop	{r3, r4, r5, pc}
    hdma2d->Lock = HAL_UNLOCKED;
900092b2:	f880 2060 	strb.w	r2, [r0, #96]	; 0x60
    HAL_DMA2D_MspInit(hdma2d);
900092b6:	f7f9 fe81 	bl	90002fbc <HAL_DMA2D_MspInit>
900092ba:	e7d0      	b.n	9000925e <HAL_DMA2D_Init+0x12>
    return HAL_ERROR;
900092bc:	2001      	movs	r0, #1
}
900092be:	4770      	bx	lr
900092c0:	fff8ffbf 	.word	0xfff8ffbf
900092c4:	fffffef8 	.word	0xfffffef8
900092c8:	ffff0000 	.word	0xffff0000

900092cc <HAL_DMA2D_LineEventCallback>:
900092cc:	4770      	bx	lr
900092ce:	bf00      	nop

900092d0 <HAL_DMA2D_CLUTLoadingCpltCallback>:
900092d0:	4770      	bx	lr
900092d2:	bf00      	nop

900092d4 <HAL_DMA2D_IRQHandler>:
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
900092d4:	6803      	ldr	r3, [r0, #0]
{
900092d6:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
900092d8:	685d      	ldr	r5, [r3, #4]
{
900092da:	4604      	mov	r4, r0
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
900092dc:	681e      	ldr	r6, [r3, #0]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
900092de:	07ea      	lsls	r2, r5, #31
900092e0:	d501      	bpl.n	900092e6 <HAL_DMA2D_IRQHandler+0x12>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
900092e2:	05f1      	lsls	r1, r6, #23
900092e4:	d456      	bmi.n	90009394 <HAL_DMA2D_IRQHandler+0xc0>
        hdma2d->XferErrorCallback(hdma2d);
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
900092e6:	06aa      	lsls	r2, r5, #26
900092e8:	d501      	bpl.n	900092ee <HAL_DMA2D_IRQHandler+0x1a>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
900092ea:	04b3      	lsls	r3, r6, #18
900092ec:	d43b      	bmi.n	90009366 <HAL_DMA2D_IRQHandler+0x92>
        hdma2d->XferErrorCallback(hdma2d);
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
900092ee:	0728      	lsls	r0, r5, #28
900092f0:	d501      	bpl.n	900092f6 <HAL_DMA2D_IRQHandler+0x22>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
900092f2:	0531      	lsls	r1, r6, #20
900092f4:	d421      	bmi.n	9000933a <HAL_DMA2D_IRQHandler+0x66>
        hdma2d->XferErrorCallback(hdma2d);
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
900092f6:	076a      	lsls	r2, r5, #29
900092f8:	d501      	bpl.n	900092fe <HAL_DMA2D_IRQHandler+0x2a>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
900092fa:	0573      	lsls	r3, r6, #21
900092fc:	d472      	bmi.n	900093e4 <HAL_DMA2D_IRQHandler+0x110>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
900092fe:	07a8      	lsls	r0, r5, #30
90009300:	d501      	bpl.n	90009306 <HAL_DMA2D_IRQHandler+0x32>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
90009302:	05b1      	lsls	r1, r6, #22
90009304:	d404      	bmi.n	90009310 <HAL_DMA2D_IRQHandler+0x3c>
        hdma2d->XferCpltCallback(hdma2d);
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
90009306:	06ea      	lsls	r2, r5, #27
90009308:	d501      	bpl.n	9000930e <HAL_DMA2D_IRQHandler+0x3a>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
9000930a:	04f3      	lsls	r3, r6, #19
9000930c:	d457      	bmi.n	900093be <HAL_DMA2D_IRQHandler+0xea>
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
9000930e:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
90009310:	6823      	ldr	r3, [r4, #0]
90009312:	681a      	ldr	r2, [r3, #0]
90009314:	f422 7200 	bic.w	r2, r2, #512	; 0x200
90009318:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
9000931a:	2202      	movs	r2, #2
9000931c:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_READY;
9000931e:	2201      	movs	r2, #1
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
90009320:	6e63      	ldr	r3, [r4, #100]	; 0x64
90009322:	6663      	str	r3, [r4, #100]	; 0x64
      __HAL_UNLOCK(hdma2d);
90009324:	2300      	movs	r3, #0
      hdma2d->State = HAL_DMA2D_STATE_READY;
90009326:	f884 2061 	strb.w	r2, [r4, #97]	; 0x61
      __HAL_UNLOCK(hdma2d);
9000932a:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
      if (hdma2d->XferCpltCallback != NULL)
9000932e:	6a23      	ldr	r3, [r4, #32]
90009330:	2b00      	cmp	r3, #0
90009332:	d0e8      	beq.n	90009306 <HAL_DMA2D_IRQHandler+0x32>
        hdma2d->XferCpltCallback(hdma2d);
90009334:	4620      	mov	r0, r4
90009336:	4798      	blx	r3
90009338:	e7e5      	b.n	90009306 <HAL_DMA2D_IRQHandler+0x32>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
9000933a:	6823      	ldr	r3, [r4, #0]
9000933c:	681a      	ldr	r2, [r3, #0]
9000933e:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
90009342:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
90009344:	2208      	movs	r2, #8
90009346:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90009348:	2204      	movs	r2, #4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
9000934a:	6e63      	ldr	r3, [r4, #100]	; 0x64
9000934c:	4313      	orrs	r3, r2
9000934e:	6663      	str	r3, [r4, #100]	; 0x64
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90009350:	f884 2061 	strb.w	r2, [r4, #97]	; 0x61
      __HAL_UNLOCK(hdma2d);
90009354:	2200      	movs	r2, #0
      if (hdma2d->XferErrorCallback != NULL)
90009356:	6a63      	ldr	r3, [r4, #36]	; 0x24
      __HAL_UNLOCK(hdma2d);
90009358:	f884 2060 	strb.w	r2, [r4, #96]	; 0x60
      if (hdma2d->XferErrorCallback != NULL)
9000935c:	2b00      	cmp	r3, #0
9000935e:	d0ca      	beq.n	900092f6 <HAL_DMA2D_IRQHandler+0x22>
        hdma2d->XferErrorCallback(hdma2d);
90009360:	4620      	mov	r0, r4
90009362:	4798      	blx	r3
90009364:	e7c7      	b.n	900092f6 <HAL_DMA2D_IRQHandler+0x22>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
90009366:	6823      	ldr	r3, [r4, #0]
90009368:	681a      	ldr	r2, [r3, #0]
9000936a:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
9000936e:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
90009370:	2220      	movs	r2, #32
90009372:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90009374:	2204      	movs	r2, #4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
90009376:	6e63      	ldr	r3, [r4, #100]	; 0x64
90009378:	f043 0302 	orr.w	r3, r3, #2
9000937c:	6663      	str	r3, [r4, #100]	; 0x64
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
9000937e:	f884 2061 	strb.w	r2, [r4, #97]	; 0x61
      __HAL_UNLOCK(hdma2d);
90009382:	2200      	movs	r2, #0
      if (hdma2d->XferErrorCallback != NULL)
90009384:	6a63      	ldr	r3, [r4, #36]	; 0x24
      __HAL_UNLOCK(hdma2d);
90009386:	f884 2060 	strb.w	r2, [r4, #96]	; 0x60
      if (hdma2d->XferErrorCallback != NULL)
9000938a:	2b00      	cmp	r3, #0
9000938c:	d0af      	beq.n	900092ee <HAL_DMA2D_IRQHandler+0x1a>
        hdma2d->XferErrorCallback(hdma2d);
9000938e:	4620      	mov	r0, r4
90009390:	4798      	blx	r3
90009392:	e7ac      	b.n	900092ee <HAL_DMA2D_IRQHandler+0x1a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
90009394:	681a      	ldr	r2, [r3, #0]
90009396:	f422 7280 	bic.w	r2, r2, #256	; 0x100
9000939a:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
9000939c:	6e42      	ldr	r2, [r0, #100]	; 0x64
9000939e:	f042 0201 	orr.w	r2, r2, #1
900093a2:	6642      	str	r2, [r0, #100]	; 0x64
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
900093a4:	2201      	movs	r2, #1
900093a6:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
900093a8:	2304      	movs	r3, #4
900093aa:	f880 3061 	strb.w	r3, [r0, #97]	; 0x61
      __HAL_UNLOCK(hdma2d);
900093ae:	2300      	movs	r3, #0
900093b0:	f880 3060 	strb.w	r3, [r0, #96]	; 0x60
      if (hdma2d->XferErrorCallback != NULL)
900093b4:	6a43      	ldr	r3, [r0, #36]	; 0x24
900093b6:	2b00      	cmp	r3, #0
900093b8:	d095      	beq.n	900092e6 <HAL_DMA2D_IRQHandler+0x12>
        hdma2d->XferErrorCallback(hdma2d);
900093ba:	4798      	blx	r3
900093bc:	e793      	b.n	900092e6 <HAL_DMA2D_IRQHandler+0x12>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
900093be:	6823      	ldr	r3, [r4, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
900093c0:	2010      	movs	r0, #16
      hdma2d->State = HAL_DMA2D_STATE_READY;
900093c2:	2101      	movs	r1, #1
      __HAL_UNLOCK(hdma2d);
900093c4:	2500      	movs	r5, #0
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
900093c6:	681a      	ldr	r2, [r3, #0]
900093c8:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
900093cc:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
900093ce:	6098      	str	r0, [r3, #8]
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
900093d0:	4620      	mov	r0, r4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
900093d2:	6e63      	ldr	r3, [r4, #100]	; 0x64
      __HAL_UNLOCK(hdma2d);
900093d4:	f884 5060 	strb.w	r5, [r4, #96]	; 0x60
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
900093d8:	6663      	str	r3, [r4, #100]	; 0x64
      hdma2d->State = HAL_DMA2D_STATE_READY;
900093da:	f884 1061 	strb.w	r1, [r4, #97]	; 0x61
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
900093de:	f7ff ff77 	bl	900092d0 <HAL_DMA2D_CLUTLoadingCpltCallback>
}
900093e2:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
900093e4:	6823      	ldr	r3, [r4, #0]
      HAL_DMA2D_LineEventCallback(hdma2d);
900093e6:	4620      	mov	r0, r4
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
900093e8:	681a      	ldr	r2, [r3, #0]
900093ea:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
900093ee:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
900093f0:	2204      	movs	r2, #4
900093f2:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
900093f4:	f7ff ff6a 	bl	900092cc <HAL_DMA2D_LineEventCallback>
900093f8:	e781      	b.n	900092fe <HAL_DMA2D_IRQHandler+0x2a>
900093fa:	bf00      	nop

900093fc <HAL_DMA2D_ConfigLayer>:
  {
    assert_param(IS_DMA2D_CHROMA_SUB_SAMPLING(hdma2d->LayerCfg[LayerIdx].ChromaSubSampling));
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
900093fc:	f890 2060 	ldrb.w	r2, [r0, #96]	; 0x60
90009400:	2a01      	cmp	r2, #1
90009402:	d065      	beq.n	900094d0 <HAL_DMA2D_ConfigLayer+0xd4>
90009404:	4603      	mov	r3, r0
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90009406:	ebc1 00c1 	rsb	r0, r1, r1, lsl #3
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
9000940a:	2202      	movs	r2, #2
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
9000940c:	eb03 0080 	add.w	r0, r3, r0, lsl #2
{
90009410:	b470      	push	{r4, r5, r6}
  __HAL_LOCK(hdma2d);
90009412:	2401      	movs	r4, #1
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
90009414:	f883 2061 	strb.w	r2, [r3, #97]	; 0x61
  __HAL_LOCK(hdma2d);
90009418:	f883 4060 	strb.w	r4, [r3, #96]	; 0x60
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
9000941c:	6b82      	ldr	r2, [r0, #56]	; 0x38
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
9000941e:	6ac4      	ldr	r4, [r0, #44]	; 0x2c
90009420:	6b05      	ldr	r5, [r0, #48]	; 0x30
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
90009422:	0512      	lsls	r2, r2, #20
  regMask  = (DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA | DMA2D_BGPFCCR_AI | DMA2D_BGPFCCR_RBS);


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
90009424:	f1a4 0c09 	sub.w	ip, r4, #9
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90009428:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
9000942c:	6bc5      	ldr	r5, [r0, #60]	; 0x3c
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
9000942e:	f1bc 0f01 	cmp.w	ip, #1
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90009432:	ea42 0204 	orr.w	r2, r2, r4
90009436:	ea42 5245 	orr.w	r2, r2, r5, lsl #21
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
9000943a:	d922      	bls.n	90009482 <HAL_DMA2D_ConfigLayer+0x86>
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
  }
  else
  {
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
9000943c:	6b45      	ldr	r5, [r0, #52]	; 0x34
9000943e:	ea42 6205 	orr.w	r2, r2, r5, lsl #24
  }

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
90009442:	b981      	cbnz	r1, 90009466 <HAL_DMA2D_ConfigLayer+0x6a>
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90009444:	6818      	ldr	r0, [r3, #0]
90009446:	4923      	ldr	r1, [pc, #140]	; (900094d4 <HAL_DMA2D_ConfigLayer+0xd8>)
90009448:	6a45      	ldr	r5, [r0, #36]	; 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
9000944a:	6a9c      	ldr	r4, [r3, #40]	; 0x28
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
9000944c:	4029      	ands	r1, r5
9000944e:	4311      	orrs	r1, r2
90009450:	6241      	str	r1, [r0, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
90009452:	6184      	str	r4, [r0, #24]
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
90009454:	2200      	movs	r2, #0
  hdma2d->State = HAL_DMA2D_STATE_READY;
90009456:	2101      	movs	r1, #1

  return HAL_OK;
90009458:	4610      	mov	r0, r2
  hdma2d->State = HAL_DMA2D_STATE_READY;
9000945a:	f883 1061 	strb.w	r1, [r3, #97]	; 0x61
  __HAL_UNLOCK(hdma2d);
9000945e:	f883 2060 	strb.w	r2, [r3, #96]	; 0x60
}
90009462:	bc70      	pop	{r4, r5, r6}
90009464:	4770      	bx	lr
    if (pLayerCfg->InputColorMode == DMA2D_INPUT_YCBCR)
90009466:	2c0b      	cmp	r4, #11
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90009468:	681c      	ldr	r4, [r3, #0]
    if (pLayerCfg->InputColorMode == DMA2D_INPUT_YCBCR)
9000946a:	d129      	bne.n	900094c0 <HAL_DMA2D_ConfigLayer+0xc4>
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
9000946c:	69e5      	ldr	r5, [r4, #28]
9000946e:	491a      	ldr	r1, [pc, #104]	; (900094d8 <HAL_DMA2D_ConfigLayer+0xdc>)
90009470:	4029      	ands	r1, r5
      regValue |= (pLayerCfg->ChromaSubSampling << DMA2D_FGPFCCR_CSS_Pos);
90009472:	6c05      	ldr	r5, [r0, #64]	; 0x40
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90009474:	6a80      	ldr	r0, [r0, #40]	; 0x28
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90009476:	ea41 4185 	orr.w	r1, r1, r5, lsl #18
9000947a:	4311      	orrs	r1, r2
9000947c:	61e1      	str	r1, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
9000947e:	6120      	str	r0, [r4, #16]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
90009480:	e7e8      	b.n	90009454 <HAL_DMA2D_ConfigLayer+0x58>
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
90009482:	6b44      	ldr	r4, [r0, #52]	; 0x34
90009484:	f004 447f 	and.w	r4, r4, #4278190080	; 0xff000000
90009488:	4314      	orrs	r4, r2
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
9000948a:	b961      	cbnz	r1, 900094a6 <HAL_DMA2D_ConfigLayer+0xaa>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
9000948c:	6819      	ldr	r1, [r3, #0]
9000948e:	4a11      	ldr	r2, [pc, #68]	; (900094d4 <HAL_DMA2D_ConfigLayer+0xd8>)
90009490:	6a4e      	ldr	r6, [r1, #36]	; 0x24
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
90009492:	6b58      	ldr	r0, [r3, #52]	; 0x34
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90009494:	4032      	ands	r2, r6
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
90009496:	6a9d      	ldr	r5, [r3, #40]	; 0x28
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
90009498:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
9000949c:	4322      	orrs	r2, r4
9000949e:	624a      	str	r2, [r1, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
900094a0:	618d      	str	r5, [r1, #24]
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
900094a2:	6288      	str	r0, [r1, #40]	; 0x28
900094a4:	e7d6      	b.n	90009454 <HAL_DMA2D_ConfigLayer+0x58>
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
900094a6:	6819      	ldr	r1, [r3, #0]
900094a8:	4a0a      	ldr	r2, [pc, #40]	; (900094d4 <HAL_DMA2D_ConfigLayer+0xd8>)
900094aa:	69cd      	ldr	r5, [r1, #28]
900094ac:	402a      	ands	r2, r5
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
900094ae:	6a85      	ldr	r5, [r0, #40]	; 0x28
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
900094b0:	4322      	orrs	r2, r4
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
900094b2:	6b44      	ldr	r4, [r0, #52]	; 0x34
900094b4:	f024 447f 	bic.w	r4, r4, #4278190080	; 0xff000000
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
900094b8:	61ca      	str	r2, [r1, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
900094ba:	610d      	str	r5, [r1, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
900094bc:	620c      	str	r4, [r1, #32]
900094be:	e7c9      	b.n	90009454 <HAL_DMA2D_ConfigLayer+0x58>
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
900094c0:	69e5      	ldr	r5, [r4, #28]
900094c2:	4904      	ldr	r1, [pc, #16]	; (900094d4 <HAL_DMA2D_ConfigLayer+0xd8>)
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
900094c4:	6a80      	ldr	r0, [r0, #40]	; 0x28
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
900094c6:	4029      	ands	r1, r5
900094c8:	4311      	orrs	r1, r2
900094ca:	61e1      	str	r1, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
900094cc:	6120      	str	r0, [r4, #16]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
900094ce:	e7c1      	b.n	90009454 <HAL_DMA2D_ConfigLayer+0x58>
  __HAL_LOCK(hdma2d);
900094d0:	2002      	movs	r0, #2
}
900094d2:	4770      	bx	lr
900094d4:	00ccfff0 	.word	0x00ccfff0
900094d8:	00c0fff0 	.word	0x00c0fff0

900094dc <HAL_GPIO_Init>:
  * @param  GPIO_Init: pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
900094dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0x00U)
900094e0:	680c      	ldr	r4, [r1, #0]
{
900094e2:	b083      	sub	sp, #12
  while (((GPIO_Init->Pin) >> position) != 0x00U)
900094e4:	2c00      	cmp	r4, #0
900094e6:	f000 80a7 	beq.w	90009638 <HAL_GPIO_Init+0x15c>
900094ea:	f04f 0c00 	mov.w	ip, #0
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
900094ee:	4f8a      	ldr	r7, [pc, #552]	; (90009718 <HAL_GPIO_Init+0x23c>)
  uint32_t position = 0x00U;
900094f0:	4663      	mov	r3, ip
    iocurrent = (GPIO_Init->Pin) & (1UL << position);
900094f2:	2201      	movs	r2, #1
900094f4:	409a      	lsls	r2, r3
    if (iocurrent != 0x00U)
900094f6:	ea12 0e04 	ands.w	lr, r2, r4
900094fa:	f000 8096 	beq.w	9000962a <HAL_GPIO_Init+0x14e>
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
900094fe:	684d      	ldr	r5, [r1, #4]
90009500:	f005 0903 	and.w	r9, r5, #3
90009504:	f109 36ff 	add.w	r6, r9, #4294967295
90009508:	2e01      	cmp	r6, #1
9000950a:	f240 8098 	bls.w	9000963e <HAL_GPIO_Init+0x162>
      if ((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
9000950e:	f1b9 0f03 	cmp.w	r9, #3
90009512:	f040 80d2 	bne.w	900096ba <HAL_GPIO_Init+0x1de>
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90009516:	fa09 f20c 	lsl.w	r2, r9, ip
9000951a:	ea6f 0802 	mvn.w	r8, r2
      temp = GPIOx->MODER;
9000951e:	6806      	ldr	r6, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
90009520:	f415 3f40 	tst.w	r5, #196608	; 0x30000
      temp &= ~(GPIO_MODER_MODE0 << (position * 2U));
90009524:	ea06 0608 	and.w	r6, r6, r8
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
90009528:	ea42 0206 	orr.w	r2, r2, r6
      GPIOx->MODER = temp;
9000952c:	6002      	str	r2, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
9000952e:	d07c      	beq.n	9000962a <HAL_GPIO_Init+0x14e>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
90009530:	f8d7 20f4 	ldr.w	r2, [r7, #244]	; 0xf4
90009534:	f023 0803 	bic.w	r8, r3, #3

        temp = SYSCFG->EXTICR[position >> 2U];
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
90009538:	f003 0903 	and.w	r9, r3, #3
9000953c:	260f      	movs	r6, #15
        __HAL_RCC_SYSCFG_CLK_ENABLE();
9000953e:	f042 0202 	orr.w	r2, r2, #2
90009542:	f108 48b0 	add.w	r8, r8, #1476395008	; 0x58000000
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
90009546:	ea4f 0989 	mov.w	r9, r9, lsl #2
        __HAL_RCC_SYSCFG_CLK_ENABLE();
9000954a:	f8c7 20f4 	str.w	r2, [r7, #244]	; 0xf4
9000954e:	f508 6880 	add.w	r8, r8, #1024	; 0x400
90009552:	f8d7 20f4 	ldr.w	r2, [r7, #244]	; 0xf4
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
90009556:	fa06 f609 	lsl.w	r6, r6, r9
        __HAL_RCC_SYSCFG_CLK_ENABLE();
9000955a:	f002 0202 	and.w	r2, r2, #2
9000955e:	9201      	str	r2, [sp, #4]
90009560:	9a01      	ldr	r2, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
90009562:	f8d8 2008 	ldr.w	r2, [r8, #8]
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
90009566:	ea22 0206 	bic.w	r2, r2, r6
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
9000956a:	4e6c      	ldr	r6, [pc, #432]	; (9000971c <HAL_GPIO_Init+0x240>)
9000956c:	42b0      	cmp	r0, r6
9000956e:	d028      	beq.n	900095c2 <HAL_GPIO_Init+0xe6>
90009570:	f506 6680 	add.w	r6, r6, #1024	; 0x400
90009574:	42b0      	cmp	r0, r6
90009576:	f000 80ac 	beq.w	900096d2 <HAL_GPIO_Init+0x1f6>
9000957a:	4e69      	ldr	r6, [pc, #420]	; (90009720 <HAL_GPIO_Init+0x244>)
9000957c:	42b0      	cmp	r0, r6
9000957e:	f000 80ad 	beq.w	900096dc <HAL_GPIO_Init+0x200>
90009582:	4e68      	ldr	r6, [pc, #416]	; (90009724 <HAL_GPIO_Init+0x248>)
90009584:	42b0      	cmp	r0, r6
90009586:	f000 809f 	beq.w	900096c8 <HAL_GPIO_Init+0x1ec>
9000958a:	4e67      	ldr	r6, [pc, #412]	; (90009728 <HAL_GPIO_Init+0x24c>)
9000958c:	42b0      	cmp	r0, r6
9000958e:	f000 80af 	beq.w	900096f0 <HAL_GPIO_Init+0x214>
90009592:	4e66      	ldr	r6, [pc, #408]	; (9000972c <HAL_GPIO_Init+0x250>)
90009594:	42b0      	cmp	r0, r6
90009596:	f000 80b0 	beq.w	900096fa <HAL_GPIO_Init+0x21e>
9000959a:	4e65      	ldr	r6, [pc, #404]	; (90009730 <HAL_GPIO_Init+0x254>)
9000959c:	42b0      	cmp	r0, r6
9000959e:	f000 80a2 	beq.w	900096e6 <HAL_GPIO_Init+0x20a>
900095a2:	4e64      	ldr	r6, [pc, #400]	; (90009734 <HAL_GPIO_Init+0x258>)
900095a4:	42b0      	cmp	r0, r6
900095a6:	f000 80ad 	beq.w	90009704 <HAL_GPIO_Init+0x228>
900095aa:	4e63      	ldr	r6, [pc, #396]	; (90009738 <HAL_GPIO_Init+0x25c>)
900095ac:	42b0      	cmp	r0, r6
900095ae:	f000 80ae 	beq.w	9000970e <HAL_GPIO_Init+0x232>
900095b2:	4e62      	ldr	r6, [pc, #392]	; (9000973c <HAL_GPIO_Init+0x260>)
900095b4:	42b0      	cmp	r0, r6
900095b6:	bf0c      	ite	eq
900095b8:	2609      	moveq	r6, #9
900095ba:	260a      	movne	r6, #10
900095bc:	fa06 f609 	lsl.w	r6, r6, r9
900095c0:	4332      	orrs	r2, r6
        SYSCFG->EXTICR[position >> 2U] = temp;
900095c2:	f8c8 2008 	str.w	r2, [r8, #8]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR1;
900095c6:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
900095ca:	f415 1f80 	tst.w	r5, #1048576	; 0x100000
        temp &= ~(iocurrent);
900095ce:	ea6f 060e 	mvn.w	r6, lr
        temp = EXTI->RTSR1;
900095d2:	6812      	ldr	r2, [r2, #0]
        {
          temp |= iocurrent;
        }
        EXTI->RTSR1 = temp;
900095d4:	f04f 48b0 	mov.w	r8, #1476395008	; 0x58000000
        temp &= ~(iocurrent);
900095d8:	bf0c      	ite	eq
900095da:	4032      	andeq	r2, r6
          temp |= iocurrent;
900095dc:	ea4e 0202 	orrne.w	r2, lr, r2

        temp = EXTI->FTSR1;
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
900095e0:	f415 1f00 	tst.w	r5, #2097152	; 0x200000
        EXTI->RTSR1 = temp;
900095e4:	f8c8 2000 	str.w	r2, [r8]
        temp = EXTI->FTSR1;
900095e8:	f8d8 2004 	ldr.w	r2, [r8, #4]
        {
          temp |= iocurrent;
        }
        EXTI->FTSR1 = temp;
900095ec:	f04f 48b0 	mov.w	r8, #1476395008	; 0x58000000
        temp &= ~(iocurrent);
900095f0:	bf0c      	ite	eq
900095f2:	4032      	andeq	r2, r6
          temp |= iocurrent;
900095f4:	ea4e 0202 	orrne.w	r2, lr, r2

        temp = EXTI_CurrentCPU->EMR1;
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
900095f8:	f415 3f00 	tst.w	r5, #131072	; 0x20000
        EXTI->FTSR1 = temp;
900095fc:	f8c8 2004 	str.w	r2, [r8, #4]
        temp = EXTI_CurrentCPU->EMR1;
90009600:	f8d8 2084 	ldr.w	r2, [r8, #132]	; 0x84
        {
          temp |= iocurrent;
        }
        EXTI_CurrentCPU->EMR1 = temp;
90009604:	f04f 48b0 	mov.w	r8, #1476395008	; 0x58000000
        temp &= ~(iocurrent);
90009608:	bf0c      	ite	eq
9000960a:	4032      	andeq	r2, r6
          temp |= iocurrent;
9000960c:	ea4e 0202 	orrne.w	r2, lr, r2

        /* Clear EXTI line configuration */
        temp = EXTI_CurrentCPU->IMR1;
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00U)
90009610:	03ed      	lsls	r5, r5, #15
        {
          temp |= iocurrent;
        }
        EXTI_CurrentCPU->IMR1 = temp;
90009612:	f04f 45b0 	mov.w	r5, #1476395008	; 0x58000000
        EXTI_CurrentCPU->EMR1 = temp;
90009616:	f8c8 2084 	str.w	r2, [r8, #132]	; 0x84
        temp = EXTI_CurrentCPU->IMR1;
9000961a:	f8d8 2080 	ldr.w	r2, [r8, #128]	; 0x80
        temp &= ~(iocurrent);
9000961e:	bf54      	ite	pl
90009620:	4032      	andpl	r2, r6
          temp |= iocurrent;
90009622:	ea4e 0202 	orrmi.w	r2, lr, r2
        EXTI_CurrentCPU->IMR1 = temp;
90009626:	f8c5 2080 	str.w	r2, [r5, #128]	; 0x80
      }
    }

    position++;
9000962a:	3301      	adds	r3, #1
  while (((GPIO_Init->Pin) >> position) != 0x00U)
9000962c:	f10c 0c02 	add.w	ip, ip, #2
90009630:	fa34 f203 	lsrs.w	r2, r4, r3
90009634:	f47f af5d 	bne.w	900094f2 <HAL_GPIO_Init+0x16>
  }
}
90009638:	b003      	add	sp, #12
9000963a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
9000963e:	f04f 0803 	mov.w	r8, #3
        temp = GPIOx->OSPEEDR;
90009642:	6886      	ldr	r6, [r0, #8]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90009644:	fa08 f80c 	lsl.w	r8, r8, ip
90009648:	ea26 0a08 	bic.w	sl, r6, r8
        temp |= (GPIO_Init->Speed << (position * 2U));
9000964c:	68ce      	ldr	r6, [r1, #12]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
9000964e:	ea6f 0808 	mvn.w	r8, r8
        temp |= (GPIO_Init->Speed << (position * 2U));
90009652:	fa06 f60c 	lsl.w	r6, r6, ip
90009656:	ea46 060a 	orr.w	r6, r6, sl
        GPIOx->OSPEEDR = temp;
9000965a:	6086      	str	r6, [r0, #8]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
9000965c:	f3c5 1600 	ubfx	r6, r5, #4, #1
        temp = GPIOx->OTYPER;
90009660:	f8d0 a004 	ldr.w	sl, [r0, #4]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
90009664:	409e      	lsls	r6, r3
        temp &= ~(GPIO_OTYPER_OT0 << position) ;
90009666:	ea2a 0202 	bic.w	r2, sl, r2
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
9000966a:	4332      	orrs	r2, r6
        GPIOx->OTYPER = temp;
9000966c:	6042      	str	r2, [r0, #4]
      temp = GPIOx->PUPDR;
9000966e:	68c2      	ldr	r2, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
90009670:	f1b9 0f02 	cmp.w	r9, #2
      temp |= ((GPIO_Init->Pull) << (position * 2U));
90009674:	688e      	ldr	r6, [r1, #8]
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
90009676:	ea02 0208 	and.w	r2, r2, r8
      temp |= ((GPIO_Init->Pull) << (position * 2U));
9000967a:	fa06 f60c 	lsl.w	r6, r6, ip
9000967e:	ea46 0602 	orr.w	r6, r6, r2
      GPIOx->PUPDR = temp;
90009682:	fa09 f20c 	lsl.w	r2, r9, ip
90009686:	60c6      	str	r6, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
90009688:	f47f af49 	bne.w	9000951e <HAL_GPIO_Init+0x42>
        temp = GPIOx->AFR[position >> 3U];
9000968c:	ea4f 09d3 	mov.w	r9, r3, lsr #3
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
90009690:	f003 0b07 	and.w	fp, r3, #7
90009694:	260f      	movs	r6, #15
90009696:	eb00 0989 	add.w	r9, r0, r9, lsl #2
9000969a:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
        temp = GPIOx->AFR[position >> 3U];
9000969e:	f8d9 a020 	ldr.w	sl, [r9, #32]
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
900096a2:	fa06 f60b 	lsl.w	r6, r6, fp
900096a6:	ea2a 0a06 	bic.w	sl, sl, r6
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
900096aa:	690e      	ldr	r6, [r1, #16]
900096ac:	fa06 f60b 	lsl.w	r6, r6, fp
900096b0:	ea46 060a 	orr.w	r6, r6, sl
        GPIOx->AFR[position >> 3U] = temp;
900096b4:	f8c9 6020 	str.w	r6, [r9, #32]
900096b8:	e731      	b.n	9000951e <HAL_GPIO_Init+0x42>
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
900096ba:	f04f 0803 	mov.w	r8, #3
900096be:	fa08 f80c 	lsl.w	r8, r8, ip
900096c2:	ea6f 0808 	mvn.w	r8, r8
900096c6:	e7d2      	b.n	9000966e <HAL_GPIO_Init+0x192>
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
900096c8:	2603      	movs	r6, #3
900096ca:	fa06 f609 	lsl.w	r6, r6, r9
900096ce:	4332      	orrs	r2, r6
900096d0:	e777      	b.n	900095c2 <HAL_GPIO_Init+0xe6>
900096d2:	2601      	movs	r6, #1
900096d4:	fa06 f609 	lsl.w	r6, r6, r9
900096d8:	4332      	orrs	r2, r6
900096da:	e772      	b.n	900095c2 <HAL_GPIO_Init+0xe6>
900096dc:	2602      	movs	r6, #2
900096de:	fa06 f609 	lsl.w	r6, r6, r9
900096e2:	4332      	orrs	r2, r6
900096e4:	e76d      	b.n	900095c2 <HAL_GPIO_Init+0xe6>
900096e6:	2606      	movs	r6, #6
900096e8:	fa06 f609 	lsl.w	r6, r6, r9
900096ec:	4332      	orrs	r2, r6
900096ee:	e768      	b.n	900095c2 <HAL_GPIO_Init+0xe6>
900096f0:	2604      	movs	r6, #4
900096f2:	fa06 f609 	lsl.w	r6, r6, r9
900096f6:	4332      	orrs	r2, r6
900096f8:	e763      	b.n	900095c2 <HAL_GPIO_Init+0xe6>
900096fa:	2605      	movs	r6, #5
900096fc:	fa06 f609 	lsl.w	r6, r6, r9
90009700:	4332      	orrs	r2, r6
90009702:	e75e      	b.n	900095c2 <HAL_GPIO_Init+0xe6>
90009704:	2607      	movs	r6, #7
90009706:	fa06 f609 	lsl.w	r6, r6, r9
9000970a:	4332      	orrs	r2, r6
9000970c:	e759      	b.n	900095c2 <HAL_GPIO_Init+0xe6>
9000970e:	2608      	movs	r6, #8
90009710:	fa06 f609 	lsl.w	r6, r6, r9
90009714:	4332      	orrs	r2, r6
90009716:	e754      	b.n	900095c2 <HAL_GPIO_Init+0xe6>
90009718:	58024400 	.word	0x58024400
9000971c:	58020000 	.word	0x58020000
90009720:	58020800 	.word	0x58020800
90009724:	58020c00 	.word	0x58020c00
90009728:	58021000 	.word	0x58021000
9000972c:	58021400 	.word	0x58021400
90009730:	58021800 	.word	0x58021800
90009734:	58021c00 	.word	0x58021c00
90009738:	58022000 	.word	0x58022000
9000973c:	58022400 	.word	0x58022400

90009740 <HAL_GPIO_DeInit>:
  /* Check the parameters */
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* Configure the port pins */
  while ((GPIO_Pin >> position) != 0x00U)
90009740:	2900      	cmp	r1, #0
90009742:	f000 80a4 	beq.w	9000988e <HAL_GPIO_DeInit+0x14e>
  uint32_t position = 0x00U;
90009746:	2300      	movs	r3, #0
{
90009748:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000974c:	f8df 9168 	ldr.w	r9, [pc, #360]	; 900098b8 <HAL_GPIO_DeInit+0x178>
90009750:	b083      	sub	sp, #12
    {
      /*------------------------- EXTI Mode Configuration --------------------*/
      /* Clear the External Interrupt or Event for the current IO */
      tmp = SYSCFG->EXTICR[position >> 2U];
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
90009752:	f8df 8168 	ldr.w	r8, [pc, #360]	; 900098bc <HAL_GPIO_DeInit+0x17c>
90009756:	f8df a168 	ldr.w	sl, [pc, #360]	; 900098c0 <HAL_GPIO_DeInit+0x180>
9000975a:	f8df b168 	ldr.w	fp, [pc, #360]	; 900098c4 <HAL_GPIO_DeInit+0x184>
    iocurrent = GPIO_Pin & (1UL << position) ;
9000975e:	f04f 0e01 	mov.w	lr, #1
90009762:	fa0e f203 	lsl.w	r2, lr, r3
    if (iocurrent != 0x00U)
90009766:	ea12 0c01 	ands.w	ip, r2, r1
9000976a:	d06b      	beq.n	90009844 <HAL_GPIO_DeInit+0x104>
      tmp = SYSCFG->EXTICR[position >> 2U];
9000976c:	f023 0503 	bic.w	r5, r3, #3
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
90009770:	f003 0403 	and.w	r4, r3, #3
90009774:	260f      	movs	r6, #15
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
90009776:	4540      	cmp	r0, r8
90009778:	444d      	add	r5, r9
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
9000977a:	ea4f 0484 	mov.w	r4, r4, lsl #2
      tmp = SYSCFG->EXTICR[position >> 2U];
9000977e:	68af      	ldr	r7, [r5, #8]
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
90009780:	fa06 f604 	lsl.w	r6, r6, r4
90009784:	ea07 0706 	and.w	r7, r7, r6
90009788:	9701      	str	r7, [sp, #4]
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
9000978a:	d01f      	beq.n	900097cc <HAL_GPIO_DeInit+0x8c>
9000978c:	4550      	cmp	r0, sl
9000978e:	d01a      	beq.n	900097c6 <HAL_GPIO_DeInit+0x86>
90009790:	4558      	cmp	r0, fp
90009792:	d05e      	beq.n	90009852 <HAL_GPIO_DeInit+0x112>
90009794:	4f43      	ldr	r7, [pc, #268]	; (900098a4 <HAL_GPIO_DeInit+0x164>)
90009796:	42b8      	cmp	r0, r7
90009798:	d065      	beq.n	90009866 <HAL_GPIO_DeInit+0x126>
9000979a:	4f43      	ldr	r7, [pc, #268]	; (900098a8 <HAL_GPIO_DeInit+0x168>)
9000979c:	42b8      	cmp	r0, r7
9000979e:	d067      	beq.n	90009870 <HAL_GPIO_DeInit+0x130>
900097a0:	4f42      	ldr	r7, [pc, #264]	; (900098ac <HAL_GPIO_DeInit+0x16c>)
900097a2:	42b8      	cmp	r0, r7
900097a4:	d05a      	beq.n	9000985c <HAL_GPIO_DeInit+0x11c>
900097a6:	4f42      	ldr	r7, [pc, #264]	; (900098b0 <HAL_GPIO_DeInit+0x170>)
900097a8:	42b8      	cmp	r0, r7
900097aa:	d06b      	beq.n	90009884 <HAL_GPIO_DeInit+0x144>
900097ac:	4f41      	ldr	r7, [pc, #260]	; (900098b4 <HAL_GPIO_DeInit+0x174>)
900097ae:	42b8      	cmp	r0, r7
900097b0:	d06e      	beq.n	90009890 <HAL_GPIO_DeInit+0x150>
900097b2:	f8df e114 	ldr.w	lr, [pc, #276]	; 900098c8 <HAL_GPIO_DeInit+0x188>
900097b6:	4570      	cmp	r0, lr
900097b8:	d05f      	beq.n	9000987a <HAL_GPIO_DeInit+0x13a>
900097ba:	f8df e110 	ldr.w	lr, [pc, #272]	; 900098cc <HAL_GPIO_DeInit+0x18c>
900097be:	4570      	cmp	r0, lr
900097c0:	d06b      	beq.n	9000989a <HAL_GPIO_DeInit+0x15a>
900097c2:	f04f 0e0a 	mov.w	lr, #10
900097c6:	fa0e f404 	lsl.w	r4, lr, r4
900097ca:	e000      	b.n	900097ce <HAL_GPIO_DeInit+0x8e>
900097cc:	2400      	movs	r4, #0
900097ce:	9f01      	ldr	r7, [sp, #4]
900097d0:	42a7      	cmp	r7, r4
900097d2:	d119      	bne.n	90009808 <HAL_GPIO_DeInit+0xc8>
      {
        /* Clear EXTI line configuration for Current CPU */
        EXTI_CurrentCPU->IMR1 &= ~(iocurrent);
900097d4:	f04f 44b0 	mov.w	r4, #1476395008	; 0x58000000
900097d8:	f8d4 7080 	ldr.w	r7, [r4, #128]	; 0x80
900097dc:	ea27 070c 	bic.w	r7, r7, ip
900097e0:	f8c4 7080 	str.w	r7, [r4, #128]	; 0x80
        EXTI_CurrentCPU->EMR1 &= ~(iocurrent);
900097e4:	f8d4 7084 	ldr.w	r7, [r4, #132]	; 0x84
900097e8:	ea27 070c 	bic.w	r7, r7, ip
900097ec:	f8c4 7084 	str.w	r7, [r4, #132]	; 0x84

        /* Clear Rising Falling edge configuration */
        EXTI->FTSR1 &= ~(iocurrent);
900097f0:	6867      	ldr	r7, [r4, #4]
900097f2:	ea27 070c 	bic.w	r7, r7, ip
900097f6:	6067      	str	r7, [r4, #4]
        EXTI->RTSR1 &= ~(iocurrent);
900097f8:	6827      	ldr	r7, [r4, #0]
900097fa:	ea27 070c 	bic.w	r7, r7, ip
900097fe:	6027      	str	r7, [r4, #0]

        tmp = 0x0FUL << (4U * (position & 0x03U));
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
90009800:	68ac      	ldr	r4, [r5, #8]
90009802:	ea24 0406 	bic.w	r4, r4, r6
90009806:	60ac      	str	r4, [r5, #8]
      }

      /*------------------------- GPIO Mode Configuration --------------------*/
      /* Configure IO in Analog Mode */
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
90009808:	005d      	lsls	r5, r3, #1
9000980a:	2403      	movs	r4, #3

      /* Configure the default Alternate Function in current IO */
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
9000980c:	f003 0607 	and.w	r6, r3, #7
90009810:	270f      	movs	r7, #15
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
90009812:	40ac      	lsls	r4, r5
90009814:	6805      	ldr	r5, [r0, #0]
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
90009816:	00b6      	lsls	r6, r6, #2
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
90009818:	4325      	orrs	r5, r4
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
9000981a:	40b7      	lsls	r7, r6
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
9000981c:	6005      	str	r5, [r0, #0]
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
9000981e:	08dd      	lsrs	r5, r3, #3
90009820:	eb00 0585 	add.w	r5, r0, r5, lsl #2
90009824:	6a2e      	ldr	r6, [r5, #32]
90009826:	ea26 0607 	bic.w	r6, r6, r7
9000982a:	622e      	str	r6, [r5, #32]

      /* Deactivate the Pull-up and Pull-down resistor for the current IO */
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
9000982c:	68c5      	ldr	r5, [r0, #12]
9000982e:	ea25 0504 	bic.w	r5, r5, r4
90009832:	60c5      	str	r5, [r0, #12]

      /* Configure the default value IO Output Type */
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT0 << position) ;
90009834:	6845      	ldr	r5, [r0, #4]
90009836:	ea25 0202 	bic.w	r2, r5, r2
9000983a:	6042      	str	r2, [r0, #4]

      /* Configure the default value for IO Speed */
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
9000983c:	6882      	ldr	r2, [r0, #8]
9000983e:	ea22 0204 	bic.w	r2, r2, r4
90009842:	6082      	str	r2, [r0, #8]
    }

    position++;
90009844:	3301      	adds	r3, #1
  while ((GPIO_Pin >> position) != 0x00U)
90009846:	fa31 f203 	lsrs.w	r2, r1, r3
9000984a:	d188      	bne.n	9000975e <HAL_GPIO_DeInit+0x1e>
  }
}
9000984c:	b003      	add	sp, #12
9000984e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
90009852:	f04f 0e02 	mov.w	lr, #2
90009856:	fa0e f404 	lsl.w	r4, lr, r4
9000985a:	e7b8      	b.n	900097ce <HAL_GPIO_DeInit+0x8e>
9000985c:	f04f 0e05 	mov.w	lr, #5
90009860:	fa0e f404 	lsl.w	r4, lr, r4
90009864:	e7b3      	b.n	900097ce <HAL_GPIO_DeInit+0x8e>
90009866:	f04f 0e03 	mov.w	lr, #3
9000986a:	fa0e f404 	lsl.w	r4, lr, r4
9000986e:	e7ae      	b.n	900097ce <HAL_GPIO_DeInit+0x8e>
90009870:	f04f 0e04 	mov.w	lr, #4
90009874:	fa0e f404 	lsl.w	r4, lr, r4
90009878:	e7a9      	b.n	900097ce <HAL_GPIO_DeInit+0x8e>
9000987a:	f04f 0e08 	mov.w	lr, #8
9000987e:	fa0e f404 	lsl.w	r4, lr, r4
90009882:	e7a4      	b.n	900097ce <HAL_GPIO_DeInit+0x8e>
90009884:	f04f 0e06 	mov.w	lr, #6
90009888:	fa0e f404 	lsl.w	r4, lr, r4
9000988c:	e79f      	b.n	900097ce <HAL_GPIO_DeInit+0x8e>
9000988e:	4770      	bx	lr
90009890:	f04f 0e07 	mov.w	lr, #7
90009894:	fa0e f404 	lsl.w	r4, lr, r4
90009898:	e799      	b.n	900097ce <HAL_GPIO_DeInit+0x8e>
9000989a:	f04f 0e09 	mov.w	lr, #9
9000989e:	fa0e f404 	lsl.w	r4, lr, r4
900098a2:	e794      	b.n	900097ce <HAL_GPIO_DeInit+0x8e>
900098a4:	58020c00 	.word	0x58020c00
900098a8:	58021000 	.word	0x58021000
900098ac:	58021400 	.word	0x58021400
900098b0:	58021800 	.word	0x58021800
900098b4:	58021c00 	.word	0x58021c00
900098b8:	58000400 	.word	0x58000400
900098bc:	58020000 	.word	0x58020000
900098c0:	58020400 	.word	0x58020400
900098c4:	58020800 	.word	0x58020800
900098c8:	58022000 	.word	0x58022000
900098cc:	58022400 	.word	0x58022400

900098d0 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if ((GPIOx->IDR & GPIO_Pin) != 0x00U)
900098d0:	6903      	ldr	r3, [r0, #16]
900098d2:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
900098d4:	bf14      	ite	ne
900098d6:	2001      	movne	r0, #1
900098d8:	2000      	moveq	r0, #0
900098da:	4770      	bx	lr

900098dc <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
900098dc:	b902      	cbnz	r2, 900098e0 <HAL_GPIO_WritePin+0x4>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << GPIO_NUMBER;
900098de:	0409      	lsls	r1, r1, #16
900098e0:	6181      	str	r1, [r0, #24]
  }
}
900098e2:	4770      	bx	lr

900098e4 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
900098e4:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
900098e6:	ea01 0203 	and.w	r2, r1, r3
900098ea:	ea21 0103 	bic.w	r1, r1, r3
900098ee:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
900098f2:	6181      	str	r1, [r0, #24]
}
900098f4:	4770      	bx	lr
900098f6:	bf00      	nop

900098f8 <I2C_WaitOnTXISFlagUntilTimeout>:
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXISFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout,
                                                        uint32_t Tickstart)
{
900098f8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
900098fc:	6803      	ldr	r3, [r0, #0]
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
          {
            /* Check for the Timeout */
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
            {
              error_code |= HAL_I2C_ERROR_TIMEOUT;
900098fe:	f04f 0820 	mov.w	r8, #32
{
90009902:	4605      	mov	r5, r0
90009904:	460e      	mov	r6, r1
90009906:	4617      	mov	r7, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
90009908:	6998      	ldr	r0, [r3, #24]
9000990a:	f010 0902 	ands.w	r9, r0, #2
9000990e:	f040 809e 	bne.w	90009a4e <I2C_WaitOnTXISFlagUntilTimeout+0x156>
  uint32_t itflag   = hi2c->Instance->ISR;
90009912:	699c      	ldr	r4, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
90009914:	f014 0410 	ands.w	r4, r4, #16
90009918:	d068      	beq.n	900099ec <I2C_WaitOnTXISFlagUntilTimeout+0xf4>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
9000991a:	2210      	movs	r2, #16
  uint32_t tickstart = Tickstart;
9000991c:	463c      	mov	r4, r7
  HAL_StatusTypeDef status = HAL_OK;
9000991e:	46ca      	mov	sl, r9
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90009920:	61da      	str	r2, [r3, #28]
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90009922:	1c71      	adds	r1, r6, #1
90009924:	699a      	ldr	r2, [r3, #24]
90009926:	d163      	bne.n	900099f0 <I2C_WaitOnTXISFlagUntilTimeout+0xf8>
90009928:	0690      	lsls	r0, r2, #26
9000992a:	f100 8093 	bmi.w	90009a54 <I2C_WaitOnTXISFlagUntilTimeout+0x15c>
9000992e:	f1ba 0f00 	cmp.w	sl, #0
90009932:	d104      	bne.n	9000993e <I2C_WaitOnTXISFlagUntilTimeout+0x46>
90009934:	699c      	ldr	r4, [r3, #24]
90009936:	06a1      	lsls	r1, r4, #26
90009938:	d5fc      	bpl.n	90009934 <I2C_WaitOnTXISFlagUntilTimeout+0x3c>

    /* In case STOP Flag is detected, clear it */
    if (status == HAL_OK)
    {
      /* Clear STOP Flag */
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
9000993a:	f8c3 801c 	str.w	r8, [r3, #28]
    }

    error_code |= HAL_I2C_ERROR_AF;
9000993e:	f049 0404 	orr.w	r4, r9, #4

    status = HAL_ERROR;
90009942:	2101      	movs	r1, #1
  }

  /* Refresh Content of Status register */
  itflag = hi2c->Instance->ISR;
90009944:	699a      	ldr	r2, [r3, #24]

  /* Then verify if an additional errors occurs */
  /* Check if a Bus error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
90009946:	05d0      	lsls	r0, r2, #23
90009948:	d530      	bpl.n	900099ac <I2C_WaitOnTXISFlagUntilTimeout+0xb4>
  {
    error_code |= HAL_I2C_ERROR_BERR;

    /* Clear BERR flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
9000994a:	f44f 7180 	mov.w	r1, #256	; 0x100

    status = HAL_ERROR;
  }

  /* Check if an Over-Run/Under-Run error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
9000994e:	0556      	lsls	r6, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
90009950:	f044 0401 	orr.w	r4, r4, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90009954:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90009956:	d504      	bpl.n	90009962 <I2C_WaitOnTXISFlagUntilTimeout+0x6a>
  {
    error_code |= HAL_I2C_ERROR_OVR;

    /* Clear OVR flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90009958:	f44f 6180 	mov.w	r1, #1024	; 0x400
    error_code |= HAL_I2C_ERROR_OVR;
9000995c:	f044 0408 	orr.w	r4, r4, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90009960:	61d9      	str	r1, [r3, #28]

    status = HAL_ERROR;
  }

  /* Check if an Arbitration Loss error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90009962:	0591      	lsls	r1, r2, #22
90009964:	d504      	bpl.n	90009970 <I2C_WaitOnTXISFlagUntilTimeout+0x78>
  {
    error_code |= HAL_I2C_ERROR_ARLO;

    /* Clear ARLO flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90009966:	f44f 7200 	mov.w	r2, #512	; 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
9000996a:	f044 0402 	orr.w	r4, r4, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
9000996e:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
90009970:	699a      	ldr	r2, [r3, #24]
90009972:	0790      	lsls	r0, r2, #30
90009974:	d501      	bpl.n	9000997a <I2C_WaitOnTXISFlagUntilTimeout+0x82>
    hi2c->Instance->TXDR = 0x00U;
90009976:	2200      	movs	r2, #0
90009978:	629a      	str	r2, [r3, #40]	; 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
9000997a:	699a      	ldr	r2, [r3, #24]
9000997c:	07d1      	lsls	r1, r2, #31
9000997e:	d403      	bmi.n	90009988 <I2C_WaitOnTXISFlagUntilTimeout+0x90>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
90009980:	699a      	ldr	r2, [r3, #24]
90009982:	f042 0201 	orr.w	r2, r2, #1
90009986:	619a      	str	r2, [r3, #24]
  {
    /* Flush TX register */
    I2C_Flush_TXDR(hi2c);

    /* Clear Configuration Register 2 */
    I2C_RESET_CR2(hi2c);
90009988:	685a      	ldr	r2, [r3, #4]

    hi2c->ErrorCode |= error_code;
    hi2c->State = HAL_I2C_STATE_READY;
    hi2c->Mode = HAL_I2C_MODE_NONE;
9000998a:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
9000998c:	4834      	ldr	r0, [pc, #208]	; (90009a60 <I2C_WaitOnTXISFlagUntilTimeout+0x168>)
    hi2c->State = HAL_I2C_STATE_READY;
9000998e:	2620      	movs	r6, #32
    I2C_RESET_CR2(hi2c);
90009990:	4002      	ands	r2, r0
      return HAL_ERROR;
90009992:	2001      	movs	r0, #1
    I2C_RESET_CR2(hi2c);
90009994:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
90009996:	6c6b      	ldr	r3, [r5, #68]	; 0x44

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
90009998:	f885 1040 	strb.w	r1, [r5, #64]	; 0x40
    hi2c->ErrorCode |= error_code;
9000999c:	4323      	orrs	r3, r4
9000999e:	646b      	str	r3, [r5, #68]	; 0x44
    hi2c->State = HAL_I2C_STATE_READY;
900099a0:	f885 6041 	strb.w	r6, [r5, #65]	; 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
900099a4:	f885 1042 	strb.w	r1, [r5, #66]	; 0x42
}
900099a8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
900099ac:	0550      	lsls	r0, r2, #21
900099ae:	d4d3      	bmi.n	90009958 <I2C_WaitOnTXISFlagUntilTimeout+0x60>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
900099b0:	0592      	lsls	r2, r2, #22
900099b2:	d4d8      	bmi.n	90009966 <I2C_WaitOnTXISFlagUntilTimeout+0x6e>
  if (status != HAL_OK)
900099b4:	2900      	cmp	r1, #0
900099b6:	d1db      	bne.n	90009970 <I2C_WaitOnTXISFlagUntilTimeout+0x78>
    if (Timeout != HAL_MAX_DELAY)
900099b8:	1c72      	adds	r2, r6, #1
900099ba:	d0a5      	beq.n	90009908 <I2C_WaitOnTXISFlagUntilTimeout+0x10>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
900099bc:	f7ff fb04 	bl	90008fc8 <HAL_GetTick>
900099c0:	1bc0      	subs	r0, r0, r7
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET))
900099c2:	682b      	ldr	r3, [r5, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
900099c4:	42b0      	cmp	r0, r6
900099c6:	d801      	bhi.n	900099cc <I2C_WaitOnTXISFlagUntilTimeout+0xd4>
900099c8:	2e00      	cmp	r6, #0
900099ca:	d19d      	bne.n	90009908 <I2C_WaitOnTXISFlagUntilTimeout+0x10>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET))
900099cc:	699a      	ldr	r2, [r3, #24]
900099ce:	f012 0202 	ands.w	r2, r2, #2
900099d2:	d199      	bne.n	90009908 <I2C_WaitOnTXISFlagUntilTimeout+0x10>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
900099d4:	6c6b      	ldr	r3, [r5, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
900099d6:	2120      	movs	r1, #32
          __HAL_UNLOCK(hi2c);
900099d8:	2001      	movs	r0, #1
900099da:	f885 2040 	strb.w	r2, [r5, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
900099de:	430b      	orrs	r3, r1
900099e0:	646b      	str	r3, [r5, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
900099e2:	f885 1041 	strb.w	r1, [r5, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
900099e6:	f885 2042 	strb.w	r2, [r5, #66]	; 0x42
          return HAL_ERROR;
900099ea:	e7dd      	b.n	900099a8 <I2C_WaitOnTXISFlagUntilTimeout+0xb0>
  HAL_StatusTypeDef status = HAL_OK;
900099ec:	4621      	mov	r1, r4
900099ee:	e7a9      	b.n	90009944 <I2C_WaitOnTXISFlagUntilTimeout+0x4c>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
900099f0:	0692      	lsls	r2, r2, #26
900099f2:	d42f      	bmi.n	90009a54 <I2C_WaitOnTXISFlagUntilTimeout+0x15c>
900099f4:	f1ba 0f00 	cmp.w	sl, #0
900099f8:	d1a1      	bne.n	9000993e <I2C_WaitOnTXISFlagUntilTimeout+0x46>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
900099fa:	f7ff fae5 	bl	90008fc8 <HAL_GetTick>
900099fe:	1b00      	subs	r0, r0, r4
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90009a00:	682b      	ldr	r3, [r5, #0]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90009a02:	4286      	cmp	r6, r0
90009a04:	d301      	bcc.n	90009a0a <I2C_WaitOnTXISFlagUntilTimeout+0x112>
90009a06:	2e00      	cmp	r6, #0
90009a08:	d18b      	bne.n	90009922 <I2C_WaitOnTXISFlagUntilTimeout+0x2a>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90009a0a:	6858      	ldr	r0, [r3, #4]
          tmp2 = hi2c->Mode;
90009a0c:	f895 2042 	ldrb.w	r2, [r5, #66]	; 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90009a10:	6999      	ldr	r1, [r3, #24]
          tmp2 = hi2c->Mode;
90009a12:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90009a14:	0409      	lsls	r1, r1, #16
90009a16:	d50b      	bpl.n	90009a30 <I2C_WaitOnTXISFlagUntilTimeout+0x138>
              (tmp1 != I2C_CR2_STOP) && \
90009a18:	0441      	lsls	r1, r0, #17
90009a1a:	d409      	bmi.n	90009a30 <I2C_WaitOnTXISFlagUntilTimeout+0x138>
90009a1c:	2a20      	cmp	r2, #32
90009a1e:	d007      	beq.n	90009a30 <I2C_WaitOnTXISFlagUntilTimeout+0x138>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
90009a20:	685a      	ldr	r2, [r3, #4]
90009a22:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
90009a26:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
90009a28:	f7ff face 	bl	90008fc8 <HAL_GetTick>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90009a2c:	682b      	ldr	r3, [r5, #0]
            tickstart = HAL_GetTick();
90009a2e:	4604      	mov	r4, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90009a30:	699a      	ldr	r2, [r3, #24]
90009a32:	0690      	lsls	r0, r2, #26
90009a34:	f53f af75 	bmi.w	90009922 <I2C_WaitOnTXISFlagUntilTimeout+0x2a>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90009a38:	f7ff fac6 	bl	90008fc8 <HAL_GetTick>
90009a3c:	1b00      	subs	r0, r0, r4
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90009a3e:	682b      	ldr	r3, [r5, #0]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90009a40:	2819      	cmp	r0, #25
90009a42:	d9f5      	bls.n	90009a30 <I2C_WaitOnTXISFlagUntilTimeout+0x138>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
90009a44:	f04f 0920 	mov.w	r9, #32
              status = HAL_ERROR;
90009a48:	f04f 0a01 	mov.w	sl, #1
90009a4c:	e769      	b.n	90009922 <I2C_WaitOnTXISFlagUntilTimeout+0x2a>
  return HAL_OK;
90009a4e:	2000      	movs	r0, #0
}
90009a50:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    if (status == HAL_OK)
90009a54:	f1ba 0f00 	cmp.w	sl, #0
90009a58:	f43f af6f 	beq.w	9000993a <I2C_WaitOnTXISFlagUntilTimeout+0x42>
90009a5c:	e76f      	b.n	9000993e <I2C_WaitOnTXISFlagUntilTimeout+0x46>
90009a5e:	bf00      	nop
90009a60:	fe00e800 	.word	0xfe00e800

90009a64 <I2C_WaitOnSTOPFlagUntilTimeout>:
{
90009a64:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90009a68:	4690      	mov	r8, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90009a6a:	6802      	ldr	r2, [r0, #0]
{
90009a6c:	460f      	mov	r7, r1
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90009a6e:	6991      	ldr	r1, [r2, #24]
90009a70:	068c      	lsls	r4, r1, #26
90009a72:	d469      	bmi.n	90009b48 <I2C_WaitOnSTOPFlagUntilTimeout+0xe4>
90009a74:	4606      	mov	r6, r0
90009a76:	4613      	mov	r3, r2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90009a78:	f04f 0910 	mov.w	r9, #16
  uint32_t itflag   = hi2c->Instance->ISR;
90009a7c:	6994      	ldr	r4, [r2, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
90009a7e:	f014 0410 	ands.w	r4, r4, #16
90009a82:	d064      	beq.n	90009b4e <I2C_WaitOnSTOPFlagUntilTimeout+0xea>
  uint32_t error_code = 0;
90009a84:	2500      	movs	r5, #0
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90009a86:	4613      	mov	r3, r2
  uint32_t tickstart = Tickstart;
90009a88:	4644      	mov	r4, r8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90009a8a:	f8c2 901c 	str.w	r9, [r2, #28]
  HAL_StatusTypeDef status = HAL_OK;
90009a8e:	46aa      	mov	sl, r5
90009a90:	1c79      	adds	r1, r7, #1
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90009a92:	699a      	ldr	r2, [r3, #24]
90009a94:	d15d      	bne.n	90009b52 <I2C_WaitOnSTOPFlagUntilTimeout+0xee>
90009a96:	0690      	lsls	r0, r2, #26
90009a98:	f100 8083 	bmi.w	90009ba2 <I2C_WaitOnSTOPFlagUntilTimeout+0x13e>
90009a9c:	f1ba 0f00 	cmp.w	sl, #0
90009aa0:	d104      	bne.n	90009aac <I2C_WaitOnSTOPFlagUntilTimeout+0x48>
90009aa2:	699c      	ldr	r4, [r3, #24]
90009aa4:	06a1      	lsls	r1, r4, #26
90009aa6:	d5fc      	bpl.n	90009aa2 <I2C_WaitOnSTOPFlagUntilTimeout+0x3e>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90009aa8:	2220      	movs	r2, #32
90009aaa:	61da      	str	r2, [r3, #28]
    error_code |= HAL_I2C_ERROR_AF;
90009aac:	f045 0404 	orr.w	r4, r5, #4
    status = HAL_ERROR;
90009ab0:	2101      	movs	r1, #1
  itflag = hi2c->Instance->ISR;
90009ab2:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
90009ab4:	05d0      	lsls	r0, r2, #23
90009ab6:	d530      	bpl.n	90009b1a <I2C_WaitOnSTOPFlagUntilTimeout+0xb6>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90009ab8:	f44f 7180 	mov.w	r1, #256	; 0x100
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90009abc:	0555      	lsls	r5, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
90009abe:	f044 0401 	orr.w	r4, r4, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90009ac2:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90009ac4:	d504      	bpl.n	90009ad0 <I2C_WaitOnSTOPFlagUntilTimeout+0x6c>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90009ac6:	f44f 6180 	mov.w	r1, #1024	; 0x400
    error_code |= HAL_I2C_ERROR_OVR;
90009aca:	f044 0408 	orr.w	r4, r4, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90009ace:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90009ad0:	0591      	lsls	r1, r2, #22
90009ad2:	d504      	bpl.n	90009ade <I2C_WaitOnSTOPFlagUntilTimeout+0x7a>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90009ad4:	f44f 7200 	mov.w	r2, #512	; 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
90009ad8:	f044 0402 	orr.w	r4, r4, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90009adc:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
90009ade:	699a      	ldr	r2, [r3, #24]
90009ae0:	0795      	lsls	r5, r2, #30
90009ae2:	d501      	bpl.n	90009ae8 <I2C_WaitOnSTOPFlagUntilTimeout+0x84>
    hi2c->Instance->TXDR = 0x00U;
90009ae4:	2200      	movs	r2, #0
90009ae6:	629a      	str	r2, [r3, #40]	; 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
90009ae8:	699a      	ldr	r2, [r3, #24]
90009aea:	07d0      	lsls	r0, r2, #31
90009aec:	d403      	bmi.n	90009af6 <I2C_WaitOnSTOPFlagUntilTimeout+0x92>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
90009aee:	699a      	ldr	r2, [r3, #24]
90009af0:	f042 0201 	orr.w	r2, r2, #1
90009af4:	619a      	str	r2, [r3, #24]
    I2C_RESET_CR2(hi2c);
90009af6:	685a      	ldr	r2, [r3, #4]
    hi2c->Mode = HAL_I2C_MODE_NONE;
90009af8:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
90009afa:	4837      	ldr	r0, [pc, #220]	; (90009bd8 <I2C_WaitOnSTOPFlagUntilTimeout+0x174>)
    hi2c->State = HAL_I2C_STATE_READY;
90009afc:	2520      	movs	r5, #32
    I2C_RESET_CR2(hi2c);
90009afe:	4002      	ands	r2, r0
      return HAL_ERROR;
90009b00:	2001      	movs	r0, #1
    I2C_RESET_CR2(hi2c);
90009b02:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
90009b04:	6c73      	ldr	r3, [r6, #68]	; 0x44
    __HAL_UNLOCK(hi2c);
90009b06:	f886 1040 	strb.w	r1, [r6, #64]	; 0x40
    hi2c->ErrorCode |= error_code;
90009b0a:	4323      	orrs	r3, r4
90009b0c:	6473      	str	r3, [r6, #68]	; 0x44
    hi2c->State = HAL_I2C_STATE_READY;
90009b0e:	f886 5041 	strb.w	r5, [r6, #65]	; 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
90009b12:	f886 1042 	strb.w	r1, [r6, #66]	; 0x42
}
90009b16:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90009b1a:	0550      	lsls	r0, r2, #21
90009b1c:	d4d3      	bmi.n	90009ac6 <I2C_WaitOnSTOPFlagUntilTimeout+0x62>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90009b1e:	0592      	lsls	r2, r2, #22
90009b20:	d4d8      	bmi.n	90009ad4 <I2C_WaitOnSTOPFlagUntilTimeout+0x70>
  if (status != HAL_OK)
90009b22:	2900      	cmp	r1, #0
90009b24:	d1db      	bne.n	90009ade <I2C_WaitOnSTOPFlagUntilTimeout+0x7a>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90009b26:	f7ff fa4f 	bl	90008fc8 <HAL_GetTick>
90009b2a:	eba0 0008 	sub.w	r0, r0, r8
90009b2e:	42b8      	cmp	r0, r7
90009b30:	d801      	bhi.n	90009b36 <I2C_WaitOnSTOPFlagUntilTimeout+0xd2>
90009b32:	2f00      	cmp	r7, #0
90009b34:	d132      	bne.n	90009b9c <I2C_WaitOnSTOPFlagUntilTimeout+0x138>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET))
90009b36:	6832      	ldr	r2, [r6, #0]
90009b38:	6991      	ldr	r1, [r2, #24]
90009b3a:	4613      	mov	r3, r2
90009b3c:	f011 0120 	ands.w	r1, r1, #32
90009b40:	d034      	beq.n	90009bac <I2C_WaitOnSTOPFlagUntilTimeout+0x148>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90009b42:	6991      	ldr	r1, [r2, #24]
90009b44:	0689      	lsls	r1, r1, #26
90009b46:	d599      	bpl.n	90009a7c <I2C_WaitOnSTOPFlagUntilTimeout+0x18>
  return HAL_OK;
90009b48:	2000      	movs	r0, #0
}
90009b4a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  HAL_StatusTypeDef status = HAL_OK;
90009b4e:	4621      	mov	r1, r4
90009b50:	e7af      	b.n	90009ab2 <I2C_WaitOnSTOPFlagUntilTimeout+0x4e>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90009b52:	0692      	lsls	r2, r2, #26
90009b54:	d425      	bmi.n	90009ba2 <I2C_WaitOnSTOPFlagUntilTimeout+0x13e>
90009b56:	f1ba 0f00 	cmp.w	sl, #0
90009b5a:	d1a7      	bne.n	90009aac <I2C_WaitOnSTOPFlagUntilTimeout+0x48>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90009b5c:	f7ff fa34 	bl	90008fc8 <HAL_GetTick>
90009b60:	1b00      	subs	r0, r0, r4
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90009b62:	6833      	ldr	r3, [r6, #0]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90009b64:	4287      	cmp	r7, r0
90009b66:	d301      	bcc.n	90009b6c <I2C_WaitOnSTOPFlagUntilTimeout+0x108>
90009b68:	2f00      	cmp	r7, #0
90009b6a:	d191      	bne.n	90009a90 <I2C_WaitOnSTOPFlagUntilTimeout+0x2c>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90009b6c:	6858      	ldr	r0, [r3, #4]
          tmp2 = hi2c->Mode;
90009b6e:	f896 2042 	ldrb.w	r2, [r6, #66]	; 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90009b72:	6999      	ldr	r1, [r3, #24]
          tmp2 = hi2c->Mode;
90009b74:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90009b76:	0409      	lsls	r1, r1, #16
90009b78:	d503      	bpl.n	90009b82 <I2C_WaitOnSTOPFlagUntilTimeout+0x11e>
              (tmp1 != I2C_CR2_STOP) && \
90009b7a:	0441      	lsls	r1, r0, #17
90009b7c:	d401      	bmi.n	90009b82 <I2C_WaitOnSTOPFlagUntilTimeout+0x11e>
90009b7e:	2a20      	cmp	r2, #32
90009b80:	d121      	bne.n	90009bc6 <I2C_WaitOnSTOPFlagUntilTimeout+0x162>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90009b82:	699a      	ldr	r2, [r3, #24]
90009b84:	0690      	lsls	r0, r2, #26
90009b86:	d483      	bmi.n	90009a90 <I2C_WaitOnSTOPFlagUntilTimeout+0x2c>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90009b88:	f7ff fa1e 	bl	90008fc8 <HAL_GetTick>
90009b8c:	1b00      	subs	r0, r0, r4
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90009b8e:	6833      	ldr	r3, [r6, #0]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90009b90:	2819      	cmp	r0, #25
90009b92:	d9f6      	bls.n	90009b82 <I2C_WaitOnSTOPFlagUntilTimeout+0x11e>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
90009b94:	2520      	movs	r5, #32
              status = HAL_ERROR;
90009b96:	f04f 0a01 	mov.w	sl, #1
90009b9a:	e779      	b.n	90009a90 <I2C_WaitOnSTOPFlagUntilTimeout+0x2c>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET))
90009b9c:	6833      	ldr	r3, [r6, #0]
90009b9e:	461a      	mov	r2, r3
90009ba0:	e7cf      	b.n	90009b42 <I2C_WaitOnSTOPFlagUntilTimeout+0xde>
    if (status == HAL_OK)
90009ba2:	f1ba 0f00 	cmp.w	sl, #0
90009ba6:	f43f af7f 	beq.w	90009aa8 <I2C_WaitOnSTOPFlagUntilTimeout+0x44>
90009baa:	e77f      	b.n	90009aac <I2C_WaitOnSTOPFlagUntilTimeout+0x48>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90009bac:	6c73      	ldr	r3, [r6, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90009bae:	2220      	movs	r2, #32
          __HAL_UNLOCK(hi2c);
90009bb0:	2001      	movs	r0, #1
90009bb2:	f886 1040 	strb.w	r1, [r6, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90009bb6:	4313      	orrs	r3, r2
90009bb8:	6473      	str	r3, [r6, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90009bba:	f886 2041 	strb.w	r2, [r6, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
90009bbe:	f886 1042 	strb.w	r1, [r6, #66]	; 0x42
}
90009bc2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
90009bc6:	685a      	ldr	r2, [r3, #4]
90009bc8:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
90009bcc:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
90009bce:	f7ff f9fb 	bl	90008fc8 <HAL_GetTick>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90009bd2:	6833      	ldr	r3, [r6, #0]
            tickstart = HAL_GetTick();
90009bd4:	4604      	mov	r4, r0
90009bd6:	e7d4      	b.n	90009b82 <I2C_WaitOnSTOPFlagUntilTimeout+0x11e>
90009bd8:	fe00e800 	.word	0xfe00e800

90009bdc <HAL_I2C_MspInit>:
}
90009bdc:	4770      	bx	lr
90009bde:	bf00      	nop

90009be0 <HAL_I2C_Init>:
  if (hi2c == NULL)
90009be0:	2800      	cmp	r0, #0
90009be2:	d04e      	beq.n	90009c82 <HAL_I2C_Init+0xa2>
{
90009be4:	b510      	push	{r4, lr}
  if (hi2c->State == HAL_I2C_STATE_RESET)
90009be6:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
90009bea:	4604      	mov	r4, r0
90009bec:	f003 02ff 	and.w	r2, r3, #255	; 0xff
90009bf0:	2b00      	cmp	r3, #0
90009bf2:	d041      	beq.n	90009c78 <HAL_I2C_Init+0x98>
  __HAL_I2C_DISABLE(hi2c);
90009bf4:	6823      	ldr	r3, [r4, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
90009bf6:	2124      	movs	r1, #36	; 0x24
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
90009bf8:	6862      	ldr	r2, [r4, #4]
  hi2c->State = HAL_I2C_STATE_BUSY;
90009bfa:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
  __HAL_I2C_DISABLE(hi2c);
90009bfe:	6819      	ldr	r1, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
90009c00:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
90009c04:	68e0      	ldr	r0, [r4, #12]
  __HAL_I2C_DISABLE(hi2c);
90009c06:	f021 0101 	bic.w	r1, r1, #1
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
90009c0a:	2801      	cmp	r0, #1
  __HAL_I2C_DISABLE(hi2c);
90009c0c:	6019      	str	r1, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
90009c0e:	611a      	str	r2, [r3, #16]
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
90009c10:	689a      	ldr	r2, [r3, #8]
90009c12:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
90009c16:	609a      	str	r2, [r3, #8]
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
90009c18:	68a2      	ldr	r2, [r4, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
90009c1a:	d029      	beq.n	90009c70 <HAL_I2C_Init+0x90>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
90009c1c:	f442 4204 	orr.w	r2, r2, #33792	; 0x8400
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
90009c20:	2802      	cmp	r0, #2
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
90009c22:	609a      	str	r2, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
90009c24:	d102      	bne.n	90009c2c <HAL_I2C_Init+0x4c>
    hi2c->Instance->CR2 = (I2C_CR2_ADD10);
90009c26:	f44f 6200 	mov.w	r2, #2048	; 0x800
90009c2a:	605a      	str	r2, [r3, #4]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
90009c2c:	6858      	ldr	r0, [r3, #4]
  hi2c->State = HAL_I2C_STATE_READY;
90009c2e:	f04f 0c20 	mov.w	ip, #32
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
90009c32:	4915      	ldr	r1, [pc, #84]	; (90009c88 <HAL_I2C_Init+0xa8>)
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
90009c34:	6922      	ldr	r2, [r4, #16]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
90009c36:	4301      	orrs	r1, r0
90009c38:	6059      	str	r1, [r3, #4]
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
90009c3a:	68d9      	ldr	r1, [r3, #12]
90009c3c:	f421 4100 	bic.w	r1, r1, #32768	; 0x8000
90009c40:	60d9      	str	r1, [r3, #12]
                          (hi2c->Init.OwnAddress2Masks << 8));
90009c42:	e9d4 0105 	ldrd	r0, r1, [r4, #20]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
90009c46:	4302      	orrs	r2, r0
90009c48:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
90009c4c:	e9d4 1007 	ldrd	r1, r0, [r4, #28]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
90009c50:	60da      	str	r2, [r3, #12]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90009c52:	2200      	movs	r2, #0
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
90009c54:	4301      	orrs	r1, r0
  return HAL_OK;
90009c56:	4610      	mov	r0, r2
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
90009c58:	6019      	str	r1, [r3, #0]
  __HAL_I2C_ENABLE(hi2c);
90009c5a:	6819      	ldr	r1, [r3, #0]
90009c5c:	f041 0101 	orr.w	r1, r1, #1
90009c60:	6019      	str	r1, [r3, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90009c62:	6462      	str	r2, [r4, #68]	; 0x44
  hi2c->State = HAL_I2C_STATE_READY;
90009c64:	f884 c041 	strb.w	ip, [r4, #65]	; 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
90009c68:	6322      	str	r2, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
90009c6a:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
}
90009c6e:	bd10      	pop	{r4, pc}
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
90009c70:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
90009c74:	609a      	str	r2, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
90009c76:	e7d9      	b.n	90009c2c <HAL_I2C_Init+0x4c>
    hi2c->Lock = HAL_UNLOCKED;
90009c78:	f880 2040 	strb.w	r2, [r0, #64]	; 0x40
    HAL_I2C_MspInit(hi2c);
90009c7c:	f7ff ffae 	bl	90009bdc <HAL_I2C_MspInit>
90009c80:	e7b8      	b.n	90009bf4 <HAL_I2C_Init+0x14>
    return HAL_ERROR;
90009c82:	2001      	movs	r0, #1
}
90009c84:	4770      	bx	lr
90009c86:	bf00      	nop
90009c88:	02008000 	.word	0x02008000

90009c8c <HAL_I2C_MspDeInit>:
90009c8c:	4770      	bx	lr
90009c8e:	bf00      	nop

90009c90 <HAL_I2C_DeInit>:
  if (hi2c == NULL)
90009c90:	b1b0      	cbz	r0, 90009cc0 <HAL_I2C_DeInit+0x30>
  __HAL_I2C_DISABLE(hi2c);
90009c92:	6802      	ldr	r2, [r0, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
90009c94:	2324      	movs	r3, #36	; 0x24
{
90009c96:	b510      	push	{r4, lr}
  hi2c->State = HAL_I2C_STATE_BUSY;
90009c98:	f880 3041 	strb.w	r3, [r0, #65]	; 0x41
90009c9c:	4604      	mov	r4, r0
  __HAL_I2C_DISABLE(hi2c);
90009c9e:	6813      	ldr	r3, [r2, #0]
90009ca0:	f023 0301 	bic.w	r3, r3, #1
90009ca4:	6013      	str	r3, [r2, #0]
  HAL_I2C_MspDeInit(hi2c);
90009ca6:	f7ff fff1 	bl	90009c8c <HAL_I2C_MspDeInit>
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90009caa:	2300      	movs	r3, #0
90009cac:	6463      	str	r3, [r4, #68]	; 0x44
  return HAL_OK;
90009cae:	4618      	mov	r0, r3
  hi2c->State = HAL_I2C_STATE_RESET;
90009cb0:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hi2c);
90009cb4:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
  hi2c->PreviousState = I2C_STATE_NONE;
90009cb8:	6323      	str	r3, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
90009cba:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
}
90009cbe:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
90009cc0:	2001      	movs	r0, #1
}
90009cc2:	4770      	bx	lr

90009cc4 <HAL_I2C_Mem_Write>:
{
90009cc4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90009cc8:	4698      	mov	r8, r3
  if (hi2c->State == HAL_I2C_STATE_READY)
90009cca:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
{
90009cce:	f8bd a024 	ldrh.w	sl, [sp, #36]	; 0x24
  if (hi2c->State == HAL_I2C_STATE_READY)
90009cd2:	2b20      	cmp	r3, #32
{
90009cd4:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  if (hi2c->State == HAL_I2C_STATE_READY)
90009cd6:	d132      	bne.n	90009d3e <HAL_I2C_Mem_Write+0x7a>
    if ((pData == NULL) || (Size == 0U))
90009cd8:	9b08      	ldr	r3, [sp, #32]
90009cda:	4604      	mov	r4, r0
90009cdc:	b34b      	cbz	r3, 90009d32 <HAL_I2C_Mem_Write+0x6e>
90009cde:	f1ba 0f00 	cmp.w	sl, #0
90009ce2:	d026      	beq.n	90009d32 <HAL_I2C_Mem_Write+0x6e>
    __HAL_LOCK(hi2c);
90009ce4:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
90009ce8:	2b01      	cmp	r3, #1
90009cea:	d028      	beq.n	90009d3e <HAL_I2C_Mem_Write+0x7a>
90009cec:	2301      	movs	r3, #1
90009cee:	460e      	mov	r6, r1
90009cf0:	4691      	mov	r9, r2
90009cf2:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
    tickstart = HAL_GetTick();
90009cf6:	f7ff f967 	bl	90008fc8 <HAL_GetTick>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90009cfa:	6823      	ldr	r3, [r4, #0]
    tickstart = HAL_GetTick();
90009cfc:	4605      	mov	r5, r0
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90009cfe:	699a      	ldr	r2, [r3, #24]
90009d00:	0411      	lsls	r1, r2, #16
90009d02:	d51f      	bpl.n	90009d44 <HAL_I2C_Mem_Write+0x80>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90009d04:	f7ff f960 	bl	90008fc8 <HAL_GetTick>
90009d08:	1b40      	subs	r0, r0, r5
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90009d0a:	6823      	ldr	r3, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90009d0c:	2819      	cmp	r0, #25
90009d0e:	d9f6      	bls.n	90009cfe <HAL_I2C_Mem_Write+0x3a>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90009d10:	699a      	ldr	r2, [r3, #24]
90009d12:	0412      	lsls	r2, r2, #16
90009d14:	d5f3      	bpl.n	90009cfe <HAL_I2C_Mem_Write+0x3a>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90009d16:	6c63      	ldr	r3, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90009d18:	2120      	movs	r1, #32
          hi2c->Mode = HAL_I2C_MODE_NONE;
90009d1a:	2200      	movs	r2, #0
      return HAL_ERROR;
90009d1c:	2001      	movs	r0, #1
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90009d1e:	430b      	orrs	r3, r1
          __HAL_UNLOCK(hi2c);
90009d20:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90009d24:	6463      	str	r3, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90009d26:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
90009d2a:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
}
90009d2e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
90009d32:	f44f 7300 	mov.w	r3, #512	; 0x200
      return  HAL_ERROR;
90009d36:	2001      	movs	r0, #1
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
90009d38:	6463      	str	r3, [r4, #68]	; 0x44
}
90009d3a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    return HAL_BUSY;
90009d3e:	2002      	movs	r0, #2
}
90009d40:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    hi2c->pBuffPtr  = pData;
90009d44:	9a08      	ldr	r2, [sp, #32]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
90009d46:	2121      	movs	r1, #33	; 0x21
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_TRANSFER_MODE(Mode));
  assert_param(IS_TRANSFER_REQUEST(Request));

  /* Declaration of tmp to prevent undefined behavior of volatile usage */
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
90009d48:	f3c6 0609 	ubfx	r6, r6, #0, #10
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90009d4c:	4620      	mov	r0, r4
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
90009d4e:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
90009d52:	2140      	movs	r1, #64	; 0x40
    hi2c->pBuffPtr  = pData;
90009d54:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90009d56:	2200      	movs	r2, #0
    hi2c->Mode      = HAL_I2C_MODE_MEM;
90009d58:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
    hi2c->XferISR   = NULL;
90009d5c:	6362      	str	r2, [r4, #52]	; 0x34
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90009d5e:	6462      	str	r2, [r4, #68]	; 0x44
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
                             (uint32_t)Mode | (uint32_t)Request) & (~0x80000000U));

  /* update CR2 register */
  MODIFY_REG(hi2c->Instance->CR2, \
90009d60:	496d      	ldr	r1, [pc, #436]	; (90009f18 <HAL_I2C_Mem_Write+0x254>)
    hi2c->XferCount = Size;
90009d62:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90009d66:	685a      	ldr	r2, [r3, #4]
90009d68:	400a      	ands	r2, r1
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
90009d6a:	fa5f f188 	uxtb.w	r1, r8
  MODIFY_REG(hi2c->Instance->CR2, \
90009d6e:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
90009d72:	496a      	ldr	r1, [pc, #424]	; (90009f1c <HAL_I2C_Mem_Write+0x258>)
90009d74:	4332      	orrs	r2, r6
90009d76:	4311      	orrs	r1, r2
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90009d78:	462a      	mov	r2, r5
  MODIFY_REG(hi2c->Instance->CR2, \
90009d7a:	6059      	str	r1, [r3, #4]
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90009d7c:	4639      	mov	r1, r7
90009d7e:	f7ff fdbb 	bl	900098f8 <I2C_WaitOnTXISFlagUntilTimeout>
90009d82:	2800      	cmp	r0, #0
90009d84:	d175      	bne.n	90009e72 <HAL_I2C_Mem_Write+0x1ae>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
90009d86:	f1b8 0f01 	cmp.w	r8, #1
90009d8a:	d00a      	beq.n	90009da2 <HAL_I2C_Mem_Write+0xde>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
90009d8c:	ea4f 2219 	mov.w	r2, r9, lsr #8
90009d90:	6823      	ldr	r3, [r4, #0]
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90009d92:	4639      	mov	r1, r7
90009d94:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
90009d96:	629a      	str	r2, [r3, #40]	; 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90009d98:	462a      	mov	r2, r5
90009d9a:	f7ff fdad 	bl	900098f8 <I2C_WaitOnTXISFlagUntilTimeout>
90009d9e:	2800      	cmp	r0, #0
90009da0:	d167      	bne.n	90009e72 <HAL_I2C_Mem_Write+0x1ae>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
90009da2:	fa5f f389 	uxtb.w	r3, r9
90009da6:	6822      	ldr	r2, [r4, #0]
90009da8:	6293      	str	r3, [r2, #40]	; 0x28
90009daa:	1c78      	adds	r0, r7, #1
90009dac:	d14a      	bne.n	90009e44 <HAL_I2C_Mem_Write+0x180>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90009dae:	6993      	ldr	r3, [r2, #24]
90009db0:	0619      	lsls	r1, r3, #24
90009db2:	d5fc      	bpl.n	90009dae <HAL_I2C_Mem_Write+0xea>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
90009db4:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
90009db6:	b29b      	uxth	r3, r3
90009db8:	2bff      	cmp	r3, #255	; 0xff
90009dba:	f240 808a 	bls.w	90009ed2 <HAL_I2C_Mem_Write+0x20e>
  MODIFY_REG(hi2c->Instance->CR2, \
90009dbe:	6853      	ldr	r3, [r2, #4]
90009dc0:	4957      	ldr	r1, [pc, #348]	; (90009f20 <HAL_I2C_Mem_Write+0x25c>)
90009dc2:	400b      	ands	r3, r1
90009dc4:	4957      	ldr	r1, [pc, #348]	; (90009f24 <HAL_I2C_Mem_Write+0x260>)
90009dc6:	4333      	orrs	r3, r6
90009dc8:	4319      	orrs	r1, r3
      hi2c->XferSize = MAX_NBYTE_SIZE;
90009dca:	23ff      	movs	r3, #255	; 0xff
90009dcc:	8523      	strh	r3, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
90009dce:	6051      	str	r1, [r2, #4]
90009dd0:	f8df 814c 	ldr.w	r8, [pc, #332]	; 90009f20 <HAL_I2C_Mem_Write+0x25c>
          hi2c->XferSize = MAX_NBYTE_SIZE;
90009dd4:	f04f 0aff 	mov.w	sl, #255	; 0xff
  MODIFY_REG(hi2c->Instance->CR2, \
90009dd8:	f8df 9148 	ldr.w	r9, [pc, #328]	; 90009f24 <HAL_I2C_Mem_Write+0x260>
90009ddc:	e004      	b.n	90009de8 <HAL_I2C_Mem_Write+0x124>
    } while (hi2c->XferCount > 0U);
90009dde:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
90009de0:	b29b      	uxth	r3, r3
90009de2:	2b00      	cmp	r3, #0
90009de4:	f000 8083 	beq.w	90009eee <HAL_I2C_Mem_Write+0x22a>
      if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
90009de8:	462a      	mov	r2, r5
90009dea:	4639      	mov	r1, r7
90009dec:	4620      	mov	r0, r4
90009dee:	f7ff fd83 	bl	900098f8 <I2C_WaitOnTXISFlagUntilTimeout>
90009df2:	2800      	cmp	r0, #0
90009df4:	d16b      	bne.n	90009ece <HAL_I2C_Mem_Write+0x20a>
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
90009df6:	6a62      	ldr	r2, [r4, #36]	; 0x24
90009df8:	6821      	ldr	r1, [r4, #0]
90009dfa:	f812 0b01 	ldrb.w	r0, [r2], #1
      hi2c->XferSize--;
90009dfe:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
90009e00:	6288      	str	r0, [r1, #40]	; 0x28
      hi2c->pBuffPtr++;
90009e02:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferSize--;
90009e04:	3b01      	subs	r3, #1
      hi2c->XferCount--;
90009e06:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
90009e08:	b29b      	uxth	r3, r3
      hi2c->XferCount--;
90009e0a:	3a01      	subs	r2, #1
      hi2c->XferSize--;
90009e0c:	8523      	strh	r3, [r4, #40]	; 0x28
      hi2c->XferCount--;
90009e0e:	b292      	uxth	r2, r2
90009e10:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
90009e12:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
90009e14:	b292      	uxth	r2, r2
90009e16:	2a00      	cmp	r2, #0
90009e18:	d0e1      	beq.n	90009dde <HAL_I2C_Mem_Write+0x11a>
90009e1a:	2b00      	cmp	r3, #0
90009e1c:	d1df      	bne.n	90009dde <HAL_I2C_Mem_Write+0x11a>
90009e1e:	1c78      	adds	r0, r7, #1
90009e20:	d12c      	bne.n	90009e7c <HAL_I2C_Mem_Write+0x1b8>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90009e22:	698b      	ldr	r3, [r1, #24]
90009e24:	061a      	lsls	r2, r3, #24
90009e26:	d5fc      	bpl.n	90009e22 <HAL_I2C_Mem_Write+0x15e>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
90009e28:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
90009e2a:	b29b      	uxth	r3, r3
90009e2c:	2bff      	cmp	r3, #255	; 0xff
90009e2e:	d940      	bls.n	90009eb2 <HAL_I2C_Mem_Write+0x1ee>
  MODIFY_REG(hi2c->Instance->CR2, \
90009e30:	684b      	ldr	r3, [r1, #4]
          hi2c->XferSize = MAX_NBYTE_SIZE;
90009e32:	f8a4 a028 	strh.w	sl, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
90009e36:	ea03 0308 	and.w	r3, r3, r8
90009e3a:	4333      	orrs	r3, r6
90009e3c:	ea43 0309 	orr.w	r3, r3, r9
90009e40:	604b      	str	r3, [r1, #4]
             ((I2C_CR2_SADD | I2C_CR2_NBYTES | I2C_CR2_RELOAD | I2C_CR2_AUTOEND | \
               (I2C_CR2_RD_WRN & (uint32_t)(Request >> (31U - I2C_CR2_RD_WRN_Pos))) | \
               I2C_CR2_START | I2C_CR2_STOP)), tmp);
}
90009e42:	e7cc      	b.n	90009dde <HAL_I2C_Mem_Write+0x11a>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90009e44:	6993      	ldr	r3, [r2, #24]
90009e46:	061b      	lsls	r3, r3, #24
90009e48:	d4b4      	bmi.n	90009db4 <HAL_I2C_Mem_Write+0xf0>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90009e4a:	f7ff f8bd 	bl	90008fc8 <HAL_GetTick>
90009e4e:	1b40      	subs	r0, r0, r5
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90009e50:	6822      	ldr	r2, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90009e52:	4287      	cmp	r7, r0
90009e54:	d301      	bcc.n	90009e5a <HAL_I2C_Mem_Write+0x196>
90009e56:	2f00      	cmp	r7, #0
90009e58:	d1a7      	bne.n	90009daa <HAL_I2C_Mem_Write+0xe6>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90009e5a:	6993      	ldr	r3, [r2, #24]
90009e5c:	f013 0380 	ands.w	r3, r3, #128	; 0x80
90009e60:	d1a3      	bne.n	90009daa <HAL_I2C_Mem_Write+0xe6>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90009e62:	6c62      	ldr	r2, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90009e64:	2120      	movs	r1, #32
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90009e66:	430a      	orrs	r2, r1
90009e68:	6462      	str	r2, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90009e6a:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
90009e6e:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
      __HAL_UNLOCK(hi2c);
90009e72:	2300      	movs	r3, #0
      return HAL_ERROR;
90009e74:	2001      	movs	r0, #1
      __HAL_UNLOCK(hi2c);
90009e76:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
      return HAL_ERROR;
90009e7a:	e75e      	b.n	90009d3a <HAL_I2C_Mem_Write+0x76>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90009e7c:	698b      	ldr	r3, [r1, #24]
90009e7e:	061b      	lsls	r3, r3, #24
90009e80:	d4d2      	bmi.n	90009e28 <HAL_I2C_Mem_Write+0x164>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90009e82:	f7ff f8a1 	bl	90008fc8 <HAL_GetTick>
90009e86:	1b40      	subs	r0, r0, r5
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90009e88:	6821      	ldr	r1, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90009e8a:	4287      	cmp	r7, r0
90009e8c:	d301      	bcc.n	90009e92 <HAL_I2C_Mem_Write+0x1ce>
90009e8e:	2f00      	cmp	r7, #0
90009e90:	d1c5      	bne.n	90009e1e <HAL_I2C_Mem_Write+0x15a>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90009e92:	698b      	ldr	r3, [r1, #24]
90009e94:	f013 0380 	ands.w	r3, r3, #128	; 0x80
90009e98:	d1c1      	bne.n	90009e1e <HAL_I2C_Mem_Write+0x15a>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90009e9a:	6c62      	ldr	r2, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90009e9c:	2120      	movs	r1, #32
          return HAL_ERROR;
90009e9e:	2001      	movs	r0, #1
          __HAL_UNLOCK(hi2c);
90009ea0:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90009ea4:	430a      	orrs	r2, r1
90009ea6:	6462      	str	r2, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90009ea8:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
90009eac:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
          return HAL_ERROR;
90009eb0:	e743      	b.n	90009d3a <HAL_I2C_Mem_Write+0x76>
          hi2c->XferSize = hi2c->XferCount;
90009eb2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
90009eb4:	b29b      	uxth	r3, r3
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
90009eb6:	b2da      	uxtb	r2, r3
          hi2c->XferSize = hi2c->XferCount;
90009eb8:	8523      	strh	r3, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
90009eba:	684b      	ldr	r3, [r1, #4]
90009ebc:	ea03 0308 	and.w	r3, r3, r8
90009ec0:	4333      	orrs	r3, r6
90009ec2:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
90009ec6:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
90009eca:	604b      	str	r3, [r1, #4]
}
90009ecc:	e787      	b.n	90009dde <HAL_I2C_Mem_Write+0x11a>
        return HAL_ERROR;
90009ece:	2001      	movs	r0, #1
90009ed0:	e733      	b.n	90009d3a <HAL_I2C_Mem_Write+0x76>
      hi2c->XferSize = hi2c->XferCount;
90009ed2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90009ed4:	4812      	ldr	r0, [pc, #72]	; (90009f20 <HAL_I2C_Mem_Write+0x25c>)
      hi2c->XferSize = hi2c->XferCount;
90009ed6:	b29b      	uxth	r3, r3
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
90009ed8:	b2d9      	uxtb	r1, r3
      hi2c->XferSize = hi2c->XferCount;
90009eda:	8523      	strh	r3, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
90009edc:	6853      	ldr	r3, [r2, #4]
90009ede:	4003      	ands	r3, r0
90009ee0:	4333      	orrs	r3, r6
90009ee2:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
90009ee6:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
90009eea:	6053      	str	r3, [r2, #4]
}
90009eec:	e770      	b.n	90009dd0 <HAL_I2C_Mem_Write+0x10c>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
90009eee:	462a      	mov	r2, r5
90009ef0:	4639      	mov	r1, r7
90009ef2:	4620      	mov	r0, r4
90009ef4:	f7ff fdb6 	bl	90009a64 <I2C_WaitOnSTOPFlagUntilTimeout>
90009ef8:	2800      	cmp	r0, #0
90009efa:	d1e8      	bne.n	90009ece <HAL_I2C_Mem_Write+0x20a>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90009efc:	6823      	ldr	r3, [r4, #0]
90009efe:	2120      	movs	r1, #32
    I2C_RESET_CR2(hi2c);
90009f00:	4d09      	ldr	r5, [pc, #36]	; (90009f28 <HAL_I2C_Mem_Write+0x264>)
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90009f02:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
90009f04:	685a      	ldr	r2, [r3, #4]
90009f06:	402a      	ands	r2, r5
90009f08:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
90009f0a:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
90009f0e:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
90009f12:	f884 0042 	strb.w	r0, [r4, #66]	; 0x42
    return HAL_OK;
90009f16:	e710      	b.n	90009d3a <HAL_I2C_Mem_Write+0x76>
90009f18:	fc009800 	.word	0xfc009800
90009f1c:	01002000 	.word	0x01002000
90009f20:	fc009c00 	.word	0xfc009c00
90009f24:	01ff0000 	.word	0x01ff0000
90009f28:	fe00e800 	.word	0xfe00e800

90009f2c <HAL_I2C_Mem_Read>:
{
90009f2c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
90009f30:	461c      	mov	r4, r3
  if (hi2c->State == HAL_I2C_STATE_READY)
90009f32:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
{
90009f36:	f8bd 902c 	ldrh.w	r9, [sp, #44]	; 0x2c
  if (hi2c->State == HAL_I2C_STATE_READY)
90009f3a:	2b20      	cmp	r3, #32
{
90009f3c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
  if (hi2c->State == HAL_I2C_STATE_READY)
90009f3e:	d137      	bne.n	90009fb0 <HAL_I2C_Mem_Read+0x84>
    if ((pData == NULL) || (Size == 0U))
90009f40:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90009f42:	4683      	mov	fp, r0
90009f44:	b36b      	cbz	r3, 90009fa2 <HAL_I2C_Mem_Read+0x76>
90009f46:	f1b9 0f00 	cmp.w	r9, #0
90009f4a:	d02a      	beq.n	90009fa2 <HAL_I2C_Mem_Read+0x76>
    __HAL_LOCK(hi2c);
90009f4c:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
90009f50:	2b01      	cmp	r3, #1
90009f52:	d02d      	beq.n	90009fb0 <HAL_I2C_Mem_Read+0x84>
90009f54:	2301      	movs	r3, #1
90009f56:	460f      	mov	r7, r1
90009f58:	4690      	mov	r8, r2
90009f5a:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
    tickstart = HAL_GetTick();
90009f5e:	f7ff f833 	bl	90008fc8 <HAL_GetTick>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90009f62:	f8db 3000 	ldr.w	r3, [fp]
    tickstart = HAL_GetTick();
90009f66:	4606      	mov	r6, r0
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90009f68:	699a      	ldr	r2, [r3, #24]
90009f6a:	0410      	lsls	r0, r2, #16
90009f6c:	d523      	bpl.n	90009fb6 <HAL_I2C_Mem_Read+0x8a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90009f6e:	f7ff f82b 	bl	90008fc8 <HAL_GetTick>
90009f72:	1b80      	subs	r0, r0, r6
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90009f74:	f8db 3000 	ldr.w	r3, [fp]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90009f78:	2819      	cmp	r0, #25
90009f7a:	d9f5      	bls.n	90009f68 <HAL_I2C_Mem_Read+0x3c>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90009f7c:	699a      	ldr	r2, [r3, #24]
90009f7e:	0411      	lsls	r1, r2, #16
90009f80:	d5f2      	bpl.n	90009f68 <HAL_I2C_Mem_Read+0x3c>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90009f82:	f8db 3044 	ldr.w	r3, [fp, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90009f86:	2120      	movs	r1, #32
          hi2c->Mode = HAL_I2C_MODE_NONE;
90009f88:	2200      	movs	r2, #0
      return HAL_ERROR;
90009f8a:	2001      	movs	r0, #1
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90009f8c:	430b      	orrs	r3, r1
          __HAL_UNLOCK(hi2c);
90009f8e:	f88b 2040 	strb.w	r2, [fp, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90009f92:	f8cb 3044 	str.w	r3, [fp, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90009f96:	f88b 1041 	strb.w	r1, [fp, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
90009f9a:	f88b 2042 	strb.w	r2, [fp, #66]	; 0x42
}
90009f9e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
90009fa2:	f44f 7300 	mov.w	r3, #512	; 0x200
      return  HAL_ERROR;
90009fa6:	2001      	movs	r0, #1
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
90009fa8:	f8cb 3044 	str.w	r3, [fp, #68]	; 0x44
}
90009fac:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    return HAL_BUSY;
90009fb0:	2002      	movs	r0, #2
}
90009fb2:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    hi2c->pBuffPtr  = pData;
90009fb6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
90009fb8:	2122      	movs	r1, #34	; 0x22
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
90009fba:	f3c7 0709 	ubfx	r7, r7, #0, #10
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90009fbe:	4658      	mov	r0, fp
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
90009fc0:	f88b 1041 	strb.w	r1, [fp, #65]	; 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
90009fc4:	2140      	movs	r1, #64	; 0x40
    hi2c->pBuffPtr  = pData;
90009fc6:	f8cb 2024 	str.w	r2, [fp, #36]	; 0x24
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90009fca:	2200      	movs	r2, #0
    hi2c->Mode      = HAL_I2C_MODE_MEM;
90009fcc:	f88b 1042 	strb.w	r1, [fp, #66]	; 0x42
    hi2c->XferISR   = NULL;
90009fd0:	f8cb 2034 	str.w	r2, [fp, #52]	; 0x34
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90009fd4:	f8cb 2044 	str.w	r2, [fp, #68]	; 0x44
  MODIFY_REG(hi2c->Instance->CR2, \
90009fd8:	4983      	ldr	r1, [pc, #524]	; (9000a1e8 <HAL_I2C_Mem_Read+0x2bc>)
    hi2c->XferCount = Size;
90009fda:	f8ab 902a 	strh.w	r9, [fp, #42]	; 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90009fde:	685a      	ldr	r2, [r3, #4]
90009fe0:	400a      	ands	r2, r1
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
90009fe2:	b2e1      	uxtb	r1, r4
  MODIFY_REG(hi2c->Instance->CR2, \
90009fe4:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90009fe8:	4629      	mov	r1, r5
  MODIFY_REG(hi2c->Instance->CR2, \
90009fea:	433a      	orrs	r2, r7
90009fec:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
90009ff0:	605a      	str	r2, [r3, #4]
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90009ff2:	4632      	mov	r2, r6
90009ff4:	f7ff fc80 	bl	900098f8 <I2C_WaitOnTXISFlagUntilTimeout>
90009ff8:	2800      	cmp	r0, #0
90009ffa:	f040 8091 	bne.w	9000a120 <HAL_I2C_Mem_Read+0x1f4>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
90009ffe:	2c01      	cmp	r4, #1
9000a000:	d00c      	beq.n	9000a01c <HAL_I2C_Mem_Read+0xf0>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
9000a002:	ea4f 2218 	mov.w	r2, r8, lsr #8
9000a006:	f8db 3000 	ldr.w	r3, [fp]
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000a00a:	4629      	mov	r1, r5
9000a00c:	4658      	mov	r0, fp
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
9000a00e:	629a      	str	r2, [r3, #40]	; 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000a010:	4632      	mov	r2, r6
9000a012:	f7ff fc71 	bl	900098f8 <I2C_WaitOnTXISFlagUntilTimeout>
9000a016:	2800      	cmp	r0, #0
9000a018:	f040 8082 	bne.w	9000a120 <HAL_I2C_Mem_Read+0x1f4>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
9000a01c:	fa5f f388 	uxtb.w	r3, r8
9000a020:	f8db 4000 	ldr.w	r4, [fp]
9000a024:	62a3      	str	r3, [r4, #40]	; 0x28
9000a026:	1c6a      	adds	r2, r5, #1
9000a028:	d160      	bne.n	9000a0ec <HAL_I2C_Mem_Read+0x1c0>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000a02a:	69a3      	ldr	r3, [r4, #24]
9000a02c:	065b      	lsls	r3, r3, #25
9000a02e:	d5fc      	bpl.n	9000a02a <HAL_I2C_Mem_Read+0xfe>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
9000a030:	f8bb 302a 	ldrh.w	r3, [fp, #42]	; 0x2a
9000a034:	b29b      	uxth	r3, r3
9000a036:	2bff      	cmp	r3, #255	; 0xff
9000a038:	f240 80ae 	bls.w	9000a198 <HAL_I2C_Mem_Read+0x26c>
  MODIFY_REG(hi2c->Instance->CR2, \
9000a03c:	6863      	ldr	r3, [r4, #4]
9000a03e:	4a6a      	ldr	r2, [pc, #424]	; (9000a1e8 <HAL_I2C_Mem_Read+0x2bc>)
9000a040:	4013      	ands	r3, r2
9000a042:	4a6a      	ldr	r2, [pc, #424]	; (9000a1ec <HAL_I2C_Mem_Read+0x2c0>)
9000a044:	433b      	orrs	r3, r7
9000a046:	431a      	orrs	r2, r3
      hi2c->XferSize = MAX_NBYTE_SIZE;
9000a048:	23ff      	movs	r3, #255	; 0xff
9000a04a:	f8ab 3028 	strh.w	r3, [fp, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
9000a04e:	6062      	str	r2, [r4, #4]
9000a050:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 9000a1f8 <HAL_I2C_Mem_Read+0x2cc>
          hi2c->XferSize = MAX_NBYTE_SIZE;
9000a054:	f04f 0aff 	mov.w	sl, #255	; 0xff
  MODIFY_REG(hi2c->Instance->CR2, \
9000a058:	f8df 91a0 	ldr.w	r9, [pc, #416]	; 9000a1fc <HAL_I2C_Mem_Read+0x2d0>
9000a05c:	1c69      	adds	r1, r5, #1
9000a05e:	d127      	bne.n	9000a0b0 <HAL_I2C_Mem_Read+0x184>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000a060:	69a3      	ldr	r3, [r4, #24]
9000a062:	075a      	lsls	r2, r3, #29
9000a064:	d5fc      	bpl.n	9000a060 <HAL_I2C_Mem_Read+0x134>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
9000a066:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000a068:	f8db 3024 	ldr.w	r3, [fp, #36]	; 0x24
9000a06c:	701a      	strb	r2, [r3, #0]
      hi2c->XferCount--;
9000a06e:	f8bb 202a 	ldrh.w	r2, [fp, #42]	; 0x2a
      hi2c->pBuffPtr++;
9000a072:	f8db 3024 	ldr.w	r3, [fp, #36]	; 0x24
      hi2c->XferCount--;
9000a076:	3a01      	subs	r2, #1
      hi2c->pBuffPtr++;
9000a078:	3301      	adds	r3, #1
      hi2c->XferCount--;
9000a07a:	b292      	uxth	r2, r2
      hi2c->pBuffPtr++;
9000a07c:	f8cb 3024 	str.w	r3, [fp, #36]	; 0x24
      hi2c->XferSize--;
9000a080:	f8bb 3028 	ldrh.w	r3, [fp, #40]	; 0x28
      hi2c->XferCount--;
9000a084:	f8ab 202a 	strh.w	r2, [fp, #42]	; 0x2a
      hi2c->XferSize--;
9000a088:	3b01      	subs	r3, #1
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
9000a08a:	f8bb 202a 	ldrh.w	r2, [fp, #42]	; 0x2a
      hi2c->XferSize--;
9000a08e:	b29b      	uxth	r3, r3
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
9000a090:	b292      	uxth	r2, r2
      hi2c->XferSize--;
9000a092:	f8ab 3028 	strh.w	r3, [fp, #40]	; 0x28
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
9000a096:	b10a      	cbz	r2, 9000a09c <HAL_I2C_Mem_Read+0x170>
9000a098:	2b00      	cmp	r3, #0
9000a09a:	d046      	beq.n	9000a12a <HAL_I2C_Mem_Read+0x1fe>
    } while (hi2c->XferCount > 0U);
9000a09c:	f8bb 302a 	ldrh.w	r3, [fp, #42]	; 0x2a
9000a0a0:	b29b      	uxth	r3, r3
9000a0a2:	2b00      	cmp	r3, #0
9000a0a4:	f000 8088 	beq.w	9000a1b8 <HAL_I2C_Mem_Read+0x28c>
9000a0a8:	1c69      	adds	r1, r5, #1
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000a0aa:	f8db 4000 	ldr.w	r4, [fp]
9000a0ae:	d0d7      	beq.n	9000a060 <HAL_I2C_Mem_Read+0x134>
9000a0b0:	69a3      	ldr	r3, [r4, #24]
9000a0b2:	075b      	lsls	r3, r3, #29
9000a0b4:	d4d7      	bmi.n	9000a066 <HAL_I2C_Mem_Read+0x13a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000a0b6:	f7fe ff87 	bl	90008fc8 <HAL_GetTick>
9000a0ba:	1b80      	subs	r0, r0, r6
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000a0bc:	f8db 4000 	ldr.w	r4, [fp]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000a0c0:	4285      	cmp	r5, r0
9000a0c2:	d301      	bcc.n	9000a0c8 <HAL_I2C_Mem_Read+0x19c>
9000a0c4:	2d00      	cmp	r5, #0
9000a0c6:	d1c9      	bne.n	9000a05c <HAL_I2C_Mem_Read+0x130>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000a0c8:	69a3      	ldr	r3, [r4, #24]
9000a0ca:	f013 0304 	ands.w	r3, r3, #4
9000a0ce:	d1c5      	bne.n	9000a05c <HAL_I2C_Mem_Read+0x130>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000a0d0:	f8db 2044 	ldr.w	r2, [fp, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000a0d4:	2120      	movs	r1, #32
          return HAL_ERROR;
9000a0d6:	2001      	movs	r0, #1
          __HAL_UNLOCK(hi2c);
9000a0d8:	f88b 3040 	strb.w	r3, [fp, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000a0dc:	430a      	orrs	r2, r1
9000a0de:	f8cb 2044 	str.w	r2, [fp, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000a0e2:	f88b 1041 	strb.w	r1, [fp, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
9000a0e6:	f88b 3042 	strb.w	r3, [fp, #66]	; 0x42
          return HAL_ERROR;
9000a0ea:	e75f      	b.n	90009fac <HAL_I2C_Mem_Read+0x80>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000a0ec:	69a3      	ldr	r3, [r4, #24]
9000a0ee:	0658      	lsls	r0, r3, #25
9000a0f0:	d49e      	bmi.n	9000a030 <HAL_I2C_Mem_Read+0x104>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000a0f2:	f7fe ff69 	bl	90008fc8 <HAL_GetTick>
9000a0f6:	1b80      	subs	r0, r0, r6
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000a0f8:	f8db 4000 	ldr.w	r4, [fp]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000a0fc:	4285      	cmp	r5, r0
9000a0fe:	d301      	bcc.n	9000a104 <HAL_I2C_Mem_Read+0x1d8>
9000a100:	2d00      	cmp	r5, #0
9000a102:	d190      	bne.n	9000a026 <HAL_I2C_Mem_Read+0xfa>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000a104:	69a3      	ldr	r3, [r4, #24]
9000a106:	f013 0340 	ands.w	r3, r3, #64	; 0x40
9000a10a:	d18c      	bne.n	9000a026 <HAL_I2C_Mem_Read+0xfa>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000a10c:	f8db 2044 	ldr.w	r2, [fp, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000a110:	2120      	movs	r1, #32
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000a112:	430a      	orrs	r2, r1
9000a114:	f8cb 2044 	str.w	r2, [fp, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000a118:	f88b 1041 	strb.w	r1, [fp, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
9000a11c:	f88b 3042 	strb.w	r3, [fp, #66]	; 0x42
      __HAL_UNLOCK(hi2c);
9000a120:	2300      	movs	r3, #0
      return HAL_ERROR;
9000a122:	2001      	movs	r0, #1
      __HAL_UNLOCK(hi2c);
9000a124:	f88b 3040 	strb.w	r3, [fp, #64]	; 0x40
      return HAL_ERROR;
9000a128:	e740      	b.n	90009fac <HAL_I2C_Mem_Read+0x80>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000a12a:	f8db 2000 	ldr.w	r2, [fp]
9000a12e:	1c68      	adds	r0, r5, #1
9000a130:	d111      	bne.n	9000a156 <HAL_I2C_Mem_Read+0x22a>
9000a132:	6993      	ldr	r3, [r2, #24]
9000a134:	0619      	lsls	r1, r3, #24
9000a136:	d5fc      	bpl.n	9000a132 <HAL_I2C_Mem_Read+0x206>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
9000a138:	f8bb 302a 	ldrh.w	r3, [fp, #42]	; 0x2a
9000a13c:	b29b      	uxth	r3, r3
9000a13e:	2bff      	cmp	r3, #255	; 0xff
9000a140:	d91a      	bls.n	9000a178 <HAL_I2C_Mem_Read+0x24c>
  MODIFY_REG(hi2c->Instance->CR2, \
9000a142:	6853      	ldr	r3, [r2, #4]
          hi2c->XferSize = MAX_NBYTE_SIZE;
9000a144:	f8ab a028 	strh.w	sl, [fp, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
9000a148:	ea03 0308 	and.w	r3, r3, r8
9000a14c:	433b      	orrs	r3, r7
9000a14e:	ea43 0309 	orr.w	r3, r3, r9
9000a152:	6053      	str	r3, [r2, #4]
}
9000a154:	e7a2      	b.n	9000a09c <HAL_I2C_Mem_Read+0x170>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000a156:	6993      	ldr	r3, [r2, #24]
9000a158:	061b      	lsls	r3, r3, #24
9000a15a:	d4ed      	bmi.n	9000a138 <HAL_I2C_Mem_Read+0x20c>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000a15c:	f7fe ff34 	bl	90008fc8 <HAL_GetTick>
9000a160:	1b80      	subs	r0, r0, r6
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000a162:	f8db 2000 	ldr.w	r2, [fp]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000a166:	4285      	cmp	r5, r0
9000a168:	d301      	bcc.n	9000a16e <HAL_I2C_Mem_Read+0x242>
9000a16a:	2d00      	cmp	r5, #0
9000a16c:	d1df      	bne.n	9000a12e <HAL_I2C_Mem_Read+0x202>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000a16e:	6993      	ldr	r3, [r2, #24]
9000a170:	f013 0380 	ands.w	r3, r3, #128	; 0x80
9000a174:	d1db      	bne.n	9000a12e <HAL_I2C_Mem_Read+0x202>
9000a176:	e7ab      	b.n	9000a0d0 <HAL_I2C_Mem_Read+0x1a4>
          hi2c->XferSize = hi2c->XferCount;
9000a178:	f8bb 302a 	ldrh.w	r3, [fp, #42]	; 0x2a
9000a17c:	b29b      	uxth	r3, r3
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
9000a17e:	b2d9      	uxtb	r1, r3
          hi2c->XferSize = hi2c->XferCount;
9000a180:	f8ab 3028 	strh.w	r3, [fp, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
9000a184:	6853      	ldr	r3, [r2, #4]
9000a186:	ea03 0308 	and.w	r3, r3, r8
9000a18a:	433b      	orrs	r3, r7
9000a18c:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
9000a190:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
9000a194:	6053      	str	r3, [r2, #4]
}
9000a196:	e781      	b.n	9000a09c <HAL_I2C_Mem_Read+0x170>
      hi2c->XferSize = hi2c->XferCount;
9000a198:	f8bb 302a 	ldrh.w	r3, [fp, #42]	; 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
9000a19c:	4912      	ldr	r1, [pc, #72]	; (9000a1e8 <HAL_I2C_Mem_Read+0x2bc>)
      hi2c->XferSize = hi2c->XferCount;
9000a19e:	b29b      	uxth	r3, r3
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
9000a1a0:	b2da      	uxtb	r2, r3
      hi2c->XferSize = hi2c->XferCount;
9000a1a2:	f8ab 3028 	strh.w	r3, [fp, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
9000a1a6:	6863      	ldr	r3, [r4, #4]
9000a1a8:	400b      	ands	r3, r1
9000a1aa:	433b      	orrs	r3, r7
9000a1ac:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9000a1b0:	4a0f      	ldr	r2, [pc, #60]	; (9000a1f0 <HAL_I2C_Mem_Read+0x2c4>)
9000a1b2:	431a      	orrs	r2, r3
9000a1b4:	6062      	str	r2, [r4, #4]
}
9000a1b6:	e74b      	b.n	9000a050 <HAL_I2C_Mem_Read+0x124>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
9000a1b8:	4632      	mov	r2, r6
9000a1ba:	4629      	mov	r1, r5
9000a1bc:	4658      	mov	r0, fp
9000a1be:	f7ff fc51 	bl	90009a64 <I2C_WaitOnSTOPFlagUntilTimeout>
9000a1c2:	b970      	cbnz	r0, 9000a1e2 <HAL_I2C_Mem_Read+0x2b6>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
9000a1c4:	f8db 3000 	ldr.w	r3, [fp]
9000a1c8:	2120      	movs	r1, #32
    I2C_RESET_CR2(hi2c);
9000a1ca:	4c0a      	ldr	r4, [pc, #40]	; (9000a1f4 <HAL_I2C_Mem_Read+0x2c8>)
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
9000a1cc:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
9000a1ce:	685a      	ldr	r2, [r3, #4]
9000a1d0:	4022      	ands	r2, r4
9000a1d2:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
9000a1d4:	f88b 1041 	strb.w	r1, [fp, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
9000a1d8:	f88b 0040 	strb.w	r0, [fp, #64]	; 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
9000a1dc:	f88b 0042 	strb.w	r0, [fp, #66]	; 0x42
    return HAL_OK;
9000a1e0:	e6e4      	b.n	90009fac <HAL_I2C_Mem_Read+0x80>
      return HAL_ERROR;
9000a1e2:	2001      	movs	r0, #1
9000a1e4:	e6e2      	b.n	90009fac <HAL_I2C_Mem_Read+0x80>
9000a1e6:	bf00      	nop
9000a1e8:	fc009800 	.word	0xfc009800
9000a1ec:	01ff2400 	.word	0x01ff2400
9000a1f0:	02002400 	.word	0x02002400
9000a1f4:	fe00e800 	.word	0xfe00e800
9000a1f8:	fc009c00 	.word	0xfc009c00
9000a1fc:	01ff0000 	.word	0x01ff0000

9000a200 <HAL_I2C_GetState>:
  return hi2c->State;
9000a200:	f890 0041 	ldrb.w	r0, [r0, #65]	; 0x41
}
9000a204:	4770      	bx	lr
9000a206:	bf00      	nop

9000a208 <HAL_I2C_GetError>:
  return hi2c->ErrorCode;
9000a208:	6c40      	ldr	r0, [r0, #68]	; 0x44
}
9000a20a:	4770      	bx	lr

9000a20c <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
9000a20c:	f890 2041 	ldrb.w	r2, [r0, #65]	; 0x41
9000a210:	2a20      	cmp	r2, #32
9000a212:	d123      	bne.n	9000a25c <HAL_I2CEx_ConfigAnalogFilter+0x50>
9000a214:	fa5f fc82 	uxtb.w	ip, r2
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
9000a218:	f890 2040 	ldrb.w	r2, [r0, #64]	; 0x40
9000a21c:	4603      	mov	r3, r0
9000a21e:	2a01      	cmp	r2, #1
9000a220:	d01c      	beq.n	9000a25c <HAL_I2CEx_ConfigAnalogFilter+0x50>

    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
9000a222:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
9000a224:	2024      	movs	r0, #36	; 0x24
{
9000a226:	b500      	push	{lr}
    hi2c->State = HAL_I2C_STATE_BUSY;
9000a228:	f883 0041 	strb.w	r0, [r3, #65]	; 0x41
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
9000a22c:	f04f 0e00 	mov.w	lr, #0
    __HAL_I2C_DISABLE(hi2c);
9000a230:	6810      	ldr	r0, [r2, #0]
9000a232:	f020 0001 	bic.w	r0, r0, #1
9000a236:	6010      	str	r0, [r2, #0]
    hi2c->Instance->CR1 &= ~(I2C_CR1_ANFOFF);
9000a238:	6810      	ldr	r0, [r2, #0]
9000a23a:	f420 5080 	bic.w	r0, r0, #4096	; 0x1000
9000a23e:	6010      	str	r0, [r2, #0]
    hi2c->Instance->CR1 |= AnalogFilter;
9000a240:	6810      	ldr	r0, [r2, #0]
9000a242:	4301      	orrs	r1, r0

    return HAL_OK;
9000a244:	4670      	mov	r0, lr
    hi2c->Instance->CR1 |= AnalogFilter;
9000a246:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
9000a248:	6811      	ldr	r1, [r2, #0]
9000a24a:	f041 0101 	orr.w	r1, r1, #1
9000a24e:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
9000a250:	f883 c041 	strb.w	ip, [r3, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
9000a254:	f883 e040 	strb.w	lr, [r3, #64]	; 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
9000a258:	f85d fb04 	ldr.w	pc, [sp], #4
    return HAL_BUSY;
9000a25c:	2002      	movs	r0, #2
}
9000a25e:	4770      	bx	lr

9000a260 <HAL_I2CEx_ConfigDigitalFilter>:

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
9000a260:	f890 2041 	ldrb.w	r2, [r0, #65]	; 0x41
9000a264:	2a20      	cmp	r2, #32
9000a266:	d122      	bne.n	9000a2ae <HAL_I2CEx_ConfigDigitalFilter+0x4e>
9000a268:	4603      	mov	r3, r0
{
9000a26a:	b500      	push	{lr}
9000a26c:	fa5f fe82 	uxtb.w	lr, r2
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
9000a270:	f890 2040 	ldrb.w	r2, [r0, #64]	; 0x40
9000a274:	2a01      	cmp	r2, #1
9000a276:	d01c      	beq.n	9000a2b2 <HAL_I2CEx_ConfigDigitalFilter+0x52>

    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
9000a278:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
9000a27a:	2024      	movs	r0, #36	; 0x24
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
9000a27c:	f04f 0c00 	mov.w	ip, #0
    hi2c->State = HAL_I2C_STATE_BUSY;
9000a280:	f883 0041 	strb.w	r0, [r3, #65]	; 0x41
    __HAL_I2C_DISABLE(hi2c);
9000a284:	6810      	ldr	r0, [r2, #0]
9000a286:	f020 0001 	bic.w	r0, r0, #1
9000a28a:	6010      	str	r0, [r2, #0]
    tmpreg = hi2c->Instance->CR1;
9000a28c:	6810      	ldr	r0, [r2, #0]
    tmpreg &= ~(I2C_CR1_DNF);
9000a28e:	f420 6070 	bic.w	r0, r0, #3840	; 0xf00
    tmpreg |= DigitalFilter << 8U;
9000a292:	ea40 2101 	orr.w	r1, r0, r1, lsl #8

    return HAL_OK;
9000a296:	4660      	mov	r0, ip
    hi2c->Instance->CR1 = tmpreg;
9000a298:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
9000a29a:	6811      	ldr	r1, [r2, #0]
9000a29c:	f041 0101 	orr.w	r1, r1, #1
9000a2a0:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
9000a2a2:	f883 e041 	strb.w	lr, [r3, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
9000a2a6:	f883 c040 	strb.w	ip, [r3, #64]	; 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
9000a2aa:	f85d fb04 	ldr.w	pc, [sp], #4
    return HAL_BUSY;
9000a2ae:	2002      	movs	r0, #2
}
9000a2b0:	4770      	bx	lr
    return HAL_BUSY;
9000a2b2:	2002      	movs	r0, #2
}
9000a2b4:	f85d fb04 	ldr.w	pc, [sp], #4

9000a2b8 <JPEG_Bits_To_SizeCodes>:
  * @param  Huffcode pointer to codes table
  * @param  LastK pointer to last Coeff (table dimension)
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Bits_To_SizeCodes(uint8_t *Bits, uint8_t *Huffsize, uint32_t *Huffcode, uint32_t *LastK)
{
9000a2b8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9000a2bc:	460d      	mov	r5, r1
9000a2be:	4614      	mov	r4, r2
9000a2c0:	469a      	mov	sl, r3

  /* Figure C.1: Generation of table of Huffman code sizes */
  p = 0;
  for (l = 0; l < 16UL; l++)
  {
    i = (uint32_t)Bits[l];
9000a2c2:	7806      	ldrb	r6, [r0, #0]
    if ((p + i) > 256UL)
9000a2c4:	4681      	mov	r9, r0
    i = (uint32_t)Bits[l];
9000a2c6:	2701      	movs	r7, #1
  p = 0;
9000a2c8:	f04f 0800 	mov.w	r8, #0
9000a2cc:	e006      	b.n	9000a2dc <JPEG_Bits_To_SizeCodes+0x24>
    i = (uint32_t)Bits[l];
9000a2ce:	f819 6f01 	ldrb.w	r6, [r9, #1]!
    if ((p + i) > 256UL)
9000a2d2:	eb06 0308 	add.w	r3, r6, r8
9000a2d6:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
9000a2da:	d837      	bhi.n	9000a34c <JPEG_Bits_To_SizeCodes+0x94>
      /* check for table overflow */
      return HAL_ERROR;
    }
    while (i != 0UL)
    {
      Huffsize[p] = (uint8_t) l + 1U;
9000a2dc:	eb05 0008 	add.w	r0, r5, r8
9000a2e0:	4632      	mov	r2, r6
9000a2e2:	4639      	mov	r1, r7
    while (i != 0UL)
9000a2e4:	b116      	cbz	r6, 9000a2ec <JPEG_Bits_To_SizeCodes+0x34>
      p++;
9000a2e6:	44b0      	add	r8, r6
      Huffsize[p] = (uint8_t) l + 1U;
9000a2e8:	f01d fed0 	bl	9002808c <memset>
  for (l = 0; l < 16UL; l++)
9000a2ec:	2f10      	cmp	r7, #16
    if ((p + i) > 256UL)
9000a2ee:	f107 0701 	add.w	r7, r7, #1
  for (l = 0; l < 16UL; l++)
9000a2f2:	d1ec      	bne.n	9000a2ce <JPEG_Bits_To_SizeCodes+0x16>
      i--;
    }
  }
  Huffsize[p] = 0;
9000a2f4:	2300      	movs	r3, #0
9000a2f6:	f805 3008 	strb.w	r3, [r5, r8]
  *LastK = p;
9000a2fa:	f8ca 8000 	str.w	r8, [sl]

  /* Figure C.2: Generation of table of Huffman codes */
  code = 0;
  si = Huffsize[0];
9000a2fe:	7828      	ldrb	r0, [r5, #0]
9000a300:	4601      	mov	r1, r0
  p = 0;
  while (Huffsize[p] != 0U)
9000a302:	b300      	cbz	r0, 9000a346 <JPEG_Bits_To_SizeCodes+0x8e>
9000a304:	f06f 4840 	mvn.w	r8, #3221225472	; 0xc0000000
    /* code must fit in "size" bits (si), no code is allowed to be all ones*/
    if(si > 31UL)
    {
      return HAL_ERROR;
    }
    if (((uint32_t) code) >= (((uint32_t) 1) << si))
9000a308:	2701      	movs	r7, #1
  p = 0;
9000a30a:	461a      	mov	r2, r3
    while (((uint32_t) Huffsize[p]) == si)
9000a30c:	4288      	cmp	r0, r1
9000a30e:	d10f      	bne.n	9000a330 <JPEG_Bits_To_SizeCodes+0x78>
9000a310:	eb02 0008 	add.w	r0, r2, r8
9000a314:	1c56      	adds	r6, r2, #1
9000a316:	eb05 0c02 	add.w	ip, r5, r2
9000a31a:	eb04 0080 	add.w	r0, r4, r0, lsl #2
9000a31e:	1af6      	subs	r6, r6, r3
      Huffcode[p] = code;
9000a320:	f840 3f04 	str.w	r3, [r0, #4]!
      p++;
9000a324:	18f2      	adds	r2, r6, r3
    while (((uint32_t) Huffsize[p]) == si)
9000a326:	f81c ef01 	ldrb.w	lr, [ip, #1]!
      code++;
9000a32a:	3301      	adds	r3, #1
    while (((uint32_t) Huffsize[p]) == si)
9000a32c:	458e      	cmp	lr, r1
9000a32e:	d0f7      	beq.n	9000a320 <JPEG_Bits_To_SizeCodes+0x68>
    if(si > 31UL)
9000a330:	291f      	cmp	r1, #31
9000a332:	d80b      	bhi.n	9000a34c <JPEG_Bits_To_SizeCodes+0x94>
    if (((uint32_t) code) >= (((uint32_t) 1) << si))
9000a334:	fa07 f001 	lsl.w	r0, r7, r1
9000a338:	4298      	cmp	r0, r3
9000a33a:	d907      	bls.n	9000a34c <JPEG_Bits_To_SizeCodes+0x94>
  while (Huffsize[p] != 0U)
9000a33c:	5ca8      	ldrb	r0, [r5, r2]
    {
      return HAL_ERROR;
    }
    code <<= 1;
9000a33e:	005b      	lsls	r3, r3, #1
    si++;
9000a340:	3101      	adds	r1, #1
  while (Huffsize[p] != 0U)
9000a342:	2800      	cmp	r0, #0
9000a344:	d1e2      	bne.n	9000a30c <JPEG_Bits_To_SizeCodes+0x54>
  }
  /* Return function status */
  return HAL_OK;
9000a346:	2000      	movs	r0, #0
}
9000a348:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      return HAL_ERROR;
9000a34c:	2001      	movs	r0, #1
}
9000a34e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9000a352:	bf00      	nop

9000a354 <JPEG_DCHuff_BitsVals_To_SizeCodes>:
  * @param  DC_SizeCodesTable pointer to DC huffman Sizes/Codes table
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_DCHuff_BitsVals_To_SizeCodes(JPEG_DCHuffTableTypeDef *DC_BitsValsTable,
                                                           JPEG_DC_HuffCodeTableTypeDef *DC_SizeCodesTable)
{
9000a354:	b5f0      	push	{r4, r5, r6, r7, lr}
9000a356:	f2ad 5d14 	subw	sp, sp, #1300	; 0x514
9000a35a:	460d      	mov	r5, r1
9000a35c:	4604      	mov	r4, r0
  uint32_t k;
  uint32_t l;
  uint32_t lastK;
  uint8_t huffsize[257];
  uint32_t huffcode[257];
  error = JPEG_Bits_To_SizeCodes(DC_BitsValsTable->Bits, huffsize, huffcode, &lastK);
9000a35e:	ab01      	add	r3, sp, #4
9000a360:	aa43      	add	r2, sp, #268	; 0x10c
9000a362:	a902      	add	r1, sp, #8
9000a364:	f7ff ffa8 	bl	9000a2b8 <JPEG_Bits_To_SizeCodes>
  if (error != HAL_OK)
9000a368:	b9d0      	cbnz	r0, 9000a3a0 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
    return  error;
  }
  /* Figure C.3: ordering procedure for encoding procedure code tables */
  k = 0;

  while (k < lastK)
9000a36a:	9f01      	ldr	r7, [sp, #4]
9000a36c:	b1c7      	cbz	r7, 9000a3a0 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
9000a36e:	370f      	adds	r7, #15
9000a370:	f50d 7e86 	add.w	lr, sp, #268	; 0x10c
9000a374:	a902      	add	r1, sp, #8
9000a376:	f104 0c0f 	add.w	ip, r4, #15
9000a37a:	4427      	add	r7, r4
9000a37c:	e009      	b.n	9000a392 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x3e>
      return HAL_ERROR; /* Huffman Table overflow error*/
    }
    else
    {
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
9000a37e:	f811 2b01 	ldrb.w	r2, [r1], #1
  while (k < lastK)
9000a382:	45bc      	cmp	ip, r7
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
9000a384:	f85e 6b04 	ldr.w	r6, [lr], #4
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
9000a388:	f102 32ff 	add.w	r2, r2, #4294967295
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
9000a38c:	60e6      	str	r6, [r4, #12]
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
9000a38e:	54ea      	strb	r2, [r5, r3]
  while (k < lastK)
9000a390:	d006      	beq.n	9000a3a0 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
    l = DC_BitsValsTable->HuffVal[k];
9000a392:	f81c 3f01 	ldrb.w	r3, [ip, #1]!
    if (l >= JPEG_DC_HUFF_TABLE_SIZE)
9000a396:	2b0b      	cmp	r3, #11
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
9000a398:	eb05 0483 	add.w	r4, r5, r3, lsl #2
    if (l >= JPEG_DC_HUFF_TABLE_SIZE)
9000a39c:	d9ef      	bls.n	9000a37e <JPEG_DCHuff_BitsVals_To_SizeCodes+0x2a>
      return HAL_ERROR; /* Huffman Table overflow error*/
9000a39e:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
9000a3a0:	f20d 5d14 	addw	sp, sp, #1300	; 0x514
9000a3a4:	bdf0      	pop	{r4, r5, r6, r7, pc}
9000a3a6:	bf00      	nop

9000a3a8 <JPEG_Set_HuffDC_Mem>:
  * @param  DCTableAddress Encoder DC huffman table address it could be HUFFENC_DC0 or HUFFENC_DC1.
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Set_HuffDC_Mem(JPEG_HandleTypeDef *hjpeg, JPEG_DCHuffTableTypeDef *HuffTableDC,
                                             const __IO uint32_t *DCTableAddress)
{
9000a3a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint32_t i;
  uint32_t lsb;
  uint32_t msb;
  __IO uint32_t *address, *addressDef;

  if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC0))
9000a3ac:	6804      	ldr	r4, [r0, #0]
{
9000a3ae:	b093      	sub	sp, #76	; 0x4c
9000a3b0:	4608      	mov	r0, r1
  if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC0))
9000a3b2:	f504 63f8 	add.w	r3, r4, #1984	; 0x7c0
9000a3b6:	429a      	cmp	r2, r3
9000a3b8:	f000 809d 	beq.w	9000a4f6 <JPEG_Set_HuffDC_Mem+0x14e>
  {
    address = (hjpeg->Instance->HUFFENC_DC0 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
  }
  else if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC1))
9000a3bc:	f504 63fc 	add.w	r3, r4, #2016	; 0x7e0
9000a3c0:	429a      	cmp	r2, r3
9000a3c2:	d003      	beq.n	9000a3cc <JPEG_Set_HuffDC_Mem+0x24>
  {
    address = (hjpeg->Instance->HUFFENC_DC1 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
  }
  else
  {
    return HAL_ERROR;
9000a3c4:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
9000a3c6:	b013      	add	sp, #76	; 0x4c
9000a3c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    address = (hjpeg->Instance->HUFFENC_DC1 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
9000a3cc:	f504 64ff 	add.w	r4, r4, #2040	; 0x7f8
    error = JPEG_DCHuff_BitsVals_To_SizeCodes(HuffTableDC, &dcSizeCodesTable);
9000a3d0:	a903      	add	r1, sp, #12
9000a3d2:	f7ff ffbf 	bl	9000a354 <JPEG_DCHuff_BitsVals_To_SizeCodes>
    if (error != HAL_OK)
9000a3d6:	2800      	cmp	r0, #0
9000a3d8:	d1f5      	bne.n	9000a3c6 <JPEG_Set_HuffDC_Mem+0x1e>
    *addressDef = 0x0FFF0FFF;
9000a3da:	f06f 23f0 	mvn.w	r3, #4026593280	; 0xf000f000
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a3de:	f89d a017 	ldrb.w	sl, [sp, #23]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a3e2:	f89d e016 	ldrb.w	lr, [sp, #22]
    *addressDef = 0x0FFF0FFF;
9000a3e6:	6023      	str	r3, [r4, #0]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a3e8:	ea4f 2a0a 	mov.w	sl, sl, lsl #8
    *addressDef = 0x0FFF0FFF;
9000a3ec:	6063      	str	r3, [r4, #4]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a3ee:	ea4f 2e0e 	mov.w	lr, lr, lsl #8
9000a3f2:	f89d 300e 	ldrb.w	r3, [sp, #14]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a3f6:	f40a 6a70 	and.w	sl, sl, #3840	; 0xf00
9000a3fa:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a3fe:	f40e 6e70 	and.w	lr, lr, #3840	; 0xf00
9000a402:	021b      	lsls	r3, r3, #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a404:	f89d 9015 	ldrb.w	r9, [sp, #21]
9000a408:	ea4a 0a02 	orr.w	sl, sl, r2
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a40c:	f89d c014 	ldrb.w	ip, [sp, #20]
9000a410:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a414:	ea4f 2909 	mov.w	r9, r9, lsl #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a418:	ea4f 2c0c 	mov.w	ip, ip, lsl #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a41c:	f89d 8013 	ldrb.w	r8, [sp, #19]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a420:	9301      	str	r3, [sp, #4]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a422:	f409 6970 	and.w	r9, r9, #3840	; 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a426:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
9000a42a:	f40c 6c70 	and.w	ip, ip, #3840	; 0xf00
9000a42e:	f89d 1012 	ldrb.w	r1, [sp, #18]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a432:	ea4f 2808 	mov.w	r8, r8, lsl #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a436:	ea4e 0e03 	orr.w	lr, lr, r3
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a43a:	f89d 7011 	ldrb.w	r7, [sp, #17]
9000a43e:	f408 6870 	and.w	r8, r8, #3840	; 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a442:	0209      	lsls	r1, r1, #8
      *address = lsb | (msb << 16);
9000a444:	ea4e 4e0a 	orr.w	lr, lr, sl, lsl #16
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a448:	f89d 2010 	ldrb.w	r2, [sp, #16]
9000a44c:	f401 6170 	and.w	r1, r1, #3840	; 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a450:	023f      	lsls	r7, r7, #8
      *address = lsb | (msb << 16);
9000a452:	f844 ec04 	str.w	lr, [r4, #-4]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a456:	0212      	lsls	r2, r2, #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a458:	f89d e03c 	ldrb.w	lr, [sp, #60]	; 0x3c
9000a45c:	f407 6770 	and.w	r7, r7, #3840	; 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a460:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a464:	f89d 600f 	ldrb.w	r6, [sp, #15]
9000a468:	ea49 090e 	orr.w	r9, r9, lr
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a46c:	f89d e038 	ldrb.w	lr, [sp, #56]	; 0x38
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a470:	0236      	lsls	r6, r6, #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a472:	9b01      	ldr	r3, [sp, #4]
9000a474:	ea4c 0c0e 	orr.w	ip, ip, lr
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a478:	f89d 500d 	ldrb.w	r5, [sp, #13]
9000a47c:	f406 6670 	and.w	r6, r6, #3840	; 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a480:	f89d b00c 	ldrb.w	fp, [sp, #12]
      *address = lsb | (msb << 16);
9000a484:	ea4c 4c09 	orr.w	ip, ip, r9, lsl #16
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a488:	022d      	lsls	r5, r5, #8
      *address = lsb | (msb << 16);
9000a48a:	f844 cc08 	str.w	ip, [r4, #-8]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a48e:	ea4f 2b0b 	mov.w	fp, fp, lsl #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a492:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
9000a496:	f405 6570 	and.w	r5, r5, #3840	; 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a49a:	f40b 6b70 	and.w	fp, fp, #3840	; 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a49e:	ea48 080c 	orr.w	r8, r8, ip
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a4a2:	f89d c030 	ldrb.w	ip, [sp, #48]	; 0x30
9000a4a6:	ea41 010c 	orr.w	r1, r1, ip
      *address = lsb | (msb << 16);
9000a4aa:	ea41 4108 	orr.w	r1, r1, r8, lsl #16
9000a4ae:	f844 1c0c 	str.w	r1, [r4, #-12]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a4b2:	f89d 102c 	ldrb.w	r1, [sp, #44]	; 0x2c
9000a4b6:	430f      	orrs	r7, r1
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a4b8:	f89d 1028 	ldrb.w	r1, [sp, #40]	; 0x28
9000a4bc:	430a      	orrs	r2, r1
      *address = lsb | (msb << 16);
9000a4be:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
9000a4c2:	f844 2c10 	str.w	r2, [r4, #-16]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a4c6:	f89d 2024 	ldrb.w	r2, [sp, #36]	; 0x24
9000a4ca:	4316      	orrs	r6, r2
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a4cc:	f89d 2020 	ldrb.w	r2, [sp, #32]
9000a4d0:	4313      	orrs	r3, r2
      *address = lsb | (msb << 16);
9000a4d2:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
9000a4d6:	f844 3c14 	str.w	r3, [r4, #-20]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a4da:	f89d 301c 	ldrb.w	r3, [sp, #28]
9000a4de:	431d      	orrs	r5, r3
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000a4e0:	f89d 3018 	ldrb.w	r3, [sp, #24]
9000a4e4:	ea4b 0303 	orr.w	r3, fp, r3
      *address = lsb | (msb << 16);
9000a4e8:	ea43 4305 	orr.w	r3, r3, r5, lsl #16
9000a4ec:	f844 3c18 	str.w	r3, [r4, #-24]
}
9000a4f0:	b013      	add	sp, #76	; 0x4c
9000a4f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    address = (hjpeg->Instance->HUFFENC_DC0 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
9000a4f6:	f504 64fb 	add.w	r4, r4, #2008	; 0x7d8
9000a4fa:	e769      	b.n	9000a3d0 <JPEG_Set_HuffDC_Mem+0x28>

9000a4fc <JPEG_Set_HuffAC_Mem>:
  * @param  ACTableAddress Encoder AC huffman table address it could be HUFFENC_AC0 or HUFFENC_AC1.
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Set_HuffAC_Mem(JPEG_HandleTypeDef *hjpeg, JPEG_ACHuffTableTypeDef *HuffTableAC,
                                             const __IO uint32_t *ACTableAddress)
{
9000a4fc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_StatusTypeDef error;
  JPEG_AC_HuffCodeTableTypeDef acSizeCodesTable;
  uint32_t i, lsb, msb;
  __IO uint32_t *address, *addressDef;

  if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC0))
9000a500:	6804      	ldr	r4, [r0, #0]
{
9000a502:	f6ad 0d3c 	subw	sp, sp, #2108	; 0x83c
9000a506:	460d      	mov	r5, r1
  if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC0))
9000a508:	f504 63a0 	add.w	r3, r4, #1280	; 0x500
9000a50c:	429a      	cmp	r2, r3
9000a50e:	d042      	beq.n	9000a596 <JPEG_Set_HuffAC_Mem+0x9a>
  {
    address = (hjpeg->Instance->HUFFENC_AC0 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
  }
  else if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC1))
9000a510:	f504 63cc 	add.w	r3, r4, #1632	; 0x660
9000a514:	429a      	cmp	r2, r3
9000a516:	d004      	beq.n	9000a522 <JPEG_Set_HuffAC_Mem+0x26>
      return HAL_ERROR; /* Huffman Table overflow error*/
9000a518:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
9000a51a:	f60d 0d3c 	addw	sp, sp, #2108	; 0x83c
9000a51e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    address = (hjpeg->Instance->HUFFENC_AC1 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
9000a522:	f204 74a4 	addw	r4, r4, #1956	; 0x7a4
  error = JPEG_Bits_To_SizeCodes(AC_BitsValsTable->Bits, huffsize, huffcode, &lastK);
9000a526:	4628      	mov	r0, r5
9000a528:	466b      	mov	r3, sp
9000a52a:	f20d 4234 	addw	r2, sp, #1076	; 0x434
9000a52e:	a901      	add	r1, sp, #4
9000a530:	f7ff fec2 	bl	9000a2b8 <JPEG_Bits_To_SizeCodes>
  if (error != HAL_OK)
9000a534:	2800      	cmp	r0, #0
9000a536:	d1f0      	bne.n	9000a51a <JPEG_Set_HuffAC_Mem+0x1e>
  while (k < lastK)
9000a538:	9b00      	ldr	r3, [sp, #0]
9000a53a:	b37b      	cbz	r3, 9000a59c <JPEG_Set_HuffAC_Mem+0xa0>
9000a53c:	330f      	adds	r3, #15
9000a53e:	f20d 4734 	addw	r7, sp, #1076	; 0x434
9000a542:	f10d 0c04 	add.w	ip, sp, #4
9000a546:	f105 020f 	add.w	r2, r5, #15
9000a54a:	eb05 0e03 	add.w	lr, r5, r3
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
9000a54e:	ae42      	add	r6, sp, #264	; 0x108
9000a550:	e011      	b.n	9000a576 <JPEG_Set_HuffAC_Mem+0x7a>
      l = (msb * 10UL) + lsb - 1UL;
9000a552:	eb03 0345 	add.w	r3, r3, r5, lsl #1
    if (l >= JPEG_AC_HUFF_TABLE_SIZE)
9000a556:	2ba1      	cmp	r3, #161	; 0xa1
9000a558:	d8de      	bhi.n	9000a518 <JPEG_Set_HuffAC_Mem+0x1c>
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
9000a55a:	f81c 5b01 	ldrb.w	r5, [ip], #1
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
9000a55e:	eb06 0883 	add.w	r8, r6, r3, lsl #2
9000a562:	f857 9b04 	ldr.w	r9, [r7], #4
  while (k < lastK)
9000a566:	4596      	cmp	lr, r2
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
9000a568:	f105 35ff 	add.w	r5, r5, #4294967295
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
9000a56c:	4631      	mov	r1, r6
9000a56e:	f8c8 90a4 	str.w	r9, [r8, #164]	; 0xa4
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
9000a572:	54f5      	strb	r5, [r6, r3]
  while (k < lastK)
9000a574:	d013      	beq.n	9000a59e <JPEG_Set_HuffAC_Mem+0xa2>
    l = AC_BitsValsTable->HuffVal[k];
9000a576:	f812 1f01 	ldrb.w	r1, [r2, #1]!
      l = 160; /*l = 0x00 EOB code*/
9000a57a:	23a0      	movs	r3, #160	; 0xa0
    if (l == 0UL)
9000a57c:	2900      	cmp	r1, #0
9000a57e:	d0ec      	beq.n	9000a55a <JPEG_Set_HuffAC_Mem+0x5e>
      msb = (l & 0xF0UL) >> 4;
9000a580:	090d      	lsrs	r5, r1, #4
      lsb = (l & 0x0FUL);
9000a582:	f001 030f 	and.w	r3, r1, #15
    else if (l == 0xF0UL) /* l = 0xF0 ZRL code*/
9000a586:	29f0      	cmp	r1, #240	; 0xf0
      l = (msb * 10UL) + lsb - 1UL;
9000a588:	eb05 0585 	add.w	r5, r5, r5, lsl #2
9000a58c:	f103 33ff 	add.w	r3, r3, #4294967295
    else if (l == 0xF0UL) /* l = 0xF0 ZRL code*/
9000a590:	d1df      	bne.n	9000a552 <JPEG_Set_HuffAC_Mem+0x56>
      l = 161;
9000a592:	23a1      	movs	r3, #161	; 0xa1
9000a594:	e7e1      	b.n	9000a55a <JPEG_Set_HuffAC_Mem+0x5e>
    address = (hjpeg->Instance->HUFFENC_AC0 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
9000a596:	f204 6444 	addw	r4, r4, #1604	; 0x644
9000a59a:	e7c4      	b.n	9000a526 <JPEG_Set_HuffAC_Mem+0x2a>
9000a59c:	a942      	add	r1, sp, #264	; 0x108
      *addressDef = 0x0FFF0FFF;
9000a59e:	f06f 23f0 	mvn.w	r3, #4026593280	; 0xf000f000
    *addressDef = 0x0FD10FD0;
9000a5a2:	4a1a      	ldr	r2, [pc, #104]	; (9000a60c <JPEG_Set_HuffAC_Mem+0x110>)
9000a5a4:	eba1 0c81 	sub.w	ip, r1, r1, lsl #2
9000a5a8:	f10d 0566 	add.w	r5, sp, #102	; 0x66
      *addressDef = 0x0FFF0FFF;
9000a5ac:	6023      	str	r3, [r4, #0]
9000a5ae:	6063      	str	r3, [r4, #4]
9000a5b0:	f50c 7e4a 	add.w	lr, ip, #808	; 0x328
9000a5b4:	60a3      	str	r3, [r4, #8]
    *addressDef = 0x0FD30FD2;
9000a5b6:	f103 33d3 	add.w	r3, r3, #3553874899	; 0xd3d3d3d3
    *addressDef = 0x0FD10FD0;
9000a5ba:	60e2      	str	r2, [r4, #12]
    *addressDef = 0x0FD30FD2;
9000a5bc:	f50c 7c49 	add.w	ip, ip, #804	; 0x324
9000a5c0:	f103 232c 	add.w	r3, r3, #738208768	; 0x2c002c00
9000a5c4:	6123      	str	r3, [r4, #16]
    *addressDef = 0x0FD50FD4;
9000a5c6:	f103 1302 	add.w	r3, r3, #131074	; 0x20002
9000a5ca:	6163      	str	r3, [r4, #20]
    *addressDef = 0x0FD70FD6;
9000a5cc:	f103 1302 	add.w	r3, r3, #131074	; 0x20002
9000a5d0:	61a3      	str	r3, [r4, #24]
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000a5d2:	f891 20a1 	ldrb.w	r2, [r1, #161]	; 0xa1
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000a5d6:	f891 30a0 	ldrb.w	r3, [r1, #160]	; 0xa0
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000a5da:	0212      	lsls	r2, r2, #8
9000a5dc:	f81e 7021 	ldrb.w	r7, [lr, r1, lsl #2]
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000a5e0:	021b      	lsls	r3, r3, #8
9000a5e2:	f81c 6021 	ldrb.w	r6, [ip, r1, lsl #2]
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000a5e6:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
    while (i > 1UL)
9000a5ea:	3902      	subs	r1, #2
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000a5ec:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000a5f0:	433a      	orrs	r2, r7
    while (i > 1UL)
9000a5f2:	428d      	cmp	r5, r1
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000a5f4:	ea43 0306 	orr.w	r3, r3, r6
      *address = lsb | (msb << 16);
9000a5f8:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9000a5fc:	f844 3d04 	str.w	r3, [r4, #-4]!
    while (i > 1UL)
9000a600:	d1e7      	bne.n	9000a5d2 <JPEG_Set_HuffAC_Mem+0xd6>
}
9000a602:	f60d 0d3c 	addw	sp, sp, #2108	; 0x83c
9000a606:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9000a60a:	bf00      	nop
9000a60c:	0fd10fd0 	.word	0x0fd10fd0

9000a610 <JPEG_Init_Process>:
  * @retval None
  */
static void JPEG_Init_Process(JPEG_HandleTypeDef *hjpeg)
{
  /*Reset pause*/
  hjpeg->Context &= (~(JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT));
9000a610:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000a612:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
9000a616:	6543      	str	r3, [r0, #84]	; 0x54

  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a618:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000a61a:	f003 0303 	and.w	r3, r3, #3
9000a61e:	2b02      	cmp	r3, #2
  {
    /*Set JPEG Codec to Decoding mode */
    hjpeg->Instance->CONFR1 |= JPEG_CONFR1_DE;
9000a620:	6803      	ldr	r3, [r0, #0]
9000a622:	685a      	ldr	r2, [r3, #4]
9000a624:	bf0c      	ite	eq
9000a626:	f042 0208 	orreq.w	r2, r2, #8
  }
  else /* JPEG_CONTEXT_ENCODE */
  {
    /*Set JPEG Codec to Encoding mode */
    hjpeg->Instance->CONFR1 &= ~JPEG_CONFR1_DE;
9000a62a:	f022 0208 	bicne.w	r2, r2, #8
9000a62e:	605a      	str	r2, [r3, #4]
  }

  /*Stop JPEG processing */
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000a630:	681a      	ldr	r2, [r3, #0]
9000a632:	f022 0201 	bic.w	r2, r2, #1
9000a636:	601a      	str	r2, [r3, #0]

  /* Disable All Interrupts */
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000a638:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000a63a:	f022 027e 	bic.w	r2, r2, #126	; 0x7e
9000a63e:	631a      	str	r2, [r3, #48]	; 0x30

  /* Flush input and output FIFOs*/
  hjpeg->Instance->CR |= JPEG_CR_IFF;
9000a640:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000a642:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
9000a646:	631a      	str	r2, [r3, #48]	; 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
9000a648:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000a64a:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
9000a64e:	631a      	str	r2, [r3, #48]	; 0x30

  /* Clear all flags */
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
9000a650:	6b9a      	ldr	r2, [r3, #56]	; 0x38
9000a652:	f042 0260 	orr.w	r2, r2, #96	; 0x60
9000a656:	639a      	str	r2, [r3, #56]	; 0x38

  /*Start Encoding/Decoding*/
  hjpeg->Instance->CONFR0 |=  JPEG_CONFR0_START;
9000a658:	681a      	ldr	r2, [r3, #0]
9000a65a:	f042 0201 	orr.w	r2, r2, #1
9000a65e:	601a      	str	r2, [r3, #0]

  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000a660:	6d42      	ldr	r2, [r0, #84]	; 0x54
9000a662:	f002 020c 	and.w	r2, r2, #12
9000a666:	2a08      	cmp	r2, #8
9000a668:	d00a      	beq.n	9000a680 <JPEG_Init_Process+0x70>
  {
    /*Enable IN/OUT, end of Conversation, and end of header parsing interruptions*/
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_IFT | JPEG_IT_IFNF | JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC | JPEG_IT_HPD);
  }
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000a66a:	6d42      	ldr	r2, [r0, #84]	; 0x54
9000a66c:	f002 020c 	and.w	r2, r2, #12
9000a670:	2a0c      	cmp	r2, #12
9000a672:	d000      	beq.n	9000a676 <JPEG_Init_Process+0x66>
  }
  else
  {
    /* Nothing to do */
  }
}
9000a674:	4770      	bx	lr
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
9000a676:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000a678:	f042 0260 	orr.w	r2, r2, #96	; 0x60
9000a67c:	631a      	str	r2, [r3, #48]	; 0x30
}
9000a67e:	4770      	bx	lr
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_IFT | JPEG_IT_IFNF | JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC | JPEG_IT_HPD);
9000a680:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000a682:	f042 026e 	orr.w	r2, r2, #110	; 0x6e
9000a686:	631a      	str	r2, [r3, #48]	; 0x30
9000a688:	4770      	bx	lr
9000a68a:	bf00      	nop

9000a68c <JPEG_DMA_StartProcess>:
  /*if the MDMA In is triggred with JPEG In FIFO Threshold flag
      then MDMA In buffer size is 32 bytes
    else (MDMA In is triggred with JPEG In FIFO not full flag)
      then MDMA In buffer size is 4 bytes
    */
  inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000a68c:	6b01      	ldr	r1, [r0, #48]	; 0x30
    else (MDMA Out is triggred with JPEG Out FIFO not empty flag)
      then MDMA buffer size is 4 bytes
    */
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;

  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
9000a68e:	6a82      	ldr	r2, [r0, #40]	; 0x28
{
9000a690:	b5f0      	push	{r4, r5, r6, r7, lr}
  inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000a692:	6a8d      	ldr	r5, [r1, #40]	; 0x28
{
9000a694:	b083      	sub	sp, #12
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
9000a696:	42aa      	cmp	r2, r5
9000a698:	d32d      	bcc.n	9000a6f6 <JPEG_DMA_StartProcess+0x6a>
9000a69a:	4604      	mov	r4, r0
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
9000a69c:	6b40      	ldr	r0, [r0, #52]	; 0x34
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
9000a69e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
9000a6a0:	6a86      	ldr	r6, [r0, #40]	; 0x28
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
9000a6a2:	42b3      	cmp	r3, r6
9000a6a4:	d327      	bcc.n	9000a6f6 <JPEG_DMA_StartProcess+0x6a>
    return HAL_ERROR;
  }
  /* Set the JPEG MDMA In transfer complete callback */
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
  /* Set the MDMA In error callback */
  hjpeg->hdmain->XferErrorCallback = JPEG_MDMAErrorCallback;
9000a6a6:	4f1b      	ldr	r7, [pc, #108]	; (9000a714 <JPEG_DMA_StartProcess+0x88>)
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
9000a6a8:	f8df c074 	ldr.w	ip, [pc, #116]	; 9000a720 <JPEG_DMA_StartProcess+0x94>
  hjpeg->hdmain->XferErrorCallback = JPEG_MDMAErrorCallback;
9000a6ac:	654f      	str	r7, [r1, #84]	; 0x54
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
9000a6ae:	f8c1 c044 	str.w	ip, [r1, #68]	; 0x44

  /* Set the JPEG MDMA Out transfer complete callback */
  hjpeg->hdmaout->XferCpltCallback = JPEG_MDMAOutCpltCallback;
9000a6b2:	4919      	ldr	r1, [pc, #100]	; (9000a718 <JPEG_DMA_StartProcess+0x8c>)
  /* Set the MDMA In error callback */
  hjpeg->hdmaout->XferErrorCallback = JPEG_MDMAErrorCallback;
9000a6b4:	6547      	str	r7, [r0, #84]	; 0x54
  hjpeg->hdmaout->XferCpltCallback = JPEG_MDMAOutCpltCallback;
9000a6b6:	6441      	str	r1, [r0, #68]	; 0x44
  /* Set the MDMA Out Abort callback */
  hjpeg->hdmaout->XferAbortCallback = JPEG_MDMAOutAbortCallback;
9000a6b8:	4918      	ldr	r1, [pc, #96]	; (9000a71c <JPEG_DMA_StartProcess+0x90>)
9000a6ba:	6581      	str	r1, [r0, #88]	; 0x58

  if ((inXfrSize == 0UL) || (outXfrSize == 0UL))
9000a6bc:	b1a5      	cbz	r5, 9000a6e8 <JPEG_DMA_StartProcess+0x5c>
9000a6be:	b19e      	cbz	r6, 9000a6e8 <JPEG_DMA_StartProcess+0x5c>
  {
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
    return HAL_ERROR;
  }
  /*MDMA transfer size (BNDTR) must be a multiple of MDMA buffer size (TLEN)*/
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
9000a6c0:	fbb2 f1f5 	udiv	r1, r2, r5
9000a6c4:	fb05 2111 	mls	r1, r5, r1, r2
  /*MDMA transfer size (BNDTR) must be a multiple of MDMA buffer size (TLEN)*/
  hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % outXfrSize);


  /* Start MDMA FIFO Out transfer */
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000a6c8:	2501      	movs	r5, #1
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
9000a6ca:	1a52      	subs	r2, r2, r1
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000a6cc:	6821      	ldr	r1, [r4, #0]
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
9000a6ce:	62a2      	str	r2, [r4, #40]	; 0x28
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000a6d0:	3144      	adds	r1, #68	; 0x44
  hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % outXfrSize);
9000a6d2:	fbb3 f2f6 	udiv	r2, r3, r6
9000a6d6:	fb06 3212 	mls	r2, r6, r2, r3
9000a6da:	1a9b      	subs	r3, r3, r2
9000a6dc:	62e3      	str	r3, [r4, #44]	; 0x2c
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000a6de:	9500      	str	r5, [sp, #0]
9000a6e0:	69e2      	ldr	r2, [r4, #28]
9000a6e2:	f001 fbb5 	bl	9000be50 <HAL_MDMA_Start_IT>
9000a6e6:	b148      	cbz	r0, 9000a6fc <JPEG_DMA_StartProcess+0x70>
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000a6e8:	6d23      	ldr	r3, [r4, #80]	; 0x50
    return HAL_ERROR;
9000a6ea:	2001      	movs	r0, #1
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000a6ec:	f043 0304 	orr.w	r3, r3, #4
9000a6f0:	6523      	str	r3, [r4, #80]	; 0x50
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
    return HAL_ERROR;
  }

  return HAL_OK;
}
9000a6f2:	b003      	add	sp, #12
9000a6f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    return HAL_ERROR;
9000a6f6:	2001      	movs	r0, #1
}
9000a6f8:	b003      	add	sp, #12
9000a6fa:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
9000a6fc:	6822      	ldr	r2, [r4, #0]
9000a6fe:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000a700:	69a1      	ldr	r1, [r4, #24]
9000a702:	3240      	adds	r2, #64	; 0x40
9000a704:	9500      	str	r5, [sp, #0]
9000a706:	6b20      	ldr	r0, [r4, #48]	; 0x30
9000a708:	f001 fba2 	bl	9000be50 <HAL_MDMA_Start_IT>
9000a70c:	2800      	cmp	r0, #0
9000a70e:	d0f3      	beq.n	9000a6f8 <JPEG_DMA_StartProcess+0x6c>
9000a710:	e7ea      	b.n	9000a6e8 <JPEG_DMA_StartProcess+0x5c>
9000a712:	bf00      	nop
9000a714:	9000ac45 	.word	0x9000ac45
9000a718:	9000aebd 	.word	0x9000aebd
9000a71c:	9000af3d 	.word	0x9000af3d
9000a720:	9000ac71 	.word	0x9000ac71

9000a724 <HAL_JPEG_GetInfo.part.0>:
  if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF_1)
9000a724:	6803      	ldr	r3, [r0, #0]
9000a726:	685a      	ldr	r2, [r3, #4]
9000a728:	f002 0203 	and.w	r2, r2, #3
9000a72c:	2a02      	cmp	r2, #2
HAL_StatusTypeDef HAL_JPEG_GetInfo(JPEG_HandleTypeDef *hjpeg, JPEG_ConfTypeDef *pInfo)
9000a72e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9000a732:	4689      	mov	r9, r1
  if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF_1)
9000a734:	f000 8094 	beq.w	9000a860 <HAL_JPEG_GetInfo.part.0+0x13c>
  else if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == 0UL)
9000a738:	685c      	ldr	r4, [r3, #4]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000a73a:	685a      	ldr	r2, [r3, #4]
  else if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == 0UL)
9000a73c:	f014 0403 	ands.w	r4, r4, #3
9000a740:	d172      	bne.n	9000a828 <HAL_JPEG_GetInfo.part.0+0x104>
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000a742:	0c12      	lsrs	r2, r2, #16
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
9000a744:	600c      	str	r4, [r1, #0]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000a746:	608a      	str	r2, [r1, #8]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
9000a748:	68da      	ldr	r2, [r3, #12]
9000a74a:	0c12      	lsrs	r2, r2, #16
9000a74c:	60ca      	str	r2, [r1, #12]
  if ((pInfo->ColorSpace == JPEG_YCBCR_COLORSPACE) || (pInfo->ColorSpace == JPEG_CMYK_COLORSPACE))
9000a74e:	4a5f      	ldr	r2, [pc, #380]	; (9000a8cc <HAL_JPEG_GetInfo.part.0+0x1a8>)
  */
static uint32_t JPEG_GetQuality(JPEG_HandleTypeDef *hjpeg)
{
  uint32_t quality = 0;
  uint32_t quantRow, quantVal, scale, i, j;
  __IO uint32_t *tableAddress = hjpeg->Instance->QMEM0;
9000a750:	f103 0c50 	add.w	ip, r3, #80	; 0x50
      pInfo->ChromaSubsampling = JPEG_422_SUBSAMPLING; /*16x8 block*/
9000a754:	f8c9 4004 	str.w	r4, [r9, #4]
  uint32_t quality = 0;
9000a758:	2600      	movs	r6, #0
9000a75a:	f102 0540 	add.w	r5, r2, #64	; 0x40
        quality += 100UL;
      }
      else
      {
        /* Note that the quantization coefficients must be specified in the table in zigzag order */
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
9000a75e:	f04f 0e64 	mov.w	lr, #100	; 0x64
        {
          quality += (200UL - scale) / 2UL;
        }
        else
        {
          quality += 5000UL / scale;
9000a762:	f241 3488 	movw	r4, #5000	; 0x1388
9000a766:	e033      	b.n	9000a7d0 <HAL_JPEG_GetInfo.part.0+0xac>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
9000a768:	f892 8001 	ldrb.w	r8, [r2, #1]
9000a76c:	fb0e f707 	mul.w	r7, lr, r7
9000a770:	6bc1      	ldr	r1, [r0, #60]	; 0x3c
9000a772:	f811 8008 	ldrb.w	r8, [r1, r8]
9000a776:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
9000a77a:	2f64      	cmp	r7, #100	; 0x64
9000a77c:	d961      	bls.n	9000a842 <HAL_JPEG_GetInfo.part.0+0x11e>
          quality += 5000UL / scale;
9000a77e:	fbb4 f7f7 	udiv	r7, r4, r7
9000a782:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000a784:	f3c3 4707 	ubfx	r7, r3, #16, #8
      if (quantVal == 1UL)
9000a788:	2f01      	cmp	r7, #1
9000a78a:	d03d      	beq.n	9000a808 <HAL_JPEG_GetInfo.part.0+0xe4>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
9000a78c:	f892 8002 	ldrb.w	r8, [r2, #2]
9000a790:	fb0e f707 	mul.w	r7, lr, r7
9000a794:	6bc1      	ldr	r1, [r0, #60]	; 0x3c
9000a796:	f811 8008 	ldrb.w	r8, [r1, r8]
9000a79a:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
9000a79e:	2f64      	cmp	r7, #100	; 0x64
9000a7a0:	d94a      	bls.n	9000a838 <HAL_JPEG_GetInfo.part.0+0x114>
          quality += 5000UL / scale;
9000a7a2:	fbb4 f7f7 	udiv	r7, r4, r7
9000a7a6:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000a7a8:	0e1b      	lsrs	r3, r3, #24
      if (quantVal == 1UL)
9000a7aa:	2b01      	cmp	r3, #1
9000a7ac:	d030      	beq.n	9000a810 <HAL_JPEG_GetInfo.part.0+0xec>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
9000a7ae:	78d7      	ldrb	r7, [r2, #3]
9000a7b0:	fb0e f303 	mul.w	r3, lr, r3
9000a7b4:	6bc1      	ldr	r1, [r0, #60]	; 0x3c
9000a7b6:	5dcf      	ldrb	r7, [r1, r7]
9000a7b8:	fbb3 f3f7 	udiv	r3, r3, r7
        if (scale <= 100UL)
9000a7bc:	2b64      	cmp	r3, #100	; 0x64
9000a7be:	d94a      	bls.n	9000a856 <HAL_JPEG_GetInfo.part.0+0x132>
          quality += 5000UL / scale;
9000a7c0:	fbb4 f3f3 	udiv	r3, r4, r3
9000a7c4:	441e      	add	r6, r3
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
9000a7c6:	3204      	adds	r2, #4
        }
      }
    }

    i += 4UL;
    tableAddress ++;
9000a7c8:	f10c 0c04 	add.w	ip, ip, #4
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
9000a7cc:	4295      	cmp	r5, r2
9000a7ce:	d025      	beq.n	9000a81c <HAL_JPEG_GetInfo.part.0+0xf8>
    quantRow = *tableAddress;
9000a7d0:	f8dc 3000 	ldr.w	r3, [ip]
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000a7d4:	b2df      	uxtb	r7, r3
      if (quantVal == 1UL)
9000a7d6:	2f01      	cmp	r7, #1
9000a7d8:	d02c      	beq.n	9000a834 <HAL_JPEG_GetInfo.part.0+0x110>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
9000a7da:	f892 8000 	ldrb.w	r8, [r2]
9000a7de:	fb0e f707 	mul.w	r7, lr, r7
9000a7e2:	6bc1      	ldr	r1, [r0, #60]	; 0x3c
9000a7e4:	f811 8008 	ldrb.w	r8, [r1, r8]
9000a7e8:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
9000a7ec:	2f64      	cmp	r7, #100	; 0x64
9000a7ee:	d92d      	bls.n	9000a84c <HAL_JPEG_GetInfo.part.0+0x128>
          quality += 5000UL / scale;
9000a7f0:	fbb4 f7f7 	udiv	r7, r4, r7
9000a7f4:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000a7f6:	f3c3 2707 	ubfx	r7, r3, #8, #8
      if (quantVal == 1UL)
9000a7fa:	2f01      	cmp	r7, #1
9000a7fc:	d1b4      	bne.n	9000a768 <HAL_JPEG_GetInfo.part.0+0x44>
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000a7fe:	f3c3 4707 	ubfx	r7, r3, #16, #8
        quality += 100UL;
9000a802:	3664      	adds	r6, #100	; 0x64
      if (quantVal == 1UL)
9000a804:	2f01      	cmp	r7, #1
9000a806:	d1c1      	bne.n	9000a78c <HAL_JPEG_GetInfo.part.0+0x68>
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000a808:	0e1b      	lsrs	r3, r3, #24
        quality += 100UL;
9000a80a:	3664      	adds	r6, #100	; 0x64
      if (quantVal == 1UL)
9000a80c:	2b01      	cmp	r3, #1
9000a80e:	d1ce      	bne.n	9000a7ae <HAL_JPEG_GetInfo.part.0+0x8a>
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
9000a810:	3204      	adds	r2, #4
        quality += 100UL;
9000a812:	3664      	adds	r6, #100	; 0x64
    tableAddress ++;
9000a814:	f10c 0c04 	add.w	ip, ip, #4
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
9000a818:	4295      	cmp	r5, r2
9000a81a:	d1d9      	bne.n	9000a7d0 <HAL_JPEG_GetInfo.part.0+0xac>
  }

  return (quality / 64UL);
9000a81c:	09b6      	lsrs	r6, r6, #6
  return HAL_OK;
9000a81e:	2000      	movs	r0, #0
  pInfo->ImageQuality = JPEG_GetQuality(hjpeg);
9000a820:	f8c9 6010 	str.w	r6, [r9, #16]
}
9000a824:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  else if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF)
9000a828:	f002 0203 	and.w	r2, r2, #3
9000a82c:	2a03      	cmp	r2, #3
9000a82e:	d14a      	bne.n	9000a8c6 <HAL_JPEG_GetInfo.part.0+0x1a2>
9000a830:	2430      	movs	r4, #48	; 0x30
9000a832:	e016      	b.n	9000a862 <HAL_JPEG_GetInfo.part.0+0x13e>
        quality += 100UL;
9000a834:	3664      	adds	r6, #100	; 0x64
9000a836:	e7de      	b.n	9000a7f6 <HAL_JPEG_GetInfo.part.0+0xd2>
          quality += (200UL - scale) / 2UL;
9000a838:	f1c7 07c8 	rsb	r7, r7, #200	; 0xc8
9000a83c:	eb06 0657 	add.w	r6, r6, r7, lsr #1
9000a840:	e7b2      	b.n	9000a7a8 <HAL_JPEG_GetInfo.part.0+0x84>
9000a842:	f1c7 07c8 	rsb	r7, r7, #200	; 0xc8
9000a846:	eb06 0657 	add.w	r6, r6, r7, lsr #1
9000a84a:	e79b      	b.n	9000a784 <HAL_JPEG_GetInfo.part.0+0x60>
9000a84c:	f1c7 07c8 	rsb	r7, r7, #200	; 0xc8
9000a850:	eb06 0657 	add.w	r6, r6, r7, lsr #1
9000a854:	e7cf      	b.n	9000a7f6 <HAL_JPEG_GetInfo.part.0+0xd2>
9000a856:	f1c3 03c8 	rsb	r3, r3, #200	; 0xc8
9000a85a:	eb06 0653 	add.w	r6, r6, r3, lsr #1
9000a85e:	e7b2      	b.n	9000a7c6 <HAL_JPEG_GetInfo.part.0+0xa2>
9000a860:	2410      	movs	r4, #16
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000a862:	685a      	ldr	r2, [r3, #4]
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
9000a864:	f8c9 4000 	str.w	r4, [r9]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000a868:	0c12      	lsrs	r2, r2, #16
9000a86a:	f8c9 2008 	str.w	r2, [r9, #8]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
9000a86e:	68da      	ldr	r2, [r3, #12]
    yblockNb  = (hjpeg->Instance->CONFR4 & JPEG_CONFR4_NB) >> 4;
9000a870:	691d      	ldr	r5, [r3, #16]
    cBblockNb = (hjpeg->Instance->CONFR5 & JPEG_CONFR5_NB) >> 4;
9000a872:	695f      	ldr	r7, [r3, #20]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
9000a874:	0c12      	lsrs	r2, r2, #16
    cRblockNb = (hjpeg->Instance->CONFR6 & JPEG_CONFR6_NB) >> 4;
9000a876:	699e      	ldr	r6, [r3, #24]
    if ((yblockNb == 1UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
9000a878:	f017 0ff0 	tst.w	r7, #240	; 0xf0
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
9000a87c:	f8c9 200c 	str.w	r2, [r9, #12]
    cRblockNb = (hjpeg->Instance->CONFR6 & JPEG_CONFR6_NB) >> 4;
9000a880:	ea4f 1616 	mov.w	r6, r6, lsr #4
    yblockNb  = (hjpeg->Instance->CONFR4 & JPEG_CONFR4_NB) >> 4;
9000a884:	ea4f 1215 	mov.w	r2, r5, lsr #4
9000a888:	f3c5 1503 	ubfx	r5, r5, #4, #4
    cBblockNb = (hjpeg->Instance->CONFR5 & JPEG_CONFR5_NB) >> 4;
9000a88c:	ea4f 1c17 	mov.w	ip, r7, lsr #4
    if ((yblockNb == 1UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
9000a890:	d108      	bne.n	9000a8a4 <HAL_JPEG_GetInfo.part.0+0x180>
9000a892:	2d01      	cmp	r5, #1
9000a894:	d106      	bne.n	9000a8a4 <HAL_JPEG_GetInfo.part.0+0x180>
9000a896:	f016 0f0f 	tst.w	r6, #15
9000a89a:	bf0c      	ite	eq
9000a89c:	2401      	moveq	r4, #1
9000a89e:	2400      	movne	r4, #0
9000a8a0:	0064      	lsls	r4, r4, #1
9000a8a2:	e754      	b.n	9000a74e <HAL_JPEG_GetInfo.part.0+0x2a>
    else if ((yblockNb == 0UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
9000a8a4:	ea42 020c 	orr.w	r2, r2, ip
9000a8a8:	f012 040f 	ands.w	r4, r2, #15
9000a8ac:	f43f af4f 	beq.w	9000a74e <HAL_JPEG_GetInfo.part.0+0x2a>
    else if ((yblockNb == 3UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
9000a8b0:	ea4c 0206 	orr.w	r2, ip, r6
9000a8b4:	f3c2 0203 	ubfx	r2, r2, #0, #4
9000a8b8:	2d03      	cmp	r5, #3
9000a8ba:	bf08      	it	eq
9000a8bc:	2a00      	cmpeq	r2, #0
9000a8be:	bf0c      	ite	eq
9000a8c0:	2401      	moveq	r4, #1
9000a8c2:	2400      	movne	r4, #0
9000a8c4:	e743      	b.n	9000a74e <HAL_JPEG_GetInfo.part.0+0x2a>
    return HAL_ERROR;
9000a8c6:	2001      	movs	r0, #1
}
9000a8c8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9000a8cc:	9002b88c 	.word	0x9002b88c

9000a8d0 <HAL_JPEG_Init>:
  if (hjpeg == NULL)
9000a8d0:	2800      	cmp	r0, #0
9000a8d2:	f000 810b 	beq.w	9000aaec <HAL_JPEG_Init+0x21c>
{
9000a8d6:	b570      	push	{r4, r5, r6, lr}
  if (hjpeg->State == HAL_JPEG_STATE_RESET)
9000a8d8:	f890 304d 	ldrb.w	r3, [r0, #77]	; 0x4d
9000a8dc:	4604      	mov	r4, r0
9000a8de:	f003 02ff 	and.w	r2, r3, #255	; 0xff
9000a8e2:	2b00      	cmp	r3, #0
9000a8e4:	f000 80fd 	beq.w	9000aae2 <HAL_JPEG_Init+0x212>
  __HAL_JPEG_ENABLE(hjpeg);
9000a8e8:	6822      	ldr	r2, [r4, #0]
  hjpeg->State = HAL_JPEG_STATE_BUSY;
9000a8ea:	2102      	movs	r1, #2
  hjpeg->QuantTable2 = NULL;
9000a8ec:	2300      	movs	r3, #0
  hjpeg->QuantTable0 = (uint8_t *)((uint32_t)JPEG_LUM_QuantTable);
9000a8ee:	4880      	ldr	r0, [pc, #512]	; (9000aaf0 <HAL_JPEG_Init+0x220>)
  hjpeg->State = HAL_JPEG_STATE_BUSY;
9000a8f0:	f884 104d 	strb.w	r1, [r4, #77]	; 0x4d
  __HAL_JPEG_ENABLE(hjpeg);
9000a8f4:	6b11      	ldr	r1, [r2, #48]	; 0x30
9000a8f6:	f041 0101 	orr.w	r1, r1, #1
9000a8fa:	6311      	str	r1, [r2, #48]	; 0x30
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000a8fc:	6811      	ldr	r1, [r2, #0]
9000a8fe:	f021 0101 	bic.w	r1, r1, #1
9000a902:	6011      	str	r1, [r2, #0]
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000a904:	6b11      	ldr	r1, [r2, #48]	; 0x30
9000a906:	f021 017e 	bic.w	r1, r1, #126	; 0x7e
9000a90a:	6311      	str	r1, [r2, #48]	; 0x30
  hjpeg->Instance->CR |= JPEG_CR_IFF;
9000a90c:	6b11      	ldr	r1, [r2, #48]	; 0x30
9000a90e:	f441 5100 	orr.w	r1, r1, #8192	; 0x2000
9000a912:	6311      	str	r1, [r2, #48]	; 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
9000a914:	6b11      	ldr	r1, [r2, #48]	; 0x30
9000a916:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
9000a91a:	6311      	str	r1, [r2, #48]	; 0x30
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
9000a91c:	6b91      	ldr	r1, [r2, #56]	; 0x38
9000a91e:	f041 0160 	orr.w	r1, r1, #96	; 0x60
9000a922:	6391      	str	r1, [r2, #56]	; 0x38
  hjpeg->QuantTable1 = (uint8_t *)((uint32_t)JPEG_CHROM_QuantTable);
9000a924:	4973      	ldr	r1, [pc, #460]	; (9000aaf4 <HAL_JPEG_Init+0x224>)
  hjpeg->QuantTable0 = (uint8_t *)((uint32_t)JPEG_LUM_QuantTable);
9000a926:	63e0      	str	r0, [r4, #60]	; 0x3c
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
9000a928:	2001      	movs	r0, #1
  hjpeg->QuantTable3 = NULL;
9000a92a:	64a3      	str	r3, [r4, #72]	; 0x48
  hjpeg->QuantTable1 = (uint8_t *)((uint32_t)JPEG_CHROM_QuantTable);
9000a92c:	e9c4 1310 	strd	r1, r3, [r4, #64]	; 0x40
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
9000a930:	f8c2 336c 	str.w	r3, [r2, #876]	; 0x36c
9000a934:	f04f 3101 	mov.w	r1, #16843009	; 0x1010101
9000a938:	4b6f      	ldr	r3, [pc, #444]	; (9000aaf8 <HAL_JPEG_Init+0x228>)
9000a93a:	f8c2 0368 	str.w	r0, [r2, #872]	; 0x368
9000a93e:	f8c2 1364 	str.w	r1, [r2, #868]	; 0x364
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000a942:	486e      	ldr	r0, [pc, #440]	; (9000aafc <HAL_JPEG_Init+0x22c>)
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
9000a944:	f8c2 3360 	str.w	r3, [r2, #864]	; 0x360
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000a948:	4b6d      	ldr	r3, [pc, #436]	; (9000ab00 <HAL_JPEG_Init+0x230>)
9000a94a:	f8c2 0378 	str.w	r0, [r2, #888]	; 0x378
9000a94e:	496d      	ldr	r1, [pc, #436]	; (9000ab04 <HAL_JPEG_Init+0x234>)
9000a950:	f8c2 3374 	str.w	r3, [r2, #884]	; 0x374
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
9000a954:	4b6c      	ldr	r3, [pc, #432]	; (9000ab08 <HAL_JPEG_Init+0x238>)
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000a956:	f8c2 1370 	str.w	r1, [r2, #880]	; 0x370
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
9000a95a:	486c      	ldr	r0, [pc, #432]	; (9000ab0c <HAL_JPEG_Init+0x23c>)
9000a95c:	f8c2 3388 	str.w	r3, [r2, #904]	; 0x388
9000a960:	496b      	ldr	r1, [pc, #428]	; (9000ab10 <HAL_JPEG_Init+0x240>)
9000a962:	4b6c      	ldr	r3, [pc, #432]	; (9000ab14 <HAL_JPEG_Init+0x244>)
9000a964:	f8c2 0384 	str.w	r0, [r2, #900]	; 0x384
9000a968:	f8c2 1380 	str.w	r1, [r2, #896]	; 0x380
9000a96c:	f8c2 337c 	str.w	r3, [r2, #892]	; 0x37c
  value = value | (((uint32_t)HuffTableAC0->HuffVal[161] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC0->HuffVal[160] & 0xFFUL);
9000a970:	f64f 23f9 	movw	r3, #64249	; 0xfaf9
  value = *address & 0xFFFF0000U;
9000a974:	f8d2 042c 	ldr.w	r0, [r2, #1068]	; 0x42c
9000a978:	4967      	ldr	r1, [pc, #412]	; (9000ab18 <HAL_JPEG_Init+0x248>)
9000a97a:	4001      	ands	r1, r0
  address--; /* address = hjpeg->Instance->DHTMEM + 50*/
9000a97c:	f502 6085 	add.w	r0, r2, #1064	; 0x428
  value = value | (((uint32_t)HuffTableAC0->HuffVal[161] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC0->HuffVal[160] & 0xFFUL);
9000a980:	430b      	orrs	r3, r1
  *address = value;
9000a982:	4966      	ldr	r1, [pc, #408]	; (9000ab1c <HAL_JPEG_Init+0x24c>)
9000a984:	f1a1 06a0 	sub.w	r6, r1, #160	; 0xa0
9000a988:	f8c2 342c 	str.w	r3, [r2, #1068]	; 0x42c
               (((uint32_t)HuffTableAC0->HuffVal[index - 2UL] & 0xFFUL) << 16) |
9000a98c:	f891 30ae 	ldrb.w	r3, [r1, #174]	; 0xae
  while (index > 3UL)
9000a990:	3904      	subs	r1, #4
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000a992:	f891 e0b3 	ldrb.w	lr, [r1, #179]	; 0xb3
               (((uint32_t)HuffTableAC0->HuffVal[index - 2UL] & 0xFFUL) << 16) |
9000a996:	041b      	lsls	r3, r3, #16
               ((uint32_t)HuffTableAC0->HuffVal[index - 4UL] & 0xFFUL);
9000a998:	f891 c0b0 	ldrb.w	ip, [r1, #176]	; 0xb0
               (((uint32_t)HuffTableAC0->HuffVal[index - 3UL] & 0xFFUL) << 8) |
9000a99c:	f891 50b1 	ldrb.w	r5, [r1, #177]	; 0xb1
  while (index > 3UL)
9000a9a0:	42b1      	cmp	r1, r6
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000a9a2:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
               (((uint32_t)HuffTableAC0->HuffVal[index - 3UL] & 0xFFUL) << 8) |
9000a9a6:	ea43 030c 	orr.w	r3, r3, ip
9000a9aa:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000a9ae:	f840 3904 	str.w	r3, [r0], #-4
  while (index > 3UL)
9000a9b2:	d1eb      	bne.n	9000a98c <HAL_JPEG_Init+0xbc>
  value = *address & 0x0000FFFFU;
9000a9b4:	f8d2 342c 	ldr.w	r3, [r2, #1068]	; 0x42c
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000a9b8:	f04f 3101 	mov.w	r1, #16843009	; 0x1010101
  value = *address & 0xFFFF0000U;
9000a9bc:	4856      	ldr	r0, [pc, #344]	; (9000ab18 <HAL_JPEG_Init+0x248>)
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000a9be:	2501      	movs	r5, #1
  value = *address & 0x0000FFFFU;
9000a9c0:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableDC1->Bits[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableDC1->Bits[0] & 0xFFUL) << 16);
9000a9c2:	f043 7340 	orr.w	r3, r3, #50331648	; 0x3000000
  *address = value;
9000a9c6:	f8c2 342c 	str.w	r3, [r2, #1068]	; 0x42c
  value = *address & 0xFFFF0000U;
9000a9ca:	f8d2 343c 	ldr.w	r3, [r2, #1084]	; 0x43c
9000a9ce:	4003      	ands	r3, r0
  *address = value;
9000a9d0:	f8c2 343c 	str.w	r3, [r2, #1084]	; 0x43c
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000a9d4:	f8c2 5438 	str.w	r5, [r2, #1080]	; 0x438
9000a9d8:	f8c2 1434 	str.w	r1, [r2, #1076]	; 0x434
9000a9dc:	f8c2 1430 	str.w	r1, [r2, #1072]	; 0x430
  value = value | (((uint32_t)HuffTableDC1->HuffVal[11] & 0xFFUL) << 8) | ((uint32_t)HuffTableDC1->HuffVal[10] & 0xFFUL);
9000a9e0:	f640 310a 	movw	r1, #2826	; 0xb0a
  value = *address & 0x0000FFFFUL;
9000a9e4:	f8d2 343c 	ldr.w	r3, [r2, #1084]	; 0x43c
9000a9e8:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableDC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableDC1->HuffVal[0] & 0xFFUL) <<
9000a9ea:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
  *address = value;
9000a9ee:	f8c2 343c 	str.w	r3, [r2, #1084]	; 0x43c
  value = *address & 0xFFFF0000UL;
9000a9f2:	f8d2 3448 	ldr.w	r3, [r2, #1096]	; 0x448
9000a9f6:	4003      	ands	r3, r0
  value = value | (((uint32_t)HuffTableDC1->HuffVal[11] & 0xFFUL) << 8) | ((uint32_t)HuffTableDC1->HuffVal[10] & 0xFFUL);
9000a9f8:	4319      	orrs	r1, r3
    *address = (((uint32_t)HuffTableDC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
9000a9fa:	4b49      	ldr	r3, [pc, #292]	; (9000ab20 <HAL_JPEG_Init+0x250>)
  *address = value;
9000a9fc:	f8c2 1448 	str.w	r1, [r2, #1096]	; 0x448
  value = value | (((uint32_t)HuffTableAC1->Bits[15] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC1->Bits[14] & 0xFFUL);
9000aa00:	f247 7102 	movw	r1, #30466	; 0x7702
    *address = (((uint32_t)HuffTableDC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
9000aa04:	f8c2 3444 	str.w	r3, [r2, #1092]	; 0x444
9000aa08:	f1a3 3304 	sub.w	r3, r3, #67372036	; 0x4040404
9000aa0c:	f8c2 3440 	str.w	r3, [r2, #1088]	; 0x440
  value = *address & 0x0000FFFFU;
9000aa10:	f8d2 3448 	ldr.w	r3, [r2, #1096]	; 0x448
9000aa14:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableAC1->Bits[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->Bits[0] & 0xFFUL) << 16);
9000aa16:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
  *address = value;
9000aa1a:	f8c2 3448 	str.w	r3, [r2, #1096]	; 0x448
  value = *address & 0xFFFF0000U;
9000aa1e:	f8d2 3458 	ldr.w	r3, [r2, #1112]	; 0x458
9000aa22:	4003      	ands	r3, r0
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000aa24:	483f      	ldr	r0, [pc, #252]	; (9000ab24 <HAL_JPEG_Init+0x254>)
  value = value | (((uint32_t)HuffTableAC1->Bits[15] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC1->Bits[14] & 0xFFUL);
9000aa26:	4319      	orrs	r1, r3
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000aa28:	4b3f      	ldr	r3, [pc, #252]	; (9000ab28 <HAL_JPEG_Init+0x258>)
  *address = value;
9000aa2a:	f8c2 1458 	str.w	r1, [r2, #1112]	; 0x458
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000aa2e:	493f      	ldr	r1, [pc, #252]	; (9000ab2c <HAL_JPEG_Init+0x25c>)
9000aa30:	f8c2 0454 	str.w	r0, [r2, #1108]	; 0x454
  address = (hjpeg->Instance->DHTMEM + 102);
9000aa34:	f502 609f 	add.w	r0, r2, #1272	; 0x4f8
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000aa38:	f8c2 1450 	str.w	r1, [r2, #1104]	; 0x450
9000aa3c:	f8c2 344c 	str.w	r3, [r2, #1100]	; 0x44c
  value = *address & 0x0000FFFFUL;
9000aa40:	f8d2 3458 	ldr.w	r3, [r2, #1112]	; 0x458
  value = value | (((uint32_t)HuffTableAC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->HuffVal[0] & 0xFFUL) <<
9000aa44:	493a      	ldr	r1, [pc, #232]	; (9000ab30 <HAL_JPEG_Init+0x260>)
  value = *address & 0x0000FFFFUL;
9000aa46:	b29b      	uxth	r3, r3
9000aa48:	f1a1 06a0 	sub.w	r6, r1, #160	; 0xa0
  value = value | (((uint32_t)HuffTableAC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->HuffVal[0] & 0xFFUL) <<
9000aa4c:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
  *address = value;
9000aa50:	f8c2 3458 	str.w	r3, [r2, #1112]	; 0x458
               (((uint32_t)HuffTableAC1->HuffVal[index] & 0xFFUL) << 16) |
9000aa54:	f891 30b0 	ldrb.w	r3, [r1, #176]	; 0xb0
  while (index > 3UL)
9000aa58:	3904      	subs	r1, #4
    *address = (((uint32_t)HuffTableAC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
9000aa5a:	f891 50b5 	ldrb.w	r5, [r1, #181]	; 0xb5
               (((uint32_t)HuffTableAC1->HuffVal[index] & 0xFFUL) << 16) |
9000aa5e:	041b      	lsls	r3, r3, #16
               ((uint32_t)HuffTableAC1->HuffVal[index - 2UL] & 0xFFUL);
9000aa60:	f891 e0b2 	ldrb.w	lr, [r1, #178]	; 0xb2
               (((uint32_t)HuffTableAC1->HuffVal[index - 1UL] & 0xFFUL) << 8) |
9000aa64:	f891 c0b3 	ldrb.w	ip, [r1, #179]	; 0xb3
  while (index > 3UL)
9000aa68:	42b1      	cmp	r1, r6
               (((uint32_t)HuffTableAC1->HuffVal[index - 1UL] & 0xFFUL) << 8) |
9000aa6a:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
9000aa6e:	ea43 030e 	orr.w	r3, r3, lr
9000aa72:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
    *address = (((uint32_t)HuffTableAC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
9000aa76:	f840 3904 	str.w	r3, [r0], #-4
  while (index > 3UL)
9000aa7a:	d1eb      	bne.n	9000aa54 <HAL_JPEG_Init+0x184>
  error = JPEG_Set_HuffAC_Mem(hjpeg, (JPEG_ACHuffTableTypeDef *)(uint32_t)&JPEG_ACLUM_HuffTable,
9000aa7c:	f502 62a0 	add.w	r2, r2, #1280	; 0x500
9000aa80:	4926      	ldr	r1, [pc, #152]	; (9000ab1c <HAL_JPEG_Init+0x24c>)
9000aa82:	4620      	mov	r0, r4
9000aa84:	f7ff fd3a 	bl	9000a4fc <JPEG_Set_HuffAC_Mem>
  if (error != HAL_OK)
9000aa88:	b118      	cbz	r0, 9000aa92 <HAL_JPEG_Init+0x1c2>
    hjpeg->ErrorCode = HAL_JPEG_ERROR_HUFF_TABLE;
9000aa8a:	2301      	movs	r3, #1
    return HAL_ERROR;
9000aa8c:	4618      	mov	r0, r3
    hjpeg->ErrorCode = HAL_JPEG_ERROR_HUFF_TABLE;
9000aa8e:	6523      	str	r3, [r4, #80]	; 0x50
}
9000aa90:	bd70      	pop	{r4, r5, r6, pc}
                              (hjpeg->Instance->HUFFENC_AC1));
9000aa92:	6822      	ldr	r2, [r4, #0]
  error = JPEG_Set_HuffAC_Mem(hjpeg, (JPEG_ACHuffTableTypeDef *)(uint32_t)&JPEG_ACCHROM_HuffTable,
9000aa94:	4620      	mov	r0, r4
9000aa96:	4926      	ldr	r1, [pc, #152]	; (9000ab30 <HAL_JPEG_Init+0x260>)
9000aa98:	f502 62cc 	add.w	r2, r2, #1632	; 0x660
9000aa9c:	f7ff fd2e 	bl	9000a4fc <JPEG_Set_HuffAC_Mem>
  if (error != HAL_OK)
9000aaa0:	2800      	cmp	r0, #0
9000aaa2:	d1f2      	bne.n	9000aa8a <HAL_JPEG_Init+0x1ba>
                              hjpeg->Instance->HUFFENC_DC0);
9000aaa4:	6822      	ldr	r2, [r4, #0]
  error = JPEG_Set_HuffDC_Mem(hjpeg, (JPEG_DCHuffTableTypeDef *)(uint32_t)&JPEG_DCLUM_HuffTable,
9000aaa6:	4620      	mov	r0, r4
9000aaa8:	4922      	ldr	r1, [pc, #136]	; (9000ab34 <HAL_JPEG_Init+0x264>)
9000aaaa:	f502 62f8 	add.w	r2, r2, #1984	; 0x7c0
9000aaae:	f7ff fc7b 	bl	9000a3a8 <JPEG_Set_HuffDC_Mem>
  if (error != HAL_OK)
9000aab2:	2800      	cmp	r0, #0
9000aab4:	d1e9      	bne.n	9000aa8a <HAL_JPEG_Init+0x1ba>
                              hjpeg->Instance->HUFFENC_DC1);
9000aab6:	6822      	ldr	r2, [r4, #0]
  error = JPEG_Set_HuffDC_Mem(hjpeg, (JPEG_DCHuffTableTypeDef *)(uint32_t)&JPEG_DCCHROM_HuffTable,
9000aab8:	4620      	mov	r0, r4
9000aaba:	491f      	ldr	r1, [pc, #124]	; (9000ab38 <HAL_JPEG_Init+0x268>)
9000aabc:	f502 62fc 	add.w	r2, r2, #2016	; 0x7e0
9000aac0:	f7ff fc72 	bl	9000a3a8 <JPEG_Set_HuffDC_Mem>
  if (JPEG_Set_HuffEnc_Mem(hjpeg) != HAL_OK)
9000aac4:	2800      	cmp	r0, #0
9000aac6:	d1e0      	bne.n	9000aa8a <HAL_JPEG_Init+0x1ba>
  hjpeg->Instance->CONFR1 |= JPEG_CONFR1_HDR;
9000aac8:	6822      	ldr	r2, [r4, #0]
  hjpeg->State = HAL_JPEG_STATE_READY;
9000aaca:	2101      	movs	r1, #1
  hjpeg->Instance->CONFR1 |= JPEG_CONFR1_HDR;
9000aacc:	6853      	ldr	r3, [r2, #4]
9000aace:	f443 7380 	orr.w	r3, r3, #256	; 0x100
9000aad2:	6053      	str	r3, [r2, #4]
  hjpeg->JpegInCount = 0;
9000aad4:	6220      	str	r0, [r4, #32]
  hjpeg->JpegOutCount = 0;
9000aad6:	6260      	str	r0, [r4, #36]	; 0x24
  hjpeg->State = HAL_JPEG_STATE_READY;
9000aad8:	f884 104d 	strb.w	r1, [r4, #77]	; 0x4d
  hjpeg->ErrorCode = HAL_JPEG_ERROR_NONE;
9000aadc:	6520      	str	r0, [r4, #80]	; 0x50
  hjpeg->Context = 0;
9000aade:	6560      	str	r0, [r4, #84]	; 0x54
}
9000aae0:	bd70      	pop	{r4, r5, r6, pc}
    hjpeg->Lock = HAL_UNLOCKED;
9000aae2:	f880 204c 	strb.w	r2, [r0, #76]	; 0x4c
    HAL_JPEG_MspInit(hjpeg);
9000aae6:	f7f8 fa8d 	bl	90003004 <HAL_JPEG_MspInit>
9000aaea:	e6fd      	b.n	9000a8e8 <HAL_JPEG_Init+0x18>
    return HAL_ERROR;
9000aaec:	2001      	movs	r0, #1
}
9000aaee:	4770      	bx	lr
9000aaf0:	9002b84c 	.word	0x9002b84c
9000aaf4:	9002b7d4 	.word	0x9002b7d4
9000aaf8:	01050100 	.word	0x01050100
9000aafc:	0b0a0908 	.word	0x0b0a0908
9000ab00:	07060504 	.word	0x07060504
9000ab04:	03020100 	.word	0x03020100
9000ab08:	7d010000 	.word	0x7d010000
9000ab0c:	04040505 	.word	0x04040505
9000ab10:	03040203 	.word	0x03040203
9000ab14:	03010200 	.word	0x03010200
9000ab18:	ffff0000 	.word	0xffff0000
9000ab1c:	9002b720 	.word	0x9002b720
9000ab20:	09080706 	.word	0x09080706
9000ab24:	01000404 	.word	0x01000404
9000ab28:	04040201 	.word	0x04040201
9000ab2c:	05070403 	.word	0x05070403
9000ab30:	9002b66c 	.word	0x9002b66c
9000ab34:	9002b830 	.word	0x9002b830
9000ab38:	9002b814 	.word	0x9002b814

9000ab3c <HAL_JPEG_Decode_DMA>:
  if ((hjpeg == NULL) || (pDataIn == NULL) || (pDataOutMCU == NULL))
9000ab3c:	2b00      	cmp	r3, #0
9000ab3e:	bf18      	it	ne
9000ab40:	2900      	cmpne	r1, #0
9000ab42:	d03b      	beq.n	9000abbc <HAL_JPEG_Decode_DMA+0x80>
{
9000ab44:	b570      	push	{r4, r5, r6, lr}
  if ((hjpeg == NULL) || (pDataIn == NULL) || (pDataOutMCU == NULL))
9000ab46:	fab0 f580 	clz	r5, r0
9000ab4a:	4604      	mov	r4, r0
9000ab4c:	096d      	lsrs	r5, r5, #5
9000ab4e:	b330      	cbz	r0, 9000ab9e <HAL_JPEG_Decode_DMA+0x62>
  __HAL_LOCK(hjpeg);
9000ab50:	f890 c04c 	ldrb.w	ip, [r0, #76]	; 0x4c
9000ab54:	f1bc 0f01 	cmp.w	ip, #1
9000ab58:	d02e      	beq.n	9000abb8 <HAL_JPEG_Decode_DMA+0x7c>
  if (hjpeg->State == HAL_JPEG_STATE_READY)
9000ab5a:	f890 c04d 	ldrb.w	ip, [r0, #77]	; 0x4d
  __HAL_LOCK(hjpeg);
9000ab5e:	f04f 0e01 	mov.w	lr, #1
  if (hjpeg->State == HAL_JPEG_STATE_READY)
9000ab62:	45f4      	cmp	ip, lr
9000ab64:	fa5f f68c 	uxtb.w	r6, ip
  __HAL_LOCK(hjpeg);
9000ab68:	f880 e04c 	strb.w	lr, [r0, #76]	; 0x4c
  if (hjpeg->State == HAL_JPEG_STATE_READY)
9000ab6c:	d119      	bne.n	9000aba2 <HAL_JPEG_Decode_DMA+0x66>
    hjpeg->InDataLength = InDataLength;
9000ab6e:	6282      	str	r2, [r0, #40]	; 0x28
    hjpeg->pJpegOutBuffPtr = pDataOutMCU;
9000ab70:	e9c0 1306 	strd	r1, r3, [r0, #24]
    hjpeg->OutDataLength = OutDataLength;
9000ab74:	9b04      	ldr	r3, [sp, #16]
9000ab76:	62c3      	str	r3, [r0, #44]	; 0x2c
    hjpeg->State = HAL_JPEG_STATE_BUSY_DECODING;
9000ab78:	2304      	movs	r3, #4
9000ab7a:	f880 304d 	strb.w	r3, [r0, #77]	; 0x4d
    hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK);
9000ab7e:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000ab80:	f023 030f 	bic.w	r3, r3, #15
9000ab84:	6543      	str	r3, [r0, #84]	; 0x54
    hjpeg->Context |= (JPEG_CONTEXT_DECODE | JPEG_CONTEXT_DMA);
9000ab86:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000ab88:	f043 030e 	orr.w	r3, r3, #14
9000ab8c:	6543      	str	r3, [r0, #84]	; 0x54
    hjpeg->JpegInCount = 0;
9000ab8e:	6205      	str	r5, [r0, #32]
    hjpeg->JpegOutCount = 0;
9000ab90:	6245      	str	r5, [r0, #36]	; 0x24
    JPEG_Init_Process(hjpeg);
9000ab92:	f7ff fd3d 	bl	9000a610 <JPEG_Init_Process>
    if (JPEG_DMA_StartProcess(hjpeg) != HAL_OK)
9000ab96:	f7ff fd79 	bl	9000a68c <JPEG_DMA_StartProcess>
9000ab9a:	b930      	cbnz	r0, 9000abaa <HAL_JPEG_Decode_DMA+0x6e>
}
9000ab9c:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_ERROR;
9000ab9e:	2001      	movs	r0, #1
}
9000aba0:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_BUSY;
9000aba2:	2002      	movs	r0, #2
    __HAL_UNLOCK(hjpeg);
9000aba4:	f884 504c 	strb.w	r5, [r4, #76]	; 0x4c
}
9000aba8:	bd70      	pop	{r4, r5, r6, pc}
      hjpeg->State = HAL_JPEG_STATE_ERROR;
9000abaa:	2306      	movs	r3, #6
      return HAL_ERROR;
9000abac:	4630      	mov	r0, r6
      __HAL_UNLOCK(hjpeg);
9000abae:	f884 504c 	strb.w	r5, [r4, #76]	; 0x4c
      hjpeg->State = HAL_JPEG_STATE_ERROR;
9000abb2:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
}
9000abb6:	bd70      	pop	{r4, r5, r6, pc}
  __HAL_LOCK(hjpeg);
9000abb8:	2002      	movs	r0, #2
}
9000abba:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_ERROR;
9000abbc:	2001      	movs	r0, #1
}
9000abbe:	4770      	bx	lr

9000abc0 <HAL_JPEG_Pause>:
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000abc0:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000abc2:	f003 030c 	and.w	r3, r3, #12
9000abc6:	2b0c      	cmp	r3, #12
9000abc8:	d01a      	beq.n	9000ac00 <HAL_JPEG_Pause+0x40>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000abca:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000abcc:	f003 030c 	and.w	r3, r3, #12
9000abd0:	2b08      	cmp	r3, #8
9000abd2:	d001      	beq.n	9000abd8 <HAL_JPEG_Pause+0x18>
}
9000abd4:	2000      	movs	r0, #0
9000abd6:	4770      	bx	lr
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
9000abd8:	07ca      	lsls	r2, r1, #31
9000abda:	d41f      	bmi.n	9000ac1c <HAL_JPEG_Pause+0x5c>
9000abdc:	f04f 3cff 	mov.w	ip, #4294967295
9000abe0:	f06f 0228 	mvn.w	r2, #40	; 0x28
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
9000abe4:	078b      	lsls	r3, r1, #30
9000abe6:	d504      	bpl.n	9000abf2 <HAL_JPEG_Pause+0x32>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_OUTPUT;
9000abe8:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000abea:	4694      	mov	ip, r2
9000abec:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
9000abf0:	6543      	str	r3, [r0, #84]	; 0x54
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
9000abf2:	6802      	ldr	r2, [r0, #0]
}
9000abf4:	2000      	movs	r0, #0
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
9000abf6:	6b13      	ldr	r3, [r2, #48]	; 0x30
9000abf8:	ea03 030c 	and.w	r3, r3, ip
9000abfc:	6313      	str	r3, [r2, #48]	; 0x30
}
9000abfe:	4770      	bx	lr
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
9000ac00:	07cb      	lsls	r3, r1, #31
9000ac02:	d503      	bpl.n	9000ac0c <HAL_JPEG_Pause+0x4c>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000ac04:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000ac06:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
9000ac0a:	6543      	str	r3, [r0, #84]	; 0x54
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
9000ac0c:	0789      	lsls	r1, r1, #30
9000ac0e:	d5e1      	bpl.n	9000abd4 <HAL_JPEG_Pause+0x14>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_OUTPUT;
9000ac10:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000ac12:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
9000ac16:	6543      	str	r3, [r0, #84]	; 0x54
}
9000ac18:	2000      	movs	r0, #0
9000ac1a:	4770      	bx	lr
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000ac1c:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000ac1e:	f06f 0c06 	mvn.w	ip, #6
9000ac22:	f06f 022e 	mvn.w	r2, #46	; 0x2e
9000ac26:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
9000ac2a:	6543      	str	r3, [r0, #84]	; 0x54
      mask |= (JPEG_IT_IFT | JPEG_IT_IFNF);
9000ac2c:	e7da      	b.n	9000abe4 <HAL_JPEG_Pause+0x24>
9000ac2e:	bf00      	nop

9000ac30 <HAL_JPEG_ConfigInputBuffer>:
  hjpeg->pJpegInBuffPtr =  pNewInputBuffer;
9000ac30:	6181      	str	r1, [r0, #24]
  hjpeg->InDataLength = InDataLength;
9000ac32:	6282      	str	r2, [r0, #40]	; 0x28
}
9000ac34:	4770      	bx	lr
9000ac36:	bf00      	nop

9000ac38 <HAL_JPEG_ConfigOutputBuffer>:
  hjpeg->pJpegOutBuffPtr = pNewOutputBuffer;
9000ac38:	61c1      	str	r1, [r0, #28]
  hjpeg->OutDataLength = OutDataLength;
9000ac3a:	62c2      	str	r2, [r0, #44]	; 0x2c
}
9000ac3c:	4770      	bx	lr
9000ac3e:	bf00      	nop

9000ac40 <HAL_JPEG_EncodeCpltCallback>:
9000ac40:	4770      	bx	lr
9000ac42:	bf00      	nop

9000ac44 <JPEG_MDMAErrorCallback>:
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
9000ac44:	6c00      	ldr	r0, [r0, #64]	; 0x40
  hjpeg->State = HAL_JPEG_STATE_READY;
9000ac46:	2101      	movs	r1, #1
{
9000ac48:	b508      	push	{r3, lr}
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000ac4a:	6803      	ldr	r3, [r0, #0]
9000ac4c:	681a      	ldr	r2, [r3, #0]
9000ac4e:	f022 0201 	bic.w	r2, r2, #1
9000ac52:	601a      	str	r2, [r3, #0]
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000ac54:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000ac56:	f022 027e 	bic.w	r2, r2, #126	; 0x7e
9000ac5a:	631a      	str	r2, [r3, #48]	; 0x30
  hjpeg->State = HAL_JPEG_STATE_READY;
9000ac5c:	f880 104d 	strb.w	r1, [r0, #77]	; 0x4d
  hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000ac60:	6d03      	ldr	r3, [r0, #80]	; 0x50
9000ac62:	f043 0304 	orr.w	r3, r3, #4
9000ac66:	6503      	str	r3, [r0, #80]	; 0x50
  HAL_JPEG_ErrorCallback(hjpeg);
9000ac68:	f7f6 fd74 	bl	90001754 <HAL_JPEG_ErrorCallback>
}
9000ac6c:	bd08      	pop	{r3, pc}
9000ac6e:	bf00      	nop

9000ac70 <JPEG_MDMAInCpltCallback>:
{
9000ac70:	b530      	push	{r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
9000ac72:	6c04      	ldr	r4, [r0, #64]	; 0x40
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) == JPEG_CONTEXT_DMA)
9000ac74:	f248 010c 	movw	r1, #32780	; 0x800c
{
9000ac78:	b083      	sub	sp, #12
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000ac7a:	6822      	ldr	r2, [r4, #0]
9000ac7c:	6b13      	ldr	r3, [r2, #48]	; 0x30
9000ac7e:	f023 037e 	bic.w	r3, r3, #126	; 0x7e
9000ac82:	6313      	str	r3, [r2, #48]	; 0x30
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) == JPEG_CONTEXT_DMA)
9000ac84:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000ac86:	400b      	ands	r3, r1
9000ac88:	2b0c      	cmp	r3, #12
9000ac8a:	d001      	beq.n	9000ac90 <JPEG_MDMAInCpltCallback+0x20>
}
9000ac8c:	b003      	add	sp, #12
9000ac8e:	bd30      	pop	{r4, r5, pc}
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000ac90:	6802      	ldr	r2, [r0, #0]
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
9000ac92:	4620      	mov	r0, r4
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000ac94:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000ac96:	6952      	ldr	r2, [r2, #20]
    inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000ac98:	6b21      	ldr	r1, [r4, #48]	; 0x30
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000ac9a:	f3c2 0210 	ubfx	r2, r2, #0, #17
    inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000ac9e:	6a8d      	ldr	r5, [r1, #40]	; 0x28
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000aca0:	1a9b      	subs	r3, r3, r2
9000aca2:	6223      	str	r3, [r4, #32]
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
9000aca4:	6a21      	ldr	r1, [r4, #32]
9000aca6:	f7f6 fce1 	bl	9000166c <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength >= inXfrSize)
9000acaa:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000acac:	42ab      	cmp	r3, r5
9000acae:	d311      	bcc.n	9000acd4 <JPEG_MDMAInCpltCallback+0x64>
      if (inXfrSize == 0UL)
9000acb0:	b305      	cbz	r5, 9000acf4 <JPEG_MDMAInCpltCallback+0x84>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
9000acb2:	fbb3 f2f5 	udiv	r2, r3, r5
9000acb6:	fb05 3212 	mls	r2, r5, r2, r3
9000acba:	1a9b      	subs	r3, r3, r2
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
9000acbc:	6d62      	ldr	r2, [r4, #84]	; 0x54
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
9000acbe:	62a3      	str	r3, [r4, #40]	; 0x28
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
9000acc0:	04d1      	lsls	r1, r2, #19
9000acc2:	d400      	bmi.n	9000acc6 <JPEG_MDMAInCpltCallback+0x56>
9000acc4:	b963      	cbnz	r3, 9000ace0 <JPEG_MDMAInCpltCallback+0x70>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
9000acc6:	6822      	ldr	r2, [r4, #0]
9000acc8:	6b13      	ldr	r3, [r2, #48]	; 0x30
9000acca:	f043 0360 	orr.w	r3, r3, #96	; 0x60
9000acce:	6313      	str	r3, [r2, #48]	; 0x30
}
9000acd0:	b003      	add	sp, #12
9000acd2:	bd30      	pop	{r4, r5, pc}
    else if (hjpeg->InDataLength > 0UL)
9000acd4:	b1cb      	cbz	r3, 9000ad0a <JPEG_MDMAInCpltCallback+0x9a>
      if ((hjpeg->InDataLength % 4UL) != 0UL)
9000acd6:	0798      	lsls	r0, r3, #30
9000acd8:	d119      	bne.n	9000ad0e <JPEG_MDMAInCpltCallback+0x9e>
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
9000acda:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000acdc:	04d2      	lsls	r2, r2, #19
9000acde:	d4f2      	bmi.n	9000acc6 <JPEG_MDMAInCpltCallback+0x56>
      if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
9000ace0:	6822      	ldr	r2, [r4, #0]
9000ace2:	2501      	movs	r5, #1
9000ace4:	69a1      	ldr	r1, [r4, #24]
9000ace6:	6b20      	ldr	r0, [r4, #48]	; 0x30
9000ace8:	3240      	adds	r2, #64	; 0x40
9000acea:	9500      	str	r5, [sp, #0]
9000acec:	f001 f8b0 	bl	9000be50 <HAL_MDMA_Start_IT>
9000acf0:	2800      	cmp	r0, #0
9000acf2:	d0e8      	beq.n	9000acc6 <JPEG_MDMAInCpltCallback+0x56>
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000acf4:	6d23      	ldr	r3, [r4, #80]	; 0x50
        hjpeg->State = HAL_JPEG_STATE_ERROR;
9000acf6:	2206      	movs	r2, #6
        HAL_JPEG_ErrorCallback(hjpeg);
9000acf8:	4620      	mov	r0, r4
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000acfa:	f043 0304 	orr.w	r3, r3, #4
9000acfe:	6523      	str	r3, [r4, #80]	; 0x50
        hjpeg->State = HAL_JPEG_STATE_ERROR;
9000ad00:	f884 204d 	strb.w	r2, [r4, #77]	; 0x4d
        HAL_JPEG_ErrorCallback(hjpeg);
9000ad04:	f7f6 fd26 	bl	90001754 <HAL_JPEG_ErrorCallback>
        return;
9000ad08:	e7c0      	b.n	9000ac8c <JPEG_MDMAInCpltCallback+0x1c>
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
9000ad0a:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000ad0c:	e7db      	b.n	9000acc6 <JPEG_MDMAInCpltCallback+0x56>
        hjpeg->InDataLength = ((hjpeg->InDataLength / 4UL) + 1UL) * 4UL;
9000ad0e:	f023 0303 	bic.w	r3, r3, #3
9000ad12:	3304      	adds	r3, #4
9000ad14:	e7d2      	b.n	9000acbc <JPEG_MDMAInCpltCallback+0x4c>
9000ad16:	bf00      	nop

9000ad18 <JPEG_DMA_PollResidualData>:
{
9000ad18:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
      if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
9000ad1a:	6802      	ldr	r2, [r0, #0]
9000ad1c:	2610      	movs	r6, #16
{
9000ad1e:	4604      	mov	r4, r0
    if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000ad20:	6d65      	ldr	r5, [r4, #84]	; 0x54
9000ad22:	f415 5500 	ands.w	r5, r5, #8192	; 0x2000
9000ad26:	d11d      	bne.n	9000ad64 <JPEG_DMA_PollResidualData+0x4c>
      if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
9000ad28:	6b53      	ldr	r3, [r2, #52]	; 0x34
9000ad2a:	06df      	lsls	r7, r3, #27
9000ad2c:	d51a      	bpl.n	9000ad64 <JPEG_DMA_PollResidualData+0x4c>
        dataOut = hjpeg->Instance->DOR;
9000ad2e:	6c53      	ldr	r3, [r2, #68]	; 0x44
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataOut & 0x000000FFUL);
9000ad30:	69e7      	ldr	r7, [r4, #28]
9000ad32:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataOut & 0x0000FF00UL) >> 8);
9000ad34:	0a18      	lsrs	r0, r3, #8
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataOut & 0x00FF0000UL) >> 16);
9000ad36:	0c19      	lsrs	r1, r3, #16
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataOut & 0x000000FFUL);
9000ad38:	54bb      	strb	r3, [r7, r2]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataOut & 0xFF000000UL) >> 24);
9000ad3a:	0e1b      	lsrs	r3, r3, #24
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataOut & 0x0000FF00UL) >> 8);
9000ad3c:	6a67      	ldr	r7, [r4, #36]	; 0x24
9000ad3e:	69e2      	ldr	r2, [r4, #28]
9000ad40:	443a      	add	r2, r7
9000ad42:	7050      	strb	r0, [r2, #1]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataOut & 0x00FF0000UL) >> 16);
9000ad44:	6a60      	ldr	r0, [r4, #36]	; 0x24
9000ad46:	69e2      	ldr	r2, [r4, #28]
9000ad48:	4402      	add	r2, r0
9000ad4a:	7091      	strb	r1, [r2, #2]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataOut & 0xFF000000UL) >> 24);
9000ad4c:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000ad4e:	69e2      	ldr	r2, [r4, #28]
9000ad50:	440a      	add	r2, r1
9000ad52:	70d3      	strb	r3, [r2, #3]
        hjpeg->JpegOutCount += 4UL;
9000ad54:	6a63      	ldr	r3, [r4, #36]	; 0x24
        if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
9000ad56:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
        hjpeg->JpegOutCount += 4UL;
9000ad58:	3304      	adds	r3, #4
9000ad5a:	6263      	str	r3, [r4, #36]	; 0x24
        if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
9000ad5c:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000ad5e:	4293      	cmp	r3, r2
9000ad60:	d021      	beq.n	9000ada6 <JPEG_DMA_PollResidualData+0x8e>
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
9000ad62:	6822      	ldr	r2, [r4, #0]
  for (count = JPEG_FIFO_SIZE; count > 0UL; count--)
9000ad64:	3e01      	subs	r6, #1
9000ad66:	d1db      	bne.n	9000ad20 <JPEG_DMA_PollResidualData+0x8>
  tmpContext = hjpeg->Context;
9000ad68:	6d61      	ldr	r1, [r4, #84]	; 0x54
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
9000ad6a:	6b53      	ldr	r3, [r2, #52]	; 0x34
9000ad6c:	06d8      	lsls	r0, r3, #27
9000ad6e:	d501      	bpl.n	9000ad74 <JPEG_DMA_PollResidualData+0x5c>
9000ad70:	048b      	lsls	r3, r1, #18
9000ad72:	d417      	bmi.n	9000ada4 <JPEG_DMA_PollResidualData+0x8c>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000ad74:	6813      	ldr	r3, [r2, #0]
9000ad76:	f023 0301 	bic.w	r3, r3, #1
9000ad7a:	6013      	str	r3, [r2, #0]
    if (hjpeg->JpegOutCount > 0UL)
9000ad7c:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000ad7e:	b9eb      	cbnz	r3, 9000adbc <JPEG_DMA_PollResidualData+0xa4>
    tmpContext = hjpeg->Context;
9000ad80:	6d63      	ldr	r3, [r4, #84]	; 0x54
    __HAL_UNLOCK(hjpeg);
9000ad82:	2000      	movs	r0, #0
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000ad84:	6d62      	ldr	r2, [r4, #84]	; 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000ad86:	2101      	movs	r1, #1
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000ad88:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
9000ad8c:	f884 004c 	strb.w	r0, [r4, #76]	; 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000ad90:	f402 4282 	and.w	r2, r2, #16640	; 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000ad94:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000ad96:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000ad98:	6562      	str	r2, [r4, #84]	; 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000ad9a:	f884 104d 	strb.w	r1, [r4, #77]	; 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000ad9e:	d00a      	beq.n	9000adb6 <JPEG_DMA_PollResidualData+0x9e>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
9000ada0:	f7ff ff4e 	bl	9000ac40 <HAL_JPEG_EncodeCpltCallback>
}
9000ada4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
          HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000ada6:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000ada8:	4620      	mov	r0, r4
9000adaa:	69e1      	ldr	r1, [r4, #28]
9000adac:	f7f6 fc7e 	bl	900016ac <HAL_JPEG_DataReadyCallback>
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
9000adb0:	6822      	ldr	r2, [r4, #0]
          hjpeg->JpegOutCount = 0;
9000adb2:	6265      	str	r5, [r4, #36]	; 0x24
9000adb4:	e7d6      	b.n	9000ad64 <JPEG_DMA_PollResidualData+0x4c>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000adb6:	f7f6 fccf 	bl	90001758 <HAL_JPEG_DecodeCpltCallback>
}
9000adba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000adbc:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000adbe:	4620      	mov	r0, r4
9000adc0:	69e1      	ldr	r1, [r4, #28]
9000adc2:	f7f6 fc73 	bl	900016ac <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000adc6:	2300      	movs	r3, #0
9000adc8:	6263      	str	r3, [r4, #36]	; 0x24
9000adca:	e7d9      	b.n	9000ad80 <JPEG_DMA_PollResidualData+0x68>

9000adcc <HAL_JPEG_Resume>:
  if ((hjpeg->Context & (JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT)) == 0UL)
9000adcc:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000adce:	f413 5f40 	tst.w	r3, #12288	; 0x3000
9000add2:	d028      	beq.n	9000ae26 <HAL_JPEG_Resume+0x5a>
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000add4:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000add6:	f003 030c 	and.w	r3, r3, #12
9000adda:	2b0c      	cmp	r3, #12
{
9000addc:	b570      	push	{r4, r5, r6, lr}
9000adde:	4604      	mov	r4, r0
9000ade0:	b082      	sub	sp, #8
9000ade2:	460d      	mov	r5, r1
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000ade4:	d007      	beq.n	9000adf6 <HAL_JPEG_Resume+0x2a>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000ade6:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000ade8:	f003 030c 	and.w	r3, r3, #12
9000adec:	2b08      	cmp	r3, #8
9000adee:	d037      	beq.n	9000ae60 <HAL_JPEG_Resume+0x94>
  return HAL_OK;
9000adf0:	2000      	movs	r0, #0
}
9000adf2:	b002      	add	sp, #8
9000adf4:	bd70      	pop	{r4, r5, r6, pc}
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
9000adf6:	07c8      	lsls	r0, r1, #31
9000adf8:	d417      	bmi.n	9000ae2a <HAL_JPEG_Resume+0x5e>
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
9000adfa:	07a9      	lsls	r1, r5, #30
9000adfc:	d5f8      	bpl.n	9000adf0 <HAL_JPEG_Resume+0x24>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
9000adfe:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000ae00:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
9000ae04:	6563      	str	r3, [r4, #84]	; 0x54
      if ((hjpeg->Context & JPEG_CONTEXT_ENDING_DMA) != 0UL)
9000ae06:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000ae08:	041a      	lsls	r2, r3, #16
9000ae0a:	d453      	bmi.n	9000aeb4 <HAL_JPEG_Resume+0xe8>
        xfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
9000ae0c:	6b60      	ldr	r0, [r4, #52]	; 0x34
9000ae0e:	6a82      	ldr	r2, [r0, #40]	; 0x28
        if (xfrSize == 0UL)
9000ae10:	2a00      	cmp	r2, #0
9000ae12:	d13e      	bne.n	9000ae92 <HAL_JPEG_Resume+0xc6>
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000ae14:	6d23      	ldr	r3, [r4, #80]	; 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
9000ae16:	2206      	movs	r2, #6
          return HAL_ERROR;
9000ae18:	2001      	movs	r0, #1
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000ae1a:	f043 0304 	orr.w	r3, r3, #4
9000ae1e:	6523      	str	r3, [r4, #80]	; 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
9000ae20:	f884 204d 	strb.w	r2, [r4, #77]	; 0x4d
          return HAL_ERROR;
9000ae24:	e7e5      	b.n	9000adf2 <HAL_JPEG_Resume+0x26>
    return HAL_ERROR;
9000ae26:	2001      	movs	r0, #1
}
9000ae28:	4770      	bx	lr
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000ae2a:	6d63      	ldr	r3, [r4, #84]	; 0x54
      xfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000ae2c:	6b20      	ldr	r0, [r4, #48]	; 0x30
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000ae2e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
      xfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000ae32:	6a82      	ldr	r2, [r0, #40]	; 0x28
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000ae34:	6563      	str	r3, [r4, #84]	; 0x54
      if (xfrSize == 0UL)
9000ae36:	2a00      	cmp	r2, #0
9000ae38:	d0ec      	beq.n	9000ae14 <HAL_JPEG_Resume+0x48>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % xfrSize);
9000ae3a:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000ae3c:	fbb3 f1f2 	udiv	r1, r3, r2
9000ae40:	fb02 3211 	mls	r2, r2, r1, r3
9000ae44:	1a9b      	subs	r3, r3, r2
9000ae46:	62a3      	str	r3, [r4, #40]	; 0x28
      if (hjpeg->InDataLength > 0UL)
9000ae48:	2b00      	cmp	r3, #0
9000ae4a:	d0d6      	beq.n	9000adfa <HAL_JPEG_Resume+0x2e>
        if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
9000ae4c:	6822      	ldr	r2, [r4, #0]
9000ae4e:	2601      	movs	r6, #1
9000ae50:	3240      	adds	r2, #64	; 0x40
9000ae52:	9600      	str	r6, [sp, #0]
9000ae54:	69a1      	ldr	r1, [r4, #24]
9000ae56:	f000 fffb 	bl	9000be50 <HAL_MDMA_Start_IT>
9000ae5a:	2800      	cmp	r0, #0
9000ae5c:	d0cd      	beq.n	9000adfa <HAL_JPEG_Resume+0x2e>
9000ae5e:	e7d9      	b.n	9000ae14 <HAL_JPEG_Resume+0x48>
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
9000ae60:	f011 0101 	ands.w	r1, r1, #1
9000ae64:	d013      	beq.n	9000ae8e <HAL_JPEG_Resume+0xc2>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000ae66:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000ae68:	222e      	movs	r2, #46	; 0x2e
      mask |= (JPEG_IT_IFT | JPEG_IT_IFNF);
9000ae6a:	2106      	movs	r1, #6
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000ae6c:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
9000ae70:	6543      	str	r3, [r0, #84]	; 0x54
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
9000ae72:	07ab      	lsls	r3, r5, #30
9000ae74:	d504      	bpl.n	9000ae80 <HAL_JPEG_Resume+0xb4>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
9000ae76:	6d63      	ldr	r3, [r4, #84]	; 0x54
      mask |= (JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC);
9000ae78:	4611      	mov	r1, r2
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
9000ae7a:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
9000ae7e:	6563      	str	r3, [r4, #84]	; 0x54
    __HAL_JPEG_ENABLE_IT(hjpeg, mask);
9000ae80:	6822      	ldr	r2, [r4, #0]
  return HAL_OK;
9000ae82:	2000      	movs	r0, #0
    __HAL_JPEG_ENABLE_IT(hjpeg, mask);
9000ae84:	6b13      	ldr	r3, [r2, #48]	; 0x30
9000ae86:	430b      	orrs	r3, r1
9000ae88:	6313      	str	r3, [r2, #48]	; 0x30
}
9000ae8a:	b002      	add	sp, #8
9000ae8c:	bd70      	pop	{r4, r5, r6, pc}
9000ae8e:	2228      	movs	r2, #40	; 0x28
9000ae90:	e7ef      	b.n	9000ae72 <HAL_JPEG_Resume+0xa6>
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
9000ae92:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000ae94:	2501      	movs	r5, #1
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
9000ae96:	fbb3 f1f2 	udiv	r1, r3, r2
9000ae9a:	fb02 3211 	mls	r2, r2, r1, r3
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000ae9e:	6821      	ldr	r1, [r4, #0]
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
9000aea0:	1a9b      	subs	r3, r3, r2
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000aea2:	3144      	adds	r1, #68	; 0x44
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
9000aea4:	62e3      	str	r3, [r4, #44]	; 0x2c
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000aea6:	9500      	str	r5, [sp, #0]
9000aea8:	69e2      	ldr	r2, [r4, #28]
9000aeaa:	f000 ffd1 	bl	9000be50 <HAL_MDMA_Start_IT>
9000aeae:	2800      	cmp	r0, #0
9000aeb0:	d09e      	beq.n	9000adf0 <HAL_JPEG_Resume+0x24>
9000aeb2:	e7af      	b.n	9000ae14 <HAL_JPEG_Resume+0x48>
        JPEG_DMA_PollResidualData(hjpeg);
9000aeb4:	4620      	mov	r0, r4
9000aeb6:	f7ff ff2f 	bl	9000ad18 <JPEG_DMA_PollResidualData>
9000aeba:	e799      	b.n	9000adf0 <HAL_JPEG_Resume+0x24>

9000aebc <JPEG_MDMAOutCpltCallback>:
{
9000aebc:	b530      	push	{r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
9000aebe:	6c04      	ldr	r4, [r0, #64]	; 0x40
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) ==
9000aec0:	f248 010c 	movw	r1, #32780	; 0x800c
{
9000aec4:	b083      	sub	sp, #12
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000aec6:	6823      	ldr	r3, [r4, #0]
9000aec8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000aeca:	f022 027e 	bic.w	r2, r2, #126	; 0x7e
9000aece:	631a      	str	r2, [r3, #48]	; 0x30
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) ==
9000aed0:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000aed2:	400a      	ands	r2, r1
9000aed4:	2a0c      	cmp	r2, #12
9000aed6:	d001      	beq.n	9000aedc <JPEG_MDMAOutCpltCallback+0x20>
}
9000aed8:	b003      	add	sp, #12
9000aeda:	bd30      	pop	{r4, r5, pc}
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF) == 0UL)
9000aedc:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000aede:	0692      	lsls	r2, r2, #26
9000aee0:	d505      	bpl.n	9000aeee <JPEG_MDMAOutCpltCallback+0x32>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
9000aee2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000aee4:	f042 0260 	orr.w	r2, r2, #96	; 0x60
9000aee8:	631a      	str	r2, [r3, #48]	; 0x30
}
9000aeea:	b003      	add	sp, #12
9000aeec:	bd30      	pop	{r4, r5, pc}
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000aeee:	6802      	ldr	r2, [r0, #0]
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000aef0:	4620      	mov	r0, r4
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000aef2:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000aef4:	6952      	ldr	r2, [r2, #20]
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000aef6:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000aef8:	f3c2 0210 	ubfx	r2, r2, #0, #17
9000aefc:	1a9b      	subs	r3, r3, r2
9000aefe:	6263      	str	r3, [r4, #36]	; 0x24
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000af00:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000af02:	f7f6 fbd3 	bl	900016ac <HAL_JPEG_DataReadyCallback>
      if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000af06:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000af08:	049b      	lsls	r3, r3, #18
9000af0a:	d501      	bpl.n	9000af10 <JPEG_MDMAOutCpltCallback+0x54>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
9000af0c:	6823      	ldr	r3, [r4, #0]
9000af0e:	e7e8      	b.n	9000aee2 <JPEG_MDMAOutCpltCallback+0x26>
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000af10:	6821      	ldr	r1, [r4, #0]
9000af12:	2501      	movs	r5, #1
9000af14:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000af16:	69e2      	ldr	r2, [r4, #28]
9000af18:	3144      	adds	r1, #68	; 0x44
9000af1a:	6b60      	ldr	r0, [r4, #52]	; 0x34
9000af1c:	9500      	str	r5, [sp, #0]
9000af1e:	f000 ff97 	bl	9000be50 <HAL_MDMA_Start_IT>
9000af22:	2800      	cmp	r0, #0
9000af24:	d0f2      	beq.n	9000af0c <JPEG_MDMAOutCpltCallback+0x50>
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000af26:	6d23      	ldr	r3, [r4, #80]	; 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
9000af28:	2206      	movs	r2, #6
          HAL_JPEG_ErrorCallback(hjpeg);
9000af2a:	4620      	mov	r0, r4
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000af2c:	f043 0304 	orr.w	r3, r3, #4
9000af30:	6523      	str	r3, [r4, #80]	; 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
9000af32:	f884 204d 	strb.w	r2, [r4, #77]	; 0x4d
          HAL_JPEG_ErrorCallback(hjpeg);
9000af36:	f7f6 fc0d 	bl	90001754 <HAL_JPEG_ErrorCallback>
          return;
9000af3a:	e7cd      	b.n	9000aed8 <JPEG_MDMAOutCpltCallback+0x1c>

9000af3c <JPEG_MDMAOutAbortCallback>:
{
9000af3c:	b538      	push	{r3, r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
9000af3e:	6c04      	ldr	r4, [r0, #64]	; 0x40
  if ((hjpeg->Context & JPEG_CONTEXT_ENDING_DMA) != 0UL)
9000af40:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000af42:	041a      	lsls	r2, r3, #16
9000af44:	d400      	bmi.n	9000af48 <JPEG_MDMAOutAbortCallback+0xc>
}
9000af46:	bd38      	pop	{r3, r4, r5, pc}
  hjpeg->JpegOutCount = hjpeg->OutDataLength - (hjpeg->hdmaout->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000af48:	6b63      	ldr	r3, [r4, #52]	; 0x34
9000af4a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000af4c:	681b      	ldr	r3, [r3, #0]
9000af4e:	695b      	ldr	r3, [r3, #20]
9000af50:	f3c3 0310 	ubfx	r3, r3, #0, #17
9000af54:	1ad3      	subs	r3, r2, r3
9000af56:	6263      	str	r3, [r4, #36]	; 0x24
  if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
9000af58:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000af5a:	429a      	cmp	r2, r3
9000af5c:	d025      	beq.n	9000afaa <JPEG_MDMAOutAbortCallback+0x6e>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL)
9000af5e:	6822      	ldr	r2, [r4, #0]
9000af60:	6b55      	ldr	r5, [r2, #52]	; 0x34
9000af62:	f015 0510 	ands.w	r5, r5, #16
9000af66:	d118      	bne.n	9000af9a <JPEG_MDMAOutAbortCallback+0x5e>
    if (hjpeg->JpegOutCount > 0UL)
9000af68:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000af6a:	bb4b      	cbnz	r3, 9000afc0 <JPEG_MDMAOutAbortCallback+0x84>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000af6c:	6813      	ldr	r3, [r2, #0]
    __HAL_UNLOCK(hjpeg);
9000af6e:	2000      	movs	r0, #0
    hjpeg->State = HAL_JPEG_STATE_READY;
9000af70:	2101      	movs	r1, #1
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000af72:	f023 0301 	bic.w	r3, r3, #1
9000af76:	6013      	str	r3, [r2, #0]
    tmpContext = hjpeg->Context;
9000af78:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000af7a:	6d62      	ldr	r2, [r4, #84]	; 0x54
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000af7c:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
9000af80:	f884 004c 	strb.w	r0, [r4, #76]	; 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000af84:	f402 4282 	and.w	r2, r2, #16640	; 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000af88:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000af8a:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000af8c:	6562      	str	r2, [r4, #84]	; 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000af8e:	f884 104d 	strb.w	r1, [r4, #77]	; 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000af92:	d012      	beq.n	9000afba <JPEG_MDMAOutAbortCallback+0x7e>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
9000af94:	f7ff fe54 	bl	9000ac40 <HAL_JPEG_EncodeCpltCallback>
}
9000af98:	bd38      	pop	{r3, r4, r5, pc}
  else if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000af9a:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000af9c:	049b      	lsls	r3, r3, #18
9000af9e:	d4d2      	bmi.n	9000af46 <JPEG_MDMAOutAbortCallback+0xa>
    JPEG_DMA_PollResidualData(hjpeg);
9000afa0:	4620      	mov	r0, r4
}
9000afa2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    JPEG_DMA_PollResidualData(hjpeg);
9000afa6:	f7ff beb7 	b.w	9000ad18 <JPEG_DMA_PollResidualData>
    HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000afaa:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000afac:	4620      	mov	r0, r4
9000afae:	69e1      	ldr	r1, [r4, #28]
9000afb0:	f7f6 fb7c 	bl	900016ac <HAL_JPEG_DataReadyCallback>
    hjpeg->JpegOutCount = 0;
9000afb4:	2300      	movs	r3, #0
9000afb6:	6263      	str	r3, [r4, #36]	; 0x24
9000afb8:	e7d1      	b.n	9000af5e <JPEG_MDMAOutAbortCallback+0x22>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000afba:	f7f6 fbcd 	bl	90001758 <HAL_JPEG_DecodeCpltCallback>
}
9000afbe:	bd38      	pop	{r3, r4, r5, pc}
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000afc0:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000afc2:	4620      	mov	r0, r4
9000afc4:	69e1      	ldr	r1, [r4, #28]
9000afc6:	f7f6 fb71 	bl	900016ac <HAL_JPEG_DataReadyCallback>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000afca:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000afcc:	6265      	str	r5, [r4, #36]	; 0x24
9000afce:	e7cd      	b.n	9000af6c <JPEG_MDMAOutAbortCallback+0x30>

9000afd0 <JPEG_Process>:
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000afd0:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000afd2:	f003 0303 	and.w	r3, r3, #3
9000afd6:	2b02      	cmp	r3, #2
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000afd8:	6803      	ldr	r3, [r0, #0]
{
9000afda:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000afde:	4604      	mov	r4, r0
9000afe0:	b082      	sub	sp, #8
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000afe2:	d01f      	beq.n	9000b024 <JPEG_Process+0x54>
  if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL)
9000afe4:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000afe6:	04d7      	lsls	r7, r2, #19
9000afe8:	d407      	bmi.n	9000affa <JPEG_Process+0x2a>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_IFTF) != 0UL)
9000afea:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000afec:	0796      	lsls	r6, r2, #30
9000afee:	f100 811d 	bmi.w	9000b22c <JPEG_Process+0x25c>
    else if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_IFNFF) != 0UL)
9000aff2:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000aff4:	0750      	lsls	r0, r2, #29
9000aff6:	f100 81b1 	bmi.w	9000b35c <JPEG_Process+0x38c>
  if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000affa:	6d65      	ldr	r5, [r4, #84]	; 0x54
9000affc:	f415 5500 	ands.w	r5, r5, #8192	; 0x2000
9000b000:	d107      	bne.n	9000b012 <JPEG_Process+0x42>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFTF) != 0UL)
9000b002:	6b5e      	ldr	r6, [r3, #52]	; 0x34
9000b004:	f016 0608 	ands.w	r6, r6, #8
9000b008:	d14c      	bne.n	9000b0a4 <JPEG_Process+0xd4>
    else if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
9000b00a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000b00c:	06d2      	lsls	r2, r2, #27
9000b00e:	f100 81e3 	bmi.w	9000b3d8 <JPEG_Process+0x408>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000b012:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000b014:	f002 0238 	and.w	r2, r2, #56	; 0x38
9000b018:	2a20      	cmp	r2, #32
9000b01a:	d01a      	beq.n	9000b052 <JPEG_Process+0x82>
  return JPEG_PROCESS_ONGOING;
9000b01c:	2000      	movs	r0, #0
}
9000b01e:	b002      	add	sp, #8
9000b020:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000b024:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000b026:	0652      	lsls	r2, r2, #25
9000b028:	d5dc      	bpl.n	9000afe4 <JPEG_Process+0x14>
      (void) HAL_JPEG_GetInfo(hjpeg, &hjpeg->Conf);
9000b02a:	1d01      	adds	r1, r0, #4
  if ((hjpeg == NULL) || (pInfo == NULL))
9000b02c:	9101      	str	r1, [sp, #4]
9000b02e:	f7ff fb79 	bl	9000a724 <HAL_JPEG_GetInfo.part.0>
      hjpeg->Conf.ImageQuality = 0;
9000b032:	2300      	movs	r3, #0
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000b034:	9901      	ldr	r1, [sp, #4]
9000b036:	4620      	mov	r0, r4
      hjpeg->Conf.ImageQuality = 0;
9000b038:	6163      	str	r3, [r4, #20]
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000b03a:	f7f6 fae1 	bl	90001600 <HAL_JPEG_InfoReadyCallback>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_IT_HPD);
9000b03e:	6823      	ldr	r3, [r4, #0]
9000b040:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000b042:	f022 0240 	bic.w	r2, r2, #64	; 0x40
9000b046:	631a      	str	r2, [r3, #48]	; 0x30
      __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_HPDF);
9000b048:	6b9a      	ldr	r2, [r3, #56]	; 0x38
9000b04a:	f042 0240 	orr.w	r2, r2, #64	; 0x40
9000b04e:	639a      	str	r2, [r3, #56]	; 0x38
9000b050:	e7c8      	b.n	9000afe4 <JPEG_Process+0x14>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000b052:	681a      	ldr	r2, [r3, #0]
9000b054:	f022 0201 	bic.w	r2, r2, #1
9000b058:	601a      	str	r2, [r3, #0]
    if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000b05a:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000b05c:	f002 020c 	and.w	r2, r2, #12
9000b060:	2a08      	cmp	r2, #8
9000b062:	f000 81e6 	beq.w	9000b432 <JPEG_Process+0x462>
    __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
9000b066:	6b9a      	ldr	r2, [r3, #56]	; 0x38
9000b068:	f042 0260 	orr.w	r2, r2, #96	; 0x60
9000b06c:	639a      	str	r2, [r3, #56]	; 0x38
    if (hjpeg->JpegOutCount > 0UL)
9000b06e:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000b070:	2b00      	cmp	r3, #0
9000b072:	f040 81e3 	bne.w	9000b43c <JPEG_Process+0x46c>
    tmpContext = hjpeg->Context;
9000b076:	6d63      	ldr	r3, [r4, #84]	; 0x54
    __HAL_UNLOCK(hjpeg);
9000b078:	2100      	movs	r1, #0
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000b07a:	6d62      	ldr	r2, [r4, #84]	; 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000b07c:	2501      	movs	r5, #1
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000b07e:	f003 0303 	and.w	r3, r3, #3
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000b082:	4620      	mov	r0, r4
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000b084:	f402 4282 	and.w	r2, r2, #16640	; 0x4100
    __HAL_UNLOCK(hjpeg);
9000b088:	f884 104c 	strb.w	r1, [r4, #76]	; 0x4c
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000b08c:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000b08e:	6562      	str	r2, [r4, #84]	; 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000b090:	f884 504d 	strb.w	r5, [r4, #77]	; 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000b094:	f000 81c9 	beq.w	9000b42a <JPEG_Process+0x45a>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
9000b098:	f7ff fdd2 	bl	9000ac40 <HAL_JPEG_EncodeCpltCallback>
    return JPEG_PROCESS_DONE;
9000b09c:	4628      	mov	r0, r5
}
9000b09e:	b002      	add	sp, #8
9000b0a0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (hjpeg->OutDataLength >= (hjpeg->JpegOutCount + (nbOutputWords * 4UL)))
9000b0a4:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b0a6:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
9000b0a8:	3220      	adds	r2, #32
9000b0aa:	4296      	cmp	r6, r2
9000b0ac:	f0c0 81e4 	bcc.w	9000b478 <JPEG_Process+0x4a8>
      dataword = hjpeg->Instance->DOR;
9000b0b0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000b0b2:	69e1      	ldr	r1, [r4, #28]
9000b0b4:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b0b6:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000b0b8:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000b0ba:	69e2      	ldr	r2, [r4, #28]
9000b0bc:	440a      	add	r2, r1
9000b0be:	0a19      	lsrs	r1, r3, #8
9000b0c0:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000b0c2:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000b0c4:	69e2      	ldr	r2, [r4, #28]
9000b0c6:	440a      	add	r2, r1
9000b0c8:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000b0ca:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000b0cc:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000b0ce:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000b0d0:	69e2      	ldr	r2, [r4, #28]
9000b0d2:	440a      	add	r2, r1
9000b0d4:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000b0d6:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000b0d8:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000b0da:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000b0dc:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
9000b0de:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000b0e0:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000b0e2:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b0e4:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000b0e6:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000b0e8:	69e2      	ldr	r2, [r4, #28]
9000b0ea:	440a      	add	r2, r1
9000b0ec:	0a19      	lsrs	r1, r3, #8
9000b0ee:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000b0f0:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000b0f2:	69e2      	ldr	r2, [r4, #28]
9000b0f4:	440a      	add	r2, r1
9000b0f6:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000b0f8:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000b0fa:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000b0fc:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000b0fe:	69e2      	ldr	r2, [r4, #28]
9000b100:	440a      	add	r2, r1
9000b102:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000b104:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000b106:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000b108:	3304      	adds	r3, #4
9000b10a:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000b10c:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000b10e:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b110:	69e1      	ldr	r1, [r4, #28]
9000b112:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000b114:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000b116:	69e2      	ldr	r2, [r4, #28]
9000b118:	440a      	add	r2, r1
9000b11a:	0a19      	lsrs	r1, r3, #8
9000b11c:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000b11e:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000b120:	69e2      	ldr	r2, [r4, #28]
9000b122:	440a      	add	r2, r1
9000b124:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000b126:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000b128:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000b12a:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000b12c:	69e2      	ldr	r2, [r4, #28]
9000b12e:	440a      	add	r2, r1
9000b130:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000b132:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000b134:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000b136:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000b138:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
9000b13a:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000b13c:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000b13e:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b140:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000b142:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000b144:	69e2      	ldr	r2, [r4, #28]
9000b146:	440a      	add	r2, r1
9000b148:	0a19      	lsrs	r1, r3, #8
9000b14a:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000b14c:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000b14e:	69e2      	ldr	r2, [r4, #28]
9000b150:	440a      	add	r2, r1
9000b152:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000b154:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000b156:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000b158:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000b15a:	69e2      	ldr	r2, [r4, #28]
9000b15c:	440a      	add	r2, r1
9000b15e:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000b160:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000b162:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000b164:	3304      	adds	r3, #4
9000b166:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000b168:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000b16a:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b16c:	69e1      	ldr	r1, [r4, #28]
9000b16e:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000b170:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000b172:	69e2      	ldr	r2, [r4, #28]
9000b174:	440a      	add	r2, r1
9000b176:	0a19      	lsrs	r1, r3, #8
9000b178:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000b17a:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000b17c:	69e2      	ldr	r2, [r4, #28]
9000b17e:	440a      	add	r2, r1
9000b180:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000b182:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000b184:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000b186:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000b188:	69e2      	ldr	r2, [r4, #28]
9000b18a:	440a      	add	r2, r1
9000b18c:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000b18e:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000b190:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000b192:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000b194:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
9000b196:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000b198:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000b19a:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b19c:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000b19e:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000b1a0:	69e2      	ldr	r2, [r4, #28]
9000b1a2:	440a      	add	r2, r1
9000b1a4:	0a19      	lsrs	r1, r3, #8
9000b1a6:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000b1a8:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000b1aa:	69e2      	ldr	r2, [r4, #28]
9000b1ac:	440a      	add	r2, r1
9000b1ae:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000b1b0:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000b1b2:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000b1b4:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000b1b6:	69e2      	ldr	r2, [r4, #28]
9000b1b8:	440a      	add	r2, r1
9000b1ba:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000b1bc:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000b1be:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000b1c0:	3304      	adds	r3, #4
9000b1c2:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000b1c4:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000b1c6:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b1c8:	69e1      	ldr	r1, [r4, #28]
9000b1ca:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000b1cc:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000b1ce:	69e2      	ldr	r2, [r4, #28]
9000b1d0:	440a      	add	r2, r1
9000b1d2:	0a19      	lsrs	r1, r3, #8
9000b1d4:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000b1d6:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000b1d8:	69e2      	ldr	r2, [r4, #28]
9000b1da:	440a      	add	r2, r1
9000b1dc:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000b1de:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000b1e0:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000b1e2:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000b1e4:	69e2      	ldr	r2, [r4, #28]
9000b1e6:	440a      	add	r2, r1
9000b1e8:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000b1ea:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000b1ec:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000b1ee:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000b1f0:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
9000b1f2:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000b1f4:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000b1f6:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b1f8:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000b1fa:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000b1fc:	69e2      	ldr	r2, [r4, #28]
9000b1fe:	440a      	add	r2, r1
9000b200:	0a19      	lsrs	r1, r3, #8
9000b202:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000b204:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000b206:	69e2      	ldr	r2, [r4, #28]
9000b208:	440a      	add	r2, r1
9000b20a:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000b20c:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000b20e:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000b210:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000b212:	69e2      	ldr	r2, [r4, #28]
9000b214:	440a      	add	r2, r1
9000b216:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000b218:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000b21a:	3304      	adds	r3, #4
9000b21c:	6263      	str	r3, [r4, #36]	; 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000b21e:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000b220:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000b222:	429a      	cmp	r2, r3
9000b224:	f000 82ae 	beq.w	9000b784 <JPEG_Process+0x7b4>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000b228:	6823      	ldr	r3, [r4, #0]
9000b22a:	e6f2      	b.n	9000b012 <JPEG_Process+0x42>
  if ((hjpeg->InDataLength == 0UL) || (nbRequestWords == 0UL))
9000b22c:	6aa2      	ldr	r2, [r4, #40]	; 0x28
9000b22e:	2a00      	cmp	r2, #0
9000b230:	f000 810c 	beq.w	9000b44c <JPEG_Process+0x47c>
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
9000b234:	6a21      	ldr	r1, [r4, #32]
9000b236:	428a      	cmp	r2, r1
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
9000b238:	6a21      	ldr	r1, [r4, #32]
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
9000b23a:	f240 81a4 	bls.w	9000b586 <JPEG_Process+0x5b6>
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
9000b23e:	1a52      	subs	r2, r2, r1
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000b240:	6d61      	ldr	r1, [r4, #84]	; 0x54
9000b242:	04cd      	lsls	r5, r1, #19
9000b244:	f53f aed9 	bmi.w	9000affa <JPEG_Process+0x2a>
9000b248:	2a00      	cmp	r2, #0
9000b24a:	f43f aed6 	beq.w	9000affa <JPEG_Process+0x2a>
    if (nb_words >= nbRequestWords)
9000b24e:	2a1f      	cmp	r2, #31
    nb_words = nb_bytes / 4UL;
9000b250:	ea4f 0192 	mov.w	r1, r2, lsr #2
    if (nb_words >= nbRequestWords)
9000b254:	f240 8203 	bls.w	9000b65e <JPEG_Process+0x68e>
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b258:	69a2      	ldr	r2, [r4, #24]
        input_count = hjpeg->JpegInCount;
9000b25a:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b25c:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b25e:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b260:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b262:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b264:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000b266:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b268:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000b26c:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b26e:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b272:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
9000b274:	6a21      	ldr	r1, [r4, #32]
9000b276:	3104      	adds	r1, #4
9000b278:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000b27a:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b27c:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b27e:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b280:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b282:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b284:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000b286:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b288:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000b28c:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b28e:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b292:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
9000b294:	6a21      	ldr	r1, [r4, #32]
9000b296:	3104      	adds	r1, #4
9000b298:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000b29a:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b29c:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b29e:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b2a0:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b2a2:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b2a4:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000b2a6:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b2a8:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000b2ac:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b2ae:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b2b2:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
9000b2b4:	6a21      	ldr	r1, [r4, #32]
9000b2b6:	3104      	adds	r1, #4
9000b2b8:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000b2ba:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b2bc:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b2be:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b2c0:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b2c2:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b2c4:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000b2c6:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b2c8:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000b2cc:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b2ce:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b2d2:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
9000b2d4:	6a21      	ldr	r1, [r4, #32]
9000b2d6:	3104      	adds	r1, #4
9000b2d8:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000b2da:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b2dc:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b2de:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b2e0:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b2e2:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b2e4:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000b2e6:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b2e8:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000b2ec:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b2ee:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b2f2:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
9000b2f4:	6a21      	ldr	r1, [r4, #32]
9000b2f6:	3104      	adds	r1, #4
9000b2f8:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000b2fa:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b2fc:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b2fe:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b300:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b302:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b304:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000b306:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b308:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000b30c:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b30e:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b312:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
9000b314:	6a21      	ldr	r1, [r4, #32]
9000b316:	3104      	adds	r1, #4
9000b318:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000b31a:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b31c:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b31e:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b320:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b322:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b324:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000b326:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b328:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000b32c:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b32e:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b332:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
9000b334:	6a21      	ldr	r1, [r4, #32]
9000b336:	3104      	adds	r1, #4
9000b338:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000b33a:	6a20      	ldr	r0, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b33c:	1881      	adds	r1, r0, r2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b33e:	5c85      	ldrb	r5, [r0, r2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b340:	788a      	ldrb	r2, [r1, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000b342:	78c8      	ldrb	r0, [r1, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b344:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b346:	7849      	ldrb	r1, [r1, #1]
9000b348:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
9000b34c:	432a      	orrs	r2, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b34e:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b352:	641a      	str	r2, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
9000b354:	6a22      	ldr	r2, [r4, #32]
9000b356:	3204      	adds	r2, #4
9000b358:	6222      	str	r2, [r4, #32]
      for (index = 0; index < nbRequestWords; index++)
9000b35a:	e64e      	b.n	9000affa <JPEG_Process+0x2a>
  if ((hjpeg->InDataLength == 0UL) || (nbRequestWords == 0UL))
9000b35c:	6aa2      	ldr	r2, [r4, #40]	; 0x28
9000b35e:	2a00      	cmp	r2, #0
9000b360:	d074      	beq.n	9000b44c <JPEG_Process+0x47c>
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
9000b362:	6a21      	ldr	r1, [r4, #32]
9000b364:	428a      	cmp	r2, r1
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
9000b366:	6a21      	ldr	r1, [r4, #32]
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
9000b368:	f200 8164 	bhi.w	9000b634 <JPEG_Process+0x664>
  else if (hjpeg->InDataLength == hjpeg->JpegInCount)
9000b36c:	428a      	cmp	r2, r1
9000b36e:	f040 810c 	bne.w	9000b58a <JPEG_Process+0x5ba>
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
9000b372:	6a21      	ldr	r1, [r4, #32]
9000b374:	4620      	mov	r0, r4
9000b376:	f7f6 f979 	bl	9000166c <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength > 4UL)
9000b37a:	6aa2      	ldr	r2, [r4, #40]	; 0x28
9000b37c:	2a04      	cmp	r2, #4
9000b37e:	d902      	bls.n	9000b386 <JPEG_Process+0x3b6>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % 4UL);
9000b380:	f022 0203 	bic.w	r2, r2, #3
9000b384:	62a2      	str	r2, [r4, #40]	; 0x28
    hjpeg->JpegInCount = 0;
9000b386:	2100      	movs	r1, #0
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b388:	6823      	ldr	r3, [r4, #0]
    hjpeg->JpegInCount = 0;
9000b38a:	6221      	str	r1, [r4, #32]
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000b38c:	6d61      	ldr	r1, [r4, #84]	; 0x54
9000b38e:	04c9      	lsls	r1, r1, #19
9000b390:	f53f ae33 	bmi.w	9000affa <JPEG_Process+0x2a>
9000b394:	2a00      	cmp	r2, #0
9000b396:	f43f ae30 	beq.w	9000affa <JPEG_Process+0x2a>
    if (nb_words >= nbRequestWords)
9000b39a:	0891      	lsrs	r1, r2, #2
9000b39c:	f040 8203 	bne.w	9000b7a6 <JPEG_Process+0x7d6>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000b3a0:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000b3a2:	2a01      	cmp	r2, #1
          hjpeg->JpegInCount++;
9000b3a4:	6a21      	ldr	r1, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000b3a6:	69a5      	ldr	r5, [r4, #24]
          hjpeg->JpegInCount++;
9000b3a8:	f101 0101 	add.w	r1, r1, #1
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000b3ac:	5c28      	ldrb	r0, [r5, r0]
          hjpeg->JpegInCount++;
9000b3ae:	6221      	str	r1, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000b3b0:	d010      	beq.n	9000b3d4 <JPEG_Process+0x404>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000b3b2:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000b3b4:	2a03      	cmp	r2, #3
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000b3b6:	5c69      	ldrb	r1, [r5, r1]
9000b3b8:	ea40 2001 	orr.w	r0, r0, r1, lsl #8
          hjpeg->JpegInCount++;
9000b3bc:	6a21      	ldr	r1, [r4, #32]
9000b3be:	f101 0101 	add.w	r1, r1, #1
9000b3c2:	6221      	str	r1, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000b3c4:	d106      	bne.n	9000b3d4 <JPEG_Process+0x404>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000b3c6:	6a22      	ldr	r2, [r4, #32]
9000b3c8:	5ca9      	ldrb	r1, [r5, r2]
          hjpeg->JpegInCount++;
9000b3ca:	6a22      	ldr	r2, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000b3cc:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
          hjpeg->JpegInCount++;
9000b3d0:	3201      	adds	r2, #1
9000b3d2:	6222      	str	r2, [r4, #32]
        hjpeg->Instance->DIR = dataword;
9000b3d4:	6418      	str	r0, [r3, #64]	; 0x40
9000b3d6:	e610      	b.n	9000affa <JPEG_Process+0x2a>
  if (hjpeg->OutDataLength >= (hjpeg->JpegOutCount + (nbOutputWords * 4UL)))
9000b3d8:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b3da:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
9000b3dc:	3204      	adds	r2, #4
9000b3de:	4295      	cmp	r5, r2
9000b3e0:	f0c0 80d5 	bcc.w	9000b58e <JPEG_Process+0x5be>
      dataword = hjpeg->Instance->DOR;
9000b3e4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000b3e6:	69e1      	ldr	r1, [r4, #28]
9000b3e8:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b3ea:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000b3ec:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000b3ee:	69e2      	ldr	r2, [r4, #28]
9000b3f0:	440a      	add	r2, r1
9000b3f2:	0a19      	lsrs	r1, r3, #8
9000b3f4:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000b3f6:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000b3f8:	69e2      	ldr	r2, [r4, #28]
9000b3fa:	440a      	add	r2, r1
9000b3fc:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000b3fe:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000b400:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000b402:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000b404:	69e2      	ldr	r2, [r4, #28]
9000b406:	440a      	add	r2, r1
9000b408:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000b40a:	6a63      	ldr	r3, [r4, #36]	; 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000b40c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
      hjpeg->JpegOutCount += 4UL;
9000b40e:	3304      	adds	r3, #4
9000b410:	6263      	str	r3, [r4, #36]	; 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000b412:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000b414:	429a      	cmp	r2, r3
9000b416:	f47f af07 	bne.w	9000b228 <JPEG_Process+0x258>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000b41a:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b41c:	4620      	mov	r0, r4
9000b41e:	69e1      	ldr	r1, [r4, #28]
9000b420:	f7f6 f944 	bl	900016ac <HAL_JPEG_DataReadyCallback>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000b424:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000b426:	6266      	str	r6, [r4, #36]	; 0x24
9000b428:	e5f3      	b.n	9000b012 <JPEG_Process+0x42>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000b42a:	f7f6 f995 	bl	90001758 <HAL_JPEG_DecodeCpltCallback>
    return JPEG_PROCESS_DONE;
9000b42e:	4628      	mov	r0, r5
9000b430:	e5f5      	b.n	9000b01e <JPEG_Process+0x4e>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000b432:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000b434:	f022 027e 	bic.w	r2, r2, #126	; 0x7e
9000b438:	631a      	str	r2, [r3, #48]	; 0x30
9000b43a:	e614      	b.n	9000b066 <JPEG_Process+0x96>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000b43c:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b43e:	4620      	mov	r0, r4
9000b440:	69e1      	ldr	r1, [r4, #28]
9000b442:	f7f6 f933 	bl	900016ac <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000b446:	2300      	movs	r3, #0
9000b448:	6263      	str	r3, [r4, #36]	; 0x24
9000b44a:	e614      	b.n	9000b076 <JPEG_Process+0xa6>
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000b44c:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000b44e:	f002 020c 	and.w	r2, r2, #12
9000b452:	2a0c      	cmp	r2, #12
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000b454:	6d62      	ldr	r2, [r4, #84]	; 0x54
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000b456:	f000 80fd 	beq.w	9000b654 <JPEG_Process+0x684>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000b45a:	f002 020c 	and.w	r2, r2, #12
9000b45e:	2a08      	cmp	r2, #8
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000b460:	6d62      	ldr	r2, [r4, #84]	; 0x54
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000b462:	f47f adca 	bne.w	9000affa <JPEG_Process+0x2a>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000b466:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
9000b46a:	6562      	str	r2, [r4, #84]	; 0x54
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
9000b46c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000b46e:	f022 0206 	bic.w	r2, r2, #6
9000b472:	631a      	str	r2, [r3, #48]	; 0x30
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000b474:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000b476:	e5c0      	b.n	9000affa <JPEG_Process+0x2a>
  else if (hjpeg->OutDataLength > hjpeg->JpegOutCount)
9000b478:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b47a:	4296      	cmp	r6, r2
9000b47c:	f67f adc9 	bls.w	9000b012 <JPEG_Process+0x42>
    nb_words = (hjpeg->OutDataLength - hjpeg->JpegOutCount) / 4UL;
9000b480:	6a60      	ldr	r0, [r4, #36]	; 0x24
9000b482:	1a30      	subs	r0, r6, r0
    for (index = 0; index < nb_words; index++)
9000b484:	0880      	lsrs	r0, r0, #2
9000b486:	d020      	beq.n	9000b4ca <JPEG_Process+0x4fa>
9000b488:	4629      	mov	r1, r5
9000b48a:	e000      	b.n	9000b48e <JPEG_Process+0x4be>
      dataword = hjpeg->Instance->DOR;
9000b48c:	6823      	ldr	r3, [r4, #0]
9000b48e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
    for (index = 0; index < nb_words; index++)
9000b490:	3101      	adds	r1, #1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000b492:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b494:	69e6      	ldr	r6, [r4, #28]
    for (index = 0; index < nb_words; index++)
9000b496:	4288      	cmp	r0, r1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000b498:	54b3      	strb	r3, [r6, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000b49a:	6a66      	ldr	r6, [r4, #36]	; 0x24
9000b49c:	69e2      	ldr	r2, [r4, #28]
9000b49e:	4432      	add	r2, r6
9000b4a0:	ea4f 2613 	mov.w	r6, r3, lsr #8
9000b4a4:	7056      	strb	r6, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000b4a6:	6a66      	ldr	r6, [r4, #36]	; 0x24
9000b4a8:	69e2      	ldr	r2, [r4, #28]
9000b4aa:	4432      	add	r2, r6
9000b4ac:	ea4f 4613 	mov.w	r6, r3, lsr #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000b4b0:	ea4f 6313 	mov.w	r3, r3, lsr #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000b4b4:	7096      	strb	r6, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000b4b6:	6a66      	ldr	r6, [r4, #36]	; 0x24
9000b4b8:	69e2      	ldr	r2, [r4, #28]
9000b4ba:	4432      	add	r2, r6
9000b4bc:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000b4be:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000b4c0:	f103 0304 	add.w	r3, r3, #4
9000b4c4:	6263      	str	r3, [r4, #36]	; 0x24
    for (index = 0; index < nb_words; index++)
9000b4c6:	d1e1      	bne.n	9000b48c <JPEG_Process+0x4bc>
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000b4c8:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
9000b4ca:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000b4cc:	42b3      	cmp	r3, r6
9000b4ce:	f000 8161 	beq.w	9000b794 <JPEG_Process+0x7c4>
      nb_bytes = hjpeg->OutDataLength - hjpeg->JpegOutCount;
9000b4d2:	f8d4 8024 	ldr.w	r8, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000b4d6:	6823      	ldr	r3, [r4, #0]
      for (index = 0; index < nb_bytes; index++)
9000b4d8:	ebb6 0008 	subs.w	r0, r6, r8
      dataword = hjpeg->Instance->DOR;
9000b4dc:	6c5f      	ldr	r7, [r3, #68]	; 0x44
      for (index = 0; index < nb_bytes; index++)
9000b4de:	d00e      	beq.n	9000b4fe <JPEG_Process+0x52e>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000b4e0:	f005 0303 	and.w	r3, r5, #3
9000b4e4:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b4e6:	69e1      	ldr	r1, [r4, #28]
      for (index = 0; index < nb_bytes; index++)
9000b4e8:	3501      	adds	r5, #1
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000b4ea:	00db      	lsls	r3, r3, #3
      for (index = 0; index < nb_bytes; index++)
9000b4ec:	42a8      	cmp	r0, r5
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000b4ee:	fa27 f303 	lsr.w	r3, r7, r3
9000b4f2:	548b      	strb	r3, [r1, r2]
        hjpeg->JpegOutCount++;
9000b4f4:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000b4f6:	f103 0301 	add.w	r3, r3, #1
9000b4fa:	6263      	str	r3, [r4, #36]	; 0x24
      for (index = 0; index < nb_bytes; index++)
9000b4fc:	d1f0      	bne.n	9000b4e0 <JPEG_Process+0x510>
      nb_bytes = 4UL - nb_bytes;
9000b4fe:	f108 0804 	add.w	r8, r8, #4
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000b502:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b504:	69e1      	ldr	r1, [r4, #28]
9000b506:	4620      	mov	r0, r4
      nb_bytes = 4UL - nb_bytes;
9000b508:	eba8 0806 	sub.w	r8, r8, r6
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000b50c:	f7f6 f8ce 	bl	900016ac <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000b510:	2300      	movs	r3, #0
      for (index = nb_bytes; index < 4UL; index++)
9000b512:	f1b8 0f03 	cmp.w	r8, #3
      hjpeg->JpegOutCount = 0;
9000b516:	6263      	str	r3, [r4, #36]	; 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000b518:	f63f ae86 	bhi.w	9000b228 <JPEG_Process+0x258>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000b51c:	ea4f 03c8 	mov.w	r3, r8, lsl #3
9000b520:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b522:	69e1      	ldr	r1, [r4, #28]
      for (index = nb_bytes; index < 4UL; index++)
9000b524:	f1b8 0f03 	cmp.w	r8, #3
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000b528:	fa27 f003 	lsr.w	r0, r7, r3
9000b52c:	5488      	strb	r0, [r1, r2]
        hjpeg->JpegOutCount++;
9000b52e:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b530:	f102 0201 	add.w	r2, r2, #1
9000b534:	6262      	str	r2, [r4, #36]	; 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000b536:	f43f ae77 	beq.w	9000b228 <JPEG_Process+0x258>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000b53a:	f103 0208 	add.w	r2, r3, #8
9000b53e:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000b540:	69e0      	ldr	r0, [r4, #28]
      for (index = nb_bytes; index < 4UL; index++)
9000b542:	f1b8 0f02 	cmp.w	r8, #2
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000b546:	fa27 f202 	lsr.w	r2, r7, r2
9000b54a:	5442      	strb	r2, [r0, r1]
        hjpeg->JpegOutCount++;
9000b54c:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b54e:	f102 0201 	add.w	r2, r2, #1
9000b552:	6262      	str	r2, [r4, #36]	; 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000b554:	f108 0202 	add.w	r2, r8, #2
9000b558:	f43f ae66 	beq.w	9000b228 <JPEG_Process+0x258>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000b55c:	3310      	adds	r3, #16
9000b55e:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000b560:	69e0      	ldr	r0, [r4, #28]
      for (index = nb_bytes; index < 4UL; index++)
9000b562:	2a02      	cmp	r2, #2
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000b564:	fa27 f303 	lsr.w	r3, r7, r3
9000b568:	5443      	strb	r3, [r0, r1]
        hjpeg->JpegOutCount++;
9000b56a:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000b56c:	f103 0301 	add.w	r3, r3, #1
9000b570:	6263      	str	r3, [r4, #36]	; 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000b572:	f47f ae59 	bne.w	9000b228 <JPEG_Process+0x258>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000b576:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000b578:	0e3f      	lsrs	r7, r7, #24
9000b57a:	69e2      	ldr	r2, [r4, #28]
9000b57c:	54d7      	strb	r7, [r2, r3]
        hjpeg->JpegOutCount++;
9000b57e:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000b580:	3301      	adds	r3, #1
9000b582:	6263      	str	r3, [r4, #36]	; 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000b584:	e650      	b.n	9000b228 <JPEG_Process+0x258>
  else if (hjpeg->InDataLength == hjpeg->JpegInCount)
9000b586:	428a      	cmp	r2, r1
9000b588:	d056      	beq.n	9000b638 <JPEG_Process+0x668>
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000b58a:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000b58c:	e535      	b.n	9000affa <JPEG_Process+0x2a>
  else if (hjpeg->OutDataLength > hjpeg->JpegOutCount)
9000b58e:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b590:	4295      	cmp	r5, r2
9000b592:	f67f ad3e 	bls.w	9000b012 <JPEG_Process+0x42>
    nb_words = (hjpeg->OutDataLength - hjpeg->JpegOutCount) / 4UL;
9000b596:	6a60      	ldr	r0, [r4, #36]	; 0x24
9000b598:	1a28      	subs	r0, r5, r0
    for (index = 0; index < nb_words; index++)
9000b59a:	0880      	lsrs	r0, r0, #2
9000b59c:	d020      	beq.n	9000b5e0 <JPEG_Process+0x610>
9000b59e:	4631      	mov	r1, r6
9000b5a0:	e000      	b.n	9000b5a4 <JPEG_Process+0x5d4>
      dataword = hjpeg->Instance->DOR;
9000b5a2:	6823      	ldr	r3, [r4, #0]
9000b5a4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
    for (index = 0; index < nb_words; index++)
9000b5a6:	3101      	adds	r1, #1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000b5a8:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b5aa:	69e5      	ldr	r5, [r4, #28]
    for (index = 0; index < nb_words; index++)
9000b5ac:	4288      	cmp	r0, r1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000b5ae:	54ab      	strb	r3, [r5, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000b5b0:	6a65      	ldr	r5, [r4, #36]	; 0x24
9000b5b2:	69e2      	ldr	r2, [r4, #28]
9000b5b4:	442a      	add	r2, r5
9000b5b6:	ea4f 2513 	mov.w	r5, r3, lsr #8
9000b5ba:	7055      	strb	r5, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000b5bc:	6a65      	ldr	r5, [r4, #36]	; 0x24
9000b5be:	69e2      	ldr	r2, [r4, #28]
9000b5c0:	442a      	add	r2, r5
9000b5c2:	ea4f 4513 	mov.w	r5, r3, lsr #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000b5c6:	ea4f 6313 	mov.w	r3, r3, lsr #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000b5ca:	7095      	strb	r5, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000b5cc:	6a65      	ldr	r5, [r4, #36]	; 0x24
9000b5ce:	69e2      	ldr	r2, [r4, #28]
9000b5d0:	442a      	add	r2, r5
9000b5d2:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000b5d4:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000b5d6:	f103 0304 	add.w	r3, r3, #4
9000b5da:	6263      	str	r3, [r4, #36]	; 0x24
    for (index = 0; index < nb_words; index++)
9000b5dc:	d1e1      	bne.n	9000b5a2 <JPEG_Process+0x5d2>
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000b5de:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
9000b5e0:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000b5e2:	429d      	cmp	r5, r3
9000b5e4:	f000 80d6 	beq.w	9000b794 <JPEG_Process+0x7c4>
      nb_bytes = hjpeg->OutDataLength - hjpeg->JpegOutCount;
9000b5e8:	f8d4 8024 	ldr.w	r8, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000b5ec:	6823      	ldr	r3, [r4, #0]
      for (index = 0; index < nb_bytes; index++)
9000b5ee:	ebb5 0008 	subs.w	r0, r5, r8
      dataword = hjpeg->Instance->DOR;
9000b5f2:	6c5f      	ldr	r7, [r3, #68]	; 0x44
      for (index = 0; index < nb_bytes; index++)
9000b5f4:	d00e      	beq.n	9000b614 <JPEG_Process+0x644>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000b5f6:	f006 0303 	and.w	r3, r6, #3
9000b5fa:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b5fc:	69e1      	ldr	r1, [r4, #28]
      for (index = 0; index < nb_bytes; index++)
9000b5fe:	3601      	adds	r6, #1
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000b600:	00db      	lsls	r3, r3, #3
      for (index = 0; index < nb_bytes; index++)
9000b602:	42b0      	cmp	r0, r6
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000b604:	fa27 f303 	lsr.w	r3, r7, r3
9000b608:	548b      	strb	r3, [r1, r2]
        hjpeg->JpegOutCount++;
9000b60a:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000b60c:	f103 0301 	add.w	r3, r3, #1
9000b610:	6263      	str	r3, [r4, #36]	; 0x24
      for (index = 0; index < nb_bytes; index++)
9000b612:	d1f0      	bne.n	9000b5f6 <JPEG_Process+0x626>
      nb_bytes = 4UL - nb_bytes;
9000b614:	f108 0804 	add.w	r8, r8, #4
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000b618:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b61a:	69e1      	ldr	r1, [r4, #28]
9000b61c:	4620      	mov	r0, r4
      nb_bytes = 4UL - nb_bytes;
9000b61e:	eba8 0805 	sub.w	r8, r8, r5
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000b622:	f7f6 f843 	bl	900016ac <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000b626:	2300      	movs	r3, #0
      for (index = nb_bytes; index < 4UL; index++)
9000b628:	f1b8 0f03 	cmp.w	r8, #3
      hjpeg->JpegOutCount = 0;
9000b62c:	6263      	str	r3, [r4, #36]	; 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000b62e:	f67f af75 	bls.w	9000b51c <JPEG_Process+0x54c>
9000b632:	e5f9      	b.n	9000b228 <JPEG_Process+0x258>
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
9000b634:	1a52      	subs	r2, r2, r1
9000b636:	e6a9      	b.n	9000b38c <JPEG_Process+0x3bc>
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
9000b638:	6a21      	ldr	r1, [r4, #32]
9000b63a:	4620      	mov	r0, r4
9000b63c:	f7f6 f816 	bl	9000166c <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength > 4UL)
9000b640:	6aa2      	ldr	r2, [r4, #40]	; 0x28
9000b642:	2a04      	cmp	r2, #4
9000b644:	d902      	bls.n	9000b64c <JPEG_Process+0x67c>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % 4UL);
9000b646:	f022 0203 	bic.w	r2, r2, #3
9000b64a:	62a2      	str	r2, [r4, #40]	; 0x28
    hjpeg->JpegInCount = 0;
9000b64c:	2100      	movs	r1, #0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b64e:	6823      	ldr	r3, [r4, #0]
    hjpeg->JpegInCount = 0;
9000b650:	6221      	str	r1, [r4, #32]
    nb_bytes = hjpeg->InDataLength;
9000b652:	e5f5      	b.n	9000b240 <JPEG_Process+0x270>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000b654:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
9000b658:	6562      	str	r2, [r4, #84]	; 0x54
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000b65a:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000b65c:	e4cd      	b.n	9000affa <JPEG_Process+0x2a>
      if (nb_words > 0UL)
9000b65e:	2a03      	cmp	r2, #3
9000b660:	f240 80a4 	bls.w	9000b7ac <JPEG_Process+0x7dc>
        for (index = 0; index < nb_words; index++)
9000b664:	2900      	cmp	r1, #0
9000b666:	f43f acc8 	beq.w	9000affa <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000b66a:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000b66c:	2901      	cmp	r1, #1
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b66e:	69a2      	ldr	r2, [r4, #24]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b670:	eb02 0500 	add.w	r5, r2, r0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b674:	5c16      	ldrb	r6, [r2, r0]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b676:	78a8      	ldrb	r0, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b678:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b67a:	ea4f 4000 	mov.w	r0, r0, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000b67e:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b680:	ea40 2007 	orr.w	r0, r0, r7, lsl #8
9000b684:	ea40 0006 	orr.w	r0, r0, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b688:	ea40 6005 	orr.w	r0, r0, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b68c:	6418      	str	r0, [r3, #64]	; 0x40
          hjpeg->JpegInCount += 4UL;
9000b68e:	6a20      	ldr	r0, [r4, #32]
9000b690:	f100 0004 	add.w	r0, r0, #4
9000b694:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000b696:	f43f acb0 	beq.w	9000affa <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000b69a:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000b69c:	2902      	cmp	r1, #2
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b69e:	eb02 0500 	add.w	r5, r2, r0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b6a2:	5c16      	ldrb	r6, [r2, r0]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b6a4:	78a8      	ldrb	r0, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b6a6:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b6a8:	ea4f 4000 	mov.w	r0, r0, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000b6ac:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b6ae:	ea40 2007 	orr.w	r0, r0, r7, lsl #8
9000b6b2:	ea40 0006 	orr.w	r0, r0, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b6b6:	ea40 6005 	orr.w	r0, r0, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b6ba:	6418      	str	r0, [r3, #64]	; 0x40
          hjpeg->JpegInCount += 4UL;
9000b6bc:	6a20      	ldr	r0, [r4, #32]
9000b6be:	f100 0004 	add.w	r0, r0, #4
9000b6c2:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000b6c4:	f43f ac99 	beq.w	9000affa <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000b6c8:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000b6ca:	2903      	cmp	r1, #3
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b6cc:	eb02 0500 	add.w	r5, r2, r0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b6d0:	5c16      	ldrb	r6, [r2, r0]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b6d2:	78a8      	ldrb	r0, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b6d4:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b6d6:	ea4f 4000 	mov.w	r0, r0, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000b6da:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b6dc:	ea40 2007 	orr.w	r0, r0, r7, lsl #8
9000b6e0:	ea40 0006 	orr.w	r0, r0, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b6e4:	ea40 6005 	orr.w	r0, r0, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b6e8:	6418      	str	r0, [r3, #64]	; 0x40
          hjpeg->JpegInCount += 4UL;
9000b6ea:	6a20      	ldr	r0, [r4, #32]
9000b6ec:	f100 0004 	add.w	r0, r0, #4
9000b6f0:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000b6f2:	f43f ac82 	beq.w	9000affa <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000b6f6:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000b6f8:	2904      	cmp	r1, #4
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b6fa:	eb02 0500 	add.w	r5, r2, r0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b6fe:	5c16      	ldrb	r6, [r2, r0]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b700:	78a8      	ldrb	r0, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b702:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b704:	ea4f 4000 	mov.w	r0, r0, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000b708:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b70a:	ea40 2007 	orr.w	r0, r0, r7, lsl #8
9000b70e:	ea40 0006 	orr.w	r0, r0, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b712:	ea40 6005 	orr.w	r0, r0, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b716:	6418      	str	r0, [r3, #64]	; 0x40
          hjpeg->JpegInCount += 4UL;
9000b718:	6a20      	ldr	r0, [r4, #32]
9000b71a:	f100 0004 	add.w	r0, r0, #4
9000b71e:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000b720:	f43f ac6b 	beq.w	9000affa <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000b724:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000b726:	2905      	cmp	r1, #5
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b728:	eb02 0500 	add.w	r5, r2, r0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b72c:	5c16      	ldrb	r6, [r2, r0]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b72e:	78a8      	ldrb	r0, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b730:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b732:	ea4f 4000 	mov.w	r0, r0, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000b736:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b738:	ea40 2007 	orr.w	r0, r0, r7, lsl #8
9000b73c:	ea40 0006 	orr.w	r0, r0, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b740:	ea40 6005 	orr.w	r0, r0, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b744:	6418      	str	r0, [r3, #64]	; 0x40
          hjpeg->JpegInCount += 4UL;
9000b746:	6a20      	ldr	r0, [r4, #32]
9000b748:	f100 0004 	add.w	r0, r0, #4
9000b74c:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000b74e:	f43f ac54 	beq.w	9000affa <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000b752:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000b754:	2907      	cmp	r1, #7
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b756:	eb02 0500 	add.w	r5, r2, r0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b75a:	5c16      	ldrb	r6, [r2, r0]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b75c:	78a8      	ldrb	r0, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b75e:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b760:	ea4f 4000 	mov.w	r0, r0, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000b764:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000b766:	ea40 2007 	orr.w	r0, r0, r7, lsl #8
9000b76a:	ea40 0006 	orr.w	r0, r0, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000b76e:	ea40 6005 	orr.w	r0, r0, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b772:	6418      	str	r0, [r3, #64]	; 0x40
          hjpeg->JpegInCount += 4UL;
9000b774:	6a20      	ldr	r0, [r4, #32]
9000b776:	f100 0004 	add.w	r0, r0, #4
9000b77a:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000b77c:	f47f ac3d 	bne.w	9000affa <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000b780:	6a20      	ldr	r0, [r4, #32]
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b782:	e5db      	b.n	9000b33c <JPEG_Process+0x36c>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000b784:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b786:	4620      	mov	r0, r4
9000b788:	69e1      	ldr	r1, [r4, #28]
9000b78a:	f7f5 ff8f 	bl	900016ac <HAL_JPEG_DataReadyCallback>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000b78e:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000b790:	6265      	str	r5, [r4, #36]	; 0x24
9000b792:	e43e      	b.n	9000b012 <JPEG_Process+0x42>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000b794:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b796:	4620      	mov	r0, r4
9000b798:	69e1      	ldr	r1, [r4, #28]
9000b79a:	f7f5 ff87 	bl	900016ac <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000b79e:	2200      	movs	r2, #0
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000b7a0:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000b7a2:	6262      	str	r2, [r4, #36]	; 0x24
9000b7a4:	e435      	b.n	9000b012 <JPEG_Process+0x42>
        input_count = hjpeg->JpegInCount;
9000b7a6:	6a22      	ldr	r2, [r4, #32]
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000b7a8:	69a0      	ldr	r0, [r4, #24]
9000b7aa:	e5c7      	b.n	9000b33c <JPEG_Process+0x36c>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000b7ac:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000b7ae:	2a01      	cmp	r2, #1
          hjpeg->JpegInCount++;
9000b7b0:	6a20      	ldr	r0, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000b7b2:	69a5      	ldr	r5, [r4, #24]
          hjpeg->JpegInCount++;
9000b7b4:	f100 0001 	add.w	r0, r0, #1
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000b7b8:	5c69      	ldrb	r1, [r5, r1]
          hjpeg->JpegInCount++;
9000b7ba:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000b7bc:	d010      	beq.n	9000b7e0 <JPEG_Process+0x810>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000b7be:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000b7c0:	2a03      	cmp	r2, #3
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000b7c2:	5c28      	ldrb	r0, [r5, r0]
9000b7c4:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
          hjpeg->JpegInCount++;
9000b7c8:	6a20      	ldr	r0, [r4, #32]
9000b7ca:	f100 0001 	add.w	r0, r0, #1
9000b7ce:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000b7d0:	d106      	bne.n	9000b7e0 <JPEG_Process+0x810>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000b7d2:	6a22      	ldr	r2, [r4, #32]
9000b7d4:	5ca8      	ldrb	r0, [r5, r2]
          hjpeg->JpegInCount++;
9000b7d6:	6a22      	ldr	r2, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000b7d8:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
          hjpeg->JpegInCount++;
9000b7dc:	3201      	adds	r2, #1
9000b7de:	6222      	str	r2, [r4, #32]
        hjpeg->Instance->DIR = dataword;
9000b7e0:	6419      	str	r1, [r3, #64]	; 0x40
9000b7e2:	e40a      	b.n	9000affa <JPEG_Process+0x2a>

9000b7e4 <HAL_JPEG_IRQHandler>:
  switch (hjpeg->State)
9000b7e4:	f890 304d 	ldrb.w	r3, [r0, #77]	; 0x4d
9000b7e8:	3b03      	subs	r3, #3
9000b7ea:	2b01      	cmp	r3, #1
9000b7ec:	d900      	bls.n	9000b7f0 <HAL_JPEG_IRQHandler+0xc>
9000b7ee:	4770      	bx	lr
      if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000b7f0:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000b7f2:	f003 030c 	and.w	r3, r3, #12
9000b7f6:	2b08      	cmp	r3, #8
{
9000b7f8:	b530      	push	{r4, r5, lr}
9000b7fa:	4604      	mov	r4, r0
9000b7fc:	b083      	sub	sp, #12
      if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000b7fe:	d006      	beq.n	9000b80e <HAL_JPEG_IRQHandler+0x2a>
      else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000b800:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000b802:	f003 030c 	and.w	r3, r3, #12
9000b806:	2b0c      	cmp	r3, #12
9000b808:	d006      	beq.n	9000b818 <HAL_JPEG_IRQHandler+0x34>
}
9000b80a:	b003      	add	sp, #12
9000b80c:	bd30      	pop	{r4, r5, pc}
9000b80e:	b003      	add	sp, #12
9000b810:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
        (void) JPEG_Process(hjpeg);
9000b814:	f7ff bbdc 	b.w	9000afd0 <JPEG_Process>
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000b818:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000b81a:	f003 0303 	and.w	r3, r3, #3
9000b81e:	2b02      	cmp	r3, #2
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000b820:	6803      	ldr	r3, [r0, #0]
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000b822:	d045      	beq.n	9000b8b0 <HAL_JPEG_IRQHandler+0xcc>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF) != 0UL)
9000b824:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000b826:	0692      	lsls	r2, r2, #26
9000b828:	d5ef      	bpl.n	9000b80a <HAL_JPEG_IRQHandler+0x26>
    hjpeg->Context |= JPEG_CONTEXT_ENDING_DMA;
9000b82a:	6d62      	ldr	r2, [r4, #84]	; 0x54
    if (hjpeg->hdmain->State == HAL_MDMA_STATE_BUSY)
9000b82c:	6b20      	ldr	r0, [r4, #48]	; 0x30
    hjpeg->Context |= JPEG_CONTEXT_ENDING_DMA;
9000b82e:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
9000b832:	6562      	str	r2, [r4, #84]	; 0x54
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000b834:	681a      	ldr	r2, [r3, #0]
9000b836:	f022 0201 	bic.w	r2, r2, #1
9000b83a:	601a      	str	r2, [r3, #0]
    __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000b83c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000b83e:	f022 027e 	bic.w	r2, r2, #126	; 0x7e
9000b842:	631a      	str	r2, [r3, #48]	; 0x30
    __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
9000b844:	6b9a      	ldr	r2, [r3, #56]	; 0x38
9000b846:	f042 0260 	orr.w	r2, r2, #96	; 0x60
9000b84a:	639a      	str	r2, [r3, #56]	; 0x38
    if (hjpeg->hdmain->State == HAL_MDMA_STATE_BUSY)
9000b84c:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
9000b850:	2b02      	cmp	r3, #2
9000b852:	d052      	beq.n	9000b8fa <HAL_JPEG_IRQHandler+0x116>
    if (hjpeg->hdmaout->State == HAL_MDMA_STATE_BUSY)
9000b854:	6b60      	ldr	r0, [r4, #52]	; 0x34
9000b856:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
9000b85a:	2b02      	cmp	r3, #2
9000b85c:	d03f      	beq.n	9000b8de <HAL_JPEG_IRQHandler+0xfa>
  hjpeg->JpegOutCount = hjpeg->OutDataLength - (hjpeg->hdmaout->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000b85e:	6803      	ldr	r3, [r0, #0]
9000b860:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000b862:	695b      	ldr	r3, [r3, #20]
9000b864:	f3c3 0310 	ubfx	r3, r3, #0, #17
9000b868:	1ad3      	subs	r3, r2, r3
9000b86a:	6263      	str	r3, [r4, #36]	; 0x24
  if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
9000b86c:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000b86e:	429a      	cmp	r2, r3
9000b870:	d046      	beq.n	9000b900 <HAL_JPEG_IRQHandler+0x11c>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL)
9000b872:	6822      	ldr	r2, [r4, #0]
9000b874:	6b55      	ldr	r5, [r2, #52]	; 0x34
9000b876:	f015 0510 	ands.w	r5, r5, #16
9000b87a:	d135      	bne.n	9000b8e8 <HAL_JPEG_IRQHandler+0x104>
    if (hjpeg->JpegOutCount > 0UL)
9000b87c:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000b87e:	2b00      	cmp	r3, #0
9000b880:	d149      	bne.n	9000b916 <HAL_JPEG_IRQHandler+0x132>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000b882:	6813      	ldr	r3, [r2, #0]
    __HAL_UNLOCK(hjpeg);
9000b884:	2000      	movs	r0, #0
    hjpeg->State = HAL_JPEG_STATE_READY;
9000b886:	2101      	movs	r1, #1
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000b888:	f023 0301 	bic.w	r3, r3, #1
9000b88c:	6013      	str	r3, [r2, #0]
    tmpContext = hjpeg->Context;
9000b88e:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000b890:	6d62      	ldr	r2, [r4, #84]	; 0x54
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000b892:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
9000b896:	f884 004c 	strb.w	r0, [r4, #76]	; 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000b89a:	f402 4282 	and.w	r2, r2, #16640	; 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000b89e:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000b8a0:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000b8a2:	6562      	str	r2, [r4, #84]	; 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000b8a4:	f884 104d 	strb.w	r1, [r4, #77]	; 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000b8a8:	d032      	beq.n	9000b910 <HAL_JPEG_IRQHandler+0x12c>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
9000b8aa:	f7ff f9c9 	bl	9000ac40 <HAL_JPEG_EncodeCpltCallback>
9000b8ae:	e7ac      	b.n	9000b80a <HAL_JPEG_IRQHandler+0x26>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000b8b0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000b8b2:	0651      	lsls	r1, r2, #25
9000b8b4:	d5b6      	bpl.n	9000b824 <HAL_JPEG_IRQHandler+0x40>
      (void) HAL_JPEG_GetInfo(hjpeg, &hjpeg->Conf);
9000b8b6:	1d01      	adds	r1, r0, #4
  if ((hjpeg == NULL) || (pInfo == NULL))
9000b8b8:	9101      	str	r1, [sp, #4]
9000b8ba:	f7fe ff33 	bl	9000a724 <HAL_JPEG_GetInfo.part.0>
      hjpeg->Conf.ImageQuality = 0;
9000b8be:	2300      	movs	r3, #0
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000b8c0:	9901      	ldr	r1, [sp, #4]
9000b8c2:	4620      	mov	r0, r4
      hjpeg->Conf.ImageQuality = 0;
9000b8c4:	6163      	str	r3, [r4, #20]
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000b8c6:	f7f5 fe9b 	bl	90001600 <HAL_JPEG_InfoReadyCallback>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_IT_HPD);
9000b8ca:	6823      	ldr	r3, [r4, #0]
9000b8cc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000b8ce:	f022 0240 	bic.w	r2, r2, #64	; 0x40
9000b8d2:	631a      	str	r2, [r3, #48]	; 0x30
      __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_HPDF);
9000b8d4:	6b9a      	ldr	r2, [r3, #56]	; 0x38
9000b8d6:	f042 0240 	orr.w	r2, r2, #64	; 0x40
9000b8da:	639a      	str	r2, [r3, #56]	; 0x38
9000b8dc:	e7a2      	b.n	9000b824 <HAL_JPEG_IRQHandler+0x40>
}
9000b8de:	b003      	add	sp, #12
9000b8e0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
      (void) HAL_MDMA_Abort_IT(hjpeg->hdmaout);
9000b8e4:	f000 bb30 	b.w	9000bf48 <HAL_MDMA_Abort_IT>
  else if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000b8e8:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000b8ea:	049b      	lsls	r3, r3, #18
9000b8ec:	d48d      	bmi.n	9000b80a <HAL_JPEG_IRQHandler+0x26>
    JPEG_DMA_PollResidualData(hjpeg);
9000b8ee:	4620      	mov	r0, r4
}
9000b8f0:	b003      	add	sp, #12
9000b8f2:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
    JPEG_DMA_PollResidualData(hjpeg);
9000b8f6:	f7ff ba0f 	b.w	9000ad18 <JPEG_DMA_PollResidualData>
      (void) HAL_MDMA_Abort_IT(hjpeg->hdmain);
9000b8fa:	f000 fb25 	bl	9000bf48 <HAL_MDMA_Abort_IT>
9000b8fe:	e7a9      	b.n	9000b854 <HAL_JPEG_IRQHandler+0x70>
    HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000b900:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b902:	4620      	mov	r0, r4
9000b904:	69e1      	ldr	r1, [r4, #28]
9000b906:	f7f5 fed1 	bl	900016ac <HAL_JPEG_DataReadyCallback>
    hjpeg->JpegOutCount = 0;
9000b90a:	2300      	movs	r3, #0
9000b90c:	6263      	str	r3, [r4, #36]	; 0x24
9000b90e:	e7b0      	b.n	9000b872 <HAL_JPEG_IRQHandler+0x8e>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000b910:	f7f5 ff22 	bl	90001758 <HAL_JPEG_DecodeCpltCallback>
9000b914:	e779      	b.n	9000b80a <HAL_JPEG_IRQHandler+0x26>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000b916:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000b918:	4620      	mov	r0, r4
9000b91a:	69e1      	ldr	r1, [r4, #28]
9000b91c:	f7f5 fec6 	bl	900016ac <HAL_JPEG_DataReadyCallback>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000b920:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000b922:	6265      	str	r5, [r4, #36]	; 0x24
9000b924:	e7ad      	b.n	9000b882 <HAL_JPEG_IRQHandler+0x9e>
9000b926:	bf00      	nop

9000b928 <HAL_LTDC_Init>:
{
  uint32_t tmp;
  uint32_t tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
9000b928:	2800      	cmp	r0, #0
9000b92a:	d067      	beq.n	9000b9fc <HAL_LTDC_Init+0xd4>
{
9000b92c:	b538      	push	{r3, r4, r5, lr}
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
9000b92e:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
9000b932:	4604      	mov	r4, r0
9000b934:	f003 02ff 	and.w	r2, r3, #255	; 0xff
9000b938:	2b00      	cmp	r3, #0
9000b93a:	d05a      	beq.n	9000b9f2 <HAL_LTDC_Init+0xca>
  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000b93c:	68a0      	ldr	r0, [r4, #8]
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000b93e:	2102      	movs	r1, #2
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000b940:	e9d4 3200 	ldrd	r3, r2, [r4]
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000b944:	f884 10a1 	strb.w	r1, [r4, #161]	; 0xa1
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000b948:	4302      	orrs	r2, r0
9000b94a:	68e1      	ldr	r1, [r4, #12]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
9000b94c:	6998      	ldr	r0, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000b94e:	430a      	orrs	r2, r1
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
9000b950:	6921      	ldr	r1, [r4, #16]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
9000b952:	f020 4070 	bic.w	r0, r0, #4026531840	; 0xf0000000
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
9000b956:	430a      	orrs	r2, r1

  /* Set Synchronization size */
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
9000b958:	4929      	ldr	r1, [pc, #164]	; (9000ba00 <HAL_LTDC_Init+0xd8>)
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
9000b95a:	6198      	str	r0, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000b95c:	6998      	ldr	r0, [r3, #24]
9000b95e:	4302      	orrs	r2, r0
  tmp = (hltdc->Init.HorizontalSync << 16U);
9000b960:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000b962:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
9000b964:	689a      	ldr	r2, [r3, #8]
9000b966:	400a      	ands	r2, r1
9000b968:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
9000b96a:	689a      	ldr	r2, [r3, #8]
9000b96c:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000b970:	69a0      	ldr	r0, [r4, #24]
9000b972:	4302      	orrs	r2, r0

  /* Set Accumulated Back porch */
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
9000b974:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
9000b976:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
9000b978:	68da      	ldr	r2, [r3, #12]
9000b97a:	400a      	ands	r2, r1
9000b97c:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
9000b97e:	68da      	ldr	r2, [r3, #12]
9000b980:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000b984:	6a20      	ldr	r0, [r4, #32]
9000b986:	4302      	orrs	r2, r0

  /* Set Accumulated Active Width */
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
9000b988:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
9000b98a:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
9000b98c:	691a      	ldr	r2, [r3, #16]
9000b98e:	400a      	ands	r2, r1
9000b990:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
9000b992:	691a      	ldr	r2, [r3, #16]
9000b994:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000b998:	6aa0      	ldr	r0, [r4, #40]	; 0x28
9000b99a:	4302      	orrs	r2, r0

  /* Set Total Width */
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
  tmp = (hltdc->Init.TotalWidth << 16U);
9000b99c:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
9000b99e:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
9000b9a0:	695a      	ldr	r2, [r3, #20]
9000b9a2:	400a      	ands	r2, r1
9000b9a4:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
9000b9a6:	695a      	ldr	r2, [r3, #20]
9000b9a8:	6b21      	ldr	r1, [r4, #48]	; 0x30
9000b9aa:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000b9ae:	430a      	orrs	r2, r1
9000b9b0:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
9000b9b2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
9000b9b4:	f894 0035 	ldrb.w	r0, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
9000b9b8:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
9000b9bc:	f894 1036 	ldrb.w	r1, [r4, #54]	; 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
9000b9c0:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
9000b9c2:	6add      	ldr	r5, [r3, #44]	; 0x2c
9000b9c4:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
9000b9c8:	432a      	orrs	r2, r5
9000b9ca:	ea42 2200 	orr.w	r2, r2, r0, lsl #8

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
9000b9ce:	2000      	movs	r0, #0
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
9000b9d0:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
9000b9d4:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
9000b9d6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000b9d8:	f042 0206 	orr.w	r2, r2, #6
9000b9dc:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
9000b9de:	699a      	ldr	r2, [r3, #24]
9000b9e0:	f042 0201 	orr.w	r2, r2, #1
9000b9e4:	619a      	str	r2, [r3, #24]

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
9000b9e6:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
9000b9e8:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
9000b9ec:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1

  return HAL_OK;
}
9000b9f0:	bd38      	pop	{r3, r4, r5, pc}
    hltdc->Lock = HAL_UNLOCKED;
9000b9f2:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
9000b9f6:	f7f7 fb91 	bl	9000311c <HAL_LTDC_MspInit>
9000b9fa:	e79f      	b.n	9000b93c <HAL_LTDC_Init+0x14>
    return HAL_ERROR;
9000b9fc:	2001      	movs	r0, #1
}
9000b9fe:	4770      	bx	lr
9000ba00:	f000f800 	.word	0xf000f800

9000ba04 <HAL_LTDC_ErrorCallback>:
9000ba04:	4770      	bx	lr
9000ba06:	bf00      	nop

9000ba08 <HAL_LTDC_ReloadEventCallback>:
9000ba08:	4770      	bx	lr
9000ba0a:	bf00      	nop

9000ba0c <HAL_LTDC_IRQHandler>:
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
void HAL_LTDC_IRQHandler(LTDC_HandleTypeDef *hltdc)
{
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
9000ba0c:	6803      	ldr	r3, [r0, #0]
{
9000ba0e:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
9000ba10:	6b9d      	ldr	r5, [r3, #56]	; 0x38
{
9000ba12:	4604      	mov	r4, r0
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
9000ba14:	6b5e      	ldr	r6, [r3, #52]	; 0x34

  /* Transfer Error Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
9000ba16:	076a      	lsls	r2, r5, #29
9000ba18:	d501      	bpl.n	9000ba1e <HAL_LTDC_IRQHandler+0x12>
9000ba1a:	0771      	lsls	r1, r6, #29
9000ba1c:	d41d      	bmi.n	9000ba5a <HAL_LTDC_IRQHandler+0x4e>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* FIFO underrun Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
9000ba1e:	07aa      	lsls	r2, r5, #30
9000ba20:	d501      	bpl.n	9000ba26 <HAL_LTDC_IRQHandler+0x1a>
9000ba22:	07b3      	lsls	r3, r6, #30
9000ba24:	d42d      	bmi.n	9000ba82 <HAL_LTDC_IRQHandler+0x76>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Line Interrupt management ************************************************/
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
9000ba26:	07e8      	lsls	r0, r5, #31
9000ba28:	d501      	bpl.n	9000ba2e <HAL_LTDC_IRQHandler+0x22>
9000ba2a:	07f1      	lsls	r1, r6, #31
9000ba2c:	d440      	bmi.n	9000bab0 <HAL_LTDC_IRQHandler+0xa4>
    HAL_LTDC_LineEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Register reload Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
9000ba2e:	072a      	lsls	r2, r5, #28
9000ba30:	d501      	bpl.n	9000ba36 <HAL_LTDC_IRQHandler+0x2a>
9000ba32:	0733      	lsls	r3, r6, #28
9000ba34:	d400      	bmi.n	9000ba38 <HAL_LTDC_IRQHandler+0x2c>
#else
    /*Call Legacy Reload Event callback */
    HAL_LTDC_ReloadEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }
}
9000ba36:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
9000ba38:	6823      	ldr	r3, [r4, #0]
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
9000ba3a:	2008      	movs	r0, #8
    hltdc->State = HAL_LTDC_STATE_READY;
9000ba3c:	2501      	movs	r5, #1
    __HAL_UNLOCK(hltdc);
9000ba3e:	2100      	movs	r1, #0
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
9000ba40:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000ba42:	f022 0208 	bic.w	r2, r2, #8
9000ba46:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
9000ba48:	63d8      	str	r0, [r3, #60]	; 0x3c
    HAL_LTDC_ReloadEventCallback(hltdc);
9000ba4a:	4620      	mov	r0, r4
    hltdc->State = HAL_LTDC_STATE_READY;
9000ba4c:	f884 50a1 	strb.w	r5, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
9000ba50:	f884 10a0 	strb.w	r1, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
9000ba54:	f7ff ffd8 	bl	9000ba08 <HAL_LTDC_ReloadEventCallback>
}
9000ba58:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
9000ba5a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000ba5c:	f022 0204 	bic.w	r2, r2, #4
9000ba60:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
9000ba62:	2204      	movs	r2, #4
9000ba64:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
9000ba66:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
9000ba6a:	f043 0301 	orr.w	r3, r3, #1
9000ba6e:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
9000ba72:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
9000ba74:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
9000ba78:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
9000ba7c:	f7ff ffc2 	bl	9000ba04 <HAL_LTDC_ErrorCallback>
9000ba80:	e7cd      	b.n	9000ba1e <HAL_LTDC_IRQHandler+0x12>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
9000ba82:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_ErrorCallback(hltdc);
9000ba84:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
9000ba86:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000ba88:	f022 0202 	bic.w	r2, r2, #2
9000ba8c:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
9000ba8e:	2202      	movs	r2, #2
9000ba90:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_ERROR;
9000ba92:	2204      	movs	r2, #4
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
9000ba94:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
9000ba98:	f043 0302 	orr.w	r3, r3, #2
9000ba9c:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
9000baa0:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
9000baa2:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
9000baa6:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
9000baaa:	f7ff ffab 	bl	9000ba04 <HAL_LTDC_ErrorCallback>
9000baae:	e7ba      	b.n	9000ba26 <HAL_LTDC_IRQHandler+0x1a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000bab0:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_LineEventCallback(hltdc);
9000bab2:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000bab4:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000bab6:	f022 0201 	bic.w	r2, r2, #1
9000baba:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
9000babc:	2201      	movs	r2, #1
9000babe:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
9000bac0:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
9000bac2:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
9000bac6:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
9000baca:	f7f6 fe9d 	bl	90002808 <HAL_LTDC_LineEventCallback>
9000bace:	e7ae      	b.n	9000ba2e <HAL_LTDC_IRQHandler+0x22>

9000bad0 <HAL_LTDC_ConfigLayer>:
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
9000bad0:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
9000bad4:	2b01      	cmp	r3, #1
9000bad6:	f000 80c0 	beq.w	9000bc5a <HAL_LTDC_ConfigLayer+0x18a>

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000bada:	2302      	movs	r3, #2
{
9000badc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000bae0:	f04f 0e34 	mov.w	lr, #52	; 0x34
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000bae4:	f8d0 9000 	ldr.w	r9, [r0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000bae8:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
{
9000baec:	b083      	sub	sp, #12
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000baee:	fb0e 0e02 	mla	lr, lr, r2, r0
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000baf2:	01d2      	lsls	r2, r2, #7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000baf4:	f8d9 300c 	ldr.w	r3, [r9, #12]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000baf8:	460c      	mov	r4, r1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000bafa:	f102 0684 	add.w	r6, r2, #132	; 0x84
9000bafe:	460d      	mov	r5, r1
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000bb00:	f3c3 4b0b 	ubfx	fp, r3, #16, #12
9000bb04:	4680      	mov	r8, r0
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000bb06:	eb09 0c06 	add.w	ip, r9, r6
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000bb0a:	f10e 0e38 	add.w	lr, lr, #56	; 0x38
  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000bb0e:	f8df a160 	ldr.w	sl, [pc, #352]	; 9000bc70 <HAL_LTDC_ConfigLayer+0x1a0>
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000bb12:	f8dc 3004 	ldr.w	r3, [ip, #4]
9000bb16:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
9000bb1a:	9301      	str	r3, [sp, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000bb1c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
9000bb1e:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
9000bb22:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000bb24:	686f      	ldr	r7, [r5, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000bb26:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
9000bb2a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
9000bb2c:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
9000bb30:	6823      	ldr	r3, [r4, #0]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000bb32:	44bb      	add	fp, r7
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000bb34:	f8ce 3000 	str.w	r3, [lr]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000bb38:	9b01      	ldr	r3, [sp, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
9000bb3a:	682a      	ldr	r2, [r5, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000bb3c:	f8cc 3004 	str.w	r3, [ip, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
9000bb40:	f8d9 300c 	ldr.w	r3, [r9, #12]
9000bb44:	1c51      	adds	r1, r2, #1
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000bb46:	68e8      	ldr	r0, [r5, #12]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
9000bb48:	f3c3 430b 	ubfx	r3, r3, #16, #12
  tmp2 = (pLayerCfg->Alpha0 << 24U);
9000bb4c:	f8d5 e018 	ldr.w	lr, [r5, #24]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
9000bb50:	440b      	add	r3, r1
9000bb52:	ea43 430b 	orr.w	r3, r3, fp, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
9000bb56:	f8cc 3004 	str.w	r3, [ip, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000bb5a:	f8d9 100c 	ldr.w	r1, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
9000bb5e:	f8dc 3008 	ldr.w	r3, [ip, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000bb62:	f3c1 010a 	ubfx	r1, r1, #0, #11
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
9000bb66:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000bb6a:	4401      	add	r1, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
9000bb6c:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
9000bb70:	68ab      	ldr	r3, [r5, #8]
9000bb72:	f8d9 000c 	ldr.w	r0, [r9, #12]
9000bb76:	3301      	adds	r3, #1
9000bb78:	f3c0 000a 	ubfx	r0, r0, #0, #11
9000bb7c:	4403      	add	r3, r0
9000bb7e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
9000bb82:	6929      	ldr	r1, [r5, #16]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
9000bb84:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
9000bb88:	f8dc 3010 	ldr.w	r3, [ip, #16]
9000bb8c:	f023 0307 	bic.w	r3, r3, #7
9000bb90:	f8cc 3010 	str.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
9000bb94:	f8cc 1010 	str.w	r1, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
9000bb98:	f8dc 3018 	ldr.w	r3, [ip, #24]
9000bb9c:	2300      	movs	r3, #0
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
9000bb9e:	f895 0032 	ldrb.w	r0, [r5, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
9000bba2:	f895 4031 	ldrb.w	r4, [r5, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
9000bba6:	f8cc 3018 	str.w	r3, [ip, #24]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
9000bbaa:	f895 3030 	ldrb.w	r3, [r5, #48]	; 0x30
9000bbae:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
9000bbb2:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
9000bbb6:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
9000bbba:	f8cc 3018 	str.w	r3, [ip, #24]
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
9000bbbe:	f8dc 3014 	ldr.w	r3, [ip, #20]
9000bbc2:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
9000bbc6:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
9000bbca:	696b      	ldr	r3, [r5, #20]
9000bbcc:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000bbd0:	f8dc 001c 	ldr.w	r0, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
9000bbd4:	69eb      	ldr	r3, [r5, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000bbd6:	ea00 0a0a 	and.w	sl, r0, sl
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
9000bbda:	6a28      	ldr	r0, [r5, #32]
9000bbdc:	4303      	orrs	r3, r0
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000bbde:	f8cc a01c 	str.w	sl, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
9000bbe2:	f8cc 301c 	str.w	r3, [ip, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
9000bbe6:	f8dc 3028 	ldr.w	r3, [ip, #40]	; 0x28
9000bbea:	2300      	movs	r3, #0
9000bbec:	f8cc 3028 	str.w	r3, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
9000bbf0:	6a6b      	ldr	r3, [r5, #36]	; 0x24
9000bbf2:	f8cc 3028 	str.w	r3, [ip, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
9000bbf6:	bb59      	cbnz	r1, 9000bc50 <HAL_LTDC_ConfigLayer+0x180>
  {
    tmp = 4U;
9000bbf8:	2304      	movs	r3, #4
    tmp = 1U;
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
9000bbfa:	1abf      	subs	r7, r7, r2
9000bbfc:	6aaa      	ldr	r2, [r5, #40]	; 0x28
9000bbfe:	fb03 f707 	mul.w	r7, r3, r7
9000bc02:	fb02 f303 	mul.w	r3, r2, r3
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
9000bc06:	6aea      	ldr	r2, [r5, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
9000bc08:	3707      	adds	r7, #7
9000bc0a:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
9000bc0e:	f8dc 302c 	ldr.w	r3, [ip, #44]	; 0x2c
9000bc12:	f003 23e0 	and.w	r3, r3, #3758153728	; 0xe000e000
9000bc16:	f8cc 302c 	str.w	r3, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
9000bc1a:	f8cc 702c 	str.w	r7, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
9000bc1e:	4b12      	ldr	r3, [pc, #72]	; (9000bc68 <HAL_LTDC_ConfigLayer+0x198>)
9000bc20:	f8dc 1030 	ldr.w	r1, [ip, #48]	; 0x30
9000bc24:	400b      	ands	r3, r1
9000bc26:	f8cc 3030 	str.w	r3, [ip, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
9000bc2a:	f8cc 2030 	str.w	r2, [ip, #48]	; 0x30
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
9000bc2e:	2201      	movs	r2, #1

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
9000bc30:	f859 3006 	ldr.w	r3, [r9, r6]
9000bc34:	4313      	orrs	r3, r2
9000bc36:	f849 3006 	str.w	r3, [r9, r6]
  __HAL_UNLOCK(hltdc);
9000bc3a:	2300      	movs	r3, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
9000bc3c:	f8c9 2024 	str.w	r2, [r9, #36]	; 0x24
  return HAL_OK;
9000bc40:	4618      	mov	r0, r3
  hltdc->State  = HAL_LTDC_STATE_READY;
9000bc42:	f888 20a1 	strb.w	r2, [r8, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
9000bc46:	f888 30a0 	strb.w	r3, [r8, #160]	; 0xa0
}
9000bc4a:	b003      	add	sp, #12
9000bc4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
9000bc50:	3901      	subs	r1, #1
9000bc52:	2906      	cmp	r1, #6
9000bc54:	d903      	bls.n	9000bc5e <HAL_LTDC_ConfigLayer+0x18e>
  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
9000bc56:	2301      	movs	r3, #1
9000bc58:	e7cf      	b.n	9000bbfa <HAL_LTDC_ConfigLayer+0x12a>
  __HAL_LOCK(hltdc);
9000bc5a:	2002      	movs	r0, #2
}
9000bc5c:	4770      	bx	lr
9000bc5e:	4b03      	ldr	r3, [pc, #12]	; (9000bc6c <HAL_LTDC_ConfigLayer+0x19c>)
9000bc60:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
9000bc64:	e7c9      	b.n	9000bbfa <HAL_LTDC_ConfigLayer+0x12a>
9000bc66:	bf00      	nop
9000bc68:	fffff800 	.word	0xfffff800
9000bc6c:	9002b8cc 	.word	0x9002b8cc
9000bc70:	fffff8f8 	.word	0xfffff8f8

9000bc74 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
9000bc74:	f890 20a0 	ldrb.w	r2, [r0, #160]	; 0xa0
9000bc78:	2a01      	cmp	r2, #1
9000bc7a:	d019      	beq.n	9000bcb0 <HAL_LTDC_ProgramLineEvent+0x3c>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000bc7c:	6802      	ldr	r2, [r0, #0]
9000bc7e:	4603      	mov	r3, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000bc80:	2002      	movs	r0, #2
  __HAL_UNLOCK(hltdc);
9000bc82:	f04f 0c00 	mov.w	ip, #0
{
9000bc86:	b410      	push	{r4}
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000bc88:	f883 00a1 	strb.w	r0, [r3, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000bc8c:	6b50      	ldr	r0, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
9000bc8e:	4c09      	ldr	r4, [pc, #36]	; (9000bcb4 <HAL_LTDC_ProgramLineEvent+0x40>)
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000bc90:	f020 0001 	bic.w	r0, r0, #1
9000bc94:	6350      	str	r0, [r2, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
9000bc96:	2001      	movs	r0, #1
  LTDC->LIPCR = (uint32_t)Line;
9000bc98:	6421      	str	r1, [r4, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
9000bc9a:	6b51      	ldr	r1, [r2, #52]	; 0x34
9000bc9c:	4301      	orrs	r1, r0
9000bc9e:	6351      	str	r1, [r2, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
9000bca0:	f883 00a1 	strb.w	r0, [r3, #161]	; 0xa1
  return HAL_OK;
9000bca4:	4660      	mov	r0, ip
  __HAL_UNLOCK(hltdc);
9000bca6:	f883 c0a0 	strb.w	ip, [r3, #160]	; 0xa0
}
9000bcaa:	f85d 4b04 	ldr.w	r4, [sp], #4
9000bcae:	4770      	bx	lr
  __HAL_LOCK(hltdc);
9000bcb0:	2002      	movs	r0, #2
}
9000bcb2:	4770      	bx	lr
9000bcb4:	50001000 	.word	0x50001000

9000bcb8 <HAL_MDMA_Init>:
  * @param  hmdma: Pointer to a MDMA_HandleTypeDef structure that contains
  *               the configuration information for the specified MDMA Channel.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_MDMA_Init(MDMA_HandleTypeDef *hmdma)
{
9000bcb8:	b538      	push	{r3, r4, r5, lr}
9000bcba:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
9000bcbc:	f7fd f984 	bl	90008fc8 <HAL_GetTick>

  /* Check the MDMA peripheral handle */
  if(hmdma == NULL)
9000bcc0:	2c00      	cmp	r4, #0
9000bcc2:	d05a      	beq.n	9000bd7a <HAL_MDMA_Init+0xc2>

  /* Change MDMA peripheral state */
  hmdma->State = HAL_MDMA_STATE_BUSY;

  /* Disable the MDMA channel */
  __HAL_MDMA_DISABLE(hmdma);
9000bcc4:	6823      	ldr	r3, [r4, #0]
  hmdma->State = HAL_MDMA_STATE_BUSY;
9000bcc6:	2202      	movs	r2, #2
  __HAL_UNLOCK(hmdma);
9000bcc8:	2100      	movs	r1, #0
9000bcca:	4605      	mov	r5, r0
  hmdma->State = HAL_MDMA_STATE_BUSY;
9000bccc:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
  __HAL_UNLOCK(hmdma);
9000bcd0:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
  __HAL_MDMA_DISABLE(hmdma);
9000bcd4:	68da      	ldr	r2, [r3, #12]
9000bcd6:	f022 0201 	bic.w	r2, r2, #1
9000bcda:	60da      	str	r2, [r3, #12]

  /* Check if the MDMA channel is effectively disabled */
  while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000bcdc:	e005      	b.n	9000bcea <HAL_MDMA_Init+0x32>
  {
    /* Check for the Timeout */
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_MDMA_ABORT)
9000bcde:	f7fd f973 	bl	90008fc8 <HAL_GetTick>
9000bce2:	1b43      	subs	r3, r0, r5
9000bce4:	2b05      	cmp	r3, #5
9000bce6:	d841      	bhi.n	9000bd6c <HAL_MDMA_Init+0xb4>
  while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000bce8:	6823      	ldr	r3, [r4, #0]
9000bcea:	68da      	ldr	r2, [r3, #12]
9000bcec:	07d2      	lsls	r2, r2, #31
9000bcee:	d4f6      	bmi.n	9000bcde <HAL_MDMA_Init+0x26>
  /* Write new CTCR Register value */
  hmdma->Instance->CTCR =  hmdma->Init.SourceInc      | hmdma->Init.DestinationInc | \
                           hmdma->Init.SourceDataSize | hmdma->Init.DestDataSize   | \
                           hmdma->Init.DataAlignment  | hmdma->Init.SourceBurst    | \
                           hmdma->Init.DestBurst                                   | \
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000bcf0:	e9d4 2505 	ldrd	r2, r5, [r4, #20]
9000bcf4:	69e0      	ldr	r0, [r4, #28]
9000bcf6:	432a      	orrs	r2, r5
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000bcf8:	68e1      	ldr	r1, [r4, #12]
9000bcfa:	6925      	ldr	r5, [r4, #16]
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000bcfc:	4302      	orrs	r2, r0
9000bcfe:	6a20      	ldr	r0, [r4, #32]
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000bd00:	4329      	orrs	r1, r5
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000bd02:	4302      	orrs	r2, r0
9000bd04:	6a60      	ldr	r0, [r4, #36]	; 0x24
9000bd06:	4302      	orrs	r2, r0
9000bd08:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
9000bd0a:	4302      	orrs	r2, r0
9000bd0c:	6b20      	ldr	r0, [r4, #48]	; 0x30
9000bd0e:	4302      	orrs	r2, r0
9000bd10:	68a0      	ldr	r0, [r4, #8]
9000bd12:	4302      	orrs	r2, r0
9000bd14:	6aa0      	ldr	r0, [r4, #40]	; 0x28
9000bd16:	3801      	subs	r0, #1
9000bd18:	ea42 4280 	orr.w	r2, r2, r0, lsl #18
                           hmdma->Init.TransferTriggerMode;

  /* If SW request set the CTCR register to SW Request Mode */
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000bd1c:	6860      	ldr	r0, [r4, #4]
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000bd1e:	60d9      	str	r1, [r3, #12]
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000bd20:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
  hmdma->Instance->CTCR =  hmdma->Init.SourceInc      | hmdma->Init.DestinationInc | \
9000bd24:	611a      	str	r2, [r3, #16]
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000bd26:	d103      	bne.n	9000bd30 <HAL_MDMA_Init+0x78>
    -If the request is done by SW : BWM could be set to 1 or 0.
    -If the request is done by a peripheral :
    If mask address not set (0) => BWM must be set to 0
    If mask address set (different than 0) => BWM could be set to 1 or 0
    */
    hmdma->Instance->CTCR |= (MDMA_CTCR_SWRM | MDMA_CTCR_BWM);
9000bd28:	691a      	ldr	r2, [r3, #16]
9000bd2a:	f042 4240 	orr.w	r2, r2, #3221225472	; 0xc0000000
9000bd2e:	611a      	str	r2, [r3, #16]
  }

  /* Reset CBNDTR Register */
  hmdma->Instance->CBNDTR = 0;
9000bd30:	2100      	movs	r1, #0

  /* if block source address offset is negative set the Block Repeat Source address Update Mode to decrement */
  if(hmdma->Init.SourceBlockAddressOffset < 0)
9000bd32:	6b62      	ldr	r2, [r4, #52]	; 0x34
9000bd34:	428a      	cmp	r2, r1
  hmdma->Instance->CBNDTR = 0;
9000bd36:	6159      	str	r1, [r3, #20]
  if(hmdma->Init.SourceBlockAddressOffset < 0)
9000bd38:	db30      	blt.n	9000bd9c <HAL_MDMA_Init+0xe4>
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
  }
  else
  {
    /* Write new CBRUR Register value : source repeat block offset */
    hmdma->Instance->CBRUR = (((uint32_t)hmdma->Init.SourceBlockAddressOffset) & 0x0000FFFFU);
9000bd3a:	b292      	uxth	r2, r2
9000bd3c:	621a      	str	r2, [r3, #32]
  }

  /* If block destination address offset is negative set the Block Repeat destination address Update Mode to decrement */
  if(hmdma->Init.DestBlockAddressOffset < 0)
9000bd3e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
9000bd40:	2a00      	cmp	r2, #0
9000bd42:	db1c      	blt.n	9000bd7e <HAL_MDMA_Init+0xc6>
    hmdma->Instance->CBRUR |= ((blockoffset & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
  }
  else
  {
    /*write new CBRUR Register value : destination repeat block offset */
    hmdma->Instance->CBRUR |= ((((uint32_t)hmdma->Init.DestBlockAddressOffset) & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000bd44:	6a19      	ldr	r1, [r3, #32]
  }

  /* if HW request set the HW request and the requet CleraMask and ClearData MaskData, */
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000bd46:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
    hmdma->Instance->CBRUR |= ((((uint32_t)hmdma->Init.DestBlockAddressOffset) & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000bd4a:	ea41 4202 	orr.w	r2, r1, r2, lsl #16
9000bd4e:	621a      	str	r2, [r3, #32]
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000bd50:	d021      	beq.n	9000bd96 <HAL_MDMA_Init+0xde>
  {
    /* Set the HW request in CTRB register  */
    hmdma->Instance->CTBR = hmdma->Init.Request & MDMA_CTBR_TSEL;
9000bd52:	b2c0      	uxtb	r0, r0
9000bd54:	6298      	str	r0, [r3, #40]	; 0x28
  {
    hmdma->Instance->CTBR = 0;
  }

  /* Write Link Address Register */
  hmdma->Instance->CLAR =  0;
9000bd56:	2200      	movs	r2, #0
  hmdma->State = HAL_MDMA_STATE_READY;
9000bd58:	2101      	movs	r1, #1
  hmdma->Instance->CLAR =  0;
9000bd5a:	625a      	str	r2, [r3, #36]	; 0x24
  return HAL_OK;
9000bd5c:	4610      	mov	r0, r2
  hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000bd5e:	66a2      	str	r2, [r4, #104]	; 0x68
  hmdma->LinkedListNodeCounter  = 0;
9000bd60:	6662      	str	r2, [r4, #100]	; 0x64
  hmdma->State = HAL_MDMA_STATE_READY;
9000bd62:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
  hmdma->LastLinkedListNodeAddress   = 0;
9000bd66:	e9c4 2217 	strd	r2, r2, [r4, #92]	; 0x5c
}
9000bd6a:	bd38      	pop	{r3, r4, r5, pc}
      hmdma->ErrorCode = HAL_MDMA_ERROR_TIMEOUT;
9000bd6c:	2240      	movs	r2, #64	; 0x40
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000bd6e:	2303      	movs	r3, #3
      return HAL_ERROR;
9000bd70:	2001      	movs	r0, #1
      hmdma->ErrorCode = HAL_MDMA_ERROR_TIMEOUT;
9000bd72:	66a2      	str	r2, [r4, #104]	; 0x68
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000bd74:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
}
9000bd78:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
9000bd7a:	2001      	movs	r0, #1
}
9000bd7c:	bd38      	pop	{r3, r4, r5, pc}
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRDUM;
9000bd7e:	6959      	ldr	r1, [r3, #20]
    blockoffset = (uint32_t)(- hmdma->Init.DestBlockAddressOffset);
9000bd80:	4252      	negs	r2, r2
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000bd82:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRDUM;
9000bd86:	f441 2100 	orr.w	r1, r1, #524288	; 0x80000
9000bd8a:	6159      	str	r1, [r3, #20]
    hmdma->Instance->CBRUR |= ((blockoffset & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000bd8c:	6a19      	ldr	r1, [r3, #32]
9000bd8e:	ea41 4202 	orr.w	r2, r1, r2, lsl #16
9000bd92:	621a      	str	r2, [r3, #32]
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000bd94:	d1dd      	bne.n	9000bd52 <HAL_MDMA_Init+0x9a>
    hmdma->Instance->CTBR = 0;
9000bd96:	2200      	movs	r2, #0
9000bd98:	629a      	str	r2, [r3, #40]	; 0x28
9000bd9a:	e7dc      	b.n	9000bd56 <HAL_MDMA_Init+0x9e>
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000bd9c:	6959      	ldr	r1, [r3, #20]
    blockoffset = (uint32_t)(- hmdma->Init.SourceBlockAddressOffset);
9000bd9e:	4252      	negs	r2, r2
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000bda0:	f441 2180 	orr.w	r1, r1, #262144	; 0x40000
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
9000bda4:	b292      	uxth	r2, r2
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000bda6:	6159      	str	r1, [r3, #20]
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
9000bda8:	621a      	str	r2, [r3, #32]
9000bdaa:	e7c8      	b.n	9000bd3e <HAL_MDMA_Init+0x86>

9000bdac <HAL_MDMA_DeInit>:
  if(hmdma == NULL)
9000bdac:	b1f8      	cbz	r0, 9000bdee <HAL_MDMA_DeInit+0x42>
  __HAL_MDMA_DISABLE(hmdma);
9000bdae:	6802      	ldr	r2, [r0, #0]
9000bdb0:	4601      	mov	r1, r0
  hmdma->Instance->CCR  = 0;
9000bdb2:	2300      	movs	r3, #0
  __HAL_MDMA_DISABLE(hmdma);
9000bdb4:	68d0      	ldr	r0, [r2, #12]
{
9000bdb6:	b410      	push	{r4}
  __HAL_MDMA_DISABLE(hmdma);
9000bdb8:	f020 0001 	bic.w	r0, r0, #1
  __HAL_MDMA_CLEAR_FLAG(hmdma,(MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BRT | MDMA_FLAG_BT | MDMA_FLAG_BFTC));
9000bdbc:	241f      	movs	r4, #31
  __HAL_MDMA_DISABLE(hmdma);
9000bdbe:	60d0      	str	r0, [r2, #12]
  return HAL_OK;
9000bdc0:	4618      	mov	r0, r3
  hmdma->Instance->CCR  = 0;
9000bdc2:	60d3      	str	r3, [r2, #12]
  hmdma->Instance->CTCR = 0;
9000bdc4:	6113      	str	r3, [r2, #16]
  hmdma->Instance->CBNDTR = 0;
9000bdc6:	6153      	str	r3, [r2, #20]
  hmdma->Instance->CSAR = 0;
9000bdc8:	6193      	str	r3, [r2, #24]
  hmdma->Instance->CDAR = 0;
9000bdca:	61d3      	str	r3, [r2, #28]
  hmdma->Instance->CBRUR = 0;
9000bdcc:	6213      	str	r3, [r2, #32]
  hmdma->Instance->CLAR = 0;
9000bdce:	6253      	str	r3, [r2, #36]	; 0x24
  hmdma->Instance->CTBR = 0;
9000bdd0:	6293      	str	r3, [r2, #40]	; 0x28
  hmdma->Instance->CMAR = 0;
9000bdd2:	6313      	str	r3, [r2, #48]	; 0x30
  hmdma->Instance->CMDR = 0;
9000bdd4:	6353      	str	r3, [r2, #52]	; 0x34
  __HAL_MDMA_CLEAR_FLAG(hmdma,(MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BRT | MDMA_FLAG_BT | MDMA_FLAG_BFTC));
9000bdd6:	6054      	str	r4, [r2, #4]
  hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000bdd8:	668b      	str	r3, [r1, #104]	; 0x68
  __HAL_UNLOCK(hmdma);
9000bdda:	f881 303c 	strb.w	r3, [r1, #60]	; 0x3c
  hmdma->State = HAL_MDMA_STATE_RESET;
9000bdde:	f881 303d 	strb.w	r3, [r1, #61]	; 0x3d
}
9000bde2:	f85d 4b04 	ldr.w	r4, [sp], #4
  hmdma->LinkedListNodeCounter  = 0;
9000bde6:	664b      	str	r3, [r1, #100]	; 0x64
  hmdma->LastLinkedListNodeAddress   = 0;
9000bde8:	e9c1 3317 	strd	r3, r3, [r1, #92]	; 0x5c
}
9000bdec:	4770      	bx	lr
    return HAL_ERROR;
9000bdee:	2001      	movs	r0, #1
}
9000bdf0:	4770      	bx	lr
9000bdf2:	bf00      	nop

9000bdf4 <HAL_MDMA_ConfigPostRequestMask>:
  if(hmdma == NULL)
9000bdf4:	b310      	cbz	r0, 9000be3c <HAL_MDMA_ConfigPostRequestMask+0x48>
9000bdf6:	4603      	mov	r3, r0
  __HAL_LOCK(hmdma);
9000bdf8:	f890 003c 	ldrb.w	r0, [r0, #60]	; 0x3c
9000bdfc:	2801      	cmp	r0, #1
9000bdfe:	d01f      	beq.n	9000be40 <HAL_MDMA_ConfigPostRequestMask+0x4c>
{
9000be00:	b530      	push	{r4, r5, lr}
  __HAL_LOCK(hmdma);
9000be02:	f04f 0e01 	mov.w	lr, #1
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000be06:	f893 c03d 	ldrb.w	ip, [r3, #61]	; 0x3d
9000be0a:	45f4      	cmp	ip, lr
9000be0c:	fa5f f08c 	uxtb.w	r0, ip
  __HAL_LOCK(hmdma);
9000be10:	f883 e03c 	strb.w	lr, [r3, #60]	; 0x3c
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000be14:	d004      	beq.n	9000be20 <HAL_MDMA_ConfigPostRequestMask+0x2c>
    status =  HAL_ERROR;
9000be16:	4670      	mov	r0, lr
  __HAL_UNLOCK(hmdma);
9000be18:	2200      	movs	r2, #0
9000be1a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
}
9000be1e:	bd30      	pop	{r4, r5, pc}
    if((hmdma->Instance->CTCR & MDMA_CTCR_SWRM) == 0U)
9000be20:	681d      	ldr	r5, [r3, #0]
9000be22:	692c      	ldr	r4, [r5, #16]
9000be24:	f014 4480 	ands.w	r4, r4, #1073741824	; 0x40000000
9000be28:	d1f6      	bne.n	9000be18 <HAL_MDMA_ConfigPostRequestMask+0x24>
      hmdma->Instance->CMAR = MaskAddress;
9000be2a:	6329      	str	r1, [r5, #48]	; 0x30
      hmdma->Instance->CMDR = MaskData;
9000be2c:	636a      	str	r2, [r5, #52]	; 0x34
        hmdma->Instance->CTCR &=  ~MDMA_CTCR_BWM;
9000be2e:	692a      	ldr	r2, [r5, #16]
      if(MaskAddress == 0U)
9000be30:	b941      	cbnz	r1, 9000be44 <HAL_MDMA_ConfigPostRequestMask+0x50>
        hmdma->Instance->CTCR &=  ~MDMA_CTCR_BWM;
9000be32:	f022 4200 	bic.w	r2, r2, #2147483648	; 0x80000000
  HAL_StatusTypeDef  status = HAL_OK;
9000be36:	4608      	mov	r0, r1
        hmdma->Instance->CTCR &=  ~MDMA_CTCR_BWM;
9000be38:	612a      	str	r2, [r5, #16]
9000be3a:	e7ed      	b.n	9000be18 <HAL_MDMA_ConfigPostRequestMask+0x24>
    return HAL_ERROR;
9000be3c:	2001      	movs	r0, #1
9000be3e:	4770      	bx	lr
  __HAL_LOCK(hmdma);
9000be40:	2002      	movs	r0, #2
}
9000be42:	4770      	bx	lr
        hmdma->Instance->CTCR |=  MDMA_CTCR_BWM;
9000be44:	f042 4200 	orr.w	r2, r2, #2147483648	; 0x80000000
  HAL_StatusTypeDef  status = HAL_OK;
9000be48:	4620      	mov	r0, r4
        hmdma->Instance->CTCR |=  MDMA_CTCR_BWM;
9000be4a:	612a      	str	r2, [r5, #16]
9000be4c:	e7e4      	b.n	9000be18 <HAL_MDMA_ConfigPostRequestMask+0x24>
9000be4e:	bf00      	nop

9000be50 <HAL_MDMA_Start_IT>:
  if(hmdma == NULL)
9000be50:	2800      	cmp	r0, #0
9000be52:	d06f      	beq.n	9000bf34 <HAL_MDMA_Start_IT+0xe4>
9000be54:	4684      	mov	ip, r0
  __HAL_LOCK(hmdma);
9000be56:	f890 003c 	ldrb.w	r0, [r0, #60]	; 0x3c
9000be5a:	2801      	cmp	r0, #1
9000be5c:	d072      	beq.n	9000bf44 <HAL_MDMA_Start_IT+0xf4>
9000be5e:	2001      	movs	r0, #1
9000be60:	f88c 003c 	strb.w	r0, [ip, #60]	; 0x3c
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000be64:	f89c 003d 	ldrb.w	r0, [ip, #61]	; 0x3d
9000be68:	2801      	cmp	r0, #1
9000be6a:	d004      	beq.n	9000be76 <HAL_MDMA_Start_IT+0x26>
    __HAL_UNLOCK(hmdma);
9000be6c:	2300      	movs	r3, #0
    return HAL_BUSY;
9000be6e:	2002      	movs	r0, #2
    __HAL_UNLOCK(hmdma);
9000be70:	f88c 303c 	strb.w	r3, [ip, #60]	; 0x3c
    return HAL_BUSY;
9000be74:	4770      	bx	lr
    hmdma->State = HAL_MDMA_STATE_BUSY;
9000be76:	2002      	movs	r0, #2
  MODIFY_REG(hmdma->Instance->CBNDTR ,MDMA_CBNDTR_BNDT, (BlockDataLength & MDMA_CBNDTR_BNDT));
9000be78:	f3c3 0310 	ubfx	r3, r3, #0, #17
  if((addressMask == 0x20000000U) || (addressMask == 0x00000000U))
9000be7c:	f011 4f5f 	tst.w	r1, #3741319168	; 0xdf000000
{
9000be80:	b530      	push	{r4, r5, lr}
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000be82:	9d03      	ldr	r5, [sp, #12]
    hmdma->State = HAL_MDMA_STATE_BUSY;
9000be84:	f88c 003d 	strb.w	r0, [ip, #61]	; 0x3d
    hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000be88:	f04f 0000 	mov.w	r0, #0
    __HAL_MDMA_DISABLE(hmdma);
9000be8c:	f8dc 4000 	ldr.w	r4, [ip]
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000be90:	f105 3eff 	add.w	lr, r5, #4294967295
    hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000be94:	f8cc 0068 	str.w	r0, [ip, #104]	; 0x68
  MODIFY_REG(hmdma->Instance->CBNDTR ,MDMA_CBNDTR_BNDT, (BlockDataLength & MDMA_CBNDTR_BNDT));
9000be98:	f5a0 3000 	sub.w	r0, r0, #131072	; 0x20000
    __HAL_MDMA_DISABLE(hmdma);
9000be9c:	68e5      	ldr	r5, [r4, #12]
9000be9e:	f025 0501 	bic.w	r5, r5, #1
9000bea2:	60e5      	str	r5, [r4, #12]
  MODIFY_REG(hmdma->Instance->CBNDTR ,MDMA_CBNDTR_BNDT, (BlockDataLength & MDMA_CBNDTR_BNDT));
9000bea4:	6965      	ldr	r5, [r4, #20]
9000bea6:	ea00 0005 	and.w	r0, r0, r5
9000beaa:	ea40 0003 	orr.w	r0, r0, r3
9000beae:	6160      	str	r0, [r4, #20]
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000beb0:	6963      	ldr	r3, [r4, #20]
9000beb2:	f3c3 0313 	ubfx	r3, r3, #0, #20
9000beb6:	ea43 530e 	orr.w	r3, r3, lr, lsl #20
9000beba:	6163      	str	r3, [r4, #20]
  __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_CISR_BRTIF | MDMA_CISR_BTIF | MDMA_CISR_TCIF);
9000bebc:	f04f 031f 	mov.w	r3, #31
9000bec0:	6063      	str	r3, [r4, #4]
  hmdma->Instance->CDAR = DstAddress;
9000bec2:	61e2      	str	r2, [r4, #28]
  hmdma->Instance->CSAR = SrcAddress;
9000bec4:	61a1      	str	r1, [r4, #24]
    hmdma->Instance->CTBR |= MDMA_CTBR_SBUS;
9000bec6:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000bec8:	bf0c      	ite	eq
9000beca:	f443 3380 	orreq.w	r3, r3, #65536	; 0x10000
    hmdma->Instance->CTBR &= (~MDMA_CTBR_SBUS);
9000bece:	f423 3380 	bicne.w	r3, r3, #65536	; 0x10000
  if((addressMask == 0x20000000U) || (addressMask == 0x00000000U))
9000bed2:	f012 4f5f 	tst.w	r2, #3741319168	; 0xdf000000
    if(hmdma->XferBlockCpltCallback != NULL)
9000bed6:	f8dc 204c 	ldr.w	r2, [ip, #76]	; 0x4c
    hmdma->Instance->CTBR &= (~MDMA_CTBR_SBUS);
9000beda:	62a3      	str	r3, [r4, #40]	; 0x28
    hmdma->Instance->CTBR |= MDMA_CTBR_DBUS;
9000bedc:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000bede:	bf0c      	ite	eq
9000bee0:	f443 3300 	orreq.w	r3, r3, #131072	; 0x20000
    hmdma->Instance->CTBR &= (~MDMA_CTBR_DBUS);
9000bee4:	f423 3300 	bicne.w	r3, r3, #131072	; 0x20000
9000bee8:	62a3      	str	r3, [r4, #40]	; 0x28
  hmdma->Instance->CLAR = (uint32_t)hmdma->FirstLinkedListNodeAddress;
9000beea:	f8dc 305c 	ldr.w	r3, [ip, #92]	; 0x5c
9000beee:	6263      	str	r3, [r4, #36]	; 0x24
    __HAL_MDMA_ENABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC));
9000bef0:	68e3      	ldr	r3, [r4, #12]
9000bef2:	f043 0306 	orr.w	r3, r3, #6
9000bef6:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferBlockCpltCallback != NULL)
9000bef8:	b11a      	cbz	r2, 9000bf02 <HAL_MDMA_Start_IT+0xb2>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BT);
9000befa:	68e3      	ldr	r3, [r4, #12]
9000befc:	f043 0310 	orr.w	r3, r3, #16
9000bf00:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000bf02:	f8dc 3050 	ldr.w	r3, [ip, #80]	; 0x50
9000bf06:	b11b      	cbz	r3, 9000bf10 <HAL_MDMA_Start_IT+0xc0>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BRT);
9000bf08:	68e3      	ldr	r3, [r4, #12]
9000bf0a:	f043 0308 	orr.w	r3, r3, #8
9000bf0e:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferBufferCpltCallback != NULL)
9000bf10:	f8dc 3048 	ldr.w	r3, [ip, #72]	; 0x48
9000bf14:	b11b      	cbz	r3, 9000bf1e <HAL_MDMA_Start_IT+0xce>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BFTC);
9000bf16:	68e3      	ldr	r3, [r4, #12]
9000bf18:	f043 0320 	orr.w	r3, r3, #32
9000bf1c:	60e3      	str	r3, [r4, #12]
    __HAL_MDMA_ENABLE(hmdma);
9000bf1e:	68e3      	ldr	r3, [r4, #12]
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000bf20:	f8dc 2004 	ldr.w	r2, [ip, #4]
    __HAL_MDMA_ENABLE(hmdma);
9000bf24:	f043 0301 	orr.w	r3, r3, #1
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000bf28:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
    __HAL_MDMA_ENABLE(hmdma);
9000bf2c:	60e3      	str	r3, [r4, #12]
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000bf2e:	d003      	beq.n	9000bf38 <HAL_MDMA_Start_IT+0xe8>
  return HAL_OK;
9000bf30:	2000      	movs	r0, #0
}
9000bf32:	bd30      	pop	{r4, r5, pc}
    return HAL_ERROR;
9000bf34:	2001      	movs	r0, #1
9000bf36:	4770      	bx	lr
      hmdma->Instance->CCR |=  MDMA_CCR_SWRQ;
9000bf38:	68e3      	ldr	r3, [r4, #12]
  return HAL_OK;
9000bf3a:	2000      	movs	r0, #0
      hmdma->Instance->CCR |=  MDMA_CCR_SWRQ;
9000bf3c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
9000bf40:	60e3      	str	r3, [r4, #12]
}
9000bf42:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hmdma);
9000bf44:	2002      	movs	r0, #2
}
9000bf46:	4770      	bx	lr

9000bf48 <HAL_MDMA_Abort_IT>:
  if(hmdma == NULL)
9000bf48:	4603      	mov	r3, r0
9000bf4a:	b188      	cbz	r0, 9000bf70 <HAL_MDMA_Abort_IT+0x28>
  if(HAL_MDMA_STATE_BUSY != hmdma->State)
9000bf4c:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
9000bf50:	2a02      	cmp	r2, #2
9000bf52:	d003      	beq.n	9000bf5c <HAL_MDMA_Abort_IT+0x14>
    hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
9000bf54:	2280      	movs	r2, #128	; 0x80
    return HAL_ERROR;
9000bf56:	2001      	movs	r0, #1
    hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
9000bf58:	669a      	str	r2, [r3, #104]	; 0x68
    return HAL_ERROR;
9000bf5a:	4770      	bx	lr
    __HAL_MDMA_DISABLE(hmdma);
9000bf5c:	6802      	ldr	r2, [r0, #0]
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000bf5e:	2104      	movs	r1, #4
  return HAL_OK;
9000bf60:	2000      	movs	r0, #0
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000bf62:	f883 103d 	strb.w	r1, [r3, #61]	; 0x3d
    __HAL_MDMA_DISABLE(hmdma);
9000bf66:	68d3      	ldr	r3, [r2, #12]
9000bf68:	f023 0301 	bic.w	r3, r3, #1
9000bf6c:	60d3      	str	r3, [r2, #12]
  return HAL_OK;
9000bf6e:	4770      	bx	lr
    return HAL_ERROR;
9000bf70:	2001      	movs	r0, #1
}
9000bf72:	4770      	bx	lr

9000bf74 <HAL_MDMA_IRQHandler>:
{
9000bf74:	b530      	push	{r4, r5, lr}
  __IO uint32_t count = 0;
9000bf76:	2300      	movs	r3, #0
{
9000bf78:	b083      	sub	sp, #12
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000bf7a:	f04f 45a4 	mov.w	r5, #1375731712	; 0x52000000
{
9000bf7e:	4604      	mov	r4, r0
  __IO uint32_t count = 0;
9000bf80:	9301      	str	r3, [sp, #4]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000bf82:	2101      	movs	r1, #1
  uint32_t timeout = SystemCoreClock / 9600U;
9000bf84:	4b57      	ldr	r3, [pc, #348]	; (9000c0e4 <HAL_MDMA_IRQHandler+0x170>)
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000bf86:	6828      	ldr	r0, [r5, #0]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000bf88:	4a57      	ldr	r2, [pc, #348]	; (9000c0e8 <HAL_MDMA_IRQHandler+0x174>)
  uint32_t timeout = SystemCoreClock / 9600U;
9000bf8a:	681d      	ldr	r5, [r3, #0]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000bf8c:	6823      	ldr	r3, [r4, #0]
9000bf8e:	441a      	add	r2, r3
9000bf90:	f3c2 1284 	ubfx	r2, r2, #6, #5
9000bf94:	fa01 f202 	lsl.w	r2, r1, r2
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000bf98:	4202      	tst	r2, r0
9000bf9a:	f000 80a0 	beq.w	9000c0de <HAL_MDMA_IRQHandler+0x16a>
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_TE) != 0U))
9000bf9e:	681a      	ldr	r2, [r3, #0]
9000bfa0:	07d1      	lsls	r1, r2, #31
9000bfa2:	d529      	bpl.n	9000bff8 <HAL_MDMA_IRQHandler+0x84>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_TE) != 0U)
9000bfa4:	68da      	ldr	r2, [r3, #12]
9000bfa6:	0792      	lsls	r2, r2, #30
9000bfa8:	d526      	bpl.n	9000bff8 <HAL_MDMA_IRQHandler+0x84>
      __HAL_MDMA_DISABLE_IT(hmdma, MDMA_IT_TE);
9000bfaa:	68da      	ldr	r2, [r3, #12]
9000bfac:	f022 0202 	bic.w	r2, r2, #2
9000bfb0:	60da      	str	r2, [r3, #12]
      errorFlag = hmdma->Instance->CESR;
9000bfb2:	689a      	ldr	r2, [r3, #8]
        hmdma->ErrorCode |= HAL_MDMA_ERROR_READ_XFER;
9000bfb4:	6ea1      	ldr	r1, [r4, #104]	; 0x68
      if((errorFlag & MDMA_CESR_TED) == 0U)
9000bfb6:	0610      	lsls	r0, r2, #24
        hmdma->ErrorCode |= HAL_MDMA_ERROR_READ_XFER;
9000bfb8:	bf54      	ite	pl
9000bfba:	f041 0101 	orrpl.w	r1, r1, #1
        hmdma->ErrorCode |= HAL_MDMA_ERROR_WRITE_XFER;
9000bfbe:	f041 0102 	orrmi.w	r1, r1, #2
9000bfc2:	66a1      	str	r1, [r4, #104]	; 0x68
      if((errorFlag & MDMA_CESR_TEMD) != 0U)
9000bfc4:	0591      	lsls	r1, r2, #22
9000bfc6:	d503      	bpl.n	9000bfd0 <HAL_MDMA_IRQHandler+0x5c>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_MASK_DATA;
9000bfc8:	6ea1      	ldr	r1, [r4, #104]	; 0x68
9000bfca:	f041 0104 	orr.w	r1, r1, #4
9000bfce:	66a1      	str	r1, [r4, #104]	; 0x68
      if((errorFlag & MDMA_CESR_TELD) != 0U)
9000bfd0:	05d0      	lsls	r0, r2, #23
9000bfd2:	d503      	bpl.n	9000bfdc <HAL_MDMA_IRQHandler+0x68>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_LINKED_LIST;
9000bfd4:	6ea1      	ldr	r1, [r4, #104]	; 0x68
9000bfd6:	f041 0108 	orr.w	r1, r1, #8
9000bfda:	66a1      	str	r1, [r4, #104]	; 0x68
      if((errorFlag & MDMA_CESR_ASE) != 0U)
9000bfdc:	0551      	lsls	r1, r2, #21
9000bfde:	d503      	bpl.n	9000bfe8 <HAL_MDMA_IRQHandler+0x74>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_ALIGNMENT;
9000bfe0:	6ea1      	ldr	r1, [r4, #104]	; 0x68
9000bfe2:	f041 0110 	orr.w	r1, r1, #16
9000bfe6:	66a1      	str	r1, [r4, #104]	; 0x68
      if((errorFlag & MDMA_CESR_BSE) != 0U)
9000bfe8:	0510      	lsls	r0, r2, #20
9000bfea:	d503      	bpl.n	9000bff4 <HAL_MDMA_IRQHandler+0x80>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_BLOCK_SIZE;
9000bfec:	6ea2      	ldr	r2, [r4, #104]	; 0x68
9000bfee:	f042 0220 	orr.w	r2, r2, #32
9000bff2:	66a2      	str	r2, [r4, #104]	; 0x68
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_TE);
9000bff4:	2201      	movs	r2, #1
9000bff6:	605a      	str	r2, [r3, #4]
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BFTC) != 0U))
9000bff8:	681a      	ldr	r2, [r3, #0]
9000bffa:	06d1      	lsls	r1, r2, #27
9000bffc:	d509      	bpl.n	9000c012 <HAL_MDMA_IRQHandler+0x9e>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BFTC) != 0U)
9000bffe:	68da      	ldr	r2, [r3, #12]
9000c000:	0692      	lsls	r2, r2, #26
9000c002:	d506      	bpl.n	9000c012 <HAL_MDMA_IRQHandler+0x9e>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BFTC);
9000c004:	2110      	movs	r1, #16
      if(hmdma->XferBufferCpltCallback != NULL)
9000c006:	6ca2      	ldr	r2, [r4, #72]	; 0x48
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BFTC);
9000c008:	6059      	str	r1, [r3, #4]
      if(hmdma->XferBufferCpltCallback != NULL)
9000c00a:	b112      	cbz	r2, 9000c012 <HAL_MDMA_IRQHandler+0x9e>
        hmdma->XferBufferCpltCallback(hmdma);
9000c00c:	4620      	mov	r0, r4
9000c00e:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BT) != 0U))
9000c010:	6823      	ldr	r3, [r4, #0]
9000c012:	681a      	ldr	r2, [r3, #0]
9000c014:	0710      	lsls	r0, r2, #28
9000c016:	d509      	bpl.n	9000c02c <HAL_MDMA_IRQHandler+0xb8>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BT) != 0U)
9000c018:	68da      	ldr	r2, [r3, #12]
9000c01a:	06d1      	lsls	r1, r2, #27
9000c01c:	d506      	bpl.n	9000c02c <HAL_MDMA_IRQHandler+0xb8>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BT);
9000c01e:	2108      	movs	r1, #8
      if(hmdma->XferBlockCpltCallback != NULL)
9000c020:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BT);
9000c022:	6059      	str	r1, [r3, #4]
      if(hmdma->XferBlockCpltCallback != NULL)
9000c024:	b112      	cbz	r2, 9000c02c <HAL_MDMA_IRQHandler+0xb8>
        hmdma->XferBlockCpltCallback(hmdma);
9000c026:	4620      	mov	r0, r4
9000c028:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BRT) != 0U))
9000c02a:	6823      	ldr	r3, [r4, #0]
9000c02c:	681a      	ldr	r2, [r3, #0]
9000c02e:	0752      	lsls	r2, r2, #29
9000c030:	d509      	bpl.n	9000c046 <HAL_MDMA_IRQHandler+0xd2>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BRT) != 0U)
9000c032:	68da      	ldr	r2, [r3, #12]
9000c034:	0710      	lsls	r0, r2, #28
9000c036:	d506      	bpl.n	9000c046 <HAL_MDMA_IRQHandler+0xd2>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BRT);
9000c038:	2104      	movs	r1, #4
      if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000c03a:	6d22      	ldr	r2, [r4, #80]	; 0x50
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BRT);
9000c03c:	6059      	str	r1, [r3, #4]
      if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000c03e:	b112      	cbz	r2, 9000c046 <HAL_MDMA_IRQHandler+0xd2>
        hmdma->XferRepeatBlockCpltCallback(hmdma);
9000c040:	4620      	mov	r0, r4
9000c042:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_CTC) != 0U))
9000c044:	6823      	ldr	r3, [r4, #0]
9000c046:	681a      	ldr	r2, [r3, #0]
9000c048:	0791      	lsls	r1, r2, #30
9000c04a:	d516      	bpl.n	9000c07a <HAL_MDMA_IRQHandler+0x106>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_CTC) != 0U)
9000c04c:	68da      	ldr	r2, [r3, #12]
9000c04e:	0752      	lsls	r2, r2, #29
9000c050:	d513      	bpl.n	9000c07a <HAL_MDMA_IRQHandler+0x106>
      __HAL_MDMA_DISABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC | MDMA_IT_BT | MDMA_IT_BRT | MDMA_IT_BFTC));
9000c052:	68da      	ldr	r2, [r3, #12]
9000c054:	f022 023e 	bic.w	r2, r2, #62	; 0x3e
9000c058:	60da      	str	r2, [r3, #12]
      if(HAL_MDMA_STATE_ABORT == hmdma->State)
9000c05a:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
9000c05e:	2a04      	cmp	r2, #4
9000c060:	d034      	beq.n	9000c0cc <HAL_MDMA_IRQHandler+0x158>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_CTC);
9000c062:	2202      	movs	r2, #2
      __HAL_UNLOCK(hmdma);
9000c064:	2100      	movs	r1, #0
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_CTC);
9000c066:	605a      	str	r2, [r3, #4]
      hmdma->State = HAL_MDMA_STATE_READY;
9000c068:	2201      	movs	r2, #1
      if(hmdma->XferCpltCallback != NULL)
9000c06a:	6c63      	ldr	r3, [r4, #68]	; 0x44
      __HAL_UNLOCK(hmdma);
9000c06c:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
      hmdma->State = HAL_MDMA_STATE_READY;
9000c070:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      if(hmdma->XferCpltCallback != NULL)
9000c074:	b10b      	cbz	r3, 9000c07a <HAL_MDMA_IRQHandler+0x106>
        hmdma->XferCpltCallback(hmdma);
9000c076:	4620      	mov	r0, r4
9000c078:	4798      	blx	r3
  if(hmdma->ErrorCode != HAL_MDMA_ERROR_NONE)
9000c07a:	6ea3      	ldr	r3, [r4, #104]	; 0x68
9000c07c:	2b00      	cmp	r3, #0
9000c07e:	d02e      	beq.n	9000c0de <HAL_MDMA_IRQHandler+0x16a>
    __HAL_MDMA_DISABLE(hmdma);
9000c080:	6821      	ldr	r1, [r4, #0]
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000c082:	2004      	movs	r0, #4
  uint32_t timeout = SystemCoreClock / 9600U;
9000c084:	4b19      	ldr	r3, [pc, #100]	; (9000c0ec <HAL_MDMA_IRQHandler+0x178>)
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000c086:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  uint32_t timeout = SystemCoreClock / 9600U;
9000c08a:	fba3 3205 	umull	r3, r2, r3, r5
    __HAL_MDMA_DISABLE(hmdma);
9000c08e:	68cb      	ldr	r3, [r1, #12]
9000c090:	f023 0301 	bic.w	r3, r3, #1
  uint32_t timeout = SystemCoreClock / 9600U;
9000c094:	0a92      	lsrs	r2, r2, #10
    __HAL_MDMA_DISABLE(hmdma);
9000c096:	60cb      	str	r3, [r1, #12]
9000c098:	e002      	b.n	9000c0a0 <HAL_MDMA_IRQHandler+0x12c>
    while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U);
9000c09a:	68cb      	ldr	r3, [r1, #12]
9000c09c:	07d8      	lsls	r0, r3, #31
9000c09e:	d504      	bpl.n	9000c0aa <HAL_MDMA_IRQHandler+0x136>
      if (++count > timeout)
9000c0a0:	9b01      	ldr	r3, [sp, #4]
9000c0a2:	3301      	adds	r3, #1
9000c0a4:	4293      	cmp	r3, r2
9000c0a6:	9301      	str	r3, [sp, #4]
9000c0a8:	d9f7      	bls.n	9000c09a <HAL_MDMA_IRQHandler+0x126>
    __HAL_UNLOCK(hmdma);
9000c0aa:	2300      	movs	r3, #0
9000c0ac:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000c0b0:	68cb      	ldr	r3, [r1, #12]
9000c0b2:	07db      	lsls	r3, r3, #31
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000c0b4:	bf4c      	ite	mi
9000c0b6:	2303      	movmi	r3, #3
      hmdma->State = HAL_MDMA_STATE_READY;
9000c0b8:	2301      	movpl	r3, #1
9000c0ba:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    if (hmdma->XferErrorCallback != NULL)
9000c0be:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000c0c0:	b16b      	cbz	r3, 9000c0de <HAL_MDMA_IRQHandler+0x16a>
      hmdma->XferErrorCallback(hmdma);
9000c0c2:	4620      	mov	r0, r4
}
9000c0c4:	b003      	add	sp, #12
9000c0c6:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
      hmdma->XferErrorCallback(hmdma);
9000c0ca:	4718      	bx	r3
        __HAL_UNLOCK(hmdma);
9000c0cc:	2100      	movs	r1, #0
        hmdma->State = HAL_MDMA_STATE_READY;
9000c0ce:	2201      	movs	r2, #1
        if(hmdma->XferAbortCallback != NULL)
9000c0d0:	6da3      	ldr	r3, [r4, #88]	; 0x58
        __HAL_UNLOCK(hmdma);
9000c0d2:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
        hmdma->State = HAL_MDMA_STATE_READY;
9000c0d6:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        if(hmdma->XferAbortCallback != NULL)
9000c0da:	2b00      	cmp	r3, #0
9000c0dc:	d1f1      	bne.n	9000c0c2 <HAL_MDMA_IRQHandler+0x14e>
}
9000c0de:	b003      	add	sp, #12
9000c0e0:	bd30      	pop	{r4, r5, pc}
9000c0e2:	bf00      	nop
9000c0e4:	2400006c 	.word	0x2400006c
9000c0e8:	adffffc0 	.word	0xadffffc0
9000c0ec:	1b4e81b5 	.word	0x1b4e81b5

9000c0f0 <HAL_PWREx_ConfigSupply>:
  *         PWR_SMPS_2V5_SUPPLIES_EXT are used only for lines that supports SMPS
  *         regulator.
  * @retval HAL status.
  */
HAL_StatusTypeDef HAL_PWREx_ConfigSupply (uint32_t SupplySource)
{
9000c0f0:	b538      	push	{r3, r4, r5, lr}
  /* Check the parameters */
  assert_param (IS_PWR_SUPPLY (SupplySource));

  /* Check if supply source was configured */
#if defined (PWR_FLAG_SCUEN)
  if (__HAL_PWR_GET_FLAG (PWR_FLAG_SCUEN) == 0U)
9000c0f2:	4c10      	ldr	r4, [pc, #64]	; (9000c134 <HAL_PWREx_ConfigSupply+0x44>)
9000c0f4:	68e3      	ldr	r3, [r4, #12]
9000c0f6:	f013 0f04 	tst.w	r3, #4
#else
  if ((PWR->CR3 & (PWR_CR3_SMPSEN | PWR_CR3_LDOEN | PWR_CR3_BYPASS)) != (PWR_CR3_SMPSEN | PWR_CR3_LDOEN))
#endif /* defined (PWR_FLAG_SCUEN) */
  {
    /* Check supply configuration */
    if ((PWR->CR3 & PWR_SUPPLY_CONFIG_MASK) != SupplySource)
9000c0fa:	68e3      	ldr	r3, [r4, #12]
  if (__HAL_PWR_GET_FLAG (PWR_FLAG_SCUEN) == 0U)
9000c0fc:	d105      	bne.n	9000c10a <HAL_PWREx_ConfigSupply+0x1a>
    if ((PWR->CR3 & PWR_SUPPLY_CONFIG_MASK) != SupplySource)
9000c0fe:	f003 0307 	and.w	r3, r3, #7
    {
      /* Supply configuration update locked, can't apply a new supply config */
      return HAL_ERROR;
9000c102:	1a18      	subs	r0, r3, r0
9000c104:	bf18      	it	ne
9000c106:	2001      	movne	r0, #1
    }
  }
#endif /* defined (SMPS) */

  return HAL_OK;
}
9000c108:	bd38      	pop	{r3, r4, r5, pc}
  MODIFY_REG (PWR->CR3, PWR_SUPPLY_CONFIG_MASK, SupplySource);
9000c10a:	f023 0307 	bic.w	r3, r3, #7
9000c10e:	4303      	orrs	r3, r0
9000c110:	60e3      	str	r3, [r4, #12]
  tickstart = HAL_GetTick ();
9000c112:	f7fc ff59 	bl	90008fc8 <HAL_GetTick>
9000c116:	4605      	mov	r5, r0
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
9000c118:	e005      	b.n	9000c126 <HAL_PWREx_ConfigSupply+0x36>
    if ((HAL_GetTick () - tickstart) > PWR_FLAG_SETTING_DELAY)
9000c11a:	f7fc ff55 	bl	90008fc8 <HAL_GetTick>
9000c11e:	1b40      	subs	r0, r0, r5
9000c120:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
9000c124:	d804      	bhi.n	9000c130 <HAL_PWREx_ConfigSupply+0x40>
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
9000c126:	6863      	ldr	r3, [r4, #4]
9000c128:	049b      	lsls	r3, r3, #18
9000c12a:	d5f6      	bpl.n	9000c11a <HAL_PWREx_ConfigSupply+0x2a>
  return HAL_OK;
9000c12c:	2000      	movs	r0, #0
}
9000c12e:	bd38      	pop	{r3, r4, r5, pc}
      return HAL_ERROR;
9000c130:	2001      	movs	r0, #1
}
9000c132:	bd38      	pop	{r3, r4, r5, pc}
9000c134:	58024800 	.word	0x58024800

9000c138 <HAL_RCC_GetSysClockFreq.part.0>:
    case RCC_CFGR_SWS_PLL1:  /* PLL1 used as system clock  source */

      /* PLL_VCO = (HSE_VALUE or HSI_VALUE or CSI_VALUE/ PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLR
      */
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000c138:	4b3b      	ldr	r3, [pc, #236]	; (9000c228 <HAL_RCC_GetSysClockFreq.part.0+0xf0>)
uint32_t HAL_RCC_GetSysClockFreq(void)
9000c13a:	b430      	push	{r4, r5}
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000c13c:	6a9a      	ldr	r2, [r3, #40]	; 0x28
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000c13e:	6a9c      	ldr	r4, [r3, #40]	; 0x28
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000c140:	6add      	ldr	r5, [r3, #44]	; 0x2c
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));

      if (pllm != 0U)
9000c142:	f414 7f7c 	tst.w	r4, #1008	; 0x3f0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000c146:	6b59      	ldr	r1, [r3, #52]	; 0x34
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000c148:	f3c4 1005 	ubfx	r0, r4, #4, #6
      if (pllm != 0U)
9000c14c:	d038      	beq.n	9000c1c0 <HAL_RCC_GetSysClockFreq.part.0+0x88>
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000c14e:	f3c1 01cc 	ubfx	r1, r1, #3, #13
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000c152:	f005 0501 	and.w	r5, r5, #1
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000c156:	f002 0203 	and.w	r2, r2, #3
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000c15a:	fb05 f101 	mul.w	r1, r5, r1
9000c15e:	2a01      	cmp	r2, #1
9000c160:	ee07 1a90 	vmov	s15, r1
9000c164:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
      {
        switch (pllsource)
9000c168:	d002      	beq.n	9000c170 <HAL_RCC_GetSysClockFreq.part.0+0x38>
9000c16a:	2a02      	cmp	r2, #2
9000c16c:	d04e      	beq.n	9000c20c <HAL_RCC_GetSysClockFreq.part.0+0xd4>
9000c16e:	b34a      	cbz	r2, 9000c1c4 <HAL_RCC_GetSysClockFreq.part.0+0x8c>
          case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
            break;

          default:
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000c170:	ee07 0a90 	vmov	s15, r0
9000c174:	ed9f 5a2d 	vldr	s10, [pc, #180]	; 9000c22c <HAL_RCC_GetSysClockFreq.part.0+0xf4>
9000c178:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000c17c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9000c17e:	eec5 6a27 	vdiv.f32	s13, s10, s15
9000c182:	eddf 5a2b 	vldr	s11, [pc, #172]	; 9000c230 <HAL_RCC_GetSysClockFreq.part.0+0xf8>
9000c186:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000c18a:	ee07 3a90 	vmov	s15, r3
9000c18e:	eeb7 6a00 	vmov.f32	s12, #112	; 0x3f800000  1.0
9000c192:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000c196:	eee7 7a25 	vfma.f32	s15, s14, s11
9000c19a:	ee77 7a86 	vadd.f32	s15, s15, s12
9000c19e:	ee66 6aa7 	vmul.f32	s13, s13, s15
            break;
        }
        pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> 9) + 1U) ;
9000c1a2:	4b21      	ldr	r3, [pc, #132]	; (9000c228 <HAL_RCC_GetSysClockFreq.part.0+0xf0>)
9000c1a4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9000c1a6:	f3c3 2346 	ubfx	r3, r3, #9, #7
9000c1aa:	3301      	adds	r3, #1
        sysclockfreq = (uint32_t)(float_t)(pllvco / (float_t)pllp);
9000c1ac:	ee07 3a90 	vmov	s15, r3
9000c1b0:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
9000c1b4:	eec6 7a87 	vdiv.f32	s15, s13, s14
9000c1b8:	eefc 7ae7 	vcvt.u32.f32	s15, s15
9000c1bc:	ee17 0a90 	vmov	r0, s15
      sysclockfreq = CSI_VALUE;
      break;
  }

  return sysclockfreq;
}
9000c1c0:	bc30      	pop	{r4, r5}
9000c1c2:	4770      	bx	lr
            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000c1c4:	681a      	ldr	r2, [r3, #0]
9000c1c6:	0692      	lsls	r2, r2, #26
9000c1c8:	d527      	bpl.n	9000c21a <HAL_RCC_GetSysClockFreq.part.0+0xe2>
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000c1ca:	6819      	ldr	r1, [r3, #0]
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000c1cc:	ee07 0a90 	vmov	s15, r0
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000c1d0:	4a18      	ldr	r2, [pc, #96]	; (9000c234 <HAL_RCC_GetSysClockFreq.part.0+0xfc>)
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000c1d2:	eef7 5a00 	vmov.f32	s11, #112	; 0x3f800000  1.0
9000c1d6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000c1d8:	f3c1 01c1 	ubfx	r1, r1, #3, #2
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000c1dc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000c1e0:	ed9f 5a13 	vldr	s10, [pc, #76]	; 9000c230 <HAL_RCC_GetSysClockFreq.part.0+0xf8>
9000c1e4:	f3c3 0308 	ubfx	r3, r3, #0, #9
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000c1e8:	40ca      	lsrs	r2, r1
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000c1ea:	ee06 3a90 	vmov	s13, r3
9000c1ee:	ee06 2a10 	vmov	s12, r2
9000c1f2:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9000c1f6:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
9000c1fa:	eee7 6a05 	vfma.f32	s13, s14, s10
9000c1fe:	ee86 7a27 	vdiv.f32	s14, s12, s15
9000c202:	ee76 6aa5 	vadd.f32	s13, s13, s11
9000c206:	ee66 6a87 	vmul.f32	s13, s13, s14
9000c20a:	e7ca      	b.n	9000c1a2 <HAL_RCC_GetSysClockFreq.part.0+0x6a>
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000c20c:	ee07 0a90 	vmov	s15, r0
9000c210:	ed9f 5a09 	vldr	s10, [pc, #36]	; 9000c238 <HAL_RCC_GetSysClockFreq.part.0+0x100>
9000c214:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000c218:	e7b0      	b.n	9000c17c <HAL_RCC_GetSysClockFreq.part.0+0x44>
              pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000c21a:	ee07 0a90 	vmov	s15, r0
9000c21e:	ed9f 5a07 	vldr	s10, [pc, #28]	; 9000c23c <HAL_RCC_GetSysClockFreq.part.0+0x104>
9000c222:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000c226:	e7a9      	b.n	9000c17c <HAL_RCC_GetSysClockFreq.part.0+0x44>
9000c228:	58024400 	.word	0x58024400
9000c22c:	4a742400 	.word	0x4a742400
9000c230:	39000000 	.word	0x39000000
9000c234:	03d09000 	.word	0x03d09000
9000c238:	4bbebc20 	.word	0x4bbebc20
9000c23c:	4c742400 	.word	0x4c742400

9000c240 <HAL_RCC_OscConfig>:
  if (RCC_OscInitStruct == NULL)
9000c240:	2800      	cmp	r0, #0
9000c242:	f000 81e8 	beq.w	9000c616 <HAL_RCC_OscConfig+0x3d6>
{
9000c246:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
9000c248:	6803      	ldr	r3, [r0, #0]
9000c24a:	4604      	mov	r4, r0
9000c24c:	07d9      	lsls	r1, r3, #31
9000c24e:	d52e      	bpl.n	9000c2ae <HAL_RCC_OscConfig+0x6e>
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000c250:	49a4      	ldr	r1, [pc, #656]	; (9000c4e4 <HAL_RCC_OscConfig+0x2a4>)
9000c252:	690a      	ldr	r2, [r1, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000c254:	6a89      	ldr	r1, [r1, #40]	; 0x28
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000c256:	f002 0238 	and.w	r2, r2, #56	; 0x38
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSE) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSE)))
9000c25a:	2a10      	cmp	r2, #16
9000c25c:	f000 8107 	beq.w	9000c46e <HAL_RCC_OscConfig+0x22e>
9000c260:	2a18      	cmp	r2, #24
9000c262:	f000 80ff 	beq.w	9000c464 <HAL_RCC_OscConfig+0x224>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000c266:	6863      	ldr	r3, [r4, #4]
9000c268:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
9000c26c:	f000 812a 	beq.w	9000c4c4 <HAL_RCC_OscConfig+0x284>
9000c270:	2b00      	cmp	r3, #0
9000c272:	f000 8168 	beq.w	9000c546 <HAL_RCC_OscConfig+0x306>
9000c276:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
9000c27a:	4b9a      	ldr	r3, [pc, #616]	; (9000c4e4 <HAL_RCC_OscConfig+0x2a4>)
9000c27c:	681a      	ldr	r2, [r3, #0]
9000c27e:	f000 8289 	beq.w	9000c794 <HAL_RCC_OscConfig+0x554>
9000c282:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
9000c286:	601a      	str	r2, [r3, #0]
9000c288:	681a      	ldr	r2, [r3, #0]
9000c28a:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
9000c28e:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
9000c290:	f7fc fe9a 	bl	90008fc8 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000c294:	4e93      	ldr	r6, [pc, #588]	; (9000c4e4 <HAL_RCC_OscConfig+0x2a4>)
        tickstart = HAL_GetTick();
9000c296:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000c298:	e005      	b.n	9000c2a6 <HAL_RCC_OscConfig+0x66>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
9000c29a:	f7fc fe95 	bl	90008fc8 <HAL_GetTick>
9000c29e:	1b40      	subs	r0, r0, r5
9000c2a0:	2864      	cmp	r0, #100	; 0x64
9000c2a2:	f200 814e 	bhi.w	9000c542 <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000c2a6:	6833      	ldr	r3, [r6, #0]
9000c2a8:	039b      	lsls	r3, r3, #14
9000c2aa:	d5f6      	bpl.n	9000c29a <HAL_RCC_OscConfig+0x5a>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
9000c2ac:	6823      	ldr	r3, [r4, #0]
9000c2ae:	079d      	lsls	r5, r3, #30
9000c2b0:	f100 808a 	bmi.w	9000c3c8 <HAL_RCC_OscConfig+0x188>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000c2b4:	06d9      	lsls	r1, r3, #27
9000c2b6:	d533      	bpl.n	9000c320 <HAL_RCC_OscConfig+0xe0>
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000c2b8:	4a8a      	ldr	r2, [pc, #552]	; (9000c4e4 <HAL_RCC_OscConfig+0x2a4>)
9000c2ba:	6913      	ldr	r3, [r2, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000c2bc:	6a92      	ldr	r2, [r2, #40]	; 0x28
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000c2be:	f003 0338 	and.w	r3, r3, #56	; 0x38
    if ((temp_sysclksrc == RCC_CFGR_SWS_CSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_CSI)))
9000c2c2:	2b08      	cmp	r3, #8
9000c2c4:	f000 80e3 	beq.w	9000c48e <HAL_RCC_OscConfig+0x24e>
9000c2c8:	2b18      	cmp	r3, #24
9000c2ca:	f000 80db 	beq.w	9000c484 <HAL_RCC_OscConfig+0x244>
      if ((RCC_OscInitStruct->CSIState) != RCC_CSI_OFF)
9000c2ce:	69e3      	ldr	r3, [r4, #28]
        __HAL_RCC_CSI_ENABLE();
9000c2d0:	4d84      	ldr	r5, [pc, #528]	; (9000c4e4 <HAL_RCC_OscConfig+0x2a4>)
      if ((RCC_OscInitStruct->CSIState) != RCC_CSI_OFF)
9000c2d2:	2b00      	cmp	r3, #0
9000c2d4:	f000 816f 	beq.w	9000c5b6 <HAL_RCC_OscConfig+0x376>
        __HAL_RCC_CSI_ENABLE();
9000c2d8:	682b      	ldr	r3, [r5, #0]
9000c2da:	f043 0380 	orr.w	r3, r3, #128	; 0x80
9000c2de:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000c2e0:	f7fc fe72 	bl	90008fc8 <HAL_GetTick>
9000c2e4:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000c2e6:	e005      	b.n	9000c2f4 <HAL_RCC_OscConfig+0xb4>
          if ((HAL_GetTick() - tickstart) > CSI_TIMEOUT_VALUE)
9000c2e8:	f7fc fe6e 	bl	90008fc8 <HAL_GetTick>
9000c2ec:	1b80      	subs	r0, r0, r6
9000c2ee:	2802      	cmp	r0, #2
9000c2f0:	f200 8127 	bhi.w	9000c542 <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000c2f4:	682b      	ldr	r3, [r5, #0]
9000c2f6:	05db      	lsls	r3, r3, #23
9000c2f8:	d5f6      	bpl.n	9000c2e8 <HAL_RCC_OscConfig+0xa8>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000c2fa:	f7fc fe6b 	bl	90008fd4 <HAL_GetREVID>
9000c2fe:	f241 0303 	movw	r3, #4099	; 0x1003
9000c302:	4298      	cmp	r0, r3
9000c304:	f200 826d 	bhi.w	9000c7e2 <HAL_RCC_OscConfig+0x5a2>
9000c308:	6a22      	ldr	r2, [r4, #32]
9000c30a:	686b      	ldr	r3, [r5, #4]
9000c30c:	2a20      	cmp	r2, #32
9000c30e:	f023 43f8 	bic.w	r3, r3, #2080374784	; 0x7c000000
9000c312:	bf0c      	ite	eq
9000c314:	f043 4380 	orreq.w	r3, r3, #1073741824	; 0x40000000
9000c318:	ea43 6382 	orrne.w	r3, r3, r2, lsl #26
9000c31c:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000c31e:	6823      	ldr	r3, [r4, #0]
9000c320:	071d      	lsls	r5, r3, #28
9000c322:	d516      	bpl.n	9000c352 <HAL_RCC_OscConfig+0x112>
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
9000c324:	6963      	ldr	r3, [r4, #20]
      __HAL_RCC_LSI_ENABLE();
9000c326:	4d6f      	ldr	r5, [pc, #444]	; (9000c4e4 <HAL_RCC_OscConfig+0x2a4>)
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
9000c328:	2b00      	cmp	r3, #0
9000c32a:	f000 8122 	beq.w	9000c572 <HAL_RCC_OscConfig+0x332>
      __HAL_RCC_LSI_ENABLE();
9000c32e:	6f6b      	ldr	r3, [r5, #116]	; 0x74
9000c330:	f043 0301 	orr.w	r3, r3, #1
9000c334:	676b      	str	r3, [r5, #116]	; 0x74
      tickstart = HAL_GetTick();
9000c336:	f7fc fe47 	bl	90008fc8 <HAL_GetTick>
9000c33a:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
9000c33c:	e005      	b.n	9000c34a <HAL_RCC_OscConfig+0x10a>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
9000c33e:	f7fc fe43 	bl	90008fc8 <HAL_GetTick>
9000c342:	1b80      	subs	r0, r0, r6
9000c344:	2802      	cmp	r0, #2
9000c346:	f200 80fc 	bhi.w	9000c542 <HAL_RCC_OscConfig+0x302>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
9000c34a:	6f6b      	ldr	r3, [r5, #116]	; 0x74
9000c34c:	0798      	lsls	r0, r3, #30
9000c34e:	d5f6      	bpl.n	9000c33e <HAL_RCC_OscConfig+0xfe>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
9000c350:	6823      	ldr	r3, [r4, #0]
9000c352:	069a      	lsls	r2, r3, #26
9000c354:	d516      	bpl.n	9000c384 <HAL_RCC_OscConfig+0x144>
    if ((RCC_OscInitStruct->HSI48State) != RCC_HSI48_OFF)
9000c356:	69a3      	ldr	r3, [r4, #24]
      __HAL_RCC_HSI48_ENABLE();
9000c358:	4d62      	ldr	r5, [pc, #392]	; (9000c4e4 <HAL_RCC_OscConfig+0x2a4>)
    if ((RCC_OscInitStruct->HSI48State) != RCC_HSI48_OFF)
9000c35a:	2b00      	cmp	r3, #0
9000c35c:	f000 811a 	beq.w	9000c594 <HAL_RCC_OscConfig+0x354>
      __HAL_RCC_HSI48_ENABLE();
9000c360:	682b      	ldr	r3, [r5, #0]
9000c362:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
9000c366:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
9000c368:	f7fc fe2e 	bl	90008fc8 <HAL_GetTick>
9000c36c:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
9000c36e:	e005      	b.n	9000c37c <HAL_RCC_OscConfig+0x13c>
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
9000c370:	f7fc fe2a 	bl	90008fc8 <HAL_GetTick>
9000c374:	1b80      	subs	r0, r0, r6
9000c376:	2802      	cmp	r0, #2
9000c378:	f200 80e3 	bhi.w	9000c542 <HAL_RCC_OscConfig+0x302>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
9000c37c:	682b      	ldr	r3, [r5, #0]
9000c37e:	049f      	lsls	r7, r3, #18
9000c380:	d5f6      	bpl.n	9000c370 <HAL_RCC_OscConfig+0x130>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
9000c382:	6823      	ldr	r3, [r4, #0]
9000c384:	0759      	lsls	r1, r3, #29
9000c386:	f100 80a3 	bmi.w	9000c4d0 <HAL_RCC_OscConfig+0x290>
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
9000c38a:	6a60      	ldr	r0, [r4, #36]	; 0x24
9000c38c:	b1d0      	cbz	r0, 9000c3c4 <HAL_RCC_OscConfig+0x184>
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL1)
9000c38e:	4d55      	ldr	r5, [pc, #340]	; (9000c4e4 <HAL_RCC_OscConfig+0x2a4>)
9000c390:	692b      	ldr	r3, [r5, #16]
9000c392:	f003 0338 	and.w	r3, r3, #56	; 0x38
9000c396:	2b18      	cmp	r3, #24
9000c398:	f000 81ae 	beq.w	9000c6f8 <HAL_RCC_OscConfig+0x4b8>
        __HAL_RCC_PLL_DISABLE();
9000c39c:	682b      	ldr	r3, [r5, #0]
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
9000c39e:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
9000c3a0:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
9000c3a4:	602b      	str	r3, [r5, #0]
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
9000c3a6:	f000 8142 	beq.w	9000c62e <HAL_RCC_OscConfig+0x3ee>
        tickstart = HAL_GetTick();
9000c3aa:	f7fc fe0d 	bl	90008fc8 <HAL_GetTick>
9000c3ae:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000c3b0:	e005      	b.n	9000c3be <HAL_RCC_OscConfig+0x17e>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000c3b2:	f7fc fe09 	bl	90008fc8 <HAL_GetTick>
9000c3b6:	1b00      	subs	r0, r0, r4
9000c3b8:	2802      	cmp	r0, #2
9000c3ba:	f200 80c2 	bhi.w	9000c542 <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000c3be:	682b      	ldr	r3, [r5, #0]
9000c3c0:	019b      	lsls	r3, r3, #6
9000c3c2:	d4f6      	bmi.n	9000c3b2 <HAL_RCC_OscConfig+0x172>
  return HAL_OK;
9000c3c4:	2000      	movs	r0, #0
}
9000c3c6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000c3c8:	4a46      	ldr	r2, [pc, #280]	; (9000c4e4 <HAL_RCC_OscConfig+0x2a4>)
9000c3ca:	6913      	ldr	r3, [r2, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000c3cc:	6a92      	ldr	r2, [r2, #40]	; 0x28
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000c3ce:	f013 0338 	ands.w	r3, r3, #56	; 0x38
9000c3d2:	d12d      	bne.n	9000c430 <HAL_RCC_OscConfig+0x1f0>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
9000c3d4:	4b43      	ldr	r3, [pc, #268]	; (9000c4e4 <HAL_RCC_OscConfig+0x2a4>)
9000c3d6:	68e2      	ldr	r2, [r4, #12]
9000c3d8:	681b      	ldr	r3, [r3, #0]
9000c3da:	0759      	lsls	r1, r3, #29
9000c3dc:	d501      	bpl.n	9000c3e2 <HAL_RCC_OscConfig+0x1a2>
9000c3de:	2a00      	cmp	r2, #0
9000c3e0:	d04e      	beq.n	9000c480 <HAL_RCC_OscConfig+0x240>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000c3e2:	4d40      	ldr	r5, [pc, #256]	; (9000c4e4 <HAL_RCC_OscConfig+0x2a4>)
9000c3e4:	682b      	ldr	r3, [r5, #0]
9000c3e6:	f023 0319 	bic.w	r3, r3, #25
9000c3ea:	4313      	orrs	r3, r2
9000c3ec:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000c3ee:	f7fc fdeb 	bl	90008fc8 <HAL_GetTick>
9000c3f2:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000c3f4:	e005      	b.n	9000c402 <HAL_RCC_OscConfig+0x1c2>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000c3f6:	f7fc fde7 	bl	90008fc8 <HAL_GetTick>
9000c3fa:	1b80      	subs	r0, r0, r6
9000c3fc:	2802      	cmp	r0, #2
9000c3fe:	f200 80a0 	bhi.w	9000c542 <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000c402:	682b      	ldr	r3, [r5, #0]
9000c404:	075b      	lsls	r3, r3, #29
9000c406:	d5f6      	bpl.n	9000c3f6 <HAL_RCC_OscConfig+0x1b6>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
9000c408:	f7fc fde4 	bl	90008fd4 <HAL_GetREVID>
9000c40c:	f241 0303 	movw	r3, #4099	; 0x1003
9000c410:	4298      	cmp	r0, r3
9000c412:	f200 80f7 	bhi.w	9000c604 <HAL_RCC_OscConfig+0x3c4>
9000c416:	6922      	ldr	r2, [r4, #16]
9000c418:	686b      	ldr	r3, [r5, #4]
9000c41a:	2a40      	cmp	r2, #64	; 0x40
9000c41c:	f423 337c 	bic.w	r3, r3, #258048	; 0x3f000
9000c420:	bf0c      	ite	eq
9000c422:	f443 3300 	orreq.w	r3, r3, #131072	; 0x20000
9000c426:	ea43 3302 	orrne.w	r3, r3, r2, lsl #12
9000c42a:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000c42c:	6823      	ldr	r3, [r4, #0]
9000c42e:	e741      	b.n	9000c2b4 <HAL_RCC_OscConfig+0x74>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000c430:	2b18      	cmp	r3, #24
9000c432:	f000 80e3 	beq.w	9000c5fc <HAL_RCC_OscConfig+0x3bc>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000c436:	4d2b      	ldr	r5, [pc, #172]	; (9000c4e4 <HAL_RCC_OscConfig+0x2a4>)
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
9000c438:	68e2      	ldr	r2, [r4, #12]
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000c43a:	682b      	ldr	r3, [r5, #0]
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
9000c43c:	2a00      	cmp	r2, #0
9000c43e:	f000 80cc 	beq.w	9000c5da <HAL_RCC_OscConfig+0x39a>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000c442:	f023 0319 	bic.w	r3, r3, #25
9000c446:	4313      	orrs	r3, r2
9000c448:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000c44a:	f7fc fdbd 	bl	90008fc8 <HAL_GetTick>
9000c44e:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000c450:	e004      	b.n	9000c45c <HAL_RCC_OscConfig+0x21c>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000c452:	f7fc fdb9 	bl	90008fc8 <HAL_GetTick>
9000c456:	1b80      	subs	r0, r0, r6
9000c458:	2802      	cmp	r0, #2
9000c45a:	d872      	bhi.n	9000c542 <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000c45c:	682b      	ldr	r3, [r5, #0]
9000c45e:	075f      	lsls	r7, r3, #29
9000c460:	d5f7      	bpl.n	9000c452 <HAL_RCC_OscConfig+0x212>
9000c462:	e7d1      	b.n	9000c408 <HAL_RCC_OscConfig+0x1c8>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSE) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSE)))
9000c464:	f001 0103 	and.w	r1, r1, #3
9000c468:	2902      	cmp	r1, #2
9000c46a:	f47f aefc 	bne.w	9000c266 <HAL_RCC_OscConfig+0x26>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
9000c46e:	4a1d      	ldr	r2, [pc, #116]	; (9000c4e4 <HAL_RCC_OscConfig+0x2a4>)
9000c470:	6812      	ldr	r2, [r2, #0]
9000c472:	0392      	lsls	r2, r2, #14
9000c474:	f57f af1b 	bpl.w	9000c2ae <HAL_RCC_OscConfig+0x6e>
9000c478:	6862      	ldr	r2, [r4, #4]
9000c47a:	2a00      	cmp	r2, #0
9000c47c:	f47f af17 	bne.w	9000c2ae <HAL_RCC_OscConfig+0x6e>
        return HAL_ERROR;
9000c480:	2001      	movs	r0, #1
}
9000c482:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    if ((temp_sysclksrc == RCC_CFGR_SWS_CSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_CSI)))
9000c484:	f002 0203 	and.w	r2, r2, #3
9000c488:	2a01      	cmp	r2, #1
9000c48a:	f47f af20 	bne.w	9000c2ce <HAL_RCC_OscConfig+0x8e>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U) && (RCC_OscInitStruct->CSIState != RCC_CSI_ON))
9000c48e:	4b15      	ldr	r3, [pc, #84]	; (9000c4e4 <HAL_RCC_OscConfig+0x2a4>)
9000c490:	681b      	ldr	r3, [r3, #0]
9000c492:	05da      	lsls	r2, r3, #23
9000c494:	d502      	bpl.n	9000c49c <HAL_RCC_OscConfig+0x25c>
9000c496:	69e3      	ldr	r3, [r4, #28]
9000c498:	2b80      	cmp	r3, #128	; 0x80
9000c49a:	d1f1      	bne.n	9000c480 <HAL_RCC_OscConfig+0x240>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000c49c:	f7fc fd9a 	bl	90008fd4 <HAL_GetREVID>
9000c4a0:	f241 0303 	movw	r3, #4099	; 0x1003
9000c4a4:	4298      	cmp	r0, r3
9000c4a6:	f200 80b8 	bhi.w	9000c61a <HAL_RCC_OscConfig+0x3da>
9000c4aa:	6a22      	ldr	r2, [r4, #32]
9000c4ac:	2a20      	cmp	r2, #32
9000c4ae:	f000 81a7 	beq.w	9000c800 <HAL_RCC_OscConfig+0x5c0>
9000c4b2:	490c      	ldr	r1, [pc, #48]	; (9000c4e4 <HAL_RCC_OscConfig+0x2a4>)
9000c4b4:	684b      	ldr	r3, [r1, #4]
9000c4b6:	f023 43f8 	bic.w	r3, r3, #2080374784	; 0x7c000000
9000c4ba:	ea43 6382 	orr.w	r3, r3, r2, lsl #26
9000c4be:	604b      	str	r3, [r1, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000c4c0:	6823      	ldr	r3, [r4, #0]
9000c4c2:	e72d      	b.n	9000c320 <HAL_RCC_OscConfig+0xe0>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000c4c4:	4a07      	ldr	r2, [pc, #28]	; (9000c4e4 <HAL_RCC_OscConfig+0x2a4>)
9000c4c6:	6813      	ldr	r3, [r2, #0]
9000c4c8:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
9000c4cc:	6013      	str	r3, [r2, #0]
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
9000c4ce:	e6df      	b.n	9000c290 <HAL_RCC_OscConfig+0x50>
    PWR->CR1 |= PWR_CR1_DBP;
9000c4d0:	4d05      	ldr	r5, [pc, #20]	; (9000c4e8 <HAL_RCC_OscConfig+0x2a8>)
9000c4d2:	682b      	ldr	r3, [r5, #0]
9000c4d4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
9000c4d8:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
9000c4da:	f7fc fd75 	bl	90008fc8 <HAL_GetTick>
9000c4de:	4606      	mov	r6, r0
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000c4e0:	e009      	b.n	9000c4f6 <HAL_RCC_OscConfig+0x2b6>
9000c4e2:	bf00      	nop
9000c4e4:	58024400 	.word	0x58024400
9000c4e8:	58024800 	.word	0x58024800
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
9000c4ec:	f7fc fd6c 	bl	90008fc8 <HAL_GetTick>
9000c4f0:	1b80      	subs	r0, r0, r6
9000c4f2:	2864      	cmp	r0, #100	; 0x64
9000c4f4:	d825      	bhi.n	9000c542 <HAL_RCC_OscConfig+0x302>
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000c4f6:	682b      	ldr	r3, [r5, #0]
9000c4f8:	05da      	lsls	r2, r3, #23
9000c4fa:	d5f7      	bpl.n	9000c4ec <HAL_RCC_OscConfig+0x2ac>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000c4fc:	68a3      	ldr	r3, [r4, #8]
9000c4fe:	2b01      	cmp	r3, #1
9000c500:	f000 8178 	beq.w	9000c7f4 <HAL_RCC_OscConfig+0x5b4>
9000c504:	2b00      	cmp	r3, #0
9000c506:	f000 8153 	beq.w	9000c7b0 <HAL_RCC_OscConfig+0x570>
9000c50a:	2b05      	cmp	r3, #5
9000c50c:	4ba5      	ldr	r3, [pc, #660]	; (9000c7a4 <HAL_RCC_OscConfig+0x564>)
9000c50e:	6f1a      	ldr	r2, [r3, #112]	; 0x70
9000c510:	f000 817f 	beq.w	9000c812 <HAL_RCC_OscConfig+0x5d2>
9000c514:	f022 0201 	bic.w	r2, r2, #1
9000c518:	671a      	str	r2, [r3, #112]	; 0x70
9000c51a:	6f1a      	ldr	r2, [r3, #112]	; 0x70
9000c51c:	f022 0204 	bic.w	r2, r2, #4
9000c520:	671a      	str	r2, [r3, #112]	; 0x70
      tickstart = HAL_GetTick();
9000c522:	f7fc fd51 	bl	90008fc8 <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000c526:	4e9f      	ldr	r6, [pc, #636]	; (9000c7a4 <HAL_RCC_OscConfig+0x564>)
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000c528:	f241 3788 	movw	r7, #5000	; 0x1388
      tickstart = HAL_GetTick();
9000c52c:	4605      	mov	r5, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000c52e:	e004      	b.n	9000c53a <HAL_RCC_OscConfig+0x2fa>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000c530:	f7fc fd4a 	bl	90008fc8 <HAL_GetTick>
9000c534:	1b40      	subs	r0, r0, r5
9000c536:	42b8      	cmp	r0, r7
9000c538:	d803      	bhi.n	9000c542 <HAL_RCC_OscConfig+0x302>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000c53a:	6f33      	ldr	r3, [r6, #112]	; 0x70
9000c53c:	079b      	lsls	r3, r3, #30
9000c53e:	d5f7      	bpl.n	9000c530 <HAL_RCC_OscConfig+0x2f0>
9000c540:	e723      	b.n	9000c38a <HAL_RCC_OscConfig+0x14a>
            return HAL_TIMEOUT;
9000c542:	2003      	movs	r0, #3
}
9000c544:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000c546:	4d97      	ldr	r5, [pc, #604]	; (9000c7a4 <HAL_RCC_OscConfig+0x564>)
9000c548:	682b      	ldr	r3, [r5, #0]
9000c54a:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
9000c54e:	602b      	str	r3, [r5, #0]
9000c550:	682b      	ldr	r3, [r5, #0]
9000c552:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
9000c556:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000c558:	f7fc fd36 	bl	90008fc8 <HAL_GetTick>
9000c55c:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
9000c55e:	e004      	b.n	9000c56a <HAL_RCC_OscConfig+0x32a>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
9000c560:	f7fc fd32 	bl	90008fc8 <HAL_GetTick>
9000c564:	1b80      	subs	r0, r0, r6
9000c566:	2864      	cmp	r0, #100	; 0x64
9000c568:	d8eb      	bhi.n	9000c542 <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
9000c56a:	682b      	ldr	r3, [r5, #0]
9000c56c:	039f      	lsls	r7, r3, #14
9000c56e:	d4f7      	bmi.n	9000c560 <HAL_RCC_OscConfig+0x320>
9000c570:	e69c      	b.n	9000c2ac <HAL_RCC_OscConfig+0x6c>
      __HAL_RCC_LSI_DISABLE();
9000c572:	6f6b      	ldr	r3, [r5, #116]	; 0x74
9000c574:	f023 0301 	bic.w	r3, r3, #1
9000c578:	676b      	str	r3, [r5, #116]	; 0x74
      tickstart = HAL_GetTick();
9000c57a:	f7fc fd25 	bl	90008fc8 <HAL_GetTick>
9000c57e:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
9000c580:	e004      	b.n	9000c58c <HAL_RCC_OscConfig+0x34c>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
9000c582:	f7fc fd21 	bl	90008fc8 <HAL_GetTick>
9000c586:	1b80      	subs	r0, r0, r6
9000c588:	2802      	cmp	r0, #2
9000c58a:	d8da      	bhi.n	9000c542 <HAL_RCC_OscConfig+0x302>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
9000c58c:	6f6b      	ldr	r3, [r5, #116]	; 0x74
9000c58e:	0799      	lsls	r1, r3, #30
9000c590:	d4f7      	bmi.n	9000c582 <HAL_RCC_OscConfig+0x342>
9000c592:	e6dd      	b.n	9000c350 <HAL_RCC_OscConfig+0x110>
      __HAL_RCC_HSI48_DISABLE();
9000c594:	682b      	ldr	r3, [r5, #0]
9000c596:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
9000c59a:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
9000c59c:	f7fc fd14 	bl	90008fc8 <HAL_GetTick>
9000c5a0:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
9000c5a2:	e004      	b.n	9000c5ae <HAL_RCC_OscConfig+0x36e>
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
9000c5a4:	f7fc fd10 	bl	90008fc8 <HAL_GetTick>
9000c5a8:	1b80      	subs	r0, r0, r6
9000c5aa:	2802      	cmp	r0, #2
9000c5ac:	d8c9      	bhi.n	9000c542 <HAL_RCC_OscConfig+0x302>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
9000c5ae:	682b      	ldr	r3, [r5, #0]
9000c5b0:	0498      	lsls	r0, r3, #18
9000c5b2:	d4f7      	bmi.n	9000c5a4 <HAL_RCC_OscConfig+0x364>
9000c5b4:	e6e5      	b.n	9000c382 <HAL_RCC_OscConfig+0x142>
        __HAL_RCC_CSI_DISABLE();
9000c5b6:	682b      	ldr	r3, [r5, #0]
9000c5b8:	f023 0380 	bic.w	r3, r3, #128	; 0x80
9000c5bc:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000c5be:	f7fc fd03 	bl	90008fc8 <HAL_GetTick>
9000c5c2:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
9000c5c4:	e004      	b.n	9000c5d0 <HAL_RCC_OscConfig+0x390>
          if ((HAL_GetTick() - tickstart) > CSI_TIMEOUT_VALUE)
9000c5c6:	f7fc fcff 	bl	90008fc8 <HAL_GetTick>
9000c5ca:	1b80      	subs	r0, r0, r6
9000c5cc:	2802      	cmp	r0, #2
9000c5ce:	d8b8      	bhi.n	9000c542 <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
9000c5d0:	682b      	ldr	r3, [r5, #0]
9000c5d2:	05df      	lsls	r7, r3, #23
9000c5d4:	d4f7      	bmi.n	9000c5c6 <HAL_RCC_OscConfig+0x386>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000c5d6:	6823      	ldr	r3, [r4, #0]
9000c5d8:	e6a2      	b.n	9000c320 <HAL_RCC_OscConfig+0xe0>
        __HAL_RCC_HSI_DISABLE();
9000c5da:	f023 0301 	bic.w	r3, r3, #1
9000c5de:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000c5e0:	f7fc fcf2 	bl	90008fc8 <HAL_GetTick>
9000c5e4:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
9000c5e6:	e004      	b.n	9000c5f2 <HAL_RCC_OscConfig+0x3b2>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000c5e8:	f7fc fcee 	bl	90008fc8 <HAL_GetTick>
9000c5ec:	1b80      	subs	r0, r0, r6
9000c5ee:	2802      	cmp	r0, #2
9000c5f0:	d8a7      	bhi.n	9000c542 <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
9000c5f2:	682b      	ldr	r3, [r5, #0]
9000c5f4:	0758      	lsls	r0, r3, #29
9000c5f6:	d4f7      	bmi.n	9000c5e8 <HAL_RCC_OscConfig+0x3a8>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000c5f8:	6823      	ldr	r3, [r4, #0]
9000c5fa:	e65b      	b.n	9000c2b4 <HAL_RCC_OscConfig+0x74>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000c5fc:	0790      	lsls	r0, r2, #30
9000c5fe:	f47f af1a 	bne.w	9000c436 <HAL_RCC_OscConfig+0x1f6>
9000c602:	e6e7      	b.n	9000c3d4 <HAL_RCC_OscConfig+0x194>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
9000c604:	686b      	ldr	r3, [r5, #4]
9000c606:	6922      	ldr	r2, [r4, #16]
9000c608:	f023 43fe 	bic.w	r3, r3, #2130706432	; 0x7f000000
9000c60c:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
9000c610:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000c612:	6823      	ldr	r3, [r4, #0]
9000c614:	e64e      	b.n	9000c2b4 <HAL_RCC_OscConfig+0x74>
    return HAL_ERROR;
9000c616:	2001      	movs	r0, #1
}
9000c618:	4770      	bx	lr
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000c61a:	4a62      	ldr	r2, [pc, #392]	; (9000c7a4 <HAL_RCC_OscConfig+0x564>)
9000c61c:	6a21      	ldr	r1, [r4, #32]
9000c61e:	68d3      	ldr	r3, [r2, #12]
9000c620:	f023 537c 	bic.w	r3, r3, #1056964608	; 0x3f000000
9000c624:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
9000c628:	60d3      	str	r3, [r2, #12]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000c62a:	6823      	ldr	r3, [r4, #0]
9000c62c:	e678      	b.n	9000c320 <HAL_RCC_OscConfig+0xe0>
        tickstart = HAL_GetTick();
9000c62e:	f7fc fccb 	bl	90008fc8 <HAL_GetTick>
9000c632:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000c634:	e004      	b.n	9000c640 <HAL_RCC_OscConfig+0x400>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000c636:	f7fc fcc7 	bl	90008fc8 <HAL_GetTick>
9000c63a:	1b80      	subs	r0, r0, r6
9000c63c:	2802      	cmp	r0, #2
9000c63e:	d880      	bhi.n	9000c542 <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000c640:	682b      	ldr	r3, [r5, #0]
9000c642:	0199      	lsls	r1, r3, #6
9000c644:	d4f7      	bmi.n	9000c636 <HAL_RCC_OscConfig+0x3f6>
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
9000c646:	6aa9      	ldr	r1, [r5, #40]	; 0x28
9000c648:	4b57      	ldr	r3, [pc, #348]	; (9000c7a8 <HAL_RCC_OscConfig+0x568>)
9000c64a:	6aa2      	ldr	r2, [r4, #40]	; 0x28
9000c64c:	400b      	ands	r3, r1
        __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000c64e:	4957      	ldr	r1, [pc, #348]	; (9000c7ac <HAL_RCC_OscConfig+0x56c>)
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000c650:	4e54      	ldr	r6, [pc, #336]	; (9000c7a4 <HAL_RCC_OscConfig+0x564>)
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
9000c652:	4313      	orrs	r3, r2
9000c654:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000c656:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
9000c65a:	62ab      	str	r3, [r5, #40]	; 0x28
9000c65c:	e9d4 320d 	ldrd	r3, r2, [r4, #52]	; 0x34
9000c660:	3b01      	subs	r3, #1
9000c662:	3a01      	subs	r2, #1
9000c664:	025b      	lsls	r3, r3, #9
9000c666:	0412      	lsls	r2, r2, #16
9000c668:	b29b      	uxth	r3, r3
9000c66a:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
9000c66e:	4313      	orrs	r3, r2
9000c670:	6b22      	ldr	r2, [r4, #48]	; 0x30
9000c672:	3a01      	subs	r2, #1
9000c674:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000c678:	4313      	orrs	r3, r2
9000c67a:	6be2      	ldr	r2, [r4, #60]	; 0x3c
9000c67c:	3a01      	subs	r2, #1
9000c67e:	0612      	lsls	r2, r2, #24
9000c680:	f002 42fe 	and.w	r2, r2, #2130706432	; 0x7f000000
9000c684:	4313      	orrs	r3, r2
9000c686:	632b      	str	r3, [r5, #48]	; 0x30
        __HAL_RCC_PLLFRACN_DISABLE();
9000c688:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000c68a:	f023 0301 	bic.w	r3, r3, #1
9000c68e:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000c690:	6b6a      	ldr	r2, [r5, #52]	; 0x34
9000c692:	6ca3      	ldr	r3, [r4, #72]	; 0x48
9000c694:	4011      	ands	r1, r2
9000c696:	ea41 01c3 	orr.w	r1, r1, r3, lsl #3
9000c69a:	6369      	str	r1, [r5, #52]	; 0x34
        __HAL_RCC_PLL_VCIRANGE(RCC_OscInitStruct->PLL.PLLRGE) ;
9000c69c:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000c69e:	6c22      	ldr	r2, [r4, #64]	; 0x40
9000c6a0:	f023 030c 	bic.w	r3, r3, #12
9000c6a4:	4313      	orrs	r3, r2
9000c6a6:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLL_VCORANGE(RCC_OscInitStruct->PLL.PLLVCOSEL) ;
9000c6a8:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000c6aa:	6c62      	ldr	r2, [r4, #68]	; 0x44
9000c6ac:	f023 0302 	bic.w	r3, r3, #2
9000c6b0:	4313      	orrs	r3, r2
9000c6b2:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
9000c6b4:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000c6b6:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
9000c6ba:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000c6bc:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000c6be:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
9000c6c2:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVR);
9000c6c4:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000c6c6:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
9000c6ca:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLFRACN_ENABLE();
9000c6cc:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000c6ce:	f043 0301 	orr.w	r3, r3, #1
9000c6d2:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLL_ENABLE();
9000c6d4:	682b      	ldr	r3, [r5, #0]
9000c6d6:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
9000c6da:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000c6dc:	f7fc fc74 	bl	90008fc8 <HAL_GetTick>
9000c6e0:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000c6e2:	e005      	b.n	9000c6f0 <HAL_RCC_OscConfig+0x4b0>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000c6e4:	f7fc fc70 	bl	90008fc8 <HAL_GetTick>
9000c6e8:	1b00      	subs	r0, r0, r4
9000c6ea:	2802      	cmp	r0, #2
9000c6ec:	f63f af29 	bhi.w	9000c542 <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000c6f0:	6833      	ldr	r3, [r6, #0]
9000c6f2:	019a      	lsls	r2, r3, #6
9000c6f4:	d5f6      	bpl.n	9000c6e4 <HAL_RCC_OscConfig+0x4a4>
9000c6f6:	e665      	b.n	9000c3c4 <HAL_RCC_OscConfig+0x184>
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000c6f8:	2801      	cmp	r0, #1
      temp1_pllckcfg = RCC->PLLCKSELR;
9000c6fa:	6aaa      	ldr	r2, [r5, #40]	; 0x28
      temp2_pllckcfg = RCC->PLL1DIVR;
9000c6fc:	6b2e      	ldr	r6, [r5, #48]	; 0x30
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000c6fe:	f43f ae62 	beq.w	9000c3c6 <HAL_RCC_OscConfig+0x186>
          (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
9000c702:	f002 0303 	and.w	r3, r2, #3
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000c706:	6aa1      	ldr	r1, [r4, #40]	; 0x28
9000c708:	428b      	cmp	r3, r1
9000c70a:	f47f aeb9 	bne.w	9000c480 <HAL_RCC_OscConfig+0x240>
          ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
9000c70e:	f3c2 1205 	ubfx	r2, r2, #4, #6
          (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
9000c712:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000c714:	429a      	cmp	r2, r3
9000c716:	f47f aeb3 	bne.w	9000c480 <HAL_RCC_OscConfig+0x240>
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
9000c71a:	6b23      	ldr	r3, [r4, #48]	; 0x30
9000c71c:	f3c6 0208 	ubfx	r2, r6, #0, #9
9000c720:	3b01      	subs	r3, #1
          ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
9000c722:	429a      	cmp	r2, r3
9000c724:	f47f aeac 	bne.w	9000c480 <HAL_RCC_OscConfig+0x240>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
9000c728:	6b63      	ldr	r3, [r4, #52]	; 0x34
9000c72a:	f3c6 2246 	ubfx	r2, r6, #9, #7
9000c72e:	3b01      	subs	r3, #1
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
9000c730:	429a      	cmp	r2, r3
9000c732:	f47f aea5 	bne.w	9000c480 <HAL_RCC_OscConfig+0x240>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
9000c736:	6ba3      	ldr	r3, [r4, #56]	; 0x38
9000c738:	f3c6 4206 	ubfx	r2, r6, #16, #7
9000c73c:	3b01      	subs	r3, #1
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
9000c73e:	429a      	cmp	r2, r3
9000c740:	f47f ae9e 	bne.w	9000c480 <HAL_RCC_OscConfig+0x240>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_R1) >> RCC_PLL1DIVR_R1_Pos) != (RCC_OscInitStruct->PLL.PLLR - 1U)))
9000c744:	6be3      	ldr	r3, [r4, #60]	; 0x3c
9000c746:	f3c6 6606 	ubfx	r6, r6, #24, #7
9000c74a:	3b01      	subs	r3, #1
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
9000c74c:	429e      	cmp	r6, r3
9000c74e:	f47f ae97 	bne.w	9000c480 <HAL_RCC_OscConfig+0x240>
        temp1_pllckcfg = ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> RCC_PLL1FRACR_FRACN1_Pos);
9000c752:	6b6b      	ldr	r3, [r5, #52]	; 0x34
        if (RCC_OscInitStruct->PLL.PLLFRACN != temp1_pllckcfg)
9000c754:	6ca2      	ldr	r2, [r4, #72]	; 0x48
        temp1_pllckcfg = ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> RCC_PLL1FRACR_FRACN1_Pos);
9000c756:	f3c3 03cc 	ubfx	r3, r3, #3, #13
        if (RCC_OscInitStruct->PLL.PLLFRACN != temp1_pllckcfg)
9000c75a:	429a      	cmp	r2, r3
9000c75c:	f43f ae32 	beq.w	9000c3c4 <HAL_RCC_OscConfig+0x184>
          __HAL_RCC_PLLFRACN_DISABLE();
9000c760:	4a10      	ldr	r2, [pc, #64]	; (9000c7a4 <HAL_RCC_OscConfig+0x564>)
9000c762:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
9000c764:	f023 0301 	bic.w	r3, r3, #1
9000c768:	62d3      	str	r3, [r2, #44]	; 0x2c
          tickstart = HAL_GetTick();
9000c76a:	f7fc fc2d 	bl	90008fc8 <HAL_GetTick>
9000c76e:	4605      	mov	r5, r0
          while ((HAL_GetTick() - tickstart) < PLL_FRAC_TIMEOUT_VALUE)
9000c770:	f7fc fc2a 	bl	90008fc8 <HAL_GetTick>
9000c774:	42a8      	cmp	r0, r5
9000c776:	d0fb      	beq.n	9000c770 <HAL_RCC_OscConfig+0x530>
          __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000c778:	4a0a      	ldr	r2, [pc, #40]	; (9000c7a4 <HAL_RCC_OscConfig+0x564>)
  return HAL_OK;
9000c77a:	2000      	movs	r0, #0
          __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000c77c:	6ca1      	ldr	r1, [r4, #72]	; 0x48
9000c77e:	4b0b      	ldr	r3, [pc, #44]	; (9000c7ac <HAL_RCC_OscConfig+0x56c>)
9000c780:	6b54      	ldr	r4, [r2, #52]	; 0x34
9000c782:	4023      	ands	r3, r4
9000c784:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
9000c788:	6353      	str	r3, [r2, #52]	; 0x34
          __HAL_RCC_PLLFRACN_ENABLE();
9000c78a:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
9000c78c:	f043 0301 	orr.w	r3, r3, #1
9000c790:	62d3      	str	r3, [r2, #44]	; 0x2c
}
9000c792:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000c794:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
9000c798:	601a      	str	r2, [r3, #0]
9000c79a:	681a      	ldr	r2, [r3, #0]
9000c79c:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
9000c7a0:	601a      	str	r2, [r3, #0]
9000c7a2:	e575      	b.n	9000c290 <HAL_RCC_OscConfig+0x50>
9000c7a4:	58024400 	.word	0x58024400
9000c7a8:	fffffc0c 	.word	0xfffffc0c
9000c7ac:	ffff0007 	.word	0xffff0007
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000c7b0:	4d1c      	ldr	r5, [pc, #112]	; (9000c824 <HAL_RCC_OscConfig+0x5e4>)
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000c7b2:	f241 3788 	movw	r7, #5000	; 0x1388
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000c7b6:	6f2b      	ldr	r3, [r5, #112]	; 0x70
9000c7b8:	f023 0301 	bic.w	r3, r3, #1
9000c7bc:	672b      	str	r3, [r5, #112]	; 0x70
9000c7be:	6f2b      	ldr	r3, [r5, #112]	; 0x70
9000c7c0:	f023 0304 	bic.w	r3, r3, #4
9000c7c4:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
9000c7c6:	f7fc fbff 	bl	90008fc8 <HAL_GetTick>
9000c7ca:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
9000c7cc:	e005      	b.n	9000c7da <HAL_RCC_OscConfig+0x59a>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000c7ce:	f7fc fbfb 	bl	90008fc8 <HAL_GetTick>
9000c7d2:	1b80      	subs	r0, r0, r6
9000c7d4:	42b8      	cmp	r0, r7
9000c7d6:	f63f aeb4 	bhi.w	9000c542 <HAL_RCC_OscConfig+0x302>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
9000c7da:	6f2b      	ldr	r3, [r5, #112]	; 0x70
9000c7dc:	0798      	lsls	r0, r3, #30
9000c7de:	d4f6      	bmi.n	9000c7ce <HAL_RCC_OscConfig+0x58e>
9000c7e0:	e5d3      	b.n	9000c38a <HAL_RCC_OscConfig+0x14a>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000c7e2:	68eb      	ldr	r3, [r5, #12]
9000c7e4:	6a22      	ldr	r2, [r4, #32]
9000c7e6:	f023 537c 	bic.w	r3, r3, #1056964608	; 0x3f000000
9000c7ea:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
9000c7ee:	60eb      	str	r3, [r5, #12]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000c7f0:	6823      	ldr	r3, [r4, #0]
9000c7f2:	e595      	b.n	9000c320 <HAL_RCC_OscConfig+0xe0>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000c7f4:	4a0b      	ldr	r2, [pc, #44]	; (9000c824 <HAL_RCC_OscConfig+0x5e4>)
9000c7f6:	6f13      	ldr	r3, [r2, #112]	; 0x70
9000c7f8:	f043 0301 	orr.w	r3, r3, #1
9000c7fc:	6713      	str	r3, [r2, #112]	; 0x70
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
9000c7fe:	e690      	b.n	9000c522 <HAL_RCC_OscConfig+0x2e2>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000c800:	4a08      	ldr	r2, [pc, #32]	; (9000c824 <HAL_RCC_OscConfig+0x5e4>)
9000c802:	6853      	ldr	r3, [r2, #4]
9000c804:	f023 43f8 	bic.w	r3, r3, #2080374784	; 0x7c000000
9000c808:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
9000c80c:	6053      	str	r3, [r2, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000c80e:	6823      	ldr	r3, [r4, #0]
9000c810:	e586      	b.n	9000c320 <HAL_RCC_OscConfig+0xe0>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000c812:	f042 0204 	orr.w	r2, r2, #4
9000c816:	671a      	str	r2, [r3, #112]	; 0x70
9000c818:	6f1a      	ldr	r2, [r3, #112]	; 0x70
9000c81a:	f042 0201 	orr.w	r2, r2, #1
9000c81e:	671a      	str	r2, [r3, #112]	; 0x70
9000c820:	e67f      	b.n	9000c522 <HAL_RCC_OscConfig+0x2e2>
9000c822:	bf00      	nop
9000c824:	58024400 	.word	0x58024400

9000c828 <HAL_RCC_GetSysClockFreq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000c828:	4a47      	ldr	r2, [pc, #284]	; (9000c948 <HAL_RCC_GetSysClockFreq+0x120>)
9000c82a:	6913      	ldr	r3, [r2, #16]
9000c82c:	f003 0338 	and.w	r3, r3, #56	; 0x38
9000c830:	2b10      	cmp	r3, #16
9000c832:	d004      	beq.n	9000c83e <HAL_RCC_GetSysClockFreq+0x16>
9000c834:	2b18      	cmp	r3, #24
9000c836:	d00d      	beq.n	9000c854 <HAL_RCC_GetSysClockFreq+0x2c>
9000c838:	b11b      	cbz	r3, 9000c842 <HAL_RCC_GetSysClockFreq+0x1a>
      sysclockfreq = CSI_VALUE;
9000c83a:	4844      	ldr	r0, [pc, #272]	; (9000c94c <HAL_RCC_GetSysClockFreq+0x124>)
9000c83c:	4770      	bx	lr
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000c83e:	4844      	ldr	r0, [pc, #272]	; (9000c950 <HAL_RCC_GetSysClockFreq+0x128>)
9000c840:	4770      	bx	lr
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000c842:	6813      	ldr	r3, [r2, #0]
9000c844:	0699      	lsls	r1, r3, #26
9000c846:	d54a      	bpl.n	9000c8de <HAL_RCC_GetSysClockFreq+0xb6>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000c848:	6813      	ldr	r3, [r2, #0]
9000c84a:	4842      	ldr	r0, [pc, #264]	; (9000c954 <HAL_RCC_GetSysClockFreq+0x12c>)
9000c84c:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9000c850:	40d8      	lsrs	r0, r3
9000c852:	4770      	bx	lr
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000c854:	6a93      	ldr	r3, [r2, #40]	; 0x28
{
9000c856:	b430      	push	{r4, r5}
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000c858:	6a94      	ldr	r4, [r2, #40]	; 0x28
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000c85a:	6ad5      	ldr	r5, [r2, #44]	; 0x2c
      if (pllm != 0U)
9000c85c:	f414 7f7c 	tst.w	r4, #1008	; 0x3f0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000c860:	6b51      	ldr	r1, [r2, #52]	; 0x34
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000c862:	f3c4 1005 	ubfx	r0, r4, #4, #6
      if (pllm != 0U)
9000c866:	d038      	beq.n	9000c8da <HAL_RCC_GetSysClockFreq+0xb2>
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000c868:	f3c1 01cc 	ubfx	r1, r1, #3, #13
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000c86c:	f005 0501 	and.w	r5, r5, #1
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000c870:	f003 0303 	and.w	r3, r3, #3
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000c874:	fb05 f101 	mul.w	r1, r5, r1
9000c878:	2b01      	cmp	r3, #1
9000c87a:	ee07 1a90 	vmov	s15, r1
9000c87e:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
        switch (pllsource)
9000c882:	d002      	beq.n	9000c88a <HAL_RCC_GetSysClockFreq+0x62>
9000c884:	2b02      	cmp	r3, #2
9000c886:	d02c      	beq.n	9000c8e2 <HAL_RCC_GetSysClockFreq+0xba>
9000c888:	b393      	cbz	r3, 9000c8f0 <HAL_RCC_GetSysClockFreq+0xc8>
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000c88a:	ee07 0a90 	vmov	s15, r0
9000c88e:	ed9f 5a32 	vldr	s10, [pc, #200]	; 9000c958 <HAL_RCC_GetSysClockFreq+0x130>
9000c892:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000c896:	6b13      	ldr	r3, [r2, #48]	; 0x30
9000c898:	eec5 6a27 	vdiv.f32	s13, s10, s15
9000c89c:	eddf 5a2f 	vldr	s11, [pc, #188]	; 9000c95c <HAL_RCC_GetSysClockFreq+0x134>
9000c8a0:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000c8a4:	ee07 3a90 	vmov	s15, r3
9000c8a8:	eeb7 6a00 	vmov.f32	s12, #112	; 0x3f800000  1.0
9000c8ac:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000c8b0:	eee7 7a25 	vfma.f32	s15, s14, s11
9000c8b4:	ee77 7a86 	vadd.f32	s15, s15, s12
9000c8b8:	ee66 6aa7 	vmul.f32	s13, s13, s15
        pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> 9) + 1U) ;
9000c8bc:	4b22      	ldr	r3, [pc, #136]	; (9000c948 <HAL_RCC_GetSysClockFreq+0x120>)
9000c8be:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9000c8c0:	f3c3 2346 	ubfx	r3, r3, #9, #7
9000c8c4:	3301      	adds	r3, #1
        sysclockfreq = (uint32_t)(float_t)(pllvco / (float_t)pllp);
9000c8c6:	ee07 3a90 	vmov	s15, r3
9000c8ca:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
9000c8ce:	eec6 7a87 	vdiv.f32	s15, s13, s14
9000c8d2:	eefc 7ae7 	vcvt.u32.f32	s15, s15
9000c8d6:	ee17 0a90 	vmov	r0, s15
}
9000c8da:	bc30      	pop	{r4, r5}
9000c8dc:	4770      	bx	lr
        sysclockfreq = (uint32_t) HSI_VALUE;
9000c8de:	481d      	ldr	r0, [pc, #116]	; (9000c954 <HAL_RCC_GetSysClockFreq+0x12c>)
}
9000c8e0:	4770      	bx	lr
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000c8e2:	ee07 0a90 	vmov	s15, r0
9000c8e6:	ed9f 5a1e 	vldr	s10, [pc, #120]	; 9000c960 <HAL_RCC_GetSysClockFreq+0x138>
9000c8ea:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000c8ee:	e7d2      	b.n	9000c896 <HAL_RCC_GetSysClockFreq+0x6e>
            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000c8f0:	6813      	ldr	r3, [r2, #0]
9000c8f2:	069b      	lsls	r3, r3, #26
9000c8f4:	d520      	bpl.n	9000c938 <HAL_RCC_GetSysClockFreq+0x110>
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000c8f6:	6814      	ldr	r4, [r2, #0]
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000c8f8:	ee07 0a90 	vmov	s15, r0
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000c8fc:	4915      	ldr	r1, [pc, #84]	; (9000c954 <HAL_RCC_GetSysClockFreq+0x12c>)
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000c8fe:	eef7 5a00 	vmov.f32	s11, #112	; 0x3f800000  1.0
9000c902:	6b13      	ldr	r3, [r2, #48]	; 0x30
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000c904:	f3c4 04c1 	ubfx	r4, r4, #3, #2
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000c908:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000c90c:	ed9f 5a13 	vldr	s10, [pc, #76]	; 9000c95c <HAL_RCC_GetSysClockFreq+0x134>
9000c910:	f3c3 0308 	ubfx	r3, r3, #0, #9
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000c914:	40e1      	lsrs	r1, r4
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000c916:	ee06 3a90 	vmov	s13, r3
9000c91a:	ee06 1a10 	vmov	s12, r1
9000c91e:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9000c922:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
9000c926:	eee7 6a05 	vfma.f32	s13, s14, s10
9000c92a:	ee86 7a27 	vdiv.f32	s14, s12, s15
9000c92e:	ee76 6aa5 	vadd.f32	s13, s13, s11
9000c932:	ee66 6a87 	vmul.f32	s13, s13, s14
9000c936:	e7c1      	b.n	9000c8bc <HAL_RCC_GetSysClockFreq+0x94>
              pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000c938:	ee07 0a90 	vmov	s15, r0
9000c93c:	ed9f 5a09 	vldr	s10, [pc, #36]	; 9000c964 <HAL_RCC_GetSysClockFreq+0x13c>
9000c940:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000c944:	e7a7      	b.n	9000c896 <HAL_RCC_GetSysClockFreq+0x6e>
9000c946:	bf00      	nop
9000c948:	58024400 	.word	0x58024400
9000c94c:	003d0900 	.word	0x003d0900
9000c950:	017d7840 	.word	0x017d7840
9000c954:	03d09000 	.word	0x03d09000
9000c958:	4a742400 	.word	0x4a742400
9000c95c:	39000000 	.word	0x39000000
9000c960:	4bbebc20 	.word	0x4bbebc20
9000c964:	4c742400 	.word	0x4c742400

9000c968 <HAL_RCC_ClockConfig>:
  if (RCC_ClkInitStruct == NULL)
9000c968:	2800      	cmp	r0, #0
9000c96a:	f000 810c 	beq.w	9000cb86 <HAL_RCC_ClockConfig+0x21e>
  if (FLatency > __HAL_FLASH_GET_LATENCY())
9000c96e:	4a8c      	ldr	r2, [pc, #560]	; (9000cba0 <HAL_RCC_ClockConfig+0x238>)
9000c970:	6813      	ldr	r3, [r2, #0]
9000c972:	f003 030f 	and.w	r3, r3, #15
9000c976:	428b      	cmp	r3, r1
{
9000c978:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000c97c:	4604      	mov	r4, r0
9000c97e:	460d      	mov	r5, r1
  if (FLatency > __HAL_FLASH_GET_LATENCY())
9000c980:	d20c      	bcs.n	9000c99c <HAL_RCC_ClockConfig+0x34>
    __HAL_FLASH_SET_LATENCY(FLatency);
9000c982:	6813      	ldr	r3, [r2, #0]
9000c984:	f023 030f 	bic.w	r3, r3, #15
9000c988:	430b      	orrs	r3, r1
9000c98a:	6013      	str	r3, [r2, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
9000c98c:	6813      	ldr	r3, [r2, #0]
9000c98e:	f003 030f 	and.w	r3, r3, #15
9000c992:	428b      	cmp	r3, r1
9000c994:	d002      	beq.n	9000c99c <HAL_RCC_ClockConfig+0x34>
    return HAL_ERROR;
9000c996:	2001      	movs	r0, #1
}
9000c998:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
9000c99c:	6823      	ldr	r3, [r4, #0]
9000c99e:	075f      	lsls	r7, r3, #29
9000c9a0:	d50b      	bpl.n	9000c9ba <HAL_RCC_ClockConfig+0x52>
    if ((RCC_ClkInitStruct->APB3CLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
9000c9a2:	4980      	ldr	r1, [pc, #512]	; (9000cba4 <HAL_RCC_ClockConfig+0x23c>)
9000c9a4:	6920      	ldr	r0, [r4, #16]
9000c9a6:	698a      	ldr	r2, [r1, #24]
9000c9a8:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000c9ac:	4290      	cmp	r0, r2
9000c9ae:	d904      	bls.n	9000c9ba <HAL_RCC_ClockConfig+0x52>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
9000c9b0:	698a      	ldr	r2, [r1, #24]
9000c9b2:	f022 0270 	bic.w	r2, r2, #112	; 0x70
9000c9b6:	4302      	orrs	r2, r0
9000c9b8:	618a      	str	r2, [r1, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
9000c9ba:	071e      	lsls	r6, r3, #28
9000c9bc:	d50b      	bpl.n	9000c9d6 <HAL_RCC_ClockConfig+0x6e>
    if ((RCC_ClkInitStruct->APB1CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
9000c9be:	4979      	ldr	r1, [pc, #484]	; (9000cba4 <HAL_RCC_ClockConfig+0x23c>)
9000c9c0:	6960      	ldr	r0, [r4, #20]
9000c9c2:	69ca      	ldr	r2, [r1, #28]
9000c9c4:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000c9c8:	4290      	cmp	r0, r2
9000c9ca:	d904      	bls.n	9000c9d6 <HAL_RCC_ClockConfig+0x6e>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
9000c9cc:	69ca      	ldr	r2, [r1, #28]
9000c9ce:	f022 0270 	bic.w	r2, r2, #112	; 0x70
9000c9d2:	4302      	orrs	r2, r0
9000c9d4:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
9000c9d6:	06d8      	lsls	r0, r3, #27
9000c9d8:	d50b      	bpl.n	9000c9f2 <HAL_RCC_ClockConfig+0x8a>
    if ((RCC_ClkInitStruct->APB2CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
9000c9da:	4972      	ldr	r1, [pc, #456]	; (9000cba4 <HAL_RCC_ClockConfig+0x23c>)
9000c9dc:	69a0      	ldr	r0, [r4, #24]
9000c9de:	69ca      	ldr	r2, [r1, #28]
9000c9e0:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
9000c9e4:	4290      	cmp	r0, r2
9000c9e6:	d904      	bls.n	9000c9f2 <HAL_RCC_ClockConfig+0x8a>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
9000c9e8:	69ca      	ldr	r2, [r1, #28]
9000c9ea:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
9000c9ee:	4302      	orrs	r2, r0
9000c9f0:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
9000c9f2:	0699      	lsls	r1, r3, #26
9000c9f4:	d50b      	bpl.n	9000ca0e <HAL_RCC_ClockConfig+0xa6>
    if ((RCC_ClkInitStruct->APB4CLKDivider) > (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
9000c9f6:	496b      	ldr	r1, [pc, #428]	; (9000cba4 <HAL_RCC_ClockConfig+0x23c>)
9000c9f8:	69e0      	ldr	r0, [r4, #28]
9000c9fa:	6a0a      	ldr	r2, [r1, #32]
9000c9fc:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000ca00:	4290      	cmp	r0, r2
9000ca02:	d904      	bls.n	9000ca0e <HAL_RCC_ClockConfig+0xa6>
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider));
9000ca04:	6a0a      	ldr	r2, [r1, #32]
9000ca06:	f022 0270 	bic.w	r2, r2, #112	; 0x70
9000ca0a:	4302      	orrs	r2, r0
9000ca0c:	620a      	str	r2, [r1, #32]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
9000ca0e:	079a      	lsls	r2, r3, #30
9000ca10:	f140 80ab 	bpl.w	9000cb6a <HAL_RCC_ClockConfig+0x202>
    if ((RCC_ClkInitStruct->AHBCLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_HPRE))
9000ca14:	4863      	ldr	r0, [pc, #396]	; (9000cba4 <HAL_RCC_ClockConfig+0x23c>)
9000ca16:	68e1      	ldr	r1, [r4, #12]
9000ca18:	6982      	ldr	r2, [r0, #24]
9000ca1a:	f002 020f 	and.w	r2, r2, #15
9000ca1e:	4291      	cmp	r1, r2
9000ca20:	d904      	bls.n	9000ca2c <HAL_RCC_ClockConfig+0xc4>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
9000ca22:	6982      	ldr	r2, [r0, #24]
9000ca24:	f022 020f 	bic.w	r2, r2, #15
9000ca28:	430a      	orrs	r2, r1
9000ca2a:	6182      	str	r2, [r0, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
9000ca2c:	07d8      	lsls	r0, r3, #31
9000ca2e:	d530      	bpl.n	9000ca92 <HAL_RCC_ClockConfig+0x12a>
    MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1CPRE, RCC_ClkInitStruct->SYSCLKDivider);
9000ca30:	4a5c      	ldr	r2, [pc, #368]	; (9000cba4 <HAL_RCC_ClockConfig+0x23c>)
9000ca32:	68a1      	ldr	r1, [r4, #8]
9000ca34:	6993      	ldr	r3, [r2, #24]
9000ca36:	f423 6370 	bic.w	r3, r3, #3840	; 0xf00
9000ca3a:	430b      	orrs	r3, r1
9000ca3c:	6193      	str	r3, [r2, #24]
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
9000ca3e:	6861      	ldr	r1, [r4, #4]
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000ca40:	6813      	ldr	r3, [r2, #0]
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
9000ca42:	2902      	cmp	r1, #2
9000ca44:	f000 80a1 	beq.w	9000cb8a <HAL_RCC_ClockConfig+0x222>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
9000ca48:	2903      	cmp	r1, #3
9000ca4a:	f000 8098 	beq.w	9000cb7e <HAL_RCC_ClockConfig+0x216>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_CSI)
9000ca4e:	2901      	cmp	r1, #1
9000ca50:	f000 80a1 	beq.w	9000cb96 <HAL_RCC_ClockConfig+0x22e>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000ca54:	0758      	lsls	r0, r3, #29
9000ca56:	d59e      	bpl.n	9000c996 <HAL_RCC_ClockConfig+0x2e>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
9000ca58:	4e52      	ldr	r6, [pc, #328]	; (9000cba4 <HAL_RCC_ClockConfig+0x23c>)
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
9000ca5a:	f241 3888 	movw	r8, #5000	; 0x1388
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
9000ca5e:	6933      	ldr	r3, [r6, #16]
9000ca60:	f023 0307 	bic.w	r3, r3, #7
9000ca64:	430b      	orrs	r3, r1
9000ca66:	6133      	str	r3, [r6, #16]
    tickstart = HAL_GetTick();
9000ca68:	f7fc faae 	bl	90008fc8 <HAL_GetTick>
9000ca6c:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
9000ca6e:	e005      	b.n	9000ca7c <HAL_RCC_ClockConfig+0x114>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
9000ca70:	f7fc faaa 	bl	90008fc8 <HAL_GetTick>
9000ca74:	1bc0      	subs	r0, r0, r7
9000ca76:	4540      	cmp	r0, r8
9000ca78:	f200 808b 	bhi.w	9000cb92 <HAL_RCC_ClockConfig+0x22a>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
9000ca7c:	6933      	ldr	r3, [r6, #16]
9000ca7e:	6862      	ldr	r2, [r4, #4]
9000ca80:	f003 0338 	and.w	r3, r3, #56	; 0x38
9000ca84:	ebb3 0fc2 	cmp.w	r3, r2, lsl #3
9000ca88:	d1f2      	bne.n	9000ca70 <HAL_RCC_ClockConfig+0x108>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
9000ca8a:	6823      	ldr	r3, [r4, #0]
9000ca8c:	0799      	lsls	r1, r3, #30
9000ca8e:	d506      	bpl.n	9000ca9e <HAL_RCC_ClockConfig+0x136>
    if ((RCC_ClkInitStruct->AHBCLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_HPRE))
9000ca90:	68e1      	ldr	r1, [r4, #12]
9000ca92:	4844      	ldr	r0, [pc, #272]	; (9000cba4 <HAL_RCC_ClockConfig+0x23c>)
9000ca94:	6982      	ldr	r2, [r0, #24]
9000ca96:	f002 020f 	and.w	r2, r2, #15
9000ca9a:	428a      	cmp	r2, r1
9000ca9c:	d869      	bhi.n	9000cb72 <HAL_RCC_ClockConfig+0x20a>
  if (FLatency < __HAL_FLASH_GET_LATENCY())
9000ca9e:	4940      	ldr	r1, [pc, #256]	; (9000cba0 <HAL_RCC_ClockConfig+0x238>)
9000caa0:	680a      	ldr	r2, [r1, #0]
9000caa2:	f002 020f 	and.w	r2, r2, #15
9000caa6:	42aa      	cmp	r2, r5
9000caa8:	d90a      	bls.n	9000cac0 <HAL_RCC_ClockConfig+0x158>
    __HAL_FLASH_SET_LATENCY(FLatency);
9000caaa:	680a      	ldr	r2, [r1, #0]
9000caac:	f022 020f 	bic.w	r2, r2, #15
9000cab0:	432a      	orrs	r2, r5
9000cab2:	600a      	str	r2, [r1, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
9000cab4:	680a      	ldr	r2, [r1, #0]
9000cab6:	f002 020f 	and.w	r2, r2, #15
9000caba:	42aa      	cmp	r2, r5
9000cabc:	f47f af6b 	bne.w	9000c996 <HAL_RCC_ClockConfig+0x2e>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
9000cac0:	075a      	lsls	r2, r3, #29
9000cac2:	d50b      	bpl.n	9000cadc <HAL_RCC_ClockConfig+0x174>
    if ((RCC_ClkInitStruct->APB3CLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
9000cac4:	4937      	ldr	r1, [pc, #220]	; (9000cba4 <HAL_RCC_ClockConfig+0x23c>)
9000cac6:	6920      	ldr	r0, [r4, #16]
9000cac8:	698a      	ldr	r2, [r1, #24]
9000caca:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000cace:	4290      	cmp	r0, r2
9000cad0:	d204      	bcs.n	9000cadc <HAL_RCC_ClockConfig+0x174>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
9000cad2:	698a      	ldr	r2, [r1, #24]
9000cad4:	f022 0270 	bic.w	r2, r2, #112	; 0x70
9000cad8:	4302      	orrs	r2, r0
9000cada:	618a      	str	r2, [r1, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
9000cadc:	071f      	lsls	r7, r3, #28
9000cade:	d50b      	bpl.n	9000caf8 <HAL_RCC_ClockConfig+0x190>
    if ((RCC_ClkInitStruct->APB1CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
9000cae0:	4930      	ldr	r1, [pc, #192]	; (9000cba4 <HAL_RCC_ClockConfig+0x23c>)
9000cae2:	6960      	ldr	r0, [r4, #20]
9000cae4:	69ca      	ldr	r2, [r1, #28]
9000cae6:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000caea:	4290      	cmp	r0, r2
9000caec:	d204      	bcs.n	9000caf8 <HAL_RCC_ClockConfig+0x190>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
9000caee:	69ca      	ldr	r2, [r1, #28]
9000caf0:	f022 0270 	bic.w	r2, r2, #112	; 0x70
9000caf4:	4302      	orrs	r2, r0
9000caf6:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
9000caf8:	06de      	lsls	r6, r3, #27
9000cafa:	d50b      	bpl.n	9000cb14 <HAL_RCC_ClockConfig+0x1ac>
    if ((RCC_ClkInitStruct->APB2CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
9000cafc:	4929      	ldr	r1, [pc, #164]	; (9000cba4 <HAL_RCC_ClockConfig+0x23c>)
9000cafe:	69a0      	ldr	r0, [r4, #24]
9000cb00:	69ca      	ldr	r2, [r1, #28]
9000cb02:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
9000cb06:	4290      	cmp	r0, r2
9000cb08:	d204      	bcs.n	9000cb14 <HAL_RCC_ClockConfig+0x1ac>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
9000cb0a:	69ca      	ldr	r2, [r1, #28]
9000cb0c:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
9000cb10:	4302      	orrs	r2, r0
9000cb12:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
9000cb14:	069d      	lsls	r5, r3, #26
9000cb16:	d50b      	bpl.n	9000cb30 <HAL_RCC_ClockConfig+0x1c8>
    if ((RCC_ClkInitStruct->APB4CLKDivider) < (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
9000cb18:	4a22      	ldr	r2, [pc, #136]	; (9000cba4 <HAL_RCC_ClockConfig+0x23c>)
9000cb1a:	69e1      	ldr	r1, [r4, #28]
9000cb1c:	6a13      	ldr	r3, [r2, #32]
9000cb1e:	f003 0370 	and.w	r3, r3, #112	; 0x70
9000cb22:	4299      	cmp	r1, r3
9000cb24:	d204      	bcs.n	9000cb30 <HAL_RCC_ClockConfig+0x1c8>
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider));
9000cb26:	6a13      	ldr	r3, [r2, #32]
9000cb28:	f023 0370 	bic.w	r3, r3, #112	; 0x70
9000cb2c:	430b      	orrs	r3, r1
9000cb2e:	6213      	str	r3, [r2, #32]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000cb30:	f7ff fe7a 	bl	9000c828 <HAL_RCC_GetSysClockFreq>
9000cb34:	4a1b      	ldr	r2, [pc, #108]	; (9000cba4 <HAL_RCC_ClockConfig+0x23c>)
9000cb36:	4603      	mov	r3, r0
9000cb38:	481b      	ldr	r0, [pc, #108]	; (9000cba8 <HAL_RCC_ClockConfig+0x240>)
9000cb3a:	6991      	ldr	r1, [r2, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000cb3c:	6992      	ldr	r2, [r2, #24]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000cb3e:	f3c1 2103 	ubfx	r1, r1, #8, #4
  SystemCoreClock = common_system_clock;
9000cb42:	4d1a      	ldr	r5, [pc, #104]	; (9000cbac <HAL_RCC_ClockConfig+0x244>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000cb44:	f002 020f 	and.w	r2, r2, #15
9000cb48:	4c19      	ldr	r4, [pc, #100]	; (9000cbb0 <HAL_RCC_ClockConfig+0x248>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000cb4a:	5c41      	ldrb	r1, [r0, r1]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000cb4c:	5c82      	ldrb	r2, [r0, r2]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000cb4e:	f001 011f 	and.w	r1, r1, #31
  halstatus = HAL_InitTick(uwTickPrio);
9000cb52:	4818      	ldr	r0, [pc, #96]	; (9000cbb4 <HAL_RCC_ClockConfig+0x24c>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000cb54:	f002 021f 	and.w	r2, r2, #31
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000cb58:	40cb      	lsrs	r3, r1
  halstatus = HAL_InitTick(uwTickPrio);
9000cb5a:	6800      	ldr	r0, [r0, #0]
  SystemCoreClock = common_system_clock;
9000cb5c:	602b      	str	r3, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000cb5e:	40d3      	lsrs	r3, r2
9000cb60:	6023      	str	r3, [r4, #0]
}
9000cb62:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  halstatus = HAL_InitTick(uwTickPrio);
9000cb66:	f7f6 bc39 	b.w	900033dc <HAL_InitTick>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
9000cb6a:	07da      	lsls	r2, r3, #31
9000cb6c:	f53f af60 	bmi.w	9000ca30 <HAL_RCC_ClockConfig+0xc8>
9000cb70:	e795      	b.n	9000ca9e <HAL_RCC_ClockConfig+0x136>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
9000cb72:	6982      	ldr	r2, [r0, #24]
9000cb74:	f022 020f 	bic.w	r2, r2, #15
9000cb78:	430a      	orrs	r2, r1
9000cb7a:	6182      	str	r2, [r0, #24]
9000cb7c:	e78f      	b.n	9000ca9e <HAL_RCC_ClockConfig+0x136>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000cb7e:	019f      	lsls	r7, r3, #6
9000cb80:	f53f af6a 	bmi.w	9000ca58 <HAL_RCC_ClockConfig+0xf0>
9000cb84:	e707      	b.n	9000c996 <HAL_RCC_ClockConfig+0x2e>
    return HAL_ERROR;
9000cb86:	2001      	movs	r0, #1
}
9000cb88:	4770      	bx	lr
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000cb8a:	039b      	lsls	r3, r3, #14
9000cb8c:	f53f af64 	bmi.w	9000ca58 <HAL_RCC_ClockConfig+0xf0>
9000cb90:	e701      	b.n	9000c996 <HAL_RCC_ClockConfig+0x2e>
        return HAL_TIMEOUT;
9000cb92:	2003      	movs	r0, #3
9000cb94:	e700      	b.n	9000c998 <HAL_RCC_ClockConfig+0x30>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000cb96:	05de      	lsls	r6, r3, #23
9000cb98:	f53f af5e 	bmi.w	9000ca58 <HAL_RCC_ClockConfig+0xf0>
9000cb9c:	e6fb      	b.n	9000c996 <HAL_RCC_ClockConfig+0x2e>
9000cb9e:	bf00      	nop
9000cba0:	52002000 	.word	0x52002000
9000cba4:	58024400 	.word	0x58024400
9000cba8:	9002b65c 	.word	0x9002b65c
9000cbac:	2400006c 	.word	0x2400006c
9000cbb0:	24000070 	.word	0x24000070
9000cbb4:	24000078 	.word	0x24000078

9000cbb8 <HAL_RCC_GetPCLK1Freq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000cbb8:	4a1c      	ldr	r2, [pc, #112]	; (9000cc2c <HAL_RCC_GetPCLK1Freq+0x74>)
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
9000cbba:	b538      	push	{r3, r4, r5, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000cbbc:	6913      	ldr	r3, [r2, #16]
9000cbbe:	f003 0338 	and.w	r3, r3, #56	; 0x38
9000cbc2:	2b10      	cmp	r3, #16
9000cbc4:	d021      	beq.n	9000cc0a <HAL_RCC_GetPCLK1Freq+0x52>
9000cbc6:	2b18      	cmp	r3, #24
9000cbc8:	d02a      	beq.n	9000cc20 <HAL_RCC_GetPCLK1Freq+0x68>
9000cbca:	b303      	cbz	r3, 9000cc0e <HAL_RCC_GetPCLK1Freq+0x56>
      sysclockfreq = CSI_VALUE;
9000cbcc:	4818      	ldr	r0, [pc, #96]	; (9000cc30 <HAL_RCC_GetPCLK1Freq+0x78>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000cbce:	4a17      	ldr	r2, [pc, #92]	; (9000cc2c <HAL_RCC_GetPCLK1Freq+0x74>)
9000cbd0:	4918      	ldr	r1, [pc, #96]	; (9000cc34 <HAL_RCC_GetPCLK1Freq+0x7c>)
9000cbd2:	6993      	ldr	r3, [r2, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000cbd4:	4c18      	ldr	r4, [pc, #96]	; (9000cc38 <HAL_RCC_GetPCLK1Freq+0x80>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000cbd6:	f3c3 2303 	ubfx	r3, r3, #8, #4
  SystemCoreClock = common_system_clock;
9000cbda:	4d18      	ldr	r5, [pc, #96]	; (9000cc3c <HAL_RCC_GetPCLK1Freq+0x84>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000cbdc:	5ccb      	ldrb	r3, [r1, r3]
9000cbde:	f003 031f 	and.w	r3, r3, #31
9000cbe2:	40d8      	lsrs	r0, r3
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000cbe4:	6993      	ldr	r3, [r2, #24]
9000cbe6:	f003 030f 	and.w	r3, r3, #15
  SystemCoreClock = common_system_clock;
9000cbea:	6028      	str	r0, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000cbec:	5ccb      	ldrb	r3, [r1, r3]
9000cbee:	f003 031f 	and.w	r3, r3, #31
9000cbf2:	fa20 f303 	lsr.w	r3, r0, r3
9000cbf6:	6023      	str	r3, [r4, #0]
#if defined (RCC_D2CFGR_D2PPRE1)
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1) >> RCC_D2CFGR_D2PPRE1_Pos]) & 0x1FU));
9000cbf8:	69d2      	ldr	r2, [r2, #28]
9000cbfa:	f3c2 1202 	ubfx	r2, r2, #4, #3
9000cbfe:	5c88      	ldrb	r0, [r1, r2]
9000cc00:	f000 001f 	and.w	r0, r0, #31
#else
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE1) >> RCC_CDCFGR2_CDPPRE1_Pos]) & 0x1FU));
#endif
}
9000cc04:	fa23 f000 	lsr.w	r0, r3, r0
9000cc08:	bd38      	pop	{r3, r4, r5, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000cc0a:	480d      	ldr	r0, [pc, #52]	; (9000cc40 <HAL_RCC_GetPCLK1Freq+0x88>)
9000cc0c:	e7df      	b.n	9000cbce <HAL_RCC_GetPCLK1Freq+0x16>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000cc0e:	6813      	ldr	r3, [r2, #0]
9000cc10:	069b      	lsls	r3, r3, #26
9000cc12:	d508      	bpl.n	9000cc26 <HAL_RCC_GetPCLK1Freq+0x6e>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000cc14:	6813      	ldr	r3, [r2, #0]
9000cc16:	480b      	ldr	r0, [pc, #44]	; (9000cc44 <HAL_RCC_GetPCLK1Freq+0x8c>)
9000cc18:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9000cc1c:	40d8      	lsrs	r0, r3
9000cc1e:	e7d6      	b.n	9000cbce <HAL_RCC_GetPCLK1Freq+0x16>
9000cc20:	f7ff fa8a 	bl	9000c138 <HAL_RCC_GetSysClockFreq.part.0>
9000cc24:	e7d3      	b.n	9000cbce <HAL_RCC_GetPCLK1Freq+0x16>
        sysclockfreq = (uint32_t) HSI_VALUE;
9000cc26:	4807      	ldr	r0, [pc, #28]	; (9000cc44 <HAL_RCC_GetPCLK1Freq+0x8c>)
9000cc28:	e7d1      	b.n	9000cbce <HAL_RCC_GetPCLK1Freq+0x16>
9000cc2a:	bf00      	nop
9000cc2c:	58024400 	.word	0x58024400
9000cc30:	003d0900 	.word	0x003d0900
9000cc34:	9002b65c 	.word	0x9002b65c
9000cc38:	24000070 	.word	0x24000070
9000cc3c:	2400006c 	.word	0x2400006c
9000cc40:	017d7840 	.word	0x017d7840
9000cc44:	03d09000 	.word	0x03d09000

9000cc48 <HAL_RCC_GetPCLK2Freq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000cc48:	4a1c      	ldr	r2, [pc, #112]	; (9000ccbc <HAL_RCC_GetPCLK2Freq+0x74>)
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
9000cc4a:	b538      	push	{r3, r4, r5, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000cc4c:	6913      	ldr	r3, [r2, #16]
9000cc4e:	f003 0338 	and.w	r3, r3, #56	; 0x38
9000cc52:	2b10      	cmp	r3, #16
9000cc54:	d021      	beq.n	9000cc9a <HAL_RCC_GetPCLK2Freq+0x52>
9000cc56:	2b18      	cmp	r3, #24
9000cc58:	d02a      	beq.n	9000ccb0 <HAL_RCC_GetPCLK2Freq+0x68>
9000cc5a:	b303      	cbz	r3, 9000cc9e <HAL_RCC_GetPCLK2Freq+0x56>
      sysclockfreq = CSI_VALUE;
9000cc5c:	4818      	ldr	r0, [pc, #96]	; (9000ccc0 <HAL_RCC_GetPCLK2Freq+0x78>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000cc5e:	4a17      	ldr	r2, [pc, #92]	; (9000ccbc <HAL_RCC_GetPCLK2Freq+0x74>)
9000cc60:	4918      	ldr	r1, [pc, #96]	; (9000ccc4 <HAL_RCC_GetPCLK2Freq+0x7c>)
9000cc62:	6993      	ldr	r3, [r2, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000cc64:	4c18      	ldr	r4, [pc, #96]	; (9000ccc8 <HAL_RCC_GetPCLK2Freq+0x80>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000cc66:	f3c3 2303 	ubfx	r3, r3, #8, #4
  SystemCoreClock = common_system_clock;
9000cc6a:	4d18      	ldr	r5, [pc, #96]	; (9000cccc <HAL_RCC_GetPCLK2Freq+0x84>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000cc6c:	5ccb      	ldrb	r3, [r1, r3]
9000cc6e:	f003 031f 	and.w	r3, r3, #31
9000cc72:	40d8      	lsrs	r0, r3
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000cc74:	6993      	ldr	r3, [r2, #24]
9000cc76:	f003 030f 	and.w	r3, r3, #15
  SystemCoreClock = common_system_clock;
9000cc7a:	6028      	str	r0, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000cc7c:	5ccb      	ldrb	r3, [r1, r3]
9000cc7e:	f003 031f 	and.w	r3, r3, #31
9000cc82:	fa20 f303 	lsr.w	r3, r0, r3
9000cc86:	6023      	str	r3, [r4, #0]
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
#if defined(RCC_D2CFGR_D2PPRE2)
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE2) >> RCC_D2CFGR_D2PPRE2_Pos]) & 0x1FU));
9000cc88:	69d2      	ldr	r2, [r2, #28]
9000cc8a:	f3c2 2202 	ubfx	r2, r2, #8, #3
9000cc8e:	5c88      	ldrb	r0, [r1, r2]
9000cc90:	f000 001f 	and.w	r0, r0, #31
#else
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE2) >> RCC_CDCFGR2_CDPPRE2_Pos]) & 0x1FU));
#endif
}
9000cc94:	fa23 f000 	lsr.w	r0, r3, r0
9000cc98:	bd38      	pop	{r3, r4, r5, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000cc9a:	480d      	ldr	r0, [pc, #52]	; (9000ccd0 <HAL_RCC_GetPCLK2Freq+0x88>)
9000cc9c:	e7df      	b.n	9000cc5e <HAL_RCC_GetPCLK2Freq+0x16>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000cc9e:	6813      	ldr	r3, [r2, #0]
9000cca0:	069b      	lsls	r3, r3, #26
9000cca2:	d508      	bpl.n	9000ccb6 <HAL_RCC_GetPCLK2Freq+0x6e>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000cca4:	6813      	ldr	r3, [r2, #0]
9000cca6:	480b      	ldr	r0, [pc, #44]	; (9000ccd4 <HAL_RCC_GetPCLK2Freq+0x8c>)
9000cca8:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9000ccac:	40d8      	lsrs	r0, r3
9000ccae:	e7d6      	b.n	9000cc5e <HAL_RCC_GetPCLK2Freq+0x16>
9000ccb0:	f7ff fa42 	bl	9000c138 <HAL_RCC_GetSysClockFreq.part.0>
9000ccb4:	e7d3      	b.n	9000cc5e <HAL_RCC_GetPCLK2Freq+0x16>
        sysclockfreq = (uint32_t) HSI_VALUE;
9000ccb6:	4807      	ldr	r0, [pc, #28]	; (9000ccd4 <HAL_RCC_GetPCLK2Freq+0x8c>)
9000ccb8:	e7d1      	b.n	9000cc5e <HAL_RCC_GetPCLK2Freq+0x16>
9000ccba:	bf00      	nop
9000ccbc:	58024400 	.word	0x58024400
9000ccc0:	003d0900 	.word	0x003d0900
9000ccc4:	9002b65c 	.word	0x9002b65c
9000ccc8:	24000070 	.word	0x24000070
9000cccc:	2400006c 	.word	0x2400006c
9000ccd0:	017d7840 	.word	0x017d7840
9000ccd4:	03d09000 	.word	0x03d09000

9000ccd8 <HAL_RCC_GetClockConfig>:
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_D1PCLK1 | RCC_CLOCKTYPE_PCLK1 |
                                 RCC_CLOCKTYPE_PCLK2 |  RCC_CLOCKTYPE_D3PCLK1  ;

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
9000ccd8:	4b13      	ldr	r3, [pc, #76]	; (9000cd28 <HAL_RCC_GetClockConfig+0x50>)
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_D1PCLK1 | RCC_CLOCKTYPE_PCLK1 |
9000ccda:	223f      	movs	r2, #63	; 0x3f
9000ccdc:	6002      	str	r2, [r0, #0]
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
9000ccde:	691a      	ldr	r2, [r3, #16]
9000cce0:	f002 0207 	and.w	r2, r2, #7
9000cce4:	6042      	str	r2, [r0, #4]

#if defined(RCC_D1CFGR_D1CPRE)
  /* Get the SYSCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_D1CPRE);
9000cce6:	699a      	ldr	r2, [r3, #24]
9000cce8:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
9000ccec:	6082      	str	r2, [r0, #8]

  /* Get the D1HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_HPRE);
9000ccee:	699a      	ldr	r2, [r3, #24]
9000ccf0:	f002 020f 	and.w	r2, r2, #15
9000ccf4:	60c2      	str	r2, [r0, #12]

  /* Get the APB3 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB3CLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_D1PPRE);
9000ccf6:	699a      	ldr	r2, [r3, #24]
9000ccf8:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000ccfc:	6102      	str	r2, [r0, #16]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1);
9000ccfe:	69da      	ldr	r2, [r3, #28]
9000cd00:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000cd04:	6142      	str	r2, [r0, #20]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)(RCC->D2CFGR & RCC_D2CFGR_D2PPRE2);
9000cd06:	69da      	ldr	r2, [r3, #28]
9000cd08:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
9000cd0c:	6182      	str	r2, [r0, #24]

  /* Get the APB4 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
9000cd0e:	6a1b      	ldr	r3, [r3, #32]
{
9000cd10:	b410      	push	{r4}
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
9000cd12:	f003 0370 	and.w	r3, r3, #112	; 0x70
  /* Get the APB4 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->SRDCFGR & RCC_SRDCFGR_SRDPPRE);
#endif

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000cd16:	4c05      	ldr	r4, [pc, #20]	; (9000cd2c <HAL_RCC_GetClockConfig+0x54>)
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
9000cd18:	61c3      	str	r3, [r0, #28]
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000cd1a:	6823      	ldr	r3, [r4, #0]
}
9000cd1c:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000cd20:	f003 030f 	and.w	r3, r3, #15
9000cd24:	600b      	str	r3, [r1, #0]
}
9000cd26:	4770      	bx	lr
9000cd28:	58024400 	.word	0x58024400
9000cd2c:	52002000 	.word	0x52002000

9000cd30 <RCCEx_PLL2_Config>:
  * @note   PLL2 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL2_Config(RCC_PLL2InitTypeDef *pll2, uint32_t Divider)
{
9000cd30:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  assert_param(IS_RCC_PLL2RGE_VALUE(pll2->PLL2RGE));
  assert_param(IS_RCC_PLL2VCO_VALUE(pll2->PLL2VCOSEL));
  assert_param(IS_RCC_PLLFRACN_VALUE(pll2->PLL2FRACN));

  /* Check that PLL2 OSC clock source is already set */
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000cd32:	4c3a      	ldr	r4, [pc, #232]	; (9000ce1c <RCCEx_PLL2_Config+0xec>)
9000cd34:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000cd36:	f003 0303 	and.w	r3, r3, #3
9000cd3a:	2b03      	cmp	r3, #3
9000cd3c:	d067      	beq.n	9000ce0e <RCCEx_PLL2_Config+0xde>


  else
  {
    /* Disable  PLL2. */
    __HAL_RCC_PLL2_DISABLE();
9000cd3e:	6823      	ldr	r3, [r4, #0]
9000cd40:	4606      	mov	r6, r0
9000cd42:	460f      	mov	r7, r1
9000cd44:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
9000cd48:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000cd4a:	f7fc f93d 	bl	90008fc8 <HAL_GetTick>
9000cd4e:	4605      	mov	r5, r0

    /* Wait till PLL is disabled */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
9000cd50:	e004      	b.n	9000cd5c <RCCEx_PLL2_Config+0x2c>
    {
      if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
9000cd52:	f7fc f939 	bl	90008fc8 <HAL_GetTick>
9000cd56:	1b43      	subs	r3, r0, r5
9000cd58:	2b02      	cmp	r3, #2
9000cd5a:	d856      	bhi.n	9000ce0a <RCCEx_PLL2_Config+0xda>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
9000cd5c:	6823      	ldr	r3, [r4, #0]
9000cd5e:	011a      	lsls	r2, r3, #4
9000cd60:	d4f7      	bmi.n	9000cd52 <RCCEx_PLL2_Config+0x22>
        return HAL_TIMEOUT;
      }
    }

    /* Configure PLL2 multiplication and division factors. */
    __HAL_RCC_PLL2_CONFIG(pll2->PLL2M,
9000cd62:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000cd64:	6832      	ldr	r2, [r6, #0]
9000cd66:	f423 337c 	bic.w	r3, r3, #258048	; 0x3f000
9000cd6a:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
9000cd6e:	62a3      	str	r3, [r4, #40]	; 0x28
9000cd70:	e9d6 3202 	ldrd	r3, r2, [r6, #8]
9000cd74:	3b01      	subs	r3, #1
9000cd76:	3a01      	subs	r2, #1
9000cd78:	025b      	lsls	r3, r3, #9
9000cd7a:	0412      	lsls	r2, r2, #16
9000cd7c:	b29b      	uxth	r3, r3
9000cd7e:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
9000cd82:	4313      	orrs	r3, r2
9000cd84:	6872      	ldr	r2, [r6, #4]
9000cd86:	3a01      	subs	r2, #1
9000cd88:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000cd8c:	4313      	orrs	r3, r2
9000cd8e:	6932      	ldr	r2, [r6, #16]
9000cd90:	3a01      	subs	r2, #1
9000cd92:	0612      	lsls	r2, r2, #24
9000cd94:	f002 42fe 	and.w	r2, r2, #2130706432	; 0x7f000000
9000cd98:	4313      	orrs	r3, r2
9000cd9a:	63a3      	str	r3, [r4, #56]	; 0x38
                          pll2->PLL2P,
                          pll2->PLL2Q,
                          pll2->PLL2R);

    /* Select PLL2 input reference frequency range: VCI */
    __HAL_RCC_PLL2_VCIRANGE(pll2->PLL2RGE) ;
9000cd9c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000cd9e:	6972      	ldr	r2, [r6, #20]
9000cda0:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
9000cda4:	4313      	orrs	r3, r2
9000cda6:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Select PLL2 output frequency range : VCO */
    __HAL_RCC_PLL2_VCORANGE(pll2->PLL2VCOSEL) ;
9000cda8:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000cdaa:	69b3      	ldr	r3, [r6, #24]
9000cdac:	f022 0220 	bic.w	r2, r2, #32
9000cdb0:	431a      	orrs	r2, r3

    /* Disable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_DISABLE();

    /* Configures PLL2 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL2FRACN_CONFIG(pll2->PLL2FRACN);
9000cdb2:	4b1b      	ldr	r3, [pc, #108]	; (9000ce20 <RCCEx_PLL2_Config+0xf0>)
    __HAL_RCC_PLL2_VCORANGE(pll2->PLL2VCOSEL) ;
9000cdb4:	62e2      	str	r2, [r4, #44]	; 0x2c
    __HAL_RCC_PLL2FRACN_DISABLE();
9000cdb6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000cdb8:	f022 0210 	bic.w	r2, r2, #16
9000cdbc:	62e2      	str	r2, [r4, #44]	; 0x2c
    __HAL_RCC_PLL2FRACN_CONFIG(pll2->PLL2FRACN);
9000cdbe:	6be1      	ldr	r1, [r4, #60]	; 0x3c
9000cdc0:	69f2      	ldr	r2, [r6, #28]
9000cdc2:	400b      	ands	r3, r1
9000cdc4:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9000cdc8:	63e3      	str	r3, [r4, #60]	; 0x3c

    /* Enable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_ENABLE();
9000cdca:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000cdcc:	f043 0310 	orr.w	r3, r3, #16
9000cdd0:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Enable the PLL2 clock output */
    if (Divider == DIVIDER_P_UPDATE)
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
9000cdd2:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    if (Divider == DIVIDER_P_UPDATE)
9000cdd4:	b1ef      	cbz	r7, 9000ce12 <RCCEx_PLL2_Config+0xe2>
    }
    else if (Divider == DIVIDER_Q_UPDATE)
9000cdd6:	2f01      	cmp	r7, #1
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVQ);
9000cdd8:	bf0c      	ite	eq
9000cdda:	f443 1380 	orreq.w	r3, r3, #1048576	; 0x100000
    }
    else
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVR);
9000cdde:	f443 1300 	orrne.w	r3, r3, #2097152	; 0x200000
9000cde2:	62e3      	str	r3, [r4, #44]	; 0x2c
    }

    /* Enable  PLL2. */
    __HAL_RCC_PLL2_ENABLE();
9000cde4:	4c0d      	ldr	r4, [pc, #52]	; (9000ce1c <RCCEx_PLL2_Config+0xec>)
9000cde6:	6823      	ldr	r3, [r4, #0]
9000cde8:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
9000cdec:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000cdee:	f7fc f8eb 	bl	90008fc8 <HAL_GetTick>
9000cdf2:	4605      	mov	r5, r0

    /* Wait till PLL2 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
9000cdf4:	e004      	b.n	9000ce00 <RCCEx_PLL2_Config+0xd0>
    {
      if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
9000cdf6:	f7fc f8e7 	bl	90008fc8 <HAL_GetTick>
9000cdfa:	1b40      	subs	r0, r0, r5
9000cdfc:	2802      	cmp	r0, #2
9000cdfe:	d804      	bhi.n	9000ce0a <RCCEx_PLL2_Config+0xda>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
9000ce00:	6823      	ldr	r3, [r4, #0]
9000ce02:	011b      	lsls	r3, r3, #4
9000ce04:	d5f7      	bpl.n	9000cdf6 <RCCEx_PLL2_Config+0xc6>
    }

  }


  return status;
9000ce06:	2000      	movs	r0, #0
}
9000ce08:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        return HAL_TIMEOUT;
9000ce0a:	2003      	movs	r0, #3
}
9000ce0c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    return HAL_ERROR;
9000ce0e:	2001      	movs	r0, #1
}
9000ce10:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
9000ce12:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
9000ce16:	62e3      	str	r3, [r4, #44]	; 0x2c
9000ce18:	e7e4      	b.n	9000cde4 <RCCEx_PLL2_Config+0xb4>
9000ce1a:	bf00      	nop
9000ce1c:	58024400 	.word	0x58024400
9000ce20:	ffff0007 	.word	0xffff0007

9000ce24 <RCCEx_PLL3_Config>:
  * @note   PLL3 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL3_Config(RCC_PLL3InitTypeDef *pll3, uint32_t Divider)
{
9000ce24:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  assert_param(IS_RCC_PLL3RGE_VALUE(pll3->PLL3RGE));
  assert_param(IS_RCC_PLL3VCO_VALUE(pll3->PLL3VCOSEL));
  assert_param(IS_RCC_PLLFRACN_VALUE(pll3->PLL3FRACN));

  /* Check that PLL3 OSC clock source is already set */
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000ce26:	4c3a      	ldr	r4, [pc, #232]	; (9000cf10 <RCCEx_PLL3_Config+0xec>)
9000ce28:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000ce2a:	f003 0303 	and.w	r3, r3, #3
9000ce2e:	2b03      	cmp	r3, #3
9000ce30:	d067      	beq.n	9000cf02 <RCCEx_PLL3_Config+0xde>


  else
  {
    /* Disable  PLL3. */
    __HAL_RCC_PLL3_DISABLE();
9000ce32:	6823      	ldr	r3, [r4, #0]
9000ce34:	4606      	mov	r6, r0
9000ce36:	460f      	mov	r7, r1
9000ce38:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
9000ce3c:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000ce3e:	f7fc f8c3 	bl	90008fc8 <HAL_GetTick>
9000ce42:	4605      	mov	r5, r0
    /* Wait till PLL3 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
9000ce44:	e004      	b.n	9000ce50 <RCCEx_PLL3_Config+0x2c>
    {
      if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
9000ce46:	f7fc f8bf 	bl	90008fc8 <HAL_GetTick>
9000ce4a:	1b43      	subs	r3, r0, r5
9000ce4c:	2b02      	cmp	r3, #2
9000ce4e:	d856      	bhi.n	9000cefe <RCCEx_PLL3_Config+0xda>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
9000ce50:	6823      	ldr	r3, [r4, #0]
9000ce52:	009a      	lsls	r2, r3, #2
9000ce54:	d4f7      	bmi.n	9000ce46 <RCCEx_PLL3_Config+0x22>
        return HAL_TIMEOUT;
      }
    }

    /* Configure the PLL3  multiplication and division factors. */
    __HAL_RCC_PLL3_CONFIG(pll3->PLL3M,
9000ce56:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000ce58:	6832      	ldr	r2, [r6, #0]
9000ce5a:	f023 737c 	bic.w	r3, r3, #66060288	; 0x3f00000
9000ce5e:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
9000ce62:	62a3      	str	r3, [r4, #40]	; 0x28
9000ce64:	e9d6 3202 	ldrd	r3, r2, [r6, #8]
9000ce68:	3b01      	subs	r3, #1
9000ce6a:	3a01      	subs	r2, #1
9000ce6c:	025b      	lsls	r3, r3, #9
9000ce6e:	0412      	lsls	r2, r2, #16
9000ce70:	b29b      	uxth	r3, r3
9000ce72:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
9000ce76:	4313      	orrs	r3, r2
9000ce78:	6872      	ldr	r2, [r6, #4]
9000ce7a:	3a01      	subs	r2, #1
9000ce7c:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000ce80:	4313      	orrs	r3, r2
9000ce82:	6932      	ldr	r2, [r6, #16]
9000ce84:	3a01      	subs	r2, #1
9000ce86:	0612      	lsls	r2, r2, #24
9000ce88:	f002 42fe 	and.w	r2, r2, #2130706432	; 0x7f000000
9000ce8c:	4313      	orrs	r3, r2
9000ce8e:	6423      	str	r3, [r4, #64]	; 0x40
                          pll3->PLL3P,
                          pll3->PLL3Q,
                          pll3->PLL3R);

    /* Select PLL3 input reference frequency range: VCI */
    __HAL_RCC_PLL3_VCIRANGE(pll3->PLL3RGE) ;
9000ce90:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000ce92:	6972      	ldr	r2, [r6, #20]
9000ce94:	f423 6340 	bic.w	r3, r3, #3072	; 0xc00
9000ce98:	4313      	orrs	r3, r2
9000ce9a:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Select PLL3 output frequency range : VCO */
    __HAL_RCC_PLL3_VCORANGE(pll3->PLL3VCOSEL) ;
9000ce9c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000ce9e:	69b3      	ldr	r3, [r6, #24]
9000cea0:	f422 7200 	bic.w	r2, r2, #512	; 0x200
9000cea4:	431a      	orrs	r2, r3

    /* Disable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_DISABLE();

    /* Configures PLL3 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL3FRACN_CONFIG(pll3->PLL3FRACN);
9000cea6:	4b1b      	ldr	r3, [pc, #108]	; (9000cf14 <RCCEx_PLL3_Config+0xf0>)
    __HAL_RCC_PLL3_VCORANGE(pll3->PLL3VCOSEL) ;
9000cea8:	62e2      	str	r2, [r4, #44]	; 0x2c
    __HAL_RCC_PLL3FRACN_DISABLE();
9000ceaa:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000ceac:	f422 7280 	bic.w	r2, r2, #256	; 0x100
9000ceb0:	62e2      	str	r2, [r4, #44]	; 0x2c
    __HAL_RCC_PLL3FRACN_CONFIG(pll3->PLL3FRACN);
9000ceb2:	6c61      	ldr	r1, [r4, #68]	; 0x44
9000ceb4:	69f2      	ldr	r2, [r6, #28]
9000ceb6:	400b      	ands	r3, r1
9000ceb8:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9000cebc:	6463      	str	r3, [r4, #68]	; 0x44

    /* Enable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_ENABLE();
9000cebe:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000cec0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
9000cec4:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Enable the PLL3 clock output */
    if (Divider == DIVIDER_P_UPDATE)
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
9000cec6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    if (Divider == DIVIDER_P_UPDATE)
9000cec8:	b1ef      	cbz	r7, 9000cf06 <RCCEx_PLL3_Config+0xe2>
    }
    else if (Divider == DIVIDER_Q_UPDATE)
9000ceca:	2f01      	cmp	r7, #1
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVQ);
9000cecc:	bf0c      	ite	eq
9000cece:	f443 0300 	orreq.w	r3, r3, #8388608	; 0x800000
    }
    else
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVR);
9000ced2:	f043 7380 	orrne.w	r3, r3, #16777216	; 0x1000000
9000ced6:	62e3      	str	r3, [r4, #44]	; 0x2c
    }

    /* Enable  PLL3. */
    __HAL_RCC_PLL3_ENABLE();
9000ced8:	4c0d      	ldr	r4, [pc, #52]	; (9000cf10 <RCCEx_PLL3_Config+0xec>)
9000ceda:	6823      	ldr	r3, [r4, #0]
9000cedc:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
9000cee0:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000cee2:	f7fc f871 	bl	90008fc8 <HAL_GetTick>
9000cee6:	4605      	mov	r5, r0

    /* Wait till PLL3 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
9000cee8:	e004      	b.n	9000cef4 <RCCEx_PLL3_Config+0xd0>
    {
      if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
9000ceea:	f7fc f86d 	bl	90008fc8 <HAL_GetTick>
9000ceee:	1b40      	subs	r0, r0, r5
9000cef0:	2802      	cmp	r0, #2
9000cef2:	d804      	bhi.n	9000cefe <RCCEx_PLL3_Config+0xda>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
9000cef4:	6823      	ldr	r3, [r4, #0]
9000cef6:	009b      	lsls	r3, r3, #2
9000cef8:	d5f7      	bpl.n	9000ceea <RCCEx_PLL3_Config+0xc6>
    }

  }


  return status;
9000cefa:	2000      	movs	r0, #0
}
9000cefc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        return HAL_TIMEOUT;
9000cefe:	2003      	movs	r0, #3
}
9000cf00:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    return HAL_ERROR;
9000cf02:	2001      	movs	r0, #1
}
9000cf04:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
9000cf06:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
9000cf0a:	62e3      	str	r3, [r4, #44]	; 0x2c
9000cf0c:	e7e4      	b.n	9000ced8 <RCCEx_PLL3_Config+0xb4>
9000cf0e:	bf00      	nop
9000cf10:	58024400 	.word	0x58024400
9000cf14:	ffff0007 	.word	0xffff0007

9000cf18 <HAL_RCCEx_PeriphCLKConfig>:
{
9000cf18:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
9000cf1c:	e9d0 3200 	ldrd	r3, r2, [r0]
{
9000cf20:	4604      	mov	r4, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
9000cf22:	011d      	lsls	r5, r3, #4
9000cf24:	f003 6600 	and.w	r6, r3, #134217728	; 0x8000000
9000cf28:	d523      	bpl.n	9000cf72 <HAL_RCCEx_PeriphCLKConfig+0x5a>
    switch (PeriphClkInit->SpdifrxClockSelection)
9000cf2a:	6e81      	ldr	r1, [r0, #104]	; 0x68
9000cf2c:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
9000cf30:	f000 8553 	beq.w	9000d9da <HAL_RCCEx_PeriphCLKConfig+0xac2>
9000cf34:	d812      	bhi.n	9000cf5c <HAL_RCCEx_PeriphCLKConfig+0x44>
9000cf36:	2900      	cmp	r1, #0
9000cf38:	f000 85a9 	beq.w	9000da8e <HAL_RCCEx_PeriphCLKConfig+0xb76>
9000cf3c:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
9000cf40:	f040 85a2 	bne.w	9000da88 <HAL_RCCEx_PeriphCLKConfig+0xb70>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
9000cf44:	2102      	movs	r1, #2
9000cf46:	3008      	adds	r0, #8
9000cf48:	f7ff fef2 	bl	9000cd30 <RCCEx_PLL2_Config>
9000cf4c:	4606      	mov	r6, r0
    if (ret == HAL_OK)
9000cf4e:	2e00      	cmp	r6, #0
9000cf50:	f040 8522 	bne.w	9000d998 <HAL_RCCEx_PeriphCLKConfig+0xa80>
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
9000cf54:	6ea1      	ldr	r1, [r4, #104]	; 0x68
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
9000cf56:	e9d4 3200 	ldrd	r3, r2, [r4]
9000cf5a:	e003      	b.n	9000cf64 <HAL_RCCEx_PeriphCLKConfig+0x4c>
    switch (PeriphClkInit->SpdifrxClockSelection)
9000cf5c:	f5b1 1f40 	cmp.w	r1, #3145728	; 0x300000
9000cf60:	f040 8592 	bne.w	9000da88 <HAL_RCCEx_PeriphCLKConfig+0xb70>
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
9000cf64:	4dae      	ldr	r5, [pc, #696]	; (9000d220 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000cf66:	2600      	movs	r6, #0
9000cf68:	6d28      	ldr	r0, [r5, #80]	; 0x50
9000cf6a:	f420 1040 	bic.w	r0, r0, #3145728	; 0x300000
9000cf6e:	4301      	orrs	r1, r0
9000cf70:	6529      	str	r1, [r5, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
9000cf72:	05d8      	lsls	r0, r3, #23
9000cf74:	d50a      	bpl.n	9000cf8c <HAL_RCCEx_PeriphCLKConfig+0x74>
    switch (PeriphClkInit->Sai1ClockSelection)
9000cf76:	6da1      	ldr	r1, [r4, #88]	; 0x58
9000cf78:	2904      	cmp	r1, #4
9000cf7a:	d806      	bhi.n	9000cf8a <HAL_RCCEx_PeriphCLKConfig+0x72>
9000cf7c:	e8df f011 	tbh	[pc, r1, lsl #1]
9000cf80:	053d0536 	.word	0x053d0536
9000cf84:	0323051a 	.word	0x0323051a
9000cf88:	0323      	.short	0x0323
9000cf8a:	2601      	movs	r6, #1
9000cf8c:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000cf8e:	0599      	lsls	r1, r3, #22
9000cf90:	d51d      	bpl.n	9000cfce <HAL_RCCEx_PeriphCLKConfig+0xb6>
    switch (PeriphClkInit->Sai23ClockSelection)
9000cf92:	6de1      	ldr	r1, [r4, #92]	; 0x5c
9000cf94:	2980      	cmp	r1, #128	; 0x80
9000cf96:	f000 8516 	beq.w	9000d9c6 <HAL_RCCEx_PeriphCLKConfig+0xaae>
9000cf9a:	f200 80f9 	bhi.w	9000d190 <HAL_RCCEx_PeriphCLKConfig+0x278>
9000cf9e:	2900      	cmp	r1, #0
9000cfa0:	f000 8433 	beq.w	9000d80a <HAL_RCCEx_PeriphCLKConfig+0x8f2>
9000cfa4:	2940      	cmp	r1, #64	; 0x40
9000cfa6:	f040 80fa 	bne.w	9000d19e <HAL_RCCEx_PeriphCLKConfig+0x286>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000cfaa:	2100      	movs	r1, #0
9000cfac:	f104 0008 	add.w	r0, r4, #8
9000cfb0:	f7ff febe 	bl	9000cd30 <RCCEx_PLL2_Config>
9000cfb4:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000cfb6:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000cfba:	2d00      	cmp	r5, #0
9000cfbc:	f040 83fe 	bne.w	9000d7bc <HAL_RCCEx_PeriphCLKConfig+0x8a4>
      __HAL_RCC_SAI23_CONFIG(PeriphClkInit->Sai23ClockSelection);
9000cfc0:	4f97      	ldr	r7, [pc, #604]	; (9000d220 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000cfc2:	6de0      	ldr	r0, [r4, #92]	; 0x5c
9000cfc4:	6d39      	ldr	r1, [r7, #80]	; 0x50
9000cfc6:	f421 71e0 	bic.w	r1, r1, #448	; 0x1c0
9000cfca:	4301      	orrs	r1, r0
9000cfcc:	6539      	str	r1, [r7, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000cfce:	055f      	lsls	r7, r3, #21
9000cfd0:	d521      	bpl.n	9000d016 <HAL_RCCEx_PeriphCLKConfig+0xfe>
    switch (PeriphClkInit->Sai4AClockSelection)
9000cfd2:	f8d4 10a8 	ldr.w	r1, [r4, #168]	; 0xa8
9000cfd6:	f5b1 0f80 	cmp.w	r1, #4194304	; 0x400000
9000cfda:	f000 8521 	beq.w	9000da20 <HAL_RCCEx_PeriphCLKConfig+0xb08>
9000cfde:	f200 80e1 	bhi.w	9000d1a4 <HAL_RCCEx_PeriphCLKConfig+0x28c>
9000cfe2:	2900      	cmp	r1, #0
9000cfe4:	f000 8418 	beq.w	9000d818 <HAL_RCCEx_PeriphCLKConfig+0x900>
9000cfe8:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
9000cfec:	f040 80e2 	bne.w	9000d1b4 <HAL_RCCEx_PeriphCLKConfig+0x29c>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000cff0:	2100      	movs	r1, #0
9000cff2:	f104 0008 	add.w	r0, r4, #8
9000cff6:	f7ff fe9b 	bl	9000cd30 <RCCEx_PLL2_Config>
9000cffa:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000cffc:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d000:	2d00      	cmp	r5, #0
9000d002:	f040 83e2 	bne.w	9000d7ca <HAL_RCCEx_PeriphCLKConfig+0x8b2>
      __HAL_RCC_SAI4A_CONFIG(PeriphClkInit->Sai4AClockSelection);
9000d006:	4f86      	ldr	r7, [pc, #536]	; (9000d220 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000d008:	f8d4 00a8 	ldr.w	r0, [r4, #168]	; 0xa8
9000d00c:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000d00e:	f421 0160 	bic.w	r1, r1, #14680064	; 0xe00000
9000d012:	4301      	orrs	r1, r0
9000d014:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000d016:	0518      	lsls	r0, r3, #20
9000d018:	d521      	bpl.n	9000d05e <HAL_RCCEx_PeriphCLKConfig+0x146>
    switch (PeriphClkInit->Sai4BClockSelection)
9000d01a:	f8d4 10ac 	ldr.w	r1, [r4, #172]	; 0xac
9000d01e:	f1b1 7f00 	cmp.w	r1, #33554432	; 0x2000000
9000d022:	f000 84bd 	beq.w	9000d9a0 <HAL_RCCEx_PeriphCLKConfig+0xa88>
9000d026:	f200 80c8 	bhi.w	9000d1ba <HAL_RCCEx_PeriphCLKConfig+0x2a2>
9000d02a:	2900      	cmp	r1, #0
9000d02c:	f000 83e7 	beq.w	9000d7fe <HAL_RCCEx_PeriphCLKConfig+0x8e6>
9000d030:	f1b1 7f80 	cmp.w	r1, #16777216	; 0x1000000
9000d034:	f040 80c9 	bne.w	9000d1ca <HAL_RCCEx_PeriphCLKConfig+0x2b2>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000d038:	2100      	movs	r1, #0
9000d03a:	f104 0008 	add.w	r0, r4, #8
9000d03e:	f7ff fe77 	bl	9000cd30 <RCCEx_PLL2_Config>
9000d042:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000d044:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d048:	2d00      	cmp	r5, #0
9000d04a:	f040 83b5 	bne.w	9000d7b8 <HAL_RCCEx_PeriphCLKConfig+0x8a0>
      __HAL_RCC_SAI4B_CONFIG(PeriphClkInit->Sai4BClockSelection);
9000d04e:	4f74      	ldr	r7, [pc, #464]	; (9000d220 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000d050:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
9000d054:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000d056:	f021 61e0 	bic.w	r1, r1, #117440512	; 0x7000000
9000d05a:	4301      	orrs	r1, r0
9000d05c:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000d05e:	0199      	lsls	r1, r3, #6
9000d060:	d518      	bpl.n	9000d094 <HAL_RCCEx_PeriphCLKConfig+0x17c>
    switch (PeriphClkInit->QspiClockSelection)
9000d062:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
9000d064:	2920      	cmp	r1, #32
9000d066:	f000 841f 	beq.w	9000d8a8 <HAL_RCCEx_PeriphCLKConfig+0x990>
9000d06a:	f200 80b1 	bhi.w	9000d1d0 <HAL_RCCEx_PeriphCLKConfig+0x2b8>
9000d06e:	b139      	cbz	r1, 9000d080 <HAL_RCCEx_PeriphCLKConfig+0x168>
9000d070:	2910      	cmp	r1, #16
9000d072:	f040 80b0 	bne.w	9000d1d6 <HAL_RCCEx_PeriphCLKConfig+0x2be>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000d076:	486a      	ldr	r0, [pc, #424]	; (9000d220 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000d078:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000d07a:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000d07e:	62c1      	str	r1, [r0, #44]	; 0x2c
    if (ret == HAL_OK)
9000d080:	2d00      	cmp	r5, #0
9000d082:	f040 83d8 	bne.w	9000d836 <HAL_RCCEx_PeriphCLKConfig+0x91e>
      __HAL_RCC_QSPI_CONFIG(PeriphClkInit->QspiClockSelection);
9000d086:	4f66      	ldr	r7, [pc, #408]	; (9000d220 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000d088:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
9000d08a:	6cf9      	ldr	r1, [r7, #76]	; 0x4c
9000d08c:	f021 0130 	bic.w	r1, r1, #48	; 0x30
9000d090:	4301      	orrs	r1, r0
9000d092:	64f9      	str	r1, [r7, #76]	; 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI123) == RCC_PERIPHCLK_SPI123)
9000d094:	04df      	lsls	r7, r3, #19
9000d096:	d51f      	bpl.n	9000d0d8 <HAL_RCCEx_PeriphCLKConfig+0x1c0>
    switch (PeriphClkInit->Spi123ClockSelection)
9000d098:	6e21      	ldr	r1, [r4, #96]	; 0x60
9000d09a:	f5b1 5f00 	cmp.w	r1, #8192	; 0x2000
9000d09e:	f000 84b5 	beq.w	9000da0c <HAL_RCCEx_PeriphCLKConfig+0xaf4>
9000d0a2:	f200 809b 	bhi.w	9000d1dc <HAL_RCCEx_PeriphCLKConfig+0x2c4>
9000d0a6:	2900      	cmp	r1, #0
9000d0a8:	f000 83a3 	beq.w	9000d7f2 <HAL_RCCEx_PeriphCLKConfig+0x8da>
9000d0ac:	f5b1 5f80 	cmp.w	r1, #4096	; 0x1000
9000d0b0:	f040 809c 	bne.w	9000d1ec <HAL_RCCEx_PeriphCLKConfig+0x2d4>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000d0b4:	2100      	movs	r1, #0
9000d0b6:	f104 0008 	add.w	r0, r4, #8
9000d0ba:	f7ff fe39 	bl	9000cd30 <RCCEx_PLL2_Config>
9000d0be:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000d0c0:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d0c4:	2d00      	cmp	r5, #0
9000d0c6:	f040 837b 	bne.w	9000d7c0 <HAL_RCCEx_PeriphCLKConfig+0x8a8>
      __HAL_RCC_SPI123_CONFIG(PeriphClkInit->Spi123ClockSelection);
9000d0ca:	4f55      	ldr	r7, [pc, #340]	; (9000d220 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000d0cc:	6e20      	ldr	r0, [r4, #96]	; 0x60
9000d0ce:	6d39      	ldr	r1, [r7, #80]	; 0x50
9000d0d0:	f421 41e0 	bic.w	r1, r1, #28672	; 0x7000
9000d0d4:	4301      	orrs	r1, r0
9000d0d6:	6539      	str	r1, [r7, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000d0d8:	0498      	lsls	r0, r3, #18
9000d0da:	d51d      	bpl.n	9000d118 <HAL_RCCEx_PeriphCLKConfig+0x200>
    switch (PeriphClkInit->Spi45ClockSelection)
9000d0dc:	6e61      	ldr	r1, [r4, #100]	; 0x64
9000d0de:	f5b1 3f00 	cmp.w	r1, #131072	; 0x20000
9000d0e2:	f000 8410 	beq.w	9000d906 <HAL_RCCEx_PeriphCLKConfig+0x9ee>
9000d0e6:	f200 8084 	bhi.w	9000d1f2 <HAL_RCCEx_PeriphCLKConfig+0x2da>
9000d0ea:	b159      	cbz	r1, 9000d104 <HAL_RCCEx_PeriphCLKConfig+0x1ec>
9000d0ec:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
9000d0f0:	f040 8087 	bne.w	9000d202 <HAL_RCCEx_PeriphCLKConfig+0x2ea>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000d0f4:	2101      	movs	r1, #1
9000d0f6:	f104 0008 	add.w	r0, r4, #8
9000d0fa:	f7ff fe19 	bl	9000cd30 <RCCEx_PLL2_Config>
9000d0fe:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000d100:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d104:	2d00      	cmp	r5, #0
9000d106:	f040 839a 	bne.w	9000d83e <HAL_RCCEx_PeriphCLKConfig+0x926>
      __HAL_RCC_SPI45_CONFIG(PeriphClkInit->Spi45ClockSelection);
9000d10a:	4f45      	ldr	r7, [pc, #276]	; (9000d220 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000d10c:	6e60      	ldr	r0, [r4, #100]	; 0x64
9000d10e:	6d39      	ldr	r1, [r7, #80]	; 0x50
9000d110:	f421 21e0 	bic.w	r1, r1, #458752	; 0x70000
9000d114:	4301      	orrs	r1, r0
9000d116:	6539      	str	r1, [r7, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000d118:	0459      	lsls	r1, r3, #17
9000d11a:	d51d      	bpl.n	9000d158 <HAL_RCCEx_PeriphCLKConfig+0x240>
    switch (PeriphClkInit->Spi6ClockSelection)
9000d11c:	f8d4 10b0 	ldr.w	r1, [r4, #176]	; 0xb0
9000d120:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
9000d124:	f000 83fb 	beq.w	9000d91e <HAL_RCCEx_PeriphCLKConfig+0xa06>
9000d128:	d86e      	bhi.n	9000d208 <HAL_RCCEx_PeriphCLKConfig+0x2f0>
9000d12a:	b151      	cbz	r1, 9000d142 <HAL_RCCEx_PeriphCLKConfig+0x22a>
9000d12c:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
9000d130:	d172      	bne.n	9000d218 <HAL_RCCEx_PeriphCLKConfig+0x300>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000d132:	2101      	movs	r1, #1
9000d134:	f104 0008 	add.w	r0, r4, #8
9000d138:	f7ff fdfa 	bl	9000cd30 <RCCEx_PLL2_Config>
9000d13c:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000d13e:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d142:	2d00      	cmp	r5, #0
9000d144:	f040 837f 	bne.w	9000d846 <HAL_RCCEx_PeriphCLKConfig+0x92e>
      __HAL_RCC_SPI6_CONFIG(PeriphClkInit->Spi6ClockSelection);
9000d148:	4f35      	ldr	r7, [pc, #212]	; (9000d220 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000d14a:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
9000d14e:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000d150:	f021 41e0 	bic.w	r1, r1, #1879048192	; 0x70000000
9000d154:	4301      	orrs	r1, r0
9000d156:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000d158:	041f      	lsls	r7, r3, #16
9000d15a:	d50d      	bpl.n	9000d178 <HAL_RCCEx_PeriphCLKConfig+0x260>
    switch (PeriphClkInit->FdcanClockSelection)
9000d15c:	6f21      	ldr	r1, [r4, #112]	; 0x70
9000d15e:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
9000d162:	f000 83c8 	beq.w	9000d8f6 <HAL_RCCEx_PeriphCLKConfig+0x9de>
9000d166:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
9000d16a:	f000 823b 	beq.w	9000d5e4 <HAL_RCCEx_PeriphCLKConfig+0x6cc>
9000d16e:	2900      	cmp	r1, #0
9000d170:	f000 8240 	beq.w	9000d5f4 <HAL_RCCEx_PeriphCLKConfig+0x6dc>
9000d174:	2601      	movs	r6, #1
9000d176:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FMC) == RCC_PERIPHCLK_FMC)
9000d178:	01d8      	lsls	r0, r3, #7
9000d17a:	d562      	bpl.n	9000d242 <HAL_RCCEx_PeriphCLKConfig+0x32a>
    switch (PeriphClkInit->FmcClockSelection)
9000d17c:	6ca1      	ldr	r1, [r4, #72]	; 0x48
9000d17e:	2903      	cmp	r1, #3
9000d180:	f200 84bf 	bhi.w	9000db02 <HAL_RCCEx_PeriphCLKConfig+0xbea>
9000d184:	e8df f011 	tbh	[pc, r1, lsl #1]
9000d188:	004e0053 	.word	0x004e0053
9000d18c:	005303e2 	.word	0x005303e2
    switch (PeriphClkInit->Sai23ClockSelection)
9000d190:	29c0      	cmp	r1, #192	; 0xc0
9000d192:	f43f af12 	beq.w	9000cfba <HAL_RCCEx_PeriphCLKConfig+0xa2>
9000d196:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
9000d19a:	f43f af0e 	beq.w	9000cfba <HAL_RCCEx_PeriphCLKConfig+0xa2>
9000d19e:	2601      	movs	r6, #1
9000d1a0:	4635      	mov	r5, r6
9000d1a2:	e714      	b.n	9000cfce <HAL_RCCEx_PeriphCLKConfig+0xb6>
    switch (PeriphClkInit->Sai4AClockSelection)
9000d1a4:	f5b1 0fc0 	cmp.w	r1, #6291456	; 0x600000
9000d1a8:	f43f af2a 	beq.w	9000d000 <HAL_RCCEx_PeriphCLKConfig+0xe8>
9000d1ac:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
9000d1b0:	f43f af26 	beq.w	9000d000 <HAL_RCCEx_PeriphCLKConfig+0xe8>
9000d1b4:	2601      	movs	r6, #1
9000d1b6:	4635      	mov	r5, r6
9000d1b8:	e72d      	b.n	9000d016 <HAL_RCCEx_PeriphCLKConfig+0xfe>
    switch (PeriphClkInit->Sai4BClockSelection)
9000d1ba:	f1b1 7f40 	cmp.w	r1, #50331648	; 0x3000000
9000d1be:	f43f af43 	beq.w	9000d048 <HAL_RCCEx_PeriphCLKConfig+0x130>
9000d1c2:	f1b1 6f80 	cmp.w	r1, #67108864	; 0x4000000
9000d1c6:	f43f af3f 	beq.w	9000d048 <HAL_RCCEx_PeriphCLKConfig+0x130>
9000d1ca:	2601      	movs	r6, #1
9000d1cc:	4635      	mov	r5, r6
9000d1ce:	e746      	b.n	9000d05e <HAL_RCCEx_PeriphCLKConfig+0x146>
    switch (PeriphClkInit->QspiClockSelection)
9000d1d0:	2930      	cmp	r1, #48	; 0x30
9000d1d2:	f43f af55 	beq.w	9000d080 <HAL_RCCEx_PeriphCLKConfig+0x168>
9000d1d6:	2601      	movs	r6, #1
9000d1d8:	4635      	mov	r5, r6
9000d1da:	e75b      	b.n	9000d094 <HAL_RCCEx_PeriphCLKConfig+0x17c>
    switch (PeriphClkInit->Spi123ClockSelection)
9000d1dc:	f5b1 5f40 	cmp.w	r1, #12288	; 0x3000
9000d1e0:	f43f af70 	beq.w	9000d0c4 <HAL_RCCEx_PeriphCLKConfig+0x1ac>
9000d1e4:	f5b1 4f80 	cmp.w	r1, #16384	; 0x4000
9000d1e8:	f43f af6c 	beq.w	9000d0c4 <HAL_RCCEx_PeriphCLKConfig+0x1ac>
9000d1ec:	2601      	movs	r6, #1
9000d1ee:	4635      	mov	r5, r6
9000d1f0:	e772      	b.n	9000d0d8 <HAL_RCCEx_PeriphCLKConfig+0x1c0>
    switch (PeriphClkInit->Spi45ClockSelection)
9000d1f2:	f421 3080 	bic.w	r0, r1, #65536	; 0x10000
9000d1f6:	f5b0 2f80 	cmp.w	r0, #262144	; 0x40000
9000d1fa:	d083      	beq.n	9000d104 <HAL_RCCEx_PeriphCLKConfig+0x1ec>
9000d1fc:	f5b1 3f40 	cmp.w	r1, #196608	; 0x30000
9000d200:	d080      	beq.n	9000d104 <HAL_RCCEx_PeriphCLKConfig+0x1ec>
9000d202:	2601      	movs	r6, #1
9000d204:	4635      	mov	r5, r6
9000d206:	e787      	b.n	9000d118 <HAL_RCCEx_PeriphCLKConfig+0x200>
    switch (PeriphClkInit->Spi6ClockSelection)
9000d208:	f021 5080 	bic.w	r0, r1, #268435456	; 0x10000000
9000d20c:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
9000d210:	d097      	beq.n	9000d142 <HAL_RCCEx_PeriphCLKConfig+0x22a>
9000d212:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
9000d216:	d094      	beq.n	9000d142 <HAL_RCCEx_PeriphCLKConfig+0x22a>
9000d218:	2601      	movs	r6, #1
9000d21a:	4635      	mov	r5, r6
9000d21c:	e79c      	b.n	9000d158 <HAL_RCCEx_PeriphCLKConfig+0x240>
9000d21e:	bf00      	nop
9000d220:	58024400 	.word	0x58024400
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000d224:	4839      	ldr	r0, [pc, #228]	; (9000d30c <HAL_RCCEx_PeriphCLKConfig+0x3f4>)
9000d226:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000d228:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000d22c:	62c1      	str	r1, [r0, #44]	; 0x2c
    if (ret == HAL_OK)
9000d22e:	2d00      	cmp	r5, #0
9000d230:	f040 8303 	bne.w	9000d83a <HAL_RCCEx_PeriphCLKConfig+0x922>
      __HAL_RCC_FMC_CONFIG(PeriphClkInit->FmcClockSelection);
9000d234:	4f35      	ldr	r7, [pc, #212]	; (9000d30c <HAL_RCCEx_PeriphCLKConfig+0x3f4>)
9000d236:	6ca0      	ldr	r0, [r4, #72]	; 0x48
9000d238:	6cf9      	ldr	r1, [r7, #76]	; 0x4c
9000d23a:	f021 0103 	bic.w	r1, r1, #3
9000d23e:	4301      	orrs	r1, r0
9000d240:	64f9      	str	r1, [r7, #76]	; 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
9000d242:	0259      	lsls	r1, r3, #9
9000d244:	f100 826a 	bmi.w	9000d71c <HAL_RCCEx_PeriphCLKConfig+0x804>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000d248:	07d8      	lsls	r0, r3, #31
9000d24a:	d52f      	bpl.n	9000d2ac <HAL_RCCEx_PeriphCLKConfig+0x394>
    switch (PeriphClkInit->Usart16ClockSelection)
9000d24c:	6fe1      	ldr	r1, [r4, #124]	; 0x7c
9000d24e:	2928      	cmp	r1, #40	; 0x28
9000d250:	d82a      	bhi.n	9000d2a8 <HAL_RCCEx_PeriphCLKConfig+0x390>
9000d252:	e8df f011 	tbh	[pc, r1, lsl #1]
9000d256:	020a      	.short	0x020a
9000d258:	00290029 	.word	0x00290029
9000d25c:	00290029 	.word	0x00290029
9000d260:	00290029 	.word	0x00290029
9000d264:	02020029 	.word	0x02020029
9000d268:	00290029 	.word	0x00290029
9000d26c:	00290029 	.word	0x00290029
9000d270:	00290029 	.word	0x00290029
9000d274:	04070029 	.word	0x04070029
9000d278:	00290029 	.word	0x00290029
9000d27c:	00290029 	.word	0x00290029
9000d280:	00290029 	.word	0x00290029
9000d284:	020a0029 	.word	0x020a0029
9000d288:	00290029 	.word	0x00290029
9000d28c:	00290029 	.word	0x00290029
9000d290:	00290029 	.word	0x00290029
9000d294:	020a0029 	.word	0x020a0029
9000d298:	00290029 	.word	0x00290029
9000d29c:	00290029 	.word	0x00290029
9000d2a0:	00290029 	.word	0x00290029
9000d2a4:	020a0029 	.word	0x020a0029
9000d2a8:	2601      	movs	r6, #1
9000d2aa:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000d2ac:	0799      	lsls	r1, r3, #30
9000d2ae:	d51d      	bpl.n	9000d2ec <HAL_RCCEx_PeriphCLKConfig+0x3d4>
    switch (PeriphClkInit->Usart234578ClockSelection)
9000d2b0:	6fa1      	ldr	r1, [r4, #120]	; 0x78
9000d2b2:	2905      	cmp	r1, #5
9000d2b4:	f200 8421 	bhi.w	9000dafa <HAL_RCCEx_PeriphCLKConfig+0xbe2>
9000d2b8:	e8df f011 	tbh	[pc, r1, lsl #1]
9000d2bc:	0006000e 	.word	0x0006000e
9000d2c0:	000e03c8 	.word	0x000e03c8
9000d2c4:	000e000e 	.word	0x000e000e
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000d2c8:	2101      	movs	r1, #1
9000d2ca:	f104 0008 	add.w	r0, r4, #8
9000d2ce:	f7ff fd2f 	bl	9000cd30 <RCCEx_PLL2_Config>
9000d2d2:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000d2d4:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d2d8:	2d00      	cmp	r5, #0
9000d2da:	f040 82b8 	bne.w	9000d84e <HAL_RCCEx_PeriphCLKConfig+0x936>
      __HAL_RCC_USART234578_CONFIG(PeriphClkInit->Usart234578ClockSelection);
9000d2de:	4f0b      	ldr	r7, [pc, #44]	; (9000d30c <HAL_RCCEx_PeriphCLKConfig+0x3f4>)
9000d2e0:	6fa0      	ldr	r0, [r4, #120]	; 0x78
9000d2e2:	6d79      	ldr	r1, [r7, #84]	; 0x54
9000d2e4:	f021 0107 	bic.w	r1, r1, #7
9000d2e8:	4301      	orrs	r1, r0
9000d2ea:	6579      	str	r1, [r7, #84]	; 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000d2ec:	075f      	lsls	r7, r3, #29
9000d2ee:	d522      	bpl.n	9000d336 <HAL_RCCEx_PeriphCLKConfig+0x41e>
    switch (PeriphClkInit->Lpuart1ClockSelection)
9000d2f0:	f8d4 1094 	ldr.w	r1, [r4, #148]	; 0x94
9000d2f4:	2905      	cmp	r1, #5
9000d2f6:	f200 8408 	bhi.w	9000db0a <HAL_RCCEx_PeriphCLKConfig+0xbf2>
9000d2fa:	e8df f011 	tbh	[pc, r1, lsl #1]
9000d2fe:	0011      	.short	0x0011
9000d300:	039b0009 	.word	0x039b0009
9000d304:	00110011 	.word	0x00110011
9000d308:	0011      	.short	0x0011
9000d30a:	bf00      	nop
9000d30c:	58024400 	.word	0x58024400
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000d310:	2101      	movs	r1, #1
9000d312:	f104 0008 	add.w	r0, r4, #8
9000d316:	f7ff fd0b 	bl	9000cd30 <RCCEx_PLL2_Config>
9000d31a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000d31c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d320:	2d00      	cmp	r5, #0
9000d322:	f040 8286 	bne.w	9000d832 <HAL_RCCEx_PeriphCLKConfig+0x91a>
      __HAL_RCC_LPUART1_CONFIG(PeriphClkInit->Lpuart1ClockSelection);
9000d326:	4fae      	ldr	r7, [pc, #696]	; (9000d5e0 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000d328:	f8d4 0094 	ldr.w	r0, [r4, #148]	; 0x94
9000d32c:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000d32e:	f021 0107 	bic.w	r1, r1, #7
9000d332:	4301      	orrs	r1, r0
9000d334:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000d336:	0698      	lsls	r0, r3, #26
9000d338:	d51f      	bpl.n	9000d37a <HAL_RCCEx_PeriphCLKConfig+0x462>
    switch (PeriphClkInit->Lptim1ClockSelection)
9000d33a:	f8d4 1090 	ldr.w	r1, [r4, #144]	; 0x90
9000d33e:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
9000d342:	f000 82f7 	beq.w	9000d934 <HAL_RCCEx_PeriphCLKConfig+0xa1c>
9000d346:	f200 810b 	bhi.w	9000d560 <HAL_RCCEx_PeriphCLKConfig+0x648>
9000d34a:	b159      	cbz	r1, 9000d364 <HAL_RCCEx_PeriphCLKConfig+0x44c>
9000d34c:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
9000d350:	f040 8110 	bne.w	9000d574 <HAL_RCCEx_PeriphCLKConfig+0x65c>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000d354:	2100      	movs	r1, #0
9000d356:	f104 0008 	add.w	r0, r4, #8
9000d35a:	f7ff fce9 	bl	9000cd30 <RCCEx_PLL2_Config>
9000d35e:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000d360:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d364:	2d00      	cmp	r5, #0
9000d366:	f040 8260 	bne.w	9000d82a <HAL_RCCEx_PeriphCLKConfig+0x912>
      __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
9000d36a:	4f9d      	ldr	r7, [pc, #628]	; (9000d5e0 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000d36c:	f8d4 0090 	ldr.w	r0, [r4, #144]	; 0x90
9000d370:	6d79      	ldr	r1, [r7, #84]	; 0x54
9000d372:	f021 41e0 	bic.w	r1, r1, #1879048192	; 0x70000000
9000d376:	4301      	orrs	r1, r0
9000d378:	6579      	str	r1, [r7, #84]	; 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000d37a:	0659      	lsls	r1, r3, #25
9000d37c:	d51f      	bpl.n	9000d3be <HAL_RCCEx_PeriphCLKConfig+0x4a6>
    switch (PeriphClkInit->Lptim2ClockSelection)
9000d37e:	f8d4 109c 	ldr.w	r1, [r4, #156]	; 0x9c
9000d382:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
9000d386:	f000 829b 	beq.w	9000d8c0 <HAL_RCCEx_PeriphCLKConfig+0x9a8>
9000d38a:	f200 80f6 	bhi.w	9000d57a <HAL_RCCEx_PeriphCLKConfig+0x662>
9000d38e:	b159      	cbz	r1, 9000d3a8 <HAL_RCCEx_PeriphCLKConfig+0x490>
9000d390:	f5b1 6f80 	cmp.w	r1, #1024	; 0x400
9000d394:	f040 80fb 	bne.w	9000d58e <HAL_RCCEx_PeriphCLKConfig+0x676>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000d398:	2100      	movs	r1, #0
9000d39a:	f104 0008 	add.w	r0, r4, #8
9000d39e:	f7ff fcc7 	bl	9000cd30 <RCCEx_PLL2_Config>
9000d3a2:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000d3a4:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d3a8:	2d00      	cmp	r5, #0
9000d3aa:	f040 824e 	bne.w	9000d84a <HAL_RCCEx_PeriphCLKConfig+0x932>
      __HAL_RCC_LPTIM2_CONFIG(PeriphClkInit->Lptim2ClockSelection);
9000d3ae:	4f8c      	ldr	r7, [pc, #560]	; (9000d5e0 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000d3b0:	f8d4 009c 	ldr.w	r0, [r4, #156]	; 0x9c
9000d3b4:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000d3b6:	f421 51e0 	bic.w	r1, r1, #7168	; 0x1c00
9000d3ba:	4301      	orrs	r1, r0
9000d3bc:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000d3be:	061f      	lsls	r7, r3, #24
9000d3c0:	d51f      	bpl.n	9000d402 <HAL_RCCEx_PeriphCLKConfig+0x4ea>
    switch (PeriphClkInit->Lptim345ClockSelection)
9000d3c2:	f8d4 10a0 	ldr.w	r1, [r4, #160]	; 0xa0
9000d3c6:	f5b1 4f80 	cmp.w	r1, #16384	; 0x4000
9000d3ca:	f000 8289 	beq.w	9000d8e0 <HAL_RCCEx_PeriphCLKConfig+0x9c8>
9000d3ce:	f200 80e1 	bhi.w	9000d594 <HAL_RCCEx_PeriphCLKConfig+0x67c>
9000d3d2:	b159      	cbz	r1, 9000d3ec <HAL_RCCEx_PeriphCLKConfig+0x4d4>
9000d3d4:	f5b1 5f00 	cmp.w	r1, #8192	; 0x2000
9000d3d8:	f040 80e6 	bne.w	9000d5a8 <HAL_RCCEx_PeriphCLKConfig+0x690>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000d3dc:	2100      	movs	r1, #0
9000d3de:	f104 0008 	add.w	r0, r4, #8
9000d3e2:	f7ff fca5 	bl	9000cd30 <RCCEx_PLL2_Config>
9000d3e6:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000d3e8:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d3ec:	2d00      	cmp	r5, #0
9000d3ee:	f040 8228 	bne.w	9000d842 <HAL_RCCEx_PeriphCLKConfig+0x92a>
      __HAL_RCC_LPTIM345_CONFIG(PeriphClkInit->Lptim345ClockSelection);
9000d3f2:	4f7b      	ldr	r7, [pc, #492]	; (9000d5e0 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000d3f4:	f8d4 00a0 	ldr.w	r0, [r4, #160]	; 0xa0
9000d3f8:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000d3fa:	f421 4160 	bic.w	r1, r1, #57344	; 0xe000
9000d3fe:	4301      	orrs	r1, r0
9000d400:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000d402:	0718      	lsls	r0, r3, #28
9000d404:	d50b      	bpl.n	9000d41e <HAL_RCCEx_PeriphCLKConfig+0x506>
    if ((PeriphClkInit->I2c123ClockSelection) == RCC_I2C123CLKSOURCE_PLL3)
9000d406:	f8d4 0084 	ldr.w	r0, [r4, #132]	; 0x84
9000d40a:	f5b0 5f80 	cmp.w	r0, #4096	; 0x1000
9000d40e:	f000 82a9 	beq.w	9000d964 <HAL_RCCEx_PeriphCLKConfig+0xa4c>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000d412:	4f73      	ldr	r7, [pc, #460]	; (9000d5e0 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000d414:	6d79      	ldr	r1, [r7, #84]	; 0x54
9000d416:	f421 5140 	bic.w	r1, r1, #12288	; 0x3000
9000d41a:	4301      	orrs	r1, r0
9000d41c:	6579      	str	r1, [r7, #84]	; 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000d41e:	06d9      	lsls	r1, r3, #27
9000d420:	d50b      	bpl.n	9000d43a <HAL_RCCEx_PeriphCLKConfig+0x522>
    if ((PeriphClkInit->I2c4ClockSelection) == RCC_I2C4CLKSOURCE_PLL3)
9000d422:	f8d4 0098 	ldr.w	r0, [r4, #152]	; 0x98
9000d426:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
9000d42a:	f000 82a8 	beq.w	9000d97e <HAL_RCCEx_PeriphCLKConfig+0xa66>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000d42e:	4f6c      	ldr	r7, [pc, #432]	; (9000d5e0 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000d430:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000d432:	f421 7140 	bic.w	r1, r1, #768	; 0x300
9000d436:	4301      	orrs	r1, r0
9000d438:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000d43a:	031f      	lsls	r7, r3, #12
9000d43c:	d50e      	bpl.n	9000d45c <HAL_RCCEx_PeriphCLKConfig+0x544>
    switch (PeriphClkInit->AdcClockSelection)
9000d43e:	f8d4 10a4 	ldr.w	r1, [r4, #164]	; 0xa4
9000d442:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
9000d446:	f000 80f4 	beq.w	9000d632 <HAL_RCCEx_PeriphCLKConfig+0x71a>
9000d44a:	f5b1 3f00 	cmp.w	r1, #131072	; 0x20000
9000d44e:	f000 80f8 	beq.w	9000d642 <HAL_RCCEx_PeriphCLKConfig+0x72a>
9000d452:	2900      	cmp	r1, #0
9000d454:	f000 821c 	beq.w	9000d890 <HAL_RCCEx_PeriphCLKConfig+0x978>
9000d458:	2601      	movs	r6, #1
9000d45a:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000d45c:	0358      	lsls	r0, r3, #13
9000d45e:	d50f      	bpl.n	9000d480 <HAL_RCCEx_PeriphCLKConfig+0x568>
    switch (PeriphClkInit->UsbClockSelection)
9000d460:	f8d4 1088 	ldr.w	r1, [r4, #136]	; 0x88
9000d464:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
9000d468:	f000 80cf 	beq.w	9000d60a <HAL_RCCEx_PeriphCLKConfig+0x6f2>
9000d46c:	f5b1 1f40 	cmp.w	r1, #3145728	; 0x300000
9000d470:	f000 80d3 	beq.w	9000d61a <HAL_RCCEx_PeriphCLKConfig+0x702>
9000d474:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
9000d478:	f000 8202 	beq.w	9000d880 <HAL_RCCEx_PeriphCLKConfig+0x968>
9000d47c:	2601      	movs	r6, #1
9000d47e:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == RCC_PERIPHCLK_SDMMC)
9000d480:	03d9      	lsls	r1, r3, #15
9000d482:	d509      	bpl.n	9000d498 <HAL_RCCEx_PeriphCLKConfig+0x580>
    switch (PeriphClkInit->SdmmcClockSelection)
9000d484:	6d21      	ldr	r1, [r4, #80]	; 0x50
9000d486:	2900      	cmp	r1, #0
9000d488:	f000 81f1 	beq.w	9000d86e <HAL_RCCEx_PeriphCLKConfig+0x956>
9000d48c:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
9000d490:	f000 819d 	beq.w	9000d7ce <HAL_RCCEx_PeriphCLKConfig+0x8b6>
9000d494:	2601      	movs	r6, #1
9000d496:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
9000d498:	009f      	lsls	r7, r3, #2
9000d49a:	f100 80f1 	bmi.w	9000d680 <HAL_RCCEx_PeriphCLKConfig+0x768>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
9000d49e:	0398      	lsls	r0, r3, #14
9000d4a0:	d50c      	bpl.n	9000d4bc <HAL_RCCEx_PeriphCLKConfig+0x5a4>
    switch (PeriphClkInit->RngClockSelection)
9000d4a2:	f8d4 1080 	ldr.w	r1, [r4, #128]	; 0x80
9000d4a6:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
9000d4aa:	f000 81d8 	beq.w	9000d85e <HAL_RCCEx_PeriphCLKConfig+0x946>
9000d4ae:	d97e      	bls.n	9000d5ae <HAL_RCCEx_PeriphCLKConfig+0x696>
9000d4b0:	f421 7080 	bic.w	r0, r1, #256	; 0x100
9000d4b4:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
9000d4b8:	d07b      	beq.n	9000d5b2 <HAL_RCCEx_PeriphCLKConfig+0x69a>
9000d4ba:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SWPMI1) == RCC_PERIPHCLK_SWPMI1)
9000d4bc:	02d9      	lsls	r1, r3, #11
9000d4be:	d506      	bpl.n	9000d4ce <HAL_RCCEx_PeriphCLKConfig+0x5b6>
    __HAL_RCC_SWPMI1_CONFIG(PeriphClkInit->Swpmi1ClockSelection);
9000d4c0:	4847      	ldr	r0, [pc, #284]	; (9000d5e0 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000d4c2:	6f65      	ldr	r5, [r4, #116]	; 0x74
9000d4c4:	6d01      	ldr	r1, [r0, #80]	; 0x50
9000d4c6:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
9000d4ca:	4329      	orrs	r1, r5
9000d4cc:	6501      	str	r1, [r0, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_HRTIM1) == RCC_PERIPHCLK_HRTIM1)
9000d4ce:	00df      	lsls	r7, r3, #3
9000d4d0:	d507      	bpl.n	9000d4e2 <HAL_RCCEx_PeriphCLKConfig+0x5ca>
    __HAL_RCC_HRTIM1_CONFIG(PeriphClkInit->Hrtim1ClockSelection);
9000d4d2:	4843      	ldr	r0, [pc, #268]	; (9000d5e0 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000d4d4:	f8d4 50b8 	ldr.w	r5, [r4, #184]	; 0xb8
9000d4d8:	6901      	ldr	r1, [r0, #16]
9000d4da:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
9000d4de:	4329      	orrs	r1, r5
9000d4e0:	6101      	str	r1, [r0, #16]
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DFSDM1) == RCC_PERIPHCLK_DFSDM1)
9000d4e2:	029d      	lsls	r5, r3, #10
9000d4e4:	d506      	bpl.n	9000d4f4 <HAL_RCCEx_PeriphCLKConfig+0x5dc>
    __HAL_RCC_DFSDM1_CONFIG(PeriphClkInit->Dfsdm1ClockSelection);
9000d4e6:	483e      	ldr	r0, [pc, #248]	; (9000d5e0 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000d4e8:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
9000d4ea:	6d01      	ldr	r1, [r0, #80]	; 0x50
9000d4ec:	f021 7180 	bic.w	r1, r1, #16777216	; 0x1000000
9000d4f0:	4329      	orrs	r1, r5
9000d4f2:	6501      	str	r1, [r0, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == RCC_PERIPHCLK_TIM)
9000d4f4:	0058      	lsls	r0, r3, #1
9000d4f6:	d509      	bpl.n	9000d50c <HAL_RCCEx_PeriphCLKConfig+0x5f4>
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
9000d4f8:	4939      	ldr	r1, [pc, #228]	; (9000d5e0 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000d4fa:	6908      	ldr	r0, [r1, #16]
9000d4fc:	f420 4000 	bic.w	r0, r0, #32768	; 0x8000
9000d500:	6108      	str	r0, [r1, #16]
9000d502:	6908      	ldr	r0, [r1, #16]
9000d504:	f8d4 50bc 	ldr.w	r5, [r4, #188]	; 0xbc
9000d508:	4328      	orrs	r0, r5
9000d50a:	6108      	str	r0, [r1, #16]
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CKPER) == RCC_PERIPHCLK_CKPER)
9000d50c:	2b00      	cmp	r3, #0
9000d50e:	da06      	bge.n	9000d51e <HAL_RCCEx_PeriphCLKConfig+0x606>
    __HAL_RCC_CLKP_CONFIG(PeriphClkInit->CkperClockSelection);
9000d510:	4833      	ldr	r0, [pc, #204]	; (9000d5e0 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000d512:	6d65      	ldr	r5, [r4, #84]	; 0x54
9000d514:	6cc1      	ldr	r1, [r0, #76]	; 0x4c
9000d516:	f021 5140 	bic.w	r1, r1, #805306368	; 0x30000000
9000d51a:	4329      	orrs	r1, r5
9000d51c:	64c1      	str	r1, [r0, #76]	; 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
9000d51e:	0219      	lsls	r1, r3, #8
9000d520:	d507      	bpl.n	9000d532 <HAL_RCCEx_PeriphCLKConfig+0x61a>
    __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
9000d522:	492f      	ldr	r1, [pc, #188]	; (9000d5e0 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000d524:	f8d4 008c 	ldr.w	r0, [r4, #140]	; 0x8c
9000d528:	6d4b      	ldr	r3, [r1, #84]	; 0x54
9000d52a:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
9000d52e:	4303      	orrs	r3, r0
9000d530:	654b      	str	r3, [r1, #84]	; 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVP) == RCC_PERIPHCLK_PLL2_DIVP)
9000d532:	07d3      	lsls	r3, r2, #31
9000d534:	f100 80b0 	bmi.w	9000d698 <HAL_RCCEx_PeriphCLKConfig+0x780>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
9000d538:	0797      	lsls	r7, r2, #30
9000d53a:	f100 80ba 	bmi.w	9000d6b2 <HAL_RCCEx_PeriphCLKConfig+0x79a>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
9000d53e:	0755      	lsls	r5, r2, #29
9000d540:	f100 80c4 	bmi.w	9000d6cc <HAL_RCCEx_PeriphCLKConfig+0x7b4>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
9000d544:	0710      	lsls	r0, r2, #28
9000d546:	f100 80ce 	bmi.w	9000d6e6 <HAL_RCCEx_PeriphCLKConfig+0x7ce>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
9000d54a:	06d1      	lsls	r1, r2, #27
9000d54c:	f100 80d8 	bmi.w	9000d700 <HAL_RCCEx_PeriphCLKConfig+0x7e8>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000d550:	0692      	lsls	r2, r2, #26
9000d552:	f100 8125 	bmi.w	9000d7a0 <HAL_RCCEx_PeriphCLKConfig+0x888>
    return HAL_OK;
9000d556:	1e30      	subs	r0, r6, #0
9000d558:	bf18      	it	ne
9000d55a:	2001      	movne	r0, #1
}
9000d55c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    switch (PeriphClkInit->Lptim1ClockSelection)
9000d560:	f021 5080 	bic.w	r0, r1, #268435456	; 0x10000000
9000d564:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
9000d568:	f43f aefc 	beq.w	9000d364 <HAL_RCCEx_PeriphCLKConfig+0x44c>
9000d56c:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
9000d570:	f43f aef8 	beq.w	9000d364 <HAL_RCCEx_PeriphCLKConfig+0x44c>
9000d574:	2601      	movs	r6, #1
9000d576:	4635      	mov	r5, r6
9000d578:	e6ff      	b.n	9000d37a <HAL_RCCEx_PeriphCLKConfig+0x462>
    switch (PeriphClkInit->Lptim2ClockSelection)
9000d57a:	f421 6080 	bic.w	r0, r1, #1024	; 0x400
9000d57e:	f5b0 5f80 	cmp.w	r0, #4096	; 0x1000
9000d582:	f43f af11 	beq.w	9000d3a8 <HAL_RCCEx_PeriphCLKConfig+0x490>
9000d586:	f5b1 6f40 	cmp.w	r1, #3072	; 0xc00
9000d58a:	f43f af0d 	beq.w	9000d3a8 <HAL_RCCEx_PeriphCLKConfig+0x490>
9000d58e:	2601      	movs	r6, #1
9000d590:	4635      	mov	r5, r6
9000d592:	e714      	b.n	9000d3be <HAL_RCCEx_PeriphCLKConfig+0x4a6>
    switch (PeriphClkInit->Lptim345ClockSelection)
9000d594:	f421 5000 	bic.w	r0, r1, #8192	; 0x2000
9000d598:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
9000d59c:	f43f af26 	beq.w	9000d3ec <HAL_RCCEx_PeriphCLKConfig+0x4d4>
9000d5a0:	f5b1 4fc0 	cmp.w	r1, #24576	; 0x6000
9000d5a4:	f43f af22 	beq.w	9000d3ec <HAL_RCCEx_PeriphCLKConfig+0x4d4>
9000d5a8:	2601      	movs	r6, #1
9000d5aa:	4635      	mov	r5, r6
9000d5ac:	e729      	b.n	9000d402 <HAL_RCCEx_PeriphCLKConfig+0x4ea>
    switch (PeriphClkInit->RngClockSelection)
9000d5ae:	2900      	cmp	r1, #0
9000d5b0:	d183      	bne.n	9000d4ba <HAL_RCCEx_PeriphCLKConfig+0x5a2>
    if (ret == HAL_OK)
9000d5b2:	2d00      	cmp	r5, #0
9000d5b4:	f040 8151 	bne.w	9000d85a <HAL_RCCEx_PeriphCLKConfig+0x942>
      __HAL_RCC_RNG_CONFIG(PeriphClkInit->RngClockSelection);
9000d5b8:	4d09      	ldr	r5, [pc, #36]	; (9000d5e0 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000d5ba:	6d68      	ldr	r0, [r5, #84]	; 0x54
9000d5bc:	f420 7040 	bic.w	r0, r0, #768	; 0x300
9000d5c0:	4301      	orrs	r1, r0
9000d5c2:	6569      	str	r1, [r5, #84]	; 0x54
9000d5c4:	e77a      	b.n	9000d4bc <HAL_RCCEx_PeriphCLKConfig+0x5a4>
    switch (PeriphClkInit->Sai1ClockSelection)
9000d5c6:	4635      	mov	r5, r6
    if (ret == HAL_OK)
9000d5c8:	2d00      	cmp	r5, #0
9000d5ca:	f040 80fb 	bne.w	9000d7c4 <HAL_RCCEx_PeriphCLKConfig+0x8ac>
      __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
9000d5ce:	4f04      	ldr	r7, [pc, #16]	; (9000d5e0 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000d5d0:	6da0      	ldr	r0, [r4, #88]	; 0x58
9000d5d2:	6d39      	ldr	r1, [r7, #80]	; 0x50
9000d5d4:	f021 0107 	bic.w	r1, r1, #7
9000d5d8:	4301      	orrs	r1, r0
9000d5da:	6539      	str	r1, [r7, #80]	; 0x50
9000d5dc:	e4d7      	b.n	9000cf8e <HAL_RCCEx_PeriphCLKConfig+0x76>
9000d5de:	bf00      	nop
9000d5e0:	58024400 	.word	0x58024400
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000d5e4:	2101      	movs	r1, #1
9000d5e6:	f104 0008 	add.w	r0, r4, #8
9000d5ea:	f7ff fba1 	bl	9000cd30 <RCCEx_PLL2_Config>
9000d5ee:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FMC) == RCC_PERIPHCLK_FMC)
9000d5f0:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d5f4:	2d00      	cmp	r5, #0
9000d5f6:	f040 811a 	bne.w	9000d82e <HAL_RCCEx_PeriphCLKConfig+0x916>
      __HAL_RCC_FDCAN_CONFIG(PeriphClkInit->FdcanClockSelection);
9000d5fa:	4fb7      	ldr	r7, [pc, #732]	; (9000d8d8 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000d5fc:	6f20      	ldr	r0, [r4, #112]	; 0x70
9000d5fe:	6d39      	ldr	r1, [r7, #80]	; 0x50
9000d600:	f021 5140 	bic.w	r1, r1, #805306368	; 0x30000000
9000d604:	4301      	orrs	r1, r0
9000d606:	6539      	str	r1, [r7, #80]	; 0x50
9000d608:	e5b6      	b.n	9000d178 <HAL_RCCEx_PeriphCLKConfig+0x260>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000d60a:	2101      	movs	r1, #1
9000d60c:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000d610:	f7ff fc08 	bl	9000ce24 <RCCEx_PLL3_Config>
9000d614:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == RCC_PERIPHCLK_SDMMC)
9000d616:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d61a:	2d00      	cmp	r5, #0
9000d61c:	f040 811b 	bne.w	9000d856 <HAL_RCCEx_PeriphCLKConfig+0x93e>
      __HAL_RCC_USB_CONFIG(PeriphClkInit->UsbClockSelection);
9000d620:	4fad      	ldr	r7, [pc, #692]	; (9000d8d8 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000d622:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
9000d626:	6d79      	ldr	r1, [r7, #84]	; 0x54
9000d628:	f421 1140 	bic.w	r1, r1, #3145728	; 0x300000
9000d62c:	4301      	orrs	r1, r0
9000d62e:	6579      	str	r1, [r7, #84]	; 0x54
9000d630:	e726      	b.n	9000d480 <HAL_RCCEx_PeriphCLKConfig+0x568>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000d632:	2102      	movs	r1, #2
9000d634:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000d638:	f7ff fbf4 	bl	9000ce24 <RCCEx_PLL3_Config>
9000d63c:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000d63e:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d642:	2d00      	cmp	r5, #0
9000d644:	f040 8105 	bne.w	9000d852 <HAL_RCCEx_PeriphCLKConfig+0x93a>
      __HAL_RCC_ADC_CONFIG(PeriphClkInit->AdcClockSelection);
9000d648:	4fa3      	ldr	r7, [pc, #652]	; (9000d8d8 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000d64a:	f8d4 00a4 	ldr.w	r0, [r4, #164]	; 0xa4
9000d64e:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000d650:	f421 3140 	bic.w	r1, r1, #196608	; 0x30000
9000d654:	4301      	orrs	r1, r0
9000d656:	65b9      	str	r1, [r7, #88]	; 0x58
9000d658:	e700      	b.n	9000d45c <HAL_RCCEx_PeriphCLKConfig+0x544>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000d65a:	2101      	movs	r1, #1
9000d65c:	f104 0008 	add.w	r0, r4, #8
9000d660:	f7ff fb66 	bl	9000cd30 <RCCEx_PLL2_Config>
9000d664:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000d666:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d66a:	2d00      	cmp	r5, #0
9000d66c:	f040 80db 	bne.w	9000d826 <HAL_RCCEx_PeriphCLKConfig+0x90e>
      __HAL_RCC_USART16_CONFIG(PeriphClkInit->Usart16ClockSelection);
9000d670:	4f99      	ldr	r7, [pc, #612]	; (9000d8d8 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000d672:	6fe0      	ldr	r0, [r4, #124]	; 0x7c
9000d674:	6d79      	ldr	r1, [r7, #84]	; 0x54
9000d676:	f021 0138 	bic.w	r1, r1, #56	; 0x38
9000d67a:	4301      	orrs	r1, r0
9000d67c:	6579      	str	r1, [r7, #84]	; 0x54
9000d67e:	e615      	b.n	9000d2ac <HAL_RCCEx_PeriphCLKConfig+0x394>
    if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000d680:	2102      	movs	r1, #2
9000d682:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000d686:	f7ff fbcd 	bl	9000ce24 <RCCEx_PLL3_Config>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
9000d68a:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000d68e:	2800      	cmp	r0, #0
9000d690:	f43f af05 	beq.w	9000d49e <HAL_RCCEx_PeriphCLKConfig+0x586>
      status = HAL_ERROR;
9000d694:	2601      	movs	r6, #1
9000d696:	e702      	b.n	9000d49e <HAL_RCCEx_PeriphCLKConfig+0x586>
    ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000d698:	2100      	movs	r1, #0
9000d69a:	f104 0008 	add.w	r0, r4, #8
9000d69e:	f7ff fb47 	bl	9000cd30 <RCCEx_PLL2_Config>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
9000d6a2:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000d6a4:	2800      	cmp	r0, #0
9000d6a6:	f43f af47 	beq.w	9000d538 <HAL_RCCEx_PeriphCLKConfig+0x620>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
9000d6aa:	0797      	lsls	r7, r2, #30
9000d6ac:	4606      	mov	r6, r0
9000d6ae:	f57f af46 	bpl.w	9000d53e <HAL_RCCEx_PeriphCLKConfig+0x626>
    ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000d6b2:	2101      	movs	r1, #1
9000d6b4:	f104 0008 	add.w	r0, r4, #8
9000d6b8:	f7ff fb3a 	bl	9000cd30 <RCCEx_PLL2_Config>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
9000d6bc:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000d6be:	2800      	cmp	r0, #0
9000d6c0:	f43f af3d 	beq.w	9000d53e <HAL_RCCEx_PeriphCLKConfig+0x626>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
9000d6c4:	0755      	lsls	r5, r2, #29
9000d6c6:	4606      	mov	r6, r0
9000d6c8:	f57f af3c 	bpl.w	9000d544 <HAL_RCCEx_PeriphCLKConfig+0x62c>
    ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
9000d6cc:	2102      	movs	r1, #2
9000d6ce:	f104 0008 	add.w	r0, r4, #8
9000d6d2:	f7ff fb2d 	bl	9000cd30 <RCCEx_PLL2_Config>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
9000d6d6:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000d6d8:	2800      	cmp	r0, #0
9000d6da:	f43f af33 	beq.w	9000d544 <HAL_RCCEx_PeriphCLKConfig+0x62c>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
9000d6de:	4606      	mov	r6, r0
9000d6e0:	0710      	lsls	r0, r2, #28
9000d6e2:	f57f af32 	bpl.w	9000d54a <HAL_RCCEx_PeriphCLKConfig+0x632>
    ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
9000d6e6:	2100      	movs	r1, #0
9000d6e8:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000d6ec:	f7ff fb9a 	bl	9000ce24 <RCCEx_PLL3_Config>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
9000d6f0:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000d6f2:	2800      	cmp	r0, #0
9000d6f4:	f43f af29 	beq.w	9000d54a <HAL_RCCEx_PeriphCLKConfig+0x632>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
9000d6f8:	06d1      	lsls	r1, r2, #27
9000d6fa:	4606      	mov	r6, r0
9000d6fc:	f57f af28 	bpl.w	9000d550 <HAL_RCCEx_PeriphCLKConfig+0x638>
    ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000d700:	f104 0528 	add.w	r5, r4, #40	; 0x28
9000d704:	2101      	movs	r1, #1
9000d706:	4628      	mov	r0, r5
9000d708:	f7ff fb8c 	bl	9000ce24 <RCCEx_PLL3_Config>
    if (ret == HAL_OK)
9000d70c:	2800      	cmp	r0, #0
9000d70e:	f000 80c9 	beq.w	9000d8a4 <HAL_RCCEx_PeriphCLKConfig+0x98c>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000d712:	6863      	ldr	r3, [r4, #4]
9000d714:	069b      	lsls	r3, r3, #26
9000d716:	d54c      	bpl.n	9000d7b2 <HAL_RCCEx_PeriphCLKConfig+0x89a>
9000d718:	4606      	mov	r6, r0
9000d71a:	e043      	b.n	9000d7a4 <HAL_RCCEx_PeriphCLKConfig+0x88c>
    SET_BIT(PWR->CR1, PWR_CR1_DBP);
9000d71c:	4f6f      	ldr	r7, [pc, #444]	; (9000d8dc <HAL_RCCEx_PeriphCLKConfig+0x9c4>)
9000d71e:	683b      	ldr	r3, [r7, #0]
9000d720:	f443 7380 	orr.w	r3, r3, #256	; 0x100
9000d724:	603b      	str	r3, [r7, #0]
    tickstart = HAL_GetTick();
9000d726:	f7fb fc4f 	bl	90008fc8 <HAL_GetTick>
9000d72a:	4680      	mov	r8, r0
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000d72c:	e006      	b.n	9000d73c <HAL_RCCEx_PeriphCLKConfig+0x824>
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
9000d72e:	f7fb fc4b 	bl	90008fc8 <HAL_GetTick>
9000d732:	eba0 0008 	sub.w	r0, r0, r8
9000d736:	2864      	cmp	r0, #100	; 0x64
9000d738:	f200 81a0 	bhi.w	9000da7c <HAL_RCCEx_PeriphCLKConfig+0xb64>
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000d73c:	683b      	ldr	r3, [r7, #0]
9000d73e:	05da      	lsls	r2, r3, #23
9000d740:	d5f5      	bpl.n	9000d72e <HAL_RCCEx_PeriphCLKConfig+0x816>
    if (ret == HAL_OK)
9000d742:	2d00      	cmp	r5, #0
9000d744:	f040 81d4 	bne.w	9000daf0 <HAL_RCCEx_PeriphCLKConfig+0xbd8>
      if ((RCC->BDCR & RCC_BDCR_RTCSEL) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL))
9000d748:	4a63      	ldr	r2, [pc, #396]	; (9000d8d8 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000d74a:	f8d4 30b4 	ldr.w	r3, [r4, #180]	; 0xb4
9000d74e:	6f11      	ldr	r1, [r2, #112]	; 0x70
9000d750:	4059      	eors	r1, r3
9000d752:	f411 7f40 	tst.w	r1, #768	; 0x300
9000d756:	d00b      	beq.n	9000d770 <HAL_RCCEx_PeriphCLKConfig+0x858>
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
9000d758:	6f11      	ldr	r1, [r2, #112]	; 0x70
        __HAL_RCC_BACKUPRESET_FORCE();
9000d75a:	6f10      	ldr	r0, [r2, #112]	; 0x70
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
9000d75c:	f421 7140 	bic.w	r1, r1, #768	; 0x300
        __HAL_RCC_BACKUPRESET_FORCE();
9000d760:	f440 3080 	orr.w	r0, r0, #65536	; 0x10000
9000d764:	6710      	str	r0, [r2, #112]	; 0x70
        __HAL_RCC_BACKUPRESET_RELEASE();
9000d766:	6f10      	ldr	r0, [r2, #112]	; 0x70
9000d768:	f420 3080 	bic.w	r0, r0, #65536	; 0x10000
9000d76c:	6710      	str	r0, [r2, #112]	; 0x70
        RCC->BDCR = tmpreg;
9000d76e:	6711      	str	r1, [r2, #112]	; 0x70
      if (PeriphClkInit->RTCClockSelection == RCC_RTCCLKSOURCE_LSE)
9000d770:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
9000d774:	f000 819e 	beq.w	9000dab4 <HAL_RCCEx_PeriphCLKConfig+0xb9c>
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000d778:	f403 7240 	and.w	r2, r3, #768	; 0x300
9000d77c:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
9000d780:	f000 81ac 	beq.w	9000dadc <HAL_RCCEx_PeriphCLKConfig+0xbc4>
9000d784:	4954      	ldr	r1, [pc, #336]	; (9000d8d8 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000d786:	690a      	ldr	r2, [r1, #16]
9000d788:	f422 527c 	bic.w	r2, r2, #16128	; 0x3f00
9000d78c:	610a      	str	r2, [r1, #16]
9000d78e:	4852      	ldr	r0, [pc, #328]	; (9000d8d8 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000d790:	f3c3 010b 	ubfx	r1, r3, #0, #12
9000d794:	6f07      	ldr	r7, [r0, #112]	; 0x70
9000d796:	4339      	orrs	r1, r7
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000d798:	e9d4 3200 	ldrd	r3, r2, [r4]
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000d79c:	6701      	str	r1, [r0, #112]	; 0x70
9000d79e:	e553      	b.n	9000d248 <HAL_RCCEx_PeriphCLKConfig+0x330>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000d7a0:	f104 0528 	add.w	r5, r4, #40	; 0x28
    ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000d7a4:	2102      	movs	r1, #2
9000d7a6:	4628      	mov	r0, r5
9000d7a8:	f7ff fb3c 	bl	9000ce24 <RCCEx_PLL3_Config>
    if (ret == HAL_OK)
9000d7ac:	2800      	cmp	r0, #0
9000d7ae:	f43f aed2 	beq.w	9000d556 <HAL_RCCEx_PeriphCLKConfig+0x63e>
  return HAL_ERROR;
9000d7b2:	2001      	movs	r0, #1
}
9000d7b4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9000d7b8:	462e      	mov	r6, r5
9000d7ba:	e450      	b.n	9000d05e <HAL_RCCEx_PeriphCLKConfig+0x146>
9000d7bc:	462e      	mov	r6, r5
9000d7be:	e406      	b.n	9000cfce <HAL_RCCEx_PeriphCLKConfig+0xb6>
9000d7c0:	462e      	mov	r6, r5
9000d7c2:	e489      	b.n	9000d0d8 <HAL_RCCEx_PeriphCLKConfig+0x1c0>
9000d7c4:	462e      	mov	r6, r5
9000d7c6:	f7ff bbe2 	b.w	9000cf8e <HAL_RCCEx_PeriphCLKConfig+0x76>
9000d7ca:	462e      	mov	r6, r5
9000d7cc:	e423      	b.n	9000d016 <HAL_RCCEx_PeriphCLKConfig+0xfe>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
9000d7ce:	2102      	movs	r1, #2
9000d7d0:	f104 0008 	add.w	r0, r4, #8
9000d7d4:	f7ff faac 	bl	9000cd30 <RCCEx_PLL2_Config>
9000d7d8:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
9000d7da:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d7de:	2d00      	cmp	r5, #0
9000d7e0:	d14c      	bne.n	9000d87c <HAL_RCCEx_PeriphCLKConfig+0x964>
      __HAL_RCC_SDMMC_CONFIG(PeriphClkInit->SdmmcClockSelection);
9000d7e2:	4f3d      	ldr	r7, [pc, #244]	; (9000d8d8 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000d7e4:	6d20      	ldr	r0, [r4, #80]	; 0x50
9000d7e6:	6cf9      	ldr	r1, [r7, #76]	; 0x4c
9000d7e8:	f421 3180 	bic.w	r1, r1, #65536	; 0x10000
9000d7ec:	4301      	orrs	r1, r0
9000d7ee:	64f9      	str	r1, [r7, #76]	; 0x4c
9000d7f0:	e652      	b.n	9000d498 <HAL_RCCEx_PeriphCLKConfig+0x580>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000d7f2:	4839      	ldr	r0, [pc, #228]	; (9000d8d8 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000d7f4:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000d7f6:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000d7fa:	62c1      	str	r1, [r0, #44]	; 0x2c
        break;
9000d7fc:	e462      	b.n	9000d0c4 <HAL_RCCEx_PeriphCLKConfig+0x1ac>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000d7fe:	4836      	ldr	r0, [pc, #216]	; (9000d8d8 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000d800:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000d802:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000d806:	62c1      	str	r1, [r0, #44]	; 0x2c
        break;
9000d808:	e41e      	b.n	9000d048 <HAL_RCCEx_PeriphCLKConfig+0x130>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000d80a:	4833      	ldr	r0, [pc, #204]	; (9000d8d8 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000d80c:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000d80e:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000d812:	62c1      	str	r1, [r0, #44]	; 0x2c
        break;
9000d814:	f7ff bbd1 	b.w	9000cfba <HAL_RCCEx_PeriphCLKConfig+0xa2>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000d818:	482f      	ldr	r0, [pc, #188]	; (9000d8d8 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000d81a:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000d81c:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000d820:	62c1      	str	r1, [r0, #44]	; 0x2c
        break;
9000d822:	f7ff bbed 	b.w	9000d000 <HAL_RCCEx_PeriphCLKConfig+0xe8>
9000d826:	462e      	mov	r6, r5
9000d828:	e540      	b.n	9000d2ac <HAL_RCCEx_PeriphCLKConfig+0x394>
9000d82a:	462e      	mov	r6, r5
9000d82c:	e5a5      	b.n	9000d37a <HAL_RCCEx_PeriphCLKConfig+0x462>
9000d82e:	462e      	mov	r6, r5
9000d830:	e4a2      	b.n	9000d178 <HAL_RCCEx_PeriphCLKConfig+0x260>
9000d832:	462e      	mov	r6, r5
9000d834:	e57f      	b.n	9000d336 <HAL_RCCEx_PeriphCLKConfig+0x41e>
9000d836:	462e      	mov	r6, r5
9000d838:	e42c      	b.n	9000d094 <HAL_RCCEx_PeriphCLKConfig+0x17c>
9000d83a:	462e      	mov	r6, r5
9000d83c:	e501      	b.n	9000d242 <HAL_RCCEx_PeriphCLKConfig+0x32a>
9000d83e:	462e      	mov	r6, r5
9000d840:	e46a      	b.n	9000d118 <HAL_RCCEx_PeriphCLKConfig+0x200>
9000d842:	462e      	mov	r6, r5
9000d844:	e5dd      	b.n	9000d402 <HAL_RCCEx_PeriphCLKConfig+0x4ea>
9000d846:	462e      	mov	r6, r5
9000d848:	e486      	b.n	9000d158 <HAL_RCCEx_PeriphCLKConfig+0x240>
9000d84a:	462e      	mov	r6, r5
9000d84c:	e5b7      	b.n	9000d3be <HAL_RCCEx_PeriphCLKConfig+0x4a6>
9000d84e:	462e      	mov	r6, r5
9000d850:	e54c      	b.n	9000d2ec <HAL_RCCEx_PeriphCLKConfig+0x3d4>
9000d852:	462e      	mov	r6, r5
9000d854:	e602      	b.n	9000d45c <HAL_RCCEx_PeriphCLKConfig+0x544>
9000d856:	462e      	mov	r6, r5
9000d858:	e612      	b.n	9000d480 <HAL_RCCEx_PeriphCLKConfig+0x568>
9000d85a:	462e      	mov	r6, r5
9000d85c:	e62e      	b.n	9000d4bc <HAL_RCCEx_PeriphCLKConfig+0x5a4>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000d85e:	4f1e      	ldr	r7, [pc, #120]	; (9000d8d8 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000d860:	6af8      	ldr	r0, [r7, #44]	; 0x2c
9000d862:	f440 3000 	orr.w	r0, r0, #131072	; 0x20000
9000d866:	62f8      	str	r0, [r7, #44]	; 0x2c
    if (ret == HAL_OK)
9000d868:	2d00      	cmp	r5, #0
9000d86a:	d1f6      	bne.n	9000d85a <HAL_RCCEx_PeriphCLKConfig+0x942>
9000d86c:	e6a4      	b.n	9000d5b8 <HAL_RCCEx_PeriphCLKConfig+0x6a0>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000d86e:	481a      	ldr	r0, [pc, #104]	; (9000d8d8 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000d870:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000d872:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000d876:	62c1      	str	r1, [r0, #44]	; 0x2c
    if (ret == HAL_OK)
9000d878:	2d00      	cmp	r5, #0
9000d87a:	d0b2      	beq.n	9000d7e2 <HAL_RCCEx_PeriphCLKConfig+0x8ca>
9000d87c:	462e      	mov	r6, r5
9000d87e:	e60b      	b.n	9000d498 <HAL_RCCEx_PeriphCLKConfig+0x580>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000d880:	4815      	ldr	r0, [pc, #84]	; (9000d8d8 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000d882:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000d884:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000d888:	62c1      	str	r1, [r0, #44]	; 0x2c
    if (ret == HAL_OK)
9000d88a:	2d00      	cmp	r5, #0
9000d88c:	d1e3      	bne.n	9000d856 <HAL_RCCEx_PeriphCLKConfig+0x93e>
9000d88e:	e6c7      	b.n	9000d620 <HAL_RCCEx_PeriphCLKConfig+0x708>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000d890:	f104 0008 	add.w	r0, r4, #8
9000d894:	f7ff fa4c 	bl	9000cd30 <RCCEx_PLL2_Config>
9000d898:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000d89a:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d89e:	2d00      	cmp	r5, #0
9000d8a0:	d1d7      	bne.n	9000d852 <HAL_RCCEx_PeriphCLKConfig+0x93a>
9000d8a2:	e6d1      	b.n	9000d648 <HAL_RCCEx_PeriphCLKConfig+0x730>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000d8a4:	6862      	ldr	r2, [r4, #4]
9000d8a6:	e653      	b.n	9000d550 <HAL_RCCEx_PeriphCLKConfig+0x638>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
9000d8a8:	2102      	movs	r1, #2
9000d8aa:	f104 0008 	add.w	r0, r4, #8
9000d8ae:	f7ff fa3f 	bl	9000cd30 <RCCEx_PLL2_Config>
9000d8b2:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI123) == RCC_PERIPHCLK_SPI123)
9000d8b4:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d8b8:	2d00      	cmp	r5, #0
9000d8ba:	d1bc      	bne.n	9000d836 <HAL_RCCEx_PeriphCLKConfig+0x91e>
9000d8bc:	f7ff bbe3 	b.w	9000d086 <HAL_RCCEx_PeriphCLKConfig+0x16e>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000d8c0:	2102      	movs	r1, #2
9000d8c2:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000d8c6:	f7ff faad 	bl	9000ce24 <RCCEx_PLL3_Config>
9000d8ca:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000d8cc:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d8d0:	2d00      	cmp	r5, #0
9000d8d2:	d1ba      	bne.n	9000d84a <HAL_RCCEx_PeriphCLKConfig+0x932>
9000d8d4:	e56b      	b.n	9000d3ae <HAL_RCCEx_PeriphCLKConfig+0x496>
9000d8d6:	bf00      	nop
9000d8d8:	58024400 	.word	0x58024400
9000d8dc:	58024800 	.word	0x58024800
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000d8e0:	2102      	movs	r1, #2
9000d8e2:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000d8e6:	f7ff fa9d 	bl	9000ce24 <RCCEx_PLL3_Config>
9000d8ea:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000d8ec:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d8f0:	2d00      	cmp	r5, #0
9000d8f2:	d1a6      	bne.n	9000d842 <HAL_RCCEx_PeriphCLKConfig+0x92a>
9000d8f4:	e57d      	b.n	9000d3f2 <HAL_RCCEx_PeriphCLKConfig+0x4da>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000d8f6:	4886      	ldr	r0, [pc, #536]	; (9000db10 <HAL_RCCEx_PeriphCLKConfig+0xbf8>)
9000d8f8:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000d8fa:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000d8fe:	62c1      	str	r1, [r0, #44]	; 0x2c
    if (ret == HAL_OK)
9000d900:	2d00      	cmp	r5, #0
9000d902:	d194      	bne.n	9000d82e <HAL_RCCEx_PeriphCLKConfig+0x916>
9000d904:	e679      	b.n	9000d5fa <HAL_RCCEx_PeriphCLKConfig+0x6e2>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000d906:	2101      	movs	r1, #1
9000d908:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000d90c:	f7ff fa8a 	bl	9000ce24 <RCCEx_PLL3_Config>
9000d910:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000d912:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d916:	2d00      	cmp	r5, #0
9000d918:	d191      	bne.n	9000d83e <HAL_RCCEx_PeriphCLKConfig+0x926>
9000d91a:	f7ff bbf6 	b.w	9000d10a <HAL_RCCEx_PeriphCLKConfig+0x1f2>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000d91e:	2101      	movs	r1, #1
9000d920:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000d924:	f7ff fa7e 	bl	9000ce24 <RCCEx_PLL3_Config>
9000d928:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000d92a:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d92e:	2d00      	cmp	r5, #0
9000d930:	d189      	bne.n	9000d846 <HAL_RCCEx_PeriphCLKConfig+0x92e>
9000d932:	e409      	b.n	9000d148 <HAL_RCCEx_PeriphCLKConfig+0x230>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000d934:	2102      	movs	r1, #2
9000d936:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000d93a:	f7ff fa73 	bl	9000ce24 <RCCEx_PLL3_Config>
9000d93e:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000d940:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d944:	2d00      	cmp	r5, #0
9000d946:	f47f af70 	bne.w	9000d82a <HAL_RCCEx_PeriphCLKConfig+0x912>
9000d94a:	e50e      	b.n	9000d36a <HAL_RCCEx_PeriphCLKConfig+0x452>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
9000d94c:	2102      	movs	r1, #2
9000d94e:	f104 0008 	add.w	r0, r4, #8
9000d952:	f7ff f9ed 	bl	9000cd30 <RCCEx_PLL2_Config>
9000d956:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
9000d958:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d95c:	2d00      	cmp	r5, #0
9000d95e:	f47f af6c 	bne.w	9000d83a <HAL_RCCEx_PeriphCLKConfig+0x922>
9000d962:	e467      	b.n	9000d234 <HAL_RCCEx_PeriphCLKConfig+0x31c>
      if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000d964:	2102      	movs	r1, #2
9000d966:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000d96a:	f7ff fa5b 	bl	9000ce24 <RCCEx_PLL3_Config>
9000d96e:	2800      	cmp	r0, #0
9000d970:	f040 8094 	bne.w	9000da9c <HAL_RCCEx_PeriphCLKConfig+0xb84>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000d974:	f8d4 0084 	ldr.w	r0, [r4, #132]	; 0x84
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000d978:	e9d4 3200 	ldrd	r3, r2, [r4]
9000d97c:	e549      	b.n	9000d412 <HAL_RCCEx_PeriphCLKConfig+0x4fa>
      if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000d97e:	2102      	movs	r1, #2
9000d980:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000d984:	f7ff fa4e 	bl	9000ce24 <RCCEx_PLL3_Config>
9000d988:	2800      	cmp	r0, #0
9000d98a:	f040 808d 	bne.w	9000daa8 <HAL_RCCEx_PeriphCLKConfig+0xb90>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000d98e:	f8d4 0098 	ldr.w	r0, [r4, #152]	; 0x98
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000d992:	e9d4 3200 	ldrd	r3, r2, [r4]
9000d996:	e54a      	b.n	9000d42e <HAL_RCCEx_PeriphCLKConfig+0x516>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
9000d998:	e9d4 3200 	ldrd	r3, r2, [r4]
9000d99c:	f7ff bae9 	b.w	9000cf72 <HAL_RCCEx_PeriphCLKConfig+0x5a>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
9000d9a0:	2100      	movs	r1, #0
9000d9a2:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000d9a6:	f7ff fa3d 	bl	9000ce24 <RCCEx_PLL3_Config>
9000d9aa:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000d9ac:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000d9b0:	f7ff bb4a 	b.w	9000d048 <HAL_RCCEx_PeriphCLKConfig+0x130>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
9000d9b4:	2100      	movs	r1, #0
9000d9b6:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000d9ba:	f7ff fa33 	bl	9000ce24 <RCCEx_PLL3_Config>
9000d9be:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000d9c0:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000d9c4:	e600      	b.n	9000d5c8 <HAL_RCCEx_PeriphCLKConfig+0x6b0>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
9000d9c6:	2100      	movs	r1, #0
9000d9c8:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000d9cc:	f7ff fa2a 	bl	9000ce24 <RCCEx_PLL3_Config>
9000d9d0:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000d9d2:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000d9d6:	f7ff baf0 	b.w	9000cfba <HAL_RCCEx_PeriphCLKConfig+0xa2>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000d9da:	2102      	movs	r1, #2
9000d9dc:	3028      	adds	r0, #40	; 0x28
9000d9de:	f7ff fa21 	bl	9000ce24 <RCCEx_PLL3_Config>
9000d9e2:	4606      	mov	r6, r0
    if (ret == HAL_OK)
9000d9e4:	2e00      	cmp	r6, #0
9000d9e6:	f43f aab5 	beq.w	9000cf54 <HAL_RCCEx_PeriphCLKConfig+0x3c>
9000d9ea:	e7d5      	b.n	9000d998 <HAL_RCCEx_PeriphCLKConfig+0xa80>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000d9ec:	4848      	ldr	r0, [pc, #288]	; (9000db10 <HAL_RCCEx_PeriphCLKConfig+0xbf8>)
        break;
9000d9ee:	4635      	mov	r5, r6
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000d9f0:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000d9f2:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000d9f6:	62c1      	str	r1, [r0, #44]	; 0x2c
        break;
9000d9f8:	e5e6      	b.n	9000d5c8 <HAL_RCCEx_PeriphCLKConfig+0x6b0>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000d9fa:	2100      	movs	r1, #0
9000d9fc:	f104 0008 	add.w	r0, r4, #8
9000da00:	f7ff f996 	bl	9000cd30 <RCCEx_PLL2_Config>
9000da04:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000da06:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000da0a:	e5dd      	b.n	9000d5c8 <HAL_RCCEx_PeriphCLKConfig+0x6b0>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
9000da0c:	2100      	movs	r1, #0
9000da0e:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000da12:	f7ff fa07 	bl	9000ce24 <RCCEx_PLL3_Config>
9000da16:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000da18:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000da1c:	f7ff bb52 	b.w	9000d0c4 <HAL_RCCEx_PeriphCLKConfig+0x1ac>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
9000da20:	2100      	movs	r1, #0
9000da22:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000da26:	f7ff f9fd 	bl	9000ce24 <RCCEx_PLL3_Config>
9000da2a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000da2c:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000da30:	f7ff bae6 	b.w	9000d000 <HAL_RCCEx_PeriphCLKConfig+0xe8>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000da34:	2101      	movs	r1, #1
9000da36:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000da3a:	f7ff f9f3 	bl	9000ce24 <RCCEx_PLL3_Config>
9000da3e:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000da40:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000da44:	2d00      	cmp	r5, #0
9000da46:	f47f aef4 	bne.w	9000d832 <HAL_RCCEx_PeriphCLKConfig+0x91a>
9000da4a:	e46c      	b.n	9000d326 <HAL_RCCEx_PeriphCLKConfig+0x40e>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000da4c:	2101      	movs	r1, #1
9000da4e:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000da52:	f7ff f9e7 	bl	9000ce24 <RCCEx_PLL3_Config>
9000da56:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000da58:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000da5c:	2d00      	cmp	r5, #0
9000da5e:	f47f aef6 	bne.w	9000d84e <HAL_RCCEx_PeriphCLKConfig+0x936>
9000da62:	e43c      	b.n	9000d2de <HAL_RCCEx_PeriphCLKConfig+0x3c6>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000da64:	2101      	movs	r1, #1
9000da66:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000da6a:	f7ff f9db 	bl	9000ce24 <RCCEx_PLL3_Config>
9000da6e:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000da70:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000da74:	2d00      	cmp	r5, #0
9000da76:	f47f aed6 	bne.w	9000d826 <HAL_RCCEx_PeriphCLKConfig+0x90e>
9000da7a:	e5f9      	b.n	9000d670 <HAL_RCCEx_PeriphCLKConfig+0x758>
        status = ret;
9000da7c:	2603      	movs	r6, #3
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000da7e:	e9d4 3200 	ldrd	r3, r2, [r4]
9000da82:	4635      	mov	r5, r6
9000da84:	f7ff bbe0 	b.w	9000d248 <HAL_RCCEx_PeriphCLKConfig+0x330>
    switch (PeriphClkInit->SpdifrxClockSelection)
9000da88:	2601      	movs	r6, #1
9000da8a:	f7ff ba72 	b.w	9000cf72 <HAL_RCCEx_PeriphCLKConfig+0x5a>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000da8e:	4d20      	ldr	r5, [pc, #128]	; (9000db10 <HAL_RCCEx_PeriphCLKConfig+0xbf8>)
9000da90:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
9000da92:	f440 3000 	orr.w	r0, r0, #131072	; 0x20000
9000da96:	62e8      	str	r0, [r5, #44]	; 0x2c
    if (ret == HAL_OK)
9000da98:	f7ff ba64 	b.w	9000cf64 <HAL_RCCEx_PeriphCLKConfig+0x4c>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000da9c:	f8d4 0084 	ldr.w	r0, [r4, #132]	; 0x84
        status = HAL_ERROR;
9000daa0:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000daa2:	e9d4 3200 	ldrd	r3, r2, [r4]
9000daa6:	e4b4      	b.n	9000d412 <HAL_RCCEx_PeriphCLKConfig+0x4fa>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000daa8:	f8d4 0098 	ldr.w	r0, [r4, #152]	; 0x98
        status = HAL_ERROR;
9000daac:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000daae:	e9d4 3200 	ldrd	r3, r2, [r4]
9000dab2:	e4bc      	b.n	9000d42e <HAL_RCCEx_PeriphCLKConfig+0x516>
        tickstart = HAL_GetTick();
9000dab4:	f7fb fa88 	bl	90008fc8 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000dab8:	f8df 8054 	ldr.w	r8, [pc, #84]	; 9000db10 <HAL_RCCEx_PeriphCLKConfig+0xbf8>
        tickstart = HAL_GetTick();
9000dabc:	4607      	mov	r7, r0
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000dabe:	f241 3988 	movw	r9, #5000	; 0x1388
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000dac2:	e004      	b.n	9000dace <HAL_RCCEx_PeriphCLKConfig+0xbb6>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000dac4:	f7fb fa80 	bl	90008fc8 <HAL_GetTick>
9000dac8:	1bc0      	subs	r0, r0, r7
9000daca:	4548      	cmp	r0, r9
9000dacc:	d8d6      	bhi.n	9000da7c <HAL_RCCEx_PeriphCLKConfig+0xb64>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000dace:	f8d8 3070 	ldr.w	r3, [r8, #112]	; 0x70
9000dad2:	079b      	lsls	r3, r3, #30
9000dad4:	d5f6      	bpl.n	9000dac4 <HAL_RCCEx_PeriphCLKConfig+0xbac>
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000dad6:	f8d4 30b4 	ldr.w	r3, [r4, #180]	; 0xb4
9000dada:	e64d      	b.n	9000d778 <HAL_RCCEx_PeriphCLKConfig+0x860>
9000dadc:	480c      	ldr	r0, [pc, #48]	; (9000db10 <HAL_RCCEx_PeriphCLKConfig+0xbf8>)
9000dade:	4a0d      	ldr	r2, [pc, #52]	; (9000db14 <HAL_RCCEx_PeriphCLKConfig+0xbfc>)
9000dae0:	6901      	ldr	r1, [r0, #16]
9000dae2:	ea02 1213 	and.w	r2, r2, r3, lsr #4
9000dae6:	f421 517c 	bic.w	r1, r1, #16128	; 0x3f00
9000daea:	430a      	orrs	r2, r1
9000daec:	6102      	str	r2, [r0, #16]
9000daee:	e64e      	b.n	9000d78e <HAL_RCCEx_PeriphCLKConfig+0x876>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000daf0:	e9d4 3200 	ldrd	r3, r2, [r4]
9000daf4:	462e      	mov	r6, r5
9000daf6:	f7ff bba7 	b.w	9000d248 <HAL_RCCEx_PeriphCLKConfig+0x330>
    switch (PeriphClkInit->Usart234578ClockSelection)
9000dafa:	2601      	movs	r6, #1
9000dafc:	4635      	mov	r5, r6
9000dafe:	f7ff bbf5 	b.w	9000d2ec <HAL_RCCEx_PeriphCLKConfig+0x3d4>
    switch (PeriphClkInit->FmcClockSelection)
9000db02:	2601      	movs	r6, #1
9000db04:	4635      	mov	r5, r6
9000db06:	f7ff bb9c 	b.w	9000d242 <HAL_RCCEx_PeriphCLKConfig+0x32a>
    switch (PeriphClkInit->Lpuart1ClockSelection)
9000db0a:	2601      	movs	r6, #1
9000db0c:	4635      	mov	r5, r6
9000db0e:	e412      	b.n	9000d336 <HAL_RCCEx_PeriphCLKConfig+0x41e>
9000db10:	58024400 	.word	0x58024400
9000db14:	00ffffcf 	.word	0x00ffffcf

9000db18 <HAL_SDRAM_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
9000db18:	b318      	cbz	r0, 9000db62 <HAL_SDRAM_Init+0x4a>
{
9000db1a:	b538      	push	{r3, r4, r5, lr}
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
9000db1c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
9000db20:	4604      	mov	r4, r0
9000db22:	460d      	mov	r5, r1
9000db24:	f003 02ff 	and.w	r2, r3, #255	; 0xff
9000db28:	b1b3      	cbz	r3, 9000db58 <HAL_SDRAM_Init+0x40>

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
9000db2a:	4621      	mov	r1, r4
  hsdram->State = HAL_SDRAM_STATE_BUSY;
9000db2c:	2302      	movs	r3, #2
9000db2e:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
9000db32:	f851 0b04 	ldr.w	r0, [r1], #4
9000db36:	f000 fa39 	bl	9000dfac <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
9000db3a:	6862      	ldr	r2, [r4, #4]
9000db3c:	4629      	mov	r1, r5
9000db3e:	6820      	ldr	r0, [r4, #0]
9000db40:	f000 fa72 	bl	9000e028 <FMC_SDRAM_Timing_Init>

  /* Enable FMC Peripheral */
  __FMC_ENABLE();
9000db44:	4a08      	ldr	r2, [pc, #32]	; (9000db68 <HAL_SDRAM_Init+0x50>)
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
9000db46:	2101      	movs	r1, #1

  return HAL_OK;
9000db48:	2000      	movs	r0, #0
  __FMC_ENABLE();
9000db4a:	6813      	ldr	r3, [r2, #0]
9000db4c:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
9000db50:	6013      	str	r3, [r2, #0]
  hsdram->State = HAL_SDRAM_STATE_READY;
9000db52:	f884 102c 	strb.w	r1, [r4, #44]	; 0x2c
}
9000db56:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->Lock = HAL_UNLOCKED;
9000db58:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d
    HAL_SDRAM_MspInit(hsdram);
9000db5c:	f7f5 fb8c 	bl	90003278 <HAL_SDRAM_MspInit>
9000db60:	e7e3      	b.n	9000db2a <HAL_SDRAM_Init+0x12>
    return HAL_ERROR;
9000db62:	2001      	movs	r0, #1
}
9000db64:	4770      	bx	lr
9000db66:	bf00      	nop
9000db68:	52004000 	.word	0x52004000

9000db6c <HAL_SDRAM_DeInit>:
  * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
  *                the configuration information for SDRAM module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_DeInit(SDRAM_HandleTypeDef *hsdram)
{
9000db6c:	b510      	push	{r4, lr}
9000db6e:	4604      	mov	r4, r0

  /* DeInit the low level hardware */
  hsdram->MspDeInitCallback(hsdram);
#else
  /* Initialize the low level hardware (MSP) */
  HAL_SDRAM_MspDeInit(hsdram);
9000db70:	f7f5 fbfe 	bl	90003370 <HAL_SDRAM_MspDeInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */

  /* Configure the SDRAM registers with their reset values */
  (void)FMC_SDRAM_DeInit(hsdram->Instance, hsdram->Init.SDBank);
9000db74:	e9d4 0100 	ldrd	r0, r1, [r4]
9000db78:	f000 faa4 	bl	9000e0c4 <FMC_SDRAM_DeInit>

  /* Reset the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_RESET;
9000db7c:	2000      	movs	r0, #0
9000db7e:	f884 002c 	strb.w	r0, [r4, #44]	; 0x2c

  /* Release Lock */
  __HAL_UNLOCK(hsdram);
9000db82:	f884 002d 	strb.w	r0, [r4, #45]	; 0x2d

  return HAL_OK;
}
9000db86:	bd10      	pop	{r4, pc}

9000db88 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
9000db88:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
9000db8a:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
{
9000db8e:	4604      	mov	r4, r0

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
9000db90:	2b02      	cmp	r3, #2
  HAL_SDRAM_StateTypeDef state = hsdram->State;
9000db92:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
9000db94:	d004      	beq.n	9000dba0 <HAL_SDRAM_SendCommand+0x18>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
9000db96:	f000 06fb 	and.w	r6, r0, #251	; 0xfb
9000db9a:	2e01      	cmp	r6, #1
9000db9c:	d001      	beq.n	9000dba2 <HAL_SDRAM_SendCommand+0x1a>
      hsdram->State = HAL_SDRAM_STATE_READY;
    }
  }
  else
  {
    return HAL_ERROR;
9000db9e:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
9000dba0:	bd70      	pop	{r4, r5, r6, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000dba2:	2302      	movs	r3, #2
9000dba4:	460d      	mov	r5, r1
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
9000dba6:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000dba8:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
9000dbac:	f000 fa9e 	bl	9000e0ec <FMC_SDRAM_SendCommand>
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
9000dbb0:	682b      	ldr	r3, [r5, #0]
9000dbb2:	2b02      	cmp	r3, #2
9000dbb4:	d003      	beq.n	9000dbbe <HAL_SDRAM_SendCommand+0x36>
  return HAL_OK;
9000dbb6:	2000      	movs	r0, #0
      hsdram->State = HAL_SDRAM_STATE_READY;
9000dbb8:	f884 602c 	strb.w	r6, [r4, #44]	; 0x2c
}
9000dbbc:	bd70      	pop	{r4, r5, r6, pc}
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
9000dbbe:	2305      	movs	r3, #5
  return HAL_OK;
9000dbc0:	2000      	movs	r0, #0
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
9000dbc2:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
}
9000dbc6:	bd70      	pop	{r4, r5, r6, pc}

9000dbc8 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
9000dbc8:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
9000dbca:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
{
9000dbce:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
9000dbd0:	2b02      	cmp	r3, #2
9000dbd2:	b2d8      	uxtb	r0, r3
9000dbd4:	d005      	beq.n	9000dbe2 <HAL_SDRAM_ProgramRefreshRate+0x1a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
9000dbd6:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
9000dbda:	2b01      	cmp	r3, #1
9000dbdc:	b2dd      	uxtb	r5, r3
9000dbde:	d001      	beq.n	9000dbe4 <HAL_SDRAM_ProgramRefreshRate+0x1c>
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
  }
  else
  {
    return HAL_ERROR;
9000dbe0:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
9000dbe2:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000dbe4:	2302      	movs	r3, #2
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
9000dbe6:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000dbe8:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
9000dbec:	f000 fa96 	bl	9000e11c <FMC_SDRAM_ProgramRefreshRate>
  return HAL_OK;
9000dbf0:	2000      	movs	r0, #0
    hsdram->State = HAL_SDRAM_STATE_READY;
9000dbf2:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
}
9000dbf6:	bd38      	pop	{r3, r4, r5, pc}

9000dbf8 <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
9000dbf8:	4770      	bx	lr
9000dbfa:	bf00      	nop

9000dbfc <HAL_TIM_Base_Init>:
  if (htim == NULL)
9000dbfc:	2800      	cmp	r0, #0
9000dbfe:	f000 80a5 	beq.w	9000dd4c <HAL_TIM_Base_Init+0x150>
{
9000dc02:	b538      	push	{r3, r4, r5, lr}
  if (htim->State == HAL_TIM_STATE_RESET)
9000dc04:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
9000dc08:	4604      	mov	r4, r0
9000dc0a:	f003 02ff 	and.w	r2, r3, #255	; 0xff
9000dc0e:	2b00      	cmp	r3, #0
9000dc10:	d076      	beq.n	9000dd00 <HAL_TIM_Base_Init+0x104>
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
9000dc12:	6822      	ldr	r2, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
9000dc14:	2302      	movs	r3, #2
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000dc16:	494e      	ldr	r1, [pc, #312]	; (9000dd50 <HAL_TIM_Base_Init+0x154>)
9000dc18:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
  htim->State = HAL_TIM_STATE_BUSY;
9000dc1c:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000dc20:	eba2 0101 	sub.w	r1, r2, r1
  tmpcr1 = TIMx->CR1;
9000dc24:	6813      	ldr	r3, [r2, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000dc26:	fab1 f181 	clz	r1, r1
9000dc2a:	ea4f 1151 	mov.w	r1, r1, lsr #5
9000dc2e:	d027      	beq.n	9000dc80 <HAL_TIM_Base_Init+0x84>
9000dc30:	bb31      	cbnz	r1, 9000dc80 <HAL_TIM_Base_Init+0x84>
9000dc32:	4848      	ldr	r0, [pc, #288]	; (9000dd54 <HAL_TIM_Base_Init+0x158>)
9000dc34:	4d48      	ldr	r5, [pc, #288]	; (9000dd58 <HAL_TIM_Base_Init+0x15c>)
9000dc36:	4282      	cmp	r2, r0
9000dc38:	d067      	beq.n	9000dd0a <HAL_TIM_Base_Init+0x10e>
9000dc3a:	f500 6080 	add.w	r0, r0, #1024	; 0x400
9000dc3e:	4282      	cmp	r2, r0
9000dc40:	d063      	beq.n	9000dd0a <HAL_TIM_Base_Init+0x10e>
9000dc42:	1b55      	subs	r5, r2, r5
9000dc44:	f500 6080 	add.w	r0, r0, #1024	; 0x400
9000dc48:	fab5 f585 	clz	r5, r5
9000dc4c:	4282      	cmp	r2, r0
9000dc4e:	ea4f 1555 	mov.w	r5, r5, lsr #5
9000dc52:	d063      	beq.n	9000dd1c <HAL_TIM_Base_Init+0x120>
9000dc54:	2d00      	cmp	r5, #0
9000dc56:	d161      	bne.n	9000dd1c <HAL_TIM_Base_Init+0x120>
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000dc58:	4840      	ldr	r0, [pc, #256]	; (9000dd5c <HAL_TIM_Base_Init+0x160>)
9000dc5a:	4941      	ldr	r1, [pc, #260]	; (9000dd60 <HAL_TIM_Base_Init+0x164>)
9000dc5c:	428a      	cmp	r2, r1
9000dc5e:	bf18      	it	ne
9000dc60:	4282      	cmpne	r2, r0
9000dc62:	d065      	beq.n	9000dd30 <HAL_TIM_Base_Init+0x134>
9000dc64:	f501 6180 	add.w	r1, r1, #1024	; 0x400
9000dc68:	428a      	cmp	r2, r1
9000dc6a:	d061      	beq.n	9000dd30 <HAL_TIM_Base_Init+0x134>
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000dc6c:	69a0      	ldr	r0, [r4, #24]
9000dc6e:	f023 0380 	bic.w	r3, r3, #128	; 0x80

  TIMx->CR1 = tmpcr1;

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
9000dc72:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000dc74:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
9000dc76:	6013      	str	r3, [r2, #0]

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
9000dc78:	6863      	ldr	r3, [r4, #4]
  TIMx->ARR = (uint32_t)Structure->Period ;
9000dc7a:	62d1      	str	r1, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
9000dc7c:	6293      	str	r3, [r2, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000dc7e:	e023      	b.n	9000dcc8 <HAL_TIM_Base_Init+0xcc>
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000dc80:	4d35      	ldr	r5, [pc, #212]	; (9000dd58 <HAL_TIM_Base_Init+0x15c>)
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
9000dc82:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
9000dc86:	68a0      	ldr	r0, [r4, #8]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000dc88:	1b55      	subs	r5, r2, r5
    tmpcr1 |= Structure->CounterMode;
9000dc8a:	4303      	orrs	r3, r0
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000dc8c:	fab5 f585 	clz	r5, r5
9000dc90:	096d      	lsrs	r5, r5, #5
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000dc92:	6920      	ldr	r0, [r4, #16]
    tmpcr1 &= ~TIM_CR1_CKD;
9000dc94:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000dc98:	4303      	orrs	r3, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000dc9a:	69a0      	ldr	r0, [r4, #24]
9000dc9c:	f023 0380 	bic.w	r3, r3, #128	; 0x80
9000dca0:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
9000dca2:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
9000dca4:	68e3      	ldr	r3, [r4, #12]
9000dca6:	62d3      	str	r3, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
9000dca8:	6863      	ldr	r3, [r4, #4]
9000dcaa:	6293      	str	r3, [r2, #40]	; 0x28
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000dcac:	b951      	cbnz	r1, 9000dcc4 <HAL_TIM_Base_Init+0xc8>
9000dcae:	b94d      	cbnz	r5, 9000dcc4 <HAL_TIM_Base_Init+0xc8>
9000dcb0:	492a      	ldr	r1, [pc, #168]	; (9000dd5c <HAL_TIM_Base_Init+0x160>)
9000dcb2:	4b2b      	ldr	r3, [pc, #172]	; (9000dd60 <HAL_TIM_Base_Init+0x164>)
9000dcb4:	429a      	cmp	r2, r3
9000dcb6:	bf18      	it	ne
9000dcb8:	428a      	cmpne	r2, r1
9000dcba:	d003      	beq.n	9000dcc4 <HAL_TIM_Base_Init+0xc8>
9000dcbc:	f503 6380 	add.w	r3, r3, #1024	; 0x400
9000dcc0:	429a      	cmp	r2, r3
9000dcc2:	d101      	bne.n	9000dcc8 <HAL_TIM_Base_Init+0xcc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
9000dcc4:	6963      	ldr	r3, [r4, #20]
9000dcc6:	6313      	str	r3, [r2, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
9000dcc8:	2301      	movs	r3, #1
  return HAL_OK;
9000dcca:	2000      	movs	r0, #0
  TIMx->EGR = TIM_EGR_UG;
9000dccc:	6153      	str	r3, [r2, #20]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
9000dcce:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
9000dcd2:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
9000dcd6:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
9000dcda:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
9000dcde:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
9000dce2:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
9000dce6:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
9000dcea:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
9000dcee:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
9000dcf2:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
9000dcf6:	f884 3047 	strb.w	r3, [r4, #71]	; 0x47
  htim->State = HAL_TIM_STATE_READY;
9000dcfa:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
}
9000dcfe:	bd38      	pop	{r3, r4, r5, pc}
    htim->Lock = HAL_UNLOCKED;
9000dd00:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
9000dd04:	f7ff ff78 	bl	9000dbf8 <HAL_TIM_Base_MspInit>
9000dd08:	e783      	b.n	9000dc12 <HAL_TIM_Base_Init+0x16>
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000dd0a:	1b55      	subs	r5, r2, r5
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
9000dd0c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
9000dd10:	68a0      	ldr	r0, [r4, #8]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000dd12:	fab5 f585 	clz	r5, r5
    tmpcr1 |= Structure->CounterMode;
9000dd16:	4303      	orrs	r3, r0
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000dd18:	096d      	lsrs	r5, r5, #5
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000dd1a:	e7ba      	b.n	9000dc92 <HAL_TIM_Base_Init+0x96>
    tmpcr1 |= Structure->CounterMode;
9000dd1c:	68a0      	ldr	r0, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
9000dd1e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
9000dd22:	4303      	orrs	r3, r0
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000dd24:	480f      	ldr	r0, [pc, #60]	; (9000dd64 <HAL_TIM_Base_Init+0x168>)
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000dd26:	4282      	cmp	r2, r0
9000dd28:	d0b3      	beq.n	9000dc92 <HAL_TIM_Base_Init+0x96>
9000dd2a:	2d00      	cmp	r5, #0
9000dd2c:	d1b1      	bne.n	9000dc92 <HAL_TIM_Base_Init+0x96>
9000dd2e:	e793      	b.n	9000dc58 <HAL_TIM_Base_Init+0x5c>
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000dd30:	6920      	ldr	r0, [r4, #16]
    tmpcr1 &= ~TIM_CR1_CKD;
9000dd32:	f423 7340 	bic.w	r3, r3, #768	; 0x300
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000dd36:	69a1      	ldr	r1, [r4, #24]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000dd38:	4303      	orrs	r3, r0
  TIMx->ARR = (uint32_t)Structure->Period ;
9000dd3a:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000dd3c:	f023 0380 	bic.w	r3, r3, #128	; 0x80
9000dd40:	430b      	orrs	r3, r1
  TIMx->PSC = Structure->Prescaler;
9000dd42:	6861      	ldr	r1, [r4, #4]
  TIMx->CR1 = tmpcr1;
9000dd44:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
9000dd46:	62d0      	str	r0, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
9000dd48:	6291      	str	r1, [r2, #40]	; 0x28
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000dd4a:	e7b1      	b.n	9000dcb0 <HAL_TIM_Base_Init+0xb4>
    return HAL_ERROR;
9000dd4c:	2001      	movs	r0, #1
}
9000dd4e:	4770      	bx	lr
9000dd50:	40010000 	.word	0x40010000
9000dd54:	40000400 	.word	0x40000400
9000dd58:	40010400 	.word	0x40010400
9000dd5c:	40014000 	.word	0x40014000
9000dd60:	40014400 	.word	0x40014400
9000dd64:	40000c00 	.word	0x40000c00

9000dd68 <HAL_TIM_Base_Start_IT>:
  if (htim->State != HAL_TIM_STATE_READY)
9000dd68:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
9000dd6c:	2b01      	cmp	r3, #1
9000dd6e:	d141      	bne.n	9000ddf4 <HAL_TIM_Base_Start_IT+0x8c>
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000dd70:	6802      	ldr	r2, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
9000dd72:	2102      	movs	r1, #2
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000dd74:	4b24      	ldr	r3, [pc, #144]	; (9000de08 <HAL_TIM_Base_Start_IT+0xa0>)
9000dd76:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
9000dd7a:	bf18      	it	ne
9000dd7c:	429a      	cmpne	r2, r3
{
9000dd7e:	b430      	push	{r4, r5}
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000dd80:	bf0c      	ite	eq
9000dd82:	2301      	moveq	r3, #1
9000dd84:	2300      	movne	r3, #0
9000dd86:	4d21      	ldr	r5, [pc, #132]	; (9000de0c <HAL_TIM_Base_Start_IT+0xa4>)
9000dd88:	4c21      	ldr	r4, [pc, #132]	; (9000de10 <HAL_TIM_Base_Start_IT+0xa8>)
9000dd8a:	42aa      	cmp	r2, r5
9000dd8c:	bf08      	it	eq
9000dd8e:	f043 0301 	orreq.w	r3, r3, #1
  htim->State = HAL_TIM_STATE_BUSY;
9000dd92:	f880 103d 	strb.w	r1, [r0, #61]	; 0x3d
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000dd96:	68d1      	ldr	r1, [r2, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000dd98:	42a2      	cmp	r2, r4
9000dd9a:	bf08      	it	eq
9000dd9c:	f043 0301 	orreq.w	r3, r3, #1
9000dda0:	f504 6480 	add.w	r4, r4, #1024	; 0x400
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000dda4:	f041 0101 	orr.w	r1, r1, #1
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000dda8:	481a      	ldr	r0, [pc, #104]	; (9000de14 <HAL_TIM_Base_Start_IT+0xac>)
9000ddaa:	42a2      	cmp	r2, r4
9000ddac:	bf08      	it	eq
9000ddae:	f043 0301 	orreq.w	r3, r3, #1
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000ddb2:	60d1      	str	r1, [r2, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000ddb4:	4282      	cmp	r2, r0
9000ddb6:	bf08      	it	eq
9000ddb8:	f043 0301 	orreq.w	r3, r3, #1
9000ddbc:	4916      	ldr	r1, [pc, #88]	; (9000de18 <HAL_TIM_Base_Start_IT+0xb0>)
9000ddbe:	428a      	cmp	r2, r1
9000ddc0:	bf08      	it	eq
9000ddc2:	f043 0301 	orreq.w	r3, r3, #1
9000ddc6:	b933      	cbnz	r3, 9000ddd6 <HAL_TIM_Base_Start_IT+0x6e>
9000ddc8:	f500 5070 	add.w	r0, r0, #15360	; 0x3c00
9000ddcc:	1a10      	subs	r0, r2, r0
9000ddce:	fab0 f080 	clz	r0, r0
9000ddd2:	0940      	lsrs	r0, r0, #5
9000ddd4:	b198      	cbz	r0, 9000ddfe <HAL_TIM_Base_Start_IT+0x96>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
9000ddd6:	6891      	ldr	r1, [r2, #8]
9000ddd8:	4b10      	ldr	r3, [pc, #64]	; (9000de1c <HAL_TIM_Base_Start_IT+0xb4>)
9000ddda:	400b      	ands	r3, r1
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
9000dddc:	2b06      	cmp	r3, #6
9000ddde:	d00b      	beq.n	9000ddf8 <HAL_TIM_Base_Start_IT+0x90>
9000dde0:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
9000dde4:	d008      	beq.n	9000ddf8 <HAL_TIM_Base_Start_IT+0x90>
      __HAL_TIM_ENABLE(htim);
9000dde6:	6813      	ldr	r3, [r2, #0]
  return HAL_OK;
9000dde8:	2000      	movs	r0, #0
      __HAL_TIM_ENABLE(htim);
9000ddea:	f043 0301 	orr.w	r3, r3, #1
9000ddee:	6013      	str	r3, [r2, #0]
}
9000ddf0:	bc30      	pop	{r4, r5}
9000ddf2:	4770      	bx	lr
    return HAL_ERROR;
9000ddf4:	2001      	movs	r0, #1
}
9000ddf6:	4770      	bx	lr
  return HAL_OK;
9000ddf8:	2000      	movs	r0, #0
}
9000ddfa:	bc30      	pop	{r4, r5}
9000ddfc:	4770      	bx	lr
    __HAL_TIM_ENABLE(htim);
9000ddfe:	6813      	ldr	r3, [r2, #0]
9000de00:	f043 0301 	orr.w	r3, r3, #1
9000de04:	6013      	str	r3, [r2, #0]
9000de06:	e7f3      	b.n	9000ddf0 <HAL_TIM_Base_Start_IT+0x88>
9000de08:	40010000 	.word	0x40010000
9000de0c:	40000400 	.word	0x40000400
9000de10:	40000800 	.word	0x40000800
9000de14:	40010400 	.word	0x40010400
9000de18:	40001800 	.word	0x40001800
9000de1c:	00010007 	.word	0x00010007

9000de20 <HAL_TIM_OC_DelayElapsedCallback>:
9000de20:	4770      	bx	lr
9000de22:	bf00      	nop

9000de24 <HAL_TIM_IC_CaptureCallback>:
9000de24:	4770      	bx	lr
9000de26:	bf00      	nop

9000de28 <HAL_TIM_PWM_PulseFinishedCallback>:
9000de28:	4770      	bx	lr
9000de2a:	bf00      	nop

9000de2c <HAL_TIM_TriggerCallback>:
9000de2c:	4770      	bx	lr
9000de2e:	bf00      	nop

9000de30 <HAL_TIM_IRQHandler>:
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
9000de30:	6803      	ldr	r3, [r0, #0]
9000de32:	691a      	ldr	r2, [r3, #16]
9000de34:	0791      	lsls	r1, r2, #30
{
9000de36:	b510      	push	{r4, lr}
9000de38:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
9000de3a:	d502      	bpl.n	9000de42 <HAL_TIM_IRQHandler+0x12>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
9000de3c:	68da      	ldr	r2, [r3, #12]
9000de3e:	0792      	lsls	r2, r2, #30
9000de40:	d468      	bmi.n	9000df14 <HAL_TIM_IRQHandler+0xe4>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
9000de42:	691a      	ldr	r2, [r3, #16]
9000de44:	0752      	lsls	r2, r2, #29
9000de46:	d502      	bpl.n	9000de4e <HAL_TIM_IRQHandler+0x1e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
9000de48:	68da      	ldr	r2, [r3, #12]
9000de4a:	0750      	lsls	r0, r2, #29
9000de4c:	d44f      	bmi.n	9000deee <HAL_TIM_IRQHandler+0xbe>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
9000de4e:	691a      	ldr	r2, [r3, #16]
9000de50:	0711      	lsls	r1, r2, #28
9000de52:	d502      	bpl.n	9000de5a <HAL_TIM_IRQHandler+0x2a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
9000de54:	68da      	ldr	r2, [r3, #12]
9000de56:	0712      	lsls	r2, r2, #28
9000de58:	d437      	bmi.n	9000deca <HAL_TIM_IRQHandler+0x9a>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
9000de5a:	691a      	ldr	r2, [r3, #16]
9000de5c:	06d0      	lsls	r0, r2, #27
9000de5e:	d502      	bpl.n	9000de66 <HAL_TIM_IRQHandler+0x36>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
9000de60:	68da      	ldr	r2, [r3, #12]
9000de62:	06d1      	lsls	r1, r2, #27
9000de64:	d41e      	bmi.n	9000dea4 <HAL_TIM_IRQHandler+0x74>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
9000de66:	691a      	ldr	r2, [r3, #16]
9000de68:	07d2      	lsls	r2, r2, #31
9000de6a:	d502      	bpl.n	9000de72 <HAL_TIM_IRQHandler+0x42>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
9000de6c:	68da      	ldr	r2, [r3, #12]
9000de6e:	07d0      	lsls	r0, r2, #31
9000de70:	d469      	bmi.n	9000df46 <HAL_TIM_IRQHandler+0x116>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
9000de72:	691a      	ldr	r2, [r3, #16]
9000de74:	0611      	lsls	r1, r2, #24
9000de76:	d502      	bpl.n	9000de7e <HAL_TIM_IRQHandler+0x4e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
9000de78:	68da      	ldr	r2, [r3, #12]
9000de7a:	0612      	lsls	r2, r2, #24
9000de7c:	d46b      	bmi.n	9000df56 <HAL_TIM_IRQHandler+0x126>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK2) != RESET)
9000de7e:	691a      	ldr	r2, [r3, #16]
9000de80:	05d0      	lsls	r0, r2, #23
9000de82:	d502      	bpl.n	9000de8a <HAL_TIM_IRQHandler+0x5a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
9000de84:	68da      	ldr	r2, [r3, #12]
9000de86:	0611      	lsls	r1, r2, #24
9000de88:	d46d      	bmi.n	9000df66 <HAL_TIM_IRQHandler+0x136>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
9000de8a:	691a      	ldr	r2, [r3, #16]
9000de8c:	0652      	lsls	r2, r2, #25
9000de8e:	d502      	bpl.n	9000de96 <HAL_TIM_IRQHandler+0x66>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
9000de90:	68da      	ldr	r2, [r3, #12]
9000de92:	0650      	lsls	r0, r2, #25
9000de94:	d46f      	bmi.n	9000df76 <HAL_TIM_IRQHandler+0x146>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
9000de96:	691a      	ldr	r2, [r3, #16]
9000de98:	0691      	lsls	r1, r2, #26
9000de9a:	d502      	bpl.n	9000dea2 <HAL_TIM_IRQHandler+0x72>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
9000de9c:	68da      	ldr	r2, [r3, #12]
9000de9e:	0692      	lsls	r2, r2, #26
9000dea0:	d449      	bmi.n	9000df36 <HAL_TIM_IRQHandler+0x106>
}
9000dea2:	bd10      	pop	{r4, pc}
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
9000dea4:	f06f 0110 	mvn.w	r1, #16
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
9000dea8:	2208      	movs	r2, #8
        HAL_TIM_IC_CaptureCallback(htim);
9000deaa:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
9000deac:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
9000deae:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
9000deb0:	69db      	ldr	r3, [r3, #28]
9000deb2:	f413 7f40 	tst.w	r3, #768	; 0x300
9000deb6:	d16f      	bne.n	9000df98 <HAL_TIM_IRQHandler+0x168>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000deb8:	f7ff ffb2 	bl	9000de20 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000debc:	4620      	mov	r0, r4
9000debe:	f7ff ffb3 	bl	9000de28 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000dec2:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
9000dec4:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000dec6:	7722      	strb	r2, [r4, #28]
9000dec8:	e7cd      	b.n	9000de66 <HAL_TIM_IRQHandler+0x36>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
9000deca:	f06f 0108 	mvn.w	r1, #8
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
9000dece:	2204      	movs	r2, #4
        HAL_TIM_IC_CaptureCallback(htim);
9000ded0:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
9000ded2:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
9000ded4:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
9000ded6:	69db      	ldr	r3, [r3, #28]
9000ded8:	079b      	lsls	r3, r3, #30
9000deda:	d15a      	bne.n	9000df92 <HAL_TIM_IRQHandler+0x162>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000dedc:	f7ff ffa0 	bl	9000de20 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000dee0:	4620      	mov	r0, r4
9000dee2:	f7ff ffa1 	bl	9000de28 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000dee6:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
9000dee8:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000deea:	7722      	strb	r2, [r4, #28]
9000deec:	e7b5      	b.n	9000de5a <HAL_TIM_IRQHandler+0x2a>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
9000deee:	f06f 0104 	mvn.w	r1, #4
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
9000def2:	2202      	movs	r2, #2
        HAL_TIM_IC_CaptureCallback(htim);
9000def4:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
9000def6:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
9000def8:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
9000defa:	699b      	ldr	r3, [r3, #24]
9000defc:	f413 7f40 	tst.w	r3, #768	; 0x300
9000df00:	d144      	bne.n	9000df8c <HAL_TIM_IRQHandler+0x15c>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000df02:	f7ff ff8d 	bl	9000de20 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000df06:	4620      	mov	r0, r4
9000df08:	f7ff ff8e 	bl	9000de28 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000df0c:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
9000df0e:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000df10:	7722      	strb	r2, [r4, #28]
9000df12:	e79c      	b.n	9000de4e <HAL_TIM_IRQHandler+0x1e>
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
9000df14:	f06f 0102 	mvn.w	r1, #2
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
9000df18:	2201      	movs	r2, #1
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
9000df1a:	6119      	str	r1, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
9000df1c:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
9000df1e:	699b      	ldr	r3, [r3, #24]
9000df20:	0799      	lsls	r1, r3, #30
9000df22:	d130      	bne.n	9000df86 <HAL_TIM_IRQHandler+0x156>
          HAL_TIM_OC_DelayElapsedCallback(htim);
9000df24:	f7ff ff7c 	bl	9000de20 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
9000df28:	4620      	mov	r0, r4
9000df2a:	f7ff ff7d 	bl	9000de28 <HAL_TIM_PWM_PulseFinishedCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000df2e:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
9000df30:	6823      	ldr	r3, [r4, #0]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000df32:	7722      	strb	r2, [r4, #28]
9000df34:	e785      	b.n	9000de42 <HAL_TIM_IRQHandler+0x12>
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
9000df36:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
9000df3a:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
9000df3c:	611a      	str	r2, [r3, #16]
}
9000df3e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
9000df42:	f000 b82d 	b.w	9000dfa0 <HAL_TIMEx_CommutCallback>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
9000df46:	f06f 0201 	mvn.w	r2, #1
      HAL_TIM_PeriodElapsedCallback(htim);
9000df4a:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
9000df4c:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
9000df4e:	f7f4 fff7 	bl	90002f40 <HAL_TIM_PeriodElapsedCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
9000df52:	6823      	ldr	r3, [r4, #0]
9000df54:	e78d      	b.n	9000de72 <HAL_TIM_IRQHandler+0x42>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
9000df56:	f06f 0280 	mvn.w	r2, #128	; 0x80
      HAL_TIMEx_BreakCallback(htim);
9000df5a:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
9000df5c:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
9000df5e:	f000 f821 	bl	9000dfa4 <HAL_TIMEx_BreakCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK2) != RESET)
9000df62:	6823      	ldr	r3, [r4, #0]
9000df64:	e78b      	b.n	9000de7e <HAL_TIM_IRQHandler+0x4e>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
9000df66:	f46f 7280 	mvn.w	r2, #256	; 0x100
      HAL_TIMEx_Break2Callback(htim);
9000df6a:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
9000df6c:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_Break2Callback(htim);
9000df6e:	f000 f81b 	bl	9000dfa8 <HAL_TIMEx_Break2Callback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
9000df72:	6823      	ldr	r3, [r4, #0]
9000df74:	e789      	b.n	9000de8a <HAL_TIM_IRQHandler+0x5a>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
9000df76:	f06f 0240 	mvn.w	r2, #64	; 0x40
      HAL_TIM_TriggerCallback(htim);
9000df7a:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
9000df7c:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
9000df7e:	f7ff ff55 	bl	9000de2c <HAL_TIM_TriggerCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
9000df82:	6823      	ldr	r3, [r4, #0]
9000df84:	e787      	b.n	9000de96 <HAL_TIM_IRQHandler+0x66>
          HAL_TIM_IC_CaptureCallback(htim);
9000df86:	f7ff ff4d 	bl	9000de24 <HAL_TIM_IC_CaptureCallback>
9000df8a:	e7d0      	b.n	9000df2e <HAL_TIM_IRQHandler+0xfe>
        HAL_TIM_IC_CaptureCallback(htim);
9000df8c:	f7ff ff4a 	bl	9000de24 <HAL_TIM_IC_CaptureCallback>
9000df90:	e7bc      	b.n	9000df0c <HAL_TIM_IRQHandler+0xdc>
        HAL_TIM_IC_CaptureCallback(htim);
9000df92:	f7ff ff47 	bl	9000de24 <HAL_TIM_IC_CaptureCallback>
9000df96:	e7a6      	b.n	9000dee6 <HAL_TIM_IRQHandler+0xb6>
        HAL_TIM_IC_CaptureCallback(htim);
9000df98:	f7ff ff44 	bl	9000de24 <HAL_TIM_IC_CaptureCallback>
9000df9c:	e791      	b.n	9000dec2 <HAL_TIM_IRQHandler+0x92>
9000df9e:	bf00      	nop

9000dfa0 <HAL_TIMEx_CommutCallback>:
9000dfa0:	4770      	bx	lr
9000dfa2:	bf00      	nop

9000dfa4 <HAL_TIMEx_BreakCallback>:
9000dfa4:	4770      	bx	lr
9000dfa6:	bf00      	nop

9000dfa8 <HAL_TIMEx_Break2Callback>:
9000dfa8:	4770      	bx	lr
9000dfaa:	bf00      	nop

9000dfac <FMC_SDRAM_Init>:
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
9000dfac:	680b      	ldr	r3, [r1, #0]
{
9000dfae:	b410      	push	{r4}
  if (Init->SDBank == FMC_SDRAM_BANK1)
9000dfb0:	b9d3      	cbnz	r3, 9000dfe8 <FMC_SDRAM_Init+0x3c>
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000dfb2:	6804      	ldr	r4, [r0, #0]
9000dfb4:	f5a3 4300 	sub.w	r3, r3, #32768	; 0x8000
9000dfb8:	684a      	ldr	r2, [r1, #4]
9000dfba:	4023      	ands	r3, r4
9000dfbc:	4313      	orrs	r3, r2
9000dfbe:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
9000dfc2:	4323      	orrs	r3, r4
9000dfc4:	4313      	orrs	r3, r2
9000dfc6:	e9d1 4204 	ldrd	r4, r2, [r1, #16]
9000dfca:	4323      	orrs	r3, r4
9000dfcc:	4313      	orrs	r3, r2
9000dfce:	e9d1 4206 	ldrd	r4, r2, [r1, #24]
9000dfd2:	4323      	orrs	r3, r4
9000dfd4:	4313      	orrs	r3, r2
9000dfd6:	e9d1 4208 	ldrd	r4, r2, [r1, #32]
9000dfda:	4323      	orrs	r3, r4
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
9000dfdc:	f85d 4b04 	ldr.w	r4, [sp], #4
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000dfe0:	4313      	orrs	r3, r2
9000dfe2:	6003      	str	r3, [r0, #0]
}
9000dfe4:	2000      	movs	r0, #0
9000dfe6:	4770      	bx	lr
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000dfe8:	6802      	ldr	r2, [r0, #0]
9000dfea:	e9d1 4307 	ldrd	r4, r3, [r1, #28]
9000dfee:	f422 42f8 	bic.w	r2, r2, #31744	; 0x7c00
9000dff2:	4322      	orrs	r2, r4
9000dff4:	6a4c      	ldr	r4, [r1, #36]	; 0x24
9000dff6:	431a      	orrs	r2, r3
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
9000dff8:	4b0a      	ldr	r3, [pc, #40]	; (9000e024 <FMC_SDRAM_Init+0x78>)
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000dffa:	4322      	orrs	r2, r4
9000dffc:	6002      	str	r2, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
9000dffe:	6842      	ldr	r2, [r0, #4]
9000e000:	4013      	ands	r3, r2
9000e002:	e9d1 4201 	ldrd	r4, r2, [r1, #4]
9000e006:	4323      	orrs	r3, r4
9000e008:	4313      	orrs	r3, r2
9000e00a:	e9d1 4203 	ldrd	r4, r2, [r1, #12]
9000e00e:	4323      	orrs	r3, r4
9000e010:	4313      	orrs	r3, r2
9000e012:	e9d1 4205 	ldrd	r4, r2, [r1, #20]
9000e016:	4323      	orrs	r3, r4
}
9000e018:	f85d 4b04 	ldr.w	r4, [sp], #4
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
9000e01c:	4313      	orrs	r3, r2
9000e01e:	6043      	str	r3, [r0, #4]
}
9000e020:	2000      	movs	r0, #0
9000e022:	4770      	bx	lr
9000e024:	ffff8000 	.word	0xffff8000

9000e028 <FMC_SDRAM_Timing_Init>:
  * @param  Bank SDRAM bank number
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
9000e028:	b430      	push	{r4, r5}
  assert_param(IS_FMC_RP_DELAY(Timing->RPDelay));
  assert_param(IS_FMC_RCD_DELAY(Timing->RCDDelay));
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
9000e02a:	bb0a      	cbnz	r2, 9000e070 <FMC_SDRAM_Timing_Init+0x48>
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000e02c:	6883      	ldr	r3, [r0, #8]
9000e02e:	e9d1 2400 	ldrd	r2, r4, [r1]
9000e032:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
9000e036:	3c01      	subs	r4, #1
9000e038:	3a01      	subs	r2, #1
9000e03a:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
9000e03e:	4313      	orrs	r3, r2
9000e040:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
9000e044:	3c01      	subs	r4, #1
9000e046:	3a01      	subs	r2, #1
9000e048:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
9000e04c:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
9000e050:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
9000e054:	698a      	ldr	r2, [r1, #24]
9000e056:	3d01      	subs	r5, #1
9000e058:	1e61      	subs	r1, r4, #1
9000e05a:	3a01      	subs	r2, #1
9000e05c:	ea43 4305 	orr.w	r3, r3, r5, lsl #16
9000e060:	ea43 5301 	orr.w	r3, r3, r1, lsl #20
9000e064:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTRx_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTRx_TRCD_Pos)));
  }

  return HAL_OK;
}
9000e068:	bc30      	pop	{r4, r5}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000e06a:	6083      	str	r3, [r0, #8]
}
9000e06c:	2000      	movs	r0, #0
9000e06e:	4770      	bx	lr
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000e070:	6885      	ldr	r5, [r0, #8]
9000e072:	68ca      	ldr	r2, [r1, #12]
9000e074:	4b12      	ldr	r3, [pc, #72]	; (9000e0c0 <FMC_SDRAM_Timing_Init+0x98>)
9000e076:	1e54      	subs	r4, r2, #1
9000e078:	694a      	ldr	r2, [r1, #20]
9000e07a:	402b      	ands	r3, r5
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000e07c:	688d      	ldr	r5, [r1, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000e07e:	3a01      	subs	r2, #1
9000e080:	ea43 3304 	orr.w	r3, r3, r4, lsl #12
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000e084:	f105 3cff 	add.w	ip, r5, #4294967295
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000e088:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000e08c:	e9d1 2400 	ldrd	r2, r4, [r1]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000e090:	6083      	str	r3, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000e092:	68c3      	ldr	r3, [r0, #12]
9000e094:	3c01      	subs	r4, #1
9000e096:	3a01      	subs	r2, #1
9000e098:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
9000e09c:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
9000e0a0:	690c      	ldr	r4, [r1, #16]
9000e0a2:	4313      	orrs	r3, r2
9000e0a4:	698a      	ldr	r2, [r1, #24]
9000e0a6:	1e61      	subs	r1, r4, #1
9000e0a8:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
9000e0ac:	3a01      	subs	r2, #1
9000e0ae:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
9000e0b2:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
}
9000e0b6:	bc30      	pop	{r4, r5}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000e0b8:	60c3      	str	r3, [r0, #12]
}
9000e0ba:	2000      	movs	r0, #0
9000e0bc:	4770      	bx	lr
9000e0be:	bf00      	nop
9000e0c0:	ff0f0fff 	.word	0xff0f0fff

9000e0c4 <FMC_SDRAM_DeInit>:
  * @brief  DeInitializes the FMC_SDRAM peripheral
  * @param  Device Pointer to SDRAM device instance
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_DeInit(FMC_SDRAM_TypeDef *Device, uint32_t Bank)
{
9000e0c4:	b430      	push	{r4, r5}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* De-initialize the SDRAM device */
  Device->SDCR[Bank] = 0x000002D0U;
  Device->SDTR[Bank] = 0x0FFFFFFFU;
  Device->SDCMR      = 0x00000000U;
9000e0c6:	2200      	movs	r2, #0
{
9000e0c8:	4603      	mov	r3, r0
  Device->SDCR[Bank] = 0x000002D0U;
9000e0ca:	f44f 7534 	mov.w	r5, #720	; 0x2d0
  Device->SDTR[Bank] = 0x0FFFFFFFU;
9000e0ce:	f06f 4470 	mvn.w	r4, #4026531840	; 0xf0000000
9000e0d2:	eb00 0c81 	add.w	ip, r0, r1, lsl #2
  Device->SDCR[Bank] = 0x000002D0U;
9000e0d6:	f840 5021 	str.w	r5, [r0, r1, lsl #2]
  Device->SDRTR      = 0x00000000U;
  Device->SDSR       = 0x00000000U;

  return HAL_OK;
}
9000e0da:	4610      	mov	r0, r2
  Device->SDTR[Bank] = 0x0FFFFFFFU;
9000e0dc:	f8cc 4008 	str.w	r4, [ip, #8]
  Device->SDCMR      = 0x00000000U;
9000e0e0:	611a      	str	r2, [r3, #16]
  Device->SDRTR      = 0x00000000U;
9000e0e2:	615a      	str	r2, [r3, #20]
  Device->SDSR       = 0x00000000U;
9000e0e4:	619a      	str	r2, [r3, #24]
}
9000e0e6:	bc30      	pop	{r4, r5}
9000e0e8:	4770      	bx	lr
9000e0ea:	bf00      	nop

9000e0ec <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
9000e0ec:	b410      	push	{r4}
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000e0ee:	e9d1 3400 	ldrd	r3, r4, [r1]
{
9000e0f2:	4602      	mov	r2, r0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000e0f4:	6900      	ldr	r0, [r0, #16]
9000e0f6:	4323      	orrs	r3, r4
9000e0f8:	e9d1 1402 	ldrd	r1, r4, [r1, #8]
9000e0fc:	ea43 2344 	orr.w	r3, r3, r4, lsl #9
9000e100:	4c05      	ldr	r4, [pc, #20]	; (9000e118 <FMC_SDRAM_SendCommand+0x2c>)
9000e102:	3901      	subs	r1, #1
9000e104:	4004      	ands	r4, r0
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Prevent unused argument(s) compilation warning */
  UNUSED(Timeout);
  return HAL_OK;
}
9000e106:	2000      	movs	r0, #0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000e108:	4323      	orrs	r3, r4
}
9000e10a:	f85d 4b04 	ldr.w	r4, [sp], #4
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000e10e:	ea43 1341 	orr.w	r3, r3, r1, lsl #5
9000e112:	6113      	str	r3, [r2, #16]
}
9000e114:	4770      	bx	lr
9000e116:	bf00      	nop
9000e118:	ffc00000 	.word	0xffc00000

9000e11c <FMC_SDRAM_ProgramRefreshRate>:
  * @param  Device Pointer to SDRAM device instance
  * @param  RefreshRate The SDRAM refresh rate value.
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_ProgramRefreshRate(FMC_SDRAM_TypeDef *Device, uint32_t RefreshRate)
{
9000e11c:	4602      	mov	r2, r0
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
9000e11e:	4b05      	ldr	r3, [pc, #20]	; (9000e134 <FMC_SDRAM_ProgramRefreshRate+0x18>)

  return HAL_OK;
}
9000e120:	2000      	movs	r0, #0
{
9000e122:	b410      	push	{r4}
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
9000e124:	6954      	ldr	r4, [r2, #20]
9000e126:	4023      	ands	r3, r4
}
9000e128:	f85d 4b04 	ldr.w	r4, [sp], #4
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
9000e12c:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
9000e130:	6151      	str	r1, [r2, #20]
}
9000e132:	4770      	bx	lr
9000e134:	ffffc001 	.word	0xffffc001

9000e138 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
9000e138:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
9000e13a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000e13e:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
9000e140:	f002 fcda 	bl	90010af8 <xTaskGetSchedulerState>
9000e144:	2801      	cmp	r0, #1
9000e146:	d100      	bne.n	9000e14a <SysTick_Handler+0x12>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
9000e148:	bd08      	pop	{r3, pc}
9000e14a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
9000e14e:	f000 bcd9 	b.w	9000eb04 <xPortSysTickHandler>
9000e152:	bf00      	nop

9000e154 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
9000e154:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
9000e158:	b92b      	cbnz	r3, 9000e166 <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
9000e15a:	4b06      	ldr	r3, [pc, #24]	; (9000e174 <osKernelInitialize+0x20>)
9000e15c:	6818      	ldr	r0, [r3, #0]
9000e15e:	b928      	cbnz	r0, 9000e16c <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
9000e160:	2201      	movs	r2, #1
9000e162:	601a      	str	r2, [r3, #0]
      stat = osOK;
9000e164:	4770      	bx	lr
    stat = osErrorISR;
9000e166:	f06f 0005 	mvn.w	r0, #5
9000e16a:	4770      	bx	lr
    } else {
      stat = osError;
9000e16c:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
9000e170:	4770      	bx	lr
9000e172:	bf00      	nop
9000e174:	24020694 	.word	0x24020694

9000e178 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
9000e178:	b510      	push	{r4, lr}
9000e17a:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
9000e17e:	b974      	cbnz	r4, 9000e19e <osKernelStart+0x26>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
9000e180:	4b08      	ldr	r3, [pc, #32]	; (9000e1a4 <osKernelStart+0x2c>)
9000e182:	681a      	ldr	r2, [r3, #0]
9000e184:	2a01      	cmp	r2, #1
9000e186:	d107      	bne.n	9000e198 <osKernelStart+0x20>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
9000e188:	4907      	ldr	r1, [pc, #28]	; (9000e1a8 <osKernelStart+0x30>)
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
9000e18a:	2202      	movs	r2, #2
9000e18c:	77cc      	strb	r4, [r1, #31]
9000e18e:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
9000e190:	f002 fa40 	bl	90010614 <vTaskStartScheduler>
      stat = osOK;
9000e194:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
9000e196:	bd10      	pop	{r4, pc}
      stat = osError;
9000e198:	f04f 30ff 	mov.w	r0, #4294967295
}
9000e19c:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
9000e19e:	f06f 0005 	mvn.w	r0, #5
}
9000e1a2:	bd10      	pop	{r4, pc}
9000e1a4:	24020694 	.word	0x24020694
9000e1a8:	e000ed00 	.word	0xe000ed00

9000e1ac <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
9000e1ac:	b5f0      	push	{r4, r5, r6, r7, lr}
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
9000e1ae:	2500      	movs	r5, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
9000e1b0:	b087      	sub	sp, #28
9000e1b2:	4614      	mov	r4, r2
  hTask = NULL;
9000e1b4:	9505      	str	r5, [sp, #20]
9000e1b6:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
9000e1ba:	bb5a      	cbnz	r2, 9000e214 <osThreadNew+0x68>
9000e1bc:	4606      	mov	r6, r0
9000e1be:	b348      	cbz	r0, 9000e214 <osThreadNew+0x68>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
9000e1c0:	b1e4      	cbz	r4, 9000e1fc <osThreadNew+0x50>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
9000e1c2:	69a7      	ldr	r7, [r4, #24]
9000e1c4:	bb4f      	cbnz	r7, 9000e21a <osThreadNew+0x6e>
9000e1c6:	2718      	movs	r7, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
9000e1c8:	6863      	ldr	r3, [r4, #4]
9000e1ca:	07db      	lsls	r3, r3, #31
9000e1cc:	d422      	bmi.n	9000e214 <osThreadNew+0x68>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
9000e1ce:	6963      	ldr	r3, [r4, #20]
9000e1d0:	b33b      	cbz	r3, 9000e222 <osThreadNew+0x76>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
9000e1d2:	ea4f 0c93 	mov.w	ip, r3, lsr #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
9000e1d6:	68a0      	ldr	r0, [r4, #8]
      if (attr->name != NULL) {
9000e1d8:	6825      	ldr	r5, [r4, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
9000e1da:	b338      	cbz	r0, 9000e22c <osThreadNew+0x80>
9000e1dc:	68e2      	ldr	r2, [r4, #12]
9000e1de:	2a5f      	cmp	r2, #95	; 0x5f
9000e1e0:	d918      	bls.n	9000e214 <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
9000e1e2:	6924      	ldr	r4, [r4, #16]
9000e1e4:	b1b3      	cbz	r3, 9000e214 <osThreadNew+0x68>
9000e1e6:	b1ac      	cbz	r4, 9000e214 <osThreadNew+0x68>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
9000e1e8:	460b      	mov	r3, r1
9000e1ea:	4662      	mov	r2, ip
9000e1ec:	4629      	mov	r1, r5
9000e1ee:	9700      	str	r7, [sp, #0]
9000e1f0:	e9cd 4001 	strd	r4, r0, [sp, #4]
9000e1f4:	4630      	mov	r0, r6
9000e1f6:	f002 f871 	bl	900102dc <xTaskCreateStatic>
9000e1fa:	e00c      	b.n	9000e216 <osThreadNew+0x6a>
9000e1fc:	2280      	movs	r2, #128	; 0x80
    prio  = (UBaseType_t)osPriorityNormal;
9000e1fe:	2718      	movs	r7, #24
      #endif
    }
    else {
      if (mem == 0) {
        #if (configSUPPORT_DYNAMIC_ALLOCATION == 1)
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
9000e200:	460b      	mov	r3, r1
9000e202:	4621      	mov	r1, r4
9000e204:	ac05      	add	r4, sp, #20
9000e206:	4630      	mov	r0, r6
9000e208:	9700      	str	r7, [sp, #0]
9000e20a:	9401      	str	r4, [sp, #4]
9000e20c:	f002 f910 	bl	90010430 <xTaskCreate>
9000e210:	2801      	cmp	r0, #1
9000e212:	d009      	beq.n	9000e228 <osThreadNew+0x7c>
        return (NULL);
9000e214:	2000      	movs	r0, #0
      }
    }
  }

  return ((osThreadId_t)hTask);
}
9000e216:	b007      	add	sp, #28
9000e218:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
9000e21a:	1e7a      	subs	r2, r7, #1
9000e21c:	2a37      	cmp	r2, #55	; 0x37
9000e21e:	d9d3      	bls.n	9000e1c8 <osThreadNew+0x1c>
9000e220:	e7f8      	b.n	9000e214 <osThreadNew+0x68>
    stack = configMINIMAL_STACK_SIZE;
9000e222:	f04f 0c80 	mov.w	ip, #128	; 0x80
9000e226:	e7d6      	b.n	9000e1d6 <osThreadNew+0x2a>
  return ((osThreadId_t)hTask);
9000e228:	9805      	ldr	r0, [sp, #20]
9000e22a:	e7f4      	b.n	9000e216 <osThreadNew+0x6a>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
9000e22c:	68e3      	ldr	r3, [r4, #12]
9000e22e:	2b00      	cmp	r3, #0
9000e230:	d1f1      	bne.n	9000e216 <osThreadNew+0x6a>
9000e232:	6923      	ldr	r3, [r4, #16]
9000e234:	2b00      	cmp	r3, #0
9000e236:	d1ee      	bne.n	9000e216 <osThreadNew+0x6a>
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
9000e238:	fa1f f28c 	uxth.w	r2, ip
9000e23c:	462c      	mov	r4, r5
9000e23e:	e7df      	b.n	9000e200 <osThreadNew+0x54>

9000e240 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
9000e240:	b510      	push	{r4, lr}
9000e242:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
9000e246:	b92c      	cbnz	r4, 9000e254 <osDelay+0x14>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
9000e248:	b900      	cbnz	r0, 9000e24c <osDelay+0xc>
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
9000e24a:	bd10      	pop	{r4, pc}
      vTaskDelay(ticks);
9000e24c:	f002 f98c 	bl	90010568 <vTaskDelay>
    stat = osOK;
9000e250:	4620      	mov	r0, r4
}
9000e252:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
9000e254:	f06f 0005 	mvn.w	r0, #5
}
9000e258:	bd10      	pop	{r4, pc}
9000e25a:	bf00      	nop

9000e25c <osMutexNew>:
}

/*---------------------------------------------------------------------------*/
#if (configUSE_OS2_MUTEX == 1)

osMutexId_t osMutexNew (const osMutexAttr_t *attr) {
9000e25c:	b570      	push	{r4, r5, r6, lr}
9000e25e:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hMutex = NULL;

  if (!IS_IRQ()) {
9000e262:	b9db      	cbnz	r3, 9000e29c <osMutexNew+0x40>
    if (attr != NULL) {
9000e264:	4604      	mov	r4, r0
9000e266:	b1e0      	cbz	r0, 9000e2a2 <osMutexNew+0x46>
      type = attr->attr_bits;
9000e268:	6846      	ldr	r6, [r0, #4]
      rmtx = 1U;
    } else {
      rmtx = 0U;
    }

    if ((type & osMutexRobust) != osMutexRobust) {
9000e26a:	0733      	lsls	r3, r6, #28
9000e26c:	d416      	bmi.n	9000e29c <osMutexNew+0x40>
      mem = -1;

      if (attr != NULL) {
        if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
9000e26e:	6881      	ldr	r1, [r0, #8]
    if ((type & osMutexRecursive) == osMutexRecursive) {
9000e270:	f006 0601 	and.w	r6, r6, #1
        if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
9000e274:	68c3      	ldr	r3, [r0, #12]
9000e276:	b181      	cbz	r1, 9000e29a <osMutexNew+0x3e>
9000e278:	2b4f      	cmp	r3, #79	; 0x4f
9000e27a:	d90f      	bls.n	9000e29c <osMutexNew+0x40>
        mem = 0;
      }

      if (mem == 1) {
        #if (configSUPPORT_STATIC_ALLOCATION == 1)
          if (rmtx != 0U) {
9000e27c:	b31e      	cbz	r6, 9000e2c6 <osMutexNew+0x6a>
            #if (configUSE_RECURSIVE_MUTEXES == 1)
            hMutex = xSemaphoreCreateRecursiveMutexStatic (attr->cb_mem);
9000e27e:	2004      	movs	r0, #4
9000e280:	f001 f852 	bl	9000f328 <xQueueCreateMutexStatic>
9000e284:	4605      	mov	r5, r0
          #endif
        }
      }

      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hMutex != NULL) {
9000e286:	b14d      	cbz	r5, 9000e29c <osMutexNew+0x40>
        if (attr != NULL) {
          name = attr->name;
        } else {
          name = NULL;
        }
        vQueueAddToRegistry (hMutex, name);
9000e288:	6821      	ldr	r1, [r4, #0]
9000e28a:	4628      	mov	r0, r5
9000e28c:	f001 fd82 	bl	9000fd94 <vQueueAddToRegistry>
      }
      #endif

      if ((hMutex != NULL) && (rmtx != 0U)) {
9000e290:	b12e      	cbz	r6, 9000e29e <osMutexNew+0x42>
        hMutex = (SemaphoreHandle_t)((uint32_t)hMutex | 1U);
9000e292:	f045 0501 	orr.w	r5, r5, #1
      }
    }
  }

  return ((osMutexId_t)hMutex);
}
9000e296:	4628      	mov	r0, r5
9000e298:	bd70      	pop	{r4, r5, r6, pc}
          if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
9000e29a:	b163      	cbz	r3, 9000e2b6 <osMutexNew+0x5a>
  hMutex = NULL;
9000e29c:	2500      	movs	r5, #0
}
9000e29e:	4628      	mov	r0, r5
9000e2a0:	bd70      	pop	{r4, r5, r6, pc}
              hMutex = xSemaphoreCreateMutex ();
9000e2a2:	2001      	movs	r0, #1
9000e2a4:	f001 f8b0 	bl	9000f408 <xQueueCreateMutex>
      if (hMutex != NULL) {
9000e2a8:	4605      	mov	r5, r0
9000e2aa:	2800      	cmp	r0, #0
9000e2ac:	d0f6      	beq.n	9000e29c <osMutexNew+0x40>
        vQueueAddToRegistry (hMutex, name);
9000e2ae:	4621      	mov	r1, r4
9000e2b0:	f001 fd70 	bl	9000fd94 <vQueueAddToRegistry>
      if ((hMutex != NULL) && (rmtx != 0U)) {
9000e2b4:	e7f3      	b.n	9000e29e <osMutexNew+0x42>
            if (rmtx != 0U) {
9000e2b6:	b15e      	cbz	r6, 9000e2d0 <osMutexNew+0x74>
              hMutex = xSemaphoreCreateRecursiveMutex ();
9000e2b8:	2004      	movs	r0, #4
9000e2ba:	f001 f8a5 	bl	9000f408 <xQueueCreateMutex>
      if (hMutex != NULL) {
9000e2be:	4605      	mov	r5, r0
9000e2c0:	2800      	cmp	r0, #0
9000e2c2:	d1e1      	bne.n	9000e288 <osMutexNew+0x2c>
9000e2c4:	e7ea      	b.n	9000e29c <osMutexNew+0x40>
            hMutex = xSemaphoreCreateMutexStatic (attr->cb_mem);
9000e2c6:	2001      	movs	r0, #1
9000e2c8:	f001 f82e 	bl	9000f328 <xQueueCreateMutexStatic>
9000e2cc:	4605      	mov	r5, r0
9000e2ce:	e7da      	b.n	9000e286 <osMutexNew+0x2a>
              hMutex = xSemaphoreCreateMutex ();
9000e2d0:	2001      	movs	r0, #1
9000e2d2:	f001 f899 	bl	9000f408 <xQueueCreateMutex>
      if (hMutex != NULL) {
9000e2d6:	4605      	mov	r5, r0
9000e2d8:	e7d5      	b.n	9000e286 <osMutexNew+0x2a>
9000e2da:	bf00      	nop

9000e2dc <osMutexAcquire>:
osStatus_t osMutexAcquire (osMutexId_t mutex_id, uint32_t timeout) {
  SemaphoreHandle_t hMutex;
  osStatus_t stat;
  uint32_t rmtx;

  hMutex = (SemaphoreHandle_t)((uint32_t)mutex_id & ~1U);
9000e2dc:	f020 0201 	bic.w	r2, r0, #1

  rmtx = (uint32_t)mutex_id & 1U;
9000e2e0:	f000 0301 	and.w	r3, r0, #1
9000e2e4:	f3ef 8005 	mrs	r0, IPSR

  stat = osOK;

  if (IS_IRQ()) {
9000e2e8:	b9a8      	cbnz	r0, 9000e316 <osMutexAcquire+0x3a>
    stat = osErrorISR;
  }
  else if (hMutex == NULL) {
9000e2ea:	b1ba      	cbz	r2, 9000e31c <osMutexAcquire+0x40>
    stat = osErrorParameter;
  }
  else {
    if (rmtx != 0U) {
      #if (configUSE_RECURSIVE_MUTEXES == 1)
      if (xSemaphoreTakeRecursive (hMutex, timeout) != pdPASS) {
9000e2ec:	4610      	mov	r0, r2
osStatus_t osMutexAcquire (osMutexId_t mutex_id, uint32_t timeout) {
9000e2ee:	b510      	push	{r4, lr}
9000e2f0:	460c      	mov	r4, r1
    if (rmtx != 0U) {
9000e2f2:	b953      	cbnz	r3, 9000e30a <osMutexAcquire+0x2e>
        }
      }
      #endif
    }
    else {
      if (xSemaphoreTake (hMutex, timeout) != pdPASS) {
9000e2f4:	f001 fb00 	bl	9000f8f8 <xQueueSemaphoreTake>
9000e2f8:	2801      	cmp	r0, #1
9000e2fa:	d00a      	beq.n	9000e312 <osMutexAcquire+0x36>
          stat = osErrorResource;
9000e2fc:	2c00      	cmp	r4, #0
9000e2fe:	bf14      	ite	ne
9000e300:	f06f 0001 	mvnne.w	r0, #1
9000e304:	f06f 0002 	mvneq.w	r0, #2
      }
    }
  }

  return (stat);
}
9000e308:	bd10      	pop	{r4, pc}
      if (xSemaphoreTakeRecursive (hMutex, timeout) != pdPASS) {
9000e30a:	f001 fc7d 	bl	9000fc08 <xQueueTakeMutexRecursive>
9000e30e:	2801      	cmp	r0, #1
9000e310:	d1f4      	bne.n	9000e2fc <osMutexAcquire+0x20>
  stat = osOK;
9000e312:	2000      	movs	r0, #0
}
9000e314:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
9000e316:	f06f 0005 	mvn.w	r0, #5
9000e31a:	4770      	bx	lr
    stat = osErrorParameter;
9000e31c:	f06f 0003 	mvn.w	r0, #3
}
9000e320:	4770      	bx	lr
9000e322:	bf00      	nop

9000e324 <osMutexRelease>:
9000e324:	f3ef 8205 	mrs	r2, IPSR

  rmtx = (uint32_t)mutex_id & 1U;

  stat = osOK;

  if (IS_IRQ()) {
9000e328:	b9ba      	cbnz	r2, 9000e35a <osMutexRelease+0x36>
osStatus_t osMutexRelease (osMutexId_t mutex_id) {
9000e32a:	b510      	push	{r4, lr}
9000e32c:	f020 0401 	bic.w	r4, r0, #1
    stat = osErrorISR;
  }
  else if (hMutex == NULL) {
9000e330:	b1b4      	cbz	r4, 9000e360 <osMutexRelease+0x3c>
    stat = osErrorParameter;
  }
  else {
    if (rmtx != 0U) {
9000e332:	f000 0301 	and.w	r3, r0, #1
9000e336:	b943      	cbnz	r3, 9000e34a <osMutexRelease+0x26>
        stat = osErrorResource;
      }
      #endif
    }
    else {
      if (xSemaphoreGive (hMutex) != pdPASS) {
9000e338:	461a      	mov	r2, r3
9000e33a:	4619      	mov	r1, r3
9000e33c:	4620      	mov	r0, r4
9000e33e:	f000 fe71 	bl	9000f024 <xQueueGenericSend>
9000e342:	2801      	cmp	r0, #1
9000e344:	d106      	bne.n	9000e354 <osMutexRelease+0x30>
  stat = osOK;
9000e346:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
9000e348:	bd10      	pop	{r4, pc}
      if (xSemaphoreGiveRecursive (hMutex) != pdPASS) {
9000e34a:	4620      	mov	r0, r4
9000e34c:	f001 f83c 	bl	9000f3c8 <xQueueGiveMutexRecursive>
9000e350:	2801      	cmp	r0, #1
9000e352:	d0f8      	beq.n	9000e346 <osMutexRelease+0x22>
        stat = osErrorResource;
9000e354:	f06f 0002 	mvn.w	r0, #2
}
9000e358:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
9000e35a:	f06f 0005 	mvn.w	r0, #5
}
9000e35e:	4770      	bx	lr
    stat = osErrorParameter;
9000e360:	f06f 0003 	mvn.w	r0, #3
}
9000e364:	bd10      	pop	{r4, pc}
9000e366:	bf00      	nop

9000e368 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
9000e368:	b5f0      	push	{r4, r5, r6, r7, lr}
9000e36a:	b083      	sub	sp, #12
9000e36c:	f3ef 8605 	mrs	r6, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
9000e370:	b98e      	cbnz	r6, 9000e396 <osSemaphoreNew+0x2e>
9000e372:	4605      	mov	r5, r0
9000e374:	b178      	cbz	r0, 9000e396 <osSemaphoreNew+0x2e>
9000e376:	4288      	cmp	r0, r1
9000e378:	460f      	mov	r7, r1
9000e37a:	d30c      	bcc.n	9000e396 <osSemaphoreNew+0x2e>
    mem = -1;

    if (attr != NULL) {
9000e37c:	4614      	mov	r4, r2
9000e37e:	b182      	cbz	r2, 9000e3a2 <osSemaphoreNew+0x3a>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
9000e380:	e9d2 2302 	ldrd	r2, r3, [r2, #8]
9000e384:	b15a      	cbz	r2, 9000e39e <osSemaphoreNew+0x36>
9000e386:	2b4f      	cmp	r3, #79	; 0x4f
9000e388:	d905      	bls.n	9000e396 <osSemaphoreNew+0x2e>
    else {
      mem = 0;
    }

    if (mem != -1) {
      if (max_count == 1U) {
9000e38a:	2801      	cmp	r0, #1
9000e38c:	d032      	beq.n	9000e3f4 <osSemaphoreNew+0x8c>
        }
      }
      else {
        if (mem == 1) {
          #if (configSUPPORT_STATIC_ALLOCATION == 1)
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
9000e38e:	f000 fda1 	bl	9000eed4 <xQueueCreateCountingSemaphoreStatic>
          #endif
        }
      }
      
      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hSemaphore != NULL) {
9000e392:	4605      	mov	r5, r0
9000e394:	b978      	cbnz	r0, 9000e3b6 <osSemaphoreNew+0x4e>
  hSemaphore = NULL;
9000e396:	2500      	movs	r5, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
9000e398:	4628      	mov	r0, r5
9000e39a:	b003      	add	sp, #12
9000e39c:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
9000e39e:	2b00      	cmp	r3, #0
9000e3a0:	d1f9      	bne.n	9000e396 <osSemaphoreNew+0x2e>
      if (max_count == 1U) {
9000e3a2:	2d01      	cmp	r5, #1
9000e3a4:	d00f      	beq.n	9000e3c6 <osSemaphoreNew+0x5e>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
9000e3a6:	4628      	mov	r0, r5
9000e3a8:	4639      	mov	r1, r7
9000e3aa:	f000 fdf5 	bl	9000ef98 <xQueueCreateCountingSemaphore>
9000e3ae:	4605      	mov	r5, r0
      if (hSemaphore != NULL) {
9000e3b0:	2d00      	cmp	r5, #0
9000e3b2:	d0f0      	beq.n	9000e396 <osSemaphoreNew+0x2e>
        if (attr != NULL) {
9000e3b4:	b104      	cbz	r4, 9000e3b8 <osSemaphoreNew+0x50>
          name = attr->name;
9000e3b6:	6824      	ldr	r4, [r4, #0]
        vQueueAddToRegistry (hSemaphore, name);
9000e3b8:	4628      	mov	r0, r5
9000e3ba:	4621      	mov	r1, r4
9000e3bc:	f001 fcea 	bl	9000fd94 <vQueueAddToRegistry>
}
9000e3c0:	4628      	mov	r0, r5
9000e3c2:	b003      	add	sp, #12
9000e3c4:	bdf0      	pop	{r4, r5, r6, r7, pc}
            hSemaphore = xSemaphoreCreateBinary();
9000e3c6:	4628      	mov	r0, r5
9000e3c8:	2203      	movs	r2, #3
9000e3ca:	2100      	movs	r1, #0
9000e3cc:	f000 fd40 	bl	9000ee50 <xQueueGenericCreate>
9000e3d0:	4605      	mov	r5, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
9000e3d2:	2d00      	cmp	r5, #0
9000e3d4:	d0df      	beq.n	9000e396 <osSemaphoreNew+0x2e>
9000e3d6:	2f00      	cmp	r7, #0
9000e3d8:	d0ea      	beq.n	9000e3b0 <osSemaphoreNew+0x48>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
9000e3da:	2300      	movs	r3, #0
9000e3dc:	4628      	mov	r0, r5
9000e3de:	461a      	mov	r2, r3
9000e3e0:	4619      	mov	r1, r3
9000e3e2:	f000 fe1f 	bl	9000f024 <xQueueGenericSend>
9000e3e6:	2801      	cmp	r0, #1
9000e3e8:	d0e4      	beq.n	9000e3b4 <osSemaphoreNew+0x4c>
            vSemaphoreDelete (hSemaphore);
9000e3ea:	4628      	mov	r0, r5
            hSemaphore = NULL;
9000e3ec:	2500      	movs	r5, #0
            vSemaphoreDelete (hSemaphore);
9000e3ee:	f001 fc8b 	bl	9000fd08 <vQueueDelete>
      if (hSemaphore != NULL) {
9000e3f2:	e7d1      	b.n	9000e398 <osSemaphoreNew+0x30>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
9000e3f4:	4613      	mov	r3, r2
9000e3f6:	2203      	movs	r2, #3
9000e3f8:	4631      	mov	r1, r6
9000e3fa:	9200      	str	r2, [sp, #0]
9000e3fc:	4632      	mov	r2, r6
9000e3fe:	f000 fcbb 	bl	9000ed78 <xQueueGenericCreateStatic>
9000e402:	4605      	mov	r5, r0
9000e404:	e7e5      	b.n	9000e3d2 <osSemaphoreNew+0x6a>
9000e406:	bf00      	nop

9000e408 <osSemaphoreAcquire>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
9000e408:	b370      	cbz	r0, 9000e468 <osSemaphoreAcquire+0x60>
osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
9000e40a:	b510      	push	{r4, lr}
9000e40c:	460c      	mov	r4, r1
9000e40e:	b082      	sub	sp, #8
9000e410:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
9000e414:	b1c3      	cbz	r3, 9000e448 <osSemaphoreAcquire+0x40>
    if (timeout != 0U) {
9000e416:	bb21      	cbnz	r1, 9000e462 <osSemaphoreAcquire+0x5a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
9000e418:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9000e41a:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
9000e41c:	f001 fc14 	bl	9000fc48 <xQueueReceiveFromISR>
9000e420:	2801      	cmp	r0, #1
9000e422:	d11a      	bne.n	9000e45a <osSemaphoreAcquire+0x52>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
9000e424:	9b01      	ldr	r3, [sp, #4]
9000e426:	b913      	cbnz	r3, 9000e42e <osSemaphoreAcquire+0x26>
  stat = osOK;
9000e428:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
9000e42a:	b002      	add	sp, #8
9000e42c:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
9000e42e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000e432:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000e436:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000e43a:	f3bf 8f4f 	dsb	sy
9000e43e:	f3bf 8f6f 	isb	sy
  stat = osOK;
9000e442:	4620      	mov	r0, r4
}
9000e444:	b002      	add	sp, #8
9000e446:	bd10      	pop	{r4, pc}
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
9000e448:	f001 fa56 	bl	9000f8f8 <xQueueSemaphoreTake>
9000e44c:	2801      	cmp	r0, #1
9000e44e:	d0eb      	beq.n	9000e428 <osSemaphoreAcquire+0x20>
      if (timeout != 0U) {
9000e450:	b11c      	cbz	r4, 9000e45a <osSemaphoreAcquire+0x52>
        stat = osErrorTimeout;
9000e452:	f06f 0001 	mvn.w	r0, #1
}
9000e456:	b002      	add	sp, #8
9000e458:	bd10      	pop	{r4, pc}
        stat = osErrorResource;
9000e45a:	f06f 0002 	mvn.w	r0, #2
}
9000e45e:	b002      	add	sp, #8
9000e460:	bd10      	pop	{r4, pc}
    stat = osErrorParameter;
9000e462:	f06f 0003 	mvn.w	r0, #3
9000e466:	e7e0      	b.n	9000e42a <osSemaphoreAcquire+0x22>
9000e468:	f06f 0003 	mvn.w	r0, #3
}
9000e46c:	4770      	bx	lr
9000e46e:	bf00      	nop

9000e470 <osSemaphoreRelease>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
9000e470:	b330      	cbz	r0, 9000e4c0 <osSemaphoreRelease+0x50>
osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
9000e472:	b510      	push	{r4, lr}
9000e474:	b082      	sub	sp, #8
9000e476:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
9000e47a:	b1ab      	cbz	r3, 9000e4a8 <osSemaphoreRelease+0x38>
    yield = pdFALSE;
9000e47c:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
9000e47e:	a901      	add	r1, sp, #4
    yield = pdFALSE;
9000e480:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
9000e482:	f001 f863 	bl	9000f54c <xQueueGiveFromISR>
9000e486:	2801      	cmp	r0, #1
9000e488:	d117      	bne.n	9000e4ba <osSemaphoreRelease+0x4a>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
9000e48a:	9b01      	ldr	r3, [sp, #4]
9000e48c:	b193      	cbz	r3, 9000e4b4 <osSemaphoreRelease+0x44>
9000e48e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000e492:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000e496:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000e49a:	f3bf 8f4f 	dsb	sy
9000e49e:	f3bf 8f6f 	isb	sy
  stat = osOK;
9000e4a2:	4620      	mov	r0, r4
      stat = osErrorResource;
    }
  }

  return (stat);
}
9000e4a4:	b002      	add	sp, #8
9000e4a6:	bd10      	pop	{r4, pc}
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
9000e4a8:	461a      	mov	r2, r3
9000e4aa:	4619      	mov	r1, r3
9000e4ac:	f000 fdba 	bl	9000f024 <xQueueGenericSend>
9000e4b0:	2801      	cmp	r0, #1
9000e4b2:	d102      	bne.n	9000e4ba <osSemaphoreRelease+0x4a>
  stat = osOK;
9000e4b4:	2000      	movs	r0, #0
}
9000e4b6:	b002      	add	sp, #8
9000e4b8:	bd10      	pop	{r4, pc}
      stat = osErrorResource;
9000e4ba:	f06f 0002 	mvn.w	r0, #2
9000e4be:	e7fa      	b.n	9000e4b6 <osSemaphoreRelease+0x46>
    stat = osErrorParameter;
9000e4c0:	f06f 0003 	mvn.w	r0, #3
}
9000e4c4:	4770      	bx	lr
9000e4c6:	bf00      	nop

9000e4c8 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
9000e4c8:	b5f0      	push	{r4, r5, r6, r7, lr}
9000e4ca:	b083      	sub	sp, #12
9000e4cc:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
9000e4d0:	b987      	cbnz	r7, 9000e4f4 <osMessageQueueNew+0x2c>
9000e4d2:	4605      	mov	r5, r0
9000e4d4:	b170      	cbz	r0, 9000e4f4 <osMessageQueueNew+0x2c>
9000e4d6:	b169      	cbz	r1, 9000e4f4 <osMessageQueueNew+0x2c>
    mem = -1;

    if (attr != NULL) {
9000e4d8:	4614      	mov	r4, r2
9000e4da:	b17a      	cbz	r2, 9000e4fc <osMessageQueueNew+0x34>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
9000e4dc:	6893      	ldr	r3, [r2, #8]
9000e4de:	b1cb      	cbz	r3, 9000e514 <osMessageQueueNew+0x4c>
9000e4e0:	68d2      	ldr	r2, [r2, #12]
9000e4e2:	2a4f      	cmp	r2, #79	; 0x4f
9000e4e4:	d906      	bls.n	9000e4f4 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
9000e4e6:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
9000e4e8:	b122      	cbz	r2, 9000e4f4 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
9000e4ea:	fb01 f505 	mul.w	r5, r1, r5
9000e4ee:	6966      	ldr	r6, [r4, #20]
9000e4f0:	42ae      	cmp	r6, r5
9000e4f2:	d21f      	bcs.n	9000e534 <osMessageQueueNew+0x6c>
  hQueue = NULL;
9000e4f4:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
9000e4f6:	4628      	mov	r0, r5
9000e4f8:	b003      	add	sp, #12
9000e4fa:	bdf0      	pop	{r4, r5, r6, r7, pc}
          hQueue = xQueueCreate (msg_count, msg_size);
9000e4fc:	f000 fca8 	bl	9000ee50 <xQueueGenericCreate>
    if (hQueue != NULL) {
9000e500:	4605      	mov	r5, r0
9000e502:	2800      	cmp	r0, #0
9000e504:	d0f6      	beq.n	9000e4f4 <osMessageQueueNew+0x2c>
      vQueueAddToRegistry (hQueue, name);
9000e506:	4628      	mov	r0, r5
9000e508:	4621      	mov	r1, r4
9000e50a:	f001 fc43 	bl	9000fd94 <vQueueAddToRegistry>
}
9000e50e:	4628      	mov	r0, r5
9000e510:	b003      	add	sp, #12
9000e512:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
9000e514:	68d3      	ldr	r3, [r2, #12]
9000e516:	2b00      	cmp	r3, #0
9000e518:	d1ec      	bne.n	9000e4f4 <osMessageQueueNew+0x2c>
9000e51a:	6913      	ldr	r3, [r2, #16]
9000e51c:	2b00      	cmp	r3, #0
9000e51e:	d1e9      	bne.n	9000e4f4 <osMessageQueueNew+0x2c>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
9000e520:	6952      	ldr	r2, [r2, #20]
9000e522:	2a00      	cmp	r2, #0
9000e524:	d1e6      	bne.n	9000e4f4 <osMessageQueueNew+0x2c>
          hQueue = xQueueCreate (msg_count, msg_size);
9000e526:	f000 fc93 	bl	9000ee50 <xQueueGenericCreate>
    if (hQueue != NULL) {
9000e52a:	4605      	mov	r5, r0
9000e52c:	2800      	cmp	r0, #0
9000e52e:	d0e1      	beq.n	9000e4f4 <osMessageQueueNew+0x2c>
        name = attr->name;
9000e530:	6824      	ldr	r4, [r4, #0]
9000e532:	e7e8      	b.n	9000e506 <osMessageQueueNew+0x3e>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
9000e534:	9700      	str	r7, [sp, #0]
9000e536:	f000 fc1f 	bl	9000ed78 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
9000e53a:	4605      	mov	r5, r0
9000e53c:	2800      	cmp	r0, #0
9000e53e:	d1f7      	bne.n	9000e530 <osMessageQueueNew+0x68>
9000e540:	e7d8      	b.n	9000e4f4 <osMessageQueueNew+0x2c>
9000e542:	bf00      	nop

9000e544 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
9000e544:	b530      	push	{r4, r5, lr}
9000e546:	461c      	mov	r4, r3
9000e548:	b083      	sub	sp, #12
9000e54a:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
9000e54e:	b30b      	cbz	r3, 9000e594 <osMessageQueuePut+0x50>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000e550:	3c00      	subs	r4, #0
9000e552:	bf18      	it	ne
9000e554:	2401      	movne	r4, #1
9000e556:	2900      	cmp	r1, #0
9000e558:	bf08      	it	eq
9000e55a:	f044 0401 	orreq.w	r4, r4, #1
9000e55e:	bb7c      	cbnz	r4, 9000e5c0 <osMessageQueuePut+0x7c>
9000e560:	fab0 f480 	clz	r4, r0
9000e564:	0964      	lsrs	r4, r4, #5
9000e566:	b358      	cbz	r0, 9000e5c0 <osMessageQueuePut+0x7c>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
9000e568:	4623      	mov	r3, r4
9000e56a:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9000e56c:	9401      	str	r4, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
9000e56e:	f000 ff83 	bl	9000f478 <xQueueGenericSendFromISR>
9000e572:	2801      	cmp	r0, #1
9000e574:	d120      	bne.n	9000e5b8 <osMessageQueuePut+0x74>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
9000e576:	9b01      	ldr	r3, [sp, #4]
9000e578:	b1db      	cbz	r3, 9000e5b2 <osMessageQueuePut+0x6e>
9000e57a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000e57e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000e582:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000e586:	f3bf 8f4f 	dsb	sy
9000e58a:	f3bf 8f6f 	isb	sy
  stat = osOK;
9000e58e:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
9000e590:	b003      	add	sp, #12
9000e592:	bd30      	pop	{r4, r5, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
9000e594:	b1a0      	cbz	r0, 9000e5c0 <osMessageQueuePut+0x7c>
9000e596:	fab1 f381 	clz	r3, r1
9000e59a:	095b      	lsrs	r3, r3, #5
9000e59c:	b181      	cbz	r1, 9000e5c0 <osMessageQueuePut+0x7c>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
9000e59e:	4622      	mov	r2, r4
9000e5a0:	f000 fd40 	bl	9000f024 <xQueueGenericSend>
9000e5a4:	2801      	cmp	r0, #1
9000e5a6:	d004      	beq.n	9000e5b2 <osMessageQueuePut+0x6e>
        if (timeout != 0U) {
9000e5a8:	b134      	cbz	r4, 9000e5b8 <osMessageQueuePut+0x74>
          stat = osErrorTimeout;
9000e5aa:	f06f 0001 	mvn.w	r0, #1
}
9000e5ae:	b003      	add	sp, #12
9000e5b0:	bd30      	pop	{r4, r5, pc}
  stat = osOK;
9000e5b2:	2000      	movs	r0, #0
}
9000e5b4:	b003      	add	sp, #12
9000e5b6:	bd30      	pop	{r4, r5, pc}
          stat = osErrorResource;
9000e5b8:	f06f 0002 	mvn.w	r0, #2
}
9000e5bc:	b003      	add	sp, #12
9000e5be:	bd30      	pop	{r4, r5, pc}
      stat = osErrorParameter;
9000e5c0:	f06f 0003 	mvn.w	r0, #3
9000e5c4:	e7e4      	b.n	9000e590 <osMessageQueuePut+0x4c>
9000e5c6:	bf00      	nop

9000e5c8 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
9000e5c8:	b530      	push	{r4, r5, lr}
9000e5ca:	461c      	mov	r4, r3
9000e5cc:	b083      	sub	sp, #12
9000e5ce:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
9000e5d2:	b303      	cbz	r3, 9000e616 <osMessageQueueGet+0x4e>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000e5d4:	3c00      	subs	r4, #0
9000e5d6:	bf18      	it	ne
9000e5d8:	2401      	movne	r4, #1
9000e5da:	2900      	cmp	r1, #0
9000e5dc:	bf08      	it	eq
9000e5de:	f044 0401 	orreq.w	r4, r4, #1
9000e5e2:	bb5c      	cbnz	r4, 9000e63c <osMessageQueueGet+0x74>
9000e5e4:	fab0 f480 	clz	r4, r0
9000e5e8:	0964      	lsrs	r4, r4, #5
9000e5ea:	b338      	cbz	r0, 9000e63c <osMessageQueueGet+0x74>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
9000e5ec:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9000e5ee:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
9000e5f0:	f001 fb2a 	bl	9000fc48 <xQueueReceiveFromISR>
9000e5f4:	2801      	cmp	r0, #1
9000e5f6:	d11d      	bne.n	9000e634 <osMessageQueueGet+0x6c>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
9000e5f8:	9b01      	ldr	r3, [sp, #4]
9000e5fa:	b1c3      	cbz	r3, 9000e62e <osMessageQueueGet+0x66>
9000e5fc:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000e600:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000e604:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000e608:	f3bf 8f4f 	dsb	sy
9000e60c:	f3bf 8f6f 	isb	sy
  stat = osOK;
9000e610:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
9000e612:	b003      	add	sp, #12
9000e614:	bd30      	pop	{r4, r5, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
9000e616:	b188      	cbz	r0, 9000e63c <osMessageQueueGet+0x74>
9000e618:	b181      	cbz	r1, 9000e63c <osMessageQueueGet+0x74>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
9000e61a:	4622      	mov	r2, r4
9000e61c:	f000 ffee 	bl	9000f5fc <xQueueReceive>
9000e620:	2801      	cmp	r0, #1
9000e622:	d004      	beq.n	9000e62e <osMessageQueueGet+0x66>
        if (timeout != 0U) {
9000e624:	b134      	cbz	r4, 9000e634 <osMessageQueueGet+0x6c>
          stat = osErrorTimeout;
9000e626:	f06f 0001 	mvn.w	r0, #1
}
9000e62a:	b003      	add	sp, #12
9000e62c:	bd30      	pop	{r4, r5, pc}
  stat = osOK;
9000e62e:	2000      	movs	r0, #0
}
9000e630:	b003      	add	sp, #12
9000e632:	bd30      	pop	{r4, r5, pc}
          stat = osErrorResource;
9000e634:	f06f 0002 	mvn.w	r0, #2
}
9000e638:	b003      	add	sp, #12
9000e63a:	bd30      	pop	{r4, r5, pc}
      stat = osErrorParameter;
9000e63c:	f06f 0003 	mvn.w	r0, #3
9000e640:	e7e7      	b.n	9000e612 <osMessageQueueGet+0x4a>
9000e642:	bf00      	nop

9000e644 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
9000e644:	4b04      	ldr	r3, [pc, #16]	; (9000e658 <vApplicationGetIdleTaskMemory+0x14>)
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
9000e646:	b410      	push	{r4}
  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
9000e648:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
9000e64a:	2380      	movs	r3, #128	; 0x80
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
9000e64c:	4c03      	ldr	r4, [pc, #12]	; (9000e65c <vApplicationGetIdleTaskMemory+0x18>)
9000e64e:	600c      	str	r4, [r1, #0]
}
9000e650:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
9000e654:	6013      	str	r3, [r2, #0]
}
9000e656:	4770      	bx	lr
9000e658:	24020634 	.word	0x24020634
9000e65c:	24020434 	.word	0x24020434

9000e660 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
9000e660:	4b05      	ldr	r3, [pc, #20]	; (9000e678 <vApplicationGetTimerTaskMemory+0x18>)
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
9000e662:	b410      	push	{r4}
  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
9000e664:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
9000e666:	f44f 7380 	mov.w	r3, #256	; 0x100
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
9000e66a:	4c04      	ldr	r4, [pc, #16]	; (9000e67c <vApplicationGetTimerTaskMemory+0x1c>)
9000e66c:	600c      	str	r4, [r1, #0]
}
9000e66e:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
9000e672:	6013      	str	r3, [r2, #0]
}
9000e674:	4770      	bx	lr
9000e676:	bf00      	nop
9000e678:	24020a98 	.word	0x24020a98
9000e67c:	24020698 	.word	0x24020698

9000e680 <pvPortMalloc>:
static size_t xBlockAllocatedBit = 0;

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
9000e680:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000e684:	4605      	mov	r5, r0
BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
void *pvReturn = NULL;

	vTaskSuspendAll();
9000e686:	f002 f861 	bl	9001074c <vTaskSuspendAll>
	{
		/* If this is the first call to malloc then the heap will require
		initialisation to setup the list of free blocks. */
		if( pxEnd == NULL )
9000e68a:	4a54      	ldr	r2, [pc, #336]	; (9000e7dc <pvPortMalloc+0x15c>)
9000e68c:	6816      	ldr	r6, [r2, #0]
9000e68e:	2e00      	cmp	r6, #0
9000e690:	d06f      	beq.n	9000e772 <pvPortMalloc+0xf2>

		/* Check the requested block size is not so large that the top bit is
		set.  The top bit of the block size member of the BlockLink_t structure
		is used to determine who owns the block - the application or the
		kernel, so it must be free. */
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
9000e692:	4b53      	ldr	r3, [pc, #332]	; (9000e7e0 <pvPortMalloc+0x160>)
9000e694:	681f      	ldr	r7, [r3, #0]
		{
			/* The wanted size is increased so it can contain a BlockLink_t
			structure in addition to the requested amount of bytes. */
			if( xWantedSize > 0 )
9000e696:	423d      	tst	r5, r7
9000e698:	d12e      	bne.n	9000e6f8 <pvPortMalloc+0x78>
9000e69a:	b36d      	cbz	r5, 9000e6f8 <pvPortMalloc+0x78>
			{
				xWantedSize += xHeapStructSize;
9000e69c:	f105 0408 	add.w	r4, r5, #8

				/* Ensure that blocks are always aligned to the required number
				of bytes. */
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
9000e6a0:	076d      	lsls	r5, r5, #29
9000e6a2:	d002      	beq.n	9000e6aa <pvPortMalloc+0x2a>
				{
					/* Byte alignment required. */
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
9000e6a4:	f024 0407 	bic.w	r4, r4, #7
9000e6a8:	3408      	adds	r4, #8
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}

			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
9000e6aa:	b32c      	cbz	r4, 9000e6f8 <pvPortMalloc+0x78>
9000e6ac:	f8df c148 	ldr.w	ip, [pc, #328]	; 9000e7f8 <pvPortMalloc+0x178>
9000e6b0:	f8dc 5000 	ldr.w	r5, [ip]
9000e6b4:	42a5      	cmp	r5, r4
9000e6b6:	d31f      	bcc.n	9000e6f8 <pvPortMalloc+0x78>
			{
				/* Traverse the list from the start	(lowest address) block until
				one	of adequate size is found. */
				pxPreviousBlock = &xStart;
				pxBlock = xStart.pxNextFreeBlock;
9000e6b8:	484a      	ldr	r0, [pc, #296]	; (9000e7e4 <pvPortMalloc+0x164>)
9000e6ba:	6803      	ldr	r3, [r0, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
9000e6bc:	e003      	b.n	9000e6c6 <pvPortMalloc+0x46>
9000e6be:	681a      	ldr	r2, [r3, #0]
9000e6c0:	b122      	cbz	r2, 9000e6cc <pvPortMalloc+0x4c>
9000e6c2:	4618      	mov	r0, r3
9000e6c4:	4613      	mov	r3, r2
9000e6c6:	6859      	ldr	r1, [r3, #4]
9000e6c8:	42a1      	cmp	r1, r4
9000e6ca:	d3f8      	bcc.n	9000e6be <pvPortMalloc+0x3e>
					pxBlock = pxBlock->pxNextFreeBlock;
				}

				/* If the end marker was reached then a block of adequate size
				was	not found. */
				if( pxBlock != pxEnd )
9000e6cc:	42b3      	cmp	r3, r6
9000e6ce:	d013      	beq.n	9000e6f8 <pvPortMalloc+0x78>
				{
					/* Return the memory space pointed to - jumping over the
					BlockLink_t structure at its start. */
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
9000e6d0:	4698      	mov	r8, r3
					of the list of free blocks. */
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;

					/* If the block is larger than required it can be split into
					two. */
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
9000e6d2:	1b0a      	subs	r2, r1, r4
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
9000e6d4:	f858 eb08 	ldr.w	lr, [r8], #8
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
9000e6d8:	2a10      	cmp	r2, #16
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
9000e6da:	f8c0 e000 	str.w	lr, [r0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
9000e6de:	d929      	bls.n	9000e734 <pvPortMalloc+0xb4>
					{
						/* This block is to be split into two.  Create a new
						block following the number of bytes requested. The void
						cast is used to prevent byte alignment warnings from the
						compiler. */
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
9000e6e0:	1919      	adds	r1, r3, r4
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
9000e6e2:	0748      	lsls	r0, r1, #29
9000e6e4:	d00f      	beq.n	9000e706 <pvPortMalloc+0x86>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
9000e6e6:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e6ea:	f383 8811 	msr	BASEPRI, r3
9000e6ee:	f3bf 8f6f 	isb	sy
9000e6f2:	f3bf 8f4f 	dsb	sy
9000e6f6:	e7fe      	b.n	9000e6f6 <pvPortMalloc+0x76>
			mtCOVERAGE_TEST_MARKER();
		}

		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
9000e6f8:	f04f 0800 	mov.w	r8, #0
9000e6fc:	f002 f82e 	bl	9001075c <xTaskResumeAll>
	}
	#endif

	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
	return pvReturn;
}
9000e700:	4640      	mov	r0, r8
9000e702:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
9000e706:	604a      	str	r2, [r1, #4]
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000e708:	4a36      	ldr	r2, [pc, #216]	; (9000e7e4 <pvPortMalloc+0x164>)
						pxBlock->xBlockSize = xWantedSize;
9000e70a:	605c      	str	r4, [r3, #4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000e70c:	4614      	mov	r4, r2
9000e70e:	6812      	ldr	r2, [r2, #0]
9000e710:	4291      	cmp	r1, r2
9000e712:	d8fb      	bhi.n	9000e70c <pvPortMalloc+0x8c>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
9000e714:	6860      	ldr	r0, [r4, #4]
9000e716:	eb04 0e00 	add.w	lr, r4, r0
9000e71a:	4571      	cmp	r1, lr
9000e71c:	d04a      	beq.n	9000e7b4 <pvPortMalloc+0x134>
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000e71e:	f8d1 e004 	ldr.w	lr, [r1, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000e722:	eb01 000e 	add.w	r0, r1, lr
9000e726:	4282      	cmp	r2, r0
9000e728:	d050      	beq.n	9000e7cc <pvPortMalloc+0x14c>

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
9000e72a:	428c      	cmp	r4, r1
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000e72c:	600a      	str	r2, [r1, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
9000e72e:	bf18      	it	ne
9000e730:	6021      	strne	r1, [r4, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000e732:	6859      	ldr	r1, [r3, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
9000e734:	4a2c      	ldr	r2, [pc, #176]	; (9000e7e8 <pvPortMalloc+0x168>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000e736:	1a6d      	subs	r5, r5, r1
					pxBlock->xBlockSize |= xBlockAllocatedBit;
9000e738:	4339      	orrs	r1, r7
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
9000e73a:	6810      	ldr	r0, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000e73c:	f8cc 5000 	str.w	r5, [ip]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
9000e740:	4285      	cmp	r5, r0
					pxBlock->pxNextFreeBlock = NULL;
9000e742:	f04f 0000 	mov.w	r0, #0
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
9000e746:	bf38      	it	cc
9000e748:	6015      	strcc	r5, [r2, #0]
					xNumberOfSuccessfulAllocations++;
9000e74a:	4a28      	ldr	r2, [pc, #160]	; (9000e7ec <pvPortMalloc+0x16c>)
					pxBlock->pxNextFreeBlock = NULL;
9000e74c:	e9c3 0100 	strd	r0, r1, [r3]
					xNumberOfSuccessfulAllocations++;
9000e750:	6813      	ldr	r3, [r2, #0]
9000e752:	3301      	adds	r3, #1
9000e754:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
9000e756:	f002 f801 	bl	9001075c <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
9000e75a:	f018 0f07 	tst.w	r8, #7
9000e75e:	d0cf      	beq.n	9000e700 <pvPortMalloc+0x80>
9000e760:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e764:	f383 8811 	msr	BASEPRI, r3
9000e768:	f3bf 8f6f 	isb	sy
9000e76c:	f3bf 8f4f 	dsb	sy
9000e770:	e7fe      	b.n	9000e770 <pvPortMalloc+0xf0>
	uxAddress = ( size_t ) ucHeap;
9000e772:	4b1f      	ldr	r3, [pc, #124]	; (9000e7f0 <pvPortMalloc+0x170>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
9000e774:	075e      	lsls	r6, r3, #29
9000e776:	d117      	bne.n	9000e7a8 <pvPortMalloc+0x128>
9000e778:	4e1e      	ldr	r6, [pc, #120]	; (9000e7f4 <pvPortMalloc+0x174>)
9000e77a:	4619      	mov	r1, r3
	uxAddress -= xHeapStructSize;
9000e77c:	3e08      	subs	r6, #8
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
9000e77e:	f04f 4700 	mov.w	r7, #2147483648	; 0x80000000
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
9000e782:	4818      	ldr	r0, [pc, #96]	; (9000e7e4 <pvPortMalloc+0x164>)
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
9000e784:	f026 0607 	bic.w	r6, r6, #7
	pxEnd = ( void * ) uxAddress;
9000e788:	6016      	str	r6, [r2, #0]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
9000e78a:	1af3      	subs	r3, r6, r3
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
9000e78c:	4a16      	ldr	r2, [pc, #88]	; (9000e7e8 <pvPortMalloc+0x168>)
9000e78e:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
9000e790:	4a19      	ldr	r2, [pc, #100]	; (9000e7f8 <pvPortMalloc+0x178>)
9000e792:	6013      	str	r3, [r2, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
9000e794:	4a12      	ldr	r2, [pc, #72]	; (9000e7e0 <pvPortMalloc+0x160>)
9000e796:	6017      	str	r7, [r2, #0]
	xStart.xBlockSize = ( size_t ) 0;
9000e798:	2200      	movs	r2, #0
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
9000e79a:	e9c0 1200 	strd	r1, r2, [r0]
	pxEnd->pxNextFreeBlock = NULL;
9000e79e:	e9c6 2200 	strd	r2, r2, [r6]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
9000e7a2:	e9c1 6300 	strd	r6, r3, [r1]
}
9000e7a6:	e776      	b.n	9000e696 <pvPortMalloc+0x16>
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
9000e7a8:	3307      	adds	r3, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
9000e7aa:	4e12      	ldr	r6, [pc, #72]	; (9000e7f4 <pvPortMalloc+0x174>)
	pucAlignedHeap = ( uint8_t * ) uxAddress;
9000e7ac:	f023 0107 	bic.w	r1, r3, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
9000e7b0:	460b      	mov	r3, r1
9000e7b2:	e7e3      	b.n	9000e77c <pvPortMalloc+0xfc>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000e7b4:	6849      	ldr	r1, [r1, #4]
9000e7b6:	eb00 0e01 	add.w	lr, r0, r1
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000e7ba:	eb04 010e 	add.w	r1, r4, lr
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000e7be:	f8c4 e004 	str.w	lr, [r4, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000e7c2:	428a      	cmp	r2, r1
9000e7c4:	d001      	beq.n	9000e7ca <pvPortMalloc+0x14a>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000e7c6:	6022      	str	r2, [r4, #0]
	if( pxIterator != pxBlockToInsert )
9000e7c8:	e7b3      	b.n	9000e732 <pvPortMalloc+0xb2>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000e7ca:	4621      	mov	r1, r4
		if( pxIterator->pxNextFreeBlock != pxEnd )
9000e7cc:	42b2      	cmp	r2, r6
9000e7ce:	d0ac      	beq.n	9000e72a <pvPortMalloc+0xaa>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000e7d0:	6850      	ldr	r0, [r2, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000e7d2:	6812      	ldr	r2, [r2, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000e7d4:	4470      	add	r0, lr
9000e7d6:	6048      	str	r0, [r1, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000e7d8:	e7a7      	b.n	9000e72a <pvPortMalloc+0xaa>
9000e7da:	bf00      	nop
9000e7dc:	24020af8 	.word	0x24020af8
9000e7e0:	2403919c 	.word	0x2403919c
9000e7e4:	240391b0 	.word	0x240391b0
9000e7e8:	240391a4 	.word	0x240391a4
9000e7ec:	240391a8 	.word	0x240391a8
9000e7f0:	24020afc 	.word	0x24020afc
9000e7f4:	2403919c 	.word	0x2403919c
9000e7f8:	240391a0 	.word	0x240391a0

9000e7fc <vPortFree>:
	if( pv != NULL )
9000e7fc:	b1d0      	cbz	r0, 9000e834 <vPortFree+0x38>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
9000e7fe:	4a2c      	ldr	r2, [pc, #176]	; (9000e8b0 <vPortFree+0xb4>)
9000e800:	f850 3c04 	ldr.w	r3, [r0, #-4]
9000e804:	6812      	ldr	r2, [r2, #0]
9000e806:	4213      	tst	r3, r2
9000e808:	d00b      	beq.n	9000e822 <vPortFree+0x26>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
9000e80a:	f850 1c08 	ldr.w	r1, [r0, #-8]
9000e80e:	b191      	cbz	r1, 9000e836 <vPortFree+0x3a>
9000e810:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e814:	f383 8811 	msr	BASEPRI, r3
9000e818:	f3bf 8f6f 	isb	sy
9000e81c:	f3bf 8f4f 	dsb	sy
9000e820:	e7fe      	b.n	9000e820 <vPortFree+0x24>
9000e822:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e826:	f383 8811 	msr	BASEPRI, r3
9000e82a:	f3bf 8f6f 	isb	sy
9000e82e:	f3bf 8f4f 	dsb	sy
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
9000e832:	e7fe      	b.n	9000e832 <vPortFree+0x36>
9000e834:	4770      	bx	lr
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
9000e836:	ea23 0302 	bic.w	r3, r3, r2
{
9000e83a:	b530      	push	{r4, r5, lr}
9000e83c:	b083      	sub	sp, #12
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
9000e83e:	f840 3c04 	str.w	r3, [r0, #-4]
		puc -= xHeapStructSize;
9000e842:	f1a0 0408 	sub.w	r4, r0, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
9000e846:	4d1b      	ldr	r5, [pc, #108]	; (9000e8b4 <vPortFree+0xb8>)
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
9000e848:	9001      	str	r0, [sp, #4]
				vTaskSuspendAll();
9000e84a:	f001 ff7f 	bl	9001074c <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
9000e84e:	9801      	ldr	r0, [sp, #4]
9000e850:	682a      	ldr	r2, [r5, #0]
9000e852:	f850 1c04 	ldr.w	r1, [r0, #-4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000e856:	4b18      	ldr	r3, [pc, #96]	; (9000e8b8 <vPortFree+0xbc>)
					xFreeBytesRemaining += pxLink->xBlockSize;
9000e858:	440a      	add	r2, r1
9000e85a:	602a      	str	r2, [r5, #0]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000e85c:	461a      	mov	r2, r3
9000e85e:	681b      	ldr	r3, [r3, #0]
9000e860:	429c      	cmp	r4, r3
9000e862:	d8fb      	bhi.n	9000e85c <vPortFree+0x60>
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
9000e864:	6850      	ldr	r0, [r2, #4]
9000e866:	eb02 0c00 	add.w	ip, r2, r0
9000e86a:	4564      	cmp	r4, ip
9000e86c:	d00f      	beq.n	9000e88e <vPortFree+0x92>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000e86e:	1860      	adds	r0, r4, r1
9000e870:	4283      	cmp	r3, r0
9000e872:	d014      	beq.n	9000e89e <vPortFree+0xa2>
	if( pxIterator != pxBlockToInsert )
9000e874:	42a2      	cmp	r2, r4
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000e876:	6023      	str	r3, [r4, #0]
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
9000e878:	bf18      	it	ne
9000e87a:	6014      	strne	r4, [r2, #0]
					xNumberOfSuccessfulFrees++;
9000e87c:	4a0f      	ldr	r2, [pc, #60]	; (9000e8bc <vPortFree+0xc0>)
9000e87e:	6813      	ldr	r3, [r2, #0]
9000e880:	3301      	adds	r3, #1
9000e882:	6013      	str	r3, [r2, #0]
}
9000e884:	b003      	add	sp, #12
9000e886:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
				( void ) xTaskResumeAll();
9000e88a:	f001 bf67 	b.w	9001075c <xTaskResumeAll>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000e88e:	4401      	add	r1, r0
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000e890:	1850      	adds	r0, r2, r1
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000e892:	6051      	str	r1, [r2, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000e894:	4283      	cmp	r3, r0
9000e896:	d001      	beq.n	9000e89c <vPortFree+0xa0>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000e898:	6013      	str	r3, [r2, #0]
	if( pxIterator != pxBlockToInsert )
9000e89a:	e7ef      	b.n	9000e87c <vPortFree+0x80>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000e89c:	4614      	mov	r4, r2
		if( pxIterator->pxNextFreeBlock != pxEnd )
9000e89e:	4808      	ldr	r0, [pc, #32]	; (9000e8c0 <vPortFree+0xc4>)
9000e8a0:	6800      	ldr	r0, [r0, #0]
9000e8a2:	4283      	cmp	r3, r0
9000e8a4:	d0e6      	beq.n	9000e874 <vPortFree+0x78>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000e8a6:	e9d3 3000 	ldrd	r3, r0, [r3]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000e8aa:	4401      	add	r1, r0
9000e8ac:	6061      	str	r1, [r4, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000e8ae:	e7e1      	b.n	9000e874 <vPortFree+0x78>
9000e8b0:	2403919c 	.word	0x2403919c
9000e8b4:	240391a0 	.word	0x240391a0
9000e8b8:	240391b0 	.word	0x240391b0
9000e8bc:	240391ac 	.word	0x240391ac
9000e8c0:	24020af8 	.word	0x24020af8

9000e8c4 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
9000e8c4:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
9000e8c8:	f04f 31ff 	mov.w	r1, #4294967295
	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
9000e8cc:	2200      	movs	r2, #0
	pxList->xListEnd.xItemValue = portMAX_DELAY;
9000e8ce:	6081      	str	r1, [r0, #8]
	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
9000e8d0:	6002      	str	r2, [r0, #0]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
9000e8d2:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
9000e8d4:	e9c0 3303 	strd	r3, r3, [r0, #12]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
9000e8d8:	4770      	bx	lr
9000e8da:	bf00      	nop

9000e8dc <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
9000e8dc:	2300      	movs	r3, #0
9000e8de:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
9000e8e0:	4770      	bx	lr
9000e8e2:	bf00      	nop

9000e8e4 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
9000e8e4:	6843      	ldr	r3, [r0, #4]
	pxIndex->pxPrevious = pxNewListItem;

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
9000e8e6:	6802      	ldr	r2, [r0, #0]
{
9000e8e8:	b410      	push	{r4}
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
9000e8ea:	689c      	ldr	r4, [r3, #8]
	( pxList->uxNumberOfItems )++;
9000e8ec:	3201      	adds	r2, #1
	pxNewListItem->pxNext = pxIndex;
9000e8ee:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
9000e8f0:	608c      	str	r4, [r1, #8]
	pxIndex->pxPrevious->pxNext = pxNewListItem;
9000e8f2:	689c      	ldr	r4, [r3, #8]
9000e8f4:	6061      	str	r1, [r4, #4]
	pxIndex->pxPrevious = pxNewListItem;
9000e8f6:	6099      	str	r1, [r3, #8]
}
9000e8f8:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxNewListItem->pxContainer = pxList;
9000e8fc:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
9000e8fe:	6002      	str	r2, [r0, #0]
}
9000e900:	4770      	bx	lr
9000e902:	bf00      	nop

9000e904 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
9000e904:	b430      	push	{r4, r5}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
9000e906:	680d      	ldr	r5, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
9000e908:	1c6b      	adds	r3, r5, #1
9000e90a:	d010      	beq.n	9000e92e <vListInsert+0x2a>
			4) Using a queue or semaphore before it has been initialised or
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		**********************************************************************/

		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
9000e90c:	f100 0308 	add.w	r3, r0, #8
9000e910:	461c      	mov	r4, r3
9000e912:	685b      	ldr	r3, [r3, #4]
9000e914:	681a      	ldr	r2, [r3, #0]
9000e916:	42aa      	cmp	r2, r5
9000e918:	d9fa      	bls.n	9000e910 <vListInsert+0xc>

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
9000e91a:	6802      	ldr	r2, [r0, #0]
	pxNewListItem->pxNext = pxIterator->pxNext;
9000e91c:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
9000e91e:	3201      	adds	r2, #1
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
9000e920:	6099      	str	r1, [r3, #8]
	pxNewListItem->pxPrevious = pxIterator;
9000e922:	608c      	str	r4, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
9000e924:	6061      	str	r1, [r4, #4]
	pxNewListItem->pxContainer = pxList;
9000e926:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
9000e928:	6002      	str	r2, [r0, #0]
}
9000e92a:	bc30      	pop	{r4, r5}
9000e92c:	4770      	bx	lr
		pxIterator = pxList->xListEnd.pxPrevious;
9000e92e:	6904      	ldr	r4, [r0, #16]
	pxNewListItem->pxNext = pxIterator->pxNext;
9000e930:	6863      	ldr	r3, [r4, #4]
9000e932:	e7f2      	b.n	9000e91a <vListInsert+0x16>

9000e934 <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
9000e934:	6903      	ldr	r3, [r0, #16]
{
9000e936:	b410      	push	{r4}

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
9000e938:	685c      	ldr	r4, [r3, #4]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
9000e93a:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
	if( pxList->pxIndex == pxItemToRemove )
9000e93e:	4284      	cmp	r4, r0

	pxItemToRemove->pxContainer = NULL;
	( pxList->uxNumberOfItems )--;

	return pxList->uxNumberOfItems;
}
9000e940:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
9000e944:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
9000e946:	6051      	str	r1, [r2, #4]
	pxItemToRemove->pxContainer = NULL;
9000e948:	f04f 0100 	mov.w	r1, #0
		pxList->pxIndex = pxItemToRemove->pxPrevious;
9000e94c:	bf08      	it	eq
9000e94e:	605a      	streq	r2, [r3, #4]
	( pxList->uxNumberOfItems )--;
9000e950:	681a      	ldr	r2, [r3, #0]
	pxItemToRemove->pxContainer = NULL;
9000e952:	6101      	str	r1, [r0, #16]
	( pxList->uxNumberOfItems )--;
9000e954:	3a01      	subs	r2, #1
9000e956:	601a      	str	r2, [r3, #0]
	return pxList->uxNumberOfItems;
9000e958:	6818      	ldr	r0, [r3, #0]
}
9000e95a:	4770      	bx	lr

9000e95c <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
9000e95c:	4808      	ldr	r0, [pc, #32]	; (9000e980 <prvPortStartFirstTask+0x24>)
9000e95e:	6800      	ldr	r0, [r0, #0]
9000e960:	6800      	ldr	r0, [r0, #0]
9000e962:	f380 8808 	msr	MSP, r0
9000e966:	f04f 0000 	mov.w	r0, #0
9000e96a:	f380 8814 	msr	CONTROL, r0
9000e96e:	b662      	cpsie	i
9000e970:	b661      	cpsie	f
9000e972:	f3bf 8f4f 	dsb	sy
9000e976:	f3bf 8f6f 	isb	sy
9000e97a:	df00      	svc	0
9000e97c:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
9000e97e:	0000      	.short	0x0000
9000e980:	e000ed08 	.word	0xe000ed08

9000e984 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
9000e984:	f8df 000c 	ldr.w	r0, [pc, #12]	; 9000e994 <vPortEnableVFP+0x10>
9000e988:	6801      	ldr	r1, [r0, #0]
9000e98a:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
9000e98e:	6001      	str	r1, [r0, #0]
9000e990:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
9000e992:	0000      	.short	0x0000
9000e994:	e000ed88 	.word	0xe000ed88

9000e998 <prvTaskExitError>:
	configASSERT( uxCriticalNesting == ~0UL );
9000e998:	4b0e      	ldr	r3, [pc, #56]	; (9000e9d4 <prvTaskExitError+0x3c>)
{
9000e99a:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
9000e99c:	2200      	movs	r2, #0
	configASSERT( uxCriticalNesting == ~0UL );
9000e99e:	681b      	ldr	r3, [r3, #0]
volatile uint32_t ulDummy = 0;
9000e9a0:	9201      	str	r2, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
9000e9a2:	3301      	adds	r3, #1
9000e9a4:	d008      	beq.n	9000e9b8 <prvTaskExitError+0x20>
9000e9a6:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e9aa:	f383 8811 	msr	BASEPRI, r3
9000e9ae:	f3bf 8f6f 	isb	sy
9000e9b2:	f3bf 8f4f 	dsb	sy
9000e9b6:	e7fe      	b.n	9000e9b6 <prvTaskExitError+0x1e>
9000e9b8:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e9bc:	f383 8811 	msr	BASEPRI, r3
9000e9c0:	f3bf 8f6f 	isb	sy
9000e9c4:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
9000e9c8:	9b01      	ldr	r3, [sp, #4]
9000e9ca:	2b00      	cmp	r3, #0
9000e9cc:	d0fc      	beq.n	9000e9c8 <prvTaskExitError+0x30>
}
9000e9ce:	b002      	add	sp, #8
9000e9d0:	4770      	bx	lr
9000e9d2:	bf00      	nop
9000e9d4:	2400007c 	.word	0x2400007c

9000e9d8 <pxPortInitialiseStack>:
{
9000e9d8:	4603      	mov	r3, r0
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
9000e9da:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
9000e9de:	4809      	ldr	r0, [pc, #36]	; (9000ea04 <pxPortInitialiseStack+0x2c>)
{
9000e9e0:	b410      	push	{r4}
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
9000e9e2:	f04f 7480 	mov.w	r4, #16777216	; 0x1000000
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
9000e9e6:	f843 0c0c 	str.w	r0, [r3, #-12]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
9000e9ea:	f843 2c20 	str.w	r2, [r3, #-32]
}
9000e9ee:	f1a3 0044 	sub.w	r0, r3, #68	; 0x44
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
9000e9f2:	e943 1402 	strd	r1, r4, [r3, #-8]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
9000e9f6:	f06f 0102 	mvn.w	r1, #2
}
9000e9fa:	f85d 4b04 	ldr.w	r4, [sp], #4
	*pxTopOfStack = portINITIAL_EXC_RETURN;
9000e9fe:	f843 1c24 	str.w	r1, [r3, #-36]
}
9000ea02:	4770      	bx	lr
9000ea04:	9000e999 	.word	0x9000e999
	...

9000ea10 <SVC_Handler>:
	__asm volatile (
9000ea10:	4b07      	ldr	r3, [pc, #28]	; (9000ea30 <pxCurrentTCBConst2>)
9000ea12:	6819      	ldr	r1, [r3, #0]
9000ea14:	6808      	ldr	r0, [r1, #0]
9000ea16:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000ea1a:	f380 8809 	msr	PSP, r0
9000ea1e:	f3bf 8f6f 	isb	sy
9000ea22:	f04f 0000 	mov.w	r0, #0
9000ea26:	f380 8811 	msr	BASEPRI, r0
9000ea2a:	4770      	bx	lr
9000ea2c:	f3af 8000 	nop.w

9000ea30 <pxCurrentTCBConst2>:
9000ea30:	24039200 	.word	0x24039200

9000ea34 <vPortEnterCritical>:
9000ea34:	f04f 0350 	mov.w	r3, #80	; 0x50
9000ea38:	f383 8811 	msr	BASEPRI, r3
9000ea3c:	f3bf 8f6f 	isb	sy
9000ea40:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
9000ea44:	4a0b      	ldr	r2, [pc, #44]	; (9000ea74 <vPortEnterCritical+0x40>)
9000ea46:	6813      	ldr	r3, [r2, #0]
9000ea48:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
9000ea4a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
9000ea4c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
9000ea4e:	d000      	beq.n	9000ea52 <vPortEnterCritical+0x1e>
}
9000ea50:	4770      	bx	lr
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
9000ea52:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000ea56:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
9000ea5a:	b2db      	uxtb	r3, r3
9000ea5c:	2b00      	cmp	r3, #0
9000ea5e:	d0f7      	beq.n	9000ea50 <vPortEnterCritical+0x1c>
9000ea60:	f04f 0350 	mov.w	r3, #80	; 0x50
9000ea64:	f383 8811 	msr	BASEPRI, r3
9000ea68:	f3bf 8f6f 	isb	sy
9000ea6c:	f3bf 8f4f 	dsb	sy
9000ea70:	e7fe      	b.n	9000ea70 <vPortEnterCritical+0x3c>
9000ea72:	bf00      	nop
9000ea74:	2400007c 	.word	0x2400007c

9000ea78 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
9000ea78:	4a08      	ldr	r2, [pc, #32]	; (9000ea9c <vPortExitCritical+0x24>)
9000ea7a:	6813      	ldr	r3, [r2, #0]
9000ea7c:	b943      	cbnz	r3, 9000ea90 <vPortExitCritical+0x18>
9000ea7e:	f04f 0350 	mov.w	r3, #80	; 0x50
9000ea82:	f383 8811 	msr	BASEPRI, r3
9000ea86:	f3bf 8f6f 	isb	sy
9000ea8a:	f3bf 8f4f 	dsb	sy
9000ea8e:	e7fe      	b.n	9000ea8e <vPortExitCritical+0x16>
	uxCriticalNesting--;
9000ea90:	3b01      	subs	r3, #1
9000ea92:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
9000ea94:	b90b      	cbnz	r3, 9000ea9a <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
9000ea96:	f383 8811 	msr	BASEPRI, r3
}
9000ea9a:	4770      	bx	lr
9000ea9c:	2400007c 	.word	0x2400007c

9000eaa0 <PendSV_Handler>:
	__asm volatile
9000eaa0:	f3ef 8009 	mrs	r0, PSP
9000eaa4:	f3bf 8f6f 	isb	sy
9000eaa8:	4b15      	ldr	r3, [pc, #84]	; (9000eb00 <pxCurrentTCBConst>)
9000eaaa:	681a      	ldr	r2, [r3, #0]
9000eaac:	f01e 0f10 	tst.w	lr, #16
9000eab0:	bf08      	it	eq
9000eab2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
9000eab6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000eaba:	6010      	str	r0, [r2, #0]
9000eabc:	e92d 0009 	stmdb	sp!, {r0, r3}
9000eac0:	f04f 0050 	mov.w	r0, #80	; 0x50
9000eac4:	f380 8811 	msr	BASEPRI, r0
9000eac8:	f3bf 8f4f 	dsb	sy
9000eacc:	f3bf 8f6f 	isb	sy
9000ead0:	f001 fe80 	bl	900107d4 <vTaskSwitchContext>
9000ead4:	f04f 0000 	mov.w	r0, #0
9000ead8:	f380 8811 	msr	BASEPRI, r0
9000eadc:	bc09      	pop	{r0, r3}
9000eade:	6819      	ldr	r1, [r3, #0]
9000eae0:	6808      	ldr	r0, [r1, #0]
9000eae2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000eae6:	f01e 0f10 	tst.w	lr, #16
9000eaea:	bf08      	it	eq
9000eaec:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
9000eaf0:	f380 8809 	msr	PSP, r0
9000eaf4:	f3bf 8f6f 	isb	sy
9000eaf8:	4770      	bx	lr
9000eafa:	bf00      	nop
9000eafc:	f3af 8000 	nop.w

9000eb00 <pxCurrentTCBConst>:
9000eb00:	24039200 	.word	0x24039200

9000eb04 <xPortSysTickHandler>:
{
9000eb04:	b508      	push	{r3, lr}
	__asm volatile
9000eb06:	f04f 0350 	mov.w	r3, #80	; 0x50
9000eb0a:	f383 8811 	msr	BASEPRI, r3
9000eb0e:	f3bf 8f6f 	isb	sy
9000eb12:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
9000eb16:	f001 fe37 	bl	90010788 <xTaskIncrementTick>
9000eb1a:	b128      	cbz	r0, 9000eb28 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
9000eb1c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000eb20:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000eb24:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
9000eb28:	2300      	movs	r3, #0
9000eb2a:	f383 8811 	msr	BASEPRI, r3
}
9000eb2e:	bd08      	pop	{r3, pc}

9000eb30 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
9000eb30:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
9000eb34:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000eb36:	4806      	ldr	r0, [pc, #24]	; (9000eb50 <vPortSetupTimerInterrupt+0x20>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
9000eb38:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000eb3a:	4906      	ldr	r1, [pc, #24]	; (9000eb54 <vPortSetupTimerInterrupt+0x24>)
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
9000eb3c:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000eb3e:	6803      	ldr	r3, [r0, #0]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
9000eb40:	2007      	movs	r0, #7
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000eb42:	fba1 1303 	umull	r1, r3, r1, r3
9000eb46:	099b      	lsrs	r3, r3, #6
9000eb48:	3b01      	subs	r3, #1
9000eb4a:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
9000eb4c:	6110      	str	r0, [r2, #16]
}
9000eb4e:	4770      	bx	lr
9000eb50:	2400006c 	.word	0x2400006c
9000eb54:	10624dd3 	.word	0x10624dd3

9000eb58 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
9000eb58:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000eb5c:	4a48      	ldr	r2, [pc, #288]	; (9000ec80 <xPortStartScheduler+0x128>)
9000eb5e:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
9000eb62:	4291      	cmp	r1, r2
9000eb64:	d041      	beq.n	9000ebea <xPortStartScheduler+0x92>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
9000eb66:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
9000eb6a:	4b46      	ldr	r3, [pc, #280]	; (9000ec84 <xPortStartScheduler+0x12c>)
9000eb6c:	429a      	cmp	r2, r3
9000eb6e:	d033      	beq.n	9000ebd8 <xPortStartScheduler+0x80>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
9000eb70:	4b45      	ldr	r3, [pc, #276]	; (9000ec88 <xPortStartScheduler+0x130>)
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
9000eb72:	20ff      	movs	r0, #255	; 0xff
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000eb74:	4945      	ldr	r1, [pc, #276]	; (9000ec8c <xPortStartScheduler+0x134>)
{
9000eb76:	b570      	push	{r4, r5, r6, lr}
		ulOriginalPriority = *pucFirstUserPriorityRegister;
9000eb78:	781a      	ldrb	r2, [r3, #0]
{
9000eb7a:	b084      	sub	sp, #16
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
9000eb7c:	4c44      	ldr	r4, [pc, #272]	; (9000ec90 <xPortStartScheduler+0x138>)
		ulOriginalPriority = *pucFirstUserPriorityRegister;
9000eb7e:	b2d2      	uxtb	r2, r2
9000eb80:	9202      	str	r2, [sp, #8]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
9000eb82:	2207      	movs	r2, #7
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
9000eb84:	7018      	strb	r0, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
9000eb86:	781b      	ldrb	r3, [r3, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
9000eb88:	6022      	str	r2, [r4, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
9000eb8a:	b2db      	uxtb	r3, r3
9000eb8c:	f88d 3007 	strb.w	r3, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000eb90:	f89d 3007 	ldrb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000eb94:	f89d 2007 	ldrb.w	r2, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000eb98:	f003 0350 	and.w	r3, r3, #80	; 0x50
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000eb9c:	0610      	lsls	r0, r2, #24
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000eb9e:	700b      	strb	r3, [r1, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000eba0:	d511      	bpl.n	9000ebc6 <xPortStartScheduler+0x6e>
9000eba2:	2206      	movs	r2, #6
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
9000eba4:	f89d 3007 	ldrb.w	r3, [sp, #7]
9000eba8:	4610      	mov	r0, r2
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000ebaa:	3a01      	subs	r2, #1
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
9000ebac:	005b      	lsls	r3, r3, #1
9000ebae:	b2db      	uxtb	r3, r3
9000ebb0:	f88d 3007 	strb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000ebb4:	f89d 1007 	ldrb.w	r1, [sp, #7]
9000ebb8:	0609      	lsls	r1, r1, #24
9000ebba:	d4f3      	bmi.n	9000eba4 <xPortStartScheduler+0x4c>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
9000ebbc:	2803      	cmp	r0, #3
9000ebbe:	6020      	str	r0, [r4, #0]
9000ebc0:	f88d 3007 	strb.w	r3, [sp, #7]
9000ebc4:	d01a      	beq.n	9000ebfc <xPortStartScheduler+0xa4>
	__asm volatile
9000ebc6:	f04f 0350 	mov.w	r3, #80	; 0x50
9000ebca:	f383 8811 	msr	BASEPRI, r3
9000ebce:	f3bf 8f6f 	isb	sy
9000ebd2:	f3bf 8f4f 	dsb	sy
9000ebd6:	e7fe      	b.n	9000ebd6 <xPortStartScheduler+0x7e>
9000ebd8:	f04f 0350 	mov.w	r3, #80	; 0x50
9000ebdc:	f383 8811 	msr	BASEPRI, r3
9000ebe0:	f3bf 8f6f 	isb	sy
9000ebe4:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
9000ebe8:	e7fe      	b.n	9000ebe8 <xPortStartScheduler+0x90>
9000ebea:	f04f 0350 	mov.w	r3, #80	; 0x50
9000ebee:	f383 8811 	msr	BASEPRI, r3
9000ebf2:	f3bf 8f6f 	isb	sy
9000ebf6:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
9000ebfa:	e7fe      	b.n	9000ebfa <xPortStartScheduler+0xa2>
		*pucFirstUserPriorityRegister = ulOriginalPriority;
9000ebfc:	9b02      	ldr	r3, [sp, #8]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
9000ebfe:	f04f 25e0 	mov.w	r5, #3758153728	; 0xe000e000
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
9000ec02:	f44f 7140 	mov.w	r1, #768	; 0x300
		*pucFirstUserPriorityRegister = ulOriginalPriority;
9000ec06:	4a20      	ldr	r2, [pc, #128]	; (9000ec88 <xPortStartScheduler+0x130>)
9000ec08:	b2db      	uxtb	r3, r3
	uxCriticalNesting = 0;
9000ec0a:	4e22      	ldr	r6, [pc, #136]	; (9000ec94 <xPortStartScheduler+0x13c>)
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
9000ec0c:	6021      	str	r1, [r4, #0]
	uxCriticalNesting = 0;
9000ec0e:	2400      	movs	r4, #0
		*pucFirstUserPriorityRegister = ulOriginalPriority;
9000ec10:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
9000ec12:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
9000ec16:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
9000ec1a:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
9000ec1e:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
9000ec22:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
9000ec26:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	vPortSetupTimerInterrupt();
9000ec2a:	f7ff ff81 	bl	9000eb30 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
9000ec2e:	6034      	str	r4, [r6, #0]
	vPortEnableVFP();
9000ec30:	f7ff fea8 	bl	9000e984 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
9000ec34:	f8d5 3f34 	ldr.w	r3, [r5, #3892]	; 0xf34
9000ec38:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
9000ec3c:	f8c5 3f34 	str.w	r3, [r5, #3892]	; 0xf34
	prvPortStartFirstTask();
9000ec40:	f7ff fe8c 	bl	9000e95c <prvPortStartFirstTask>
	vTaskSwitchContext();
9000ec44:	f001 fdc6 	bl	900107d4 <vTaskSwitchContext>
	configASSERT( uxCriticalNesting == ~0UL );
9000ec48:	6833      	ldr	r3, [r6, #0]
volatile uint32_t ulDummy = 0;
9000ec4a:	9403      	str	r4, [sp, #12]
	configASSERT( uxCriticalNesting == ~0UL );
9000ec4c:	3301      	adds	r3, #1
9000ec4e:	d008      	beq.n	9000ec62 <xPortStartScheduler+0x10a>
9000ec50:	f04f 0350 	mov.w	r3, #80	; 0x50
9000ec54:	f383 8811 	msr	BASEPRI, r3
9000ec58:	f3bf 8f6f 	isb	sy
9000ec5c:	f3bf 8f4f 	dsb	sy
9000ec60:	e7fe      	b.n	9000ec60 <xPortStartScheduler+0x108>
9000ec62:	f04f 0350 	mov.w	r3, #80	; 0x50
9000ec66:	f383 8811 	msr	BASEPRI, r3
9000ec6a:	f3bf 8f6f 	isb	sy
9000ec6e:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
9000ec72:	9b03      	ldr	r3, [sp, #12]
9000ec74:	2b00      	cmp	r3, #0
9000ec76:	d0fc      	beq.n	9000ec72 <xPortStartScheduler+0x11a>
}
9000ec78:	2000      	movs	r0, #0
9000ec7a:	b004      	add	sp, #16
9000ec7c:	bd70      	pop	{r4, r5, r6, pc}
9000ec7e:	bf00      	nop
9000ec80:	410fc271 	.word	0x410fc271
9000ec84:	410fc270 	.word	0x410fc270
9000ec88:	e000e400 	.word	0xe000e400
9000ec8c:	240391b8 	.word	0x240391b8
9000ec90:	240391bc 	.word	0x240391bc
9000ec94:	2400007c 	.word	0x2400007c

9000ec98 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
9000ec98:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
9000ec9c:	2b0f      	cmp	r3, #15
9000ec9e:	d90e      	bls.n	9000ecbe <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
9000eca0:	4911      	ldr	r1, [pc, #68]	; (9000ece8 <vPortValidateInterruptPriority+0x50>)
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
9000eca2:	4a12      	ldr	r2, [pc, #72]	; (9000ecec <vPortValidateInterruptPriority+0x54>)
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
9000eca4:	5c5b      	ldrb	r3, [r3, r1]
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
9000eca6:	7812      	ldrb	r2, [r2, #0]
9000eca8:	429a      	cmp	r2, r3
9000ecaa:	d908      	bls.n	9000ecbe <vPortValidateInterruptPriority+0x26>
9000ecac:	f04f 0350 	mov.w	r3, #80	; 0x50
9000ecb0:	f383 8811 	msr	BASEPRI, r3
9000ecb4:	f3bf 8f6f 	isb	sy
9000ecb8:	f3bf 8f4f 	dsb	sy
9000ecbc:	e7fe      	b.n	9000ecbc <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
9000ecbe:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000ecc2:	4a0b      	ldr	r2, [pc, #44]	; (9000ecf0 <vPortValidateInterruptPriority+0x58>)
9000ecc4:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
9000ecc8:	6812      	ldr	r2, [r2, #0]
9000ecca:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
9000ecce:	4293      	cmp	r3, r2
9000ecd0:	d908      	bls.n	9000ece4 <vPortValidateInterruptPriority+0x4c>
9000ecd2:	f04f 0350 	mov.w	r3, #80	; 0x50
9000ecd6:	f383 8811 	msr	BASEPRI, r3
9000ecda:	f3bf 8f6f 	isb	sy
9000ecde:	f3bf 8f4f 	dsb	sy
9000ece2:	e7fe      	b.n	9000ece2 <vPortValidateInterruptPriority+0x4a>
	}
9000ece4:	4770      	bx	lr
9000ece6:	bf00      	nop
9000ece8:	e000e3f0 	.word	0xe000e3f0
9000ecec:	240391b8 	.word	0x240391b8
9000ecf0:	240391bc 	.word	0x240391bc

9000ecf4 <prvCopyDataToQueue>:

#endif /* configUSE_MUTEXES */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
9000ecf4:	b570      	push	{r4, r5, r6, lr}
9000ecf6:	4615      	mov	r5, r2

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
9000ecf8:	6c02      	ldr	r2, [r0, #64]	; 0x40
{
9000ecfa:	4604      	mov	r4, r0
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000ecfc:	6b86      	ldr	r6, [r0, #56]	; 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
9000ecfe:	b92a      	cbnz	r2, 9000ed0c <prvCopyDataToQueue+0x18>
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000ed00:	6805      	ldr	r5, [r0, #0]
9000ed02:	b365      	cbz	r5, 9000ed5e <prvCopyDataToQueue+0x6a>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000ed04:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
9000ed06:	4610      	mov	r0, r2
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000ed08:	63a6      	str	r6, [r4, #56]	; 0x38

	return xReturn;
}
9000ed0a:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
9000ed0c:	b97d      	cbnz	r5, 9000ed2e <prvCopyDataToQueue+0x3a>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
9000ed0e:	6840      	ldr	r0, [r0, #4]
9000ed10:	f019 fa9c 	bl	9002824c <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000ed14:	6863      	ldr	r3, [r4, #4]
9000ed16:	6c22      	ldr	r2, [r4, #64]	; 0x40
9000ed18:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000ed1a:	68a2      	ldr	r2, [r4, #8]
9000ed1c:	4293      	cmp	r3, r2
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000ed1e:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000ed20:	d319      	bcc.n	9000ed56 <prvCopyDataToQueue+0x62>
			pxQueue->pcWriteTo = pxQueue->pcHead;
9000ed22:	6822      	ldr	r2, [r4, #0]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000ed24:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
9000ed26:	4628      	mov	r0, r5
			pxQueue->pcWriteTo = pxQueue->pcHead;
9000ed28:	6062      	str	r2, [r4, #4]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000ed2a:	63a6      	str	r6, [r4, #56]	; 0x38
}
9000ed2c:	bd70      	pop	{r4, r5, r6, pc}
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
9000ed2e:	68c0      	ldr	r0, [r0, #12]
9000ed30:	f019 fa8c 	bl	9002824c <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
9000ed34:	6c22      	ldr	r2, [r4, #64]	; 0x40
9000ed36:	68e3      	ldr	r3, [r4, #12]
9000ed38:	4251      	negs	r1, r2
9000ed3a:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000ed3c:	6822      	ldr	r2, [r4, #0]
9000ed3e:	4293      	cmp	r3, r2
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
9000ed40:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000ed42:	d202      	bcs.n	9000ed4a <prvCopyDataToQueue+0x56>
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
9000ed44:	68a3      	ldr	r3, [r4, #8]
9000ed46:	440b      	add	r3, r1
9000ed48:	60e3      	str	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
9000ed4a:	2d02      	cmp	r5, #2
9000ed4c:	d00d      	beq.n	9000ed6a <prvCopyDataToQueue+0x76>
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000ed4e:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
9000ed50:	2000      	movs	r0, #0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000ed52:	63a6      	str	r6, [r4, #56]	; 0x38
}
9000ed54:	bd70      	pop	{r4, r5, r6, pc}
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000ed56:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
9000ed58:	4628      	mov	r0, r5
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000ed5a:	63a6      	str	r6, [r4, #56]	; 0x38
}
9000ed5c:	bd70      	pop	{r4, r5, r6, pc}
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
9000ed5e:	6880      	ldr	r0, [r0, #8]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000ed60:	3601      	adds	r6, #1
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
9000ed62:	f001 ff1f 	bl	90010ba4 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
9000ed66:	60a5      	str	r5, [r4, #8]
9000ed68:	e7ce      	b.n	9000ed08 <prvCopyDataToQueue+0x14>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000ed6a:	2e01      	cmp	r6, #1
BaseType_t xReturn = pdFALSE;
9000ed6c:	f04f 0000 	mov.w	r0, #0
9000ed70:	bf38      	it	cc
9000ed72:	2601      	movcc	r6, #1
9000ed74:	e7c8      	b.n	9000ed08 <prvCopyDataToQueue+0x14>
9000ed76:	bf00      	nop

9000ed78 <xQueueGenericCreateStatic>:
	{
9000ed78:	b530      	push	{r4, r5, lr}
9000ed7a:	b083      	sub	sp, #12
9000ed7c:	f89d 4018 	ldrb.w	r4, [sp, #24]
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
9000ed80:	b940      	cbnz	r0, 9000ed94 <xQueueGenericCreateStatic+0x1c>
9000ed82:	f04f 0350 	mov.w	r3, #80	; 0x50
9000ed86:	f383 8811 	msr	BASEPRI, r3
9000ed8a:	f3bf 8f6f 	isb	sy
9000ed8e:	f3bf 8f4f 	dsb	sy
9000ed92:	e7fe      	b.n	9000ed92 <xQueueGenericCreateStatic+0x1a>
		configASSERT( pxStaticQueue != NULL );
9000ed94:	461d      	mov	r5, r3
9000ed96:	b153      	cbz	r3, 9000edae <xQueueGenericCreateStatic+0x36>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
9000ed98:	b30a      	cbz	r2, 9000edde <xQueueGenericCreateStatic+0x66>
9000ed9a:	b989      	cbnz	r1, 9000edc0 <xQueueGenericCreateStatic+0x48>
9000ed9c:	f04f 0350 	mov.w	r3, #80	; 0x50
9000eda0:	f383 8811 	msr	BASEPRI, r3
9000eda4:	f3bf 8f6f 	isb	sy
9000eda8:	f3bf 8f4f 	dsb	sy
9000edac:	e7fe      	b.n	9000edac <xQueueGenericCreateStatic+0x34>
9000edae:	f04f 0350 	mov.w	r3, #80	; 0x50
9000edb2:	f383 8811 	msr	BASEPRI, r3
9000edb6:	f3bf 8f6f 	isb	sy
9000edba:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
9000edbe:	e7fe      	b.n	9000edbe <xQueueGenericCreateStatic+0x46>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
9000edc0:	b16a      	cbz	r2, 9000edde <xQueueGenericCreateStatic+0x66>
			volatile size_t xSize = sizeof( StaticQueue_t );
9000edc2:	2350      	movs	r3, #80	; 0x50
9000edc4:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
9000edc6:	9b01      	ldr	r3, [sp, #4]
9000edc8:	2b50      	cmp	r3, #80	; 0x50
9000edca:	d013      	beq.n	9000edf4 <xQueueGenericCreateStatic+0x7c>
9000edcc:	f04f 0350 	mov.w	r3, #80	; 0x50
9000edd0:	f383 8811 	msr	BASEPRI, r3
9000edd4:	f3bf 8f6f 	isb	sy
9000edd8:	f3bf 8f4f 	dsb	sy
9000eddc:	e7fe      	b.n	9000eddc <xQueueGenericCreateStatic+0x64>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
9000edde:	2900      	cmp	r1, #0
9000ede0:	d0ef      	beq.n	9000edc2 <xQueueGenericCreateStatic+0x4a>
9000ede2:	f04f 0350 	mov.w	r3, #80	; 0x50
9000ede6:	f383 8811 	msr	BASEPRI, r3
9000edea:	f3bf 8f6f 	isb	sy
9000edee:	f3bf 8f4f 	dsb	sy
9000edf2:	e7fe      	b.n	9000edf2 <xQueueGenericCreateStatic+0x7a>
	if( uxItemSize == ( UBaseType_t ) 0 )
9000edf4:	2900      	cmp	r1, #0
9000edf6:	bf08      	it	eq
9000edf8:	462a      	moveq	r2, r5
	pxNewQueue->uxLength = uxQueueLength;
9000edfa:	63e8      	str	r0, [r5, #60]	; 0x3c
	pxNewQueue->uxItemSize = uxItemSize;
9000edfc:	6429      	str	r1, [r5, #64]	; 0x40
9000edfe:	602a      	str	r2, [r5, #0]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
9000ee00:	9a01      	ldr	r2, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000ee02:	2201      	movs	r2, #1
9000ee04:	f885 2046 	strb.w	r2, [r5, #70]	; 0x46
	taskENTER_CRITICAL();
9000ee08:	f7ff fe14 	bl	9000ea34 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ee0c:	6829      	ldr	r1, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000ee0e:	2300      	movs	r3, #0
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000ee10:	6069      	str	r1, [r5, #4]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000ee12:	63ab      	str	r3, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ee14:	e9d5 200f 	ldrd	r2, r0, [r5, #60]	; 0x3c
9000ee18:	fb00 f202 	mul.w	r2, r0, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ee1c:	1a10      	subs	r0, r2, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ee1e:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ee20:	4401      	add	r1, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ee22:	60aa      	str	r2, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
9000ee24:	22ff      	movs	r2, #255	; 0xff
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000ee26:	f105 0010 	add.w	r0, r5, #16
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ee2a:	60e9      	str	r1, [r5, #12]
		pxQueue->cRxLock = queueUNLOCKED;
9000ee2c:	f885 2044 	strb.w	r2, [r5, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000ee30:	f885 2045 	strb.w	r2, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000ee34:	f7ff fd46 	bl	9000e8c4 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000ee38:	f105 0024 	add.w	r0, r5, #36	; 0x24
9000ee3c:	f7ff fd42 	bl	9000e8c4 <vListInitialise>
	taskEXIT_CRITICAL();
9000ee40:	f7ff fe1a 	bl	9000ea78 <vPortExitCritical>
	}
9000ee44:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
9000ee46:	f885 404c 	strb.w	r4, [r5, #76]	; 0x4c
	}
9000ee4a:	b003      	add	sp, #12
9000ee4c:	bd30      	pop	{r4, r5, pc}
9000ee4e:	bf00      	nop

9000ee50 <xQueueGenericCreate>:
	{
9000ee50:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
9000ee52:	b940      	cbnz	r0, 9000ee66 <xQueueGenericCreate+0x16>
9000ee54:	f04f 0350 	mov.w	r3, #80	; 0x50
9000ee58:	f383 8811 	msr	BASEPRI, r3
9000ee5c:	f3bf 8f6f 	isb	sy
9000ee60:	f3bf 8f4f 	dsb	sy
9000ee64:	e7fe      	b.n	9000ee64 <xQueueGenericCreate+0x14>
9000ee66:	4605      	mov	r5, r0
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000ee68:	fb01 f000 	mul.w	r0, r1, r0
9000ee6c:	460e      	mov	r6, r1
9000ee6e:	4617      	mov	r7, r2
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
9000ee70:	3050      	adds	r0, #80	; 0x50
9000ee72:	f7ff fc05 	bl	9000e680 <pvPortMalloc>
		if( pxNewQueue != NULL )
9000ee76:	4604      	mov	r4, r0
9000ee78:	b340      	cbz	r0, 9000eecc <xQueueGenericCreate+0x7c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9000ee7a:	2300      	movs	r3, #0
9000ee7c:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
9000ee80:	b336      	cbz	r6, 9000eed0 <xQueueGenericCreate+0x80>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ee82:	f100 0350 	add.w	r3, r0, #80	; 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
9000ee86:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
9000ee88:	e9c4 560f 	strd	r5, r6, [r4, #60]	; 0x3c
	taskENTER_CRITICAL();
9000ee8c:	f7ff fdd2 	bl	9000ea34 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ee90:	6822      	ldr	r2, [r4, #0]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000ee92:	f104 0010 	add.w	r0, r4, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000ee96:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ee98:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	; 0x3c
9000ee9c:	fb01 f303 	mul.w	r3, r1, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000eea0:	1a59      	subs	r1, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000eea2:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000eea4:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000eea6:	60a3      	str	r3, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000eea8:	2100      	movs	r1, #0
		pxQueue->cRxLock = queueUNLOCKED;
9000eeaa:	23ff      	movs	r3, #255	; 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000eeac:	60e2      	str	r2, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000eeae:	63a1      	str	r1, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
9000eeb0:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000eeb4:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000eeb8:	f7ff fd04 	bl	9000e8c4 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000eebc:	f104 0024 	add.w	r0, r4, #36	; 0x24
9000eec0:	f7ff fd00 	bl	9000e8c4 <vListInitialise>
	taskEXIT_CRITICAL();
9000eec4:	f7ff fdd8 	bl	9000ea78 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
9000eec8:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
9000eecc:	4620      	mov	r0, r4
9000eece:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9000eed0:	4603      	mov	r3, r0
9000eed2:	e7d8      	b.n	9000ee86 <xQueueGenericCreate+0x36>

9000eed4 <xQueueCreateCountingSemaphoreStatic>:
		configASSERT( uxMaxCount != 0 );
9000eed4:	b940      	cbnz	r0, 9000eee8 <xQueueCreateCountingSemaphoreStatic+0x14>
9000eed6:	f04f 0350 	mov.w	r3, #80	; 0x50
9000eeda:	f383 8811 	msr	BASEPRI, r3
9000eede:	f3bf 8f6f 	isb	sy
9000eee2:	f3bf 8f4f 	dsb	sy
9000eee6:	e7fe      	b.n	9000eee6 <xQueueCreateCountingSemaphoreStatic+0x12>
		configASSERT( uxInitialCount <= uxMaxCount );
9000eee8:	4288      	cmp	r0, r1
9000eeea:	d208      	bcs.n	9000eefe <xQueueCreateCountingSemaphoreStatic+0x2a>
9000eeec:	f04f 0350 	mov.w	r3, #80	; 0x50
9000eef0:	f383 8811 	msr	BASEPRI, r3
9000eef4:	f3bf 8f6f 	isb	sy
9000eef8:	f3bf 8f4f 	dsb	sy
9000eefc:	e7fe      	b.n	9000eefc <xQueueCreateCountingSemaphoreStatic+0x28>
	{
9000eefe:	b530      	push	{r4, r5, lr}
9000ef00:	4615      	mov	r5, r2
9000ef02:	b085      	sub	sp, #20
		configASSERT( pxStaticQueue != NULL );
9000ef04:	2a00      	cmp	r2, #0
9000ef06:	d03d      	beq.n	9000ef84 <xQueueCreateCountingSemaphoreStatic+0xb0>
			volatile size_t xSize = sizeof( StaticQueue_t );
9000ef08:	2350      	movs	r3, #80	; 0x50
9000ef0a:	9303      	str	r3, [sp, #12]
			configASSERT( xSize == sizeof( Queue_t ) );
9000ef0c:	9b03      	ldr	r3, [sp, #12]
9000ef0e:	2b50      	cmp	r3, #80	; 0x50
9000ef10:	d008      	beq.n	9000ef24 <xQueueCreateCountingSemaphoreStatic+0x50>
9000ef12:	f04f 0350 	mov.w	r3, #80	; 0x50
9000ef16:	f383 8811 	msr	BASEPRI, r3
9000ef1a:	f3bf 8f6f 	isb	sy
9000ef1e:	f3bf 8f4f 	dsb	sy
9000ef22:	e7fe      	b.n	9000ef22 <xQueueCreateCountingSemaphoreStatic+0x4e>
	pxNewQueue->uxItemSize = uxItemSize;
9000ef24:	2400      	movs	r4, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000ef26:	2301      	movs	r3, #1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9000ef28:	602a      	str	r2, [r5, #0]
	pxNewQueue->uxLength = uxQueueLength;
9000ef2a:	63d0      	str	r0, [r2, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000ef2c:	f882 3046 	strb.w	r3, [r2, #70]	; 0x46
	pxNewQueue->uxItemSize = uxItemSize;
9000ef30:	6414      	str	r4, [r2, #64]	; 0x40
9000ef32:	9101      	str	r1, [sp, #4]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
9000ef34:	9b03      	ldr	r3, [sp, #12]
	taskENTER_CRITICAL();
9000ef36:	f7ff fd7d 	bl	9000ea34 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ef3a:	6828      	ldr	r0, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000ef3c:	63ac      	str	r4, [r5, #56]	; 0x38
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000ef3e:	6068      	str	r0, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ef40:	e9d5 3c0f 	ldrd	r3, ip, [r5, #60]	; 0x3c
9000ef44:	fb03 f30c 	mul.w	r3, r3, ip
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ef48:	eba3 0c0c 	sub.w	ip, r3, ip
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ef4c:	4403      	add	r3, r0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ef4e:	4484      	add	ip, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ef50:	60ab      	str	r3, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
9000ef52:	23ff      	movs	r3, #255	; 0xff
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000ef54:	f105 0010 	add.w	r0, r5, #16
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ef58:	f8c5 c00c 	str.w	ip, [r5, #12]
		pxQueue->cRxLock = queueUNLOCKED;
9000ef5c:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000ef60:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000ef64:	f7ff fcae 	bl	9000e8c4 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000ef68:	f105 0024 	add.w	r0, r5, #36	; 0x24
9000ef6c:	f7ff fcaa 	bl	9000e8c4 <vListInitialise>
	taskEXIT_CRITICAL();
9000ef70:	f7ff fd82 	bl	9000ea78 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
9000ef74:	2302      	movs	r3, #2
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
9000ef76:	9901      	ldr	r1, [sp, #4]
	}
9000ef78:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
9000ef7a:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
9000ef7e:	63a9      	str	r1, [r5, #56]	; 0x38
	}
9000ef80:	b005      	add	sp, #20
9000ef82:	bd30      	pop	{r4, r5, pc}
9000ef84:	f04f 0350 	mov.w	r3, #80	; 0x50
9000ef88:	f383 8811 	msr	BASEPRI, r3
9000ef8c:	f3bf 8f6f 	isb	sy
9000ef90:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
9000ef94:	e7fe      	b.n	9000ef94 <xQueueCreateCountingSemaphoreStatic+0xc0>
9000ef96:	bf00      	nop

9000ef98 <xQueueCreateCountingSemaphore>:
	{
9000ef98:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxMaxCount != 0 );
9000ef9a:	b940      	cbnz	r0, 9000efae <xQueueCreateCountingSemaphore+0x16>
9000ef9c:	f04f 0350 	mov.w	r3, #80	; 0x50
9000efa0:	f383 8811 	msr	BASEPRI, r3
9000efa4:	f3bf 8f6f 	isb	sy
9000efa8:	f3bf 8f4f 	dsb	sy
9000efac:	e7fe      	b.n	9000efac <xQueueCreateCountingSemaphore+0x14>
		configASSERT( uxInitialCount <= uxMaxCount );
9000efae:	4288      	cmp	r0, r1
9000efb0:	4604      	mov	r4, r0
9000efb2:	460e      	mov	r6, r1
9000efb4:	d208      	bcs.n	9000efc8 <xQueueCreateCountingSemaphore+0x30>
9000efb6:	f04f 0350 	mov.w	r3, #80	; 0x50
9000efba:	f383 8811 	msr	BASEPRI, r3
9000efbe:	f3bf 8f6f 	isb	sy
9000efc2:	f3bf 8f4f 	dsb	sy
9000efc6:	e7fe      	b.n	9000efc6 <xQueueCreateCountingSemaphore+0x2e>
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
9000efc8:	2050      	movs	r0, #80	; 0x50
9000efca:	f7ff fb59 	bl	9000e680 <pvPortMalloc>
		if( pxNewQueue != NULL )
9000efce:	4605      	mov	r5, r0
9000efd0:	b330      	cbz	r0, 9000f020 <xQueueCreateCountingSemaphore+0x88>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9000efd2:	2700      	movs	r7, #0
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9000efd4:	6000      	str	r0, [r0, #0]
	pxNewQueue->uxLength = uxQueueLength;
9000efd6:	63c4      	str	r4, [r0, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9000efd8:	f880 7046 	strb.w	r7, [r0, #70]	; 0x46
	pxNewQueue->uxItemSize = uxItemSize;
9000efdc:	6407      	str	r7, [r0, #64]	; 0x40
	taskENTER_CRITICAL();
9000efde:	f7ff fd29 	bl	9000ea34 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000efe2:	682a      	ldr	r2, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000efe4:	63af      	str	r7, [r5, #56]	; 0x38
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000efe6:	f105 0010 	add.w	r0, r5, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000efea:	606a      	str	r2, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000efec:	e9d5 310f 	ldrd	r3, r1, [r5, #60]	; 0x3c
9000eff0:	fb01 f303 	mul.w	r3, r1, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000eff4:	1a59      	subs	r1, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000eff6:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000eff8:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000effa:	60ab      	str	r3, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
9000effc:	23ff      	movs	r3, #255	; 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000effe:	60ea      	str	r2, [r5, #12]
		pxQueue->cRxLock = queueUNLOCKED;
9000f000:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000f004:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000f008:	f7ff fc5c 	bl	9000e8c4 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000f00c:	f105 0024 	add.w	r0, r5, #36	; 0x24
9000f010:	f7ff fc58 	bl	9000e8c4 <vListInitialise>
	taskEXIT_CRITICAL();
9000f014:	f7ff fd30 	bl	9000ea78 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
9000f018:	2302      	movs	r3, #2
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
9000f01a:	63ae      	str	r6, [r5, #56]	; 0x38
		pxNewQueue->ucQueueType = ucQueueType;
9000f01c:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
	}
9000f020:	4628      	mov	r0, r5
9000f022:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

9000f024 <xQueueGenericSend>:
{
9000f024:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9000f028:	b084      	sub	sp, #16
9000f02a:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
9000f02c:	2800      	cmp	r0, #0
9000f02e:	f000 8103 	beq.w	9000f238 <xQueueGenericSend+0x214>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000f032:	4688      	mov	r8, r1
9000f034:	4604      	mov	r4, r0
9000f036:	461f      	mov	r7, r3
9000f038:	2900      	cmp	r1, #0
9000f03a:	f000 8097 	beq.w	9000f16c <xQueueGenericSend+0x148>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
9000f03e:	2f02      	cmp	r7, #2
9000f040:	d10b      	bne.n	9000f05a <xQueueGenericSend+0x36>
9000f042:	6be3      	ldr	r3, [r4, #60]	; 0x3c
9000f044:	2b01      	cmp	r3, #1
9000f046:	d008      	beq.n	9000f05a <xQueueGenericSend+0x36>
9000f048:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f04c:	f383 8811 	msr	BASEPRI, r3
9000f050:	f3bf 8f6f 	isb	sy
9000f054:	f3bf 8f4f 	dsb	sy
9000f058:	e7fe      	b.n	9000f058 <xQueueGenericSend+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000f05a:	f001 fd4d 	bl	90010af8 <xTaskGetSchedulerState>
9000f05e:	2800      	cmp	r0, #0
9000f060:	f000 80f3 	beq.w	9000f24a <xQueueGenericSend+0x226>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000f064:	f1a7 0902 	sub.w	r9, r7, #2
9000f068:	2500      	movs	r5, #0
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f06a:	f104 0624 	add.w	r6, r4, #36	; 0x24
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000f06e:	fab9 f989 	clz	r9, r9
9000f072:	ea4f 1959 	mov.w	r9, r9, lsr #5
		taskENTER_CRITICAL();
9000f076:	f7ff fcdd 	bl	9000ea34 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000f07a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
9000f07c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
9000f07e:	429a      	cmp	r2, r3
9000f080:	f0c0 80f0 	bcc.w	9000f264 <xQueueGenericSend+0x240>
9000f084:	f1b9 0f00 	cmp.w	r9, #0
9000f088:	f040 80ec 	bne.w	9000f264 <xQueueGenericSend+0x240>
				if( xTicksToWait == ( TickType_t ) 0 )
9000f08c:	9b01      	ldr	r3, [sp, #4]
9000f08e:	2b00      	cmp	r3, #0
9000f090:	f000 8101 	beq.w	9000f296 <xQueueGenericSend+0x272>
				else if( xEntryTimeSet == pdFALSE )
9000f094:	2d00      	cmp	r5, #0
9000f096:	f000 80cb 	beq.w	9000f230 <xQueueGenericSend+0x20c>
		taskEXIT_CRITICAL();
9000f09a:	f7ff fced 	bl	9000ea78 <vPortExitCritical>
		vTaskSuspendAll();
9000f09e:	f001 fb55 	bl	9001074c <vTaskSuspendAll>
		prvLockQueue( pxQueue );
9000f0a2:	f7ff fcc7 	bl	9000ea34 <vPortEnterCritical>
9000f0a6:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000f0aa:	2bff      	cmp	r3, #255	; 0xff
9000f0ac:	d102      	bne.n	9000f0b4 <xQueueGenericSend+0x90>
9000f0ae:	2300      	movs	r3, #0
9000f0b0:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
9000f0b4:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000f0b8:	2bff      	cmp	r3, #255	; 0xff
9000f0ba:	d102      	bne.n	9000f0c2 <xQueueGenericSend+0x9e>
9000f0bc:	2300      	movs	r3, #0
9000f0be:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
9000f0c2:	f7ff fcd9 	bl	9000ea78 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
9000f0c6:	a901      	add	r1, sp, #4
9000f0c8:	a802      	add	r0, sp, #8
9000f0ca:	f001 fcc1 	bl	90010a50 <xTaskCheckForTimeOut>
9000f0ce:	2800      	cmp	r0, #0
9000f0d0:	f040 80e5 	bne.w	9000f29e <xQueueGenericSend+0x27a>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
9000f0d4:	f7ff fcae 	bl	9000ea34 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
9000f0d8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
9000f0da:	6be3      	ldr	r3, [r4, #60]	; 0x3c
9000f0dc:	429a      	cmp	r2, r3
9000f0de:	d052      	beq.n	9000f186 <xQueueGenericSend+0x162>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
9000f0e0:	f7ff fcca 	bl	9000ea78 <vPortExitCritical>
	taskENTER_CRITICAL();
9000f0e4:	f7ff fca6 	bl	9000ea34 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000f0e8:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
9000f0ec:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f0ee:	2d00      	cmp	r5, #0
9000f0f0:	dc04      	bgt.n	9000f0fc <xQueueGenericSend+0xd8>
9000f0f2:	e011      	b.n	9000f118 <xQueueGenericSend+0xf4>
			--cTxLock;
9000f0f4:	1e6a      	subs	r2, r5, #1
9000f0f6:	b2d3      	uxtb	r3, r2
9000f0f8:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f0fa:	b16b      	cbz	r3, 9000f118 <xQueueGenericSend+0xf4>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f0fc:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f0fe:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f100:	b153      	cbz	r3, 9000f118 <xQueueGenericSend+0xf4>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f102:	f001 fc4f 	bl	900109a4 <xTaskRemoveFromEventList>
9000f106:	2800      	cmp	r0, #0
9000f108:	d0f4      	beq.n	9000f0f4 <xQueueGenericSend+0xd0>
						vTaskMissedYield();
9000f10a:	f001 fce9 	bl	90010ae0 <vTaskMissedYield>
			--cTxLock;
9000f10e:	1e6a      	subs	r2, r5, #1
9000f110:	b2d3      	uxtb	r3, r2
9000f112:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f114:	2b00      	cmp	r3, #0
9000f116:	d1f1      	bne.n	9000f0fc <xQueueGenericSend+0xd8>
		pxQueue->cTxLock = queueUNLOCKED;
9000f118:	23ff      	movs	r3, #255	; 0xff
9000f11a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9000f11e:	f7ff fcab 	bl	9000ea78 <vPortExitCritical>
	taskENTER_CRITICAL();
9000f122:	f7ff fc87 	bl	9000ea34 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000f126:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
9000f12a:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f12c:	2d00      	cmp	r5, #0
9000f12e:	dd14      	ble.n	9000f15a <xQueueGenericSend+0x136>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f130:	f104 0a10 	add.w	sl, r4, #16
9000f134:	e003      	b.n	9000f13e <xQueueGenericSend+0x11a>
				--cRxLock;
9000f136:	1e6a      	subs	r2, r5, #1
9000f138:	b2d3      	uxtb	r3, r2
9000f13a:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f13c:	b16b      	cbz	r3, 9000f15a <xQueueGenericSend+0x136>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f13e:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f140:	4650      	mov	r0, sl
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f142:	b153      	cbz	r3, 9000f15a <xQueueGenericSend+0x136>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f144:	f001 fc2e 	bl	900109a4 <xTaskRemoveFromEventList>
9000f148:	2800      	cmp	r0, #0
9000f14a:	d0f4      	beq.n	9000f136 <xQueueGenericSend+0x112>
					vTaskMissedYield();
9000f14c:	f001 fcc8 	bl	90010ae0 <vTaskMissedYield>
				--cRxLock;
9000f150:	1e6a      	subs	r2, r5, #1
9000f152:	b2d3      	uxtb	r3, r2
9000f154:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f156:	2b00      	cmp	r3, #0
9000f158:	d1f1      	bne.n	9000f13e <xQueueGenericSend+0x11a>
		pxQueue->cRxLock = queueUNLOCKED;
9000f15a:	23ff      	movs	r3, #255	; 0xff
9000f15c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
9000f160:	f7ff fc8a 	bl	9000ea78 <vPortExitCritical>
				( void ) xTaskResumeAll();
9000f164:	f001 fafa 	bl	9001075c <xTaskResumeAll>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000f168:	2501      	movs	r5, #1
9000f16a:	e784      	b.n	9000f076 <xQueueGenericSend+0x52>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000f16c:	6c03      	ldr	r3, [r0, #64]	; 0x40
9000f16e:	2b00      	cmp	r3, #0
9000f170:	f43f af65 	beq.w	9000f03e <xQueueGenericSend+0x1a>
9000f174:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f178:	f383 8811 	msr	BASEPRI, r3
9000f17c:	f3bf 8f6f 	isb	sy
9000f180:	f3bf 8f4f 	dsb	sy
9000f184:	e7fe      	b.n	9000f184 <xQueueGenericSend+0x160>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
9000f186:	f104 0a10 	add.w	sl, r4, #16
	taskEXIT_CRITICAL();
9000f18a:	f7ff fc75 	bl	9000ea78 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
9000f18e:	9901      	ldr	r1, [sp, #4]
9000f190:	4650      	mov	r0, sl
9000f192:	f001 fb79 	bl	90010888 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
9000f196:	f7ff fc4d 	bl	9000ea34 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000f19a:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000f19e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f1a0:	2d00      	cmp	r5, #0
9000f1a2:	dc04      	bgt.n	9000f1ae <xQueueGenericSend+0x18a>
9000f1a4:	e011      	b.n	9000f1ca <xQueueGenericSend+0x1a6>
			--cTxLock;
9000f1a6:	1e6b      	subs	r3, r5, #1
9000f1a8:	b2da      	uxtb	r2, r3
9000f1aa:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f1ac:	b16a      	cbz	r2, 9000f1ca <xQueueGenericSend+0x1a6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f1ae:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f1b0:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f1b2:	b153      	cbz	r3, 9000f1ca <xQueueGenericSend+0x1a6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f1b4:	f001 fbf6 	bl	900109a4 <xTaskRemoveFromEventList>
9000f1b8:	2800      	cmp	r0, #0
9000f1ba:	d0f4      	beq.n	9000f1a6 <xQueueGenericSend+0x182>
						vTaskMissedYield();
9000f1bc:	f001 fc90 	bl	90010ae0 <vTaskMissedYield>
			--cTxLock;
9000f1c0:	1e6b      	subs	r3, r5, #1
9000f1c2:	b2da      	uxtb	r2, r3
9000f1c4:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f1c6:	2a00      	cmp	r2, #0
9000f1c8:	d1f1      	bne.n	9000f1ae <xQueueGenericSend+0x18a>
		pxQueue->cTxLock = queueUNLOCKED;
9000f1ca:	23ff      	movs	r3, #255	; 0xff
9000f1cc:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9000f1d0:	f7ff fc52 	bl	9000ea78 <vPortExitCritical>
	taskENTER_CRITICAL();
9000f1d4:	f7ff fc2e 	bl	9000ea34 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000f1d8:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000f1dc:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f1de:	2d00      	cmp	r5, #0
9000f1e0:	dc04      	bgt.n	9000f1ec <xQueueGenericSend+0x1c8>
9000f1e2:	e011      	b.n	9000f208 <xQueueGenericSend+0x1e4>
				--cRxLock;
9000f1e4:	1e6b      	subs	r3, r5, #1
9000f1e6:	b2da      	uxtb	r2, r3
9000f1e8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f1ea:	b16a      	cbz	r2, 9000f208 <xQueueGenericSend+0x1e4>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f1ec:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f1ee:	4650      	mov	r0, sl
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f1f0:	b153      	cbz	r3, 9000f208 <xQueueGenericSend+0x1e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f1f2:	f001 fbd7 	bl	900109a4 <xTaskRemoveFromEventList>
9000f1f6:	2800      	cmp	r0, #0
9000f1f8:	d0f4      	beq.n	9000f1e4 <xQueueGenericSend+0x1c0>
					vTaskMissedYield();
9000f1fa:	f001 fc71 	bl	90010ae0 <vTaskMissedYield>
				--cRxLock;
9000f1fe:	1e6b      	subs	r3, r5, #1
9000f200:	b2da      	uxtb	r2, r3
9000f202:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f204:	2a00      	cmp	r2, #0
9000f206:	d1f1      	bne.n	9000f1ec <xQueueGenericSend+0x1c8>
		pxQueue->cRxLock = queueUNLOCKED;
9000f208:	23ff      	movs	r3, #255	; 0xff
9000f20a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
9000f20e:	f7ff fc33 	bl	9000ea78 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
9000f212:	f001 faa3 	bl	9001075c <xTaskResumeAll>
9000f216:	2800      	cmp	r0, #0
9000f218:	d1a6      	bne.n	9000f168 <xQueueGenericSend+0x144>
					portYIELD_WITHIN_API();
9000f21a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000f21e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000f222:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000f226:	f3bf 8f4f 	dsb	sy
9000f22a:	f3bf 8f6f 	isb	sy
9000f22e:	e79b      	b.n	9000f168 <xQueueGenericSend+0x144>
					vTaskInternalSetTimeOutState( &xTimeOut );
9000f230:	a802      	add	r0, sp, #8
9000f232:	f001 fc01 	bl	90010a38 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
9000f236:	e730      	b.n	9000f09a <xQueueGenericSend+0x76>
9000f238:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f23c:	f383 8811 	msr	BASEPRI, r3
9000f240:	f3bf 8f6f 	isb	sy
9000f244:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000f248:	e7fe      	b.n	9000f248 <xQueueGenericSend+0x224>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000f24a:	9b01      	ldr	r3, [sp, #4]
9000f24c:	2b00      	cmp	r3, #0
9000f24e:	f43f af09 	beq.w	9000f064 <xQueueGenericSend+0x40>
9000f252:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f256:	f383 8811 	msr	BASEPRI, r3
9000f25a:	f3bf 8f6f 	isb	sy
9000f25e:	f3bf 8f4f 	dsb	sy
9000f262:	e7fe      	b.n	9000f262 <xQueueGenericSend+0x23e>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9000f264:	463a      	mov	r2, r7
9000f266:	4641      	mov	r1, r8
9000f268:	4620      	mov	r0, r4
9000f26a:	f7ff fd43 	bl	9000ecf4 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f26e:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000f270:	2b00      	cmp	r3, #0
9000f272:	d152      	bne.n	9000f31a <xQueueGenericSend+0x2f6>
					else if( xYieldRequired != pdFALSE )
9000f274:	b148      	cbz	r0, 9000f28a <xQueueGenericSend+0x266>
						queueYIELD_IF_USING_PREEMPTION();
9000f276:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000f27a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000f27e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000f282:	f3bf 8f4f 	dsb	sy
9000f286:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
9000f28a:	f7ff fbf5 	bl	9000ea78 <vPortExitCritical>
				return pdPASS;
9000f28e:	2001      	movs	r0, #1
}
9000f290:	b004      	add	sp, #16
9000f292:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
					taskEXIT_CRITICAL();
9000f296:	f7ff fbef 	bl	9000ea78 <vPortExitCritical>
					return errQUEUE_FULL;
9000f29a:	4648      	mov	r0, r9
9000f29c:	e7f8      	b.n	9000f290 <xQueueGenericSend+0x26c>
	taskENTER_CRITICAL();
9000f29e:	f7ff fbc9 	bl	9000ea34 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000f2a2:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000f2a6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f2a8:	2d00      	cmp	r5, #0
9000f2aa:	dd10      	ble.n	9000f2ce <xQueueGenericSend+0x2aa>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f2ac:	f104 0624 	add.w	r6, r4, #36	; 0x24
9000f2b0:	e003      	b.n	9000f2ba <xQueueGenericSend+0x296>
			--cTxLock;
9000f2b2:	1e6b      	subs	r3, r5, #1
9000f2b4:	b2da      	uxtb	r2, r3
9000f2b6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f2b8:	b14a      	cbz	r2, 9000f2ce <xQueueGenericSend+0x2aa>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f2ba:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f2bc:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f2be:	b133      	cbz	r3, 9000f2ce <xQueueGenericSend+0x2aa>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f2c0:	f001 fb70 	bl	900109a4 <xTaskRemoveFromEventList>
9000f2c4:	2800      	cmp	r0, #0
9000f2c6:	d0f4      	beq.n	9000f2b2 <xQueueGenericSend+0x28e>
						vTaskMissedYield();
9000f2c8:	f001 fc0a 	bl	90010ae0 <vTaskMissedYield>
9000f2cc:	e7f1      	b.n	9000f2b2 <xQueueGenericSend+0x28e>
		pxQueue->cTxLock = queueUNLOCKED;
9000f2ce:	23ff      	movs	r3, #255	; 0xff
9000f2d0:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9000f2d4:	f7ff fbd0 	bl	9000ea78 <vPortExitCritical>
	taskENTER_CRITICAL();
9000f2d8:	f7ff fbac 	bl	9000ea34 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000f2dc:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000f2e0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f2e2:	2d00      	cmp	r5, #0
9000f2e4:	dd10      	ble.n	9000f308 <xQueueGenericSend+0x2e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f2e6:	f104 0610 	add.w	r6, r4, #16
9000f2ea:	e003      	b.n	9000f2f4 <xQueueGenericSend+0x2d0>
				--cRxLock;
9000f2ec:	1e6b      	subs	r3, r5, #1
9000f2ee:	b2da      	uxtb	r2, r3
9000f2f0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f2f2:	b14a      	cbz	r2, 9000f308 <xQueueGenericSend+0x2e4>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f2f4:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f2f6:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f2f8:	b133      	cbz	r3, 9000f308 <xQueueGenericSend+0x2e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f2fa:	f001 fb53 	bl	900109a4 <xTaskRemoveFromEventList>
9000f2fe:	2800      	cmp	r0, #0
9000f300:	d0f4      	beq.n	9000f2ec <xQueueGenericSend+0x2c8>
					vTaskMissedYield();
9000f302:	f001 fbed 	bl	90010ae0 <vTaskMissedYield>
9000f306:	e7f1      	b.n	9000f2ec <xQueueGenericSend+0x2c8>
		pxQueue->cRxLock = queueUNLOCKED;
9000f308:	23ff      	movs	r3, #255	; 0xff
9000f30a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
9000f30e:	f7ff fbb3 	bl	9000ea78 <vPortExitCritical>
			( void ) xTaskResumeAll();
9000f312:	f001 fa23 	bl	9001075c <xTaskResumeAll>
			return errQUEUE_FULL;
9000f316:	2000      	movs	r0, #0
9000f318:	e7ba      	b.n	9000f290 <xQueueGenericSend+0x26c>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f31a:	f104 0024 	add.w	r0, r4, #36	; 0x24
9000f31e:	f001 fb41 	bl	900109a4 <xTaskRemoveFromEventList>
9000f322:	2800      	cmp	r0, #0
9000f324:	d0b1      	beq.n	9000f28a <xQueueGenericSend+0x266>
9000f326:	e7a6      	b.n	9000f276 <xQueueGenericSend+0x252>

9000f328 <xQueueCreateMutexStatic>:
		configASSERT( pxStaticQueue != NULL );
9000f328:	b179      	cbz	r1, 9000f34a <xQueueCreateMutexStatic+0x22>
			volatile size_t xSize = sizeof( StaticQueue_t );
9000f32a:	2350      	movs	r3, #80	; 0x50
	{
9000f32c:	b570      	push	{r4, r5, r6, lr}
9000f32e:	b082      	sub	sp, #8
			volatile size_t xSize = sizeof( StaticQueue_t );
9000f330:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
9000f332:	9b01      	ldr	r3, [sp, #4]
9000f334:	2b50      	cmp	r3, #80	; 0x50
9000f336:	d011      	beq.n	9000f35c <xQueueCreateMutexStatic+0x34>
9000f338:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f33c:	f383 8811 	msr	BASEPRI, r3
9000f340:	f3bf 8f6f 	isb	sy
9000f344:	f3bf 8f4f 	dsb	sy
9000f348:	e7fe      	b.n	9000f348 <xQueueCreateMutexStatic+0x20>
9000f34a:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f34e:	f383 8811 	msr	BASEPRI, r3
9000f352:	f3bf 8f6f 	isb	sy
9000f356:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
9000f35a:	e7fe      	b.n	9000f35a <xQueueCreateMutexStatic+0x32>
	pxNewQueue->uxItemSize = uxItemSize;
9000f35c:	2600      	movs	r6, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000f35e:	2301      	movs	r3, #1
9000f360:	460c      	mov	r4, r1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9000f362:	6009      	str	r1, [r1, #0]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000f364:	f881 3046 	strb.w	r3, [r1, #70]	; 0x46
9000f368:	4605      	mov	r5, r0
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
9000f36a:	9a01      	ldr	r2, [sp, #4]
	pxNewQueue->uxItemSize = uxItemSize;
9000f36c:	e9c1 360f 	strd	r3, r6, [r1, #60]	; 0x3c
	taskENTER_CRITICAL();
9000f370:	f7ff fb60 	bl	9000ea34 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000f374:	6821      	ldr	r1, [r4, #0]
		pxQueue->cRxLock = queueUNLOCKED;
9000f376:	23ff      	movs	r3, #255	; 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000f378:	63a6      	str	r6, [r4, #56]	; 0x38
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000f37a:	6061      	str	r1, [r4, #4]
		pxQueue->cRxLock = queueUNLOCKED;
9000f37c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000f380:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000f384:	e9d4 200f 	ldrd	r2, r0, [r4, #60]	; 0x3c
9000f388:	fb00 f202 	mul.w	r2, r0, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000f38c:	1a10      	subs	r0, r2, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000f38e:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000f390:	4401      	add	r1, r0
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000f392:	f104 0010 	add.w	r0, r4, #16
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000f396:	e9c4 2102 	strd	r2, r1, [r4, #8]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000f39a:	f7ff fa93 	bl	9000e8c4 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000f39e:	f104 0024 	add.w	r0, r4, #36	; 0x24
9000f3a2:	f7ff fa8f 	bl	9000e8c4 <vListInitialise>
	taskEXIT_CRITICAL();
9000f3a6:	f7ff fb67 	bl	9000ea78 <vPortExitCritical>
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
9000f3aa:	4633      	mov	r3, r6
9000f3ac:	4632      	mov	r2, r6
9000f3ae:	4631      	mov	r1, r6
9000f3b0:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
9000f3b2:	f884 504c 	strb.w	r5, [r4, #76]	; 0x4c
			pxNewQueue->u.xSemaphore.xMutexHolder = NULL;
9000f3b6:	60a6      	str	r6, [r4, #8]
			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
9000f3b8:	6026      	str	r6, [r4, #0]
			pxNewQueue->u.xSemaphore.uxRecursiveCallCount = 0;
9000f3ba:	60e6      	str	r6, [r4, #12]
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
9000f3bc:	f7ff fe32 	bl	9000f024 <xQueueGenericSend>
	}
9000f3c0:	4620      	mov	r0, r4
9000f3c2:	b002      	add	sp, #8
9000f3c4:	bd70      	pop	{r4, r5, r6, pc}
9000f3c6:	bf00      	nop

9000f3c8 <xQueueGiveMutexRecursive>:
	{
9000f3c8:	b538      	push	{r3, r4, r5, lr}
		configASSERT( pxMutex );
9000f3ca:	b138      	cbz	r0, 9000f3dc <xQueueGiveMutexRecursive+0x14>
		if( pxMutex->u.xSemaphore.xMutexHolder == xTaskGetCurrentTaskHandle() )
9000f3cc:	6885      	ldr	r5, [r0, #8]
9000f3ce:	4604      	mov	r4, r0
9000f3d0:	f001 fb8c 	bl	90010aec <xTaskGetCurrentTaskHandle>
9000f3d4:	4285      	cmp	r5, r0
9000f3d6:	d00a      	beq.n	9000f3ee <xQueueGiveMutexRecursive+0x26>
			xReturn = pdFAIL;
9000f3d8:	2000      	movs	r0, #0
	}
9000f3da:	bd38      	pop	{r3, r4, r5, pc}
9000f3dc:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f3e0:	f383 8811 	msr	BASEPRI, r3
9000f3e4:	f3bf 8f6f 	isb	sy
9000f3e8:	f3bf 8f4f 	dsb	sy
		configASSERT( pxMutex );
9000f3ec:	e7fe      	b.n	9000f3ec <xQueueGiveMutexRecursive+0x24>
			( pxMutex->u.xSemaphore.uxRecursiveCallCount )--;
9000f3ee:	68e3      	ldr	r3, [r4, #12]
9000f3f0:	3b01      	subs	r3, #1
9000f3f2:	60e3      	str	r3, [r4, #12]
			if( pxMutex->u.xSemaphore.uxRecursiveCallCount == ( UBaseType_t ) 0 )
9000f3f4:	b10b      	cbz	r3, 9000f3fa <xQueueGiveMutexRecursive+0x32>
			xReturn = pdPASS;
9000f3f6:	2001      	movs	r0, #1
	}
9000f3f8:	bd38      	pop	{r3, r4, r5, pc}
				( void ) xQueueGenericSend( pxMutex, NULL, queueMUTEX_GIVE_BLOCK_TIME, queueSEND_TO_BACK );
9000f3fa:	461a      	mov	r2, r3
9000f3fc:	4619      	mov	r1, r3
9000f3fe:	4620      	mov	r0, r4
9000f400:	f7ff fe10 	bl	9000f024 <xQueueGenericSend>
			xReturn = pdPASS;
9000f404:	2001      	movs	r0, #1
	}
9000f406:	bd38      	pop	{r3, r4, r5, pc}

9000f408 <xQueueCreateMutex>:
	{
9000f408:	b570      	push	{r4, r5, r6, lr}
9000f40a:	4605      	mov	r5, r0
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
9000f40c:	2050      	movs	r0, #80	; 0x50
9000f40e:	f7ff f937 	bl	9000e680 <pvPortMalloc>
		if( pxNewQueue != NULL )
9000f412:	4604      	mov	r4, r0
9000f414:	b370      	cbz	r0, 9000f474 <xQueueCreateMutex+0x6c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9000f416:	2600      	movs	r6, #0
	pxNewQueue->uxLength = uxQueueLength;
9000f418:	2301      	movs	r3, #1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9000f41a:	6020      	str	r0, [r4, #0]
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9000f41c:	f880 6046 	strb.w	r6, [r0, #70]	; 0x46
	pxNewQueue->uxItemSize = uxItemSize;
9000f420:	e9c0 360f 	strd	r3, r6, [r0, #60]	; 0x3c
	taskENTER_CRITICAL();
9000f424:	f7ff fb06 	bl	9000ea34 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000f428:	6821      	ldr	r1, [r4, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000f42a:	63a6      	str	r6, [r4, #56]	; 0x38
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000f42c:	f104 0010 	add.w	r0, r4, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000f430:	6061      	str	r1, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000f432:	e9d4 230f 	ldrd	r2, r3, [r4, #60]	; 0x3c
9000f436:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000f43a:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000f43c:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000f43e:	4419      	add	r1, r3
		pxQueue->cRxLock = queueUNLOCKED;
9000f440:	23ff      	movs	r3, #255	; 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000f442:	e9c4 2102 	strd	r2, r1, [r4, #8]
		pxQueue->cRxLock = queueUNLOCKED;
9000f446:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000f44a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000f44e:	f7ff fa39 	bl	9000e8c4 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000f452:	f104 0024 	add.w	r0, r4, #36	; 0x24
9000f456:	f7ff fa35 	bl	9000e8c4 <vListInitialise>
	taskEXIT_CRITICAL();
9000f45a:	f7ff fb0d 	bl	9000ea78 <vPortExitCritical>
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
9000f45e:	4633      	mov	r3, r6
9000f460:	4632      	mov	r2, r6
9000f462:	4631      	mov	r1, r6
9000f464:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
9000f466:	f884 504c 	strb.w	r5, [r4, #76]	; 0x4c
			pxNewQueue->u.xSemaphore.xMutexHolder = NULL;
9000f46a:	60a6      	str	r6, [r4, #8]
			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
9000f46c:	6026      	str	r6, [r4, #0]
			pxNewQueue->u.xSemaphore.uxRecursiveCallCount = 0;
9000f46e:	60e6      	str	r6, [r4, #12]
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
9000f470:	f7ff fdd8 	bl	9000f024 <xQueueGenericSend>
	}
9000f474:	4620      	mov	r0, r4
9000f476:	bd70      	pop	{r4, r5, r6, pc}

9000f478 <xQueueGenericSendFromISR>:
	configASSERT( pxQueue );
9000f478:	2800      	cmp	r0, #0
9000f47a:	d04e      	beq.n	9000f51a <xQueueGenericSendFromISR+0xa2>
{
9000f47c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000f480:	460e      	mov	r6, r1
9000f482:	4604      	mov	r4, r0
9000f484:	4617      	mov	r7, r2
9000f486:	461d      	mov	r5, r3
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000f488:	b339      	cbz	r1, 9000f4da <xQueueGenericSendFromISR+0x62>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
9000f48a:	2d02      	cmp	r5, #2
9000f48c:	d10b      	bne.n	9000f4a6 <xQueueGenericSendFromISR+0x2e>
9000f48e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
9000f490:	2b01      	cmp	r3, #1
9000f492:	d008      	beq.n	9000f4a6 <xQueueGenericSendFromISR+0x2e>
9000f494:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f498:	f383 8811 	msr	BASEPRI, r3
9000f49c:	f3bf 8f6f 	isb	sy
9000f4a0:	f3bf 8f4f 	dsb	sy
9000f4a4:	e7fe      	b.n	9000f4a4 <xQueueGenericSendFromISR+0x2c>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
9000f4a6:	f7ff fbf7 	bl	9000ec98 <vPortValidateInterruptPriority>
	__asm volatile
9000f4aa:	f3ef 8811 	mrs	r8, BASEPRI
9000f4ae:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f4b2:	f383 8811 	msr	BASEPRI, r3
9000f4b6:	f3bf 8f6f 	isb	sy
9000f4ba:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000f4be:	6ba2      	ldr	r2, [r4, #56]	; 0x38
9000f4c0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
9000f4c2:	429a      	cmp	r2, r3
9000f4c4:	d315      	bcc.n	9000f4f2 <xQueueGenericSendFromISR+0x7a>
9000f4c6:	f1a5 0002 	sub.w	r0, r5, #2
9000f4ca:	fab0 f080 	clz	r0, r0
9000f4ce:	0940      	lsrs	r0, r0, #5
9000f4d0:	b978      	cbnz	r0, 9000f4f2 <xQueueGenericSendFromISR+0x7a>
	__asm volatile
9000f4d2:	f388 8811 	msr	BASEPRI, r8
}
9000f4d6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000f4da:	6c03      	ldr	r3, [r0, #64]	; 0x40
9000f4dc:	2b00      	cmp	r3, #0
9000f4de:	d0d4      	beq.n	9000f48a <xQueueGenericSendFromISR+0x12>
	__asm volatile
9000f4e0:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f4e4:	f383 8811 	msr	BASEPRI, r3
9000f4e8:	f3bf 8f6f 	isb	sy
9000f4ec:	f3bf 8f4f 	dsb	sy
9000f4f0:	e7fe      	b.n	9000f4f0 <xQueueGenericSendFromISR+0x78>
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9000f4f2:	462a      	mov	r2, r5
			const int8_t cTxLock = pxQueue->cTxLock;
9000f4f4:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9000f4f8:	4631      	mov	r1, r6
9000f4fa:	4620      	mov	r0, r4
			const int8_t cTxLock = pxQueue->cTxLock;
9000f4fc:	b26d      	sxtb	r5, r5
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
9000f4fe:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9000f500:	f7ff fbf8 	bl	9000ecf4 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
9000f504:	1c6b      	adds	r3, r5, #1
9000f506:	d011      	beq.n	9000f52c <xQueueGenericSendFromISR+0xb4>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
9000f508:	1c6b      	adds	r3, r5, #1
			xReturn = pdPASS;
9000f50a:	2001      	movs	r0, #1
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
9000f50c:	b25b      	sxtb	r3, r3
9000f50e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	__asm volatile
9000f512:	f388 8811 	msr	BASEPRI, r8
}
9000f516:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	__asm volatile
9000f51a:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f51e:	f383 8811 	msr	BASEPRI, r3
9000f522:	f3bf 8f6f 	isb	sy
9000f526:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000f52a:	e7fe      	b.n	9000f52a <xQueueGenericSendFromISR+0xb2>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f52c:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000f52e:	b90b      	cbnz	r3, 9000f534 <xQueueGenericSendFromISR+0xbc>
			xReturn = pdPASS;
9000f530:	2001      	movs	r0, #1
9000f532:	e7ce      	b.n	9000f4d2 <xQueueGenericSendFromISR+0x5a>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f534:	f104 0024 	add.w	r0, r4, #36	; 0x24
9000f538:	f001 fa34 	bl	900109a4 <xTaskRemoveFromEventList>
							if( pxHigherPriorityTaskWoken != NULL )
9000f53c:	2800      	cmp	r0, #0
9000f53e:	d0f7      	beq.n	9000f530 <xQueueGenericSendFromISR+0xb8>
9000f540:	2f00      	cmp	r7, #0
9000f542:	d0f5      	beq.n	9000f530 <xQueueGenericSendFromISR+0xb8>
								*pxHigherPriorityTaskWoken = pdTRUE;
9000f544:	2301      	movs	r3, #1
			xReturn = pdPASS;
9000f546:	4618      	mov	r0, r3
								*pxHigherPriorityTaskWoken = pdTRUE;
9000f548:	603b      	str	r3, [r7, #0]
9000f54a:	e7c2      	b.n	9000f4d2 <xQueueGenericSendFromISR+0x5a>

9000f54c <xQueueGiveFromISR>:
	configASSERT( pxQueue );
9000f54c:	b360      	cbz	r0, 9000f5a8 <xQueueGiveFromISR+0x5c>
	configASSERT( pxQueue->uxItemSize == 0 );
9000f54e:	6c03      	ldr	r3, [r0, #64]	; 0x40
{
9000f550:	b570      	push	{r4, r5, r6, lr}
9000f552:	4604      	mov	r4, r0
	configASSERT( pxQueue->uxItemSize == 0 );
9000f554:	b143      	cbz	r3, 9000f568 <xQueueGiveFromISR+0x1c>
9000f556:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f55a:	f383 8811 	msr	BASEPRI, r3
9000f55e:	f3bf 8f6f 	isb	sy
9000f562:	f3bf 8f4f 	dsb	sy
9000f566:	e7fe      	b.n	9000f566 <xQueueGiveFromISR+0x1a>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
9000f568:	6803      	ldr	r3, [r0, #0]
9000f56a:	460d      	mov	r5, r1
9000f56c:	b32b      	cbz	r3, 9000f5ba <xQueueGiveFromISR+0x6e>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
9000f56e:	f7ff fb93 	bl	9000ec98 <vPortValidateInterruptPriority>
	__asm volatile
9000f572:	f3ef 8611 	mrs	r6, BASEPRI
9000f576:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f57a:	f383 8811 	msr	BASEPRI, r3
9000f57e:	f3bf 8f6f 	isb	sy
9000f582:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000f586:	6ba3      	ldr	r3, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
9000f588:	6be2      	ldr	r2, [r4, #60]	; 0x3c
9000f58a:	429a      	cmp	r2, r3
9000f58c:	d921      	bls.n	9000f5d2 <xQueueGiveFromISR+0x86>
			const int8_t cTxLock = pxQueue->cTxLock;
9000f58e:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000f592:	3301      	adds	r3, #1
			if( cTxLock == queueUNLOCKED )
9000f594:	2aff      	cmp	r2, #255	; 0xff
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000f596:	63a3      	str	r3, [r4, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
9000f598:	b253      	sxtb	r3, r2
			if( cTxLock == queueUNLOCKED )
9000f59a:	d01e      	beq.n	9000f5da <xQueueGiveFromISR+0x8e>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
9000f59c:	3301      	adds	r3, #1
			xReturn = pdPASS;
9000f59e:	2001      	movs	r0, #1
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
9000f5a0:	b25b      	sxtb	r3, r3
9000f5a2:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
9000f5a6:	e015      	b.n	9000f5d4 <xQueueGiveFromISR+0x88>
	__asm volatile
9000f5a8:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f5ac:	f383 8811 	msr	BASEPRI, r3
9000f5b0:	f3bf 8f6f 	isb	sy
9000f5b4:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000f5b8:	e7fe      	b.n	9000f5b8 <xQueueGiveFromISR+0x6c>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
9000f5ba:	6883      	ldr	r3, [r0, #8]
9000f5bc:	2b00      	cmp	r3, #0
9000f5be:	d0d6      	beq.n	9000f56e <xQueueGiveFromISR+0x22>
9000f5c0:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f5c4:	f383 8811 	msr	BASEPRI, r3
9000f5c8:	f3bf 8f6f 	isb	sy
9000f5cc:	f3bf 8f4f 	dsb	sy
9000f5d0:	e7fe      	b.n	9000f5d0 <xQueueGiveFromISR+0x84>
			xReturn = errQUEUE_FULL;
9000f5d2:	2000      	movs	r0, #0
	__asm volatile
9000f5d4:	f386 8811 	msr	BASEPRI, r6
}
9000f5d8:	bd70      	pop	{r4, r5, r6, pc}
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f5da:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000f5dc:	b90b      	cbnz	r3, 9000f5e2 <xQueueGiveFromISR+0x96>
			xReturn = pdPASS;
9000f5de:	2001      	movs	r0, #1
9000f5e0:	e7f8      	b.n	9000f5d4 <xQueueGiveFromISR+0x88>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f5e2:	f104 0024 	add.w	r0, r4, #36	; 0x24
9000f5e6:	f001 f9dd 	bl	900109a4 <xTaskRemoveFromEventList>
							if( pxHigherPriorityTaskWoken != NULL )
9000f5ea:	2d00      	cmp	r5, #0
9000f5ec:	d0f7      	beq.n	9000f5de <xQueueGiveFromISR+0x92>
9000f5ee:	2800      	cmp	r0, #0
9000f5f0:	d0f5      	beq.n	9000f5de <xQueueGiveFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
9000f5f2:	2301      	movs	r3, #1
			xReturn = pdPASS;
9000f5f4:	4618      	mov	r0, r3
								*pxHigherPriorityTaskWoken = pdTRUE;
9000f5f6:	602b      	str	r3, [r5, #0]
9000f5f8:	e7ec      	b.n	9000f5d4 <xQueueGiveFromISR+0x88>
9000f5fa:	bf00      	nop

9000f5fc <xQueueReceive>:
{
9000f5fc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9000f600:	b085      	sub	sp, #20
9000f602:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
9000f604:	2800      	cmp	r0, #0
9000f606:	f000 815c 	beq.w	9000f8c2 <xQueueReceive+0x2c6>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000f60a:	460f      	mov	r7, r1
9000f60c:	4604      	mov	r4, r0
9000f60e:	2900      	cmp	r1, #0
9000f610:	d079      	beq.n	9000f706 <xQueueReceive+0x10a>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000f612:	f001 fa71 	bl	90010af8 <xTaskGetSchedulerState>
9000f616:	2800      	cmp	r0, #0
9000f618:	f000 8081 	beq.w	9000f71e <xQueueReceive+0x122>
		taskENTER_CRITICAL();
9000f61c:	f7ff fa0a 	bl	9000ea34 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000f620:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000f622:	2d00      	cmp	r5, #0
9000f624:	f040 8138 	bne.w	9000f898 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
9000f628:	9b01      	ldr	r3, [sp, #4]
9000f62a:	2b00      	cmp	r3, #0
9000f62c:	f000 80d5 	beq.w	9000f7da <xQueueReceive+0x1de>
		prvLockQueue( pxQueue );
9000f630:	46a8      	mov	r8, r5
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f632:	f104 0624 	add.w	r6, r4, #36	; 0x24
					vTaskInternalSetTimeOutState( &xTimeOut );
9000f636:	a802      	add	r0, sp, #8
9000f638:	f001 f9fe 	bl	90010a38 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
9000f63c:	f7ff fa1c 	bl	9000ea78 <vPortExitCritical>
		vTaskSuspendAll();
9000f640:	f001 f884 	bl	9001074c <vTaskSuspendAll>
		prvLockQueue( pxQueue );
9000f644:	f7ff f9f6 	bl	9000ea34 <vPortEnterCritical>
9000f648:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000f64c:	2bff      	cmp	r3, #255	; 0xff
9000f64e:	d101      	bne.n	9000f654 <xQueueReceive+0x58>
9000f650:	f884 8044 	strb.w	r8, [r4, #68]	; 0x44
9000f654:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000f658:	2bff      	cmp	r3, #255	; 0xff
9000f65a:	d101      	bne.n	9000f660 <xQueueReceive+0x64>
9000f65c:	f884 8045 	strb.w	r8, [r4, #69]	; 0x45
9000f660:	f7ff fa0a 	bl	9000ea78 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
9000f664:	a901      	add	r1, sp, #4
9000f666:	a802      	add	r0, sp, #8
9000f668:	f001 f9f2 	bl	90010a50 <xTaskCheckForTimeOut>
9000f66c:	2800      	cmp	r0, #0
9000f66e:	d163      	bne.n	9000f738 <xQueueReceive+0x13c>
	taskENTER_CRITICAL();
9000f670:	f7ff f9e0 	bl	9000ea34 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
9000f674:	6ba3      	ldr	r3, [r4, #56]	; 0x38
9000f676:	2b00      	cmp	r3, #0
9000f678:	f000 80b5 	beq.w	9000f7e6 <xQueueReceive+0x1ea>
	taskEXIT_CRITICAL();
9000f67c:	f7ff f9fc 	bl	9000ea78 <vPortExitCritical>
	taskENTER_CRITICAL();
9000f680:	f7ff f9d8 	bl	9000ea34 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000f684:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000f688:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f68a:	2d00      	cmp	r5, #0
9000f68c:	dc04      	bgt.n	9000f698 <xQueueReceive+0x9c>
9000f68e:	e011      	b.n	9000f6b4 <xQueueReceive+0xb8>
			--cTxLock;
9000f690:	1e6b      	subs	r3, r5, #1
9000f692:	b2da      	uxtb	r2, r3
9000f694:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f696:	b16a      	cbz	r2, 9000f6b4 <xQueueReceive+0xb8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f698:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f69a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f69c:	b153      	cbz	r3, 9000f6b4 <xQueueReceive+0xb8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f69e:	f001 f981 	bl	900109a4 <xTaskRemoveFromEventList>
9000f6a2:	2800      	cmp	r0, #0
9000f6a4:	d0f4      	beq.n	9000f690 <xQueueReceive+0x94>
						vTaskMissedYield();
9000f6a6:	f001 fa1b 	bl	90010ae0 <vTaskMissedYield>
			--cTxLock;
9000f6aa:	1e6b      	subs	r3, r5, #1
9000f6ac:	b2da      	uxtb	r2, r3
9000f6ae:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f6b0:	2a00      	cmp	r2, #0
9000f6b2:	d1f1      	bne.n	9000f698 <xQueueReceive+0x9c>
		pxQueue->cTxLock = queueUNLOCKED;
9000f6b4:	23ff      	movs	r3, #255	; 0xff
9000f6b6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9000f6ba:	f7ff f9dd 	bl	9000ea78 <vPortExitCritical>
	taskENTER_CRITICAL();
9000f6be:	f7ff f9b9 	bl	9000ea34 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000f6c2:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000f6c6:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f6c8:	2d00      	cmp	r5, #0
9000f6ca:	dd14      	ble.n	9000f6f6 <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f6cc:	f104 0910 	add.w	r9, r4, #16
9000f6d0:	e003      	b.n	9000f6da <xQueueReceive+0xde>
				--cRxLock;
9000f6d2:	1e6b      	subs	r3, r5, #1
9000f6d4:	b2da      	uxtb	r2, r3
9000f6d6:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f6d8:	b16a      	cbz	r2, 9000f6f6 <xQueueReceive+0xfa>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f6da:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f6dc:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f6de:	b153      	cbz	r3, 9000f6f6 <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f6e0:	f001 f960 	bl	900109a4 <xTaskRemoveFromEventList>
9000f6e4:	2800      	cmp	r0, #0
9000f6e6:	d0f4      	beq.n	9000f6d2 <xQueueReceive+0xd6>
					vTaskMissedYield();
9000f6e8:	f001 f9fa 	bl	90010ae0 <vTaskMissedYield>
				--cRxLock;
9000f6ec:	1e6b      	subs	r3, r5, #1
9000f6ee:	b2da      	uxtb	r2, r3
9000f6f0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f6f2:	2a00      	cmp	r2, #0
9000f6f4:	d1f1      	bne.n	9000f6da <xQueueReceive+0xde>
		pxQueue->cRxLock = queueUNLOCKED;
9000f6f6:	23ff      	movs	r3, #255	; 0xff
9000f6f8:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
9000f6fc:	f7ff f9bc 	bl	9000ea78 <vPortExitCritical>
				( void ) xTaskResumeAll();
9000f700:	f001 f82c 	bl	9001075c <xTaskResumeAll>
		taskENTER_CRITICAL();
9000f704:	e060      	b.n	9000f7c8 <xQueueReceive+0x1cc>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000f706:	6c03      	ldr	r3, [r0, #64]	; 0x40
9000f708:	2b00      	cmp	r3, #0
9000f70a:	d082      	beq.n	9000f612 <xQueueReceive+0x16>
	__asm volatile
9000f70c:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f710:	f383 8811 	msr	BASEPRI, r3
9000f714:	f3bf 8f6f 	isb	sy
9000f718:	f3bf 8f4f 	dsb	sy
9000f71c:	e7fe      	b.n	9000f71c <xQueueReceive+0x120>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000f71e:	9b01      	ldr	r3, [sp, #4]
9000f720:	2b00      	cmp	r3, #0
9000f722:	f43f af7b 	beq.w	9000f61c <xQueueReceive+0x20>
9000f726:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f72a:	f383 8811 	msr	BASEPRI, r3
9000f72e:	f3bf 8f6f 	isb	sy
9000f732:	f3bf 8f4f 	dsb	sy
9000f736:	e7fe      	b.n	9000f736 <xQueueReceive+0x13a>
	taskENTER_CRITICAL();
9000f738:	f7ff f97c 	bl	9000ea34 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000f73c:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000f740:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f742:	2d00      	cmp	r5, #0
9000f744:	dc04      	bgt.n	9000f750 <xQueueReceive+0x154>
9000f746:	e011      	b.n	9000f76c <xQueueReceive+0x170>
			--cTxLock;
9000f748:	1e6b      	subs	r3, r5, #1
9000f74a:	b2da      	uxtb	r2, r3
9000f74c:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f74e:	b16a      	cbz	r2, 9000f76c <xQueueReceive+0x170>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f750:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f752:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f754:	b153      	cbz	r3, 9000f76c <xQueueReceive+0x170>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f756:	f001 f925 	bl	900109a4 <xTaskRemoveFromEventList>
9000f75a:	2800      	cmp	r0, #0
9000f75c:	d0f4      	beq.n	9000f748 <xQueueReceive+0x14c>
						vTaskMissedYield();
9000f75e:	f001 f9bf 	bl	90010ae0 <vTaskMissedYield>
			--cTxLock;
9000f762:	1e6b      	subs	r3, r5, #1
9000f764:	b2da      	uxtb	r2, r3
9000f766:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f768:	2a00      	cmp	r2, #0
9000f76a:	d1f1      	bne.n	9000f750 <xQueueReceive+0x154>
		pxQueue->cTxLock = queueUNLOCKED;
9000f76c:	23ff      	movs	r3, #255	; 0xff
9000f76e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9000f772:	f7ff f981 	bl	9000ea78 <vPortExitCritical>
	taskENTER_CRITICAL();
9000f776:	f7ff f95d 	bl	9000ea34 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000f77a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000f77e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f780:	2d00      	cmp	r5, #0
9000f782:	dd14      	ble.n	9000f7ae <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f784:	f104 0910 	add.w	r9, r4, #16
9000f788:	e003      	b.n	9000f792 <xQueueReceive+0x196>
				--cRxLock;
9000f78a:	1e6b      	subs	r3, r5, #1
9000f78c:	b2da      	uxtb	r2, r3
9000f78e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f790:	b16a      	cbz	r2, 9000f7ae <xQueueReceive+0x1b2>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f792:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f794:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f796:	b153      	cbz	r3, 9000f7ae <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f798:	f001 f904 	bl	900109a4 <xTaskRemoveFromEventList>
9000f79c:	2800      	cmp	r0, #0
9000f79e:	d0f4      	beq.n	9000f78a <xQueueReceive+0x18e>
					vTaskMissedYield();
9000f7a0:	f001 f99e 	bl	90010ae0 <vTaskMissedYield>
				--cRxLock;
9000f7a4:	1e6b      	subs	r3, r5, #1
9000f7a6:	b2da      	uxtb	r2, r3
9000f7a8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f7aa:	2a00      	cmp	r2, #0
9000f7ac:	d1f1      	bne.n	9000f792 <xQueueReceive+0x196>
		pxQueue->cRxLock = queueUNLOCKED;
9000f7ae:	23ff      	movs	r3, #255	; 0xff
9000f7b0:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
9000f7b4:	f7ff f960 	bl	9000ea78 <vPortExitCritical>
			( void ) xTaskResumeAll();
9000f7b8:	f000 ffd0 	bl	9001075c <xTaskResumeAll>
	taskENTER_CRITICAL();
9000f7bc:	f7ff f93a 	bl	9000ea34 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
9000f7c0:	6ba3      	ldr	r3, [r4, #56]	; 0x38
9000f7c2:	b153      	cbz	r3, 9000f7da <xQueueReceive+0x1de>
	taskEXIT_CRITICAL();
9000f7c4:	f7ff f958 	bl	9000ea78 <vPortExitCritical>
		taskENTER_CRITICAL();
9000f7c8:	f7ff f934 	bl	9000ea34 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000f7cc:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000f7ce:	2d00      	cmp	r5, #0
9000f7d0:	d162      	bne.n	9000f898 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
9000f7d2:	9b01      	ldr	r3, [sp, #4]
9000f7d4:	2b00      	cmp	r3, #0
9000f7d6:	f47f af31 	bne.w	9000f63c <xQueueReceive+0x40>
					taskEXIT_CRITICAL();
9000f7da:	f7ff f94d 	bl	9000ea78 <vPortExitCritical>
					return errQUEUE_EMPTY;
9000f7de:	2000      	movs	r0, #0
}
9000f7e0:	b005      	add	sp, #20
9000f7e2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
9000f7e6:	f7ff f947 	bl	9000ea78 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
9000f7ea:	9901      	ldr	r1, [sp, #4]
9000f7ec:	4630      	mov	r0, r6
9000f7ee:	f001 f84b 	bl	90010888 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
9000f7f2:	f7ff f91f 	bl	9000ea34 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000f7f6:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000f7fa:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f7fc:	2d00      	cmp	r5, #0
9000f7fe:	dc04      	bgt.n	9000f80a <xQueueReceive+0x20e>
9000f800:	e011      	b.n	9000f826 <xQueueReceive+0x22a>
			--cTxLock;
9000f802:	1e6b      	subs	r3, r5, #1
9000f804:	b2da      	uxtb	r2, r3
9000f806:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f808:	b16a      	cbz	r2, 9000f826 <xQueueReceive+0x22a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f80a:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f80c:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f80e:	b153      	cbz	r3, 9000f826 <xQueueReceive+0x22a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f810:	f001 f8c8 	bl	900109a4 <xTaskRemoveFromEventList>
9000f814:	2800      	cmp	r0, #0
9000f816:	d0f4      	beq.n	9000f802 <xQueueReceive+0x206>
						vTaskMissedYield();
9000f818:	f001 f962 	bl	90010ae0 <vTaskMissedYield>
			--cTxLock;
9000f81c:	1e6b      	subs	r3, r5, #1
9000f81e:	b2da      	uxtb	r2, r3
9000f820:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f822:	2a00      	cmp	r2, #0
9000f824:	d1f1      	bne.n	9000f80a <xQueueReceive+0x20e>
		pxQueue->cTxLock = queueUNLOCKED;
9000f826:	23ff      	movs	r3, #255	; 0xff
9000f828:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9000f82c:	f7ff f924 	bl	9000ea78 <vPortExitCritical>
	taskENTER_CRITICAL();
9000f830:	f7ff f900 	bl	9000ea34 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000f834:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000f838:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f83a:	2d00      	cmp	r5, #0
9000f83c:	dd14      	ble.n	9000f868 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f83e:	f104 0910 	add.w	r9, r4, #16
9000f842:	e003      	b.n	9000f84c <xQueueReceive+0x250>
				--cRxLock;
9000f844:	1e6b      	subs	r3, r5, #1
9000f846:	b2da      	uxtb	r2, r3
9000f848:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f84a:	b16a      	cbz	r2, 9000f868 <xQueueReceive+0x26c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f84c:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f84e:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f850:	b153      	cbz	r3, 9000f868 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f852:	f001 f8a7 	bl	900109a4 <xTaskRemoveFromEventList>
9000f856:	2800      	cmp	r0, #0
9000f858:	d0f4      	beq.n	9000f844 <xQueueReceive+0x248>
					vTaskMissedYield();
9000f85a:	f001 f941 	bl	90010ae0 <vTaskMissedYield>
				--cRxLock;
9000f85e:	1e6b      	subs	r3, r5, #1
9000f860:	b2da      	uxtb	r2, r3
9000f862:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000f864:	2a00      	cmp	r2, #0
9000f866:	d1f1      	bne.n	9000f84c <xQueueReceive+0x250>
		pxQueue->cRxLock = queueUNLOCKED;
9000f868:	23ff      	movs	r3, #255	; 0xff
9000f86a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
9000f86e:	f7ff f903 	bl	9000ea78 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
9000f872:	f000 ff73 	bl	9001075c <xTaskResumeAll>
9000f876:	2800      	cmp	r0, #0
9000f878:	d1a6      	bne.n	9000f7c8 <xQueueReceive+0x1cc>
					portYIELD_WITHIN_API();
9000f87a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000f87e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000f882:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000f886:	f3bf 8f4f 	dsb	sy
9000f88a:	f3bf 8f6f 	isb	sy
		taskENTER_CRITICAL();
9000f88e:	f7ff f8d1 	bl	9000ea34 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000f892:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000f894:	2d00      	cmp	r5, #0
9000f896:	d09c      	beq.n	9000f7d2 <xQueueReceive+0x1d6>
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
9000f898:	6c22      	ldr	r2, [r4, #64]	; 0x40
9000f89a:	b152      	cbz	r2, 9000f8b2 <xQueueReceive+0x2b6>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000f89c:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000f89e:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000f8a0:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000f8a2:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000f8a4:	60e1      	str	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000f8a6:	d301      	bcc.n	9000f8ac <xQueueReceive+0x2b0>
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
9000f8a8:	6821      	ldr	r1, [r4, #0]
9000f8aa:	60e1      	str	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
9000f8ac:	4638      	mov	r0, r7
9000f8ae:	f018 fccd 	bl	9002824c <memcpy>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
9000f8b2:	3d01      	subs	r5, #1
9000f8b4:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000f8b6:	6923      	ldr	r3, [r4, #16]
9000f8b8:	b963      	cbnz	r3, 9000f8d4 <xQueueReceive+0x2d8>
				taskEXIT_CRITICAL();
9000f8ba:	f7ff f8dd 	bl	9000ea78 <vPortExitCritical>
				return pdPASS;
9000f8be:	2001      	movs	r0, #1
9000f8c0:	e78e      	b.n	9000f7e0 <xQueueReceive+0x1e4>
9000f8c2:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f8c6:	f383 8811 	msr	BASEPRI, r3
9000f8ca:	f3bf 8f6f 	isb	sy
9000f8ce:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
9000f8d2:	e7fe      	b.n	9000f8d2 <xQueueReceive+0x2d6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000f8d4:	f104 0010 	add.w	r0, r4, #16
9000f8d8:	f001 f864 	bl	900109a4 <xTaskRemoveFromEventList>
9000f8dc:	2800      	cmp	r0, #0
9000f8de:	d0ec      	beq.n	9000f8ba <xQueueReceive+0x2be>
						queueYIELD_IF_USING_PREEMPTION();
9000f8e0:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000f8e4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000f8e8:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000f8ec:	f3bf 8f4f 	dsb	sy
9000f8f0:	f3bf 8f6f 	isb	sy
9000f8f4:	e7e1      	b.n	9000f8ba <xQueueReceive+0x2be>
9000f8f6:	bf00      	nop

9000f8f8 <xQueueSemaphoreTake>:
{
9000f8f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000f8fc:	b084      	sub	sp, #16
9000f8fe:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
9000f900:	2800      	cmp	r0, #0
9000f902:	d05c      	beq.n	9000f9be <xQueueSemaphoreTake+0xc6>
	configASSERT( pxQueue->uxItemSize == 0 );
9000f904:	6c07      	ldr	r7, [r0, #64]	; 0x40
9000f906:	4604      	mov	r4, r0
9000f908:	b147      	cbz	r7, 9000f91c <xQueueSemaphoreTake+0x24>
9000f90a:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f90e:	f383 8811 	msr	BASEPRI, r3
9000f912:	f3bf 8f6f 	isb	sy
9000f916:	f3bf 8f4f 	dsb	sy
9000f91a:	e7fe      	b.n	9000f91a <xQueueSemaphoreTake+0x22>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000f91c:	f001 f8ec 	bl	90010af8 <xTaskGetSchedulerState>
9000f920:	4605      	mov	r5, r0
9000f922:	2800      	cmp	r0, #0
9000f924:	d054      	beq.n	9000f9d0 <xQueueSemaphoreTake+0xd8>
9000f926:	463d      	mov	r5, r7
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f928:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
9000f92c:	f7ff f882 	bl	9000ea34 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
9000f930:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
9000f932:	2b00      	cmp	r3, #0
9000f934:	f040 8149 	bne.w	9000fbca <xQueueSemaphoreTake+0x2d2>
				if( xTicksToWait == ( TickType_t ) 0 )
9000f938:	9b01      	ldr	r3, [sp, #4]
9000f93a:	2b00      	cmp	r3, #0
9000f93c:	f000 813a 	beq.w	9000fbb4 <xQueueSemaphoreTake+0x2bc>
				else if( xEntryTimeSet == pdFALSE )
9000f940:	2d00      	cmp	r5, #0
9000f942:	f000 809d 	beq.w	9000fa80 <xQueueSemaphoreTake+0x188>
		taskEXIT_CRITICAL();
9000f946:	f7ff f897 	bl	9000ea78 <vPortExitCritical>
		vTaskSuspendAll();
9000f94a:	f000 feff 	bl	9001074c <vTaskSuspendAll>
		prvLockQueue( pxQueue );
9000f94e:	f7ff f871 	bl	9000ea34 <vPortEnterCritical>
9000f952:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000f956:	2bff      	cmp	r3, #255	; 0xff
9000f958:	d102      	bne.n	9000f960 <xQueueSemaphoreTake+0x68>
9000f95a:	2300      	movs	r3, #0
9000f95c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
9000f960:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000f964:	2bff      	cmp	r3, #255	; 0xff
9000f966:	d102      	bne.n	9000f96e <xQueueSemaphoreTake+0x76>
9000f968:	2300      	movs	r3, #0
9000f96a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
9000f96e:	f7ff f883 	bl	9000ea78 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
9000f972:	a901      	add	r1, sp, #4
9000f974:	a802      	add	r0, sp, #8
9000f976:	f001 f86b 	bl	90010a50 <xTaskCheckForTimeOut>
9000f97a:	2800      	cmp	r0, #0
9000f97c:	d135      	bne.n	9000f9ea <xQueueSemaphoreTake+0xf2>
	taskENTER_CRITICAL();
9000f97e:	f7ff f859 	bl	9000ea34 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
9000f982:	6ba3      	ldr	r3, [r4, #56]	; 0x38
9000f984:	2b00      	cmp	r3, #0
9000f986:	f000 80a4 	beq.w	9000fad2 <xQueueSemaphoreTake+0x1da>
	taskEXIT_CRITICAL();
9000f98a:	f7ff f875 	bl	9000ea78 <vPortExitCritical>
	taskENTER_CRITICAL();
9000f98e:	f7ff f851 	bl	9000ea34 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000f992:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000f996:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f998:	2d00      	cmp	r5, #0
9000f99a:	dc05      	bgt.n	9000f9a8 <xQueueSemaphoreTake+0xb0>
9000f99c:	e074      	b.n	9000fa88 <xQueueSemaphoreTake+0x190>
			--cTxLock;
9000f99e:	1e6b      	subs	r3, r5, #1
9000f9a0:	b2da      	uxtb	r2, r3
9000f9a2:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f9a4:	2a00      	cmp	r2, #0
9000f9a6:	d06f      	beq.n	9000fa88 <xQueueSemaphoreTake+0x190>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f9a8:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f9aa:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000f9ac:	2b00      	cmp	r3, #0
9000f9ae:	d06b      	beq.n	9000fa88 <xQueueSemaphoreTake+0x190>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000f9b0:	f000 fff8 	bl	900109a4 <xTaskRemoveFromEventList>
9000f9b4:	2800      	cmp	r0, #0
9000f9b6:	d0f2      	beq.n	9000f99e <xQueueSemaphoreTake+0xa6>
						vTaskMissedYield();
9000f9b8:	f001 f892 	bl	90010ae0 <vTaskMissedYield>
9000f9bc:	e7ef      	b.n	9000f99e <xQueueSemaphoreTake+0xa6>
9000f9be:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f9c2:	f383 8811 	msr	BASEPRI, r3
9000f9c6:	f3bf 8f6f 	isb	sy
9000f9ca:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
9000f9ce:	e7fe      	b.n	9000f9ce <xQueueSemaphoreTake+0xd6>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000f9d0:	9b01      	ldr	r3, [sp, #4]
9000f9d2:	2b00      	cmp	r3, #0
9000f9d4:	f000 80d4 	beq.w	9000fb80 <xQueueSemaphoreTake+0x288>
9000f9d8:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f9dc:	f383 8811 	msr	BASEPRI, r3
9000f9e0:	f3bf 8f6f 	isb	sy
9000f9e4:	f3bf 8f4f 	dsb	sy
9000f9e8:	e7fe      	b.n	9000f9e8 <xQueueSemaphoreTake+0xf0>
	taskENTER_CRITICAL();
9000f9ea:	f7ff f823 	bl	9000ea34 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000f9ee:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000f9f2:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000f9f4:	2d00      	cmp	r5, #0
9000f9f6:	dc04      	bgt.n	9000fa02 <xQueueSemaphoreTake+0x10a>
9000f9f8:	e011      	b.n	9000fa1e <xQueueSemaphoreTake+0x126>
			--cTxLock;
9000f9fa:	1e6b      	subs	r3, r5, #1
9000f9fc:	b2da      	uxtb	r2, r3
9000f9fe:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000fa00:	b16a      	cbz	r2, 9000fa1e <xQueueSemaphoreTake+0x126>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000fa02:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000fa04:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000fa06:	b153      	cbz	r3, 9000fa1e <xQueueSemaphoreTake+0x126>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000fa08:	f000 ffcc 	bl	900109a4 <xTaskRemoveFromEventList>
9000fa0c:	2800      	cmp	r0, #0
9000fa0e:	d0f4      	beq.n	9000f9fa <xQueueSemaphoreTake+0x102>
						vTaskMissedYield();
9000fa10:	f001 f866 	bl	90010ae0 <vTaskMissedYield>
			--cTxLock;
9000fa14:	1e6b      	subs	r3, r5, #1
9000fa16:	b2da      	uxtb	r2, r3
9000fa18:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000fa1a:	2a00      	cmp	r2, #0
9000fa1c:	d1f1      	bne.n	9000fa02 <xQueueSemaphoreTake+0x10a>
		pxQueue->cTxLock = queueUNLOCKED;
9000fa1e:	23ff      	movs	r3, #255	; 0xff
9000fa20:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9000fa24:	f7ff f828 	bl	9000ea78 <vPortExitCritical>
	taskENTER_CRITICAL();
9000fa28:	f7ff f804 	bl	9000ea34 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000fa2c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000fa30:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000fa32:	2d00      	cmp	r5, #0
9000fa34:	dd14      	ble.n	9000fa60 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000fa36:	f104 0810 	add.w	r8, r4, #16
9000fa3a:	e003      	b.n	9000fa44 <xQueueSemaphoreTake+0x14c>
				--cRxLock;
9000fa3c:	1e6b      	subs	r3, r5, #1
9000fa3e:	b2da      	uxtb	r2, r3
9000fa40:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000fa42:	b16a      	cbz	r2, 9000fa60 <xQueueSemaphoreTake+0x168>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000fa44:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000fa46:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000fa48:	b153      	cbz	r3, 9000fa60 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000fa4a:	f000 ffab 	bl	900109a4 <xTaskRemoveFromEventList>
9000fa4e:	2800      	cmp	r0, #0
9000fa50:	d0f4      	beq.n	9000fa3c <xQueueSemaphoreTake+0x144>
					vTaskMissedYield();
9000fa52:	f001 f845 	bl	90010ae0 <vTaskMissedYield>
				--cRxLock;
9000fa56:	1e6b      	subs	r3, r5, #1
9000fa58:	b2da      	uxtb	r2, r3
9000fa5a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000fa5c:	2a00      	cmp	r2, #0
9000fa5e:	d1f1      	bne.n	9000fa44 <xQueueSemaphoreTake+0x14c>
		pxQueue->cRxLock = queueUNLOCKED;
9000fa60:	23ff      	movs	r3, #255	; 0xff
9000fa62:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
9000fa66:	f7ff f807 	bl	9000ea78 <vPortExitCritical>
			( void ) xTaskResumeAll();
9000fa6a:	f000 fe77 	bl	9001075c <xTaskResumeAll>
	taskENTER_CRITICAL();
9000fa6e:	f7fe ffe1 	bl	9000ea34 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
9000fa72:	6ba3      	ldr	r3, [r4, #56]	; 0x38
9000fa74:	2b00      	cmp	r3, #0
9000fa76:	d07c      	beq.n	9000fb72 <xQueueSemaphoreTake+0x27a>
	taskEXIT_CRITICAL();
9000fa78:	f7fe fffe 	bl	9000ea78 <vPortExitCritical>
	return xReturn;
9000fa7c:	2501      	movs	r5, #1
9000fa7e:	e755      	b.n	9000f92c <xQueueSemaphoreTake+0x34>
					vTaskInternalSetTimeOutState( &xTimeOut );
9000fa80:	a802      	add	r0, sp, #8
9000fa82:	f000 ffd9 	bl	90010a38 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
9000fa86:	e75e      	b.n	9000f946 <xQueueSemaphoreTake+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
9000fa88:	23ff      	movs	r3, #255	; 0xff
9000fa8a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9000fa8e:	f7fe fff3 	bl	9000ea78 <vPortExitCritical>
	taskENTER_CRITICAL();
9000fa92:	f7fe ffcf 	bl	9000ea34 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000fa96:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000fa9a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000fa9c:	2d00      	cmp	r5, #0
9000fa9e:	dd10      	ble.n	9000fac2 <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000faa0:	f104 0810 	add.w	r8, r4, #16
9000faa4:	e003      	b.n	9000faae <xQueueSemaphoreTake+0x1b6>
				--cRxLock;
9000faa6:	1e6b      	subs	r3, r5, #1
9000faa8:	b2da      	uxtb	r2, r3
9000faaa:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000faac:	b14a      	cbz	r2, 9000fac2 <xQueueSemaphoreTake+0x1ca>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000faae:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000fab0:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000fab2:	b133      	cbz	r3, 9000fac2 <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000fab4:	f000 ff76 	bl	900109a4 <xTaskRemoveFromEventList>
9000fab8:	2800      	cmp	r0, #0
9000faba:	d0f4      	beq.n	9000faa6 <xQueueSemaphoreTake+0x1ae>
					vTaskMissedYield();
9000fabc:	f001 f810 	bl	90010ae0 <vTaskMissedYield>
9000fac0:	e7f1      	b.n	9000faa6 <xQueueSemaphoreTake+0x1ae>
		pxQueue->cRxLock = queueUNLOCKED;
9000fac2:	23ff      	movs	r3, #255	; 0xff
9000fac4:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
9000fac8:	f7fe ffd6 	bl	9000ea78 <vPortExitCritical>
				( void ) xTaskResumeAll();
9000facc:	f000 fe46 	bl	9001075c <xTaskResumeAll>
9000fad0:	e7d4      	b.n	9000fa7c <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
9000fad2:	f7fe ffd1 	bl	9000ea78 <vPortExitCritical>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000fad6:	6823      	ldr	r3, [r4, #0]
9000fad8:	2b00      	cmp	r3, #0
9000fada:	d062      	beq.n	9000fba2 <xQueueSemaphoreTake+0x2aa>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
9000fadc:	9901      	ldr	r1, [sp, #4]
9000fade:	4630      	mov	r0, r6
9000fae0:	f000 fed2 	bl	90010888 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
9000fae4:	f7fe ffa6 	bl	9000ea34 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000fae8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000faec:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000faee:	2d00      	cmp	r5, #0
9000faf0:	dc04      	bgt.n	9000fafc <xQueueSemaphoreTake+0x204>
9000faf2:	e00d      	b.n	9000fb10 <xQueueSemaphoreTake+0x218>
			--cTxLock;
9000faf4:	1e6b      	subs	r3, r5, #1
9000faf6:	b2da      	uxtb	r2, r3
9000faf8:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000fafa:	b14a      	cbz	r2, 9000fb10 <xQueueSemaphoreTake+0x218>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000fafc:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000fafe:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000fb00:	b133      	cbz	r3, 9000fb10 <xQueueSemaphoreTake+0x218>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000fb02:	f000 ff4f 	bl	900109a4 <xTaskRemoveFromEventList>
9000fb06:	2800      	cmp	r0, #0
9000fb08:	d0f4      	beq.n	9000faf4 <xQueueSemaphoreTake+0x1fc>
						vTaskMissedYield();
9000fb0a:	f000 ffe9 	bl	90010ae0 <vTaskMissedYield>
9000fb0e:	e7f1      	b.n	9000faf4 <xQueueSemaphoreTake+0x1fc>
		pxQueue->cTxLock = queueUNLOCKED;
9000fb10:	23ff      	movs	r3, #255	; 0xff
9000fb12:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9000fb16:	f7fe ffaf 	bl	9000ea78 <vPortExitCritical>
	taskENTER_CRITICAL();
9000fb1a:	f7fe ff8b 	bl	9000ea34 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000fb1e:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000fb22:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000fb24:	2d00      	cmp	r5, #0
9000fb26:	dd10      	ble.n	9000fb4a <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000fb28:	f104 0810 	add.w	r8, r4, #16
9000fb2c:	e003      	b.n	9000fb36 <xQueueSemaphoreTake+0x23e>
				--cRxLock;
9000fb2e:	1e6b      	subs	r3, r5, #1
9000fb30:	b2da      	uxtb	r2, r3
9000fb32:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000fb34:	b14a      	cbz	r2, 9000fb4a <xQueueSemaphoreTake+0x252>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000fb36:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000fb38:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000fb3a:	b133      	cbz	r3, 9000fb4a <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000fb3c:	f000 ff32 	bl	900109a4 <xTaskRemoveFromEventList>
9000fb40:	2800      	cmp	r0, #0
9000fb42:	d0f4      	beq.n	9000fb2e <xQueueSemaphoreTake+0x236>
					vTaskMissedYield();
9000fb44:	f000 ffcc 	bl	90010ae0 <vTaskMissedYield>
9000fb48:	e7f1      	b.n	9000fb2e <xQueueSemaphoreTake+0x236>
		pxQueue->cRxLock = queueUNLOCKED;
9000fb4a:	23ff      	movs	r3, #255	; 0xff
9000fb4c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
9000fb50:	f7fe ff92 	bl	9000ea78 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
9000fb54:	f000 fe02 	bl	9001075c <xTaskResumeAll>
9000fb58:	2800      	cmp	r0, #0
9000fb5a:	d18f      	bne.n	9000fa7c <xQueueSemaphoreTake+0x184>
					portYIELD_WITHIN_API();
9000fb5c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000fb60:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000fb64:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000fb68:	f3bf 8f4f 	dsb	sy
9000fb6c:	f3bf 8f6f 	isb	sy
9000fb70:	e784      	b.n	9000fa7c <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
9000fb72:	f7fe ff81 	bl	9000ea78 <vPortExitCritical>
					if( xInheritanceOccurred != pdFALSE )
9000fb76:	b92f      	cbnz	r7, 9000fb84 <xQueueSemaphoreTake+0x28c>
}
9000fb78:	4638      	mov	r0, r7
9000fb7a:	b004      	add	sp, #16
9000fb7c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9000fb80:	4607      	mov	r7, r0
9000fb82:	e6d1      	b.n	9000f928 <xQueueSemaphoreTake+0x30>
						taskENTER_CRITICAL();
9000fb84:	f7fe ff56 	bl	9000ea34 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
9000fb88:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000fb8a:	b119      	cbz	r1, 9000fb94 <xQueueSemaphoreTake+0x29c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
9000fb8c:	6b23      	ldr	r3, [r4, #48]	; 0x30
9000fb8e:	6819      	ldr	r1, [r3, #0]
9000fb90:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
9000fb94:	68a0      	ldr	r0, [r4, #8]
				return errQUEUE_EMPTY;
9000fb96:	2700      	movs	r7, #0
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
9000fb98:	f001 f84a 	bl	90010c30 <vTaskPriorityDisinheritAfterTimeout>
						taskEXIT_CRITICAL();
9000fb9c:	f7fe ff6c 	bl	9000ea78 <vPortExitCritical>
9000fba0:	e7ea      	b.n	9000fb78 <xQueueSemaphoreTake+0x280>
						taskENTER_CRITICAL();
9000fba2:	f7fe ff47 	bl	9000ea34 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
9000fba6:	68a0      	ldr	r0, [r4, #8]
9000fba8:	f000 ffb6 	bl	90010b18 <xTaskPriorityInherit>
9000fbac:	4607      	mov	r7, r0
						taskEXIT_CRITICAL();
9000fbae:	f7fe ff63 	bl	9000ea78 <vPortExitCritical>
9000fbb2:	e793      	b.n	9000fadc <xQueueSemaphoreTake+0x1e4>
						configASSERT( xInheritanceOccurred == pdFALSE );
9000fbb4:	2f00      	cmp	r7, #0
9000fbb6:	d0f1      	beq.n	9000fb9c <xQueueSemaphoreTake+0x2a4>
9000fbb8:	f04f 0350 	mov.w	r3, #80	; 0x50
9000fbbc:	f383 8811 	msr	BASEPRI, r3
9000fbc0:	f3bf 8f6f 	isb	sy
9000fbc4:	f3bf 8f4f 	dsb	sy
9000fbc8:	e7fe      	b.n	9000fbc8 <xQueueSemaphoreTake+0x2d0>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
9000fbca:	3b01      	subs	r3, #1
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000fbcc:	6822      	ldr	r2, [r4, #0]
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
9000fbce:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000fbd0:	b12a      	cbz	r2, 9000fbde <xQueueSemaphoreTake+0x2e6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000fbd2:	6923      	ldr	r3, [r4, #16]
9000fbd4:	b93b      	cbnz	r3, 9000fbe6 <xQueueSemaphoreTake+0x2ee>
				return pdPASS;
9000fbd6:	2701      	movs	r7, #1
				taskEXIT_CRITICAL();
9000fbd8:	f7fe ff4e 	bl	9000ea78 <vPortExitCritical>
				return pdPASS;
9000fbdc:	e7cc      	b.n	9000fb78 <xQueueSemaphoreTake+0x280>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
9000fbde:	f001 f87b 	bl	90010cd8 <pvTaskIncrementMutexHeldCount>
9000fbe2:	60a0      	str	r0, [r4, #8]
9000fbe4:	e7f5      	b.n	9000fbd2 <xQueueSemaphoreTake+0x2da>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000fbe6:	f104 0010 	add.w	r0, r4, #16
9000fbea:	f000 fedb 	bl	900109a4 <xTaskRemoveFromEventList>
9000fbee:	2800      	cmp	r0, #0
9000fbf0:	d0f1      	beq.n	9000fbd6 <xQueueSemaphoreTake+0x2de>
						queueYIELD_IF_USING_PREEMPTION();
9000fbf2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000fbf6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000fbfa:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000fbfe:	f3bf 8f4f 	dsb	sy
9000fc02:	f3bf 8f6f 	isb	sy
9000fc06:	e7e6      	b.n	9000fbd6 <xQueueSemaphoreTake+0x2de>

9000fc08 <xQueueTakeMutexRecursive>:
		configASSERT( pxMutex );
9000fc08:	b1a8      	cbz	r0, 9000fc36 <xQueueTakeMutexRecursive+0x2e>
	{
9000fc0a:	b570      	push	{r4, r5, r6, lr}
		if( pxMutex->u.xSemaphore.xMutexHolder == xTaskGetCurrentTaskHandle() )
9000fc0c:	6886      	ldr	r6, [r0, #8]
9000fc0e:	4604      	mov	r4, r0
9000fc10:	460d      	mov	r5, r1
9000fc12:	f000 ff6b 	bl	90010aec <xTaskGetCurrentTaskHandle>
9000fc16:	4286      	cmp	r6, r0
9000fc18:	d008      	beq.n	9000fc2c <xQueueTakeMutexRecursive+0x24>
			xReturn = xQueueSemaphoreTake( pxMutex, xTicksToWait );
9000fc1a:	4629      	mov	r1, r5
9000fc1c:	4620      	mov	r0, r4
9000fc1e:	f7ff fe6b 	bl	9000f8f8 <xQueueSemaphoreTake>
			if( xReturn != pdFAIL )
9000fc22:	b110      	cbz	r0, 9000fc2a <xQueueTakeMutexRecursive+0x22>
				( pxMutex->u.xSemaphore.uxRecursiveCallCount )++;
9000fc24:	68e3      	ldr	r3, [r4, #12]
9000fc26:	3301      	adds	r3, #1
9000fc28:	60e3      	str	r3, [r4, #12]
	}
9000fc2a:	bd70      	pop	{r4, r5, r6, pc}
			( pxMutex->u.xSemaphore.uxRecursiveCallCount )++;
9000fc2c:	68e3      	ldr	r3, [r4, #12]
			xReturn = pdPASS;
9000fc2e:	2001      	movs	r0, #1
			( pxMutex->u.xSemaphore.uxRecursiveCallCount )++;
9000fc30:	4403      	add	r3, r0
9000fc32:	60e3      	str	r3, [r4, #12]
	}
9000fc34:	bd70      	pop	{r4, r5, r6, pc}
9000fc36:	f04f 0350 	mov.w	r3, #80	; 0x50
9000fc3a:	f383 8811 	msr	BASEPRI, r3
9000fc3e:	f3bf 8f6f 	isb	sy
9000fc42:	f3bf 8f4f 	dsb	sy
		configASSERT( pxMutex );
9000fc46:	e7fe      	b.n	9000fc46 <xQueueTakeMutexRecursive+0x3e>

9000fc48 <xQueueReceiveFromISR>:
{
9000fc48:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	configASSERT( pxQueue );
9000fc4c:	b310      	cbz	r0, 9000fc94 <xQueueReceiveFromISR+0x4c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000fc4e:	460e      	mov	r6, r1
9000fc50:	4604      	mov	r4, r0
9000fc52:	4617      	mov	r7, r2
9000fc54:	b191      	cbz	r1, 9000fc7c <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
9000fc56:	f7ff f81f 	bl	9000ec98 <vPortValidateInterruptPriority>
	__asm volatile
9000fc5a:	f3ef 8911 	mrs	r9, BASEPRI
9000fc5e:	f04f 0350 	mov.w	r3, #80	; 0x50
9000fc62:	f383 8811 	msr	BASEPRI, r3
9000fc66:	f3bf 8f6f 	isb	sy
9000fc6a:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000fc6e:	6ba5      	ldr	r5, [r4, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000fc70:	b9cd      	cbnz	r5, 9000fca6 <xQueueReceiveFromISR+0x5e>
			xReturn = pdFAIL;
9000fc72:	4628      	mov	r0, r5
	__asm volatile
9000fc74:	f389 8811 	msr	BASEPRI, r9
}
9000fc78:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000fc7c:	6c03      	ldr	r3, [r0, #64]	; 0x40
9000fc7e:	2b00      	cmp	r3, #0
9000fc80:	d0e9      	beq.n	9000fc56 <xQueueReceiveFromISR+0xe>
	__asm volatile
9000fc82:	f04f 0350 	mov.w	r3, #80	; 0x50
9000fc86:	f383 8811 	msr	BASEPRI, r3
9000fc8a:	f3bf 8f6f 	isb	sy
9000fc8e:	f3bf 8f4f 	dsb	sy
9000fc92:	e7fe      	b.n	9000fc92 <xQueueReceiveFromISR+0x4a>
9000fc94:	f04f 0350 	mov.w	r3, #80	; 0x50
9000fc98:	f383 8811 	msr	BASEPRI, r3
9000fc9c:	f3bf 8f6f 	isb	sy
9000fca0:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000fca4:	e7fe      	b.n	9000fca4 <xQueueReceiveFromISR+0x5c>
			const int8_t cRxLock = pxQueue->cRxLock;
9000fca6:	f894 8044 	ldrb.w	r8, [r4, #68]	; 0x44
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
9000fcaa:	6c22      	ldr	r2, [r4, #64]	; 0x40
			const int8_t cRxLock = pxQueue->cRxLock;
9000fcac:	fa4f f888 	sxtb.w	r8, r8
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
9000fcb0:	b142      	cbz	r2, 9000fcc4 <xQueueReceiveFromISR+0x7c>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000fcb2:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000fcb4:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000fcb6:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000fcb8:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000fcba:	60e1      	str	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000fcbc:	d215      	bcs.n	9000fcea <xQueueReceiveFromISR+0xa2>
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
9000fcbe:	4630      	mov	r0, r6
9000fcc0:	f018 fac4 	bl	9002824c <memcpy>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
9000fcc4:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
9000fcc6:	f1b8 3fff 	cmp.w	r8, #4294967295
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
9000fcca:	63a5      	str	r5, [r4, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
9000fccc:	d009      	beq.n	9000fce2 <xQueueReceiveFromISR+0x9a>
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
9000fcce:	f108 0301 	add.w	r3, r8, #1
			xReturn = pdPASS;
9000fcd2:	2001      	movs	r0, #1
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
9000fcd4:	b25b      	sxtb	r3, r3
9000fcd6:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	__asm volatile
9000fcda:	f389 8811 	msr	BASEPRI, r9
}
9000fcde:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000fce2:	6923      	ldr	r3, [r4, #16]
9000fce4:	b923      	cbnz	r3, 9000fcf0 <xQueueReceiveFromISR+0xa8>
			xReturn = pdPASS;
9000fce6:	2001      	movs	r0, #1
9000fce8:	e7c4      	b.n	9000fc74 <xQueueReceiveFromISR+0x2c>
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
9000fcea:	6821      	ldr	r1, [r4, #0]
9000fcec:	60e1      	str	r1, [r4, #12]
9000fcee:	e7e6      	b.n	9000fcbe <xQueueReceiveFromISR+0x76>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000fcf0:	f104 0010 	add.w	r0, r4, #16
9000fcf4:	f000 fe56 	bl	900109a4 <xTaskRemoveFromEventList>
						if( pxHigherPriorityTaskWoken != NULL )
9000fcf8:	2f00      	cmp	r7, #0
9000fcfa:	d0f4      	beq.n	9000fce6 <xQueueReceiveFromISR+0x9e>
9000fcfc:	2800      	cmp	r0, #0
9000fcfe:	d0f2      	beq.n	9000fce6 <xQueueReceiveFromISR+0x9e>
							*pxHigherPriorityTaskWoken = pdTRUE;
9000fd00:	2301      	movs	r3, #1
			xReturn = pdPASS;
9000fd02:	4618      	mov	r0, r3
							*pxHigherPriorityTaskWoken = pdTRUE;
9000fd04:	603b      	str	r3, [r7, #0]
9000fd06:	e7b5      	b.n	9000fc74 <xQueueReceiveFromISR+0x2c>

9000fd08 <vQueueDelete>:
	configASSERT( pxQueue );
9000fd08:	b1e0      	cbz	r0, 9000fd44 <vQueueDelete+0x3c>

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
9000fd0a:	4b21      	ldr	r3, [pc, #132]	; (9000fd90 <vQueueDelete+0x88>)
9000fd0c:	685a      	ldr	r2, [r3, #4]
9000fd0e:	4290      	cmp	r0, r2
9000fd10:	d02b      	beq.n	9000fd6a <vQueueDelete+0x62>
9000fd12:	68da      	ldr	r2, [r3, #12]
9000fd14:	4290      	cmp	r0, r2
9000fd16:	d02a      	beq.n	9000fd6e <vQueueDelete+0x66>
9000fd18:	695a      	ldr	r2, [r3, #20]
9000fd1a:	4290      	cmp	r0, r2
9000fd1c:	d029      	beq.n	9000fd72 <vQueueDelete+0x6a>
9000fd1e:	69da      	ldr	r2, [r3, #28]
9000fd20:	4290      	cmp	r0, r2
9000fd22:	d028      	beq.n	9000fd76 <vQueueDelete+0x6e>
9000fd24:	6a5a      	ldr	r2, [r3, #36]	; 0x24
9000fd26:	4290      	cmp	r0, r2
9000fd28:	d027      	beq.n	9000fd7a <vQueueDelete+0x72>
9000fd2a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
9000fd2c:	4290      	cmp	r0, r2
9000fd2e:	d014      	beq.n	9000fd5a <vQueueDelete+0x52>
9000fd30:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000fd32:	4290      	cmp	r0, r2
9000fd34:	d023      	beq.n	9000fd7e <vQueueDelete+0x76>
9000fd36:	6bda      	ldr	r2, [r3, #60]	; 0x3c
9000fd38:	4290      	cmp	r0, r2
9000fd3a:	d022      	beq.n	9000fd82 <vQueueDelete+0x7a>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
9000fd3c:	f890 3046 	ldrb.w	r3, [r0, #70]	; 0x46
9000fd40:	b14b      	cbz	r3, 9000fd56 <vQueueDelete+0x4e>
}
9000fd42:	4770      	bx	lr
	__asm volatile
9000fd44:	f04f 0350 	mov.w	r3, #80	; 0x50
9000fd48:	f383 8811 	msr	BASEPRI, r3
9000fd4c:	f3bf 8f6f 	isb	sy
9000fd50:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000fd54:	e7fe      	b.n	9000fd54 <vQueueDelete+0x4c>
			vPortFree( pxQueue );
9000fd56:	f7fe bd51 	b.w	9000e7fc <vPortFree>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9000fd5a:	2205      	movs	r2, #5
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
9000fd5c:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
9000fd60:	ed9f 7b09 	vldr	d7, [pc, #36]	; 9000fd88 <vQueueDelete+0x80>
9000fd64:	ed83 7b00 	vstr	d7, [r3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
				break;
9000fd68:	e7e8      	b.n	9000fd3c <vQueueDelete+0x34>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9000fd6a:	2200      	movs	r2, #0
9000fd6c:	e7f6      	b.n	9000fd5c <vQueueDelete+0x54>
9000fd6e:	2201      	movs	r2, #1
9000fd70:	e7f4      	b.n	9000fd5c <vQueueDelete+0x54>
9000fd72:	2202      	movs	r2, #2
9000fd74:	e7f2      	b.n	9000fd5c <vQueueDelete+0x54>
9000fd76:	2203      	movs	r2, #3
9000fd78:	e7f0      	b.n	9000fd5c <vQueueDelete+0x54>
9000fd7a:	2204      	movs	r2, #4
9000fd7c:	e7ee      	b.n	9000fd5c <vQueueDelete+0x54>
9000fd7e:	2206      	movs	r2, #6
9000fd80:	e7ec      	b.n	9000fd5c <vQueueDelete+0x54>
9000fd82:	2207      	movs	r2, #7
9000fd84:	e7ea      	b.n	9000fd5c <vQueueDelete+0x54>
9000fd86:	bf00      	nop
	...
9000fd90:	240391c0 	.word	0x240391c0

9000fd94 <vQueueAddToRegistry>:
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
9000fd94:	4b12      	ldr	r3, [pc, #72]	; (9000fde0 <vQueueAddToRegistry+0x4c>)
9000fd96:	681a      	ldr	r2, [r3, #0]
9000fd98:	b17a      	cbz	r2, 9000fdba <vQueueAddToRegistry+0x26>
9000fd9a:	689a      	ldr	r2, [r3, #8]
9000fd9c:	b162      	cbz	r2, 9000fdb8 <vQueueAddToRegistry+0x24>
9000fd9e:	691a      	ldr	r2, [r3, #16]
9000fda0:	b192      	cbz	r2, 9000fdc8 <vQueueAddToRegistry+0x34>
9000fda2:	699a      	ldr	r2, [r3, #24]
9000fda4:	b192      	cbz	r2, 9000fdcc <vQueueAddToRegistry+0x38>
9000fda6:	6a1a      	ldr	r2, [r3, #32]
9000fda8:	b192      	cbz	r2, 9000fdd0 <vQueueAddToRegistry+0x3c>
9000fdaa:	6a9a      	ldr	r2, [r3, #40]	; 0x28
9000fdac:	b192      	cbz	r2, 9000fdd4 <vQueueAddToRegistry+0x40>
9000fdae:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000fdb0:	b192      	cbz	r2, 9000fdd8 <vQueueAddToRegistry+0x44>
9000fdb2:	6b9a      	ldr	r2, [r3, #56]	; 0x38
9000fdb4:	b192      	cbz	r2, 9000fddc <vQueueAddToRegistry+0x48>
	}
9000fdb6:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9000fdb8:	2201      	movs	r2, #1
				xQueueRegistry[ ux ].xHandle = xQueue;
9000fdba:	eb03 0cc2 	add.w	ip, r3, r2, lsl #3
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
9000fdbe:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
9000fdc2:	f8cc 0004 	str.w	r0, [ip, #4]
	}
9000fdc6:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9000fdc8:	2202      	movs	r2, #2
9000fdca:	e7f6      	b.n	9000fdba <vQueueAddToRegistry+0x26>
9000fdcc:	2203      	movs	r2, #3
9000fdce:	e7f4      	b.n	9000fdba <vQueueAddToRegistry+0x26>
9000fdd0:	2204      	movs	r2, #4
9000fdd2:	e7f2      	b.n	9000fdba <vQueueAddToRegistry+0x26>
9000fdd4:	2205      	movs	r2, #5
9000fdd6:	e7f0      	b.n	9000fdba <vQueueAddToRegistry+0x26>
9000fdd8:	2206      	movs	r2, #6
9000fdda:	e7ee      	b.n	9000fdba <vQueueAddToRegistry+0x26>
9000fddc:	2207      	movs	r2, #7
9000fdde:	e7ec      	b.n	9000fdba <vQueueAddToRegistry+0x26>
9000fde0:	240391c0 	.word	0x240391c0

9000fde4 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
9000fde4:	b570      	push	{r4, r5, r6, lr}
9000fde6:	4605      	mov	r5, r0
9000fde8:	460e      	mov	r6, r1
9000fdea:	4614      	mov	r4, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
9000fdec:	f7fe fe22 	bl	9000ea34 <vPortEnterCritical>
9000fdf0:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
9000fdf4:	2bff      	cmp	r3, #255	; 0xff
9000fdf6:	d102      	bne.n	9000fdfe <vQueueWaitForMessageRestricted+0x1a>
9000fdf8:	2300      	movs	r3, #0
9000fdfa:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
9000fdfe:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
9000fe02:	2bff      	cmp	r3, #255	; 0xff
9000fe04:	d102      	bne.n	9000fe0c <vQueueWaitForMessageRestricted+0x28>
9000fe06:	2300      	movs	r3, #0
9000fe08:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
9000fe0c:	f7fe fe34 	bl	9000ea78 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
9000fe10:	6bab      	ldr	r3, [r5, #56]	; 0x38
9000fe12:	2b00      	cmp	r3, #0
9000fe14:	d043      	beq.n	9000fe9e <vQueueWaitForMessageRestricted+0xba>
	taskENTER_CRITICAL();
9000fe16:	f7fe fe0d 	bl	9000ea34 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000fe1a:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
9000fe1e:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000fe20:	2c00      	cmp	r4, #0
9000fe22:	dd14      	ble.n	9000fe4e <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000fe24:	f105 0624 	add.w	r6, r5, #36	; 0x24
9000fe28:	e003      	b.n	9000fe32 <vQueueWaitForMessageRestricted+0x4e>
			--cTxLock;
9000fe2a:	1e63      	subs	r3, r4, #1
9000fe2c:	b2da      	uxtb	r2, r3
9000fe2e:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000fe30:	b16a      	cbz	r2, 9000fe4e <vQueueWaitForMessageRestricted+0x6a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000fe32:	6a6b      	ldr	r3, [r5, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000fe34:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000fe36:	b153      	cbz	r3, 9000fe4e <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000fe38:	f000 fdb4 	bl	900109a4 <xTaskRemoveFromEventList>
9000fe3c:	2800      	cmp	r0, #0
9000fe3e:	d0f4      	beq.n	9000fe2a <vQueueWaitForMessageRestricted+0x46>
						vTaskMissedYield();
9000fe40:	f000 fe4e 	bl	90010ae0 <vTaskMissedYield>
			--cTxLock;
9000fe44:	1e63      	subs	r3, r4, #1
9000fe46:	b2da      	uxtb	r2, r3
9000fe48:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000fe4a:	2a00      	cmp	r2, #0
9000fe4c:	d1f1      	bne.n	9000fe32 <vQueueWaitForMessageRestricted+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
9000fe4e:	23ff      	movs	r3, #255	; 0xff
9000fe50:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
	taskEXIT_CRITICAL();
9000fe54:	f7fe fe10 	bl	9000ea78 <vPortExitCritical>
	taskENTER_CRITICAL();
9000fe58:	f7fe fdec 	bl	9000ea34 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000fe5c:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
9000fe60:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000fe62:	2c00      	cmp	r4, #0
9000fe64:	dd14      	ble.n	9000fe90 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000fe66:	f105 0610 	add.w	r6, r5, #16
9000fe6a:	e003      	b.n	9000fe74 <vQueueWaitForMessageRestricted+0x90>
				--cRxLock;
9000fe6c:	1e63      	subs	r3, r4, #1
9000fe6e:	b2da      	uxtb	r2, r3
9000fe70:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000fe72:	b16a      	cbz	r2, 9000fe90 <vQueueWaitForMessageRestricted+0xac>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000fe74:	692b      	ldr	r3, [r5, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000fe76:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000fe78:	b153      	cbz	r3, 9000fe90 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000fe7a:	f000 fd93 	bl	900109a4 <xTaskRemoveFromEventList>
9000fe7e:	2800      	cmp	r0, #0
9000fe80:	d0f4      	beq.n	9000fe6c <vQueueWaitForMessageRestricted+0x88>
					vTaskMissedYield();
9000fe82:	f000 fe2d 	bl	90010ae0 <vTaskMissedYield>
				--cRxLock;
9000fe86:	1e63      	subs	r3, r4, #1
9000fe88:	b2da      	uxtb	r2, r3
9000fe8a:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000fe8c:	2a00      	cmp	r2, #0
9000fe8e:	d1f1      	bne.n	9000fe74 <vQueueWaitForMessageRestricted+0x90>
		pxQueue->cRxLock = queueUNLOCKED;
9000fe90:	23ff      	movs	r3, #255	; 0xff
9000fe92:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
	}
9000fe96:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
9000fe9a:	f7fe bded 	b.w	9000ea78 <vPortExitCritical>
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
9000fe9e:	4622      	mov	r2, r4
9000fea0:	4631      	mov	r1, r6
9000fea2:	f105 0024 	add.w	r0, r5, #36	; 0x24
9000fea6:	f000 fd33 	bl	90010910 <vTaskPlaceOnEventListRestricted>
9000feaa:	e7b4      	b.n	9000fe16 <vQueueWaitForMessageRestricted+0x32>

9000feac <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
9000feac:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9000feb0:	4605      	mov	r5, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
9000feb2:	f7fe fdbf 	bl	9000ea34 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
9000feb6:	4a34      	ldr	r2, [pc, #208]	; (9000ff88 <prvAddNewTaskToReadyList+0xdc>)
		if( pxCurrentTCB == NULL )
9000feb8:	4e34      	ldr	r6, [pc, #208]	; (9000ff8c <prvAddNewTaskToReadyList+0xe0>)
		uxCurrentNumberOfTasks++;
9000feba:	6813      	ldr	r3, [r2, #0]
9000febc:	3301      	adds	r3, #1
9000febe:	6013      	str	r3, [r2, #0]
		if( pxCurrentTCB == NULL )
9000fec0:	6833      	ldr	r3, [r6, #0]
9000fec2:	2b00      	cmp	r3, #0
9000fec4:	d032      	beq.n	9000ff2c <prvAddNewTaskToReadyList+0x80>
		else
		{
			/* If the scheduler is not already running, make this task the
			current task if it is the highest priority task to be created
			so far. */
			if( xSchedulerRunning == pdFALSE )
9000fec6:	4c32      	ldr	r4, [pc, #200]	; (9000ff90 <prvAddNewTaskToReadyList+0xe4>)
9000fec8:	6823      	ldr	r3, [r4, #0]
9000feca:	b33b      	cbz	r3, 9000ff1c <prvAddNewTaskToReadyList+0x70>
			{
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
9000fecc:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
9000fece:	4f31      	ldr	r7, [pc, #196]	; (9000ff94 <prvAddNewTaskToReadyList+0xe8>)
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

		uxTaskNumber++;
9000fed0:	4a31      	ldr	r2, [pc, #196]	; (9000ff98 <prvAddNewTaskToReadyList+0xec>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
		}
		#endif /* configUSE_TRACE_FACILITY */
		traceTASK_CREATE( pxNewTCB );

		prvAddTaskToReadyList( pxNewTCB );
9000fed2:	4932      	ldr	r1, [pc, #200]	; (9000ff9c <prvAddNewTaskToReadyList+0xf0>)
		uxTaskNumber++;
9000fed4:	6813      	ldr	r3, [r2, #0]
9000fed6:	3301      	adds	r3, #1
9000fed8:	6013      	str	r3, [r2, #0]
			pxNewTCB->uxTCBNumber = uxTaskNumber;
9000feda:	646b      	str	r3, [r5, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
9000fedc:	680b      	ldr	r3, [r1, #0]
9000fede:	4283      	cmp	r3, r0
9000fee0:	d200      	bcs.n	9000fee4 <prvAddNewTaskToReadyList+0x38>
9000fee2:	6008      	str	r0, [r1, #0]
9000fee4:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9000fee8:	1d29      	adds	r1, r5, #4
9000feea:	eb07 0080 	add.w	r0, r7, r0, lsl #2
9000feee:	f7fe fcf9 	bl	9000e8e4 <vListInsertEnd>

		portSETUP_TCB( pxNewTCB );
	}
	taskEXIT_CRITICAL();
9000fef2:	f7fe fdc1 	bl	9000ea78 <vPortExitCritical>

	if( xSchedulerRunning != pdFALSE )
9000fef6:	6823      	ldr	r3, [r4, #0]
9000fef8:	b173      	cbz	r3, 9000ff18 <prvAddNewTaskToReadyList+0x6c>
	{
		/* If the created task is of a higher priority than the current task
		then it should run now. */
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
9000fefa:	6832      	ldr	r2, [r6, #0]
9000fefc:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000fefe:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
9000ff00:	429a      	cmp	r2, r3
9000ff02:	d209      	bcs.n	9000ff18 <prvAddNewTaskToReadyList+0x6c>
		{
			taskYIELD_IF_USING_PREEMPTION();
9000ff04:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000ff08:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000ff0c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000ff10:	f3bf 8f4f 	dsb	sy
9000ff14:	f3bf 8f6f 	isb	sy
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
9000ff18:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
9000ff1c:	6833      	ldr	r3, [r6, #0]
9000ff1e:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
9000ff20:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9000ff22:	4f1c      	ldr	r7, [pc, #112]	; (9000ff94 <prvAddNewTaskToReadyList+0xe8>)
9000ff24:	4283      	cmp	r3, r0
9000ff26:	d8d3      	bhi.n	9000fed0 <prvAddNewTaskToReadyList+0x24>
					pxCurrentTCB = pxNewTCB;
9000ff28:	6035      	str	r5, [r6, #0]
9000ff2a:	e7d1      	b.n	9000fed0 <prvAddNewTaskToReadyList+0x24>
			pxCurrentTCB = pxNewTCB;
9000ff2c:	6035      	str	r5, [r6, #0]
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
9000ff2e:	6813      	ldr	r3, [r2, #0]
9000ff30:	2b01      	cmp	r3, #1
9000ff32:	d003      	beq.n	9000ff3c <prvAddNewTaskToReadyList+0x90>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
9000ff34:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
9000ff36:	4f17      	ldr	r7, [pc, #92]	; (9000ff94 <prvAddNewTaskToReadyList+0xe8>)
9000ff38:	4c15      	ldr	r4, [pc, #84]	; (9000ff90 <prvAddNewTaskToReadyList+0xe4>)
9000ff3a:	e7c9      	b.n	9000fed0 <prvAddNewTaskToReadyList+0x24>
9000ff3c:	4f15      	ldr	r7, [pc, #84]	; (9000ff94 <prvAddNewTaskToReadyList+0xe8>)
9000ff3e:	463c      	mov	r4, r7
9000ff40:	f507 688c 	add.w	r8, r7, #1120	; 0x460
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
9000ff44:	4620      	mov	r0, r4
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
9000ff46:	3414      	adds	r4, #20
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
9000ff48:	f7fe fcbc 	bl	9000e8c4 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
9000ff4c:	45a0      	cmp	r8, r4
9000ff4e:	d1f9      	bne.n	9000ff44 <prvAddNewTaskToReadyList+0x98>
	}

	vListInitialise( &xDelayedTaskList1 );
9000ff50:	f8df 9060 	ldr.w	r9, [pc, #96]	; 9000ffb4 <prvAddNewTaskToReadyList+0x108>
	vListInitialise( &xDelayedTaskList2 );
9000ff54:	f8df 8060 	ldr.w	r8, [pc, #96]	; 9000ffb8 <prvAddNewTaskToReadyList+0x10c>
	vListInitialise( &xDelayedTaskList1 );
9000ff58:	4648      	mov	r0, r9
9000ff5a:	4c0d      	ldr	r4, [pc, #52]	; (9000ff90 <prvAddNewTaskToReadyList+0xe4>)
9000ff5c:	f7fe fcb2 	bl	9000e8c4 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
9000ff60:	4640      	mov	r0, r8
9000ff62:	f7fe fcaf 	bl	9000e8c4 <vListInitialise>
	vListInitialise( &xPendingReadyList );
9000ff66:	480e      	ldr	r0, [pc, #56]	; (9000ffa0 <prvAddNewTaskToReadyList+0xf4>)
9000ff68:	f7fe fcac 	bl	9000e8c4 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
9000ff6c:	480d      	ldr	r0, [pc, #52]	; (9000ffa4 <prvAddNewTaskToReadyList+0xf8>)
9000ff6e:	f7fe fca9 	bl	9000e8c4 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
9000ff72:	480d      	ldr	r0, [pc, #52]	; (9000ffa8 <prvAddNewTaskToReadyList+0xfc>)
9000ff74:	f7fe fca6 	bl	9000e8c4 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
9000ff78:	4b0c      	ldr	r3, [pc, #48]	; (9000ffac <prvAddNewTaskToReadyList+0x100>)
		prvAddTaskToReadyList( pxNewTCB );
9000ff7a:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
	pxDelayedTaskList = &xDelayedTaskList1;
9000ff7c:	f8c3 9000 	str.w	r9, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
9000ff80:	4b0b      	ldr	r3, [pc, #44]	; (9000ffb0 <prvAddNewTaskToReadyList+0x104>)
9000ff82:	f8c3 8000 	str.w	r8, [r3]
}
9000ff86:	e7a3      	b.n	9000fed0 <prvAddNewTaskToReadyList+0x24>
9000ff88:	2403966c 	.word	0x2403966c
9000ff8c:	24039200 	.word	0x24039200
9000ff90:	240396c8 	.word	0x240396c8
9000ff94:	2403920c 	.word	0x2403920c
9000ff98:	24039678 	.word	0x24039678
9000ff9c:	2403967c 	.word	0x2403967c
9000ffa0:	240396b4 	.word	0x240396b4
9000ffa4:	240396e0 	.word	0x240396e0
9000ffa8:	240396cc 	.word	0x240396cc
9000ffac:	24039204 	.word	0x24039204
9000ffb0:	24039208 	.word	0x24039208
9000ffb4:	24039680 	.word	0x24039680
9000ffb8:	24039694 	.word	0x24039694

9000ffbc <prvIdleTask>:
{
9000ffbc:	b580      	push	{r7, lr}
9000ffbe:	4c22      	ldr	r4, [pc, #136]	; (90010048 <prvIdleTask+0x8c>)
				taskYIELD();
9000ffc0:	f04f 29e0 	mov.w	r9, #3758153728	; 0xe000e000
9000ffc4:	4e21      	ldr	r6, [pc, #132]	; (9001004c <prvIdleTask+0x90>)
9000ffc6:	f04f 5880 	mov.w	r8, #268435456	; 0x10000000
9000ffca:	4d21      	ldr	r5, [pc, #132]	; (90010050 <prvIdleTask+0x94>)
9000ffcc:	4f21      	ldr	r7, [pc, #132]	; (90010054 <prvIdleTask+0x98>)
	{
		TCB_t *pxTCB;

		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
		being called too often in the idle task. */
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
9000ffce:	6823      	ldr	r3, [r4, #0]
9000ffd0:	b353      	cbz	r3, 90010028 <prvIdleTask+0x6c>
		{
			taskENTER_CRITICAL();
9000ffd2:	f7fe fd2f 	bl	9000ea34 <vPortEnterCritical>
			{
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000ffd6:	68f3      	ldr	r3, [r6, #12]
9000ffd8:	f8d3 a00c 	ldr.w	sl, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000ffdc:	f10a 0004 	add.w	r0, sl, #4
9000ffe0:	f7fe fca8 	bl	9000e934 <uxListRemove>
				--uxCurrentNumberOfTasks;
9000ffe4:	682b      	ldr	r3, [r5, #0]
9000ffe6:	3b01      	subs	r3, #1
9000ffe8:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
9000ffea:	6823      	ldr	r3, [r4, #0]
9000ffec:	3b01      	subs	r3, #1
9000ffee:	6023      	str	r3, [r4, #0]
			}
			taskEXIT_CRITICAL();
9000fff0:	f7fe fd42 	bl	9000ea78 <vPortExitCritical>
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
9000fff4:	f89a 305d 	ldrb.w	r3, [sl, #93]	; 0x5d
9000fff8:	b163      	cbz	r3, 90010014 <prvIdleTask+0x58>
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
				vPortFree( pxTCB );
			}
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
9000fffa:	2b01      	cmp	r3, #1
9000fffc:	d020      	beq.n	90010040 <prvIdleTask+0x84>
			}
			else
			{
				/* Neither the stack nor the TCB were allocated dynamically, so
				nothing needs to be freed. */
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
9000fffe:	2b02      	cmp	r3, #2
90010000:	d0e5      	beq.n	9000ffce <prvIdleTask+0x12>
90010002:	f04f 0350 	mov.w	r3, #80	; 0x50
90010006:	f383 8811 	msr	BASEPRI, r3
9001000a:	f3bf 8f6f 	isb	sy
9001000e:	f3bf 8f4f 	dsb	sy
90010012:	e7fe      	b.n	90010012 <prvIdleTask+0x56>
				vPortFree( pxTCB->pxStack );
90010014:	f8da 0030 	ldr.w	r0, [sl, #48]	; 0x30
90010018:	f7fe fbf0 	bl	9000e7fc <vPortFree>
				vPortFree( pxTCB );
9001001c:	4650      	mov	r0, sl
9001001e:	f7fe fbed 	bl	9000e7fc <vPortFree>
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
90010022:	6823      	ldr	r3, [r4, #0]
90010024:	2b00      	cmp	r3, #0
90010026:	d1d4      	bne.n	9000ffd2 <prvIdleTask+0x16>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
90010028:	683b      	ldr	r3, [r7, #0]
9001002a:	2b01      	cmp	r3, #1
9001002c:	d905      	bls.n	9001003a <prvIdleTask+0x7e>
				taskYIELD();
9001002e:	f8c9 8d04 	str.w	r8, [r9, #3332]	; 0xd04
90010032:	f3bf 8f4f 	dsb	sy
90010036:	f3bf 8f6f 	isb	sy
			vApplicationIdleHook();
9001003a:	f7f2 fcb1 	bl	900029a0 <vApplicationIdleHook>
		prvCheckTasksWaitingTermination();
9001003e:	e7c6      	b.n	9000ffce <prvIdleTask+0x12>
				vPortFree( pxTCB );
90010040:	4650      	mov	r0, sl
90010042:	f7fe fbdb 	bl	9000e7fc <vPortFree>
90010046:	e7c2      	b.n	9000ffce <prvIdleTask+0x12>
90010048:	24039670 	.word	0x24039670
9001004c:	240396e0 	.word	0x240396e0
90010050:	2403966c 	.word	0x2403966c
90010054:	2403920c 	.word	0x2403920c

90010058 <xTaskIncrementTick.part.0>:
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
90010058:	4b4a      	ldr	r3, [pc, #296]	; (90010184 <xTaskIncrementTick.part.0+0x12c>)
BaseType_t xTaskIncrementTick( void )
9001005a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
9001005e:	681e      	ldr	r6, [r3, #0]
BaseType_t xTaskIncrementTick( void )
90010060:	b083      	sub	sp, #12
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
90010062:	3601      	adds	r6, #1
		xTickCount = xConstTickCount;
90010064:	601e      	str	r6, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
90010066:	2e00      	cmp	r6, #0
90010068:	d040      	beq.n	900100ec <xTaskIncrementTick.part.0+0x94>
9001006a:	f8df b12c 	ldr.w	fp, [pc, #300]	; 90010198 <xTaskIncrementTick.part.0+0x140>
		if( xConstTickCount >= xNextTaskUnblockTime )
9001006e:	f8db 3000 	ldr.w	r3, [fp]
90010072:	429e      	cmp	r6, r3
90010074:	d347      	bcc.n	90010106 <xTaskIncrementTick.part.0+0xae>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
90010076:	4f44      	ldr	r7, [pc, #272]	; (90010188 <xTaskIncrementTick.part.0+0x130>)
90010078:	683b      	ldr	r3, [r7, #0]
9001007a:	681d      	ldr	r5, [r3, #0]
9001007c:	2d00      	cmp	r5, #0
9001007e:	d077      	beq.n	90010170 <xTaskIncrementTick.part.0+0x118>
BaseType_t xSwitchRequired = pdFALSE;
90010080:	2500      	movs	r5, #0
90010082:	f8df 9118 	ldr.w	r9, [pc, #280]	; 9001019c <xTaskIncrementTick.part.0+0x144>
90010086:	f8df a118 	ldr.w	sl, [pc, #280]	; 900101a0 <xTaskIncrementTick.part.0+0x148>
					prvAddTaskToReadyList( pxTCB );
9001008a:	f8df 8118 	ldr.w	r8, [pc, #280]	; 900101a4 <xTaskIncrementTick.part.0+0x14c>
9001008e:	e022      	b.n	900100d6 <xTaskIncrementTick.part.0+0x7e>
90010090:	9101      	str	r1, [sp, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
90010092:	f7fe fc4f 	bl	9000e934 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
90010096:	6aa3      	ldr	r3, [r4, #40]	; 0x28
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
90010098:	f104 0018 	add.w	r0, r4, #24
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
9001009c:	9901      	ldr	r1, [sp, #4]
9001009e:	b113      	cbz	r3, 900100a6 <xTaskIncrementTick.part.0+0x4e>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
900100a0:	f7fe fc48 	bl	9000e934 <uxListRemove>
900100a4:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
900100a6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
900100a8:	f8d8 2000 	ldr.w	r2, [r8]
900100ac:	eb03 0083 	add.w	r0, r3, r3, lsl #2
900100b0:	4293      	cmp	r3, r2
900100b2:	eb09 0080 	add.w	r0, r9, r0, lsl #2
900100b6:	d901      	bls.n	900100bc <xTaskIncrementTick.part.0+0x64>
900100b8:	f8c8 3000 	str.w	r3, [r8]
900100bc:	f7fe fc12 	bl	9000e8e4 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
900100c0:	f8da 2000 	ldr.w	r2, [sl]
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
900100c4:	683b      	ldr	r3, [r7, #0]
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
900100c6:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
900100c8:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
900100ca:	681b      	ldr	r3, [r3, #0]
							xSwitchRequired = pdTRUE;
900100cc:	4291      	cmp	r1, r2
900100ce:	bf28      	it	cs
900100d0:	2501      	movcs	r5, #1
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
900100d2:	2b00      	cmp	r3, #0
900100d4:	d050      	beq.n	90010178 <xTaskIncrementTick.part.0+0x120>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
900100d6:	683b      	ldr	r3, [r7, #0]
900100d8:	68db      	ldr	r3, [r3, #12]
900100da:	68dc      	ldr	r4, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
900100dc:	6863      	ldr	r3, [r4, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
900100de:	1d21      	adds	r1, r4, #4
					if( xConstTickCount < xItemValue )
900100e0:	429e      	cmp	r6, r3
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
900100e2:	4608      	mov	r0, r1
					if( xConstTickCount < xItemValue )
900100e4:	d2d4      	bcs.n	90010090 <xTaskIncrementTick.part.0+0x38>
						xNextTaskUnblockTime = xItemValue;
900100e6:	f8cb 3000 	str.w	r3, [fp]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
900100ea:	e011      	b.n	90010110 <xTaskIncrementTick.part.0+0xb8>
			taskSWITCH_DELAYED_LISTS();
900100ec:	4b26      	ldr	r3, [pc, #152]	; (90010188 <xTaskIncrementTick.part.0+0x130>)
900100ee:	681a      	ldr	r2, [r3, #0]
900100f0:	6812      	ldr	r2, [r2, #0]
900100f2:	b30a      	cbz	r2, 90010138 <xTaskIncrementTick.part.0+0xe0>
900100f4:	f04f 0350 	mov.w	r3, #80	; 0x50
900100f8:	f383 8811 	msr	BASEPRI, r3
900100fc:	f3bf 8f6f 	isb	sy
90010100:	f3bf 8f4f 	dsb	sy
90010104:	e7fe      	b.n	90010104 <xTaskIncrementTick.part.0+0xac>
BaseType_t xSwitchRequired = pdFALSE;
90010106:	2500      	movs	r5, #0
90010108:	f8df 9090 	ldr.w	r9, [pc, #144]	; 9001019c <xTaskIncrementTick.part.0+0x144>
9001010c:	f8df a090 	ldr.w	sl, [pc, #144]	; 900101a0 <xTaskIncrementTick.part.0+0x148>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
90010110:	f8da 3000 	ldr.w	r3, [sl]
			if( xYieldPending != pdFALSE )
90010114:	491d      	ldr	r1, [pc, #116]	; (9001018c <xTaskIncrementTick.part.0+0x134>)
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
90010116:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90010118:	eb03 0383 	add.w	r3, r3, r3, lsl #2
9001011c:	009b      	lsls	r3, r3, #2
9001011e:	f859 2003 	ldr.w	r2, [r9, r3]
			if( xYieldPending != pdFALSE )
90010122:	680b      	ldr	r3, [r1, #0]
				xSwitchRequired = pdTRUE;
90010124:	2a02      	cmp	r2, #2
90010126:	bf28      	it	cs
90010128:	2501      	movcs	r5, #1
				xSwitchRequired = pdTRUE;
9001012a:	2b00      	cmp	r3, #0
}
9001012c:	bf0c      	ite	eq
9001012e:	4628      	moveq	r0, r5
90010130:	2001      	movne	r0, #1
90010132:	b003      	add	sp, #12
90010134:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			taskSWITCH_DELAYED_LISTS();
90010138:	4a15      	ldr	r2, [pc, #84]	; (90010190 <xTaskIncrementTick.part.0+0x138>)
9001013a:	6818      	ldr	r0, [r3, #0]
9001013c:	6811      	ldr	r1, [r2, #0]
9001013e:	6019      	str	r1, [r3, #0]
90010140:	4914      	ldr	r1, [pc, #80]	; (90010194 <xTaskIncrementTick.part.0+0x13c>)
90010142:	6010      	str	r0, [r2, #0]
90010144:	680a      	ldr	r2, [r1, #0]
90010146:	3201      	adds	r2, #1
90010148:	600a      	str	r2, [r1, #0]

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9001014a:	681a      	ldr	r2, [r3, #0]
9001014c:	6812      	ldr	r2, [r2, #0]
9001014e:	b932      	cbnz	r2, 9001015e <xTaskIncrementTick.part.0+0x106>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
90010150:	f8df b044 	ldr.w	fp, [pc, #68]	; 90010198 <xTaskIncrementTick.part.0+0x140>
90010154:	f04f 33ff 	mov.w	r3, #4294967295
90010158:	f8cb 3000 	str.w	r3, [fp]
9001015c:	e787      	b.n	9001006e <xTaskIncrementTick.part.0+0x16>
	{
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9001015e:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
90010160:	f8df b034 	ldr.w	fp, [pc, #52]	; 90010198 <xTaskIncrementTick.part.0+0x140>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90010164:	68db      	ldr	r3, [r3, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
90010166:	68db      	ldr	r3, [r3, #12]
90010168:	685b      	ldr	r3, [r3, #4]
9001016a:	f8cb 3000 	str.w	r3, [fp]
	}
}
9001016e:	e77e      	b.n	9001006e <xTaskIncrementTick.part.0+0x16>
90010170:	f8df 9028 	ldr.w	r9, [pc, #40]	; 9001019c <xTaskIncrementTick.part.0+0x144>
90010174:	f8df a028 	ldr.w	sl, [pc, #40]	; 900101a0 <xTaskIncrementTick.part.0+0x148>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90010178:	f04f 33ff 	mov.w	r3, #4294967295
9001017c:	f8cb 3000 	str.w	r3, [fp]
					break;
90010180:	e7c6      	b.n	90010110 <xTaskIncrementTick.part.0+0xb8>
90010182:	bf00      	nop
90010184:	240396f4 	.word	0x240396f4
90010188:	24039204 	.word	0x24039204
9001018c:	240396f8 	.word	0x240396f8
90010190:	24039208 	.word	0x24039208
90010194:	240396ac 	.word	0x240396ac
90010198:	240396a8 	.word	0x240396a8
9001019c:	2403920c 	.word	0x2403920c
900101a0:	24039200 	.word	0x24039200
900101a4:	2403967c 	.word	0x2403967c

900101a8 <xTaskResumeAll.part.0>:
BaseType_t xTaskResumeAll( void )
900101a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		--uxSchedulerSuspended;
900101ac:	4d41      	ldr	r5, [pc, #260]	; (900102b4 <xTaskResumeAll.part.0+0x10c>)
BaseType_t xTaskResumeAll( void )
900101ae:	b083      	sub	sp, #12
	taskENTER_CRITICAL();
900101b0:	f7fe fc40 	bl	9000ea34 <vPortEnterCritical>
		--uxSchedulerSuspended;
900101b4:	682b      	ldr	r3, [r5, #0]
900101b6:	3b01      	subs	r3, #1
900101b8:	602b      	str	r3, [r5, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
900101ba:	682b      	ldr	r3, [r5, #0]
900101bc:	2b00      	cmp	r3, #0
900101be:	d161      	bne.n	90010284 <xTaskResumeAll.part.0+0xdc>
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
900101c0:	4b3d      	ldr	r3, [pc, #244]	; (900102b8 <xTaskResumeAll.part.0+0x110>)
900101c2:	681b      	ldr	r3, [r3, #0]
900101c4:	2b00      	cmp	r3, #0
900101c6:	d05d      	beq.n	90010284 <xTaskResumeAll.part.0+0xdc>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
900101c8:	4e3c      	ldr	r6, [pc, #240]	; (900102bc <xTaskResumeAll.part.0+0x114>)
900101ca:	6833      	ldr	r3, [r6, #0]
900101cc:	2b00      	cmp	r3, #0
900101ce:	d06e      	beq.n	900102ae <xTaskResumeAll.part.0+0x106>
900101d0:	4f3b      	ldr	r7, [pc, #236]	; (900102c0 <xTaskResumeAll.part.0+0x118>)
900101d2:	f8df 90fc 	ldr.w	r9, [pc, #252]	; 900102d0 <xTaskResumeAll.part.0+0x128>
900101d6:	f8df 80fc 	ldr.w	r8, [pc, #252]	; 900102d4 <xTaskResumeAll.part.0+0x12c>
900101da:	f8df a0fc 	ldr.w	sl, [pc, #252]	; 900102d8 <xTaskResumeAll.part.0+0x130>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
900101de:	68f3      	ldr	r3, [r6, #12]
900101e0:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
900101e2:	f104 0b04 	add.w	fp, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
900101e6:	f104 0018 	add.w	r0, r4, #24
900101ea:	f7fe fba3 	bl	9000e934 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
900101ee:	4658      	mov	r0, fp
900101f0:	f7fe fba0 	bl	9000e934 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
900101f4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
900101f6:	683a      	ldr	r2, [r7, #0]
900101f8:	4659      	mov	r1, fp
900101fa:	eb03 0083 	add.w	r0, r3, r3, lsl #2
900101fe:	4293      	cmp	r3, r2
90010200:	eb09 0080 	add.w	r0, r9, r0, lsl #2
90010204:	d900      	bls.n	90010208 <xTaskResumeAll.part.0+0x60>
90010206:	603b      	str	r3, [r7, #0]
90010208:	f7fe fb6c 	bl	9000e8e4 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
9001020c:	f8d8 3000 	ldr.w	r3, [r8]
90010210:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
90010212:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90010214:	429a      	cmp	r2, r3
90010216:	d33d      	bcc.n	90010294 <xTaskResumeAll.part.0+0xec>
						xYieldPending = pdTRUE;
90010218:	2301      	movs	r3, #1
9001021a:	f8ca 3000 	str.w	r3, [sl]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
9001021e:	6833      	ldr	r3, [r6, #0]
90010220:	2b00      	cmp	r3, #0
90010222:	d1dc      	bne.n	900101de <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
90010224:	4b27      	ldr	r3, [pc, #156]	; (900102c4 <xTaskResumeAll.part.0+0x11c>)
90010226:	681a      	ldr	r2, [r3, #0]
90010228:	6812      	ldr	r2, [r2, #0]
9001022a:	2a00      	cmp	r2, #0
9001022c:	d03a      	beq.n	900102a4 <xTaskResumeAll.part.0+0xfc>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9001022e:	681a      	ldr	r2, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
90010230:	4b25      	ldr	r3, [pc, #148]	; (900102c8 <xTaskResumeAll.part.0+0x120>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90010232:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
90010234:	68d2      	ldr	r2, [r2, #12]
90010236:	6852      	ldr	r2, [r2, #4]
90010238:	601a      	str	r2, [r3, #0]
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
9001023a:	4e24      	ldr	r6, [pc, #144]	; (900102cc <xTaskResumeAll.part.0+0x124>)
9001023c:	6834      	ldr	r4, [r6, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
9001023e:	b194      	cbz	r4, 90010266 <xTaskResumeAll.part.0+0xbe>
								xYieldPending = pdTRUE;
90010240:	2701      	movs	r7, #1
90010242:	e006      	b.n	90010252 <xTaskResumeAll.part.0+0xaa>
90010244:	f7ff ff08 	bl	90010058 <xTaskIncrementTick.part.0>
							if( xTaskIncrementTick() != pdFALSE )
90010248:	b108      	cbz	r0, 9001024e <xTaskResumeAll.part.0+0xa6>
								xYieldPending = pdTRUE;
9001024a:	f8ca 7000 	str.w	r7, [sl]
						} while( xPendedCounts > ( TickType_t ) 0U );
9001024e:	3c01      	subs	r4, #1
90010250:	d008      	beq.n	90010264 <xTaskResumeAll.part.0+0xbc>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
90010252:	682b      	ldr	r3, [r5, #0]
90010254:	2b00      	cmp	r3, #0
90010256:	d0f5      	beq.n	90010244 <xTaskResumeAll.part.0+0x9c>
		++xPendedTicks;
90010258:	6833      	ldr	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
9001025a:	3c01      	subs	r4, #1
		++xPendedTicks;
9001025c:	f103 0301 	add.w	r3, r3, #1
90010260:	6033      	str	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
90010262:	d1f6      	bne.n	90010252 <xTaskResumeAll.part.0+0xaa>
						xPendedTicks = 0;
90010264:	6034      	str	r4, [r6, #0]
				if( xYieldPending != pdFALSE )
90010266:	f8da 3000 	ldr.w	r3, [sl]
9001026a:	b15b      	cbz	r3, 90010284 <xTaskResumeAll.part.0+0xdc>
					taskYIELD_IF_USING_PREEMPTION();
9001026c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
90010270:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
90010274:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
90010278:	f3bf 8f4f 	dsb	sy
9001027c:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
90010280:	2001      	movs	r0, #1
90010282:	e000      	b.n	90010286 <xTaskResumeAll.part.0+0xde>
BaseType_t xAlreadyYielded = pdFALSE;
90010284:	2000      	movs	r0, #0
90010286:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
90010288:	f7fe fbf6 	bl	9000ea78 <vPortExitCritical>
}
9001028c:	9801      	ldr	r0, [sp, #4]
9001028e:	b003      	add	sp, #12
90010290:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
90010294:	6833      	ldr	r3, [r6, #0]
90010296:	2b00      	cmp	r3, #0
90010298:	d1a1      	bne.n	900101de <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9001029a:	4b0a      	ldr	r3, [pc, #40]	; (900102c4 <xTaskResumeAll.part.0+0x11c>)
9001029c:	681a      	ldr	r2, [r3, #0]
9001029e:	6812      	ldr	r2, [r2, #0]
900102a0:	2a00      	cmp	r2, #0
900102a2:	d1c4      	bne.n	9001022e <xTaskResumeAll.part.0+0x86>
		xNextTaskUnblockTime = portMAX_DELAY;
900102a4:	4b08      	ldr	r3, [pc, #32]	; (900102c8 <xTaskResumeAll.part.0+0x120>)
900102a6:	f04f 32ff 	mov.w	r2, #4294967295
900102aa:	601a      	str	r2, [r3, #0]
900102ac:	e7c5      	b.n	9001023a <xTaskResumeAll.part.0+0x92>
900102ae:	f8df a028 	ldr.w	sl, [pc, #40]	; 900102d8 <xTaskResumeAll.part.0+0x130>
900102b2:	e7c2      	b.n	9001023a <xTaskResumeAll.part.0+0x92>
900102b4:	24039674 	.word	0x24039674
900102b8:	2403966c 	.word	0x2403966c
900102bc:	240396b4 	.word	0x240396b4
900102c0:	2403967c 	.word	0x2403967c
900102c4:	24039204 	.word	0x24039204
900102c8:	240396a8 	.word	0x240396a8
900102cc:	240396b0 	.word	0x240396b0
900102d0:	2403920c 	.word	0x2403920c
900102d4:	24039200 	.word	0x24039200
900102d8:	240396f8 	.word	0x240396f8

900102dc <xTaskCreateStatic>:
	{
900102dc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900102e0:	b083      	sub	sp, #12
900102e2:	4698      	mov	r8, r3
		configASSERT( puxStackBuffer != NULL );
900102e4:	e9dd 340b 	ldrd	r3, r4, [sp, #44]	; 0x2c
900102e8:	b1bb      	cbz	r3, 9001031a <xTaskCreateStatic+0x3e>
		configASSERT( pxTaskBuffer != NULL );
900102ea:	b16c      	cbz	r4, 90010308 <xTaskCreateStatic+0x2c>
			volatile size_t xSize = sizeof( StaticTask_t );
900102ec:	2360      	movs	r3, #96	; 0x60
900102ee:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( TCB_t ) );
900102f0:	9b01      	ldr	r3, [sp, #4]
900102f2:	2b60      	cmp	r3, #96	; 0x60
900102f4:	d01a      	beq.n	9001032c <xTaskCreateStatic+0x50>
900102f6:	f04f 0350 	mov.w	r3, #80	; 0x50
900102fa:	f383 8811 	msr	BASEPRI, r3
900102fe:	f3bf 8f6f 	isb	sy
90010302:	f3bf 8f4f 	dsb	sy
90010306:	e7fe      	b.n	90010306 <xTaskCreateStatic+0x2a>
90010308:	f04f 0350 	mov.w	r3, #80	; 0x50
9001030c:	f383 8811 	msr	BASEPRI, r3
90010310:	f3bf 8f6f 	isb	sy
90010314:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
90010318:	e7fe      	b.n	90010318 <xTaskCreateStatic+0x3c>
9001031a:	f04f 0350 	mov.w	r3, #80	; 0x50
9001031e:	f383 8811 	msr	BASEPRI, r3
90010322:	f3bf 8f6f 	isb	sy
90010326:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
9001032a:	e7fe      	b.n	9001032a <xTaskCreateStatic+0x4e>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
9001032c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9001032e:	0096      	lsls	r6, r2, #2
90010330:	4607      	mov	r7, r0
90010332:	460d      	mov	r5, r1
90010334:	4618      	mov	r0, r3
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
90010336:	6323      	str	r3, [r4, #48]	; 0x30
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
90010338:	9b01      	ldr	r3, [sp, #4]
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
9001033a:	2302      	movs	r3, #2
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9001033c:	4632      	mov	r2, r6
9001033e:	21a5      	movs	r1, #165	; 0xa5
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
90010340:	f884 305d 	strb.w	r3, [r4, #93]	; 0x5d
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
90010344:	f017 fea2 	bl	9002808c <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
90010348:	1f32      	subs	r2, r6, #4
9001034a:	6b23      	ldr	r3, [r4, #48]	; 0x30
9001034c:	4413      	add	r3, r2
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
9001034e:	f023 0907 	bic.w	r9, r3, #7
	if( pcName != NULL )
90010352:	2d00      	cmp	r5, #0
90010354:	d069      	beq.n	9001042a <xTaskCreateStatic+0x14e>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90010356:	782b      	ldrb	r3, [r5, #0]
90010358:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
			if( pcName[ x ] == ( char ) 0x00 )
9001035c:	2b00      	cmp	r3, #0
9001035e:	d03b      	beq.n	900103d8 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90010360:	786b      	ldrb	r3, [r5, #1]
90010362:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
			if( pcName[ x ] == ( char ) 0x00 )
90010366:	2b00      	cmp	r3, #0
90010368:	d036      	beq.n	900103d8 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9001036a:	78ab      	ldrb	r3, [r5, #2]
9001036c:	f884 3036 	strb.w	r3, [r4, #54]	; 0x36
			if( pcName[ x ] == ( char ) 0x00 )
90010370:	b393      	cbz	r3, 900103d8 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90010372:	78eb      	ldrb	r3, [r5, #3]
90010374:	f884 3037 	strb.w	r3, [r4, #55]	; 0x37
			if( pcName[ x ] == ( char ) 0x00 )
90010378:	b373      	cbz	r3, 900103d8 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9001037a:	792b      	ldrb	r3, [r5, #4]
9001037c:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
			if( pcName[ x ] == ( char ) 0x00 )
90010380:	b353      	cbz	r3, 900103d8 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90010382:	796b      	ldrb	r3, [r5, #5]
90010384:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
			if( pcName[ x ] == ( char ) 0x00 )
90010388:	b333      	cbz	r3, 900103d8 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9001038a:	79ab      	ldrb	r3, [r5, #6]
9001038c:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
90010390:	b313      	cbz	r3, 900103d8 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90010392:	79eb      	ldrb	r3, [r5, #7]
90010394:	f884 303b 	strb.w	r3, [r4, #59]	; 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
90010398:	b1f3      	cbz	r3, 900103d8 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9001039a:	7a2b      	ldrb	r3, [r5, #8]
9001039c:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
900103a0:	b1d3      	cbz	r3, 900103d8 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900103a2:	7a6b      	ldrb	r3, [r5, #9]
900103a4:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
900103a8:	b1b3      	cbz	r3, 900103d8 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900103aa:	7aab      	ldrb	r3, [r5, #10]
900103ac:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
900103b0:	b193      	cbz	r3, 900103d8 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900103b2:	7aeb      	ldrb	r3, [r5, #11]
900103b4:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
900103b8:	b173      	cbz	r3, 900103d8 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900103ba:	7b2b      	ldrb	r3, [r5, #12]
900103bc:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
			if( pcName[ x ] == ( char ) 0x00 )
900103c0:	b153      	cbz	r3, 900103d8 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900103c2:	7b6b      	ldrb	r3, [r5, #13]
900103c4:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
			if( pcName[ x ] == ( char ) 0x00 )
900103c8:	b133      	cbz	r3, 900103d8 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900103ca:	7bab      	ldrb	r3, [r5, #14]
900103cc:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
			if( pcName[ x ] == ( char ) 0x00 )
900103d0:	b113      	cbz	r3, 900103d8 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900103d2:	7beb      	ldrb	r3, [r5, #15]
900103d4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
900103d8:	2300      	movs	r3, #0
900103da:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
900103de:	9d0a      	ldr	r5, [sp, #40]	; 0x28
		pxNewTCB->uxMutexesHeld = 0;
900103e0:	2600      	movs	r6, #0
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
900103e2:	1d20      	adds	r0, r4, #4
900103e4:	2d37      	cmp	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
900103e6:	6526      	str	r6, [r4, #80]	; 0x50
900103e8:	bf28      	it	cs
900103ea:	2537      	movcs	r5, #55	; 0x37
	pxNewTCB->uxPriority = uxPriority;
900103ec:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
900103ee:	64e5      	str	r5, [r4, #76]	; 0x4c
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
900103f0:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
900103f4:	f7fe fa72 	bl	9000e8dc <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
900103f8:	f104 0018 	add.w	r0, r4, #24
900103fc:	f7fe fa6e 	bl	9000e8dc <vListInitialiseItem>
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
90010400:	4642      	mov	r2, r8
90010402:	4639      	mov	r1, r7
		pxNewTCB->ulNotifiedValue = 0;
90010404:	65a6      	str	r6, [r4, #88]	; 0x58
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
90010406:	4648      	mov	r0, r9
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90010408:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
9001040a:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
9001040c:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
9001040e:	6566      	str	r6, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
90010410:	f884 605c 	strb.w	r6, [r4, #92]	; 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
90010414:	f7fe fae0 	bl	9000e9d8 <pxPortInitialiseStack>
90010418:	4603      	mov	r3, r0
			prvAddNewTaskToReadyList( pxNewTCB );
9001041a:	4620      	mov	r0, r4
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9001041c:	6023      	str	r3, [r4, #0]
			prvAddNewTaskToReadyList( pxNewTCB );
9001041e:	f7ff fd45 	bl	9000feac <prvAddNewTaskToReadyList>
	}
90010422:	4620      	mov	r0, r4
90010424:	b003      	add	sp, #12
90010426:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
9001042a:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
9001042e:	e7d6      	b.n	900103de <xTaskCreateStatic+0x102>

90010430 <xTaskCreate>:
	{
90010430:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
90010434:	0096      	lsls	r6, r2, #2
	{
90010436:	4680      	mov	r8, r0
90010438:	460d      	mov	r5, r1
9001043a:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
9001043c:	4630      	mov	r0, r6
9001043e:	f7fe f91f 	bl	9000e680 <pvPortMalloc>
			if( pxStack != NULL )
90010442:	2800      	cmp	r0, #0
90010444:	f000 8083 	beq.w	9001054e <xTaskCreate+0x11e>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
90010448:	4607      	mov	r7, r0
9001044a:	2060      	movs	r0, #96	; 0x60
9001044c:	f7fe f918 	bl	9000e680 <pvPortMalloc>
				if( pxNewTCB != NULL )
90010450:	4604      	mov	r4, r0
90010452:	2800      	cmp	r0, #0
90010454:	d07f      	beq.n	90010556 <xTaskCreate+0x126>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
90010456:	2300      	movs	r3, #0
					pxNewTCB->pxStack = pxStack;
90010458:	6307      	str	r7, [r0, #48]	; 0x30
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9001045a:	4632      	mov	r2, r6
9001045c:	4638      	mov	r0, r7
9001045e:	21a5      	movs	r1, #165	; 0xa5
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
90010460:	f884 305d 	strb.w	r3, [r4, #93]	; 0x5d
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
90010464:	f017 fe12 	bl	9002808c <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
90010468:	f8d4 a030 	ldr.w	sl, [r4, #48]	; 0x30
	if( pcName != NULL )
9001046c:	2d00      	cmp	r5, #0
9001046e:	d078      	beq.n	90010562 <xTaskCreate+0x132>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90010470:	782b      	ldrb	r3, [r5, #0]
90010472:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
			if( pcName[ x ] == ( char ) 0x00 )
90010476:	2b00      	cmp	r3, #0
90010478:	d03b      	beq.n	900104f2 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9001047a:	786b      	ldrb	r3, [r5, #1]
9001047c:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
			if( pcName[ x ] == ( char ) 0x00 )
90010480:	2b00      	cmp	r3, #0
90010482:	d036      	beq.n	900104f2 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90010484:	78ab      	ldrb	r3, [r5, #2]
90010486:	f884 3036 	strb.w	r3, [r4, #54]	; 0x36
			if( pcName[ x ] == ( char ) 0x00 )
9001048a:	b393      	cbz	r3, 900104f2 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9001048c:	78eb      	ldrb	r3, [r5, #3]
9001048e:	f884 3037 	strb.w	r3, [r4, #55]	; 0x37
			if( pcName[ x ] == ( char ) 0x00 )
90010492:	b373      	cbz	r3, 900104f2 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90010494:	792b      	ldrb	r3, [r5, #4]
90010496:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
			if( pcName[ x ] == ( char ) 0x00 )
9001049a:	b353      	cbz	r3, 900104f2 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9001049c:	796b      	ldrb	r3, [r5, #5]
9001049e:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
			if( pcName[ x ] == ( char ) 0x00 )
900104a2:	b333      	cbz	r3, 900104f2 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900104a4:	79ab      	ldrb	r3, [r5, #6]
900104a6:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
900104aa:	b313      	cbz	r3, 900104f2 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900104ac:	79eb      	ldrb	r3, [r5, #7]
900104ae:	f884 303b 	strb.w	r3, [r4, #59]	; 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
900104b2:	b1f3      	cbz	r3, 900104f2 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900104b4:	7a2b      	ldrb	r3, [r5, #8]
900104b6:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
900104ba:	b1d3      	cbz	r3, 900104f2 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900104bc:	7a6b      	ldrb	r3, [r5, #9]
900104be:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
900104c2:	b1b3      	cbz	r3, 900104f2 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900104c4:	7aab      	ldrb	r3, [r5, #10]
900104c6:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
900104ca:	b193      	cbz	r3, 900104f2 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900104cc:	7aeb      	ldrb	r3, [r5, #11]
900104ce:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
900104d2:	b173      	cbz	r3, 900104f2 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900104d4:	7b2b      	ldrb	r3, [r5, #12]
900104d6:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
			if( pcName[ x ] == ( char ) 0x00 )
900104da:	b153      	cbz	r3, 900104f2 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900104dc:	7b6b      	ldrb	r3, [r5, #13]
900104de:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
			if( pcName[ x ] == ( char ) 0x00 )
900104e2:	b133      	cbz	r3, 900104f2 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900104e4:	7bab      	ldrb	r3, [r5, #14]
900104e6:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
			if( pcName[ x ] == ( char ) 0x00 )
900104ea:	b113      	cbz	r3, 900104f2 <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900104ec:	7beb      	ldrb	r3, [r5, #15]
900104ee:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
900104f2:	2300      	movs	r3, #0
900104f4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
900104f8:	9d08      	ldr	r5, [sp, #32]
		pxNewTCB->uxMutexesHeld = 0;
900104fa:	2700      	movs	r7, #0
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
900104fc:	1d20      	adds	r0, r4, #4
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
900104fe:	3e04      	subs	r6, #4
90010500:	2d37      	cmp	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
90010502:	6527      	str	r7, [r4, #80]	; 0x50
90010504:	bf28      	it	cs
90010506:	2537      	movcs	r5, #55	; 0x37
	pxNewTCB->uxPriority = uxPriority;
90010508:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
9001050a:	64e5      	str	r5, [r4, #76]	; 0x4c
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9001050c:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
90010510:	f7fe f9e4 	bl	9000e8dc <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
90010514:	f104 0018 	add.w	r0, r4, #24
90010518:	f7fe f9e0 	bl	9000e8dc <vListInitialiseItem>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9001051c:	eb0a 0006 	add.w	r0, sl, r6
		pxNewTCB->ulNotifiedValue = 0;
90010520:	65a7      	str	r7, [r4, #88]	; 0x58
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
90010522:	464a      	mov	r2, r9
90010524:	4641      	mov	r1, r8
90010526:	f020 0007 	bic.w	r0, r0, #7
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9001052a:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
9001052c:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
9001052e:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
90010530:	6567      	str	r7, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
90010532:	f884 705c 	strb.w	r7, [r4, #92]	; 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
90010536:	f7fe fa4f 	bl	9000e9d8 <pxPortInitialiseStack>
	if( pxCreatedTask != NULL )
9001053a:	9b09      	ldr	r3, [sp, #36]	; 0x24
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9001053c:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
9001053e:	b103      	cbz	r3, 90010542 <xTaskCreate+0x112>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
90010540:	601c      	str	r4, [r3, #0]
			prvAddNewTaskToReadyList( pxNewTCB );
90010542:	4620      	mov	r0, r4
90010544:	f7ff fcb2 	bl	9000feac <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
90010548:	2001      	movs	r0, #1
	}
9001054a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
9001054e:	f04f 30ff 	mov.w	r0, #4294967295
	}
90010552:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
					vPortFree( pxStack );
90010556:	4638      	mov	r0, r7
90010558:	f7fe f950 	bl	9000e7fc <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
9001055c:	f04f 30ff 	mov.w	r0, #4294967295
90010560:	e7f3      	b.n	9001054a <xTaskCreate+0x11a>
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
90010562:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
90010566:	e7c7      	b.n	900104f8 <xTaskCreate+0xc8>

90010568 <vTaskDelay>:
	{
90010568:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
9001056a:	b950      	cbnz	r0, 90010582 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
9001056c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
90010570:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
90010574:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
90010578:	f3bf 8f4f 	dsb	sy
9001057c:	f3bf 8f6f 	isb	sy
	}
90010580:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			configASSERT( uxSchedulerSuspended == 0 );
90010582:	4d1e      	ldr	r5, [pc, #120]	; (900105fc <vTaskDelay+0x94>)
90010584:	682b      	ldr	r3, [r5, #0]
90010586:	b143      	cbz	r3, 9001059a <vTaskDelay+0x32>
90010588:	f04f 0350 	mov.w	r3, #80	; 0x50
9001058c:	f383 8811 	msr	BASEPRI, r3
90010590:	f3bf 8f6f 	isb	sy
90010594:	f3bf 8f4f 	dsb	sy
90010598:	e7fe      	b.n	90010598 <vTaskDelay+0x30>
	++uxSchedulerSuspended;
9001059a:	682b      	ldr	r3, [r5, #0]
9001059c:	4604      	mov	r4, r0
9001059e:	3301      	adds	r3, #1
900105a0:	602b      	str	r3, [r5, #0]
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
900105a2:	4b17      	ldr	r3, [pc, #92]	; (90010600 <vTaskDelay+0x98>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
900105a4:	4e17      	ldr	r6, [pc, #92]	; (90010604 <vTaskDelay+0x9c>)
const TickType_t xConstTickCount = xTickCount;
900105a6:	681f      	ldr	r7, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
900105a8:	6830      	ldr	r0, [r6, #0]
900105aa:	3004      	adds	r0, #4
900105ac:	f7fe f9c2 	bl	9000e934 <uxListRemove>
		else
		{
			/* Calculate the time at which the task should be woken if the event
			does not occur.  This may overflow but this doesn't matter, the
			kernel will manage it correctly. */
			xTimeToWake = xConstTickCount + xTicksToWait;
900105b0:	19e4      	adds	r4, r4, r7

			/* The list item will be inserted in wake time order. */
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
900105b2:	6833      	ldr	r3, [r6, #0]
900105b4:	605c      	str	r4, [r3, #4]

			if( xTimeToWake < xConstTickCount )
900105b6:	d315      	bcc.n	900105e4 <vTaskDelay+0x7c>
			{
				/* Wake time has overflowed.  Place this item in the overflow
				list. */
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
900105b8:	4b13      	ldr	r3, [pc, #76]	; (90010608 <vTaskDelay+0xa0>)
900105ba:	6818      	ldr	r0, [r3, #0]
900105bc:	6831      	ldr	r1, [r6, #0]
900105be:	3104      	adds	r1, #4
900105c0:	f7fe f9a0 	bl	9000e904 <vListInsert>
	configASSERT( uxSchedulerSuspended );
900105c4:	682b      	ldr	r3, [r5, #0]
900105c6:	b943      	cbnz	r3, 900105da <vTaskDelay+0x72>
900105c8:	f04f 0350 	mov.w	r3, #80	; 0x50
900105cc:	f383 8811 	msr	BASEPRI, r3
900105d0:	f3bf 8f6f 	isb	sy
900105d4:	f3bf 8f4f 	dsb	sy
900105d8:	e7fe      	b.n	900105d8 <vTaskDelay+0x70>
900105da:	f7ff fde5 	bl	900101a8 <xTaskResumeAll.part.0>
		if( xAlreadyYielded == pdFALSE )
900105de:	2800      	cmp	r0, #0
900105e0:	d0c4      	beq.n	9001056c <vTaskDelay+0x4>
	}
900105e2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			}
			else
			{
				/* The wake time has not overflowed, so the current block list
				is used. */
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
900105e4:	4b09      	ldr	r3, [pc, #36]	; (9001060c <vTaskDelay+0xa4>)
900105e6:	6818      	ldr	r0, [r3, #0]
900105e8:	6831      	ldr	r1, [r6, #0]
900105ea:	3104      	adds	r1, #4
900105ec:	f7fe f98a 	bl	9000e904 <vListInsert>

				/* If the task entering the blocked state was placed at the
				head of the list of blocked tasks then xNextTaskUnblockTime
				needs to be updated too. */
				if( xTimeToWake < xNextTaskUnblockTime )
900105f0:	4b07      	ldr	r3, [pc, #28]	; (90010610 <vTaskDelay+0xa8>)
900105f2:	681a      	ldr	r2, [r3, #0]
900105f4:	4294      	cmp	r4, r2
900105f6:	d2e5      	bcs.n	900105c4 <vTaskDelay+0x5c>
				{
					xNextTaskUnblockTime = xTimeToWake;
900105f8:	601c      	str	r4, [r3, #0]
900105fa:	e7e3      	b.n	900105c4 <vTaskDelay+0x5c>
900105fc:	24039674 	.word	0x24039674
90010600:	240396f4 	.word	0x240396f4
90010604:	24039200 	.word	0x24039200
90010608:	24039208 	.word	0x24039208
9001060c:	24039204 	.word	0x24039204
90010610:	240396a8 	.word	0x240396a8

90010614 <vTaskStartScheduler>:
{
90010614:	b570      	push	{r4, r5, r6, lr}
90010616:	b084      	sub	sp, #16
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
90010618:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
9001061a:	4668      	mov	r0, sp
9001061c:	aa02      	add	r2, sp, #8
9001061e:	a901      	add	r1, sp, #4
		StackType_t *pxIdleTaskStackBuffer = NULL;
90010620:	e9cd 4400 	strd	r4, r4, [sp]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
90010624:	f7fe f80e 	bl	9000e644 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
90010628:	9d00      	ldr	r5, [sp, #0]
9001062a:	e9dd 0601 	ldrd	r0, r6, [sp, #4]
		configASSERT( puxStackBuffer != NULL );
9001062e:	b1b8      	cbz	r0, 90010660 <vTaskStartScheduler+0x4c>
		configASSERT( pxTaskBuffer != NULL );
90010630:	b16d      	cbz	r5, 9001064e <vTaskStartScheduler+0x3a>
			volatile size_t xSize = sizeof( StaticTask_t );
90010632:	2260      	movs	r2, #96	; 0x60
90010634:	9203      	str	r2, [sp, #12]
			configASSERT( xSize == sizeof( TCB_t ) );
90010636:	9a03      	ldr	r2, [sp, #12]
90010638:	2a60      	cmp	r2, #96	; 0x60
9001063a:	d01a      	beq.n	90010672 <vTaskStartScheduler+0x5e>
9001063c:	f04f 0350 	mov.w	r3, #80	; 0x50
90010640:	f383 8811 	msr	BASEPRI, r3
90010644:	f3bf 8f6f 	isb	sy
90010648:	f3bf 8f4f 	dsb	sy
9001064c:	e7fe      	b.n	9001064c <vTaskStartScheduler+0x38>
9001064e:	f04f 0350 	mov.w	r3, #80	; 0x50
90010652:	f383 8811 	msr	BASEPRI, r3
90010656:	f3bf 8f6f 	isb	sy
9001065a:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
9001065e:	e7fe      	b.n	9001065e <vTaskStartScheduler+0x4a>
90010660:	f04f 0350 	mov.w	r3, #80	; 0x50
90010664:	f383 8811 	msr	BASEPRI, r3
90010668:	f3bf 8f6f 	isb	sy
9001066c:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
90010670:	e7fe      	b.n	90010670 <vTaskStartScheduler+0x5c>
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
90010672:	00b6      	lsls	r6, r6, #2
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
90010674:	2302      	movs	r3, #2
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
90010676:	21a5      	movs	r1, #165	; 0xa5
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
90010678:	6328      	str	r0, [r5, #48]	; 0x30
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9001067a:	4632      	mov	r2, r6
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
9001067c:	f885 305d 	strb.w	r3, [r5, #93]	; 0x5d
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
90010680:	9b03      	ldr	r3, [sp, #12]
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
90010682:	f017 fd03 	bl	9002808c <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
90010686:	1f33      	subs	r3, r6, #4
90010688:	6b2a      	ldr	r2, [r5, #48]	; 0x30
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9001068a:	492a      	ldr	r1, [pc, #168]	; (90010734 <vTaskStartScheduler+0x120>)
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9001068c:	1d28      	adds	r0, r5, #4
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9001068e:	441a      	add	r2, r3
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90010690:	f885 4038 	strb.w	r4, [r5, #56]	; 0x38
90010694:	6369      	str	r1, [r5, #52]	; 0x34
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
90010696:	f885 4043 	strb.w	r4, [r5, #67]	; 0x43
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
9001069a:	f022 0607 	bic.w	r6, r2, #7
	pxNewTCB->uxPriority = uxPriority;
9001069e:	62ec      	str	r4, [r5, #44]	; 0x2c
		pxNewTCB->uxMutexesHeld = 0;
900106a0:	e9c5 4413 	strd	r4, r4, [r5, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
900106a4:	f7fe f91a 	bl	9000e8dc <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
900106a8:	f105 0018 	add.w	r0, r5, #24
900106ac:	f7fe f916 	bl	9000e8dc <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
900106b0:	2338      	movs	r3, #56	; 0x38
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
900106b2:	4622      	mov	r2, r4
900106b4:	4920      	ldr	r1, [pc, #128]	; (90010738 <vTaskStartScheduler+0x124>)
		pxNewTCB->ulNotifiedValue = 0;
900106b6:	65ac      	str	r4, [r5, #88]	; 0x58
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
900106b8:	4630      	mov	r0, r6
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
900106ba:	61ab      	str	r3, [r5, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
900106bc:	612d      	str	r5, [r5, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
900106be:	626d      	str	r5, [r5, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
900106c0:	656c      	str	r4, [r5, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
900106c2:	f885 405c 	strb.w	r4, [r5, #92]	; 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
900106c6:	f7fe f987 	bl	9000e9d8 <pxPortInitialiseStack>
900106ca:	4603      	mov	r3, r0
			prvAddNewTaskToReadyList( pxNewTCB );
900106cc:	4628      	mov	r0, r5
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
900106ce:	602b      	str	r3, [r5, #0]
			prvAddNewTaskToReadyList( pxNewTCB );
900106d0:	f7ff fbec 	bl	9000feac <prvAddNewTaskToReadyList>
			xReturn = xTimerCreateTimerTask();
900106d4:	f000 fca4 	bl	90011020 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
900106d8:	2801      	cmp	r0, #1
900106da:	d00c      	beq.n	900106f6 <vTaskStartScheduler+0xe2>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
900106dc:	3001      	adds	r0, #1
900106de:	d001      	beq.n	900106e4 <vTaskStartScheduler+0xd0>
}
900106e0:	b004      	add	sp, #16
900106e2:	bd70      	pop	{r4, r5, r6, pc}
900106e4:	f04f 0350 	mov.w	r3, #80	; 0x50
900106e8:	f383 8811 	msr	BASEPRI, r3
900106ec:	f3bf 8f6f 	isb	sy
900106f0:	f3bf 8f4f 	dsb	sy
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
900106f4:	e7fe      	b.n	900106f4 <vTaskStartScheduler+0xe0>
900106f6:	f04f 0350 	mov.w	r3, #80	; 0x50
900106fa:	f383 8811 	msr	BASEPRI, r3
900106fe:	f3bf 8f6f 	isb	sy
90010702:	f3bf 8f4f 	dsb	sy
		xNextTaskUnblockTime = portMAX_DELAY;
90010706:	4b0d      	ldr	r3, [pc, #52]	; (9001073c <vTaskStartScheduler+0x128>)
90010708:	f04f 32ff 	mov.w	r2, #4294967295
		xSchedulerRunning = pdTRUE;
9001070c:	490c      	ldr	r1, [pc, #48]	; (90010740 <vTaskStartScheduler+0x12c>)
		xNextTaskUnblockTime = portMAX_DELAY;
9001070e:	601a      	str	r2, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
90010710:	4b0c      	ldr	r3, [pc, #48]	; (90010744 <vTaskStartScheduler+0x130>)
		traceTASK_SWITCHED_IN();
90010712:	4a0d      	ldr	r2, [pc, #52]	; (90010748 <vTaskStartScheduler+0x134>)
		xSchedulerRunning = pdTRUE;
90010714:	6008      	str	r0, [r1, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
90010716:	601c      	str	r4, [r3, #0]
		traceTASK_SWITCHED_IN();
90010718:	6813      	ldr	r3, [r2, #0]
		if( xTask == NULL )
9001071a:	b143      	cbz	r3, 9001072e <vTaskStartScheduler+0x11a>
		if( xTCB->pxTaskTag != NULL )
9001071c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
9001071e:	b10b      	cbz	r3, 90010724 <vTaskStartScheduler+0x110>
			xReturn = xTCB->pxTaskTag( pvParameter );
90010720:	2000      	movs	r0, #0
90010722:	4798      	blx	r3
}
90010724:	b004      	add	sp, #16
90010726:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		if( xPortStartScheduler() != pdFALSE )
9001072a:	f7fe ba15 	b.w	9000eb58 <xPortStartScheduler>
			xTCB = pxCurrentTCB;
9001072e:	6813      	ldr	r3, [r2, #0]
90010730:	e7f4      	b.n	9001071c <vTaskStartScheduler+0x108>
90010732:	bf00      	nop
90010734:	454c4449 	.word	0x454c4449
90010738:	9000ffbd 	.word	0x9000ffbd
9001073c:	240396a8 	.word	0x240396a8
90010740:	240396c8 	.word	0x240396c8
90010744:	240396f4 	.word	0x240396f4
90010748:	24039200 	.word	0x24039200

9001074c <vTaskSuspendAll>:
	++uxSchedulerSuspended;
9001074c:	4a02      	ldr	r2, [pc, #8]	; (90010758 <vTaskSuspendAll+0xc>)
9001074e:	6813      	ldr	r3, [r2, #0]
90010750:	3301      	adds	r3, #1
90010752:	6013      	str	r3, [r2, #0]
}
90010754:	4770      	bx	lr
90010756:	bf00      	nop
90010758:	24039674 	.word	0x24039674

9001075c <xTaskResumeAll>:
	configASSERT( uxSchedulerSuspended );
9001075c:	4b06      	ldr	r3, [pc, #24]	; (90010778 <xTaskResumeAll+0x1c>)
9001075e:	681b      	ldr	r3, [r3, #0]
90010760:	b943      	cbnz	r3, 90010774 <xTaskResumeAll+0x18>
90010762:	f04f 0350 	mov.w	r3, #80	; 0x50
90010766:	f383 8811 	msr	BASEPRI, r3
9001076a:	f3bf 8f6f 	isb	sy
9001076e:	f3bf 8f4f 	dsb	sy
90010772:	e7fe      	b.n	90010772 <xTaskResumeAll+0x16>
90010774:	f7ff bd18 	b.w	900101a8 <xTaskResumeAll.part.0>
90010778:	24039674 	.word	0x24039674

9001077c <xTaskGetTickCount>:
		xTicks = xTickCount;
9001077c:	4b01      	ldr	r3, [pc, #4]	; (90010784 <xTaskGetTickCount+0x8>)
9001077e:	6818      	ldr	r0, [r3, #0]
}
90010780:	4770      	bx	lr
90010782:	bf00      	nop
90010784:	240396f4 	.word	0x240396f4

90010788 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
90010788:	4b05      	ldr	r3, [pc, #20]	; (900107a0 <xTaskIncrementTick+0x18>)
9001078a:	681b      	ldr	r3, [r3, #0]
9001078c:	b90b      	cbnz	r3, 90010792 <xTaskIncrementTick+0xa>
9001078e:	f7ff bc63 	b.w	90010058 <xTaskIncrementTick.part.0>
		++xPendedTicks;
90010792:	4a04      	ldr	r2, [pc, #16]	; (900107a4 <xTaskIncrementTick+0x1c>)
}
90010794:	2000      	movs	r0, #0
		++xPendedTicks;
90010796:	6813      	ldr	r3, [r2, #0]
90010798:	3301      	adds	r3, #1
9001079a:	6013      	str	r3, [r2, #0]
}
9001079c:	4770      	bx	lr
9001079e:	bf00      	nop
900107a0:	24039674 	.word	0x24039674
900107a4:	240396b0 	.word	0x240396b0

900107a8 <vTaskSetApplicationTaskTag>:
	{
900107a8:	b538      	push	{r3, r4, r5, lr}
900107aa:	460d      	mov	r5, r1
		if( xTask == NULL )
900107ac:	b138      	cbz	r0, 900107be <vTaskSetApplicationTaskTag+0x16>
900107ae:	4604      	mov	r4, r0
		taskENTER_CRITICAL();
900107b0:	f7fe f940 	bl	9000ea34 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
900107b4:	6565      	str	r5, [r4, #84]	; 0x54
	}
900107b6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
900107ba:	f7fe b95d 	b.w	9000ea78 <vPortExitCritical>
			xTCB = ( TCB_t * ) pxCurrentTCB;
900107be:	4b04      	ldr	r3, [pc, #16]	; (900107d0 <vTaskSetApplicationTaskTag+0x28>)
900107c0:	681c      	ldr	r4, [r3, #0]
		taskENTER_CRITICAL();
900107c2:	f7fe f937 	bl	9000ea34 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
900107c6:	6565      	str	r5, [r4, #84]	; 0x54
	}
900107c8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
900107cc:	f7fe b954 	b.w	9000ea78 <vPortExitCritical>
900107d0:	24039200 	.word	0x24039200

900107d4 <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
900107d4:	4b27      	ldr	r3, [pc, #156]	; (90010874 <vTaskSwitchContext+0xa0>)
900107d6:	681b      	ldr	r3, [r3, #0]
900107d8:	b11b      	cbz	r3, 900107e2 <vTaskSwitchContext+0xe>
		xYieldPending = pdTRUE;
900107da:	4b27      	ldr	r3, [pc, #156]	; (90010878 <vTaskSwitchContext+0xa4>)
900107dc:	2201      	movs	r2, #1
900107de:	601a      	str	r2, [r3, #0]
900107e0:	4770      	bx	lr
{
900107e2:	b570      	push	{r4, r5, r6, lr}
		xYieldPending = pdFALSE;
900107e4:	4a24      	ldr	r2, [pc, #144]	; (90010878 <vTaskSwitchContext+0xa4>)
		traceTASK_SWITCHED_OUT();
900107e6:	4c25      	ldr	r4, [pc, #148]	; (9001087c <vTaskSwitchContext+0xa8>)
		xYieldPending = pdFALSE;
900107e8:	6013      	str	r3, [r2, #0]
		traceTASK_SWITCHED_OUT();
900107ea:	6823      	ldr	r3, [r4, #0]
		if( xTask == NULL )
900107ec:	2b00      	cmp	r3, #0
900107ee:	d036      	beq.n	9001085e <vTaskSwitchContext+0x8a>
		if( xTCB->pxTaskTag != NULL )
900107f0:	6d5b      	ldr	r3, [r3, #84]	; 0x54
900107f2:	b10b      	cbz	r3, 900107f8 <vTaskSwitchContext+0x24>
			xReturn = xTCB->pxTaskTag( pvParameter );
900107f4:	2001      	movs	r0, #1
900107f6:	4798      	blx	r3
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
900107f8:	4d21      	ldr	r5, [pc, #132]	; (90010880 <vTaskSwitchContext+0xac>)
900107fa:	4922      	ldr	r1, [pc, #136]	; (90010884 <vTaskSwitchContext+0xb0>)
900107fc:	682b      	ldr	r3, [r5, #0]
900107fe:	eb03 0283 	add.w	r2, r3, r3, lsl #2
90010802:	0098      	lsls	r0, r3, #2
90010804:	0092      	lsls	r2, r2, #2
90010806:	588a      	ldr	r2, [r1, r2]
90010808:	b942      	cbnz	r2, 9001081c <vTaskSwitchContext+0x48>
9001080a:	b1fb      	cbz	r3, 9001084c <vTaskSwitchContext+0x78>
9001080c:	3b01      	subs	r3, #1
9001080e:	eb03 0283 	add.w	r2, r3, r3, lsl #2
90010812:	0098      	lsls	r0, r3, #2
90010814:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
90010818:	2a00      	cmp	r2, #0
9001081a:	d0f6      	beq.n	9001080a <vTaskSwitchContext+0x36>
9001081c:	4418      	add	r0, r3
9001081e:	eb01 0c80 	add.w	ip, r1, r0, lsl #2
90010822:	f8dc 1004 	ldr.w	r1, [ip, #4]
90010826:	4662      	mov	r2, ip
90010828:	6849      	ldr	r1, [r1, #4]
9001082a:	3208      	adds	r2, #8
9001082c:	4291      	cmp	r1, r2
9001082e:	f8cc 1004 	str.w	r1, [ip, #4]
90010832:	d01b      	beq.n	9001086c <vTaskSwitchContext+0x98>
90010834:	68ca      	ldr	r2, [r1, #12]
90010836:	6022      	str	r2, [r4, #0]
90010838:	602b      	str	r3, [r5, #0]
		traceTASK_SWITCHED_IN();
9001083a:	6823      	ldr	r3, [r4, #0]
		if( xTask == NULL )
9001083c:	b1a3      	cbz	r3, 90010868 <vTaskSwitchContext+0x94>
		if( xTCB->pxTaskTag != NULL )
9001083e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
90010840:	b11b      	cbz	r3, 9001084a <vTaskSwitchContext+0x76>
			xReturn = xTCB->pxTaskTag( pvParameter );
90010842:	2000      	movs	r0, #0
}
90010844:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			xReturn = xTCB->pxTaskTag( pvParameter );
90010848:	4718      	bx	r3
}
9001084a:	bd70      	pop	{r4, r5, r6, pc}
9001084c:	f04f 0350 	mov.w	r3, #80	; 0x50
90010850:	f383 8811 	msr	BASEPRI, r3
90010854:	f3bf 8f6f 	isb	sy
90010858:	f3bf 8f4f 	dsb	sy
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9001085c:	e7fe      	b.n	9001085c <vTaskSwitchContext+0x88>
			xTCB = pxCurrentTCB;
9001085e:	6823      	ldr	r3, [r4, #0]
		if( xTCB->pxTaskTag != NULL )
90010860:	6d5b      	ldr	r3, [r3, #84]	; 0x54
90010862:	2b00      	cmp	r3, #0
90010864:	d1c6      	bne.n	900107f4 <vTaskSwitchContext+0x20>
90010866:	e7c7      	b.n	900107f8 <vTaskSwitchContext+0x24>
			xTCB = pxCurrentTCB;
90010868:	6823      	ldr	r3, [r4, #0]
9001086a:	e7e8      	b.n	9001083e <vTaskSwitchContext+0x6a>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9001086c:	6849      	ldr	r1, [r1, #4]
9001086e:	f8cc 1004 	str.w	r1, [ip, #4]
90010872:	e7df      	b.n	90010834 <vTaskSwitchContext+0x60>
90010874:	24039674 	.word	0x24039674
90010878:	240396f8 	.word	0x240396f8
9001087c:	24039200 	.word	0x24039200
90010880:	2403967c 	.word	0x2403967c
90010884:	2403920c 	.word	0x2403920c

90010888 <vTaskPlaceOnEventList>:
	configASSERT( pxEventList );
90010888:	b1f0      	cbz	r0, 900108c8 <vTaskPlaceOnEventList+0x40>
{
9001088a:	b570      	push	{r4, r5, r6, lr}
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
9001088c:	4d1a      	ldr	r5, [pc, #104]	; (900108f8 <vTaskPlaceOnEventList+0x70>)
9001088e:	460c      	mov	r4, r1
90010890:	6829      	ldr	r1, [r5, #0]
90010892:	3118      	adds	r1, #24
90010894:	f7fe f836 	bl	9000e904 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
90010898:	4b18      	ldr	r3, [pc, #96]	; (900108fc <vTaskPlaceOnEventList+0x74>)
9001089a:	681e      	ldr	r6, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9001089c:	6828      	ldr	r0, [r5, #0]
9001089e:	3004      	adds	r0, #4
900108a0:	f7fe f848 	bl	9000e934 <uxListRemove>
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
900108a4:	1c63      	adds	r3, r4, #1
900108a6:	d020      	beq.n	900108ea <vTaskPlaceOnEventList+0x62>
			xTimeToWake = xConstTickCount + xTicksToWait;
900108a8:	19a4      	adds	r4, r4, r6
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
900108aa:	682b      	ldr	r3, [r5, #0]
900108ac:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
900108ae:	d214      	bcs.n	900108da <vTaskPlaceOnEventList+0x52>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
900108b0:	4b13      	ldr	r3, [pc, #76]	; (90010900 <vTaskPlaceOnEventList+0x78>)
900108b2:	6818      	ldr	r0, [r3, #0]
900108b4:	6829      	ldr	r1, [r5, #0]
900108b6:	3104      	adds	r1, #4
900108b8:	f7fe f824 	bl	9000e904 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
900108bc:	4b11      	ldr	r3, [pc, #68]	; (90010904 <vTaskPlaceOnEventList+0x7c>)
900108be:	681a      	ldr	r2, [r3, #0]
900108c0:	4294      	cmp	r4, r2
900108c2:	d200      	bcs.n	900108c6 <vTaskPlaceOnEventList+0x3e>
					xNextTaskUnblockTime = xTimeToWake;
900108c4:	601c      	str	r4, [r3, #0]
}
900108c6:	bd70      	pop	{r4, r5, r6, pc}
900108c8:	f04f 0350 	mov.w	r3, #80	; 0x50
900108cc:	f383 8811 	msr	BASEPRI, r3
900108d0:	f3bf 8f6f 	isb	sy
900108d4:	f3bf 8f4f 	dsb	sy
	configASSERT( pxEventList );
900108d8:	e7fe      	b.n	900108d8 <vTaskPlaceOnEventList+0x50>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
900108da:	4b0b      	ldr	r3, [pc, #44]	; (90010908 <vTaskPlaceOnEventList+0x80>)
900108dc:	6818      	ldr	r0, [r3, #0]
900108de:	6829      	ldr	r1, [r5, #0]
}
900108e0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
900108e4:	3104      	adds	r1, #4
900108e6:	f7fe b80d 	b.w	9000e904 <vListInsert>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
900108ea:	6829      	ldr	r1, [r5, #0]
900108ec:	4807      	ldr	r0, [pc, #28]	; (9001090c <vTaskPlaceOnEventList+0x84>)
900108ee:	3104      	adds	r1, #4
}
900108f0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
900108f4:	f7fd bff6 	b.w	9000e8e4 <vListInsertEnd>
900108f8:	24039200 	.word	0x24039200
900108fc:	240396f4 	.word	0x240396f4
90010900:	24039204 	.word	0x24039204
90010904:	240396a8 	.word	0x240396a8
90010908:	24039208 	.word	0x24039208
9001090c:	240396cc 	.word	0x240396cc

90010910 <vTaskPlaceOnEventListRestricted>:
		configASSERT( pxEventList );
90010910:	b358      	cbz	r0, 9001096a <vTaskPlaceOnEventListRestricted+0x5a>
	{
90010912:	b570      	push	{r4, r5, r6, lr}
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
90010914:	4e1d      	ldr	r6, [pc, #116]	; (9001098c <vTaskPlaceOnEventListRestricted+0x7c>)
90010916:	460c      	mov	r4, r1
90010918:	4615      	mov	r5, r2
9001091a:	6831      	ldr	r1, [r6, #0]
9001091c:	3118      	adds	r1, #24
9001091e:	f7fd ffe1 	bl	9000e8e4 <vListInsertEnd>
		if( xWaitIndefinitely != pdFALSE )
90010922:	b165      	cbz	r5, 9001093e <vTaskPlaceOnEventListRestricted+0x2e>
const TickType_t xConstTickCount = xTickCount;
90010924:	4b1a      	ldr	r3, [pc, #104]	; (90010990 <vTaskPlaceOnEventListRestricted+0x80>)
90010926:	681b      	ldr	r3, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90010928:	6830      	ldr	r0, [r6, #0]
9001092a:	3004      	adds	r0, #4
9001092c:	f7fe f802 	bl	9000e934 <uxListRemove>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
90010930:	6831      	ldr	r1, [r6, #0]
90010932:	4818      	ldr	r0, [pc, #96]	; (90010994 <vTaskPlaceOnEventListRestricted+0x84>)
90010934:	3104      	adds	r1, #4
	}
90010936:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
9001093a:	f7fd bfd3 	b.w	9000e8e4 <vListInsertEnd>
const TickType_t xConstTickCount = xTickCount;
9001093e:	4b14      	ldr	r3, [pc, #80]	; (90010990 <vTaskPlaceOnEventListRestricted+0x80>)
90010940:	681d      	ldr	r5, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90010942:	6830      	ldr	r0, [r6, #0]
90010944:	3004      	adds	r0, #4
90010946:	f7fd fff5 	bl	9000e934 <uxListRemove>
			xTimeToWake = xConstTickCount + xTicksToWait;
9001094a:	1964      	adds	r4, r4, r5
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
9001094c:	6833      	ldr	r3, [r6, #0]
9001094e:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
90010950:	d214      	bcs.n	9001097c <vTaskPlaceOnEventListRestricted+0x6c>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90010952:	4b11      	ldr	r3, [pc, #68]	; (90010998 <vTaskPlaceOnEventListRestricted+0x88>)
90010954:	6818      	ldr	r0, [r3, #0]
90010956:	6831      	ldr	r1, [r6, #0]
90010958:	3104      	adds	r1, #4
9001095a:	f7fd ffd3 	bl	9000e904 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
9001095e:	4b0f      	ldr	r3, [pc, #60]	; (9001099c <vTaskPlaceOnEventListRestricted+0x8c>)
90010960:	681a      	ldr	r2, [r3, #0]
90010962:	4294      	cmp	r4, r2
90010964:	d200      	bcs.n	90010968 <vTaskPlaceOnEventListRestricted+0x58>
					xNextTaskUnblockTime = xTimeToWake;
90010966:	601c      	str	r4, [r3, #0]
	}
90010968:	bd70      	pop	{r4, r5, r6, pc}
9001096a:	f04f 0350 	mov.w	r3, #80	; 0x50
9001096e:	f383 8811 	msr	BASEPRI, r3
90010972:	f3bf 8f6f 	isb	sy
90010976:	f3bf 8f4f 	dsb	sy
		configASSERT( pxEventList );
9001097a:	e7fe      	b.n	9001097a <vTaskPlaceOnEventListRestricted+0x6a>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9001097c:	4b08      	ldr	r3, [pc, #32]	; (900109a0 <vTaskPlaceOnEventListRestricted+0x90>)
9001097e:	6818      	ldr	r0, [r3, #0]
90010980:	6831      	ldr	r1, [r6, #0]
	}
90010982:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90010986:	3104      	adds	r1, #4
90010988:	f7fd bfbc 	b.w	9000e904 <vListInsert>
9001098c:	24039200 	.word	0x24039200
90010990:	240396f4 	.word	0x240396f4
90010994:	240396cc 	.word	0x240396cc
90010998:	24039204 	.word	0x24039204
9001099c:	240396a8 	.word	0x240396a8
900109a0:	24039208 	.word	0x24039208

900109a4 <xTaskRemoveFromEventList>:
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
900109a4:	68c3      	ldr	r3, [r0, #12]
{
900109a6:	b530      	push	{r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
900109a8:	68dc      	ldr	r4, [r3, #12]
{
900109aa:	b083      	sub	sp, #12
	configASSERT( pxUnblockedTCB );
900109ac:	b35c      	cbz	r4, 90010a06 <xTaskRemoveFromEventList+0x62>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
900109ae:	f104 0518 	add.w	r5, r4, #24
900109b2:	4628      	mov	r0, r5
900109b4:	f7fd ffbe 	bl	9000e934 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
900109b8:	4b19      	ldr	r3, [pc, #100]	; (90010a20 <xTaskRemoveFromEventList+0x7c>)
900109ba:	681b      	ldr	r3, [r3, #0]
900109bc:	b17b      	cbz	r3, 900109de <xTaskRemoveFromEventList+0x3a>
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
900109be:	4629      	mov	r1, r5
900109c0:	4818      	ldr	r0, [pc, #96]	; (90010a24 <xTaskRemoveFromEventList+0x80>)
900109c2:	f7fd ff8f 	bl	9000e8e4 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
900109c6:	4b18      	ldr	r3, [pc, #96]	; (90010a28 <xTaskRemoveFromEventList+0x84>)
900109c8:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
900109ca:	681b      	ldr	r3, [r3, #0]
900109cc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900109ce:	429a      	cmp	r2, r3
900109d0:	d922      	bls.n	90010a18 <xTaskRemoveFromEventList+0x74>
		xYieldPending = pdTRUE;
900109d2:	2301      	movs	r3, #1
900109d4:	4a15      	ldr	r2, [pc, #84]	; (90010a2c <xTaskRemoveFromEventList+0x88>)
		xReturn = pdTRUE;
900109d6:	4618      	mov	r0, r3
		xYieldPending = pdTRUE;
900109d8:	6013      	str	r3, [r2, #0]
}
900109da:	b003      	add	sp, #12
900109dc:	bd30      	pop	{r4, r5, pc}
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
900109de:	1d21      	adds	r1, r4, #4
900109e0:	4608      	mov	r0, r1
900109e2:	9101      	str	r1, [sp, #4]
900109e4:	f7fd ffa6 	bl	9000e934 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
900109e8:	4a11      	ldr	r2, [pc, #68]	; (90010a30 <xTaskRemoveFromEventList+0x8c>)
900109ea:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
900109ec:	6810      	ldr	r0, [r2, #0]
900109ee:	9901      	ldr	r1, [sp, #4]
900109f0:	4283      	cmp	r3, r0
900109f2:	d900      	bls.n	900109f6 <xTaskRemoveFromEventList+0x52>
900109f4:	6013      	str	r3, [r2, #0]
900109f6:	eb03 0383 	add.w	r3, r3, r3, lsl #2
900109fa:	480e      	ldr	r0, [pc, #56]	; (90010a34 <xTaskRemoveFromEventList+0x90>)
900109fc:	eb00 0083 	add.w	r0, r0, r3, lsl #2
90010a00:	f7fd ff70 	bl	9000e8e4 <vListInsertEnd>
90010a04:	e7df      	b.n	900109c6 <xTaskRemoveFromEventList+0x22>
90010a06:	f04f 0350 	mov.w	r3, #80	; 0x50
90010a0a:	f383 8811 	msr	BASEPRI, r3
90010a0e:	f3bf 8f6f 	isb	sy
90010a12:	f3bf 8f4f 	dsb	sy
	configASSERT( pxUnblockedTCB );
90010a16:	e7fe      	b.n	90010a16 <xTaskRemoveFromEventList+0x72>
		xReturn = pdFALSE;
90010a18:	2000      	movs	r0, #0
}
90010a1a:	b003      	add	sp, #12
90010a1c:	bd30      	pop	{r4, r5, pc}
90010a1e:	bf00      	nop
90010a20:	24039674 	.word	0x24039674
90010a24:	240396b4 	.word	0x240396b4
90010a28:	24039200 	.word	0x24039200
90010a2c:	240396f8 	.word	0x240396f8
90010a30:	2403967c 	.word	0x2403967c
90010a34:	2403920c 	.word	0x2403920c

90010a38 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
90010a38:	4a03      	ldr	r2, [pc, #12]	; (90010a48 <vTaskInternalSetTimeOutState+0x10>)
	pxTimeOut->xTimeOnEntering = xTickCount;
90010a3a:	4b04      	ldr	r3, [pc, #16]	; (90010a4c <vTaskInternalSetTimeOutState+0x14>)
	pxTimeOut->xOverflowCount = xNumOfOverflows;
90010a3c:	6812      	ldr	r2, [r2, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
90010a3e:	681b      	ldr	r3, [r3, #0]
90010a40:	e9c0 2300 	strd	r2, r3, [r0]
}
90010a44:	4770      	bx	lr
90010a46:	bf00      	nop
90010a48:	240396ac 	.word	0x240396ac
90010a4c:	240396f4 	.word	0x240396f4

90010a50 <xTaskCheckForTimeOut>:
	configASSERT( pxTimeOut );
90010a50:	b328      	cbz	r0, 90010a9e <xTaskCheckForTimeOut+0x4e>
{
90010a52:	b5f0      	push	{r4, r5, r6, r7, lr}
90010a54:	460d      	mov	r5, r1
90010a56:	b083      	sub	sp, #12
	configASSERT( pxTicksToWait );
90010a58:	b1c1      	cbz	r1, 90010a8c <xTaskCheckForTimeOut+0x3c>
90010a5a:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
90010a5c:	f7fd ffea 	bl	9000ea34 <vPortEnterCritical>
			if( *pxTicksToWait == portMAX_DELAY )
90010a60:	682b      	ldr	r3, [r5, #0]
		const TickType_t xConstTickCount = xTickCount;
90010a62:	4a1d      	ldr	r2, [pc, #116]	; (90010ad8 <xTaskCheckForTimeOut+0x88>)
			if( *pxTicksToWait == portMAX_DELAY )
90010a64:	1c58      	adds	r0, r3, #1
		const TickType_t xConstTickCount = xTickCount;
90010a66:	6811      	ldr	r1, [r2, #0]
			if( *pxTicksToWait == portMAX_DELAY )
90010a68:	d030      	beq.n	90010acc <xTaskCheckForTimeOut+0x7c>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
90010a6a:	f8df c070 	ldr.w	ip, [pc, #112]	; 90010adc <xTaskCheckForTimeOut+0x8c>
90010a6e:	6826      	ldr	r6, [r4, #0]
90010a70:	f8dc 7000 	ldr.w	r7, [ip]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
90010a74:	6860      	ldr	r0, [r4, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
90010a76:	42be      	cmp	r6, r7
90010a78:	d01a      	beq.n	90010ab0 <xTaskCheckForTimeOut+0x60>
90010a7a:	4288      	cmp	r0, r1
90010a7c:	d818      	bhi.n	90010ab0 <xTaskCheckForTimeOut+0x60>
			xReturn = pdTRUE;
90010a7e:	2001      	movs	r0, #1
90010a80:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
90010a82:	f7fd fff9 	bl	9000ea78 <vPortExitCritical>
}
90010a86:	9801      	ldr	r0, [sp, #4]
90010a88:	b003      	add	sp, #12
90010a8a:	bdf0      	pop	{r4, r5, r6, r7, pc}
90010a8c:	f04f 0350 	mov.w	r3, #80	; 0x50
90010a90:	f383 8811 	msr	BASEPRI, r3
90010a94:	f3bf 8f6f 	isb	sy
90010a98:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTicksToWait );
90010a9c:	e7fe      	b.n	90010a9c <xTaskCheckForTimeOut+0x4c>
90010a9e:	f04f 0350 	mov.w	r3, #80	; 0x50
90010aa2:	f383 8811 	msr	BASEPRI, r3
90010aa6:	f3bf 8f6f 	isb	sy
90010aaa:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTimeOut );
90010aae:	e7fe      	b.n	90010aae <xTaskCheckForTimeOut+0x5e>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
90010ab0:	eba1 0e00 	sub.w	lr, r1, r0
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
90010ab4:	4573      	cmp	r3, lr
90010ab6:	d90b      	bls.n	90010ad0 <xTaskCheckForTimeOut+0x80>
			*pxTicksToWait -= xElapsedTime;
90010ab8:	1a5b      	subs	r3, r3, r1
	pxTimeOut->xOverflowCount = xNumOfOverflows;
90010aba:	f8dc 1000 	ldr.w	r1, [ip]
	pxTimeOut->xTimeOnEntering = xTickCount;
90010abe:	6812      	ldr	r2, [r2, #0]
			*pxTicksToWait -= xElapsedTime;
90010ac0:	4403      	add	r3, r0
			xReturn = pdFALSE;
90010ac2:	2000      	movs	r0, #0
			*pxTicksToWait -= xElapsedTime;
90010ac4:	602b      	str	r3, [r5, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
90010ac6:	e9c4 1200 	strd	r1, r2, [r4]
			xReturn = pdFALSE;
90010aca:	e7d9      	b.n	90010a80 <xTaskCheckForTimeOut+0x30>
				xReturn = pdFALSE;
90010acc:	2000      	movs	r0, #0
90010ace:	e7d7      	b.n	90010a80 <xTaskCheckForTimeOut+0x30>
			*pxTicksToWait = 0;
90010ad0:	2300      	movs	r3, #0
			xReturn = pdTRUE;
90010ad2:	2001      	movs	r0, #1
			*pxTicksToWait = 0;
90010ad4:	602b      	str	r3, [r5, #0]
			xReturn = pdTRUE;
90010ad6:	e7d3      	b.n	90010a80 <xTaskCheckForTimeOut+0x30>
90010ad8:	240396f4 	.word	0x240396f4
90010adc:	240396ac 	.word	0x240396ac

90010ae0 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
90010ae0:	4b01      	ldr	r3, [pc, #4]	; (90010ae8 <vTaskMissedYield+0x8>)
90010ae2:	2201      	movs	r2, #1
90010ae4:	601a      	str	r2, [r3, #0]
}
90010ae6:	4770      	bx	lr
90010ae8:	240396f8 	.word	0x240396f8

90010aec <xTaskGetCurrentTaskHandle>:
		xReturn = pxCurrentTCB;
90010aec:	4b01      	ldr	r3, [pc, #4]	; (90010af4 <xTaskGetCurrentTaskHandle+0x8>)
90010aee:	6818      	ldr	r0, [r3, #0]
	}
90010af0:	4770      	bx	lr
90010af2:	bf00      	nop
90010af4:	24039200 	.word	0x24039200

90010af8 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
90010af8:	4b05      	ldr	r3, [pc, #20]	; (90010b10 <xTaskGetSchedulerState+0x18>)
90010afa:	681b      	ldr	r3, [r3, #0]
90010afc:	b133      	cbz	r3, 90010b0c <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
90010afe:	4b05      	ldr	r3, [pc, #20]	; (90010b14 <xTaskGetSchedulerState+0x1c>)
90010b00:	6818      	ldr	r0, [r3, #0]
90010b02:	fab0 f080 	clz	r0, r0
90010b06:	0940      	lsrs	r0, r0, #5
90010b08:	0040      	lsls	r0, r0, #1
90010b0a:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
90010b0c:	2001      	movs	r0, #1
	}
90010b0e:	4770      	bx	lr
90010b10:	240396c8 	.word	0x240396c8
90010b14:	24039674 	.word	0x24039674

90010b18 <xTaskPriorityInherit>:
	{
90010b18:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
90010b1a:	4604      	mov	r4, r0
	{
90010b1c:	b082      	sub	sp, #8
		if( pxMutexHolder != NULL )
90010b1e:	b1c8      	cbz	r0, 90010b54 <xTaskPriorityInherit+0x3c>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
90010b20:	4d1d      	ldr	r5, [pc, #116]	; (90010b98 <xTaskPriorityInherit+0x80>)
90010b22:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
90010b24:	682a      	ldr	r2, [r5, #0]
90010b26:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
90010b28:	4293      	cmp	r3, r2
90010b2a:	d215      	bcs.n	90010b58 <xTaskPriorityInherit+0x40>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
90010b2c:	6982      	ldr	r2, [r0, #24]
90010b2e:	2a00      	cmp	r2, #0
90010b30:	db04      	blt.n	90010b3c <xTaskPriorityInherit+0x24>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90010b32:	682a      	ldr	r2, [r5, #0]
90010b34:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
90010b36:	f1c2 0238 	rsb	r2, r2, #56	; 0x38
90010b3a:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
90010b3c:	4e17      	ldr	r6, [pc, #92]	; (90010b9c <xTaskPriorityInherit+0x84>)
90010b3e:	eb03 0383 	add.w	r3, r3, r3, lsl #2
90010b42:	6962      	ldr	r2, [r4, #20]
90010b44:	eb06 0383 	add.w	r3, r6, r3, lsl #2
90010b48:	429a      	cmp	r2, r3
90010b4a:	d00e      	beq.n	90010b6a <xTaskPriorityInherit+0x52>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
90010b4c:	682b      	ldr	r3, [r5, #0]
				xReturn = pdTRUE;
90010b4e:	2001      	movs	r0, #1
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
90010b50:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90010b52:	62e3      	str	r3, [r4, #44]	; 0x2c
	}
90010b54:	b002      	add	sp, #8
90010b56:	bd70      	pop	{r4, r5, r6, pc}
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
90010b58:	682b      	ldr	r3, [r5, #0]
90010b5a:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
90010b5c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90010b5e:	4298      	cmp	r0, r3
90010b60:	bf2c      	ite	cs
90010b62:	2000      	movcs	r0, #0
90010b64:	2001      	movcc	r0, #1
	}
90010b66:	b002      	add	sp, #8
90010b68:	bd70      	pop	{r4, r5, r6, pc}
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90010b6a:	1d21      	adds	r1, r4, #4
90010b6c:	4608      	mov	r0, r1
90010b6e:	9101      	str	r1, [sp, #4]
90010b70:	f7fd fee0 	bl	9000e934 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
90010b74:	682a      	ldr	r2, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
90010b76:	4b0a      	ldr	r3, [pc, #40]	; (90010ba0 <xTaskPriorityInherit+0x88>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
90010b78:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
90010b7a:	681a      	ldr	r2, [r3, #0]
90010b7c:	9901      	ldr	r1, [sp, #4]
90010b7e:	4290      	cmp	r0, r2
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
90010b80:	62e0      	str	r0, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
90010b82:	d900      	bls.n	90010b86 <xTaskPriorityInherit+0x6e>
90010b84:	6018      	str	r0, [r3, #0]
90010b86:	eb00 0080 	add.w	r0, r0, r0, lsl #2
90010b8a:	eb06 0080 	add.w	r0, r6, r0, lsl #2
90010b8e:	f7fd fea9 	bl	9000e8e4 <vListInsertEnd>
				xReturn = pdTRUE;
90010b92:	2001      	movs	r0, #1
90010b94:	e7de      	b.n	90010b54 <xTaskPriorityInherit+0x3c>
90010b96:	bf00      	nop
90010b98:	24039200 	.word	0x24039200
90010b9c:	2403920c 	.word	0x2403920c
90010ba0:	2403967c 	.word	0x2403967c

90010ba4 <xTaskPriorityDisinherit>:
		if( pxMutexHolder != NULL )
90010ba4:	b318      	cbz	r0, 90010bee <xTaskPriorityDisinherit+0x4a>
			configASSERT( pxTCB == pxCurrentTCB );
90010ba6:	4b1f      	ldr	r3, [pc, #124]	; (90010c24 <xTaskPriorityDisinherit+0x80>)
	{
90010ba8:	b510      	push	{r4, lr}
			configASSERT( pxTCB == pxCurrentTCB );
90010baa:	681c      	ldr	r4, [r3, #0]
	{
90010bac:	b082      	sub	sp, #8
			configASSERT( pxTCB == pxCurrentTCB );
90010bae:	4284      	cmp	r4, r0
90010bb0:	d008      	beq.n	90010bc4 <xTaskPriorityDisinherit+0x20>
90010bb2:	f04f 0350 	mov.w	r3, #80	; 0x50
90010bb6:	f383 8811 	msr	BASEPRI, r3
90010bba:	f3bf 8f6f 	isb	sy
90010bbe:	f3bf 8f4f 	dsb	sy
90010bc2:	e7fe      	b.n	90010bc2 <xTaskPriorityDisinherit+0x1e>
			configASSERT( pxTCB->uxMutexesHeld );
90010bc4:	6d23      	ldr	r3, [r4, #80]	; 0x50
90010bc6:	b14b      	cbz	r3, 90010bdc <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
90010bc8:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
			( pxTCB->uxMutexesHeld )--;
90010bca:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
90010bcc:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
90010bce:	6523      	str	r3, [r4, #80]	; 0x50
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
90010bd0:	4291      	cmp	r1, r2
90010bd2:	d000      	beq.n	90010bd6 <xTaskPriorityDisinherit+0x32>
90010bd4:	b16b      	cbz	r3, 90010bf2 <xTaskPriorityDisinherit+0x4e>
	BaseType_t xReturn = pdFALSE;
90010bd6:	2000      	movs	r0, #0
	}
90010bd8:	b002      	add	sp, #8
90010bda:	bd10      	pop	{r4, pc}
90010bdc:	f04f 0350 	mov.w	r3, #80	; 0x50
90010be0:	f383 8811 	msr	BASEPRI, r3
90010be4:	f3bf 8f6f 	isb	sy
90010be8:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
90010bec:	e7fe      	b.n	90010bec <xTaskPriorityDisinherit+0x48>
	BaseType_t xReturn = pdFALSE;
90010bee:	2000      	movs	r0, #0
	}
90010bf0:	4770      	bx	lr
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90010bf2:	1d21      	adds	r1, r4, #4
90010bf4:	4608      	mov	r0, r1
90010bf6:	9101      	str	r1, [sp, #4]
90010bf8:	f7fd fe9c 	bl	9000e934 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
90010bfc:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
90010bfe:	4b0a      	ldr	r3, [pc, #40]	; (90010c28 <xTaskPriorityDisinherit+0x84>)
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90010c00:	f1c0 0238 	rsb	r2, r0, #56	; 0x38
					prvAddTaskToReadyList( pxTCB );
90010c04:	9901      	ldr	r1, [sp, #4]
					pxTCB->uxPriority = pxTCB->uxBasePriority;
90010c06:	62e0      	str	r0, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90010c08:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
90010c0a:	681a      	ldr	r2, [r3, #0]
90010c0c:	4290      	cmp	r0, r2
90010c0e:	d900      	bls.n	90010c12 <xTaskPriorityDisinherit+0x6e>
90010c10:	6018      	str	r0, [r3, #0]
90010c12:	4b06      	ldr	r3, [pc, #24]	; (90010c2c <xTaskPriorityDisinherit+0x88>)
90010c14:	eb00 0080 	add.w	r0, r0, r0, lsl #2
90010c18:	eb03 0080 	add.w	r0, r3, r0, lsl #2
90010c1c:	f7fd fe62 	bl	9000e8e4 <vListInsertEnd>
					xReturn = pdTRUE;
90010c20:	2001      	movs	r0, #1
		return xReturn;
90010c22:	e7d9      	b.n	90010bd8 <xTaskPriorityDisinherit+0x34>
90010c24:	24039200 	.word	0x24039200
90010c28:	2403967c 	.word	0x2403967c
90010c2c:	2403920c 	.word	0x2403920c

90010c30 <vTaskPriorityDisinheritAfterTimeout>:
		if( pxMutexHolder != NULL )
90010c30:	2800      	cmp	r0, #0
90010c32:	d040      	beq.n	90010cb6 <vTaskPriorityDisinheritAfterTimeout+0x86>
			configASSERT( pxTCB->uxMutexesHeld );
90010c34:	6d03      	ldr	r3, [r0, #80]	; 0x50
	{
90010c36:	b530      	push	{r4, r5, lr}
90010c38:	4604      	mov	r4, r0
90010c3a:	b083      	sub	sp, #12
			configASSERT( pxTCB->uxMutexesHeld );
90010c3c:	b153      	cbz	r3, 90010c54 <vTaskPriorityDisinheritAfterTimeout+0x24>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
90010c3e:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
			if( pxTCB->uxPriority != uxPriorityToUse )
90010c40:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
90010c42:	4281      	cmp	r1, r0
90010c44:	bf38      	it	cc
90010c46:	4601      	movcc	r1, r0
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
90010c48:	2b01      	cmp	r3, #1
90010c4a:	d101      	bne.n	90010c50 <vTaskPriorityDisinheritAfterTimeout+0x20>
90010c4c:	428a      	cmp	r2, r1
90010c4e:	d10a      	bne.n	90010c66 <vTaskPriorityDisinheritAfterTimeout+0x36>
	}
90010c50:	b003      	add	sp, #12
90010c52:	bd30      	pop	{r4, r5, pc}
90010c54:	f04f 0350 	mov.w	r3, #80	; 0x50
90010c58:	f383 8811 	msr	BASEPRI, r3
90010c5c:	f3bf 8f6f 	isb	sy
90010c60:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
90010c64:	e7fe      	b.n	90010c64 <vTaskPriorityDisinheritAfterTimeout+0x34>
					configASSERT( pxTCB != pxCurrentTCB );
90010c66:	4b19      	ldr	r3, [pc, #100]	; (90010ccc <vTaskPriorityDisinheritAfterTimeout+0x9c>)
90010c68:	681b      	ldr	r3, [r3, #0]
90010c6a:	42a3      	cmp	r3, r4
90010c6c:	d024      	beq.n	90010cb8 <vTaskPriorityDisinheritAfterTimeout+0x88>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
90010c6e:	69a3      	ldr	r3, [r4, #24]
					pxTCB->uxPriority = uxPriorityToUse;
90010c70:	62e1      	str	r1, [r4, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
90010c72:	2b00      	cmp	r3, #0
90010c74:	db02      	blt.n	90010c7c <vTaskPriorityDisinheritAfterTimeout+0x4c>
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90010c76:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
90010c7a:	61a1      	str	r1, [r4, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
90010c7c:	4d14      	ldr	r5, [pc, #80]	; (90010cd0 <vTaskPriorityDisinheritAfterTimeout+0xa0>)
90010c7e:	eb02 0282 	add.w	r2, r2, r2, lsl #2
90010c82:	6961      	ldr	r1, [r4, #20]
90010c84:	eb05 0382 	add.w	r3, r5, r2, lsl #2
90010c88:	4299      	cmp	r1, r3
90010c8a:	d1e1      	bne.n	90010c50 <vTaskPriorityDisinheritAfterTimeout+0x20>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90010c8c:	1d21      	adds	r1, r4, #4
90010c8e:	4608      	mov	r0, r1
90010c90:	9101      	str	r1, [sp, #4]
90010c92:	f7fd fe4f 	bl	9000e934 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
90010c96:	4b0f      	ldr	r3, [pc, #60]	; (90010cd4 <vTaskPriorityDisinheritAfterTimeout+0xa4>)
90010c98:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
90010c9a:	681a      	ldr	r2, [r3, #0]
90010c9c:	9901      	ldr	r1, [sp, #4]
90010c9e:	4290      	cmp	r0, r2
90010ca0:	d900      	bls.n	90010ca4 <vTaskPriorityDisinheritAfterTimeout+0x74>
90010ca2:	6018      	str	r0, [r3, #0]
90010ca4:	eb00 0080 	add.w	r0, r0, r0, lsl #2
90010ca8:	eb05 0080 	add.w	r0, r5, r0, lsl #2
	}
90010cac:	b003      	add	sp, #12
90010cae:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
90010cb2:	f7fd be17 	b.w	9000e8e4 <vListInsertEnd>
90010cb6:	4770      	bx	lr
90010cb8:	f04f 0350 	mov.w	r3, #80	; 0x50
90010cbc:	f383 8811 	msr	BASEPRI, r3
90010cc0:	f3bf 8f6f 	isb	sy
90010cc4:	f3bf 8f4f 	dsb	sy
					configASSERT( pxTCB != pxCurrentTCB );
90010cc8:	e7fe      	b.n	90010cc8 <vTaskPriorityDisinheritAfterTimeout+0x98>
90010cca:	bf00      	nop
90010ccc:	24039200 	.word	0x24039200
90010cd0:	2403920c 	.word	0x2403920c
90010cd4:	2403967c 	.word	0x2403967c

90010cd8 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
90010cd8:	4b04      	ldr	r3, [pc, #16]	; (90010cec <pvTaskIncrementMutexHeldCount+0x14>)
90010cda:	681a      	ldr	r2, [r3, #0]
90010cdc:	b11a      	cbz	r2, 90010ce6 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
90010cde:	6819      	ldr	r1, [r3, #0]
90010ce0:	6d0a      	ldr	r2, [r1, #80]	; 0x50
90010ce2:	3201      	adds	r2, #1
90010ce4:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
90010ce6:	6818      	ldr	r0, [r3, #0]
	}
90010ce8:	4770      	bx	lr
90010cea:	bf00      	nop
90010cec:	24039200 	.word	0x24039200

90010cf0 <prvSwitchTimerLists>:
	}
}
/*-----------------------------------------------------------*/

static void prvSwitchTimerLists( void )
{
90010cf0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90010cf4:	4e22      	ldr	r6, [pc, #136]	; (90010d80 <prvSwitchTimerLists+0x90>)
90010cf6:	b085      	sub	sp, #20
	if( xTimerQueue != NULL )
90010cf8:	f8df 908c 	ldr.w	r9, [pc, #140]	; 90010d88 <prvSwitchTimerLists+0x98>
		xMessage.xMessageID = xCommandID;
90010cfc:	f04f 0800 	mov.w	r8, #0

	/* The tick count has overflowed.  The timer lists must be switched.
	If there are any timers still referenced from the current timer list
	then they must have expired and should be processed before the lists
	are switched. */
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
90010d00:	e00d      	b.n	90010d1e <prvSwitchTimerLists+0x2e>
	{
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
90010d02:	68db      	ldr	r3, [r3, #12]

		/* Remove the timer from the list. */
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90010d04:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
90010d06:	681f      	ldr	r7, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
90010d08:	1d25      	adds	r5, r4, #4
90010d0a:	4628      	mov	r0, r5
90010d0c:	f7fd fe12 	bl	9000e934 <uxListRemove>
		traceTIMER_EXPIRED( pxTimer );

		/* Execute its callback, then send a command to restart the timer if
		it is an auto-reload timer.  It cannot be restarted here as the lists
		have not yet been switched. */
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
90010d10:	6a23      	ldr	r3, [r4, #32]
90010d12:	4620      	mov	r0, r4
90010d14:	4798      	blx	r3

		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
90010d16:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
90010d1a:	075b      	lsls	r3, r3, #29
90010d1c:	d40a      	bmi.n	90010d34 <prvSwitchTimerLists+0x44>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
90010d1e:	6833      	ldr	r3, [r6, #0]
90010d20:	681a      	ldr	r2, [r3, #0]
90010d22:	2a00      	cmp	r2, #0
90010d24:	d1ed      	bne.n	90010d02 <prvSwitchTimerLists+0x12>
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxTemp = pxCurrentTimerList;
	pxCurrentTimerList = pxOverflowTimerList;
90010d26:	4a17      	ldr	r2, [pc, #92]	; (90010d84 <prvSwitchTimerLists+0x94>)
90010d28:	6811      	ldr	r1, [r2, #0]
	pxOverflowTimerList = pxTemp;
90010d2a:	6013      	str	r3, [r2, #0]
	pxCurrentTimerList = pxOverflowTimerList;
90010d2c:	6031      	str	r1, [r6, #0]
}
90010d2e:	b005      	add	sp, #20
90010d30:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
90010d34:	69a3      	ldr	r3, [r4, #24]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
90010d36:	4629      	mov	r1, r5
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
90010d38:	443b      	add	r3, r7
			if( xReloadTime > xNextExpireTime )
90010d3a:	429f      	cmp	r7, r3
90010d3c:	d205      	bcs.n	90010d4a <prvSwitchTimerLists+0x5a>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
90010d3e:	6830      	ldr	r0, [r6, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
90010d40:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
90010d42:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
90010d44:	f7fd fdde 	bl	9000e904 <vListInsert>
90010d48:	e7e9      	b.n	90010d1e <prvSwitchTimerLists+0x2e>
	if( xTimerQueue != NULL )
90010d4a:	f8d9 3000 	ldr.w	r3, [r9]
90010d4e:	b16b      	cbz	r3, 90010d6c <prvSwitchTimerLists+0x7c>
		xMessage.u.xTimerParameters.pxTimer = xTimer;
90010d50:	9402      	str	r4, [sp, #8]
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
90010d52:	e9cd 8700 	strd	r8, r7, [sp]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
90010d56:	f7ff fecf 	bl	90010af8 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
90010d5a:	2300      	movs	r3, #0
90010d5c:	4669      	mov	r1, sp
90010d5e:	f8d9 0000 	ldr.w	r0, [r9]
90010d62:	461a      	mov	r2, r3
90010d64:	f7fe f95e 	bl	9000f024 <xQueueGenericSend>
				configASSERT( xResult );
90010d68:	2800      	cmp	r0, #0
90010d6a:	d1d8      	bne.n	90010d1e <prvSwitchTimerLists+0x2e>
90010d6c:	f04f 0350 	mov.w	r3, #80	; 0x50
90010d70:	f383 8811 	msr	BASEPRI, r3
90010d74:	f3bf 8f6f 	isb	sy
90010d78:	f3bf 8f4f 	dsb	sy
90010d7c:	e7fe      	b.n	90010d7c <prvSwitchTimerLists+0x8c>
90010d7e:	bf00      	nop
90010d80:	240396fc 	.word	0x240396fc
90010d84:	24039700 	.word	0x24039700
90010d88:	24039820 	.word	0x24039820

90010d8c <prvTimerTask>:
{
90010d8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90010d90:	4e9f      	ldr	r6, [pc, #636]	; (90011010 <prvTimerTask+0x284>)
90010d92:	b089      	sub	sp, #36	; 0x24
90010d94:	4d9f      	ldr	r5, [pc, #636]	; (90011014 <prvTimerTask+0x288>)
					portYIELD_WITHIN_API();
90010d96:	f04f 29e0 	mov.w	r9, #3758153728	; 0xe000e000
90010d9a:	4c9f      	ldr	r4, [pc, #636]	; (90011018 <prvTimerTask+0x28c>)
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
90010d9c:	6833      	ldr	r3, [r6, #0]
90010d9e:	681f      	ldr	r7, [r3, #0]
90010da0:	2f00      	cmp	r7, #0
90010da2:	f000 80b2 	beq.w	90010f0a <prvTimerTask+0x17e>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
90010da6:	68db      	ldr	r3, [r3, #12]
90010da8:	681f      	ldr	r7, [r3, #0]
	vTaskSuspendAll();
90010daa:	f7ff fccf 	bl	9001074c <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
90010dae:	f7ff fce5 	bl	9001077c <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
90010db2:	682a      	ldr	r2, [r5, #0]
	xTimeNow = xTaskGetTickCount();
90010db4:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
90010db6:	4290      	cmp	r0, r2
90010db8:	f0c0 80af 	bcc.w	90010f1a <prvTimerTask+0x18e>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
90010dbc:	4287      	cmp	r7, r0
	xLastTime = xTimeNow;
90010dbe:	6028      	str	r0, [r5, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
90010dc0:	f200 80d0 	bhi.w	90010f64 <prvTimerTask+0x1d8>
				( void ) xTaskResumeAll();
90010dc4:	f7ff fcca 	bl	9001075c <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90010dc8:	6832      	ldr	r2, [r6, #0]
90010dca:	68d2      	ldr	r2, [r2, #12]
90010dcc:	f8d2 b00c 	ldr.w	fp, [r2, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
90010dd0:	f10b 0804 	add.w	r8, fp, #4
90010dd4:	4640      	mov	r0, r8
90010dd6:	f7fd fdad 	bl	9000e934 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
90010dda:	f89b 0028 	ldrb.w	r0, [fp, #40]	; 0x28
90010dde:	0741      	lsls	r1, r0, #29
90010de0:	f100 80d0 	bmi.w	90010f84 <prvTimerTask+0x1f8>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
90010de4:	f020 0001 	bic.w	r0, r0, #1
90010de8:	f88b 0028 	strb.w	r0, [fp, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
90010dec:	f8db 3020 	ldr.w	r3, [fp, #32]
90010df0:	4658      	mov	r0, fp
90010df2:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
90010df4:	2200      	movs	r2, #0
90010df6:	4669      	mov	r1, sp
90010df8:	6820      	ldr	r0, [r4, #0]
90010dfa:	f7fe fbff 	bl	9000f5fc <xQueueReceive>
90010dfe:	2800      	cmp	r0, #0
90010e00:	d0cc      	beq.n	90010d9c <prvTimerTask+0x10>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
90010e02:	9b00      	ldr	r3, [sp, #0]
90010e04:	2b00      	cmp	r3, #0
90010e06:	db77      	blt.n	90010ef8 <prvTimerTask+0x16c>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
90010e08:	9f02      	ldr	r7, [sp, #8]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
90010e0a:	697b      	ldr	r3, [r7, #20]
90010e0c:	b113      	cbz	r3, 90010e14 <prvTimerTask+0x88>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
90010e0e:	1d38      	adds	r0, r7, #4
90010e10:	f7fd fd90 	bl	9000e934 <uxListRemove>
	xTimeNow = xTaskGetTickCount();
90010e14:	f7ff fcb2 	bl	9001077c <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
90010e18:	682b      	ldr	r3, [r5, #0]
	xTimeNow = xTaskGetTickCount();
90010e1a:	4680      	mov	r8, r0
	if( xTimeNow < xLastTime )
90010e1c:	4298      	cmp	r0, r3
90010e1e:	f0c0 8083 	bcc.w	90010f28 <prvTimerTask+0x19c>
			switch( xMessage.xMessageID )
90010e22:	9b00      	ldr	r3, [sp, #0]
	xLastTime = xTimeNow;
90010e24:	f8c5 8000 	str.w	r8, [r5]
			switch( xMessage.xMessageID )
90010e28:	2b09      	cmp	r3, #9
90010e2a:	d8e3      	bhi.n	90010df4 <prvTimerTask+0x68>
90010e2c:	e8df f003 	tbb	[pc, r3]
90010e30:	54050505 	.word	0x54050505
90010e34:	05055b3e 	.word	0x05055b3e
90010e38:	3e54      	.short	0x3e54
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
90010e3a:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
90010e3e:	69ba      	ldr	r2, [r7, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
90010e40:	f043 0301 	orr.w	r3, r3, #1
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
90010e44:	613f      	str	r7, [r7, #16]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
90010e46:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
90010e4a:	9b01      	ldr	r3, [sp, #4]
90010e4c:	1899      	adds	r1, r3, r2
90010e4e:	bf2c      	ite	cs
90010e50:	2001      	movcs	r0, #1
90010e52:	2000      	movcc	r0, #0
	if( xNextExpiryTime <= xTimeNow )
90010e54:	4541      	cmp	r1, r8
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
90010e56:	6079      	str	r1, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
90010e58:	f200 8086 	bhi.w	90010f68 <prvTimerTask+0x1dc>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90010e5c:	eba8 0303 	sub.w	r3, r8, r3
90010e60:	429a      	cmp	r2, r3
90010e62:	f200 80c0 	bhi.w	90010fe6 <prvTimerTask+0x25a>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
90010e66:	6a3b      	ldr	r3, [r7, #32]
90010e68:	4638      	mov	r0, r7
90010e6a:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
90010e6c:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
90010e70:	075b      	lsls	r3, r3, #29
90010e72:	d5bf      	bpl.n	90010df4 <prvTimerTask+0x68>
	if( xTimerQueue != NULL )
90010e74:	6822      	ldr	r2, [r4, #0]
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
90010e76:	9901      	ldr	r1, [sp, #4]
90010e78:	69bb      	ldr	r3, [r7, #24]
	if( xTimerQueue != NULL )
90010e7a:	b172      	cbz	r2, 90010e9a <prvTimerTask+0x10e>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
90010e7c:	440b      	add	r3, r1
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
90010e7e:	e9cd 3705 	strd	r3, r7, [sp, #20]
		xMessage.xMessageID = xCommandID;
90010e82:	2300      	movs	r3, #0
90010e84:	9304      	str	r3, [sp, #16]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
90010e86:	f7ff fe37 	bl	90010af8 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
90010e8a:	2300      	movs	r3, #0
90010e8c:	a904      	add	r1, sp, #16
90010e8e:	6820      	ldr	r0, [r4, #0]
90010e90:	461a      	mov	r2, r3
90010e92:	f7fe f8c7 	bl	9000f024 <xQueueGenericSend>
							configASSERT( xResult );
90010e96:	2800      	cmp	r0, #0
90010e98:	d1ac      	bne.n	90010df4 <prvTimerTask+0x68>
90010e9a:	f04f 0350 	mov.w	r3, #80	; 0x50
90010e9e:	f383 8811 	msr	BASEPRI, r3
90010ea2:	f3bf 8f6f 	isb	sy
90010ea6:	f3bf 8f4f 	dsb	sy
90010eaa:	e7fe      	b.n	90010eaa <prvTimerTask+0x11e>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
90010eac:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
90010eb0:	f043 0301 	orr.w	r3, r3, #1
90010eb4:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
90010eb8:	9b01      	ldr	r3, [sp, #4]
90010eba:	61bb      	str	r3, [r7, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
90010ebc:	2b00      	cmp	r3, #0
90010ebe:	f000 809e 	beq.w	90010ffe <prvTimerTask+0x272>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
90010ec2:	4443      	add	r3, r8
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
90010ec4:	1d39      	adds	r1, r7, #4
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
90010ec6:	613f      	str	r7, [r7, #16]
	if( xNextExpiryTime <= xTimeNow )
90010ec8:	4543      	cmp	r3, r8
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
90010eca:	607b      	str	r3, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
90010ecc:	d856      	bhi.n	90010f7c <prvTimerTask+0x1f0>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
90010ece:	4b53      	ldr	r3, [pc, #332]	; (9001101c <prvTimerTask+0x290>)
90010ed0:	6818      	ldr	r0, [r3, #0]
90010ed2:	f7fd fd17 	bl	9000e904 <vListInsert>
	return xProcessTimerNow;
90010ed6:	e78d      	b.n	90010df4 <prvTimerTask+0x68>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
90010ed8:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
90010edc:	f023 0301 	bic.w	r3, r3, #1
90010ee0:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					break;
90010ee4:	e786      	b.n	90010df4 <prvTimerTask+0x68>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
90010ee6:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
90010eea:	079a      	lsls	r2, r3, #30
90010eec:	d572      	bpl.n	90010fd4 <prvTimerTask+0x248>
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
90010eee:	f023 0301 	bic.w	r3, r3, #1
90010ef2:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
90010ef6:	e77d      	b.n	90010df4 <prvTimerTask+0x68>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
90010ef8:	9b01      	ldr	r3, [sp, #4]
90010efa:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
90010efe:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
90010f00:	9b00      	ldr	r3, [sp, #0]
90010f02:	2b00      	cmp	r3, #0
90010f04:	f6ff af76 	blt.w	90010df4 <prvTimerTask+0x68>
90010f08:	e77e      	b.n	90010e08 <prvTimerTask+0x7c>
	vTaskSuspendAll();
90010f0a:	f7ff fc1f 	bl	9001074c <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
90010f0e:	f7ff fc35 	bl	9001077c <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
90010f12:	682a      	ldr	r2, [r5, #0]
	xTimeNow = xTaskGetTickCount();
90010f14:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
90010f16:	4282      	cmp	r2, r0
90010f18:	d909      	bls.n	90010f2e <prvTimerTask+0x1a2>
		prvSwitchTimerLists();
90010f1a:	f7ff fee9 	bl	90010cf0 <prvSwitchTimerLists>
	xLastTime = xTimeNow;
90010f1e:	f8c5 a000 	str.w	sl, [r5]
			( void ) xTaskResumeAll();
90010f22:	f7ff fc1b 	bl	9001075c <xTaskResumeAll>
90010f26:	e765      	b.n	90010df4 <prvTimerTask+0x68>
		prvSwitchTimerLists();
90010f28:	f7ff fee2 	bl	90010cf0 <prvSwitchTimerLists>
		*pxTimerListsWereSwitched = pdTRUE;
90010f2c:	e779      	b.n	90010e22 <prvTimerTask+0x96>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
90010f2e:	4b3b      	ldr	r3, [pc, #236]	; (9001101c <prvTimerTask+0x290>)
	xLastTime = xTimeNow;
90010f30:	f8c5 a000 	str.w	sl, [r5]
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
90010f34:	681a      	ldr	r2, [r3, #0]
90010f36:	6812      	ldr	r2, [r2, #0]
90010f38:	fab2 f282 	clz	r2, r2
90010f3c:	0952      	lsrs	r2, r2, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
90010f3e:	eba7 010a 	sub.w	r1, r7, sl
90010f42:	6820      	ldr	r0, [r4, #0]
90010f44:	f7fe ff4e 	bl	9000fde4 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
90010f48:	f7ff fc08 	bl	9001075c <xTaskResumeAll>
90010f4c:	2800      	cmp	r0, #0
90010f4e:	f47f af51 	bne.w	90010df4 <prvTimerTask+0x68>
					portYIELD_WITHIN_API();
90010f52:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
90010f56:	f8c9 3d04 	str.w	r3, [r9, #3332]	; 0xd04
90010f5a:	f3bf 8f4f 	dsb	sy
90010f5e:	f3bf 8f6f 	isb	sy
90010f62:	e747      	b.n	90010df4 <prvTimerTask+0x68>
90010f64:	2200      	movs	r2, #0
90010f66:	e7ea      	b.n	90010f3e <prvTimerTask+0x1b2>
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
90010f68:	4543      	cmp	r3, r8
90010f6a:	d902      	bls.n	90010f72 <prvTimerTask+0x1e6>
90010f6c:	2800      	cmp	r0, #0
90010f6e:	f43f af7a 	beq.w	90010e66 <prvTimerTask+0xda>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
90010f72:	1d39      	adds	r1, r7, #4
90010f74:	6830      	ldr	r0, [r6, #0]
90010f76:	f7fd fcc5 	bl	9000e904 <vListInsert>
	return xProcessTimerNow;
90010f7a:	e73b      	b.n	90010df4 <prvTimerTask+0x68>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
90010f7c:	6830      	ldr	r0, [r6, #0]
90010f7e:	f7fd fcc1 	bl	9000e904 <vListInsert>
90010f82:	e737      	b.n	90010df4 <prvTimerTask+0x68>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
90010f84:	f8db 2018 	ldr.w	r2, [fp, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
90010f88:	f8cb b010 	str.w	fp, [fp, #16]
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
90010f8c:	18b8      	adds	r0, r7, r2
	if( xNextExpiryTime <= xTimeNow )
90010f8e:	4582      	cmp	sl, r0
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
90010f90:	f8cb 0004 	str.w	r0, [fp, #4]
	if( xNextExpiryTime <= xTimeNow )
90010f94:	d322      	bcc.n	90010fdc <prvTimerTask+0x250>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90010f96:	ebaa 0307 	sub.w	r3, sl, r7
90010f9a:	429a      	cmp	r2, r3
90010f9c:	d829      	bhi.n	90010ff2 <prvTimerTask+0x266>
	if( xTimerQueue != NULL )
90010f9e:	6823      	ldr	r3, [r4, #0]
90010fa0:	b17b      	cbz	r3, 90010fc2 <prvTimerTask+0x236>
		xMessage.xMessageID = xCommandID;
90010fa2:	2300      	movs	r3, #0
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
90010fa4:	9705      	str	r7, [sp, #20]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
90010fa6:	f8cd b018 	str.w	fp, [sp, #24]
		xMessage.xMessageID = xCommandID;
90010faa:	9304      	str	r3, [sp, #16]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
90010fac:	f7ff fda4 	bl	90010af8 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
90010fb0:	2300      	movs	r3, #0
90010fb2:	a904      	add	r1, sp, #16
90010fb4:	6820      	ldr	r0, [r4, #0]
90010fb6:	461a      	mov	r2, r3
90010fb8:	f7fe f834 	bl	9000f024 <xQueueGenericSend>
			configASSERT( xResult );
90010fbc:	2800      	cmp	r0, #0
90010fbe:	f47f af15 	bne.w	90010dec <prvTimerTask+0x60>
90010fc2:	f04f 0350 	mov.w	r3, #80	; 0x50
90010fc6:	f383 8811 	msr	BASEPRI, r3
90010fca:	f3bf 8f6f 	isb	sy
90010fce:	f3bf 8f4f 	dsb	sy
90010fd2:	e7fe      	b.n	90010fd2 <prvTimerTask+0x246>
							vPortFree( pxTimer );
90010fd4:	4638      	mov	r0, r7
90010fd6:	f7fd fc11 	bl	9000e7fc <vPortFree>
90010fda:	e70b      	b.n	90010df4 <prvTimerTask+0x68>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
90010fdc:	4641      	mov	r1, r8
90010fde:	6830      	ldr	r0, [r6, #0]
90010fe0:	f7fd fc90 	bl	9000e904 <vListInsert>
	return xProcessTimerNow;
90010fe4:	e702      	b.n	90010dec <prvTimerTask+0x60>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
90010fe6:	4b0d      	ldr	r3, [pc, #52]	; (9001101c <prvTimerTask+0x290>)
90010fe8:	1d39      	adds	r1, r7, #4
90010fea:	6818      	ldr	r0, [r3, #0]
90010fec:	f7fd fc8a 	bl	9000e904 <vListInsert>
	return xProcessTimerNow;
90010ff0:	e700      	b.n	90010df4 <prvTimerTask+0x68>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
90010ff2:	4b0a      	ldr	r3, [pc, #40]	; (9001101c <prvTimerTask+0x290>)
90010ff4:	4641      	mov	r1, r8
90010ff6:	6818      	ldr	r0, [r3, #0]
90010ff8:	f7fd fc84 	bl	9000e904 <vListInsert>
	return xProcessTimerNow;
90010ffc:	e6f6      	b.n	90010dec <prvTimerTask+0x60>
90010ffe:	f04f 0350 	mov.w	r3, #80	; 0x50
90011002:	f383 8811 	msr	BASEPRI, r3
90011006:	f3bf 8f6f 	isb	sy
9001100a:	f3bf 8f4f 	dsb	sy
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
9001100e:	e7fe      	b.n	9001100e <prvTimerTask+0x282>
90011010:	240396fc 	.word	0x240396fc
90011014:	240397cc 	.word	0x240397cc
90011018:	24039820 	.word	0x24039820
9001101c:	24039700 	.word	0x24039700

90011020 <xTimerCreateTimerTask>:
{
90011020:	b5f0      	push	{r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
90011022:	4c23      	ldr	r4, [pc, #140]	; (900110b0 <xTimerCreateTimerTask+0x90>)
{
90011024:	b089      	sub	sp, #36	; 0x24
	taskENTER_CRITICAL();
90011026:	f7fd fd05 	bl	9000ea34 <vPortEnterCritical>
		if( xTimerQueue == NULL )
9001102a:	6825      	ldr	r5, [r4, #0]
9001102c:	b335      	cbz	r5, 9001107c <xTimerCreateTimerTask+0x5c>
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
9001102e:	f7fd fd23 	bl	9000ea78 <vPortExitCritical>
	if( xTimerQueue != NULL )
90011032:	6823      	ldr	r3, [r4, #0]
90011034:	b1cb      	cbz	r3, 9001106a <xTimerCreateTimerTask+0x4a>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
90011036:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
90011038:	aa07      	add	r2, sp, #28
9001103a:	a906      	add	r1, sp, #24
9001103c:	a805      	add	r0, sp, #20
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
9001103e:	2502      	movs	r5, #2
			StackType_t *pxTimerTaskStackBuffer = NULL;
90011040:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
90011044:	f7fd fb0c 	bl	9000e660 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
90011048:	4623      	mov	r3, r4
9001104a:	9a07      	ldr	r2, [sp, #28]
9001104c:	9500      	str	r5, [sp, #0]
9001104e:	e9dd 0105 	ldrd	r0, r1, [sp, #20]
90011052:	e9cd 1001 	strd	r1, r0, [sp, #4]
90011056:	4917      	ldr	r1, [pc, #92]	; (900110b4 <xTimerCreateTimerTask+0x94>)
90011058:	4817      	ldr	r0, [pc, #92]	; (900110b8 <xTimerCreateTimerTask+0x98>)
9001105a:	f7ff f93f 	bl	900102dc <xTaskCreateStatic>
9001105e:	4b17      	ldr	r3, [pc, #92]	; (900110bc <xTimerCreateTimerTask+0x9c>)
90011060:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
90011062:	b110      	cbz	r0, 9001106a <xTimerCreateTimerTask+0x4a>
}
90011064:	2001      	movs	r0, #1
90011066:	b009      	add	sp, #36	; 0x24
90011068:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001106a:	f04f 0350 	mov.w	r3, #80	; 0x50
9001106e:	f383 8811 	msr	BASEPRI, r3
90011072:	f3bf 8f6f 	isb	sy
90011076:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
9001107a:	e7fe      	b.n	9001107a <xTimerCreateTimerTask+0x5a>
			vListInitialise( &xActiveTimerList1 );
9001107c:	4f10      	ldr	r7, [pc, #64]	; (900110c0 <xTimerCreateTimerTask+0xa0>)
			vListInitialise( &xActiveTimerList2 );
9001107e:	4e11      	ldr	r6, [pc, #68]	; (900110c4 <xTimerCreateTimerTask+0xa4>)
			vListInitialise( &xActiveTimerList1 );
90011080:	4638      	mov	r0, r7
90011082:	f7fd fc1f 	bl	9000e8c4 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
90011086:	4630      	mov	r0, r6
90011088:	f7fd fc1c 	bl	9000e8c4 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
9001108c:	4a0e      	ldr	r2, [pc, #56]	; (900110c8 <xTimerCreateTimerTask+0xa8>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
9001108e:	9500      	str	r5, [sp, #0]
90011090:	2110      	movs	r1, #16
			pxCurrentTimerList = &xActiveTimerList1;
90011092:	6017      	str	r7, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
90011094:	200a      	movs	r0, #10
			pxOverflowTimerList = &xActiveTimerList2;
90011096:	4a0d      	ldr	r2, [pc, #52]	; (900110cc <xTimerCreateTimerTask+0xac>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
90011098:	4b0d      	ldr	r3, [pc, #52]	; (900110d0 <xTimerCreateTimerTask+0xb0>)
			pxOverflowTimerList = &xActiveTimerList2;
9001109a:	6016      	str	r6, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
9001109c:	4a0d      	ldr	r2, [pc, #52]	; (900110d4 <xTimerCreateTimerTask+0xb4>)
9001109e:	f7fd fe6b 	bl	9000ed78 <xQueueGenericCreateStatic>
900110a2:	6020      	str	r0, [r4, #0]
				if( xTimerQueue != NULL )
900110a4:	2800      	cmp	r0, #0
900110a6:	d0c2      	beq.n	9001102e <xTimerCreateTimerTask+0xe>
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
900110a8:	490b      	ldr	r1, [pc, #44]	; (900110d8 <xTimerCreateTimerTask+0xb8>)
900110aa:	f7fe fe73 	bl	9000fd94 <vQueueAddToRegistry>
900110ae:	e7be      	b.n	9001102e <xTimerCreateTimerTask+0xe>
900110b0:	24039820 	.word	0x24039820
900110b4:	9002b8f0 	.word	0x9002b8f0
900110b8:	90010d8d 	.word	0x90010d8d
900110bc:	24039824 	.word	0x24039824
900110c0:	240397a4 	.word	0x240397a4
900110c4:	240397b8 	.word	0x240397b8
900110c8:	240396fc 	.word	0x240396fc
900110cc:	24039700 	.word	0x24039700
900110d0:	240397d0 	.word	0x240397d0
900110d4:	24039704 	.word	0x24039704
900110d8:	9002b8e8 	.word	0x9002b8e8

900110dc <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
900110dc:	8880      	ldrh	r0, [r0, #4]
900110de:	4770      	bx	lr

900110e0 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
900110e0:	b570      	push	{r4, r5, r6, lr}
900110e2:	6803      	ldr	r3, [r0, #0]
900110e4:	460c      	mov	r4, r1
900110e6:	2100      	movs	r1, #0
900110e8:	4605      	mov	r5, r0
900110ea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
900110ec:	4798      	blx	r3
900110ee:	4606      	mov	r6, r0
900110f0:	682b      	ldr	r3, [r5, #0]
900110f2:	4628      	mov	r0, r5
900110f4:	1ba4      	subs	r4, r4, r6
900110f6:	6a1b      	ldr	r3, [r3, #32]
900110f8:	b2a4      	uxth	r4, r4
900110fa:	4798      	blx	r3
900110fc:	fbb4 f0f0 	udiv	r0, r4, r0
90011100:	bd70      	pop	{r4, r5, r6, pc}

90011102 <_ZN8touchgfx17AbstractPartition5clearEv>:
90011102:	2300      	movs	r3, #0
90011104:	8083      	strh	r3, [r0, #4]
90011106:	4770      	bx	lr

90011108 <_ZN8touchgfx17AbstractPartition8allocateEt>:
90011108:	b510      	push	{r4, lr}
9001110a:	6803      	ldr	r3, [r0, #0]
9001110c:	4604      	mov	r4, r0
9001110e:	8881      	ldrh	r1, [r0, #4]
90011110:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90011112:	4798      	blx	r3
90011114:	88a3      	ldrh	r3, [r4, #4]
90011116:	3301      	adds	r3, #1
90011118:	80a3      	strh	r3, [r4, #4]
9001111a:	bd10      	pop	{r4, pc}

9001111c <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
9001111c:	6803      	ldr	r3, [r0, #0]
9001111e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90011120:	4718      	bx	r3

90011122 <_ZN8touchgfx17AbstractPartitionD1Ev>:
90011122:	4770      	bx	lr

90011124 <_ZN8touchgfx17AbstractPartitionC1Ev>:
90011124:	4a02      	ldr	r2, [pc, #8]	; (90011130 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
90011126:	6002      	str	r2, [r0, #0]
90011128:	2200      	movs	r2, #0
9001112a:	8082      	strh	r2, [r0, #4]
9001112c:	4770      	bx	lr
9001112e:	bf00      	nop
90011130:	9002b900 	.word	0x9002b900

90011134 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
90011134:	6a83      	ldr	r3, [r0, #40]	; 0x28
90011136:	2000      	movs	r0, #0
90011138:	b12b      	cbz	r3, 90011146 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
9001113a:	b920      	cbnz	r0, 90011146 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
9001113c:	1a5a      	subs	r2, r3, r1
9001113e:	699b      	ldr	r3, [r3, #24]
90011140:	4250      	negs	r0, r2
90011142:	4150      	adcs	r0, r2
90011144:	e7f8      	b.n	90011138 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
90011146:	4770      	bx	lr

90011148 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
90011148:	2300      	movs	r3, #0
9001114a:	6148      	str	r0, [r1, #20]
9001114c:	618b      	str	r3, [r1, #24]
9001114e:	6a83      	ldr	r3, [r0, #40]	; 0x28
90011150:	b913      	cbnz	r3, 90011158 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
90011152:	6281      	str	r1, [r0, #40]	; 0x28
90011154:	4770      	bx	lr
90011156:	4613      	mov	r3, r2
90011158:	699a      	ldr	r2, [r3, #24]
9001115a:	2a00      	cmp	r2, #0
9001115c:	d1fb      	bne.n	90011156 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
9001115e:	6199      	str	r1, [r3, #24]
90011160:	4770      	bx	lr

90011162 <_ZN8touchgfx9Container9removeAllEv>:
90011162:	2200      	movs	r2, #0
90011164:	6a83      	ldr	r3, [r0, #40]	; 0x28
90011166:	b123      	cbz	r3, 90011172 <_ZN8touchgfx9Container9removeAllEv+0x10>
90011168:	6999      	ldr	r1, [r3, #24]
9001116a:	6281      	str	r1, [r0, #40]	; 0x28
9001116c:	e9c3 2205 	strd	r2, r2, [r3, #20]
90011170:	e7f8      	b.n	90011164 <_ZN8touchgfx9Container9removeAllEv+0x2>
90011172:	4770      	bx	lr

90011174 <_ZN8touchgfx9Container6unlinkEv>:
90011174:	2300      	movs	r3, #0
90011176:	6283      	str	r3, [r0, #40]	; 0x28
90011178:	4770      	bx	lr

9001117a <_ZNK8touchgfx9Container12getSolidRectEv>:
9001117a:	2200      	movs	r2, #0
9001117c:	8002      	strh	r2, [r0, #0]
9001117e:	8042      	strh	r2, [r0, #2]
90011180:	8082      	strh	r2, [r0, #4]
90011182:	80c2      	strh	r2, [r0, #6]
90011184:	4770      	bx	lr

90011186 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
90011186:	b570      	push	{r4, r5, r6, lr}
90011188:	460d      	mov	r5, r1
9001118a:	4616      	mov	r6, r2
9001118c:	6a84      	ldr	r4, [r0, #40]	; 0x28
9001118e:	b13c      	cbz	r4, 900111a0 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
90011190:	6823      	ldr	r3, [r4, #0]
90011192:	4620      	mov	r0, r4
90011194:	4632      	mov	r2, r6
90011196:	4629      	mov	r1, r5
90011198:	6d5b      	ldr	r3, [r3, #84]	; 0x54
9001119a:	4798      	blx	r3
9001119c:	69a4      	ldr	r4, [r4, #24]
9001119e:	e7f6      	b.n	9001118e <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
900111a0:	bd70      	pop	{r4, r5, r6, pc}

900111a2 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
900111a2:	b538      	push	{r3, r4, r5, lr}
900111a4:	460d      	mov	r5, r1
900111a6:	6a84      	ldr	r4, [r0, #40]	; 0x28
900111a8:	b134      	cbz	r4, 900111b8 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
900111aa:	682b      	ldr	r3, [r5, #0]
900111ac:	4621      	mov	r1, r4
900111ae:	4628      	mov	r0, r5
900111b0:	689b      	ldr	r3, [r3, #8]
900111b2:	4798      	blx	r3
900111b4:	69a4      	ldr	r4, [r4, #24]
900111b6:	e7f7      	b.n	900111a8 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
900111b8:	bd38      	pop	{r3, r4, r5, pc}

900111ba <_ZN8touchgfx9ContainerD1Ev>:
900111ba:	4770      	bx	lr

900111bc <_ZN8touchgfx9ContainerD0Ev>:
900111bc:	b510      	push	{r4, lr}
900111be:	4604      	mov	r4, r0
900111c0:	212c      	movs	r1, #44	; 0x2c
900111c2:	f016 fcad 	bl	90027b20 <_ZdlPvj>
900111c6:	4620      	mov	r0, r4
900111c8:	bd10      	pop	{r4, pc}

900111ca <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
900111ca:	6a83      	ldr	r3, [r0, #40]	; 0x28
900111cc:	b19b      	cbz	r3, 900111f6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
900111ce:	428b      	cmp	r3, r1
900111d0:	d109      	bne.n	900111e6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
900111d2:	699a      	ldr	r2, [r3, #24]
900111d4:	2100      	movs	r1, #0
900111d6:	6159      	str	r1, [r3, #20]
900111d8:	6282      	str	r2, [r0, #40]	; 0x28
900111da:	b902      	cbnz	r2, 900111de <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
900111dc:	4770      	bx	lr
900111de:	6199      	str	r1, [r3, #24]
900111e0:	4770      	bx	lr
900111e2:	4613      	mov	r3, r2
900111e4:	b13a      	cbz	r2, 900111f6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
900111e6:	699a      	ldr	r2, [r3, #24]
900111e8:	428a      	cmp	r2, r1
900111ea:	d1fa      	bne.n	900111e2 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
900111ec:	698a      	ldr	r2, [r1, #24]
900111ee:	619a      	str	r2, [r3, #24]
900111f0:	2300      	movs	r3, #0
900111f2:	e9c1 3305 	strd	r3, r3, [r1, #20]
900111f6:	4770      	bx	lr

900111f8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
900111f8:	b410      	push	{r4}
900111fa:	6a83      	ldr	r3, [r0, #40]	; 0x28
900111fc:	4604      	mov	r4, r0
900111fe:	b92b      	cbnz	r3, 9001120c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
90011200:	6803      	ldr	r3, [r0, #0]
90011202:	4611      	mov	r1, r2
90011204:	f85d 4b04 	ldr.w	r4, [sp], #4
90011208:	6e1b      	ldr	r3, [r3, #96]	; 0x60
9001120a:	4718      	bx	r3
9001120c:	b941      	cbnz	r1, 90011220 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
9001120e:	6193      	str	r3, [r2, #24]
90011210:	6282      	str	r2, [r0, #40]	; 0x28
90011212:	6154      	str	r4, [r2, #20]
90011214:	f85d 4b04 	ldr.w	r4, [sp], #4
90011218:	4770      	bx	lr
9001121a:	4603      	mov	r3, r0
9001121c:	2800      	cmp	r0, #0
9001121e:	d0f9      	beq.n	90011214 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
90011220:	4299      	cmp	r1, r3
90011222:	6998      	ldr	r0, [r3, #24]
90011224:	d1f9      	bne.n	9001121a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
90011226:	6190      	str	r0, [r2, #24]
90011228:	618a      	str	r2, [r1, #24]
9001122a:	e7f2      	b.n	90011212 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

9001122c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
9001122c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90011230:	461f      	mov	r7, r3
90011232:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
90011236:	460d      	mov	r5, r1
90011238:	4616      	mov	r6, r2
9001123a:	b103      	cbz	r3, 9001123e <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
9001123c:	6038      	str	r0, [r7, #0]
9001123e:	6a84      	ldr	r4, [r0, #40]	; 0x28
90011240:	b314      	cbz	r4, 90011288 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
90011242:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
90011246:	b1eb      	cbz	r3, 90011284 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90011248:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
9001124c:	428d      	cmp	r5, r1
9001124e:	db19      	blt.n	90011284 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90011250:	b289      	uxth	r1, r1
90011252:	8923      	ldrh	r3, [r4, #8]
90011254:	440b      	add	r3, r1
90011256:	b21b      	sxth	r3, r3
90011258:	429d      	cmp	r5, r3
9001125a:	da13      	bge.n	90011284 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
9001125c:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
90011260:	4296      	cmp	r6, r2
90011262:	db0f      	blt.n	90011284 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90011264:	b292      	uxth	r2, r2
90011266:	8963      	ldrh	r3, [r4, #10]
90011268:	4413      	add	r3, r2
9001126a:	b21b      	sxth	r3, r3
9001126c:	429e      	cmp	r6, r3
9001126e:	da09      	bge.n	90011284 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90011270:	6823      	ldr	r3, [r4, #0]
90011272:	1ab2      	subs	r2, r6, r2
90011274:	1a69      	subs	r1, r5, r1
90011276:	4620      	mov	r0, r4
90011278:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
9001127c:	b212      	sxth	r2, r2
9001127e:	463b      	mov	r3, r7
90011280:	b209      	sxth	r1, r1
90011282:	47c0      	blx	r8
90011284:	69a4      	ldr	r4, [r4, #24]
90011286:	e7db      	b.n	90011240 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
90011288:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

9001128c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
9001128c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90011290:	4c6d      	ldr	r4, [pc, #436]	; (90011448 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1bc>)
90011292:	b0a1      	sub	sp, #132	; 0x84
90011294:	4606      	mov	r6, r0
90011296:	6824      	ldr	r4, [r4, #0]
90011298:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
9001129a:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
9001129e:	2400      	movs	r4, #0
900112a0:	9303      	str	r3, [sp, #12]
900112a2:	802c      	strh	r4, [r5, #0]
900112a4:	9d2b      	ldr	r5, [sp, #172]	; 0xac
900112a6:	802c      	strh	r4, [r5, #0]
900112a8:	601c      	str	r4, [r3, #0]
900112aa:	e9cd 1201 	strd	r1, r2, [sp, #4]
900112ae:	f7ff ffbd 	bl	9001122c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
900112b2:	f1b9 0f03 	cmp.w	r9, #3
900112b6:	f340 80c1 	ble.w	9001143c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b0>
900112ba:	4631      	mov	r1, r6
900112bc:	a80c      	add	r0, sp, #48	; 0x30
900112be:	f006 fc2d 	bl	90017b1c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900112c2:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
900112c6:	9306      	str	r3, [sp, #24]
900112c8:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
900112cc:	9307      	str	r3, [sp, #28]
900112ce:	9b03      	ldr	r3, [sp, #12]
900112d0:	f8d3 a000 	ldr.w	sl, [r3]
900112d4:	f1ba 0f00 	cmp.w	sl, #0
900112d8:	f000 80b3 	beq.w	90011442 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b6>
900112dc:	4651      	mov	r1, sl
900112de:	a810      	add	r0, sp, #64	; 0x40
900112e0:	f006 fc1c 	bl	90017b1c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900112e4:	2002      	movs	r0, #2
900112e6:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
900112ea:	9b01      	ldr	r3, [sp, #4]
900112ec:	9a06      	ldr	r2, [sp, #24]
900112ee:	fb91 f1f0 	sdiv	r1, r1, r0
900112f2:	189d      	adds	r5, r3, r2
900112f4:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
900112f8:	9a07      	ldr	r2, [sp, #28]
900112fa:	4419      	add	r1, r3
900112fc:	9b02      	ldr	r3, [sp, #8]
900112fe:	4413      	add	r3, r2
90011300:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
90011304:	1a6d      	subs	r5, r5, r1
90011306:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
9001130a:	fb92 f2f0 	sdiv	r2, r2, r0
9001130e:	440a      	add	r2, r1
90011310:	1a9b      	subs	r3, r3, r2
90011312:	435b      	muls	r3, r3
90011314:	fb05 3505 	mla	r5, r5, r5, r3
90011318:	4f4c      	ldr	r7, [pc, #304]	; (9001144c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
9001131a:	ac10      	add	r4, sp, #64	; 0x40
9001131c:	f1b9 0f0c 	cmp.w	r9, #12
90011320:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
90011322:	c40f      	stmia	r4!, {r0, r1, r2, r3}
90011324:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
90011326:	c40f      	stmia	r4!, {r0, r1, r2, r3}
90011328:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
9001132a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
9001132c:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
90011330:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
90011334:	f04f 0303 	mov.w	r3, #3
90011338:	bfd8      	it	le
9001133a:	f109 32ff 	addle.w	r2, r9, #4294967295
9001133e:	f04f 0400 	mov.w	r4, #0
90011342:	f8cd 9000 	str.w	r9, [sp]
90011346:	bfcc      	ite	gt
90011348:	4698      	movgt	r8, r3
9001134a:	fb92 f8f3 	sdivle	r8, r2, r3
9001134e:	1c63      	adds	r3, r4, #1
90011350:	aa10      	add	r2, sp, #64	; 0x40
90011352:	f004 0401 	and.w	r4, r4, #1
90011356:	f04f 0b00 	mov.w	fp, #0
9001135a:	9308      	str	r3, [sp, #32]
9001135c:	9b00      	ldr	r3, [sp, #0]
9001135e:	eb02 1444 	add.w	r4, r2, r4, lsl #5
90011362:	fb93 f3f8 	sdiv	r3, r3, r8
90011366:	3404      	adds	r4, #4
90011368:	b29b      	uxth	r3, r3
9001136a:	9304      	str	r3, [sp, #16]
9001136c:	9a04      	ldr	r2, [sp, #16]
9001136e:	f854 3c04 	ldr.w	r3, [r4, #-4]
90011372:	fb13 f302 	smulbb	r3, r3, r2
90011376:	9a01      	ldr	r2, [sp, #4]
90011378:	b29b      	uxth	r3, r3
9001137a:	1899      	adds	r1, r3, r2
9001137c:	9305      	str	r3, [sp, #20]
9001137e:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
90011382:	b209      	sxth	r1, r1
90011384:	4299      	cmp	r1, r3
90011386:	db4d      	blt.n	90011424 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90011388:	8932      	ldrh	r2, [r6, #8]
9001138a:	4413      	add	r3, r2
9001138c:	b21b      	sxth	r3, r3
9001138e:	4299      	cmp	r1, r3
90011390:	da48      	bge.n	90011424 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90011392:	9b04      	ldr	r3, [sp, #16]
90011394:	6827      	ldr	r7, [r4, #0]
90011396:	fb17 f703 	smulbb	r7, r7, r3
9001139a:	9b02      	ldr	r3, [sp, #8]
9001139c:	b2bf      	uxth	r7, r7
9001139e:	18fa      	adds	r2, r7, r3
900113a0:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
900113a4:	b212      	sxth	r2, r2
900113a6:	429a      	cmp	r2, r3
900113a8:	db3c      	blt.n	90011424 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
900113aa:	8970      	ldrh	r0, [r6, #10]
900113ac:	4403      	add	r3, r0
900113ae:	b21b      	sxth	r3, r3
900113b0:	429a      	cmp	r2, r3
900113b2:	da37      	bge.n	90011424 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
900113b4:	2300      	movs	r3, #0
900113b6:	4630      	mov	r0, r6
900113b8:	930b      	str	r3, [sp, #44]	; 0x2c
900113ba:	ab0b      	add	r3, sp, #44	; 0x2c
900113bc:	f7ff ff36 	bl	9001122c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
900113c0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
900113c2:	b37a      	cbz	r2, 90011424 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
900113c4:	4552      	cmp	r2, sl
900113c6:	d02d      	beq.n	90011424 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
900113c8:	4611      	mov	r1, r2
900113ca:	a80e      	add	r0, sp, #56	; 0x38
900113cc:	9209      	str	r2, [sp, #36]	; 0x24
900113ce:	f006 fba5 	bl	90017b1c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900113d2:	f04f 0e02 	mov.w	lr, #2
900113d6:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
900113da:	9a06      	ldr	r2, [sp, #24]
900113dc:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
900113e0:	9b01      	ldr	r3, [sp, #4]
900113e2:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
900113e6:	4413      	add	r3, r2
900113e8:	9a07      	ldr	r2, [sp, #28]
900113ea:	fb91 f1fe 	sdiv	r1, r1, lr
900113ee:	fb9c fcfe 	sdiv	ip, ip, lr
900113f2:	4401      	add	r1, r0
900113f4:	1a58      	subs	r0, r3, r1
900113f6:	9b02      	ldr	r3, [sp, #8]
900113f8:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
900113fc:	4413      	add	r3, r2
900113fe:	9a09      	ldr	r2, [sp, #36]	; 0x24
90011400:	448c      	add	ip, r1
90011402:	eba3 030c 	sub.w	r3, r3, ip
90011406:	435b      	muls	r3, r3
90011408:	fb00 3300 	mla	r3, r0, r0, r3
9001140c:	42ab      	cmp	r3, r5
9001140e:	d208      	bcs.n	90011422 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
90011410:	990b      	ldr	r1, [sp, #44]	; 0x2c
90011412:	461d      	mov	r5, r3
90011414:	9803      	ldr	r0, [sp, #12]
90011416:	6001      	str	r1, [r0, #0]
90011418:	992a      	ldr	r1, [sp, #168]	; 0xa8
9001141a:	9805      	ldr	r0, [sp, #20]
9001141c:	8008      	strh	r0, [r1, #0]
9001141e:	992b      	ldr	r1, [sp, #172]	; 0xac
90011420:	800f      	strh	r7, [r1, #0]
90011422:	4692      	mov	sl, r2
90011424:	f10b 0b01 	add.w	fp, fp, #1
90011428:	3408      	adds	r4, #8
9001142a:	f1bb 0f04 	cmp.w	fp, #4
9001142e:	d19d      	bne.n	9001136c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
90011430:	9b00      	ldr	r3, [sp, #0]
90011432:	9c08      	ldr	r4, [sp, #32]
90011434:	444b      	add	r3, r9
90011436:	4544      	cmp	r4, r8
90011438:	9300      	str	r3, [sp, #0]
9001143a:	d188      	bne.n	9001134e <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
9001143c:	b021      	add	sp, #132	; 0x84
9001143e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90011442:	f04f 35ff 	mov.w	r5, #4294967295
90011446:	e767      	b.n	90011318 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
90011448:	24039834 	.word	0x24039834
9001144c:	90028bfc 	.word	0x90028bfc

90011450 <_ZN8touchgfx4RectaNERKS0_>:
90011450:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90011454:	f9b1 7000 	ldrsh.w	r7, [r1]
90011458:	888c      	ldrh	r4, [r1, #4]
9001145a:	f9b0 9000 	ldrsh.w	r9, [r0]
9001145e:	443c      	add	r4, r7
90011460:	b2a4      	uxth	r4, r4
90011462:	fa0f f884 	sxth.w	r8, r4
90011466:	45c1      	cmp	r9, r8
90011468:	da2f      	bge.n	900114ca <_ZN8touchgfx4RectaNERKS0_+0x7a>
9001146a:	8882      	ldrh	r2, [r0, #4]
9001146c:	444a      	add	r2, r9
9001146e:	b292      	uxth	r2, r2
90011470:	fa0f fe82 	sxth.w	lr, r2
90011474:	4577      	cmp	r7, lr
90011476:	da28      	bge.n	900114ca <_ZN8touchgfx4RectaNERKS0_+0x7a>
90011478:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
9001147c:	88cb      	ldrh	r3, [r1, #6]
9001147e:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
90011482:	442b      	add	r3, r5
90011484:	b21b      	sxth	r3, r3
90011486:	429e      	cmp	r6, r3
90011488:	da1f      	bge.n	900114ca <_ZN8touchgfx4RectaNERKS0_+0x7a>
9001148a:	88c3      	ldrh	r3, [r0, #6]
9001148c:	4433      	add	r3, r6
9001148e:	b29b      	uxth	r3, r3
90011490:	fa0f fc83 	sxth.w	ip, r3
90011494:	4565      	cmp	r5, ip
90011496:	da18      	bge.n	900114ca <_ZN8touchgfx4RectaNERKS0_+0x7a>
90011498:	454f      	cmp	r7, r9
9001149a:	bfb8      	it	lt
9001149c:	464f      	movlt	r7, r9
9001149e:	42b5      	cmp	r5, r6
900114a0:	bfb8      	it	lt
900114a2:	4635      	movlt	r5, r6
900114a4:	45f0      	cmp	r8, lr
900114a6:	bfd8      	it	le
900114a8:	4622      	movle	r2, r4
900114aa:	1bd2      	subs	r2, r2, r7
900114ac:	8082      	strh	r2, [r0, #4]
900114ae:	884a      	ldrh	r2, [r1, #2]
900114b0:	88c9      	ldrh	r1, [r1, #6]
900114b2:	8007      	strh	r7, [r0, #0]
900114b4:	440a      	add	r2, r1
900114b6:	8045      	strh	r5, [r0, #2]
900114b8:	b292      	uxth	r2, r2
900114ba:	b211      	sxth	r1, r2
900114bc:	458c      	cmp	ip, r1
900114be:	bfa8      	it	ge
900114c0:	4613      	movge	r3, r2
900114c2:	1b5b      	subs	r3, r3, r5
900114c4:	80c3      	strh	r3, [r0, #6]
900114c6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900114ca:	2300      	movs	r3, #0
900114cc:	8003      	strh	r3, [r0, #0]
900114ce:	8043      	strh	r3, [r0, #2]
900114d0:	8083      	strh	r3, [r0, #4]
900114d2:	80c3      	strh	r3, [r0, #6]
900114d4:	e7f7      	b.n	900114c6 <_ZN8touchgfx4RectaNERKS0_+0x76>

900114d6 <_ZNK8touchgfx4Rect7isEmptyEv>:
900114d6:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
900114da:	2b00      	cmp	r3, #0
900114dc:	dd06      	ble.n	900114ec <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
900114de:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
900114e2:	2800      	cmp	r0, #0
900114e4:	bfcc      	ite	gt
900114e6:	2000      	movgt	r0, #0
900114e8:	2001      	movle	r0, #1
900114ea:	4770      	bx	lr
900114ec:	2001      	movs	r0, #1
900114ee:	4770      	bx	lr

900114f0 <_ZNK8touchgfx9Container16getContainedAreaEv>:
900114f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900114f4:	2300      	movs	r3, #0
900114f6:	4604      	mov	r4, r0
900114f8:	6a8d      	ldr	r5, [r1, #40]	; 0x28
900114fa:	8003      	strh	r3, [r0, #0]
900114fc:	8043      	strh	r3, [r0, #2]
900114fe:	8083      	strh	r3, [r0, #4]
90011500:	80c3      	strh	r3, [r0, #6]
90011502:	2d00      	cmp	r5, #0
90011504:	d040      	beq.n	90011588 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
90011506:	1d28      	adds	r0, r5, #4
90011508:	f7ff ffe5 	bl	900114d6 <_ZNK8touchgfx4Rect7isEmptyEv>
9001150c:	b988      	cbnz	r0, 90011532 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
9001150e:	4620      	mov	r0, r4
90011510:	f7ff ffe1 	bl	900114d6 <_ZNK8touchgfx4Rect7isEmptyEv>
90011514:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
90011518:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
9001151c:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
90011520:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
90011524:	b138      	cbz	r0, 90011536 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
90011526:	8022      	strh	r2, [r4, #0]
90011528:	8063      	strh	r3, [r4, #2]
9001152a:	f8a4 e004 	strh.w	lr, [r4, #4]
9001152e:	f8a4 c006 	strh.w	ip, [r4, #6]
90011532:	69ad      	ldr	r5, [r5, #24]
90011534:	e7e5      	b.n	90011502 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
90011536:	f9b4 0000 	ldrsh.w	r0, [r4]
9001153a:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
9001153e:	4290      	cmp	r0, r2
90011540:	4607      	mov	r7, r0
90011542:	f8b4 8004 	ldrh.w	r8, [r4, #4]
90011546:	460e      	mov	r6, r1
90011548:	bfa8      	it	ge
9001154a:	4617      	movge	r7, r2
9001154c:	4299      	cmp	r1, r3
9001154e:	4472      	add	r2, lr
90011550:	f8b4 e006 	ldrh.w	lr, [r4, #6]
90011554:	bfa8      	it	ge
90011556:	461e      	movge	r6, r3
90011558:	4440      	add	r0, r8
9001155a:	4471      	add	r1, lr
9001155c:	4463      	add	r3, ip
9001155e:	b200      	sxth	r0, r0
90011560:	8027      	strh	r7, [r4, #0]
90011562:	b212      	sxth	r2, r2
90011564:	8066      	strh	r6, [r4, #2]
90011566:	b209      	sxth	r1, r1
90011568:	b21b      	sxth	r3, r3
9001156a:	4290      	cmp	r0, r2
9001156c:	bfac      	ite	ge
9001156e:	ebc7 0200 	rsbge	r2, r7, r0
90011572:	ebc7 0202 	rsblt	r2, r7, r2
90011576:	4299      	cmp	r1, r3
90011578:	bfac      	ite	ge
9001157a:	ebc6 0301 	rsbge	r3, r6, r1
9001157e:	ebc6 0303 	rsblt	r3, r6, r3
90011582:	80a2      	strh	r2, [r4, #4]
90011584:	80e3      	strh	r3, [r4, #6]
90011586:	e7d4      	b.n	90011532 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
90011588:	4620      	mov	r0, r4
9001158a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

9001158e <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
9001158e:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
90011592:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
90011596:	b383      	cbz	r3, 900115fa <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
90011598:	6a84      	ldr	r4, [r0, #40]	; 0x28
9001159a:	b374      	cbz	r4, 900115fa <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
9001159c:	f9b1 5000 	ldrsh.w	r5, [r1]
900115a0:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
900115a4:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
900115a8:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
900115ac:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
900115b0:	b303      	cbz	r3, 900115f4 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
900115b2:	4668      	mov	r0, sp
900115b4:	1d21      	adds	r1, r4, #4
900115b6:	f8ad 5000 	strh.w	r5, [sp]
900115ba:	f8ad 6002 	strh.w	r6, [sp, #2]
900115be:	f8ad 7004 	strh.w	r7, [sp, #4]
900115c2:	f8ad 8006 	strh.w	r8, [sp, #6]
900115c6:	f7ff ff43 	bl	90011450 <_ZN8touchgfx4RectaNERKS0_>
900115ca:	4668      	mov	r0, sp
900115cc:	f7ff ff83 	bl	900114d6 <_ZNK8touchgfx4Rect7isEmptyEv>
900115d0:	b980      	cbnz	r0, 900115f4 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
900115d2:	f8bd 3000 	ldrh.w	r3, [sp]
900115d6:	4669      	mov	r1, sp
900115d8:	88a2      	ldrh	r2, [r4, #4]
900115da:	4620      	mov	r0, r4
900115dc:	1a9b      	subs	r3, r3, r2
900115de:	88e2      	ldrh	r2, [r4, #6]
900115e0:	f8ad 3000 	strh.w	r3, [sp]
900115e4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
900115e8:	1a9b      	subs	r3, r3, r2
900115ea:	f8ad 3002 	strh.w	r3, [sp, #2]
900115ee:	6823      	ldr	r3, [r4, #0]
900115f0:	689b      	ldr	r3, [r3, #8]
900115f2:	4798      	blx	r3
900115f4:	69a4      	ldr	r4, [r4, #24]
900115f6:	2c00      	cmp	r4, #0
900115f8:	d1d8      	bne.n	900115ac <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
900115fa:	b002      	add	sp, #8
900115fc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90011600 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
90011600:	b573      	push	{r0, r1, r4, r5, r6, lr}
90011602:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
90011606:	460d      	mov	r5, r1
90011608:	4616      	mov	r6, r2
9001160a:	b323      	cbz	r3, 90011656 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
9001160c:	6a84      	ldr	r4, [r0, #40]	; 0x28
9001160e:	b314      	cbz	r4, 90011656 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
90011610:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
90011614:	b1eb      	cbz	r3, 90011652 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
90011616:	6828      	ldr	r0, [r5, #0]
90011618:	466b      	mov	r3, sp
9001161a:	6869      	ldr	r1, [r5, #4]
9001161c:	c303      	stmia	r3!, {r0, r1}
9001161e:	4668      	mov	r0, sp
90011620:	1d21      	adds	r1, r4, #4
90011622:	f7ff ff15 	bl	90011450 <_ZN8touchgfx4RectaNERKS0_>
90011626:	4668      	mov	r0, sp
90011628:	f7ff ff55 	bl	900114d6 <_ZNK8touchgfx4Rect7isEmptyEv>
9001162c:	b988      	cbnz	r0, 90011652 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
9001162e:	f8bd 3000 	ldrh.w	r3, [sp]
90011632:	4669      	mov	r1, sp
90011634:	88a2      	ldrh	r2, [r4, #4]
90011636:	4620      	mov	r0, r4
90011638:	1a9b      	subs	r3, r3, r2
9001163a:	88e2      	ldrh	r2, [r4, #6]
9001163c:	f8ad 3000 	strh.w	r3, [sp]
90011640:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90011644:	1a9b      	subs	r3, r3, r2
90011646:	4632      	mov	r2, r6
90011648:	f8ad 3002 	strh.w	r3, [sp, #2]
9001164c:	6823      	ldr	r3, [r4, #0]
9001164e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
90011650:	4798      	blx	r3
90011652:	69a4      	ldr	r4, [r4, #24]
90011654:	e7db      	b.n	9001160e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
90011656:	b002      	add	sp, #8
90011658:	bd70      	pop	{r4, r5, r6, pc}

9001165a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
9001165a:	6803      	ldr	r3, [r0, #0]
9001165c:	b513      	push	{r0, r1, r4, lr}
9001165e:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
90011662:	2300      	movs	r3, #0
90011664:	e9cd 3300 	strd	r3, r3, [sp]
90011668:	466b      	mov	r3, sp
9001166a:	47a0      	blx	r4
9001166c:	b002      	add	sp, #8
9001166e:	bd10      	pop	{r4, pc}

90011670 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
90011670:	2301      	movs	r3, #1
90011672:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
90011676:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
9001167a:	4770      	bx	lr

9001167c <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
9001167c:	2301      	movs	r3, #1
9001167e:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
90011682:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
90011686:	4770      	bx	lr

90011688 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
90011688:	6843      	ldr	r3, [r0, #4]
9001168a:	2201      	movs	r2, #1
9001168c:	725a      	strb	r2, [r3, #9]
9001168e:	6840      	ldr	r0, [r0, #4]
90011690:	6803      	ldr	r3, [r0, #0]
90011692:	691b      	ldr	r3, [r3, #16]
90011694:	4718      	bx	r3

90011696 <_ZN8touchgfx3HAL8flushDMAEv>:
90011696:	6840      	ldr	r0, [r0, #4]
90011698:	6803      	ldr	r3, [r0, #0]
9001169a:	689b      	ldr	r3, [r3, #8]
9001169c:	4718      	bx	r3

9001169e <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
9001169e:	b530      	push	{r4, r5, lr}
900116a0:	b08b      	sub	sp, #44	; 0x2c
900116a2:	6804      	ldr	r4, [r0, #0]
900116a4:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
900116a8:	9509      	str	r5, [sp, #36]	; 0x24
900116aa:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
900116ae:	9508      	str	r5, [sp, #32]
900116b0:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
900116b4:	9507      	str	r5, [sp, #28]
900116b6:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
900116ba:	9506      	str	r5, [sp, #24]
900116bc:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
900116c0:	9505      	str	r5, [sp, #20]
900116c2:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
900116c6:	9504      	str	r5, [sp, #16]
900116c8:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
900116cc:	9503      	str	r5, [sp, #12]
900116ce:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
900116d2:	9502      	str	r5, [sp, #8]
900116d4:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
900116d8:	e9cd 3500 	strd	r3, r5, [sp]
900116dc:	4613      	mov	r3, r2
900116de:	6be4      	ldr	r4, [r4, #60]	; 0x3c
900116e0:	2200      	movs	r2, #0
900116e2:	47a0      	blx	r4
900116e4:	b00b      	add	sp, #44	; 0x2c
900116e6:	bd30      	pop	{r4, r5, pc}

900116e8 <_ZN8touchgfx3HAL10beginFrameEv>:
900116e8:	4b04      	ldr	r3, [pc, #16]	; (900116fc <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
900116ea:	781b      	ldrb	r3, [r3, #0]
900116ec:	b123      	cbz	r3, 900116f8 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
900116ee:	f890 006e 	ldrb.w	r0, [r0, #110]	; 0x6e
900116f2:	f080 0001 	eor.w	r0, r0, #1
900116f6:	4770      	bx	lr
900116f8:	2001      	movs	r0, #1
900116fa:	4770      	bx	lr
900116fc:	24039832 	.word	0x24039832

90011700 <_ZN8touchgfx3HAL8endFrameEv>:
90011700:	b510      	push	{r4, lr}
90011702:	4604      	mov	r4, r0
90011704:	6840      	ldr	r0, [r0, #4]
90011706:	6803      	ldr	r3, [r0, #0]
90011708:	689b      	ldr	r3, [r3, #8]
9001170a:	4798      	blx	r3
9001170c:	f894 306d 	ldrb.w	r3, [r4, #109]	; 0x6d
90011710:	b113      	cbz	r3, 90011718 <_ZN8touchgfx3HAL8endFrameEv+0x18>
90011712:	2301      	movs	r3, #1
90011714:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
90011718:	bd10      	pop	{r4, pc}

9001171a <_ZN8touchgfx3HAL10initializeEv>:
9001171a:	b510      	push	{r4, lr}
9001171c:	4604      	mov	r4, r0
9001171e:	f7f0 f889 	bl	90001834 <_ZN8touchgfx10OSWrappers10initializeEv>
90011722:	f7ee feed 	bl	90000500 <_ZN8touchgfx4GPIO4initEv>
90011726:	6860      	ldr	r0, [r4, #4]
90011728:	6803      	ldr	r3, [r0, #0]
9001172a:	68db      	ldr	r3, [r3, #12]
9001172c:	4798      	blx	r3
9001172e:	68e0      	ldr	r0, [r4, #12]
90011730:	6803      	ldr	r3, [r0, #0]
90011732:	689b      	ldr	r3, [r3, #8]
90011734:	4798      	blx	r3
90011736:	6823      	ldr	r3, [r4, #0]
90011738:	4620      	mov	r0, r4
9001173a:	6f5b      	ldr	r3, [r3, #116]	; 0x74
9001173c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90011740:	4718      	bx	r3
	...

90011744 <_ZN8touchgfx3HAL4tickEv>:
90011744:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
90011746:	6803      	ldr	r3, [r0, #0]
90011748:	4604      	mov	r4, r0
9001174a:	4d5b      	ldr	r5, [pc, #364]	; (900118b8 <_ZN8touchgfx3HAL4tickEv+0x174>)
9001174c:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
90011750:	4798      	blx	r3
90011752:	2800      	cmp	r0, #0
90011754:	f000 8095 	beq.w	90011882 <_ZN8touchgfx3HAL4tickEv+0x13e>
90011758:	2001      	movs	r0, #1
9001175a:	2600      	movs	r6, #0
9001175c:	f7ee fefa 	bl	90000554 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
90011760:	f894 306a 	ldrb.w	r3, [r4, #106]	; 0x6a
90011764:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
90011768:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
9001176c:	f894 3079 	ldrb.w	r3, [r4, #121]	; 0x79
90011770:	f884 606a 	strb.w	r6, [r4, #106]	; 0x6a
90011774:	b133      	cbz	r3, 90011784 <_ZN8touchgfx3HAL4tickEv+0x40>
90011776:	6823      	ldr	r3, [r4, #0]
90011778:	4620      	mov	r0, r4
9001177a:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
9001177e:	4798      	blx	r3
90011780:	f884 6079 	strb.w	r6, [r4, #121]	; 0x79
90011784:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
90011788:	2601      	movs	r6, #1
9001178a:	6862      	ldr	r2, [r4, #4]
9001178c:	f083 0301 	eor.w	r3, r3, #1
90011790:	702e      	strb	r6, [r5, #0]
90011792:	7253      	strb	r3, [r2, #9]
90011794:	f005 f886 	bl	900168a4 <_ZN8touchgfx11Application11getInstanceEv>
90011798:	6803      	ldr	r3, [r0, #0]
9001179a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
9001179c:	4798      	blx	r3
9001179e:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
900117a2:	b90b      	cbnz	r3, 900117a8 <_ZN8touchgfx3HAL4tickEv+0x64>
900117a4:	f884 606b 	strb.w	r6, [r4, #107]	; 0x6b
900117a8:	f005 f87c 	bl	900168a4 <_ZN8touchgfx11Application11getInstanceEv>
900117ac:	6803      	ldr	r3, [r0, #0]
900117ae:	695b      	ldr	r3, [r3, #20]
900117b0:	4798      	blx	r3
900117b2:	6de0      	ldr	r0, [r4, #92]	; 0x5c
900117b4:	6803      	ldr	r3, [r0, #0]
900117b6:	691b      	ldr	r3, [r3, #16]
900117b8:	4798      	blx	r3
900117ba:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
900117be:	f894 206c 	ldrb.w	r2, [r4, #108]	; 0x6c
900117c2:	3b01      	subs	r3, #1
900117c4:	b2db      	uxtb	r3, r3
900117c6:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
900117ca:	b10a      	cbz	r2, 900117d0 <_ZN8touchgfx3HAL4tickEv+0x8c>
900117cc:	2b00      	cmp	r3, #0
900117ce:	d1eb      	bne.n	900117a8 <_ZN8touchgfx3HAL4tickEv+0x64>
900117d0:	4a3a      	ldr	r2, [pc, #232]	; (900118bc <_ZN8touchgfx3HAL4tickEv+0x178>)
900117d2:	f994 1068 	ldrsb.w	r1, [r4, #104]	; 0x68
900117d6:	7813      	ldrb	r3, [r2, #0]
900117d8:	3301      	adds	r3, #1
900117da:	b25b      	sxtb	r3, r3
900117dc:	4299      	cmp	r1, r3
900117de:	7013      	strb	r3, [r2, #0]
900117e0:	dc10      	bgt.n	90011804 <_ZN8touchgfx3HAL4tickEv+0xc0>
900117e2:	2300      	movs	r3, #0
900117e4:	68e0      	ldr	r0, [r4, #12]
900117e6:	a902      	add	r1, sp, #8
900117e8:	7013      	strb	r3, [r2, #0]
900117ea:	aa03      	add	r2, sp, #12
900117ec:	6803      	ldr	r3, [r0, #0]
900117ee:	68db      	ldr	r3, [r3, #12]
900117f0:	4798      	blx	r3
900117f2:	6823      	ldr	r3, [r4, #0]
900117f4:	2800      	cmp	r0, #0
900117f6:	d050      	beq.n	9001189a <_ZN8touchgfx3HAL4tickEv+0x156>
900117f8:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
900117fc:	4620      	mov	r0, r4
900117fe:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
90011802:	4798      	blx	r3
90011804:	2300      	movs	r3, #0
90011806:	6960      	ldr	r0, [r4, #20]
90011808:	f88d 3007 	strb.w	r3, [sp, #7]
9001180c:	b158      	cbz	r0, 90011826 <_ZN8touchgfx3HAL4tickEv+0xe2>
9001180e:	6803      	ldr	r3, [r0, #0]
90011810:	f10d 0107 	add.w	r1, sp, #7
90011814:	68db      	ldr	r3, [r3, #12]
90011816:	4798      	blx	r3
90011818:	b128      	cbz	r0, 90011826 <_ZN8touchgfx3HAL4tickEv+0xe2>
9001181a:	6de0      	ldr	r0, [r4, #92]	; 0x5c
9001181c:	f89d 1007 	ldrb.w	r1, [sp, #7]
90011820:	6803      	ldr	r3, [r0, #0]
90011822:	68db      	ldr	r3, [r3, #12]
90011824:	4798      	blx	r3
90011826:	f104 001c 	add.w	r0, r4, #28
9001182a:	f015 fd7d 	bl	90027328 <_ZN8touchgfx8Gestures4tickEv>
9001182e:	f894 3070 	ldrb.w	r3, [r4, #112]	; 0x70
90011832:	b30b      	cbz	r3, 90011878 <_ZN8touchgfx3HAL4tickEv+0x134>
90011834:	6920      	ldr	r0, [r4, #16]
90011836:	6803      	ldr	r3, [r0, #0]
90011838:	691b      	ldr	r3, [r3, #16]
9001183a:	4798      	blx	r3
9001183c:	6f63      	ldr	r3, [r4, #116]	; 0x74
9001183e:	4606      	mov	r6, r0
90011840:	b903      	cbnz	r3, 90011844 <_ZN8touchgfx3HAL4tickEv+0x100>
90011842:	6760      	str	r0, [r4, #116]	; 0x74
90011844:	6f63      	ldr	r3, [r4, #116]	; 0x74
90011846:	4a1e      	ldr	r2, [pc, #120]	; (900118c0 <_ZN8touchgfx3HAL4tickEv+0x17c>)
90011848:	1af3      	subs	r3, r6, r3
9001184a:	4293      	cmp	r3, r2
9001184c:	d914      	bls.n	90011878 <_ZN8touchgfx3HAL4tickEv+0x134>
9001184e:	6920      	ldr	r0, [r4, #16]
90011850:	6803      	ldr	r3, [r0, #0]
90011852:	699b      	ldr	r3, [r3, #24]
90011854:	4798      	blx	r3
90011856:	6f63      	ldr	r3, [r4, #116]	; 0x74
90011858:	2264      	movs	r2, #100	; 0x64
9001185a:	1af3      	subs	r3, r6, r3
9001185c:	fbb3 f3f2 	udiv	r3, r3, r2
90011860:	fbb0 f0f3 	udiv	r0, r0, r3
90011864:	2800      	cmp	r0, #0
90011866:	dc1d      	bgt.n	900118a4 <_ZN8touchgfx3HAL4tickEv+0x160>
90011868:	f884 2069 	strb.w	r2, [r4, #105]	; 0x69
9001186c:	6920      	ldr	r0, [r4, #16]
9001186e:	2100      	movs	r1, #0
90011870:	6803      	ldr	r3, [r0, #0]
90011872:	69db      	ldr	r3, [r3, #28]
90011874:	4798      	blx	r3
90011876:	6766      	str	r6, [r4, #116]	; 0x74
90011878:	f005 f814 	bl	900168a4 <_ZN8touchgfx11Application11getInstanceEv>
9001187c:	6803      	ldr	r3, [r0, #0]
9001187e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90011880:	4798      	blx	r3
90011882:	6823      	ldr	r3, [r4, #0]
90011884:	4620      	mov	r0, r4
90011886:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
9001188a:	4798      	blx	r3
9001188c:	2001      	movs	r0, #1
9001188e:	f7ee fe95 	bl	900005bc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
90011892:	2300      	movs	r3, #0
90011894:	702b      	strb	r3, [r5, #0]
90011896:	b004      	add	sp, #16
90011898:	bd70      	pop	{r4, r5, r6, pc}
9001189a:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
9001189e:	4620      	mov	r0, r4
900118a0:	4798      	blx	r3
900118a2:	e7af      	b.n	90011804 <_ZN8touchgfx3HAL4tickEv+0xc0>
900118a4:	2863      	cmp	r0, #99	; 0x63
900118a6:	bfcb      	itete	gt
900118a8:	2300      	movgt	r3, #0
900118aa:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
900118ae:	f884 3069 	strbgt.w	r3, [r4, #105]	; 0x69
900118b2:	f884 0069 	strble.w	r0, [r4, #105]	; 0x69
900118b6:	e7d9      	b.n	9001186c <_ZN8touchgfx3HAL4tickEv+0x128>
900118b8:	24039838 	.word	0x24039838
900118bc:	24039839 	.word	0x24039839
900118c0:	05f5e100 	.word	0x05f5e100

900118c4 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
900118c4:	b510      	push	{r4, lr}
900118c6:	4604      	mov	r4, r0
900118c8:	f7ef ffe6 	bl	90001898 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
900118cc:	2200      	movs	r2, #0
900118ce:	6863      	ldr	r3, [r4, #4]
900118d0:	729a      	strb	r2, [r3, #10]
900118d2:	bd10      	pop	{r4, pc}

900118d4 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
900118d4:	65c1      	str	r1, [r0, #92]	; 0x5c
900118d6:	301c      	adds	r0, #28
900118d8:	f015 bd24 	b.w	90027324 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

900118dc <_ZN8touchgfx3HAL5touchEll>:
900118dc:	b530      	push	{r4, r5, lr}
900118de:	b087      	sub	sp, #28
900118e0:	4604      	mov	r4, r0
900118e2:	a804      	add	r0, sp, #16
900118e4:	e9cd 1204 	strd	r1, r2, [sp, #16]
900118e8:	f004 fda6 	bl	90016438 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
900118ec:	9b04      	ldr	r3, [sp, #16]
900118ee:	a906      	add	r1, sp, #24
900118f0:	a803      	add	r0, sp, #12
900118f2:	f8ad 300c 	strh.w	r3, [sp, #12]
900118f6:	9b05      	ldr	r3, [sp, #20]
900118f8:	f821 3d0a 	strh.w	r3, [r1, #-10]!
900118fc:	f004 fdee 	bl	900164dc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
90011900:	f894 106f 	ldrb.w	r1, [r4, #111]	; 0x6f
90011904:	f104 001c 	add.w	r0, r4, #28
90011908:	f8bd 200c 	ldrh.w	r2, [sp, #12]
9001190c:	f8bd 300e 	ldrh.w	r3, [sp, #14]
90011910:	b189      	cbz	r1, 90011936 <_ZN8touchgfx3HAL5touchEll+0x5a>
90011912:	f8b4 5064 	ldrh.w	r5, [r4, #100]	; 0x64
90011916:	9300      	str	r3, [sp, #0]
90011918:	4613      	mov	r3, r2
9001191a:	f8b4 1060 	ldrh.w	r1, [r4, #96]	; 0x60
9001191e:	462a      	mov	r2, r5
90011920:	f015 fd10 	bl	90027344 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
90011924:	b128      	cbz	r0, 90011932 <_ZN8touchgfx3HAL5touchEll+0x56>
90011926:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
9001192a:	6623      	str	r3, [r4, #96]	; 0x60
9001192c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
90011930:	6663      	str	r3, [r4, #100]	; 0x64
90011932:	b007      	add	sp, #28
90011934:	bd30      	pop	{r4, r5, pc}
90011936:	f015 fd45 	bl	900273c4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
9001193a:	2301      	movs	r3, #1
9001193c:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
90011940:	e7f1      	b.n	90011926 <_ZN8touchgfx3HAL5touchEll+0x4a>

90011942 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
90011942:	b510      	push	{r4, lr}
90011944:	2b00      	cmp	r3, #0
90011946:	d046      	beq.n	900119d6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
90011948:	ea81 0002 	eor.w	r0, r1, r2
9001194c:	07c4      	lsls	r4, r0, #31
9001194e:	d508      	bpl.n	90011962 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
90011950:	440b      	add	r3, r1
90011952:	3a01      	subs	r2, #1
90011954:	428b      	cmp	r3, r1
90011956:	d93e      	bls.n	900119d6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
90011958:	f812 0f01 	ldrb.w	r0, [r2, #1]!
9001195c:	f801 0b01 	strb.w	r0, [r1], #1
90011960:	e7f8      	b.n	90011954 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
90011962:	07d0      	lsls	r0, r2, #31
90011964:	bf42      	ittt	mi
90011966:	f812 0b01 	ldrbmi.w	r0, [r2], #1
9001196a:	f103 33ff 	addmi.w	r3, r3, #4294967295
9001196e:	f801 0b01 	strbmi.w	r0, [r1], #1
90011972:	2b01      	cmp	r3, #1
90011974:	d911      	bls.n	9001199a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
90011976:	ea81 0402 	eor.w	r4, r1, r2
9001197a:	4610      	mov	r0, r2
9001197c:	07a4      	lsls	r4, r4, #30
9001197e:	d022      	beq.n	900119c6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
90011980:	f023 0401 	bic.w	r4, r3, #1
90011984:	440c      	add	r4, r1
90011986:	428c      	cmp	r4, r1
90011988:	4602      	mov	r2, r0
9001198a:	d904      	bls.n	90011996 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
9001198c:	8812      	ldrh	r2, [r2, #0]
9001198e:	3002      	adds	r0, #2
90011990:	f821 2b02 	strh.w	r2, [r1], #2
90011994:	e7f7      	b.n	90011986 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
90011996:	f003 0301 	and.w	r3, r3, #1
9001199a:	f023 0003 	bic.w	r0, r3, #3
9001199e:	4408      	add	r0, r1
900119a0:	4288      	cmp	r0, r1
900119a2:	4614      	mov	r4, r2
900119a4:	d904      	bls.n	900119b0 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
900119a6:	6824      	ldr	r4, [r4, #0]
900119a8:	3204      	adds	r2, #4
900119aa:	f841 4b04 	str.w	r4, [r1], #4
900119ae:	e7f7      	b.n	900119a0 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
900119b0:	f003 0303 	and.w	r3, r3, #3
900119b4:	3a01      	subs	r2, #1
900119b6:	440b      	add	r3, r1
900119b8:	428b      	cmp	r3, r1
900119ba:	d90c      	bls.n	900119d6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
900119bc:	f812 0f01 	ldrb.w	r0, [r2, #1]!
900119c0:	f801 0b01 	strb.w	r0, [r1], #1
900119c4:	e7f8      	b.n	900119b8 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
900119c6:	0790      	lsls	r0, r2, #30
900119c8:	d0e7      	beq.n	9001199a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
900119ca:	f832 0b02 	ldrh.w	r0, [r2], #2
900119ce:	3b02      	subs	r3, #2
900119d0:	f821 0b02 	strh.w	r0, [r1], #2
900119d4:	e7e1      	b.n	9001199a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
900119d6:	2001      	movs	r0, #1
900119d8:	bd10      	pop	{r4, pc}

900119da <_ZN8touchgfx3HAL7noTouchEv>:
900119da:	b510      	push	{r4, lr}
900119dc:	f890 306f 	ldrb.w	r3, [r0, #111]	; 0x6f
900119e0:	4604      	mov	r4, r0
900119e2:	b153      	cbz	r3, 900119fa <_ZN8touchgfx3HAL7noTouchEv+0x20>
900119e4:	f8b0 3064 	ldrh.w	r3, [r0, #100]	; 0x64
900119e8:	2101      	movs	r1, #1
900119ea:	f8b0 2060 	ldrh.w	r2, [r0, #96]	; 0x60
900119ee:	301c      	adds	r0, #28
900119f0:	f015 fce8 	bl	900273c4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
900119f4:	2300      	movs	r3, #0
900119f6:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
900119fa:	bd10      	pop	{r4, pc}

900119fc <_ZN8touchgfx8Drawable5setXYEss>:
900119fc:	b570      	push	{r4, r5, r6, lr}
900119fe:	6803      	ldr	r3, [r0, #0]
90011a00:	4604      	mov	r4, r0
90011a02:	4615      	mov	r5, r2
90011a04:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90011a06:	4798      	blx	r3
90011a08:	6823      	ldr	r3, [r4, #0]
90011a0a:	4629      	mov	r1, r5
90011a0c:	4620      	mov	r0, r4
90011a0e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90011a10:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90011a14:	4718      	bx	r3
	...

90011a18 <_ZN8touchgfx3HAL3lcdEv>:
90011a18:	4b04      	ldr	r3, [pc, #16]	; (90011a2c <_ZN8touchgfx3HAL3lcdEv+0x14>)
90011a1a:	681b      	ldr	r3, [r3, #0]
90011a1c:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
90011a20:	b10a      	cbz	r2, 90011a26 <_ZN8touchgfx3HAL3lcdEv+0xe>
90011a22:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
90011a24:	b900      	cbnz	r0, 90011a28 <_ZN8touchgfx3HAL3lcdEv+0x10>
90011a26:	6898      	ldr	r0, [r3, #8]
90011a28:	4770      	bx	lr
90011a2a:	bf00      	nop
90011a2c:	24039834 	.word	0x24039834

90011a30 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
90011a30:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90011a34:	b085      	sub	sp, #20
90011a36:	4604      	mov	r4, r0
90011a38:	2000      	movs	r0, #0
90011a3a:	4699      	mov	r9, r3
90011a3c:	ad04      	add	r5, sp, #16
90011a3e:	460f      	mov	r7, r1
90011a40:	4690      	mov	r8, r2
90011a42:	f845 0d04 	str.w	r0, [r5, #-4]!
90011a46:	69a0      	ldr	r0, [r4, #24]
90011a48:	6806      	ldr	r6, [r0, #0]
90011a4a:	9501      	str	r5, [sp, #4]
90011a4c:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
90011a50:	9500      	str	r5, [sp, #0]
90011a52:	6835      	ldr	r5, [r6, #0]
90011a54:	47a8      	blx	r5
90011a56:	4d10      	ldr	r5, [pc, #64]	; (90011a98 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
90011a58:	4606      	mov	r6, r0
90011a5a:	f8a5 9000 	strh.w	r9, [r5]
90011a5e:	f7ff ffdb 	bl	90011a18 <_ZN8touchgfx3HAL3lcdEv>
90011a62:	6803      	ldr	r3, [r0, #0]
90011a64:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90011a66:	4798      	blx	r3
90011a68:	b128      	cbz	r0, 90011a76 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
90011a6a:	2801      	cmp	r0, #1
90011a6c:	d00b      	beq.n	90011a86 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
90011a6e:	4630      	mov	r0, r6
90011a70:	b005      	add	sp, #20
90011a72:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90011a76:	882b      	ldrh	r3, [r5, #0]
90011a78:	fb08 7203 	mla	r2, r8, r3, r7
90011a7c:	9b03      	ldr	r3, [sp, #12]
90011a7e:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
90011a82:	63e3      	str	r3, [r4, #60]	; 0x3c
90011a84:	e7f3      	b.n	90011a6e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
90011a86:	882a      	ldrh	r2, [r5, #0]
90011a88:	9b03      	ldr	r3, [sp, #12]
90011a8a:	fb08 7202 	mla	r2, r8, r2, r7
90011a8e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90011a92:	1a9a      	subs	r2, r3, r2
90011a94:	63e2      	str	r2, [r4, #60]	; 0x3c
90011a96:	e7ea      	b.n	90011a6e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
90011a98:	2403982e 	.word	0x2403982e

90011a9c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
90011a9c:	b5f0      	push	{r4, r5, r6, r7, lr}
90011a9e:	b08b      	sub	sp, #44	; 0x2c
90011aa0:	4617      	mov	r7, r2
90011aa2:	4604      	mov	r4, r0
90011aa4:	460e      	mov	r6, r1
90011aa6:	461d      	mov	r5, r3
90011aa8:	f7ff ffb6 	bl	90011a18 <_ZN8touchgfx3HAL3lcdEv>
90011aac:	6803      	ldr	r3, [r0, #0]
90011aae:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90011ab0:	4798      	blx	r3
90011ab2:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
90011ab6:	9007      	str	r0, [sp, #28]
90011ab8:	4631      	mov	r1, r6
90011aba:	6822      	ldr	r2, [r4, #0]
90011abc:	e9cd 0308 	strd	r0, r3, [sp, #32]
90011ac0:	4b0c      	ldr	r3, [pc, #48]	; (90011af4 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
90011ac2:	4620      	mov	r0, r4
90011ac4:	881b      	ldrh	r3, [r3, #0]
90011ac6:	9306      	str	r3, [sp, #24]
90011ac8:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
90011acc:	9305      	str	r3, [sp, #20]
90011ace:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
90011ad2:	9304      	str	r3, [sp, #16]
90011ad4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
90011ad8:	9303      	str	r3, [sp, #12]
90011ada:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
90011ade:	9302      	str	r3, [sp, #8]
90011ae0:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
90011ae4:	e9cd 5300 	strd	r5, r3, [sp]
90011ae8:	463b      	mov	r3, r7
90011aea:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
90011aec:	2200      	movs	r2, #0
90011aee:	47a8      	blx	r5
90011af0:	b00b      	add	sp, #44	; 0x2c
90011af2:	bdf0      	pop	{r4, r5, r6, r7, pc}
90011af4:	2403982e 	.word	0x2403982e

90011af8 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
90011af8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90011afc:	4698      	mov	r8, r3
90011afe:	6803      	ldr	r3, [r0, #0]
90011b00:	b08b      	sub	sp, #44	; 0x2c
90011b02:	4617      	mov	r7, r2
90011b04:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
90011b06:	460e      	mov	r6, r1
90011b08:	4b13      	ldr	r3, [pc, #76]	; (90011b58 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
90011b0a:	4604      	mov	r4, r0
90011b0c:	f8b3 9000 	ldrh.w	r9, [r3]
90011b10:	f7ff ff82 	bl	90011a18 <_ZN8touchgfx3HAL3lcdEv>
90011b14:	6803      	ldr	r3, [r0, #0]
90011b16:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90011b18:	4798      	blx	r3
90011b1a:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
90011b1e:	2200      	movs	r2, #0
90011b20:	4631      	mov	r1, r6
90011b22:	e9cd 0308 	strd	r0, r3, [sp, #32]
90011b26:	2302      	movs	r3, #2
90011b28:	4620      	mov	r0, r4
90011b2a:	e9cd 9306 	strd	r9, r3, [sp, #24]
90011b2e:	2301      	movs	r3, #1
90011b30:	9305      	str	r3, [sp, #20]
90011b32:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
90011b36:	9304      	str	r3, [sp, #16]
90011b38:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
90011b3c:	9303      	str	r3, [sp, #12]
90011b3e:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
90011b42:	9302      	str	r3, [sp, #8]
90011b44:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
90011b48:	e9cd 8300 	strd	r8, r3, [sp]
90011b4c:	463b      	mov	r3, r7
90011b4e:	47a8      	blx	r5
90011b50:	b00b      	add	sp, #44	; 0x2c
90011b52:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90011b56:	bf00      	nop
90011b58:	2403982e 	.word	0x2403982e

90011b5c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
90011b5c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90011b60:	4698      	mov	r8, r3
90011b62:	6803      	ldr	r3, [r0, #0]
90011b64:	b087      	sub	sp, #28
90011b66:	460e      	mov	r6, r1
90011b68:	6d9d      	ldr	r5, [r3, #88]	; 0x58
90011b6a:	4617      	mov	r7, r2
90011b6c:	4b0f      	ldr	r3, [pc, #60]	; (90011bac <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
90011b6e:	4604      	mov	r4, r0
90011b70:	f8b3 9000 	ldrh.w	r9, [r3]
90011b74:	f7ff ff50 	bl	90011a18 <_ZN8touchgfx3HAL3lcdEv>
90011b78:	6803      	ldr	r3, [r0, #0]
90011b7a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90011b7c:	4798      	blx	r3
90011b7e:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
90011b82:	463a      	mov	r2, r7
90011b84:	4631      	mov	r1, r6
90011b86:	f8cd 900c 	str.w	r9, [sp, #12]
90011b8a:	e9cd 0304 	strd	r0, r3, [sp, #16]
90011b8e:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
90011b92:	4620      	mov	r0, r4
90011b94:	9302      	str	r3, [sp, #8]
90011b96:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
90011b9a:	9301      	str	r3, [sp, #4]
90011b9c:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
90011ba0:	9300      	str	r3, [sp, #0]
90011ba2:	4643      	mov	r3, r8
90011ba4:	47a8      	blx	r5
90011ba6:	b007      	add	sp, #28
90011ba8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90011bac:	2403982e 	.word	0x2403982e

90011bb0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
90011bb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90011bb4:	4604      	mov	r4, r0
90011bb6:	b08f      	sub	sp, #60	; 0x3c
90011bb8:	4610      	mov	r0, r2
90011bba:	460d      	mov	r5, r1
90011bbc:	4691      	mov	r9, r2
90011bbe:	461e      	mov	r6, r3
90011bc0:	f007 ff86 	bl	90019ad0 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
90011bc4:	2800      	cmp	r0, #0
90011bc6:	f000 809d 	beq.w	90011d04 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
90011bca:	6823      	ldr	r3, [r4, #0]
90011bcc:	4620      	mov	r0, r4
90011bce:	f8df b198 	ldr.w	fp, [pc, #408]	; 90011d68 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
90011bd2:	f10d 0838 	add.w	r8, sp, #56	; 0x38
90011bd6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90011bd8:	4798      	blx	r3
90011bda:	6823      	ldr	r3, [r4, #0]
90011bdc:	4620      	mov	r0, r4
90011bde:	f8df a18c 	ldr.w	sl, [pc, #396]	; 90011d6c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
90011be2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90011be4:	4798      	blx	r3
90011be6:	f8bb 3000 	ldrh.w	r3, [fp]
90011bea:	4f5c      	ldr	r7, [pc, #368]	; (90011d5c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
90011bec:	9301      	str	r3, [sp, #4]
90011bee:	f8ba 3000 	ldrh.w	r3, [sl]
90011bf2:	f828 9d1c 	strh.w	r9, [r8, #-28]!
90011bf6:	4640      	mov	r0, r8
90011bf8:	9302      	str	r3, [sp, #8]
90011bfa:	883b      	ldrh	r3, [r7, #0]
90011bfc:	9303      	str	r3, [sp, #12]
90011bfe:	4b58      	ldr	r3, [pc, #352]	; (90011d60 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
90011c00:	881a      	ldrh	r2, [r3, #0]
90011c02:	9305      	str	r3, [sp, #20]
90011c04:	9204      	str	r2, [sp, #16]
90011c06:	f007 fff7 	bl	90019bf8 <_ZNK8touchgfx6Bitmap8getWidthEv>
90011c0a:	8038      	strh	r0, [r7, #0]
90011c0c:	4640      	mov	r0, r8
90011c0e:	f008 f827 	bl	90019c60 <_ZNK8touchgfx6Bitmap9getHeightEv>
90011c12:	9b05      	ldr	r3, [sp, #20]
90011c14:	b280      	uxth	r0, r0
90011c16:	8018      	strh	r0, [r3, #0]
90011c18:	4b52      	ldr	r3, [pc, #328]	; (90011d64 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
90011c1a:	781b      	ldrb	r3, [r3, #0]
90011c1c:	2b00      	cmp	r3, #0
90011c1e:	d174      	bne.n	90011d0a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
90011c20:	883b      	ldrh	r3, [r7, #0]
90011c22:	f8aa 0000 	strh.w	r0, [sl]
90011c26:	f8ab 3000 	strh.w	r3, [fp]
90011c2a:	4648      	mov	r0, r9
90011c2c:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
90011c30:	f007 ff4e 	bl	90019ad0 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
90011c34:	2200      	movs	r2, #0
90011c36:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
90011c3a:	4611      	mov	r1, r2
90011c3c:	4628      	mov	r0, r5
90011c3e:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
90011c42:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
90011c46:	f7ff fed9 	bl	900119fc <_ZN8touchgfx8Drawable5setXYEss>
90011c4a:	2301      	movs	r3, #1
90011c4c:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
90011c50:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
90011c54:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
90011c58:	2b00      	cmp	r3, #0
90011c5a:	dd5c      	ble.n	90011d16 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
90011c5c:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
90011c60:	2b00      	cmp	r3, #0
90011c62:	dd58      	ble.n	90011d16 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
90011c64:	462a      	mov	r2, r5
90011c66:	ab0a      	add	r3, sp, #40	; 0x28
90011c68:	f852 0f04 	ldr.w	r0, [r2, #4]!
90011c6c:	6851      	ldr	r1, [r2, #4]
90011c6e:	c303      	stmia	r3!, {r0, r1}
90011c70:	4631      	mov	r1, r6
90011c72:	a80a      	add	r0, sp, #40	; 0x28
90011c74:	f7ff fbec 	bl	90011450 <_ZN8touchgfx4RectaNERKS0_>
90011c78:	4b38      	ldr	r3, [pc, #224]	; (90011d5c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
90011c7a:	2100      	movs	r1, #0
90011c7c:	f9b3 2000 	ldrsh.w	r2, [r3]
90011c80:	4b37      	ldr	r3, [pc, #220]	; (90011d60 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
90011c82:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
90011c86:	aa0a      	add	r2, sp, #40	; 0x28
90011c88:	f9b3 3000 	ldrsh.w	r3, [r3]
90011c8c:	910c      	str	r1, [sp, #48]	; 0x30
90011c8e:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
90011c92:	ab08      	add	r3, sp, #32
90011c94:	e892 0003 	ldmia.w	r2, {r0, r1}
90011c98:	e883 0003 	stmia.w	r3, {r0, r1}
90011c9c:	4618      	mov	r0, r3
90011c9e:	a90c      	add	r1, sp, #48	; 0x30
90011ca0:	f7ff fbd6 	bl	90011450 <_ZN8touchgfx4RectaNERKS0_>
90011ca4:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
90011ca6:	2b00      	cmp	r3, #0
90011ca8:	d13c      	bne.n	90011d24 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
90011caa:	2000      	movs	r0, #0
90011cac:	f884 0058 	strb.w	r0, [r4, #88]	; 0x58
90011cb0:	2600      	movs	r6, #0
90011cb2:	696b      	ldr	r3, [r5, #20]
90011cb4:	a908      	add	r1, sp, #32
90011cb6:	682a      	ldr	r2, [r5, #0]
90011cb8:	4628      	mov	r0, r5
90011cba:	9305      	str	r3, [sp, #20]
90011cbc:	616e      	str	r6, [r5, #20]
90011cbe:	6892      	ldr	r2, [r2, #8]
90011cc0:	4790      	blx	r2
90011cc2:	9b05      	ldr	r3, [sp, #20]
90011cc4:	4652      	mov	r2, sl
90011cc6:	4649      	mov	r1, r9
90011cc8:	616b      	str	r3, [r5, #20]
90011cca:	4628      	mov	r0, r5
90011ccc:	f884 6058 	strb.w	r6, [r4, #88]	; 0x58
90011cd0:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
90011cd4:	f7ff fe92 	bl	900119fc <_ZN8touchgfx8Drawable5setXYEss>
90011cd8:	9a01      	ldr	r2, [sp, #4]
90011cda:	4b23      	ldr	r3, [pc, #140]	; (90011d68 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
90011cdc:	4620      	mov	r0, r4
90011cde:	801a      	strh	r2, [r3, #0]
90011ce0:	9a02      	ldr	r2, [sp, #8]
90011ce2:	4b22      	ldr	r3, [pc, #136]	; (90011d6c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
90011ce4:	801a      	strh	r2, [r3, #0]
90011ce6:	9a03      	ldr	r2, [sp, #12]
90011ce8:	4b1c      	ldr	r3, [pc, #112]	; (90011d5c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
90011cea:	801a      	strh	r2, [r3, #0]
90011cec:	4b1c      	ldr	r3, [pc, #112]	; (90011d60 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
90011cee:	9a04      	ldr	r2, [sp, #16]
90011cf0:	801a      	strh	r2, [r3, #0]
90011cf2:	6823      	ldr	r3, [r4, #0]
90011cf4:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
90011cf8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90011cfa:	4798      	blx	r3
90011cfc:	6823      	ldr	r3, [r4, #0]
90011cfe:	4620      	mov	r0, r4
90011d00:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90011d02:	4798      	blx	r3
90011d04:	b00f      	add	sp, #60	; 0x3c
90011d06:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90011d0a:	883b      	ldrh	r3, [r7, #0]
90011d0c:	f8ab 0000 	strh.w	r0, [fp]
90011d10:	f8aa 3000 	strh.w	r3, [sl]
90011d14:	e789      	b.n	90011c2a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
90011d16:	462a      	mov	r2, r5
90011d18:	ab0a      	add	r3, sp, #40	; 0x28
90011d1a:	f852 0f04 	ldr.w	r0, [r2, #4]!
90011d1e:	6851      	ldr	r1, [r2, #4]
90011d20:	c303      	stmia	r3!, {r0, r1}
90011d22:	e7a9      	b.n	90011c78 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
90011d24:	a807      	add	r0, sp, #28
90011d26:	f008 f8d7 	bl	90019ed8 <_ZNK8touchgfx6Bitmap9getFormatEv>
90011d2a:	4606      	mov	r6, r0
90011d2c:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
90011d2e:	6803      	ldr	r3, [r0, #0]
90011d30:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90011d32:	4798      	blx	r3
90011d34:	4286      	cmp	r6, r0
90011d36:	d1b8      	bne.n	90011caa <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
90011d38:	f7ff fe6e 	bl	90011a18 <_ZN8touchgfx3HAL3lcdEv>
90011d3c:	6803      	ldr	r3, [r0, #0]
90011d3e:	4606      	mov	r6, r0
90011d40:	a807      	add	r0, sp, #28
90011d42:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90011d44:	9305      	str	r3, [sp, #20]
90011d46:	f008 f8c7 	bl	90019ed8 <_ZNK8touchgfx6Bitmap9getFormatEv>
90011d4a:	9b05      	ldr	r3, [sp, #20]
90011d4c:	4601      	mov	r1, r0
90011d4e:	4630      	mov	r0, r6
90011d50:	4798      	blx	r3
90011d52:	f080 0001 	eor.w	r0, r0, #1
90011d56:	b2c0      	uxtb	r0, r0
90011d58:	e7a8      	b.n	90011cac <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
90011d5a:	bf00      	nop
90011d5c:	24039828 	.word	0x24039828
90011d60:	2403982a 	.word	0x2403982a
90011d64:	2403982c 	.word	0x2403982c
90011d68:	2403982e 	.word	0x2403982e
90011d6c:	24039830 	.word	0x24039830

90011d70 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
90011d70:	4b07      	ldr	r3, [pc, #28]	; (90011d90 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
90011d72:	b510      	push	{r4, lr}
90011d74:	781b      	ldrb	r3, [r3, #0]
90011d76:	4604      	mov	r4, r0
90011d78:	b13b      	cbz	r3, 90011d8a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
90011d7a:	6803      	ldr	r3, [r0, #0]
90011d7c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90011d7e:	4798      	blx	r3
90011d80:	6be3      	ldr	r3, [r4, #60]	; 0x3c
90011d82:	4283      	cmp	r3, r0
90011d84:	d101      	bne.n	90011d8a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
90011d86:	6c20      	ldr	r0, [r4, #64]	; 0x40
90011d88:	bd10      	pop	{r4, pc}
90011d8a:	6be0      	ldr	r0, [r4, #60]	; 0x3c
90011d8c:	e7fc      	b.n	90011d88 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
90011d8e:	bf00      	nop
90011d90:	24039832 	.word	0x24039832

90011d94 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
90011d94:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90011d98:	461d      	mov	r5, r3
90011d9a:	b08a      	sub	sp, #40	; 0x28
90011d9c:	f44f 6380 	mov.w	r3, #1024	; 0x400
90011da0:	4690      	mov	r8, r2
90011da2:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
90011da6:	2400      	movs	r4, #0
90011da8:	4607      	mov	r7, r0
90011daa:	fb06 8505 	mla	r5, r6, r5, r8
90011dae:	9404      	str	r4, [sp, #16]
90011db0:	f88d 4020 	strb.w	r4, [sp, #32]
90011db4:	e9cd 3101 	strd	r3, r1, [sp, #4]
90011db8:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
90011dbc:	f8ad 3018 	strh.w	r3, [sp, #24]
90011dc0:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
90011dc4:	f8ad 301a 	strh.w	r3, [sp, #26]
90011dc8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
90011dcc:	f8ad 301c 	strh.w	r3, [sp, #28]
90011dd0:	f7ff ffce 	bl	90011d70 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90011dd4:	eb00 0545 	add.w	r5, r0, r5, lsl #1
90011dd8:	6878      	ldr	r0, [r7, #4]
90011dda:	f8ad 601e 	strh.w	r6, [sp, #30]
90011dde:	a901      	add	r1, sp, #4
90011de0:	9505      	str	r5, [sp, #20]
90011de2:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
90011de6:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
90011dea:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
90011dee:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
90011df2:	6803      	ldr	r3, [r0, #0]
90011df4:	685b      	ldr	r3, [r3, #4]
90011df6:	4798      	blx	r3
90011df8:	b00a      	add	sp, #40	; 0x28
90011dfa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90011dfe <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
90011dfe:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90011e02:	b08b      	sub	sp, #44	; 0x2c
90011e04:	2400      	movs	r4, #0
90011e06:	4691      	mov	r9, r2
90011e08:	461d      	mov	r5, r3
90011e0a:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
90011e0e:	f44f 6300 	mov.w	r3, #2048	; 0x800
90011e12:	4688      	mov	r8, r1
90011e14:	4607      	mov	r7, r0
90011e16:	9404      	str	r4, [sp, #16]
90011e18:	fb06 9505 	mla	r5, r6, r5, r9
90011e1c:	e9cd 3401 	strd	r3, r4, [sp, #4]
90011e20:	f7ff ffa6 	bl	90011d70 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90011e24:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
90011e28:	eb00 0545 	add.w	r5, r0, r5, lsl #1
90011e2c:	6878      	ldr	r0, [r7, #4]
90011e2e:	f8ad 3018 	strh.w	r3, [sp, #24]
90011e32:	a901      	add	r1, sp, #4
90011e34:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
90011e38:	9505      	str	r5, [sp, #20]
90011e3a:	f8ad 301a 	strh.w	r3, [sp, #26]
90011e3e:	f8ad 401c 	strh.w	r4, [sp, #28]
90011e42:	f8ad 601e 	strh.w	r6, [sp, #30]
90011e46:	f8cd 8010 	str.w	r8, [sp, #16]
90011e4a:	f8ad 4020 	strh.w	r4, [sp, #32]
90011e4e:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
90011e52:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
90011e56:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
90011e5a:	6803      	ldr	r3, [r0, #0]
90011e5c:	685b      	ldr	r3, [r3, #4]
90011e5e:	4798      	blx	r3
90011e60:	b00b      	add	sp, #44	; 0x2c
90011e62:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

90011e68 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
90011e68:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90011e6c:	b08a      	sub	sp, #40	; 0x28
90011e6e:	4698      	mov	r8, r3
90011e70:	2300      	movs	r3, #0
90011e72:	4606      	mov	r6, r0
90011e74:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
90011e78:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
90011e7c:	2d0b      	cmp	r5, #11
90011e7e:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
90011e82:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
90011e86:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
90011e8a:	9304      	str	r3, [sp, #16]
90011e8c:	d137      	bne.n	90011efe <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x96>
90011e8e:	2380      	movs	r3, #128	; 0x80
90011e90:	f88d 0020 	strb.w	r0, [sp, #32]
90011e94:	4630      	mov	r0, r6
90011e96:	9203      	str	r2, [sp, #12]
90011e98:	e9cd 3101 	strd	r3, r1, [sp, #4]
90011e9c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
90011ea0:	f8ad 3018 	strh.w	r3, [sp, #24]
90011ea4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
90011ea8:	f8ad 301a 	strh.w	r3, [sp, #26]
90011eac:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
90011eb0:	f8ad 301c 	strh.w	r3, [sp, #28]
90011eb4:	f7ff ff5c 	bl	90011d70 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90011eb8:	2c0b      	cmp	r4, #11
90011eba:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
90011ebe:	f8ad 701e 	strh.w	r7, [sp, #30]
90011ec2:	bf94      	ite	ls
90011ec4:	4b19      	ldrls	r3, [pc, #100]	; (90011f2c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
90011ec6:	2100      	movhi	r1, #0
90011ec8:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
90011ecc:	bf98      	it	ls
90011ece:	5d19      	ldrbls	r1, [r3, r4]
90011ed0:	fb02 8307 	mla	r3, r2, r7, r8
90011ed4:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
90011ed8:	10c9      	asrs	r1, r1, #3
90011eda:	fb01 0003 	mla	r0, r1, r3, r0
90011ede:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
90011ee2:	a901      	add	r1, sp, #4
90011ee4:	9005      	str	r0, [sp, #20]
90011ee6:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
90011eea:	2300      	movs	r3, #0
90011eec:	6870      	ldr	r0, [r6, #4]
90011eee:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
90011ef2:	6803      	ldr	r3, [r0, #0]
90011ef4:	685b      	ldr	r3, [r3, #4]
90011ef6:	4798      	blx	r3
90011ef8:	b00a      	add	sp, #40	; 0x28
90011efa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90011efe:	2d02      	cmp	r5, #2
90011f00:	d109      	bne.n	90011f16 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xae>
90011f02:	28ff      	cmp	r0, #255	; 0xff
90011f04:	d105      	bne.n	90011f12 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xaa>
90011f06:	f1bc 0f00 	cmp.w	ip, #0
90011f0a:	bf14      	ite	ne
90011f0c:	2340      	movne	r3, #64	; 0x40
90011f0e:	2320      	moveq	r3, #32
90011f10:	e7be      	b.n	90011e90 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
90011f12:	2340      	movs	r3, #64	; 0x40
90011f14:	e7bc      	b.n	90011e90 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
90011f16:	28ff      	cmp	r0, #255	; 0xff
90011f18:	d105      	bne.n	90011f26 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xbe>
90011f1a:	f1bc 0f00 	cmp.w	ip, #0
90011f1e:	bf14      	ite	ne
90011f20:	2304      	movne	r3, #4
90011f22:	2301      	moveq	r3, #1
90011f24:	e7b4      	b.n	90011e90 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
90011f26:	2304      	movs	r3, #4
90011f28:	e7b2      	b.n	90011e90 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
90011f2a:	bf00      	nop
90011f2c:	9002b9bc 	.word	0x9002b9bc

90011f30 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
90011f30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90011f34:	b08b      	sub	sp, #44	; 0x2c
90011f36:	461d      	mov	r5, r3
90011f38:	2400      	movs	r4, #0
90011f3a:	4688      	mov	r8, r1
90011f3c:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
90011f40:	4693      	mov	fp, r2
90011f42:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
90011f46:	4607      	mov	r7, r0
90011f48:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
90011f4c:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
90011f50:	9404      	str	r4, [sp, #16]
90011f52:	bf14      	ite	ne
90011f54:	2308      	movne	r3, #8
90011f56:	2302      	moveq	r3, #2
90011f58:	fb05 b50a 	mla	r5, r5, sl, fp
90011f5c:	e9cd 3401 	strd	r3, r4, [sp, #4]
90011f60:	f7ff ff06 	bl	90011d70 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90011f64:	2e0b      	cmp	r6, #11
90011f66:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
90011f6a:	a901      	add	r1, sp, #4
90011f6c:	bf98      	it	ls
90011f6e:	4b13      	ldrls	r3, [pc, #76]	; (90011fbc <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
90011f70:	f8ad a01e 	strh.w	sl, [sp, #30]
90011f74:	bf98      	it	ls
90011f76:	5d9c      	ldrbls	r4, [r3, r6]
90011f78:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
90011f7c:	10e4      	asrs	r4, r4, #3
90011f7e:	f8cd 8010 	str.w	r8, [sp, #16]
90011f82:	f8ad 3018 	strh.w	r3, [sp, #24]
90011f86:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
90011f8a:	fb04 0405 	mla	r4, r4, r5, r0
90011f8e:	6878      	ldr	r0, [r7, #4]
90011f90:	f8ad 301a 	strh.w	r3, [sp, #26]
90011f94:	2300      	movs	r3, #0
90011f96:	9405      	str	r4, [sp, #20]
90011f98:	f8ad 301c 	strh.w	r3, [sp, #28]
90011f9c:	f88d 9020 	strb.w	r9, [sp, #32]
90011fa0:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
90011fa4:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
90011fa8:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
90011fac:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
90011fb0:	6803      	ldr	r3, [r0, #0]
90011fb2:	685b      	ldr	r3, [r3, #4]
90011fb4:	4798      	blx	r3
90011fb6:	b00b      	add	sp, #44	; 0x2c
90011fb8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90011fbc:	9002b9bc 	.word	0x9002b9bc

90011fc0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
90011fc0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90011fc4:	461e      	mov	r6, r3
90011fc6:	4b0a      	ldr	r3, [pc, #40]	; (90011ff0 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
90011fc8:	460f      	mov	r7, r1
90011fca:	4690      	mov	r8, r2
90011fcc:	881d      	ldrh	r5, [r3, #0]
90011fce:	f7ff fd23 	bl	90011a18 <_ZN8touchgfx3HAL3lcdEv>
90011fd2:	6803      	ldr	r3, [r0, #0]
90011fd4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90011fd6:	4798      	blx	r3
90011fd8:	280b      	cmp	r0, #11
90011fda:	bf96      	itet	ls
90011fdc:	4b05      	ldrls	r3, [pc, #20]	; (90011ff4 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
90011fde:	2400      	movhi	r4, #0
90011fe0:	5c1c      	ldrbls	r4, [r3, r0]
90011fe2:	fb08 7005 	mla	r0, r8, r5, r7
90011fe6:	10e4      	asrs	r4, r4, #3
90011fe8:	fb04 6000 	mla	r0, r4, r0, r6
90011fec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90011ff0:	2403982e 	.word	0x2403982e
90011ff4:	9002b9bc 	.word	0x9002b9bc

90011ff8 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
90011ff8:	b5f0      	push	{r4, r5, r6, r7, lr}
90011ffa:	b08b      	sub	sp, #44	; 0x2c
90011ffc:	461f      	mov	r7, r3
90011ffe:	4604      	mov	r4, r0
90012000:	4616      	mov	r6, r2
90012002:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
90012006:	2500      	movs	r5, #0
90012008:	e9cd 3101 	strd	r3, r1, [sp, #4]
9001200c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
90012010:	9504      	str	r5, [sp, #16]
90012012:	f8ad 3018 	strh.w	r3, [sp, #24]
90012016:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
9001201a:	f8ad 301a 	strh.w	r3, [sp, #26]
9001201e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
90012022:	f8ad 301c 	strh.w	r3, [sp, #28]
90012026:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
9001202a:	f88d 3020 	strb.w	r3, [sp, #32]
9001202e:	f7ff fe9f 	bl	90011d70 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90012032:	463a      	mov	r2, r7
90012034:	4631      	mov	r1, r6
90012036:	4603      	mov	r3, r0
90012038:	4620      	mov	r0, r4
9001203a:	f7ff ffc1 	bl	90011fc0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
9001203e:	4b0e      	ldr	r3, [pc, #56]	; (90012078 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
90012040:	9005      	str	r0, [sp, #20]
90012042:	881b      	ldrh	r3, [r3, #0]
90012044:	f8ad 301e 	strh.w	r3, [sp, #30]
90012048:	f7ff fce6 	bl	90011a18 <_ZN8touchgfx3HAL3lcdEv>
9001204c:	6803      	ldr	r3, [r0, #0]
9001204e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90012050:	4798      	blx	r3
90012052:	9b13      	ldr	r3, [sp, #76]	; 0x4c
90012054:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
90012058:	a901      	add	r1, sp, #4
9001205a:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
9001205e:	9304      	str	r3, [sp, #16]
90012060:	6860      	ldr	r0, [r4, #4]
90012062:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
90012066:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
9001206a:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
9001206e:	6803      	ldr	r3, [r0, #0]
90012070:	685b      	ldr	r3, [r3, #4]
90012072:	4798      	blx	r3
90012074:	b00b      	add	sp, #44	; 0x2c
90012076:	bdf0      	pop	{r4, r5, r6, r7, pc}
90012078:	2403982e 	.word	0x2403982e

9001207c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
9001207c:	b5f0      	push	{r4, r5, r6, r7, lr}
9001207e:	b08d      	sub	sp, #52	; 0x34
90012080:	2501      	movs	r5, #1
90012082:	4604      	mov	r4, r0
90012084:	466b      	mov	r3, sp
90012086:	9503      	str	r5, [sp, #12]
90012088:	e883 0006 	stmia.w	r3, {r1, r2}
9001208c:	2300      	movs	r3, #0
9001208e:	f8bd 6000 	ldrh.w	r6, [sp]
90012092:	f8bd 7002 	ldrh.w	r7, [sp, #2]
90012096:	9306      	str	r3, [sp, #24]
90012098:	6803      	ldr	r3, [r0, #0]
9001209a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9001209c:	4798      	blx	r3
9001209e:	463a      	mov	r2, r7
900120a0:	4631      	mov	r1, r6
900120a2:	4603      	mov	r3, r0
900120a4:	4620      	mov	r0, r4
900120a6:	f7ff ff8b 	bl	90011fc0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
900120aa:	6c63      	ldr	r3, [r4, #68]	; 0x44
900120ac:	9004      	str	r0, [sp, #16]
900120ae:	9307      	str	r3, [sp, #28]
900120b0:	f8bd 3004 	ldrh.w	r3, [sp, #4]
900120b4:	f8ad 3020 	strh.w	r3, [sp, #32]
900120b8:	f8bd 3006 	ldrh.w	r3, [sp, #6]
900120bc:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
900120c0:	4b0e      	ldr	r3, [pc, #56]	; (900120fc <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
900120c2:	881b      	ldrh	r3, [r3, #0]
900120c4:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
900120c8:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
900120cc:	f7ff fca4 	bl	90011a18 <_ZN8touchgfx3HAL3lcdEv>
900120d0:	6803      	ldr	r3, [r0, #0]
900120d2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900120d4:	4798      	blx	r3
900120d6:	23ff      	movs	r3, #255	; 0xff
900120d8:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
900120dc:	a903      	add	r1, sp, #12
900120de:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
900120e2:	6860      	ldr	r0, [r4, #4]
900120e4:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
900120e8:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
900120ec:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
900120f0:	6803      	ldr	r3, [r0, #0]
900120f2:	685b      	ldr	r3, [r3, #4]
900120f4:	4798      	blx	r3
900120f6:	6c60      	ldr	r0, [r4, #68]	; 0x44
900120f8:	b00d      	add	sp, #52	; 0x34
900120fa:	bdf0      	pop	{r4, r5, r6, r7, pc}
900120fc:	2403982e 	.word	0x2403982e

90012100 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
90012100:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90012104:	b08c      	sub	sp, #48	; 0x30
90012106:	461e      	mov	r6, r3
90012108:	2300      	movs	r3, #0
9001210a:	4604      	mov	r4, r0
9001210c:	466d      	mov	r5, sp
9001210e:	9306      	str	r3, [sp, #24]
90012110:	6803      	ldr	r3, [r0, #0]
90012112:	e885 0006 	stmia.w	r5, {r1, r2}
90012116:	2501      	movs	r5, #1
90012118:	f8bd 7000 	ldrh.w	r7, [sp]
9001211c:	f8bd 8002 	ldrh.w	r8, [sp, #2]
90012120:	9503      	str	r5, [sp, #12]
90012122:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90012124:	4798      	blx	r3
90012126:	4642      	mov	r2, r8
90012128:	4639      	mov	r1, r7
9001212a:	4603      	mov	r3, r0
9001212c:	4620      	mov	r0, r4
9001212e:	f7ff ff47 	bl	90011fc0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90012132:	f8bd 3004 	ldrh.w	r3, [sp, #4]
90012136:	9004      	str	r0, [sp, #16]
90012138:	f8ad 3020 	strh.w	r3, [sp, #32]
9001213c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
90012140:	9607      	str	r6, [sp, #28]
90012142:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
90012146:	4b10      	ldr	r3, [pc, #64]	; (90012188 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
90012148:	881b      	ldrh	r3, [r3, #0]
9001214a:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
9001214e:	9b12      	ldr	r3, [sp, #72]	; 0x48
90012150:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
90012154:	f7ff fc60 	bl	90011a18 <_ZN8touchgfx3HAL3lcdEv>
90012158:	6803      	ldr	r3, [r0, #0]
9001215a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001215c:	4798      	blx	r3
9001215e:	23ff      	movs	r3, #255	; 0xff
90012160:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
90012164:	a903      	add	r1, sp, #12
90012166:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
9001216a:	6860      	ldr	r0, [r4, #4]
9001216c:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
90012170:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
90012174:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
90012178:	6803      	ldr	r3, [r0, #0]
9001217a:	685b      	ldr	r3, [r3, #4]
9001217c:	4798      	blx	r3
9001217e:	4630      	mov	r0, r6
90012180:	b00c      	add	sp, #48	; 0x30
90012182:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90012186:	bf00      	nop
90012188:	2403982e 	.word	0x2403982e

9001218c <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
9001218c:	b5f0      	push	{r4, r5, r6, r7, lr}
9001218e:	b085      	sub	sp, #20
90012190:	4605      	mov	r5, r0
90012192:	ac02      	add	r4, sp, #8
90012194:	e884 0006 	stmia.w	r4, {r1, r2}
90012198:	f8bd 6008 	ldrh.w	r6, [sp, #8]
9001219c:	f8bd 700a 	ldrh.w	r7, [sp, #10]
900121a0:	f7ff fde6 	bl	90011d70 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
900121a4:	4631      	mov	r1, r6
900121a6:	4603      	mov	r3, r0
900121a8:	463a      	mov	r2, r7
900121aa:	4628      	mov	r0, r5
900121ac:	f7ff ff08 	bl	90011fc0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
900121b0:	4a05      	ldr	r2, [pc, #20]	; (900121c8 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
900121b2:	682b      	ldr	r3, [r5, #0]
900121b4:	8812      	ldrh	r2, [r2, #0]
900121b6:	9200      	str	r2, [sp, #0]
900121b8:	6ede      	ldr	r6, [r3, #108]	; 0x6c
900121ba:	4603      	mov	r3, r0
900121bc:	4628      	mov	r0, r5
900121be:	e894 0006 	ldmia.w	r4, {r1, r2}
900121c2:	47b0      	blx	r6
900121c4:	b005      	add	sp, #20
900121c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
900121c8:	2403982e 	.word	0x2403982e

900121cc <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
900121cc:	b570      	push	{r4, r5, r6, lr}
900121ce:	f890 306e 	ldrb.w	r3, [r0, #110]	; 0x6e
900121d2:	4604      	mov	r4, r0
900121d4:	b19b      	cbz	r3, 900121fe <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
900121d6:	2002      	movs	r0, #2
900121d8:	f7ee fa24 	bl	90000624 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
900121dc:	2300      	movs	r3, #0
900121de:	4620      	mov	r0, r4
900121e0:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
900121e4:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
900121e8:	6823      	ldr	r3, [r4, #0]
900121ea:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
900121ee:	f7ff fdbf 	bl	90011d70 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
900121f2:	4601      	mov	r1, r0
900121f4:	4620      	mov	r0, r4
900121f6:	462b      	mov	r3, r5
900121f8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900121fc:	4718      	bx	r3
900121fe:	bd70      	pop	{r4, r5, r6, pc}

90012200 <_ZN8touchgfx3HAL12setMCUActiveEb>:
90012200:	b570      	push	{r4, r5, r6, lr}
90012202:	4605      	mov	r5, r0
90012204:	460c      	mov	r4, r1
90012206:	2003      	movs	r0, #3
90012208:	b149      	cbz	r1, 9001221e <_ZN8touchgfx3HAL12setMCUActiveEb+0x1e>
9001220a:	f7ee f9a3 	bl	90000554 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
9001220e:	6928      	ldr	r0, [r5, #16]
90012210:	b168      	cbz	r0, 9001222e <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
90012212:	6803      	ldr	r3, [r0, #0]
90012214:	2101      	movs	r1, #1
90012216:	695b      	ldr	r3, [r3, #20]
90012218:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001221c:	4718      	bx	r3
9001221e:	f7ee f9cd 	bl	900005bc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
90012222:	6928      	ldr	r0, [r5, #16]
90012224:	b118      	cbz	r0, 9001222e <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
90012226:	6803      	ldr	r3, [r0, #0]
90012228:	4621      	mov	r1, r4
9001222a:	695b      	ldr	r3, [r3, #20]
9001222c:	e7f4      	b.n	90012218 <_ZN8touchgfx3HAL12setMCUActiveEb+0x18>
9001222e:	bd70      	pop	{r4, r5, r6, pc}

90012230 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
90012230:	b538      	push	{r3, r4, r5, lr}
90012232:	f890 307b 	ldrb.w	r3, [r0, #123]	; 0x7b
90012236:	4604      	mov	r4, r0
90012238:	460d      	mov	r5, r1
9001223a:	428b      	cmp	r3, r1
9001223c:	d006      	beq.n	9001224c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
9001223e:	6803      	ldr	r3, [r0, #0]
90012240:	b929      	cbnz	r1, 9001224e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
90012242:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
90012246:	4798      	blx	r3
90012248:	f884 507b 	strb.w	r5, [r4, #123]	; 0x7b
9001224c:	bd38      	pop	{r3, r4, r5, pc}
9001224e:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
90012252:	e7f8      	b.n	90012246 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

90012254 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
90012254:	4b0d      	ldr	r3, [pc, #52]	; (9001228c <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
90012256:	b510      	push	{r4, lr}
90012258:	781b      	ldrb	r3, [r3, #0]
9001225a:	4604      	mov	r4, r0
9001225c:	b95b      	cbnz	r3, 90012276 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
9001225e:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
90012262:	2b02      	cmp	r3, #2
90012264:	d007      	beq.n	90012276 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
90012266:	6840      	ldr	r0, [r0, #4]
90012268:	f000 f91a 	bl	900124a0 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
9001226c:	b118      	cbz	r0, 90012276 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
9001226e:	6862      	ldr	r2, [r4, #4]
90012270:	7a53      	ldrb	r3, [r2, #9]
90012272:	2b00      	cmp	r3, #0
90012274:	d0fc      	beq.n	90012270 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
90012276:	f7ef fb07 	bl	90001888 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
9001227a:	4620      	mov	r0, r4
9001227c:	2100      	movs	r1, #0
9001227e:	f7ff ffd7 	bl	90012230 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
90012282:	4620      	mov	r0, r4
90012284:	f7ff fd74 	bl	90011d70 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90012288:	bd10      	pop	{r4, pc}
9001228a:	bf00      	nop
9001228c:	24039832 	.word	0x24039832

90012290 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
90012290:	b570      	push	{r4, r5, r6, lr}
90012292:	4604      	mov	r4, r0
90012294:	6803      	ldr	r3, [r0, #0]
90012296:	b919      	cbnz	r1, 900122a0 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
90012298:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001229a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001229e:	4718      	bx	r3
900122a0:	2200      	movs	r2, #0
900122a2:	f890 607b 	ldrb.w	r6, [r0, #123]	; 0x7b
900122a6:	f880 207b 	strb.w	r2, [r0, #123]	; 0x7b
900122aa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
900122ac:	4798      	blx	r3
900122ae:	6863      	ldr	r3, [r4, #4]
900122b0:	2101      	movs	r1, #1
900122b2:	4605      	mov	r5, r0
900122b4:	4620      	mov	r0, r4
900122b6:	7299      	strb	r1, [r3, #10]
900122b8:	f884 607b 	strb.w	r6, [r4, #123]	; 0x7b
900122bc:	f7ff ffb8 	bl	90012230 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
900122c0:	4628      	mov	r0, r5
900122c2:	bd70      	pop	{r4, r5, r6, pc}

900122c4 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
900122c4:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
900122c8:	1a13      	subs	r3, r2, r0
900122ca:	4258      	negs	r0, r3
900122cc:	4158      	adcs	r0, r3
900122ce:	4770      	bx	lr

900122d0 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
900122d0:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
900122d4:	1a9b      	subs	r3, r3, r2
900122d6:	2b00      	cmp	r3, #0
900122d8:	bfdc      	itt	le
900122da:	6882      	ldrle	r2, [r0, #8]
900122dc:	189b      	addle	r3, r3, r2
900122de:	2b01      	cmp	r3, #1
900122e0:	bfcc      	ite	gt
900122e2:	2000      	movgt	r0, #0
900122e4:	2001      	movle	r0, #1
900122e6:	4770      	bx	lr

900122e8 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
900122e8:	6902      	ldr	r2, [r0, #16]
900122ea:	6843      	ldr	r3, [r0, #4]
900122ec:	2024      	movs	r0, #36	; 0x24
900122ee:	fb00 3002 	mla	r0, r0, r2, r3
900122f2:	4770      	bx	lr

900122f4 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
900122f4:	6803      	ldr	r3, [r0, #0]
900122f6:	691b      	ldr	r3, [r3, #16]
900122f8:	4718      	bx	r3

900122fa <_ZN8touchgfx13DMA_Interface7executeEv>:
900122fa:	2301      	movs	r3, #1
900122fc:	b570      	push	{r4, r5, r6, lr}
900122fe:	7203      	strb	r3, [r0, #8]
90012300:	4604      	mov	r4, r0
90012302:	6840      	ldr	r0, [r0, #4]
90012304:	6803      	ldr	r3, [r0, #0]
90012306:	699b      	ldr	r3, [r3, #24]
90012308:	4798      	blx	r3
9001230a:	6803      	ldr	r3, [r0, #0]
9001230c:	4605      	mov	r5, r0
9001230e:	2b40      	cmp	r3, #64	; 0x40
90012310:	d00c      	beq.n	9001232c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90012312:	d810      	bhi.n	90012336 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
90012314:	2b04      	cmp	r3, #4
90012316:	d01d      	beq.n	90012354 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
90012318:	d804      	bhi.n	90012324 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
9001231a:	2b01      	cmp	r3, #1
9001231c:	d006      	beq.n	9001232c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
9001231e:	2b02      	cmp	r3, #2
90012320:	d02c      	beq.n	9001237c <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
90012322:	bd70      	pop	{r4, r5, r6, pc}
90012324:	2b08      	cmp	r3, #8
90012326:	d01d      	beq.n	90012364 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
90012328:	2b20      	cmp	r3, #32
9001232a:	d1fa      	bne.n	90012322 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
9001232c:	6823      	ldr	r3, [r4, #0]
9001232e:	4620      	mov	r0, r4
90012330:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90012332:	4798      	blx	r3
90012334:	e013      	b.n	9001235e <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
90012336:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
9001233a:	d0f7      	beq.n	9001232c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
9001233c:	d804      	bhi.n	90012348 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
9001233e:	2b80      	cmp	r3, #128	; 0x80
90012340:	d0f4      	beq.n	9001232c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90012342:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
90012346:	e7f0      	b.n	9001232a <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
90012348:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
9001234c:	d0ee      	beq.n	9001232c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
9001234e:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
90012352:	e7e5      	b.n	90012320 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
90012354:	6823      	ldr	r3, [r4, #0]
90012356:	7f01      	ldrb	r1, [r0, #28]
90012358:	4620      	mov	r0, r4
9001235a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001235c:	4798      	blx	r3
9001235e:	6823      	ldr	r3, [r4, #0]
90012360:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90012362:	e006      	b.n	90012372 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
90012364:	6823      	ldr	r3, [r4, #0]
90012366:	7f01      	ldrb	r1, [r0, #28]
90012368:	4620      	mov	r0, r4
9001236a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001236c:	4798      	blx	r3
9001236e:	6823      	ldr	r3, [r4, #0]
90012370:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90012372:	4629      	mov	r1, r5
90012374:	4620      	mov	r0, r4
90012376:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001237a:	4718      	bx	r3
9001237c:	6823      	ldr	r3, [r4, #0]
9001237e:	4620      	mov	r0, r4
90012380:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90012382:	4798      	blx	r3
90012384:	e7f3      	b.n	9001236e <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

90012386 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
90012386:	4770      	bx	lr

90012388 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
90012388:	4770      	bx	lr

9001238a <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
9001238a:	4770      	bx	lr

9001238c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
9001238c:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
90012390:	b510      	push	{r4, lr}
90012392:	1ad2      	subs	r2, r2, r3
90012394:	2a00      	cmp	r2, #0
90012396:	bfdc      	itt	le
90012398:	6884      	ldrle	r4, [r0, #8]
9001239a:	1912      	addle	r2, r2, r4
9001239c:	2a01      	cmp	r2, #1
9001239e:	dd16      	ble.n	900123ce <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
900123a0:	6842      	ldr	r2, [r0, #4]
900123a2:	2424      	movs	r4, #36	; 0x24
900123a4:	fb04 2303 	mla	r3, r4, r3, r2
900123a8:	f101 0220 	add.w	r2, r1, #32
900123ac:	f851 4b04 	ldr.w	r4, [r1], #4
900123b0:	4291      	cmp	r1, r2
900123b2:	f843 4b04 	str.w	r4, [r3], #4
900123b6:	d1f9      	bne.n	900123ac <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
900123b8:	780a      	ldrb	r2, [r1, #0]
900123ba:	701a      	strb	r2, [r3, #0]
900123bc:	68c3      	ldr	r3, [r0, #12]
900123be:	6882      	ldr	r2, [r0, #8]
900123c0:	f3bf 8f5b 	dmb	ish
900123c4:	3301      	adds	r3, #1
900123c6:	429a      	cmp	r2, r3
900123c8:	bfd8      	it	le
900123ca:	1a9b      	suble	r3, r3, r2
900123cc:	60c3      	str	r3, [r0, #12]
900123ce:	bd10      	pop	{r4, pc}

900123d0 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
900123d0:	6903      	ldr	r3, [r0, #16]
900123d2:	6882      	ldr	r2, [r0, #8]
900123d4:	f3bf 8f5b 	dmb	ish
900123d8:	3301      	adds	r3, #1
900123da:	429a      	cmp	r2, r3
900123dc:	bfd8      	it	le
900123de:	1a9b      	suble	r3, r3, r2
900123e0:	6103      	str	r3, [r0, #16]
900123e2:	4770      	bx	lr

900123e4 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
900123e4:	b570      	push	{r4, r5, r6, lr}
900123e6:	4604      	mov	r4, r0
900123e8:	460e      	mov	r6, r1
900123ea:	6860      	ldr	r0, [r4, #4]
900123ec:	6803      	ldr	r3, [r0, #0]
900123ee:	685b      	ldr	r3, [r3, #4]
900123f0:	4798      	blx	r3
900123f2:	2800      	cmp	r0, #0
900123f4:	d1f9      	bne.n	900123ea <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
900123f6:	4d0d      	ldr	r5, [pc, #52]	; (9001242c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
900123f8:	6828      	ldr	r0, [r5, #0]
900123fa:	6803      	ldr	r3, [r0, #0]
900123fc:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
900123fe:	4798      	blx	r3
90012400:	f7ef fa50 	bl	900018a4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
90012404:	6828      	ldr	r0, [r5, #0]
90012406:	2101      	movs	r1, #1
90012408:	f7ff ff12 	bl	90012230 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
9001240c:	6860      	ldr	r0, [r4, #4]
9001240e:	4631      	mov	r1, r6
90012410:	6803      	ldr	r3, [r0, #0]
90012412:	689b      	ldr	r3, [r3, #8]
90012414:	4798      	blx	r3
90012416:	6823      	ldr	r3, [r4, #0]
90012418:	4620      	mov	r0, r4
9001241a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001241c:	4798      	blx	r3
9001241e:	6828      	ldr	r0, [r5, #0]
90012420:	6803      	ldr	r3, [r0, #0]
90012422:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90012426:	6f9b      	ldr	r3, [r3, #120]	; 0x78
90012428:	4718      	bx	r3
9001242a:	bf00      	nop
9001242c:	24039834 	.word	0x24039834

90012430 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
90012430:	b508      	push	{r3, lr}
90012432:	f7ef fa29 	bl	90001888 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
90012436:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
9001243a:	f7ef ba2d 	b.w	90001898 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

9001243e <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
9001243e:	b510      	push	{r4, lr}
90012440:	4604      	mov	r4, r0
90012442:	2114      	movs	r1, #20
90012444:	f015 fb6c 	bl	90027b20 <_ZdlPvj>
90012448:	4620      	mov	r0, r4
9001244a:	bd10      	pop	{r4, pc}

9001244c <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
9001244c:	b570      	push	{r4, r5, r6, lr}
9001244e:	4604      	mov	r4, r0
90012450:	6840      	ldr	r0, [r0, #4]
90012452:	6803      	ldr	r3, [r0, #0]
90012454:	681b      	ldr	r3, [r3, #0]
90012456:	4798      	blx	r3
90012458:	4605      	mov	r5, r0
9001245a:	b930      	cbnz	r0, 9001246a <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
9001245c:	7a23      	ldrb	r3, [r4, #8]
9001245e:	b123      	cbz	r3, 9001246a <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
90012460:	6860      	ldr	r0, [r4, #4]
90012462:	6803      	ldr	r3, [r0, #0]
90012464:	695b      	ldr	r3, [r3, #20]
90012466:	4798      	blx	r3
90012468:	7225      	strb	r5, [r4, #8]
9001246a:	6860      	ldr	r0, [r4, #4]
9001246c:	6803      	ldr	r3, [r0, #0]
9001246e:	681b      	ldr	r3, [r3, #0]
90012470:	4798      	blx	r3
90012472:	b928      	cbnz	r0, 90012480 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
90012474:	6823      	ldr	r3, [r4, #0]
90012476:	4620      	mov	r0, r4
90012478:	6a5b      	ldr	r3, [r3, #36]	; 0x24
9001247a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001247e:	4718      	bx	r3
90012480:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90012484:	f7ef ba16 	b.w	900018b4 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

90012488 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
90012488:	b510      	push	{r4, lr}
9001248a:	6082      	str	r2, [r0, #8]
9001248c:	2200      	movs	r2, #0
9001248e:	4c03      	ldr	r4, [pc, #12]	; (9001249c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
90012490:	e9c0 2203 	strd	r2, r2, [r0, #12]
90012494:	e9c0 4100 	strd	r4, r1, [r0]
90012498:	bd10      	pop	{r4, pc}
9001249a:	bf00      	nop
9001249c:	9002b9d0 	.word	0x9002b9d0

900124a0 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
900124a0:	6840      	ldr	r0, [r0, #4]
900124a2:	6803      	ldr	r3, [r0, #0]
900124a4:	681b      	ldr	r3, [r3, #0]
900124a6:	4718      	bx	r3

900124a8 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
900124a8:	094a      	lsrs	r2, r1, #5
900124aa:	4b06      	ldr	r3, [pc, #24]	; (900124c4 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
900124ac:	60c1      	str	r1, [r0, #12]
900124ae:	ea03 2311 	and.w	r3, r3, r1, lsr #8
900124b2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
900124b6:	f3c1 01c4 	ubfx	r1, r1, #3, #5
900124ba:	4313      	orrs	r3, r2
900124bc:	4319      	orrs	r1, r3
900124be:	8201      	strh	r1, [r0, #16]
900124c0:	4770      	bx	lr
900124c2:	bf00      	nop
900124c4:	fffff800 	.word	0xfffff800

900124c8 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
900124c8:	f1a0 0008 	sub.w	r0, r0, #8
900124cc:	e7ec      	b.n	900124a8 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
900124ce:	bf00      	nop

900124d0 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
900124d0:	b508      	push	{r3, lr}
900124d2:	4b05      	ldr	r3, [pc, #20]	; (900124e8 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
900124d4:	6818      	ldr	r0, [r3, #0]
900124d6:	6803      	ldr	r3, [r0, #0]
900124d8:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
900124dc:	4798      	blx	r3
900124de:	1e43      	subs	r3, r0, #1
900124e0:	4258      	negs	r0, r3
900124e2:	4158      	adcs	r0, r3
900124e4:	bd08      	pop	{r3, pc}
900124e6:	bf00      	nop
900124e8:	24039834 	.word	0x24039834

900124ec <_ZN8touchgfx13PainterRGB565D1Ev>:
900124ec:	4770      	bx	lr

900124ee <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
900124ee:	3808      	subs	r0, #8
900124f0:	4770      	bx	lr

900124f2 <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
900124f2:	b430      	push	{r4, r5}
900124f4:	eb01 0442 	add.w	r4, r1, r2, lsl #1
900124f8:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
900124fc:	8a02      	ldrh	r2, [r0, #16]
900124fe:	f89d 3010 	ldrb.w	r3, [sp, #16]
90012502:	4629      	mov	r1, r5
90012504:	9202      	str	r2, [sp, #8]
90012506:	68c2      	ldr	r2, [r0, #12]
90012508:	4620      	mov	r0, r4
9001250a:	bc30      	pop	{r4, r5}
9001250c:	f7ef bca8 	b.w	90001e60 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

90012510 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
90012510:	f7ef bc9c 	b.w	90001e4c <_ZN8touchgfx5paint8tearDownEv>

90012514 <_ZN8touchgfx13PainterRGB565D0Ev>:
90012514:	b510      	push	{r4, lr}
90012516:	4604      	mov	r4, r0
90012518:	2114      	movs	r1, #20
9001251a:	f015 fb01 	bl	90027b20 <_ZdlPvj>
9001251e:	4620      	mov	r0, r4
90012520:	bd10      	pop	{r4, pc}

90012522 <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
90012522:	f1a0 0008 	sub.w	r0, r0, #8
90012526:	e7f5      	b.n	90012514 <_ZN8touchgfx13PainterRGB565D0Ev>

90012528 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
90012528:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
9001252a:	6803      	ldr	r3, [r0, #0]
9001252c:	460d      	mov	r5, r1
9001252e:	4604      	mov	r4, r0
90012530:	4601      	mov	r1, r0
90012532:	6e9b      	ldr	r3, [r3, #104]	; 0x68
90012534:	a802      	add	r0, sp, #8
90012536:	4798      	blx	r3
90012538:	6828      	ldr	r0, [r5, #0]
9001253a:	6869      	ldr	r1, [r5, #4]
9001253c:	466b      	mov	r3, sp
9001253e:	c303      	stmia	r3!, {r0, r1}
90012540:	4668      	mov	r0, sp
90012542:	4619      	mov	r1, r3
90012544:	f7fe ff84 	bl	90011450 <_ZN8touchgfx4RectaNERKS0_>
90012548:	6aa0      	ldr	r0, [r4, #40]	; 0x28
9001254a:	b188      	cbz	r0, 90012570 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
9001254c:	6803      	ldr	r3, [r0, #0]
9001254e:	1d21      	adds	r1, r4, #4
90012550:	68db      	ldr	r3, [r3, #12]
90012552:	4798      	blx	r3
90012554:	b160      	cbz	r0, 90012570 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90012556:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
9001255a:	2b00      	cmp	r3, #0
9001255c:	dd08      	ble.n	90012570 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
9001255e:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
90012562:	2d00      	cmp	r5, #0
90012564:	dd04      	ble.n	90012570 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90012566:	4a2b      	ldr	r2, [pc, #172]	; (90012614 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
90012568:	7812      	ldrb	r2, [r2, #0]
9001256a:	b11a      	cbz	r2, 90012574 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
9001256c:	2a01      	cmp	r2, #1
9001256e:	d029      	beq.n	900125c4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
90012570:	b004      	add	sp, #16
90012572:	bd70      	pop	{r4, r5, r6, pc}
90012574:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90012578:	441d      	add	r5, r3
9001257a:	b2ad      	uxth	r5, r5
9001257c:	b22e      	sxth	r6, r5
9001257e:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
90012582:	42b3      	cmp	r3, r6
90012584:	daf4      	bge.n	90012570 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90012586:	6823      	ldr	r3, [r4, #0]
90012588:	4669      	mov	r1, sp
9001258a:	4620      	mov	r0, r4
9001258c:	6edb      	ldr	r3, [r3, #108]	; 0x6c
9001258e:	4798      	blx	r3
90012590:	b940      	cbnz	r0, 900125a4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
90012592:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
90012596:	2b01      	cmp	r3, #1
90012598:	d004      	beq.n	900125a4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
9001259a:	3301      	adds	r3, #1
9001259c:	105b      	asrs	r3, r3, #1
9001259e:	f8ad 3006 	strh.w	r3, [sp, #6]
900125a2:	e7f0      	b.n	90012586 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
900125a4:	f8bd 2006 	ldrh.w	r2, [sp, #6]
900125a8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
900125ac:	4413      	add	r3, r2
900125ae:	b29b      	uxth	r3, r3
900125b0:	441a      	add	r2, r3
900125b2:	f8ad 3002 	strh.w	r3, [sp, #2]
900125b6:	b212      	sxth	r2, r2
900125b8:	4296      	cmp	r6, r2
900125ba:	dae0      	bge.n	9001257e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
900125bc:	1aeb      	subs	r3, r5, r3
900125be:	f8ad 3006 	strh.w	r3, [sp, #6]
900125c2:	e7dc      	b.n	9001257e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
900125c4:	f8bd 5000 	ldrh.w	r5, [sp]
900125c8:	441d      	add	r5, r3
900125ca:	b2ad      	uxth	r5, r5
900125cc:	b22e      	sxth	r6, r5
900125ce:	f9bd 3000 	ldrsh.w	r3, [sp]
900125d2:	42b3      	cmp	r3, r6
900125d4:	dacc      	bge.n	90012570 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
900125d6:	6823      	ldr	r3, [r4, #0]
900125d8:	4669      	mov	r1, sp
900125da:	4620      	mov	r0, r4
900125dc:	6edb      	ldr	r3, [r3, #108]	; 0x6c
900125de:	4798      	blx	r3
900125e0:	b940      	cbnz	r0, 900125f4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
900125e2:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
900125e6:	2b01      	cmp	r3, #1
900125e8:	d004      	beq.n	900125f4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
900125ea:	3301      	adds	r3, #1
900125ec:	105b      	asrs	r3, r3, #1
900125ee:	f8ad 3004 	strh.w	r3, [sp, #4]
900125f2:	e7f0      	b.n	900125d6 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
900125f4:	f8bd 2004 	ldrh.w	r2, [sp, #4]
900125f8:	f8bd 3000 	ldrh.w	r3, [sp]
900125fc:	4413      	add	r3, r2
900125fe:	b29b      	uxth	r3, r3
90012600:	441a      	add	r2, r3
90012602:	f8ad 3000 	strh.w	r3, [sp]
90012606:	b212      	sxth	r2, r2
90012608:	4296      	cmp	r6, r2
9001260a:	dae0      	bge.n	900125ce <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
9001260c:	1aeb      	subs	r3, r5, r3
9001260e:	f8ad 3004 	strh.w	r3, [sp, #4]
90012612:	e7dc      	b.n	900125ce <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
90012614:	2403982c 	.word	0x2403982c

90012618 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
90012618:	b51f      	push	{r0, r1, r2, r3, r4, lr}
9001261a:	6803      	ldr	r3, [r0, #0]
9001261c:	4604      	mov	r4, r0
9001261e:	4601      	mov	r1, r0
90012620:	4668      	mov	r0, sp
90012622:	6e9b      	ldr	r3, [r3, #104]	; 0x68
90012624:	4798      	blx	r3
90012626:	2100      	movs	r1, #0
90012628:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
9001262c:	4668      	mov	r0, sp
9001262e:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
90012632:	9102      	str	r1, [sp, #8]
90012634:	a902      	add	r1, sp, #8
90012636:	f8ad 200c 	strh.w	r2, [sp, #12]
9001263a:	f8ad 300e 	strh.w	r3, [sp, #14]
9001263e:	f7fe ff07 	bl	90011450 <_ZN8touchgfx4RectaNERKS0_>
90012642:	6823      	ldr	r3, [r4, #0]
90012644:	4669      	mov	r1, sp
90012646:	4620      	mov	r0, r4
90012648:	691b      	ldr	r3, [r3, #16]
9001264a:	4798      	blx	r3
9001264c:	b004      	add	sp, #16
9001264e:	bd10      	pop	{r4, pc}

90012650 <_ZN8touchgfx12CanvasWidgetC1Ev>:
90012650:	2101      	movs	r1, #1
90012652:	2200      	movs	r2, #0
90012654:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
90012658:	490a      	ldr	r1, [pc, #40]	; (90012684 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
9001265a:	8082      	strh	r2, [r0, #4]
9001265c:	6001      	str	r1, [r0, #0]
9001265e:	21ff      	movs	r1, #255	; 0xff
90012660:	80c2      	strh	r2, [r0, #6]
90012662:	8102      	strh	r2, [r0, #8]
90012664:	8142      	strh	r2, [r0, #10]
90012666:	8182      	strh	r2, [r0, #12]
90012668:	81c2      	strh	r2, [r0, #14]
9001266a:	8202      	strh	r2, [r0, #16]
9001266c:	8242      	strh	r2, [r0, #18]
9001266e:	61c2      	str	r2, [r0, #28]
90012670:	8402      	strh	r2, [r0, #32]
90012672:	8442      	strh	r2, [r0, #34]	; 0x22
90012674:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
90012678:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
9001267c:	6282      	str	r2, [r0, #40]	; 0x28
9001267e:	e9c0 2205 	strd	r2, r2, [r0, #20]
90012682:	4770      	bx	lr
90012684:	9002ba2c 	.word	0x9002ba2c

90012688 <_ZNK8touchgfx4Line14getMinimalRectEv>:
90012688:	f101 0364 	add.w	r3, r1, #100	; 0x64
9001268c:	4602      	mov	r2, r0
9001268e:	cb03      	ldmia	r3!, {r0, r1}
90012690:	6010      	str	r0, [r2, #0]
90012692:	4610      	mov	r0, r2
90012694:	6051      	str	r1, [r2, #4]
90012696:	4770      	bx	lr

90012698 <_ZN8touchgfx4LineD1Ev>:
90012698:	4770      	bx	lr

9001269a <_ZN8touchgfx4LineD0Ev>:
9001269a:	b510      	push	{r4, lr}
9001269c:	4604      	mov	r4, r0
9001269e:	2170      	movs	r1, #112	; 0x70
900126a0:	f015 fa3e 	bl	90027b20 <_ZdlPvj>
900126a4:	4620      	mov	r0, r4
900126a6:	bd10      	pop	{r4, pc}

900126a8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
900126a8:	b507      	push	{r0, r1, r2, lr}
900126aa:	f44f 4200 	mov.w	r2, #32768	; 0x8000
900126ae:	ab01      	add	r3, sp, #4
900126b0:	6809      	ldr	r1, [r1, #0]
900126b2:	6800      	ldr	r0, [r0, #0]
900126b4:	f005 fb64 	bl	90017d80 <_ZN8touchgfx6muldivElllRl>
900126b8:	b003      	add	sp, #12
900126ba:	f85d fb04 	ldr.w	pc, [sp], #4

900126be <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
900126be:	6800      	ldr	r0, [r0, #0]
900126c0:	2800      	cmp	r0, #0
900126c2:	bfb9      	ittee	lt
900126c4:	2320      	movlt	r3, #32
900126c6:	fb90 f0f3 	sdivlt	r0, r0, r3
900126ca:	301f      	addge	r0, #31
900126cc:	1140      	asrge	r0, r0, #5
900126ce:	4770      	bx	lr

900126d0 <_ZNK8touchgfx4Line17invalidateContentEv>:
900126d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900126d4:	f890 3026 	ldrb.w	r3, [r0, #38]	; 0x26
900126d8:	b089      	sub	sp, #36	; 0x24
900126da:	4604      	mov	r4, r0
900126dc:	b353      	cbz	r3, 90012734 <_ZNK8touchgfx4Line17invalidateContentEv+0x64>
900126de:	6803      	ldr	r3, [r0, #0]
900126e0:	4601      	mov	r1, r0
900126e2:	a802      	add	r0, sp, #8
900126e4:	6e9b      	ldr	r3, [r3, #104]	; 0x68
900126e6:	4798      	blx	r3
900126e8:	2220      	movs	r2, #32
900126ea:	f8d4 a02c 	ldr.w	sl, [r4, #44]	; 0x2c
900126ee:	6b61      	ldr	r1, [r4, #52]	; 0x34
900126f0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
900126f2:	f8d4 b000 	ldr.w	fp, [r4]
900126f6:	fb9a f0f2 	sdiv	r0, sl, r2
900126fa:	fb91 f5f2 	sdiv	r5, r1, r2
900126fe:	fb93 f6f2 	sdiv	r6, r3, r2
90012702:	1b40      	subs	r0, r0, r5
90012704:	0076      	lsls	r6, r6, #1
90012706:	2800      	cmp	r0, #0
90012708:	bfb8      	it	lt
9001270a:	4240      	neglt	r0, r0
9001270c:	4286      	cmp	r6, r0
9001270e:	dc0c      	bgt.n	9001272a <_ZNK8touchgfx4Line17invalidateContentEv+0x5a>
90012710:	6b25      	ldr	r5, [r4, #48]	; 0x30
90012712:	f8d4 8038 	ldr.w	r8, [r4, #56]	; 0x38
90012716:	fb95 f0f2 	sdiv	r0, r5, r2
9001271a:	fb98 f7f2 	sdiv	r7, r8, r2
9001271e:	1bc0      	subs	r0, r0, r7
90012720:	2800      	cmp	r0, #0
90012722:	bfb8      	it	lt
90012724:	4240      	neglt	r0, r0
90012726:	4286      	cmp	r6, r0
90012728:	dd07      	ble.n	9001273a <_ZNK8touchgfx4Line17invalidateContentEv+0x6a>
9001272a:	f8db 3010 	ldr.w	r3, [fp, #16]
9001272e:	a902      	add	r1, sp, #8
90012730:	4620      	mov	r0, r4
90012732:	4798      	blx	r3
90012734:	b009      	add	sp, #36	; 0x24
90012736:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001273a:	eb01 060a 	add.w	r6, r1, sl
9001273e:	2002      	movs	r0, #2
90012740:	eb08 0705 	add.w	r7, r8, r5
90012744:	3301      	adds	r3, #1
90012746:	f10d 0920 	add.w	r9, sp, #32
9001274a:	9101      	str	r1, [sp, #4]
9001274c:	eb03 0343 	add.w	r3, r3, r3, lsl #1
90012750:	fb96 f6f0 	sdiv	r6, r6, r0
90012754:	fb97 f7f0 	sdiv	r7, r7, r0
90012758:	4103      	asrs	r3, r0
9001275a:	b236      	sxth	r6, r6
9001275c:	b23f      	sxth	r7, r7
9001275e:	f849 3d08 	str.w	r3, [r9, #-8]!
90012762:	4648      	mov	r0, r9
90012764:	fb96 f6f2 	sdiv	r6, r6, r2
90012768:	fb97 f7f2 	sdiv	r7, r7, r2
9001276c:	f7ff ffa7 	bl	900126be <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
90012770:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
90012774:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
90012778:	fa1f fe87 	uxth.w	lr, r7
9001277c:	9901      	ldr	r1, [sp, #4]
9001277e:	fa1f fc86 	uxth.w	ip, r6
90012782:	4293      	cmp	r3, r2
90012784:	b280      	uxth	r0, r0
90012786:	eba1 0a0a 	sub.w	sl, r1, sl
9001278a:	da54      	bge.n	90012836 <_ZNK8touchgfx4Line17invalidateContentEv+0x166>
9001278c:	ebac 0100 	sub.w	r1, ip, r0
90012790:	f1ba 0f00 	cmp.w	sl, #0
90012794:	4460      	add	r0, ip
90012796:	f9bd a008 	ldrsh.w	sl, [sp, #8]
9001279a:	b289      	uxth	r1, r1
9001279c:	f9bd c00a 	ldrsh.w	ip, [sp, #10]
900127a0:	b280      	uxth	r0, r0
900127a2:	b20e      	sxth	r6, r1
900127a4:	da29      	bge.n	900127fa <_ZNK8touchgfx4Line17invalidateContentEv+0x12a>
900127a6:	eba8 0505 	sub.w	r5, r8, r5
900127aa:	2d00      	cmp	r5, #0
900127ac:	da2a      	bge.n	90012804 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
900127ae:	fa1f f88a 	uxth.w	r8, sl
900127b2:	f8ad a010 	strh.w	sl, [sp, #16]
900127b6:	fa1f f58c 	uxth.w	r5, ip
900127ba:	f8ad c012 	strh.w	ip, [sp, #18]
900127be:	eba0 0008 	sub.w	r0, r0, r8
900127c2:	4443      	add	r3, r8
900127c4:	f8ad 6018 	strh.w	r6, [sp, #24]
900127c8:	f8ad 0014 	strh.w	r0, [sp, #20]
900127cc:	1a59      	subs	r1, r3, r1
900127ce:	ebae 0005 	sub.w	r0, lr, r5
900127d2:	f8ad 701a 	strh.w	r7, [sp, #26]
900127d6:	f8ad 101c 	strh.w	r1, [sp, #28]
900127da:	f8ad 0016 	strh.w	r0, [sp, #22]
900127de:	442a      	add	r2, r5
900127e0:	eba2 0e0e 	sub.w	lr, r2, lr
900127e4:	f8ad e01e 	strh.w	lr, [sp, #30]
900127e8:	f8db 3010 	ldr.w	r3, [fp, #16]
900127ec:	a904      	add	r1, sp, #16
900127ee:	4620      	mov	r0, r4
900127f0:	4798      	blx	r3
900127f2:	6823      	ldr	r3, [r4, #0]
900127f4:	4649      	mov	r1, r9
900127f6:	691b      	ldr	r3, [r3, #16]
900127f8:	e79a      	b.n	90012730 <_ZNK8touchgfx4Line17invalidateContentEv+0x60>
900127fa:	d003      	beq.n	90012804 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
900127fc:	eba8 0505 	sub.w	r5, r8, r5
90012800:	2d00      	cmp	r5, #0
90012802:	dcd4      	bgt.n	900127ae <_ZNK8touchgfx4Line17invalidateContentEv+0xde>
90012804:	fa1f f88a 	uxth.w	r8, sl
90012808:	f8ad 6010 	strh.w	r6, [sp, #16]
9001280c:	fa1f f58c 	uxth.w	r5, ip
90012810:	f8ad c012 	strh.w	ip, [sp, #18]
90012814:	4443      	add	r3, r8
90012816:	eba0 0008 	sub.w	r0, r0, r8
9001281a:	f8ad a018 	strh.w	sl, [sp, #24]
9001281e:	1a59      	subs	r1, r3, r1
90012820:	ebae 0305 	sub.w	r3, lr, r5
90012824:	f8ad 701a 	strh.w	r7, [sp, #26]
90012828:	f8ad 1014 	strh.w	r1, [sp, #20]
9001282c:	f8ad 3016 	strh.w	r3, [sp, #22]
90012830:	f8ad 001c 	strh.w	r0, [sp, #28]
90012834:	e7d3      	b.n	900127de <_ZNK8touchgfx4Line17invalidateContentEv+0x10e>
90012836:	ebae 0100 	sub.w	r1, lr, r0
9001283a:	f1ba 0f00 	cmp.w	sl, #0
9001283e:	4470      	add	r0, lr
90012840:	f9bd a00a 	ldrsh.w	sl, [sp, #10]
90012844:	b289      	uxth	r1, r1
90012846:	f9bd e008 	ldrsh.w	lr, [sp, #8]
9001284a:	b280      	uxth	r0, r0
9001284c:	b20f      	sxth	r7, r1
9001284e:	da20      	bge.n	90012892 <_ZNK8touchgfx4Line17invalidateContentEv+0x1c2>
90012850:	eba8 0505 	sub.w	r5, r8, r5
90012854:	2d00      	cmp	r5, #0
90012856:	da21      	bge.n	9001289c <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
90012858:	fa1f f88e 	uxth.w	r8, lr
9001285c:	f8ad e010 	strh.w	lr, [sp, #16]
90012860:	fa1f f58a 	uxth.w	r5, sl
90012864:	f8ad a012 	strh.w	sl, [sp, #18]
90012868:	4443      	add	r3, r8
9001286a:	ebac 0e08 	sub.w	lr, ip, r8
9001286e:	442a      	add	r2, r5
90012870:	1b40      	subs	r0, r0, r5
90012872:	eba3 0c0c 	sub.w	ip, r3, ip
90012876:	f8ad e014 	strh.w	lr, [sp, #20]
9001287a:	1a51      	subs	r1, r2, r1
9001287c:	f8ad 0016 	strh.w	r0, [sp, #22]
90012880:	f8ad 6018 	strh.w	r6, [sp, #24]
90012884:	f8ad 701a 	strh.w	r7, [sp, #26]
90012888:	f8ad c01c 	strh.w	ip, [sp, #28]
9001288c:	f8ad 101e 	strh.w	r1, [sp, #30]
90012890:	e7aa      	b.n	900127e8 <_ZNK8touchgfx4Line17invalidateContentEv+0x118>
90012892:	d003      	beq.n	9001289c <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
90012894:	eba8 0505 	sub.w	r5, r8, r5
90012898:	2d00      	cmp	r5, #0
9001289a:	dcdd      	bgt.n	90012858 <_ZNK8touchgfx4Line17invalidateContentEv+0x188>
9001289c:	fa1f f58e 	uxth.w	r5, lr
900128a0:	f8ad 7012 	strh.w	r7, [sp, #18]
900128a4:	fa1f f88a 	uxth.w	r8, sl
900128a8:	f8ad e010 	strh.w	lr, [sp, #16]
900128ac:	442b      	add	r3, r5
900128ae:	ebac 0705 	sub.w	r7, ip, r5
900128b2:	4442      	add	r2, r8
900128b4:	eba0 0008 	sub.w	r0, r0, r8
900128b8:	eba3 0c0c 	sub.w	ip, r3, ip
900128bc:	f8ad 7014 	strh.w	r7, [sp, #20]
900128c0:	1a51      	subs	r1, r2, r1
900128c2:	f8ad 6018 	strh.w	r6, [sp, #24]
900128c6:	f8ad a01a 	strh.w	sl, [sp, #26]
900128ca:	f8ad 1016 	strh.w	r1, [sp, #22]
900128ce:	f8ad c01c 	strh.w	ip, [sp, #28]
900128d2:	f8ad 001e 	strh.w	r0, [sp, #30]
900128d6:	e787      	b.n	900127e8 <_ZNK8touchgfx4Line17invalidateContentEv+0x118>

900128d8 <_ZN8touchgfx7CWRUtil4sineEi>:
900128d8:	f44f 73b4 	mov.w	r3, #360	; 0x168
900128dc:	fb90 f2f3 	sdiv	r2, r0, r3
900128e0:	fb02 0013 	mls	r0, r2, r3, r0
900128e4:	2800      	cmp	r0, #0
900128e6:	bfb8      	it	lt
900128e8:	18c0      	addlt	r0, r0, r3
900128ea:	4b0a      	ldr	r3, [pc, #40]	; (90012914 <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
900128ec:	285a      	cmp	r0, #90	; 0x5a
900128ee:	dc02      	bgt.n	900128f6 <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
900128f0:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
900128f4:	4770      	bx	lr
900128f6:	28b4      	cmp	r0, #180	; 0xb4
900128f8:	dc02      	bgt.n	90012900 <_ZN8touchgfx7CWRUtil4sineEi+0x28>
900128fa:	f1c0 00b4 	rsb	r0, r0, #180	; 0xb4
900128fe:	e7f7      	b.n	900128f0 <_ZN8touchgfx7CWRUtil4sineEi+0x18>
90012900:	f5b0 7f87 	cmp.w	r0, #270	; 0x10e
90012904:	bfd4      	ite	le
90012906:	38b4      	suble	r0, #180	; 0xb4
90012908:	f5c0 70b4 	rsbgt	r0, r0, #360	; 0x168
9001290c:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
90012910:	4240      	negs	r0, r0
90012912:	4770      	bx	lr
90012914:	9002baf8 	.word	0x9002baf8

90012918 <_ZN8touchgfx7CWRUtil5isqrtEm>:
90012918:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
9001291c:	f04f 0300 	mov.w	r3, #0
90012920:	bf2c      	ite	cs
90012922:	f04f 4280 	movcs.w	r2, #1073741824	; 0x40000000
90012926:	f44f 4280 	movcc.w	r2, #16384	; 0x4000
9001292a:	1899      	adds	r1, r3, r2
9001292c:	4288      	cmp	r0, r1
9001292e:	bf24      	itt	cs
90012930:	1853      	addcs	r3, r2, r1
90012932:	1a40      	subcs	r0, r0, r1
90012934:	0892      	lsrs	r2, r2, #2
90012936:	ea4f 0353 	mov.w	r3, r3, lsr #1
9001293a:	d1f6      	bne.n	9001292a <_ZN8touchgfx7CWRUtil5isqrtEm+0x12>
9001293c:	4618      	mov	r0, r3
9001293e:	4770      	bx	lr

90012940 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
90012940:	b510      	push	{r4, lr}
90012942:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
90012946:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
9001294a:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
9001294e:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
90012952:	139b      	asrs	r3, r3, #14
90012954:	13a4      	asrs	r4, r4, #14
90012956:	429c      	cmp	r4, r3
90012958:	bfb8      	it	lt
9001295a:	461c      	movlt	r4, r3
9001295c:	2c01      	cmp	r4, #1
9001295e:	dd07      	ble.n	90012970 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
90012960:	fb91 f1f4 	sdiv	r1, r1, r4
90012964:	fb90 f0f4 	sdiv	r0, r0, r4
90012968:	f7ff ffea 	bl	90012940 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
9001296c:	4360      	muls	r0, r4
9001296e:	bd10      	pop	{r4, pc}
90012970:	4340      	muls	r0, r0
90012972:	fb01 0001 	mla	r0, r1, r1, r0
90012976:	f7ff ffcf 	bl	90012918 <_ZN8touchgfx7CWRUtil5isqrtEm>
9001297a:	e7f8      	b.n	9001296e <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>

9001297c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>:
9001297c:	2800      	cmp	r0, #0
9001297e:	b508      	push	{r3, lr}
90012980:	da05      	bge.n	9001298e <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x12>
90012982:	4240      	negs	r0, r0
90012984:	f7ff fffa 	bl	9001297c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
90012988:	4240      	negs	r0, r0
9001298a:	b240      	sxtb	r0, r0
9001298c:	bd08      	pop	{r3, pc}
9001298e:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
90012992:	dc11      	bgt.n	900129b8 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x3c>
90012994:	f5b0 7f35 	cmp.w	r0, #724	; 0x2d4
90012998:	dd09      	ble.n	900129ae <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x32>
9001299a:	4340      	muls	r0, r0
9001299c:	f5c0 1080 	rsb	r0, r0, #1048576	; 0x100000
900129a0:	f7ff ffba 	bl	90012918 <_ZN8touchgfx7CWRUtil5isqrtEm>
900129a4:	f7ff ffea 	bl	9001297c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
900129a8:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
900129ac:	e7ed      	b.n	9001298a <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0xe>
900129ae:	3003      	adds	r0, #3
900129b0:	4b02      	ldr	r3, [pc, #8]	; (900129bc <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x40>)
900129b2:	10c0      	asrs	r0, r0, #3
900129b4:	5618      	ldrsb	r0, [r3, r0]
900129b6:	e7e9      	b.n	9001298c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
900129b8:	2000      	movs	r0, #0
900129ba:	e7e7      	b.n	9001298c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
900129bc:	9002ba9c 	.word	0x9002ba9c

900129c0 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>:
900129c0:	4281      	cmp	r1, r0
900129c2:	b537      	push	{r0, r1, r2, r4, r5, lr}
900129c4:	460c      	mov	r4, r1
900129c6:	4615      	mov	r5, r2
900129c8:	dd07      	ble.n	900129da <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x1a>
900129ca:	4601      	mov	r1, r0
900129cc:	4620      	mov	r0, r4
900129ce:	f7ff fff7 	bl	900129c0 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
900129d2:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
900129d6:	b003      	add	sp, #12
900129d8:	bd30      	pop	{r4, r5, pc}
900129da:	f7ff ffb1 	bl	90012940 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
900129de:	6028      	str	r0, [r5, #0]
900129e0:	2800      	cmp	r0, #0
900129e2:	d0f8      	beq.n	900129d6 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>
900129e4:	4602      	mov	r2, r0
900129e6:	ab01      	add	r3, sp, #4
900129e8:	f44f 6180 	mov.w	r1, #1024	; 0x400
900129ec:	4620      	mov	r0, r4
900129ee:	f005 f9c7 	bl	90017d80 <_ZN8touchgfx6muldivElllRl>
900129f2:	f7ff ffc3 	bl	9001297c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
900129f6:	e7ee      	b.n	900129d6 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>

900129f8 <_ZN8touchgfx4LineC1Ev>:
900129f8:	b510      	push	{r4, lr}
900129fa:	4604      	mov	r4, r0
900129fc:	f7ff fe28 	bl	90012650 <_ZN8touchgfx12CanvasWidgetC1Ev>
90012a00:	4b0c      	ldr	r3, [pc, #48]	; (90012a34 <_ZN8touchgfx4LineC1Ev+0x3c>)
90012a02:	2220      	movs	r2, #32
90012a04:	4620      	mov	r0, r4
90012a06:	6023      	str	r3, [r4, #0]
90012a08:	2300      	movs	r3, #0
90012a0a:	63e2      	str	r2, [r4, #60]	; 0x3c
90012a0c:	2212      	movs	r2, #18
90012a0e:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
90012a12:	66e2      	str	r2, [r4, #108]	; 0x6c
90012a14:	60a3      	str	r3, [r4, #8]
90012a16:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
90012a1a:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
90012a1e:	e9c4 3311 	strd	r3, r3, [r4, #68]	; 0x44
90012a22:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
90012a26:	e9c4 3315 	strd	r3, r3, [r4, #84]	; 0x54
90012a2a:	e9c4 3317 	strd	r3, r3, [r4, #92]	; 0x5c
90012a2e:	e9c4 3319 	strd	r3, r3, [r4, #100]	; 0x64
90012a32:	bd10      	pop	{r4, pc}
90012a34:	9002bbb8 	.word	0x9002bbb8

90012a38 <_ZN8touchgfx4Line17updateCachedShapeEv>:
90012a38:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
90012a3c:	6b47      	ldr	r7, [r0, #52]	; 0x34
90012a3e:	4604      	mov	r4, r0
90012a40:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
90012a42:	6b85      	ldr	r5, [r0, #56]	; 0x38
90012a44:	6b02      	ldr	r2, [r0, #48]	; 0x30
90012a46:	1aff      	subs	r7, r7, r3
90012a48:	eba5 0502 	sub.w	r5, r5, r2
90012a4c:	d142      	bne.n	90012ad4 <_ZN8touchgfx4Line17updateCachedShapeEv+0x9c>
90012a4e:	b955      	cbnz	r5, 90012a66 <_ZN8touchgfx4Line17updateCachedShapeEv+0x2e>
90012a50:	e9c0 3313 	strd	r3, r3, [r0, #76]	; 0x4c
90012a54:	e9c0 3311 	strd	r3, r3, [r0, #68]	; 0x44
90012a58:	e9c0 2217 	strd	r2, r2, [r0, #92]	; 0x5c
90012a5c:	e9c0 2215 	strd	r2, r2, [r0, #84]	; 0x54
90012a60:	b002      	add	sp, #8
90012a62:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90012a66:	ea85 78e5 	eor.w	r8, r5, r5, asr #31
90012a6a:	eba8 78e5 	sub.w	r8, r8, r5, asr #31
90012a6e:	4629      	mov	r1, r5
90012a70:	2502      	movs	r5, #2
90012a72:	4642      	mov	r2, r8
90012a74:	6be0      	ldr	r0, [r4, #60]	; 0x3c
90012a76:	f005 f9a2 	bl	90017dbe <_ZN8touchgfx6muldivElll>
90012a7a:	4642      	mov	r2, r8
90012a7c:	4639      	mov	r1, r7
90012a7e:	fb90 f6f5 	sdiv	r6, r0, r5
90012a82:	6be0      	ldr	r0, [r4, #60]	; 0x3c
90012a84:	f005 f99b 	bl	90017dbe <_ZN8touchgfx6muldivElll>
90012a88:	f894 9040 	ldrb.w	r9, [r4, #64]	; 0x40
90012a8c:	fb90 f5f5 	sdiv	r5, r0, r5
90012a90:	f1b9 0f00 	cmp.w	r9, #0
90012a94:	d067      	beq.n	90012b66 <_ZN8touchgfx4Line17updateCachedShapeEv+0x12e>
90012a96:	f1b9 0f02 	cmp.w	r9, #2
90012a9a:	d878      	bhi.n	90012b8e <_ZN8touchgfx4Line17updateCachedShapeEv+0x156>
90012a9c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
90012a9e:	6b60      	ldr	r0, [r4, #52]	; 0x34
90012aa0:	1b93      	subs	r3, r2, r6
90012aa2:	4432      	add	r2, r6
90012aa4:	1b5b      	subs	r3, r3, r5
90012aa6:	1b52      	subs	r2, r2, r5
90012aa8:	6463      	str	r3, [r4, #68]	; 0x44
90012aaa:	6b23      	ldr	r3, [r4, #48]	; 0x30
90012aac:	6522      	str	r2, [r4, #80]	; 0x50
90012aae:	18e9      	adds	r1, r5, r3
90012ab0:	1b5b      	subs	r3, r3, r5
90012ab2:	1b89      	subs	r1, r1, r6
90012ab4:	1b9b      	subs	r3, r3, r6
90012ab6:	6561      	str	r1, [r4, #84]	; 0x54
90012ab8:	1b81      	subs	r1, r0, r6
90012aba:	4430      	add	r0, r6
90012abc:	4429      	add	r1, r5
90012abe:	4428      	add	r0, r5
90012ac0:	64a1      	str	r1, [r4, #72]	; 0x48
90012ac2:	6ba1      	ldr	r1, [r4, #56]	; 0x38
90012ac4:	64e0      	str	r0, [r4, #76]	; 0x4c
90012ac6:	186f      	adds	r7, r5, r1
90012ac8:	1b49      	subs	r1, r1, r5
90012aca:	4437      	add	r7, r6
90012acc:	4431      	add	r1, r6
90012ace:	65a7      	str	r7, [r4, #88]	; 0x58
90012ad0:	65e1      	str	r1, [r4, #92]	; 0x5c
90012ad2:	e05b      	b.n	90012b8c <_ZN8touchgfx4Line17updateCachedShapeEv+0x154>
90012ad4:	ea87 78e7 	eor.w	r8, r7, r7, asr #31
90012ad8:	eba8 78e7 	sub.w	r8, r8, r7, asr #31
90012adc:	2d00      	cmp	r5, #0
90012ade:	d0c6      	beq.n	90012a6e <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
90012ae0:	ea85 73e5 	eor.w	r3, r5, r5, asr #31
90012ae4:	eba3 73e5 	sub.w	r3, r3, r5, asr #31
90012ae8:	fb93 f2f8 	sdiv	r2, r3, r8
90012aec:	fb08 3312 	mls	r3, r8, r2, r3
90012af0:	b353      	cbz	r3, 90012b48 <_ZN8touchgfx4Line17updateCachedShapeEv+0x110>
90012af2:	fb98 f2f3 	sdiv	r2, r8, r3
90012af6:	fb03 8812 	mls	r8, r3, r2, r8
90012afa:	f1b8 0f00 	cmp.w	r8, #0
90012afe:	d1f3      	bne.n	90012ae8 <_ZN8touchgfx4Line17updateCachedShapeEv+0xb0>
90012b00:	2b01      	cmp	r3, #1
90012b02:	f24b 5104 	movw	r1, #46340	; 0xb504
90012b06:	bf1c      	itt	ne
90012b08:	fb97 f7f3 	sdivne	r7, r7, r3
90012b0c:	fb95 f5f3 	sdivne	r5, r5, r3
90012b10:	ea87 73e7 	eor.w	r3, r7, r7, asr #31
90012b14:	4608      	mov	r0, r1
90012b16:	ea85 72e5 	eor.w	r2, r5, r5, asr #31
90012b1a:	eba3 73e7 	sub.w	r3, r3, r7, asr #31
90012b1e:	eba2 72e5 	sub.w	r2, r2, r5, asr #31
90012b22:	428b      	cmp	r3, r1
90012b24:	dd01      	ble.n	90012b2a <_ZN8touchgfx4Line17updateCachedShapeEv+0xf2>
90012b26:	428a      	cmp	r2, r1
90012b28:	dc10      	bgt.n	90012b4c <_ZN8touchgfx4Line17updateCachedShapeEv+0x114>
90012b2a:	fb90 f3f3 	sdiv	r3, r0, r3
90012b2e:	fb90 f2f2 	sdiv	r2, r0, r2
90012b32:	4293      	cmp	r3, r2
90012b34:	bfa8      	it	ge
90012b36:	4613      	movge	r3, r2
90012b38:	435f      	muls	r7, r3
90012b3a:	435d      	muls	r5, r3
90012b3c:	4629      	mov	r1, r5
90012b3e:	4638      	mov	r0, r7
90012b40:	f7ff fefe 	bl	90012940 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
90012b44:	4680      	mov	r8, r0
90012b46:	e792      	b.n	90012a6e <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
90012b48:	4643      	mov	r3, r8
90012b4a:	e7d9      	b.n	90012b00 <_ZN8touchgfx4Line17updateCachedShapeEv+0xc8>
90012b4c:	fb93 f3f1 	sdiv	r3, r3, r1
90012b50:	fb92 f2f1 	sdiv	r2, r2, r1
90012b54:	4293      	cmp	r3, r2
90012b56:	bfcc      	ite	gt
90012b58:	3301      	addgt	r3, #1
90012b5a:	1c53      	addle	r3, r2, #1
90012b5c:	fb97 f7f3 	sdiv	r7, r7, r3
90012b60:	fb95 f5f3 	sdiv	r5, r5, r3
90012b64:	e7ea      	b.n	90012b3c <_ZN8touchgfx4Line17updateCachedShapeEv+0x104>
90012b66:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
90012b68:	6b60      	ldr	r0, [r4, #52]	; 0x34
90012b6a:	1b93      	subs	r3, r2, r6
90012b6c:	4432      	add	r2, r6
90012b6e:	6463      	str	r3, [r4, #68]	; 0x44
90012b70:	6b23      	ldr	r3, [r4, #48]	; 0x30
90012b72:	6522      	str	r2, [r4, #80]	; 0x50
90012b74:	18e9      	adds	r1, r5, r3
90012b76:	1b5b      	subs	r3, r3, r5
90012b78:	6561      	str	r1, [r4, #84]	; 0x54
90012b7a:	1b81      	subs	r1, r0, r6
90012b7c:	4430      	add	r0, r6
90012b7e:	64a1      	str	r1, [r4, #72]	; 0x48
90012b80:	6ba1      	ldr	r1, [r4, #56]	; 0x38
90012b82:	64e0      	str	r0, [r4, #76]	; 0x4c
90012b84:	186f      	adds	r7, r5, r1
90012b86:	1b49      	subs	r1, r1, r5
90012b88:	65a7      	str	r7, [r4, #88]	; 0x58
90012b8a:	65e1      	str	r1, [r4, #92]	; 0x5c
90012b8c:	6623      	str	r3, [r4, #96]	; 0x60
90012b8e:	6c62      	ldr	r2, [r4, #68]	; 0x44
90012b90:	f104 0148 	add.w	r1, r4, #72	; 0x48
90012b94:	6d63      	ldr	r3, [r4, #84]	; 0x54
90012b96:	f104 0c54 	add.w	ip, r4, #84	; 0x54
90012b9a:	9200      	str	r2, [sp, #0]
90012b9c:	9301      	str	r3, [sp, #4]
90012b9e:	680f      	ldr	r7, [r1, #0]
90012ba0:	3104      	adds	r1, #4
90012ba2:	9800      	ldr	r0, [sp, #0]
90012ba4:	42ba      	cmp	r2, r7
90012ba6:	bfa8      	it	ge
90012ba8:	463a      	movge	r2, r7
90012baa:	4287      	cmp	r7, r0
90012bac:	9801      	ldr	r0, [sp, #4]
90012bae:	bfc8      	it	gt
90012bb0:	9700      	strgt	r7, [sp, #0]
90012bb2:	68cf      	ldr	r7, [r1, #12]
90012bb4:	42bb      	cmp	r3, r7
90012bb6:	bfa8      	it	ge
90012bb8:	463b      	movge	r3, r7
90012bba:	4287      	cmp	r7, r0
90012bbc:	bfc8      	it	gt
90012bbe:	9701      	strgt	r7, [sp, #4]
90012bc0:	458c      	cmp	ip, r1
90012bc2:	d1ec      	bne.n	90012b9e <_ZN8touchgfx4Line17updateCachedShapeEv+0x166>
90012bc4:	2720      	movs	r7, #32
90012bc6:	4668      	mov	r0, sp
90012bc8:	fb92 f8f7 	sdiv	r8, r2, r7
90012bcc:	fb93 f7f7 	sdiv	r7, r3, r7
90012bd0:	f7ff fd75 	bl	900126be <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
90012bd4:	4682      	mov	sl, r0
90012bd6:	a801      	add	r0, sp, #4
90012bd8:	f7ff fd71 	bl	900126be <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
90012bdc:	ebaa 0208 	sub.w	r2, sl, r8
90012be0:	1bc0      	subs	r0, r0, r7
90012be2:	f1b9 0f01 	cmp.w	r9, #1
90012be6:	f8a4 8064 	strh.w	r8, [r4, #100]	; 0x64
90012bea:	f8a4 7066 	strh.w	r7, [r4, #102]	; 0x66
90012bee:	f8a4 2068 	strh.w	r2, [r4, #104]	; 0x68
90012bf2:	f8a4 006a 	strh.w	r0, [r4, #106]	; 0x6a
90012bf6:	f47f af33 	bne.w	90012a60 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>
90012bfa:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
90012bfc:	6b61      	ldr	r1, [r4, #52]	; 0x34
90012bfe:	1b83      	subs	r3, r0, r6
90012c00:	6463      	str	r3, [r4, #68]	; 0x44
90012c02:	6b23      	ldr	r3, [r4, #48]	; 0x30
90012c04:	18ea      	adds	r2, r5, r3
90012c06:	6562      	str	r2, [r4, #84]	; 0x54
90012c08:	1b8a      	subs	r2, r1, r6
90012c0a:	4431      	add	r1, r6
90012c0c:	4406      	add	r6, r0
90012c0e:	64a2      	str	r2, [r4, #72]	; 0x48
90012c10:	6ba2      	ldr	r2, [r4, #56]	; 0x38
90012c12:	64e1      	str	r1, [r4, #76]	; 0x4c
90012c14:	18af      	adds	r7, r5, r2
90012c16:	1b52      	subs	r2, r2, r5
90012c18:	1b5d      	subs	r5, r3, r5
90012c1a:	6526      	str	r6, [r4, #80]	; 0x50
90012c1c:	65a7      	str	r7, [r4, #88]	; 0x58
90012c1e:	65e2      	str	r2, [r4, #92]	; 0x5c
90012c20:	6625      	str	r5, [r4, #96]	; 0x60
90012c22:	e71d      	b.n	90012a60 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>

90012c24 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>:
90012c24:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
90012c26:	428b      	cmp	r3, r1
90012c28:	d102      	bne.n	90012c30 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0xc>
90012c2a:	6b03      	ldr	r3, [r0, #48]	; 0x30
90012c2c:	4293      	cmp	r3, r2
90012c2e:	d003      	beq.n	90012c38 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0x14>
90012c30:	e9c0 120b 	strd	r1, r2, [r0, #44]	; 0x2c
90012c34:	f7ff bf00 	b.w	90012a38 <_ZN8touchgfx4Line17updateCachedShapeEv>
90012c38:	4770      	bx	lr

90012c3a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>:
90012c3a:	6b43      	ldr	r3, [r0, #52]	; 0x34
90012c3c:	428b      	cmp	r3, r1
90012c3e:	d102      	bne.n	90012c46 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0xc>
90012c40:	6b83      	ldr	r3, [r0, #56]	; 0x38
90012c42:	4293      	cmp	r3, r2
90012c44:	d003      	beq.n	90012c4e <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0x14>
90012c46:	e9c0 120d 	strd	r1, r2, [r0, #52]	; 0x34
90012c4a:	f7ff bef5 	b.w	90012a38 <_ZN8touchgfx4Line17updateCachedShapeEv>
90012c4e:	4770      	bx	lr

90012c50 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>:
90012c50:	f880 1040 	strb.w	r1, [r0, #64]	; 0x40
90012c54:	f7ff bef0 	b.w	90012a38 <_ZN8touchgfx4Line17updateCachedShapeEv>

90012c58 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE>:
90012c58:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90012c5c:	b0a0      	sub	sp, #128	; 0x80
90012c5e:	4604      	mov	r4, r0
90012c60:	460a      	mov	r2, r1
90012c62:	4601      	mov	r1, r0
90012c64:	a804      	add	r0, sp, #16
90012c66:	f014 fcfb 	bl	90027660 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
90012c6a:	2300      	movs	r3, #0
90012c6c:	9301      	str	r3, [sp, #4]
90012c6e:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
90012c72:	2b01      	cmp	r3, #1
90012c74:	d17c      	bne.n	90012d70 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x118>
90012c76:	6c60      	ldr	r0, [r4, #68]	; 0x44
90012c78:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
90012c7a:	6d61      	ldr	r1, [r4, #84]	; 0x54
90012c7c:	6b22      	ldr	r2, [r4, #48]	; 0x30
90012c7e:	1ac0      	subs	r0, r0, r3
90012c80:	eba1 0102 	sub.w	r1, r1, r2
90012c84:	d437      	bmi.n	90012cf6 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x9e>
90012c86:	2900      	cmp	r1, #0
90012c88:	aa01      	add	r2, sp, #4
90012c8a:	db2e      	blt.n	90012cea <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x92>
90012c8c:	f7ff fe98 	bl	900129c0 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
90012c90:	f100 065a 	add.w	r6, r0, #90	; 0x5a
90012c94:	6d62      	ldr	r2, [r4, #84]	; 0x54
90012c96:	a804      	add	r0, sp, #16
90012c98:	6c61      	ldr	r1, [r4, #68]	; 0x44
90012c9a:	f014 fe61 	bl	90027960 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
90012c9e:	6da2      	ldr	r2, [r4, #88]	; 0x58
90012ca0:	6ca1      	ldr	r1, [r4, #72]	; 0x48
90012ca2:	a804      	add	r0, sp, #16
90012ca4:	f014 fea9 	bl	900279fa <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
90012ca8:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
90012caa:	2db3      	cmp	r5, #179	; 0xb3
90012cac:	dc33      	bgt.n	90012d16 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xbe>
90012cae:	eba6 0805 	sub.w	r8, r6, r5
90012cb2:	4640      	mov	r0, r8
90012cb4:	f7ff fe10 	bl	900128d8 <_ZN8touchgfx7CWRUtil4sineEi>
90012cb8:	a902      	add	r1, sp, #8
90012cba:	9002      	str	r0, [sp, #8]
90012cbc:	a801      	add	r0, sp, #4
90012cbe:	f7ff fcf3 	bl	900126a8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90012cc2:	6b61      	ldr	r1, [r4, #52]	; 0x34
90012cc4:	1847      	adds	r7, r0, r1
90012cc6:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
90012cca:	f7ff fe05 	bl	900128d8 <_ZN8touchgfx7CWRUtil4sineEi>
90012cce:	a903      	add	r1, sp, #12
90012cd0:	9003      	str	r0, [sp, #12]
90012cd2:	a801      	add	r0, sp, #4
90012cd4:	f7ff fce8 	bl	900126a8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90012cd8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
90012cda:	4639      	mov	r1, r7
90012cdc:	1a12      	subs	r2, r2, r0
90012cde:	a804      	add	r0, sp, #16
90012ce0:	f014 fe8b 	bl	900279fa <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
90012ce4:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
90012ce6:	441d      	add	r5, r3
90012ce8:	e7df      	b.n	90012caa <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x52>
90012cea:	4249      	negs	r1, r1
90012cec:	f7ff fe68 	bl	900129c0 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
90012cf0:	f1c0 065a 	rsb	r6, r0, #90	; 0x5a
90012cf4:	e7ce      	b.n	90012c94 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
90012cf6:	2900      	cmp	r1, #0
90012cf8:	f1c0 0000 	rsb	r0, r0, #0
90012cfc:	aa01      	add	r2, sp, #4
90012cfe:	db04      	blt.n	90012d0a <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xb2>
90012d00:	f7ff fe5e 	bl	900129c0 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
90012d04:	f5c0 7687 	rsb	r6, r0, #270	; 0x10e
90012d08:	e7c4      	b.n	90012c94 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
90012d0a:	4249      	negs	r1, r1
90012d0c:	f7ff fe58 	bl	900129c0 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
90012d10:	f500 7687 	add.w	r6, r0, #270	; 0x10e
90012d14:	e7be      	b.n	90012c94 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
90012d16:	6de2      	ldr	r2, [r4, #92]	; 0x5c
90012d18:	a804      	add	r0, sp, #16
90012d1a:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
90012d1c:	f014 fe6d 	bl	900279fa <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
90012d20:	6e22      	ldr	r2, [r4, #96]	; 0x60
90012d22:	6d21      	ldr	r1, [r4, #80]	; 0x50
90012d24:	a804      	add	r0, sp, #16
90012d26:	f014 fe68 	bl	900279fa <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
90012d2a:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
90012d2c:	f1c5 05b4 	rsb	r5, r5, #180	; 0xb4
90012d30:	2d00      	cmp	r5, #0
90012d32:	dd31      	ble.n	90012d98 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x140>
90012d34:	eb05 0806 	add.w	r8, r5, r6
90012d38:	4640      	mov	r0, r8
90012d3a:	f7ff fdcd 	bl	900128d8 <_ZN8touchgfx7CWRUtil4sineEi>
90012d3e:	a902      	add	r1, sp, #8
90012d40:	9002      	str	r0, [sp, #8]
90012d42:	a801      	add	r0, sp, #4
90012d44:	f7ff fcb0 	bl	900126a8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90012d48:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
90012d4a:	1847      	adds	r7, r0, r1
90012d4c:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
90012d50:	f7ff fdc2 	bl	900128d8 <_ZN8touchgfx7CWRUtil4sineEi>
90012d54:	a903      	add	r1, sp, #12
90012d56:	9003      	str	r0, [sp, #12]
90012d58:	a801      	add	r0, sp, #4
90012d5a:	f7ff fca5 	bl	900126a8 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90012d5e:	6b22      	ldr	r2, [r4, #48]	; 0x30
90012d60:	4639      	mov	r1, r7
90012d62:	1a12      	subs	r2, r2, r0
90012d64:	a804      	add	r0, sp, #16
90012d66:	f014 fe48 	bl	900279fa <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
90012d6a:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
90012d6c:	1aed      	subs	r5, r5, r3
90012d6e:	e7df      	b.n	90012d30 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xd8>
90012d70:	6d62      	ldr	r2, [r4, #84]	; 0x54
90012d72:	a804      	add	r0, sp, #16
90012d74:	6c61      	ldr	r1, [r4, #68]	; 0x44
90012d76:	f014 fdf3 	bl	90027960 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
90012d7a:	6da2      	ldr	r2, [r4, #88]	; 0x58
90012d7c:	6ca1      	ldr	r1, [r4, #72]	; 0x48
90012d7e:	a804      	add	r0, sp, #16
90012d80:	f014 fe3b 	bl	900279fa <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
90012d84:	6de2      	ldr	r2, [r4, #92]	; 0x5c
90012d86:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
90012d88:	a804      	add	r0, sp, #16
90012d8a:	f014 fe36 	bl	900279fa <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
90012d8e:	6e22      	ldr	r2, [r4, #96]	; 0x60
90012d90:	6d21      	ldr	r1, [r4, #80]	; 0x50
90012d92:	a804      	add	r0, sp, #16
90012d94:	f014 fe31 	bl	900279fa <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
90012d98:	21ff      	movs	r1, #255	; 0xff
90012d9a:	a804      	add	r0, sp, #16
90012d9c:	f014 fd1c 	bl	900277d8 <_ZN8touchgfx6Canvas6renderEh>
90012da0:	4b04      	ldr	r3, [pc, #16]	; (90012db4 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x15c>)
90012da2:	4604      	mov	r4, r0
90012da4:	a80c      	add	r0, sp, #48	; 0x30
90012da6:	9304      	str	r3, [sp, #16]
90012da8:	f001 f9f2 	bl	90014190 <_ZN8touchgfx7OutlineD1Ev>
90012dac:	4620      	mov	r0, r4
90012dae:	b020      	add	sp, #128	; 0x80
90012db0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90012db4:	9002c36c 	.word	0x9002c36c

90012db8 <_ZNK8touchgfx5Image17invalidateContentEv>:
90012db8:	b508      	push	{r3, lr}
90012dba:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
90012dbe:	b10b      	cbz	r3, 90012dc4 <_ZNK8touchgfx5Image17invalidateContentEv+0xc>
90012dc0:	f7ef fa5e 	bl	90002280 <_ZNK8touchgfx8Drawable17invalidateContentEv>
90012dc4:	bd08      	pop	{r3, pc}

90012dc6 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>:
90012dc6:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
90012dca:	4770      	bx	lr

90012dcc <_ZN8touchgfx13ScalableImage19getScalingAlgorithmEv>:
90012dcc:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
90012dd0:	4770      	bx	lr

90012dd2 <_ZN8touchgfx13ScalableImageD1Ev>:
90012dd2:	4770      	bx	lr

90012dd4 <_ZN8touchgfx13ScalableImageD0Ev>:
90012dd4:	b510      	push	{r4, lr}
90012dd6:	4604      	mov	r4, r0
90012dd8:	212c      	movs	r1, #44	; 0x2c
90012dda:	f014 fea1 	bl	90027b20 <_ZdlPvj>
90012dde:	4620      	mov	r0, r4
90012de0:	bd10      	pop	{r4, pc}

90012de2 <_ZNK8touchgfx13ScalableImage12getSolidRectEv>:
90012de2:	b5f0      	push	{r4, r5, r6, r7, lr}
90012de4:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
90012de8:	b085      	sub	sp, #20
90012dea:	4604      	mov	r4, r0
90012dec:	460d      	mov	r5, r1
90012dee:	2bff      	cmp	r3, #255	; 0xff
90012df0:	d128      	bne.n	90012e44 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
90012df2:	f101 0626 	add.w	r6, r1, #38	; 0x26
90012df6:	4668      	mov	r0, sp
90012df8:	4631      	mov	r1, r6
90012dfa:	f006 ff65 	bl	90019cc8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
90012dfe:	f9bd 7004 	ldrsh.w	r7, [sp, #4]
90012e02:	4630      	mov	r0, r6
90012e04:	f006 fef8 	bl	90019bf8 <_ZNK8touchgfx6Bitmap8getWidthEv>
90012e08:	4287      	cmp	r7, r0
90012e0a:	d11b      	bne.n	90012e44 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
90012e0c:	f9bd 7006 	ldrsh.w	r7, [sp, #6]
90012e10:	4630      	mov	r0, r6
90012e12:	f006 ff25 	bl	90019c60 <_ZNK8touchgfx6Bitmap9getHeightEv>
90012e16:	4287      	cmp	r7, r0
90012e18:	d114      	bne.n	90012e44 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
90012e1a:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
90012e1e:	2100      	movs	r1, #0
90012e20:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
90012e24:	f8ad 300e 	strh.w	r3, [sp, #14]
90012e28:	466b      	mov	r3, sp
90012e2a:	9102      	str	r1, [sp, #8]
90012e2c:	f8ad 200c 	strh.w	r2, [sp, #12]
90012e30:	cb03      	ldmia	r3!, {r0, r1}
90012e32:	6020      	str	r0, [r4, #0]
90012e34:	4620      	mov	r0, r4
90012e36:	6061      	str	r1, [r4, #4]
90012e38:	4619      	mov	r1, r3
90012e3a:	f7fe fb09 	bl	90011450 <_ZN8touchgfx4RectaNERKS0_>
90012e3e:	4620      	mov	r0, r4
90012e40:	b005      	add	sp, #20
90012e42:	bdf0      	pop	{r4, r5, r6, r7, pc}
90012e44:	2300      	movs	r3, #0
90012e46:	8023      	strh	r3, [r4, #0]
90012e48:	8063      	strh	r3, [r4, #2]
90012e4a:	80a3      	strh	r3, [r4, #4]
90012e4c:	80e3      	strh	r3, [r4, #6]
90012e4e:	e7f6      	b.n	90012e3e <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x5c>

90012e50 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>:
90012e50:	b538      	push	{r3, r4, r5, lr}
90012e52:	2300      	movs	r3, #0
90012e54:	2501      	movs	r5, #1
90012e56:	4604      	mov	r4, r0
90012e58:	8083      	strh	r3, [r0, #4]
90012e5a:	80c3      	strh	r3, [r0, #6]
90012e5c:	8103      	strh	r3, [r0, #8]
90012e5e:	8143      	strh	r3, [r0, #10]
90012e60:	8183      	strh	r3, [r0, #12]
90012e62:	81c3      	strh	r3, [r0, #14]
90012e64:	8203      	strh	r3, [r0, #16]
90012e66:	8243      	strh	r3, [r0, #18]
90012e68:	61c3      	str	r3, [r0, #28]
90012e6a:	8403      	strh	r3, [r0, #32]
90012e6c:	8443      	strh	r3, [r0, #34]	; 0x22
90012e6e:	f880 3024 	strb.w	r3, [r0, #36]	; 0x24
90012e72:	f880 5025 	strb.w	r5, [r0, #37]	; 0x25
90012e76:	e9c0 3305 	strd	r3, r3, [r0, #20]
90012e7a:	4b07      	ldr	r3, [pc, #28]	; (90012e98 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE+0x48>)
90012e7c:	6003      	str	r3, [r0, #0]
90012e7e:	880b      	ldrh	r3, [r1, #0]
90012e80:	84c3      	strh	r3, [r0, #38]	; 0x26
90012e82:	23ff      	movs	r3, #255	; 0xff
90012e84:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
90012e88:	f001 f81d 	bl	90013ec6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90012e8c:	4b03      	ldr	r3, [pc, #12]	; (90012e9c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE+0x4c>)
90012e8e:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
90012e92:	4620      	mov	r0, r4
90012e94:	6023      	str	r3, [r4, #0]
90012e96:	bd38      	pop	{r3, r4, r5, pc}
90012e98:	9002be7c 	.word	0x9002be7c
90012e9c:	9002bc30 	.word	0x9002bc30

90012ea0 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv>:
90012ea0:	4603      	mov	r3, r0
90012ea2:	3026      	adds	r0, #38	; 0x26
90012ea4:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
90012ea8:	b90b      	cbnz	r3, 90012eae <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv+0xe>
90012eaa:	f004 bedb 	b.w	90017c64 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
90012eae:	f004 bee9 	b.w	90017c84 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>
	...

90012eb4 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
90012eb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90012eb8:	4604      	mov	r4, r0
90012eba:	b0b3      	sub	sp, #204	; 0xcc
90012ebc:	469b      	mov	fp, r3
90012ebe:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
90012ec2:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
90012ec6:	2500      	movs	r5, #0
90012ec8:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
90012ecc:	f8ad 304a 	strh.w	r3, [sp, #74]	; 0x4a
90012ed0:	ab11      	add	r3, sp, #68	; 0x44
90012ed2:	9206      	str	r2, [sp, #24]
90012ed4:	4618      	mov	r0, r3
90012ed6:	9511      	str	r5, [sp, #68]	; 0x44
90012ed8:	9307      	str	r3, [sp, #28]
90012eda:	ad13      	add	r5, sp, #76	; 0x4c
90012edc:	e9dd a93c 	ldrd	sl, r9, [sp, #240]	; 0xf0
90012ee0:	e9dd 873e 	ldrd	r8, r7, [sp, #248]	; 0xf8
90012ee4:	f7fe fab4 	bl	90011450 <_ZN8touchgfx4RectaNERKS0_>
90012ee8:	9b07      	ldr	r3, [sp, #28]
90012eea:	e893 0003 	ldmia.w	r3, {r0, r1}
90012eee:	e885 0003 	stmia.w	r5, {r0, r1}
90012ef2:	6821      	ldr	r1, [r4, #0]
90012ef4:	4620      	mov	r0, r4
90012ef6:	6ace      	ldr	r6, [r1, #44]	; 0x2c
90012ef8:	4629      	mov	r1, r5
90012efa:	47b0      	blx	r6
90012efc:	4621      	mov	r1, r4
90012efe:	a815      	add	r0, sp, #84	; 0x54
90012f00:	1d26      	adds	r6, r4, #4
90012f02:	f004 fe0b 	bl	90017b1c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90012f06:	a815      	add	r0, sp, #84	; 0x54
90012f08:	f003 fb16 	bl	90016538 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90012f0c:	9b07      	ldr	r3, [sp, #28]
90012f0e:	4631      	mov	r1, r6
90012f10:	4618      	mov	r0, r3
90012f12:	f003 fb55 	bl	900165c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90012f16:	4628      	mov	r0, r5
90012f18:	f104 0526 	add.w	r5, r4, #38	; 0x26
90012f1c:	f003 fb0c 	bl	90016538 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90012f20:	4628      	mov	r0, r5
90012f22:	f006 ff55 	bl	90019dd0 <_ZNK8touchgfx6Bitmap7getDataEv>
90012f26:	9007      	str	r0, [sp, #28]
90012f28:	2800      	cmp	r0, #0
90012f2a:	f000 80ce 	beq.w	900130ca <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x216>
90012f2e:	f8db 200c 	ldr.w	r2, [fp, #12]
90012f32:	a809      	add	r0, sp, #36	; 0x24
90012f34:	f8db 1000 	ldr.w	r1, [fp]
90012f38:	920c      	str	r2, [sp, #48]	; 0x30
90012f3a:	f8da 2000 	ldr.w	r2, [sl]
90012f3e:	9109      	str	r1, [sp, #36]	; 0x24
90012f40:	920d      	str	r2, [sp, #52]	; 0x34
90012f42:	f8da 2004 	ldr.w	r2, [sl, #4]
90012f46:	f8db 1004 	ldr.w	r1, [fp, #4]
90012f4a:	920e      	str	r2, [sp, #56]	; 0x38
90012f4c:	f8da 2008 	ldr.w	r2, [sl, #8]
90012f50:	910a      	str	r1, [sp, #40]	; 0x28
90012f52:	920f      	str	r2, [sp, #60]	; 0x3c
90012f54:	f8db 1008 	ldr.w	r1, [fp, #8]
90012f58:	f8da 200c 	ldr.w	r2, [sl, #12]
90012f5c:	910b      	str	r1, [sp, #44]	; 0x2c
90012f5e:	a90d      	add	r1, sp, #52	; 0x34
90012f60:	9210      	str	r2, [sp, #64]	; 0x40
90012f62:	4632      	mov	r2, r6
90012f64:	f003 fb10 	bl	90016588 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
90012f68:	4632      	mov	r2, r6
90012f6a:	a90e      	add	r1, sp, #56	; 0x38
90012f6c:	a80a      	add	r0, sp, #40	; 0x28
90012f6e:	f003 fb0b 	bl	90016588 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
90012f72:	4632      	mov	r2, r6
90012f74:	a90f      	add	r1, sp, #60	; 0x3c
90012f76:	a80b      	add	r0, sp, #44	; 0x2c
90012f78:	f003 fb06 	bl	90016588 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
90012f7c:	4632      	mov	r2, r6
90012f7e:	a910      	add	r1, sp, #64	; 0x40
90012f80:	a80c      	add	r0, sp, #48	; 0x30
90012f82:	f003 fb01 	bl	90016588 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
90012f86:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
90012f8a:	ed97 3a00 	vldr	s6, [r7]
90012f8e:	eef0 6a67 	vmov.f32	s13, s15
90012f92:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
90012f96:	edd7 4a01 	vldr	s9, [r7, #4]
90012f9a:	eeb0 7a67 	vmov.f32	s14, s15
90012f9e:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
90012fa2:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
90012fa6:	ed99 2a00 	vldr	s4, [r9]
90012faa:	eeb0 6a67 	vmov.f32	s12, s15
90012fae:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
90012fb2:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
90012fb6:	edd8 2a00 	vldr	s5, [r8]
90012fba:	edd9 3a01 	vldr	s7, [r9, #4]
90012fbe:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
90012fc2:	ed98 4a01 	vldr	s8, [r8, #4]
90012fc6:	ed99 5a02 	vldr	s10, [r9, #8]
90012fca:	edd8 5a02 	vldr	s11, [r8, #8]
90012fce:	ee16 6a10 	vmov	r6, s12
90012fd2:	eeb0 6a67 	vmov.f32	s12, s15
90012fd6:	eddd 7a0f 	vldr	s15, [sp, #60]	; 0x3c
90012fda:	f8d9 e00c 	ldr.w	lr, [r9, #12]
90012fde:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
90012fe2:	f8d8 c00c 	ldr.w	ip, [r8, #12]
90012fe6:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
90012fea:	ed8d 2a20 	vstr	s4, [sp, #128]	; 0x80
90012fee:	ee16 0a10 	vmov	r0, s12
90012ff2:	eeb0 6a67 	vmov.f32	s12, s15
90012ff6:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
90012ffa:	edcd 2a21 	vstr	s5, [sp, #132]	; 0x84
90012ffe:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
90013002:	ed8d 3a22 	vstr	s6, [sp, #136]	; 0x88
90013006:	ed8d 7a23 	vstr	s14, [sp, #140]	; 0x8c
9001300a:	edcd 3a25 	vstr	s7, [sp, #148]	; 0x94
9001300e:	ee16 1a10 	vmov	r1, s12
90013012:	eeb0 6a67 	vmov.f32	s12, s15
90013016:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
9001301a:	ed8d 4a26 	vstr	s8, [sp, #152]	; 0x98
9001301e:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
90013022:	edcd 4a27 	vstr	s9, [sp, #156]	; 0x9c
90013026:	f8d7 a008 	ldr.w	sl, [r7, #8]
9001302a:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
9001302e:	68ff      	ldr	r7, [r7, #12]
90013030:	ee16 2a10 	vmov	r2, s12
90013034:	ed9d 6a09 	vldr	s12, [sp, #36]	; 0x24
90013038:	9624      	str	r6, [sp, #144]	; 0x90
9001303a:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
9001303e:	e9cd 0128 	strd	r0, r1, [sp, #160]	; 0xa0
90013042:	ed8d 6a1e 	vstr	s12, [sp, #120]	; 0x78
90013046:	4628      	mov	r0, r5
90013048:	ed8d 5a2a 	vstr	s10, [sp, #168]	; 0xa8
9001304c:	9b06      	ldr	r3, [sp, #24]
9001304e:	922d      	str	r2, [sp, #180]	; 0xb4
90013050:	4a1f      	ldr	r2, [pc, #124]	; (900130d0 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x21c>)
90013052:	9317      	str	r3, [sp, #92]	; 0x5c
90013054:	8812      	ldrh	r2, [r2, #0]
90013056:	9b07      	ldr	r3, [sp, #28]
90013058:	9218      	str	r2, [sp, #96]	; 0x60
9001305a:	9319      	str	r3, [sp, #100]	; 0x64
9001305c:	edcd 5a2b 	vstr	s11, [sp, #172]	; 0xac
90013060:	edcd 7a2e 	vstr	s15, [sp, #184]	; 0xb8
90013064:	f8cd e0bc 	str.w	lr, [sp, #188]	; 0xbc
90013068:	f8cd c0c0 	str.w	ip, [sp, #192]	; 0xc0
9001306c:	f8cd a0b0 	str.w	sl, [sp, #176]	; 0xb0
90013070:	9731      	str	r7, [sp, #196]	; 0xc4
90013072:	f006 fedd 	bl	90019e30 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
90013076:	901a      	str	r0, [sp, #104]	; 0x68
90013078:	4628      	mov	r0, r5
9001307a:	f006 fdbd 	bl	90019bf8 <_ZNK8touchgfx6Bitmap8getWidthEv>
9001307e:	901b      	str	r0, [sp, #108]	; 0x6c
90013080:	4628      	mov	r0, r5
90013082:	f006 fded 	bl	90019c60 <_ZNK8touchgfx6Bitmap9getHeightEv>
90013086:	901c      	str	r0, [sp, #112]	; 0x70
90013088:	4628      	mov	r0, r5
9001308a:	f006 fdb5 	bl	90019bf8 <_ZNK8touchgfx6Bitmap8getWidthEv>
9001308e:	4b11      	ldr	r3, [pc, #68]	; (900130d4 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x220>)
90013090:	901d      	str	r0, [sp, #116]	; 0x74
90013092:	681b      	ldr	r3, [r3, #0]
90013094:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
90013098:	b10a      	cbz	r2, 9001309e <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x1ea>
9001309a:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
9001309c:	b905      	cbnz	r5, 900130a0 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x1ec>
9001309e:	689d      	ldr	r5, [r3, #8]
900130a0:	682b      	ldr	r3, [r5, #0]
900130a2:	4620      	mov	r0, r4
900130a4:	6c1e      	ldr	r6, [r3, #64]	; 0x40
900130a6:	f7ff fefb 	bl	90012ea0 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv>
900130aa:	f64f 73ff 	movw	r3, #65535	; 0xffff
900130ae:	aa1e      	add	r2, sp, #120	; 0x78
900130b0:	a917      	add	r1, sp, #92	; 0x5c
900130b2:	9304      	str	r3, [sp, #16]
900130b4:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
900130b8:	e9cd 0302 	strd	r0, r3, [sp, #8]
900130bc:	ab13      	add	r3, sp, #76	; 0x4c
900130be:	4628      	mov	r0, r5
900130c0:	9301      	str	r3, [sp, #4]
900130c2:	ab15      	add	r3, sp, #84	; 0x54
900130c4:	9300      	str	r3, [sp, #0]
900130c6:	ab19      	add	r3, sp, #100	; 0x64
900130c8:	47b0      	blx	r6
900130ca:	b033      	add	sp, #204	; 0xcc
900130cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900130d0:	2403982e 	.word	0x2403982e
900130d4:	24039834 	.word	0x24039834

900130d8 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE>:
900130d8:	b570      	push	{r4, r5, r6, lr}
900130da:	ed2d 8b04 	vpush	{d8-d9}
900130de:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
900130e2:	b098      	sub	sp, #96	; 0x60
900130e4:	4604      	mov	r4, r0
900130e6:	460e      	mov	r6, r1
900130e8:	2b00      	cmp	r3, #0
900130ea:	d065      	beq.n	900131b8 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xe0>
900130ec:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
900130f0:	f100 0526 	add.w	r5, r0, #38	; 0x26
900130f4:	ed9f 8a37 	vldr	s16, [pc, #220]	; 900131d4 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xfc>
900130f8:	ee09 3a10 	vmov	s18, r3
900130fc:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
90013100:	4628      	mov	r0, r5
90013102:	ee08 3a90 	vmov	s17, r3
90013106:	4b34      	ldr	r3, [pc, #208]	; (900131d8 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x100>)
90013108:	eeb8 9ac9 	vcvt.f32.s32	s18, s18
9001310c:	930c      	str	r3, [sp, #48]	; 0x30
9001310e:	eef8 8ae8 	vcvt.f32.s32	s17, s17
90013112:	930d      	str	r3, [sp, #52]	; 0x34
90013114:	930e      	str	r3, [sp, #56]	; 0x38
90013116:	ee39 9a08 	vadd.f32	s18, s18, s16
9001311a:	930f      	str	r3, [sp, #60]	; 0x3c
9001311c:	f006 fd6c 	bl	90019bf8 <_ZNK8touchgfx6Bitmap8getWidthEv>
90013120:	ee07 0a90 	vmov	s15, r0
90013124:	4628      	mov	r0, r5
90013126:	ee78 8a88 	vadd.f32	s17, s17, s16
9001312a:	eef8 9ae7 	vcvt.f32.s32	s19, s15
9001312e:	f006 fd97 	bl	90019c60 <_ZNK8touchgfx6Bitmap9getHeightEv>
90013132:	4b2a      	ldr	r3, [pc, #168]	; (900131dc <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x104>)
90013134:	ee07 0a90 	vmov	s15, r0
90013138:	781b      	ldrb	r3, [r3, #0]
9001313a:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
9001313e:	eef0 7a48 	vmov.f32	s15, s16
90013142:	2b01      	cmp	r3, #1
90013144:	d13c      	bne.n	900131c0 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xe8>
90013146:	eef0 6a69 	vmov.f32	s13, s19
9001314a:	ee19 3a90 	vmov	r3, s19
9001314e:	eeb0 6a47 	vmov.f32	s12, s14
90013152:	eef0 5a47 	vmov.f32	s11, s14
90013156:	eef0 9a48 	vmov.f32	s19, s16
9001315a:	eeb0 7a48 	vmov.f32	s14, s16
9001315e:	9314      	str	r3, [sp, #80]	; 0x50
90013160:	ab14      	add	r3, sp, #80	; 0x50
90013162:	2200      	movs	r2, #0
90013164:	4631      	mov	r1, r6
90013166:	9303      	str	r3, [sp, #12]
90013168:	ab10      	add	r3, sp, #64	; 0x40
9001316a:	4620      	mov	r0, r4
9001316c:	edcd 7a04 	vstr	s15, [sp, #16]
90013170:	9302      	str	r3, [sp, #8]
90013172:	ab0c      	add	r3, sp, #48	; 0x30
90013174:	ed8d 9a05 	vstr	s18, [sp, #20]
90013178:	9301      	str	r3, [sp, #4]
9001317a:	ab08      	add	r3, sp, #32
9001317c:	ed8d 9a06 	vstr	s18, [sp, #24]
90013180:	9300      	str	r3, [sp, #0]
90013182:	ab04      	add	r3, sp, #16
90013184:	edcd 7a07 	vstr	s15, [sp, #28]
90013188:	edcd 7a08 	vstr	s15, [sp, #32]
9001318c:	edcd 7a09 	vstr	s15, [sp, #36]	; 0x24
90013190:	edcd 8a0a 	vstr	s17, [sp, #40]	; 0x28
90013194:	edcd 8a0b 	vstr	s17, [sp, #44]	; 0x2c
90013198:	edcd 7a10 	vstr	s15, [sp, #64]	; 0x40
9001319c:	edcd 9a11 	vstr	s19, [sp, #68]	; 0x44
900131a0:	edcd 5a12 	vstr	s11, [sp, #72]	; 0x48
900131a4:	ed8d 6a13 	vstr	s12, [sp, #76]	; 0x4c
900131a8:	edcd 7a15 	vstr	s15, [sp, #84]	; 0x54
900131ac:	ed8d 7a16 	vstr	s14, [sp, #88]	; 0x58
900131b0:	edcd 6a17 	vstr	s13, [sp, #92]	; 0x5c
900131b4:	f7ff fe7e 	bl	90012eb4 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
900131b8:	b018      	add	sp, #96	; 0x60
900131ba:	ecbd 8b04 	vpop	{d8-d9}
900131be:	bd70      	pop	{r4, r5, r6, pc}
900131c0:	eef0 6a47 	vmov.f32	s13, s14
900131c4:	ee18 3a10 	vmov	r3, s16
900131c8:	eef0 5a69 	vmov.f32	s11, s19
900131cc:	eeb0 6a48 	vmov.f32	s12, s16
900131d0:	e7c5      	b.n	9001315e <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x86>
900131d2:	bf00      	nop
900131d4:	00000000 	.word	0x00000000
900131d8:	42c80000 	.word	0x42c80000
900131dc:	2403982c 	.word	0x2403982c

900131e0 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
900131e0:	2000      	movs	r0, #0
900131e2:	4770      	bx	lr

900131e4 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
900131e4:	4b07      	ldr	r3, [pc, #28]	; (90013204 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
900131e6:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
900131e8:	881b      	ldrh	r3, [r3, #0]
900131ea:	4293      	cmp	r3, r2
900131ec:	bf81      	itttt	hi
900131ee:	4b06      	ldrhi	r3, [pc, #24]	; (90013208 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
900131f0:	681b      	ldrhi	r3, [r3, #0]
900131f2:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
900131f6:	7858      	ldrbhi	r0, [r3, #1]
900131f8:	bf8c      	ite	hi
900131fa:	f000 0003 	andhi.w	r0, r0, #3
900131fe:	2000      	movls	r0, #0
90013200:	4770      	bx	lr
90013202:	bf00      	nop
90013204:	24039890 	.word	0x24039890
90013208:	2403988c 	.word	0x2403988c

9001320c <_ZN8touchgfx8TextAreaD1Ev>:
9001320c:	4770      	bx	lr
	...

90013210 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
90013210:	4b11      	ldr	r3, [pc, #68]	; (90013258 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
90013212:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90013216:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
90013218:	4604      	mov	r4, r0
9001321a:	881b      	ldrh	r3, [r3, #0]
9001321c:	428b      	cmp	r3, r1
9001321e:	d918      	bls.n	90013252 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
90013220:	6803      	ldr	r3, [r0, #0]
90013222:	6f9d      	ldr	r5, [r3, #120]	; 0x78
90013224:	4b0d      	ldr	r3, [pc, #52]	; (9001325c <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
90013226:	6818      	ldr	r0, [r3, #0]
90013228:	f7f1 f800 	bl	9000422c <_ZNK8touchgfx5Texts7getTextEt>
9001322c:	6823      	ldr	r3, [r4, #0]
9001322e:	4606      	mov	r6, r0
90013230:	4620      	mov	r0, r4
90013232:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
90013234:	4798      	blx	r3
90013236:	6823      	ldr	r3, [r4, #0]
90013238:	4607      	mov	r7, r0
9001323a:	4620      	mov	r0, r4
9001323c:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
90013240:	4798      	blx	r3
90013242:	463a      	mov	r2, r7
90013244:	4603      	mov	r3, r0
90013246:	4631      	mov	r1, r6
90013248:	4620      	mov	r0, r4
9001324a:	46ac      	mov	ip, r5
9001324c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
90013250:	4760      	bx	ip
90013252:	2000      	movs	r0, #0
90013254:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90013258:	24039890 	.word	0x24039890
9001325c:	24039898 	.word	0x24039898

90013260 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
90013260:	4b18      	ldr	r3, [pc, #96]	; (900132c4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
90013262:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
90013266:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
90013268:	4604      	mov	r4, r0
9001326a:	881b      	ldrh	r3, [r3, #0]
9001326c:	428b      	cmp	r3, r1
9001326e:	d926      	bls.n	900132be <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
90013270:	4b15      	ldr	r3, [pc, #84]	; (900132c8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
90013272:	681b      	ldr	r3, [r3, #0]
90013274:	eb03 0241 	add.w	r2, r3, r1, lsl #1
90013278:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
9001327c:	4b13      	ldr	r3, [pc, #76]	; (900132cc <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
9001327e:	7855      	ldrb	r5, [r2, #1]
90013280:	681b      	ldr	r3, [r3, #0]
90013282:	f3c5 0581 	ubfx	r5, r5, #2, #2
90013286:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
9001328a:	6833      	ldr	r3, [r6, #0]
9001328c:	69df      	ldr	r7, [r3, #28]
9001328e:	4b10      	ldr	r3, [pc, #64]	; (900132d0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
90013290:	6818      	ldr	r0, [r3, #0]
90013292:	f7f0 ffcb 	bl	9000422c <_ZNK8touchgfx5Texts7getTextEt>
90013296:	6823      	ldr	r3, [r4, #0]
90013298:	4680      	mov	r8, r0
9001329a:	4620      	mov	r0, r4
9001329c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
9001329e:	4798      	blx	r3
900132a0:	6823      	ldr	r3, [r4, #0]
900132a2:	4681      	mov	r9, r0
900132a4:	4620      	mov	r0, r4
900132a6:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
900132aa:	4798      	blx	r3
900132ac:	464b      	mov	r3, r9
900132ae:	9000      	str	r0, [sp, #0]
900132b0:	4642      	mov	r2, r8
900132b2:	4629      	mov	r1, r5
900132b4:	4630      	mov	r0, r6
900132b6:	47b8      	blx	r7
900132b8:	b003      	add	sp, #12
900132ba:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900132be:	2000      	movs	r0, #0
900132c0:	e7fa      	b.n	900132b8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
900132c2:	bf00      	nop
900132c4:	24039890 	.word	0x24039890
900132c8:	2403988c 	.word	0x2403988c
900132cc:	24039894 	.word	0x24039894
900132d0:	24039898 	.word	0x24039898

900132d4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
900132d4:	b40e      	push	{r1, r2, r3}
900132d6:	4b30      	ldr	r3, [pc, #192]	; (90013398 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
900132d8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900132dc:	881a      	ldrh	r2, [r3, #0]
900132de:	b09d      	sub	sp, #116	; 0x74
900132e0:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
900132e2:	4604      	mov	r4, r0
900132e4:	429a      	cmp	r2, r3
900132e6:	d954      	bls.n	90013392 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
900132e8:	aa26      	add	r2, sp, #152	; 0x98
900132ea:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 9001339c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
900132ee:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 900133a0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
900132f2:	9202      	str	r2, [sp, #8]
900132f4:	f8d9 2000 	ldr.w	r2, [r9]
900132f8:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
900132fc:	f8d8 3000 	ldr.w	r3, [r8]
90013300:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
90013304:	682b      	ldr	r3, [r5, #0]
90013306:	4628      	mov	r0, r5
90013308:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001330a:	4798      	blx	r3
9001330c:	4606      	mov	r6, r0
9001330e:	b207      	sxth	r7, r0
90013310:	a803      	add	r0, sp, #12
90013312:	f005 f8e4 	bl	900184de <_ZN8touchgfx12TextProviderC1Ev>
90013316:	682b      	ldr	r3, [r5, #0]
90013318:	4628      	mov	r0, r5
9001331a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
9001331c:	4798      	blx	r3
9001331e:	682b      	ldr	r3, [r5, #0]
90013320:	4682      	mov	sl, r0
90013322:	4628      	mov	r0, r5
90013324:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90013326:	4798      	blx	r3
90013328:	4653      	mov	r3, sl
9001332a:	9000      	str	r0, [sp, #0]
9001332c:	a803      	add	r0, sp, #12
9001332e:	9a02      	ldr	r2, [sp, #8]
90013330:	9925      	ldr	r1, [sp, #148]	; 0x94
90013332:	f005 f92f 	bl	90018594 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90013336:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
90013338:	f8d9 3000 	ldr.w	r3, [r9]
9001333c:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
90013340:	8925      	ldrh	r5, [r4, #8]
90013342:	eb03 0142 	add.w	r1, r3, r2, lsl #1
90013346:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
9001334a:	eba5 050c 	sub.w	r5, r5, ip
9001334e:	784a      	ldrb	r2, [r1, #1]
90013350:	f8d8 3000 	ldr.w	r3, [r8]
90013354:	b22d      	sxth	r5, r5
90013356:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
9001335a:	f3c2 0281 	ubfx	r2, r2, #2, #2
9001335e:	9500      	str	r5, [sp, #0]
90013360:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
90013364:	a803      	add	r0, sp, #12
90013366:	f002 fded 	bl	90015f44 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
9001336a:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
9001336e:	b203      	sxth	r3, r0
90013370:	18b9      	adds	r1, r7, r2
90013372:	2900      	cmp	r1, #0
90013374:	dd0b      	ble.n	9001338e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
90013376:	3b01      	subs	r3, #1
90013378:	fb13 f302 	smulbb	r3, r3, r2
9001337c:	fb16 3300 	smlabb	r3, r6, r0, r3
90013380:	b21f      	sxth	r7, r3
90013382:	4638      	mov	r0, r7
90013384:	b01d      	add	sp, #116	; 0x74
90013386:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001338a:	b003      	add	sp, #12
9001338c:	4770      	bx	lr
9001338e:	2b00      	cmp	r3, #0
90013390:	dcf7      	bgt.n	90013382 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
90013392:	2700      	movs	r7, #0
90013394:	e7f5      	b.n	90013382 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
90013396:	bf00      	nop
90013398:	24039890 	.word	0x24039890
9001339c:	2403988c 	.word	0x2403988c
900133a0:	24039894 	.word	0x24039894

900133a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
900133a4:	4bbd      	ldr	r3, [pc, #756]	; (9001369c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
900133a6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900133aa:	460c      	mov	r4, r1
900133ac:	881b      	ldrh	r3, [r3, #0]
900133ae:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
900133b0:	b0a9      	sub	sp, #164	; 0xa4
900133b2:	4680      	mov	r8, r0
900133b4:	428b      	cmp	r3, r1
900133b6:	d809      	bhi.n	900133cc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
900133b8:	2300      	movs	r3, #0
900133ba:	f04f 32ff 	mov.w	r2, #4294967295
900133be:	6083      	str	r3, [r0, #8]
900133c0:	e9c0 3200 	strd	r3, r2, [r0]
900133c4:	4640      	mov	r0, r8
900133c6:	b029      	add	sp, #164	; 0xa4
900133c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900133cc:	4eb4      	ldr	r6, [pc, #720]	; (900136a0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
900133ce:	6833      	ldr	r3, [r6, #0]
900133d0:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
900133d4:	4bb3      	ldr	r3, [pc, #716]	; (900136a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
900133d6:	681b      	ldr	r3, [r3, #0]
900133d8:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
900133dc:	4bb2      	ldr	r3, [pc, #712]	; (900136a8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
900133de:	6818      	ldr	r0, [r3, #0]
900133e0:	f7f0 ff24 	bl	9000422c <_ZNK8touchgfx5Texts7getTextEt>
900133e4:	682b      	ldr	r3, [r5, #0]
900133e6:	4681      	mov	r9, r0
900133e8:	4628      	mov	r0, r5
900133ea:	6b9b      	ldr	r3, [r3, #56]	; 0x38
900133ec:	4798      	blx	r3
900133ee:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
900133f0:	b203      	sxth	r3, r0
900133f2:	4682      	mov	sl, r0
900133f4:	4407      	add	r7, r0
900133f6:	a80f      	add	r0, sp, #60	; 0x3c
900133f8:	9304      	str	r3, [sp, #16]
900133fa:	b2bb      	uxth	r3, r7
900133fc:	9303      	str	r3, [sp, #12]
900133fe:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
90013402:	2b00      	cmp	r3, #0
90013404:	f040 80a5 	bne.w	90013552 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1ae>
90013408:	f005 f869 	bl	900184de <_ZN8touchgfx12TextProviderC1Ev>
9001340c:	682b      	ldr	r3, [r5, #0]
9001340e:	4628      	mov	r0, r5
90013410:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90013412:	4798      	blx	r3
90013414:	682b      	ldr	r3, [r5, #0]
90013416:	4606      	mov	r6, r0
90013418:	4628      	mov	r0, r5
9001341a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
9001341c:	4798      	blx	r3
9001341e:	6823      	ldr	r3, [r4, #0]
90013420:	4607      	mov	r7, r0
90013422:	4620      	mov	r0, r4
90013424:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
90013426:	4798      	blx	r3
90013428:	6823      	ldr	r3, [r4, #0]
9001342a:	4683      	mov	fp, r0
9001342c:	4620      	mov	r0, r4
9001342e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
90013432:	4798      	blx	r3
90013434:	463b      	mov	r3, r7
90013436:	4649      	mov	r1, r9
90013438:	4632      	mov	r2, r6
9001343a:	2600      	movs	r6, #0
9001343c:	e9cd b000 	strd	fp, r0, [sp]
90013440:	a80f      	add	r0, sp, #60	; 0x3c
90013442:	4637      	mov	r7, r6
90013444:	f005 f8bb 	bl	900185be <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
90013448:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
9001344c:	f8df b250 	ldr.w	fp, [pc, #592]	; 900136a0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
90013450:	f013 0ffd 	tst.w	r3, #253	; 0xfd
90013454:	bf0c      	ite	eq
90013456:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
9001345a:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
9001345e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
90013460:	4629      	mov	r1, r5
90013462:	f8db 3000 	ldr.w	r3, [fp]
90013466:	a80f      	add	r0, sp, #60	; 0x3c
90013468:	3701      	adds	r7, #1
9001346a:	eb03 0342 	add.w	r3, r3, r2, lsl #1
9001346e:	f647 72ff 	movw	r2, #32767	; 0x7fff
90013472:	b2bf      	uxth	r7, r7
90013474:	785b      	ldrb	r3, [r3, #1]
90013476:	f3c3 0381 	ubfx	r3, r3, #2, #2
9001347a:	f002 fa7e 	bl	9001597a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
9001347e:	9b03      	ldr	r3, [sp, #12]
90013480:	4286      	cmp	r6, r0
90013482:	eba9 0903 	sub.w	r9, r9, r3
90013486:	bfb8      	it	lt
90013488:	4606      	movlt	r6, r0
9001348a:	a80f      	add	r0, sp, #60	; 0x3c
9001348c:	fa0f f989 	sxth.w	r9, r9
90013490:	b236      	sxth	r6, r6
90013492:	f005 f84b 	bl	9001852c <_ZN8touchgfx12TextProvider11endOfStringEv>
90013496:	b918      	cbnz	r0, 900134a0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
90013498:	7a2b      	ldrb	r3, [r5, #8]
9001349a:	444b      	add	r3, r9
9001349c:	2b00      	cmp	r3, #0
9001349e:	dcde      	bgt.n	9001345e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xba>
900134a0:	9b03      	ldr	r3, [sp, #12]
900134a2:	4620      	mov	r0, r4
900134a4:	9a04      	ldr	r2, [sp, #16]
900134a6:	fb13 f707 	smulbb	r7, r3, r7
900134aa:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
900134ac:	f895 9009 	ldrb.w	r9, [r5, #9]
900134b0:	1aff      	subs	r7, r7, r3
900134b2:	b2bf      	uxth	r7, r7
900134b4:	b23b      	sxth	r3, r7
900134b6:	429a      	cmp	r2, r3
900134b8:	bfa8      	it	ge
900134ba:	4657      	movge	r7, sl
900134bc:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
900134c0:	f013 0ffd 	tst.w	r3, #253	; 0xfd
900134c4:	6823      	ldr	r3, [r4, #0]
900134c6:	444f      	add	r7, r9
900134c8:	6edb      	ldr	r3, [r3, #108]	; 0x6c
900134ca:	bf08      	it	eq
900134cc:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
900134d0:	fa1f f987 	uxth.w	r9, r7
900134d4:	bf18      	it	ne
900134d6:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
900134da:	4798      	blx	r3
900134dc:	2801      	cmp	r0, #1
900134de:	fa0f f789 	sxth.w	r7, r9
900134e2:	b2b3      	uxth	r3, r6
900134e4:	f000 80e2 	beq.w	900136ac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
900134e8:	2802      	cmp	r0, #2
900134ea:	f894 6037 	ldrb.w	r6, [r4, #55]	; 0x37
900134ee:	f000 80e3 	beq.w	900136b8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
900134f2:	7aea      	ldrb	r2, [r5, #11]
900134f4:	b236      	sxth	r6, r6
900134f6:	7b2d      	ldrb	r5, [r5, #12]
900134f8:	1ab6      	subs	r6, r6, r2
900134fa:	442a      	add	r2, r5
900134fc:	fa1f fa86 	uxth.w	sl, r6
90013500:	4413      	add	r3, r2
90013502:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
90013506:	fa0f fb8a 	sxth.w	fp, sl
9001350a:	b29b      	uxth	r3, r3
9001350c:	2a02      	cmp	r2, #2
9001350e:	b21e      	sxth	r6, r3
90013510:	f000 80d6 	beq.w	900136c0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
90013514:	2a03      	cmp	r2, #3
90013516:	f000 80de 	beq.w	900136d6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
9001351a:	2a01      	cmp	r2, #1
9001351c:	f040 80e6 	bne.w	900136ec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
90013520:	8925      	ldrh	r5, [r4, #8]
90013522:	4633      	mov	r3, r6
90013524:	463e      	mov	r6, r7
90013526:	eba5 0909 	sub.w	r9, r5, r9
9001352a:	461f      	mov	r7, r3
9001352c:	465d      	mov	r5, fp
9001352e:	fa0f fb89 	sxth.w	fp, r9
90013532:	4b5d      	ldr	r3, [pc, #372]	; (900136a8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
90013534:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
90013536:	6818      	ldr	r0, [r3, #0]
90013538:	f7f0 fe78 	bl	9000422c <_ZNK8touchgfx5Texts7getTextEt>
9001353c:	f8a8 b000 	strh.w	fp, [r8]
90013540:	f8a8 5002 	strh.w	r5, [r8, #2]
90013544:	f8a8 6004 	strh.w	r6, [r8, #4]
90013548:	f8a8 7006 	strh.w	r7, [r8, #6]
9001354c:	f8c8 0008 	str.w	r0, [r8, #8]
90013550:	e738      	b.n	900133c4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
90013552:	f004 ffc4 	bl	900184de <_ZN8touchgfx12TextProviderC1Ev>
90013556:	682b      	ldr	r3, [r5, #0]
90013558:	4628      	mov	r0, r5
9001355a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
9001355c:	4798      	blx	r3
9001355e:	682b      	ldr	r3, [r5, #0]
90013560:	4607      	mov	r7, r0
90013562:	4628      	mov	r0, r5
90013564:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90013566:	4798      	blx	r3
90013568:	6823      	ldr	r3, [r4, #0]
9001356a:	4683      	mov	fp, r0
9001356c:	4620      	mov	r0, r4
9001356e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
90013570:	4798      	blx	r3
90013572:	6822      	ldr	r2, [r4, #0]
90013574:	9005      	str	r0, [sp, #20]
90013576:	4620      	mov	r0, r4
90013578:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
9001357c:	4790      	blx	r2
9001357e:	9b05      	ldr	r3, [sp, #20]
90013580:	463a      	mov	r2, r7
90013582:	4649      	mov	r1, r9
90013584:	9001      	str	r0, [sp, #4]
90013586:	a80f      	add	r0, sp, #60	; 0x3c
90013588:	9300      	str	r3, [sp, #0]
9001358a:	465b      	mov	r3, fp
9001358c:	f005 f817 	bl	900185be <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
90013590:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
90013594:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
90013598:	af0f      	add	r7, sp, #60	; 0x3c
9001359a:	f013 0ffd 	tst.w	r3, #253	; 0xfd
9001359e:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
900135a2:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
900135a4:	bf0a      	itet	eq
900135a6:	464a      	moveq	r2, r9
900135a8:	461a      	movne	r2, r3
900135aa:	4699      	moveq	r9, r3
900135ac:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
900135b0:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
900135b4:	1ad2      	subs	r2, r2, r3
900135b6:	6833      	ldr	r3, [r6, #0]
900135b8:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	; 0x34
900135bc:	eb03 0341 	add.w	r3, r3, r1, lsl #1
900135c0:	7859      	ldrb	r1, [r3, #1]
900135c2:	2300      	movs	r3, #0
900135c4:	9707      	str	r7, [sp, #28]
900135c6:	f3c1 0181 	ubfx	r1, r1, #2, #2
900135ca:	f8ad 3018 	strh.w	r3, [sp, #24]
900135ce:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
900135d2:	f88d 1020 	strb.w	r1, [sp, #32]
900135d6:	9509      	str	r5, [sp, #36]	; 0x24
900135d8:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
900135dc:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
900135e0:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
900135e4:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
900135e8:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
900135ec:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
900135f0:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
900135f4:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
900135f8:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
900135fc:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
90013600:	b350      	cbz	r0, 90013658 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
90013602:	682b      	ldr	r3, [r5, #0]
90013604:	4628      	mov	r0, r5
90013606:	695b      	ldr	r3, [r3, #20]
90013608:	4798      	blx	r3
9001360a:	4607      	mov	r7, r0
9001360c:	b320      	cbz	r0, 90013658 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
9001360e:	9809      	ldr	r0, [sp, #36]	; 0x24
90013610:	4639      	mov	r1, r7
90013612:	6803      	ldr	r3, [r0, #0]
90013614:	68db      	ldr	r3, [r3, #12]
90013616:	4798      	blx	r3
90013618:	4606      	mov	r6, r0
9001361a:	b1e8      	cbz	r0, 90013658 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
9001361c:	7b43      	ldrb	r3, [r0, #13]
9001361e:	7a82      	ldrb	r2, [r0, #10]
90013620:	005b      	lsls	r3, r3, #1
90013622:	f403 7380 	and.w	r3, r3, #256	; 0x100
90013626:	4313      	orrs	r3, r2
90013628:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
9001362c:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
90013630:	2b06      	cmp	r3, #6
90013632:	d111      	bne.n	90013658 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
90013634:	9809      	ldr	r0, [sp, #36]	; 0x24
90013636:	4632      	mov	r2, r6
90013638:	4639      	mov	r1, r7
9001363a:	6803      	ldr	r3, [r0, #0]
9001363c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
9001363e:	4798      	blx	r3
90013640:	7b73      	ldrb	r3, [r6, #13]
90013642:	005b      	lsls	r3, r3, #1
90013644:	f403 7280 	and.w	r2, r3, #256	; 0x100
90013648:	7ab3      	ldrb	r3, [r6, #10]
9001364a:	4313      	orrs	r3, r2
9001364c:	4418      	add	r0, r3
9001364e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
90013652:	4418      	add	r0, r3
90013654:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
90013658:	2600      	movs	r6, #0
9001365a:	4637      	mov	r7, r6
9001365c:	a806      	add	r0, sp, #24
9001365e:	3701      	adds	r7, #1
90013660:	f002 fb6d 	bl	90015d3e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
90013664:	f8bd 0036 	ldrh.w	r0, [sp, #54]	; 0x36
90013668:	9b03      	ldr	r3, [sp, #12]
9001366a:	b2bf      	uxth	r7, r7
9001366c:	4286      	cmp	r6, r0
9001366e:	eba9 0903 	sub.w	r9, r9, r3
90013672:	f8bd 3018 	ldrh.w	r3, [sp, #24]
90013676:	bfb8      	it	lt
90013678:	4606      	movlt	r6, r0
9001367a:	fa0f f989 	sxth.w	r9, r9
9001367e:	b236      	sxth	r6, r6
90013680:	2b00      	cmp	r3, #0
90013682:	f43f af0d 	beq.w	900134a0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
90013686:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
9001368a:	2b00      	cmp	r3, #0
9001368c:	f47f af08 	bne.w	900134a0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
90013690:	7a2b      	ldrb	r3, [r5, #8]
90013692:	444b      	add	r3, r9
90013694:	2b00      	cmp	r3, #0
90013696:	dce1      	bgt.n	9001365c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b8>
90013698:	e702      	b.n	900134a0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
9001369a:	bf00      	nop
9001369c:	24039890 	.word	0x24039890
900136a0:	2403988c 	.word	0x2403988c
900136a4:	24039894 	.word	0x24039894
900136a8:	24039898 	.word	0x24039898
900136ac:	ebaa 0606 	sub.w	r6, sl, r6
900136b0:	2002      	movs	r0, #2
900136b2:	fb96 f6f0 	sdiv	r6, r6, r0
900136b6:	e71c      	b.n	900134f2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
900136b8:	441e      	add	r6, r3
900136ba:	ebaa 0606 	sub.w	r6, sl, r6
900136be:	e718      	b.n	900134f2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
900136c0:	8925      	ldrh	r5, [r4, #8]
900136c2:	1aed      	subs	r5, r5, r3
900136c4:	eba5 050a 	sub.w	r5, r5, sl
900136c8:	fa0f fb85 	sxth.w	fp, r5
900136cc:	8965      	ldrh	r5, [r4, #10]
900136ce:	eba5 0509 	sub.w	r5, r5, r9
900136d2:	b22d      	sxth	r5, r5
900136d4:	e72d      	b.n	90013532 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>
900136d6:	8965      	ldrh	r5, [r4, #10]
900136d8:	f04f 0b00 	mov.w	fp, #0
900136dc:	1aed      	subs	r5, r5, r3
900136de:	4633      	mov	r3, r6
900136e0:	463e      	mov	r6, r7
900136e2:	eba5 050a 	sub.w	r5, r5, sl
900136e6:	461f      	mov	r7, r3
900136e8:	b22d      	sxth	r5, r5
900136ea:	e722      	b.n	90013532 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>
900136ec:	2500      	movs	r5, #0
900136ee:	e720      	b.n	90013532 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>

900136f0 <_ZN8touchgfx8TextAreaD0Ev>:
900136f0:	b510      	push	{r4, lr}
900136f2:	4604      	mov	r4, r0
900136f4:	2148      	movs	r1, #72	; 0x48
900136f6:	f014 fa13 	bl	90027b20 <_ZdlPvj>
900136fa:	4620      	mov	r0, r4
900136fc:	bd10      	pop	{r4, pc}
	...

90013700 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
90013700:	b513      	push	{r0, r1, r4, lr}
90013702:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
90013706:	4604      	mov	r4, r0
90013708:	b1fb      	cbz	r3, 9001374a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
9001370a:	4b16      	ldr	r3, [pc, #88]	; (90013764 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
9001370c:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
9001370e:	881b      	ldrh	r3, [r3, #0]
90013710:	428b      	cmp	r3, r1
90013712:	d91a      	bls.n	9001374a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
90013714:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
90013718:	2b00      	cmp	r3, #0
9001371a:	dd16      	ble.n	9001374a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
9001371c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
90013720:	2b00      	cmp	r3, #0
90013722:	dd12      	ble.n	9001374a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
90013724:	4b10      	ldr	r3, [pc, #64]	; (90013768 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
90013726:	6818      	ldr	r0, [r3, #0]
90013728:	f7f0 fd80 	bl	9000422c <_ZNK8touchgfx5Texts7getTextEt>
9001372c:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
90013730:	6822      	ldr	r2, [r4, #0]
90013732:	2b00      	cmp	r3, #0
90013734:	db06      	blt.n	90013744 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
90013736:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
9001373a:	2b00      	cmp	r3, #0
9001373c:	db02      	blt.n	90013744 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
9001373e:	6c63      	ldr	r3, [r4, #68]	; 0x44
90013740:	4298      	cmp	r0, r3
90013742:	d004      	beq.n	9001374e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
90013744:	6953      	ldr	r3, [r2, #20]
90013746:	4620      	mov	r0, r4
90013748:	4798      	blx	r3
9001374a:	b002      	add	sp, #8
9001374c:	bd10      	pop	{r4, pc}
9001374e:	f104 013c 	add.w	r1, r4, #60	; 0x3c
90013752:	466b      	mov	r3, sp
90013754:	6912      	ldr	r2, [r2, #16]
90013756:	c903      	ldmia	r1, {r0, r1}
90013758:	e883 0003 	stmia.w	r3, {r0, r1}
9001375c:	4619      	mov	r1, r3
9001375e:	4620      	mov	r0, r4
90013760:	4790      	blx	r2
90013762:	e7f2      	b.n	9001374a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
90013764:	24039890 	.word	0x24039890
90013768:	24039898 	.word	0x24039898

9001376c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
9001376c:	4b45      	ldr	r3, [pc, #276]	; (90013884 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
9001376e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90013772:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
90013774:	b08e      	sub	sp, #56	; 0x38
90013776:	881b      	ldrh	r3, [r3, #0]
90013778:	4604      	mov	r4, r0
9001377a:	4293      	cmp	r3, r2
9001377c:	d97e      	bls.n	9001387c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
9001377e:	6808      	ldr	r0, [r1, #0]
90013780:	ab05      	add	r3, sp, #20
90013782:	6849      	ldr	r1, [r1, #4]
90013784:	4d40      	ldr	r5, [pc, #256]	; (90013888 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
90013786:	c303      	stmia	r3!, {r0, r1}
90013788:	4611      	mov	r1, r2
9001378a:	6828      	ldr	r0, [r5, #0]
9001378c:	f7f0 fd4e 	bl	9000422c <_ZNK8touchgfx5Texts7getTextEt>
90013790:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
90013794:	2b00      	cmp	r3, #0
90013796:	db11      	blt.n	900137bc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
90013798:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
9001379c:	2b00      	cmp	r3, #0
9001379e:	db0d      	blt.n	900137bc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
900137a0:	6c63      	ldr	r3, [r4, #68]	; 0x44
900137a2:	4298      	cmp	r0, r3
900137a4:	d10a      	bne.n	900137bc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
900137a6:	f104 023c 	add.w	r2, r4, #60	; 0x3c
900137aa:	ab09      	add	r3, sp, #36	; 0x24
900137ac:	e892 0003 	ldmia.w	r2, {r0, r1}
900137b0:	e883 0003 	stmia.w	r3, {r0, r1}
900137b4:	4619      	mov	r1, r3
900137b6:	a805      	add	r0, sp, #20
900137b8:	f7fd fe4a 	bl	90011450 <_ZN8touchgfx4RectaNERKS0_>
900137bc:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
900137c0:	2b00      	cmp	r3, #0
900137c2:	dd5b      	ble.n	9001387c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
900137c4:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
900137c8:	2b00      	cmp	r3, #0
900137ca:	dd57      	ble.n	9001387c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
900137cc:	4f2f      	ldr	r7, [pc, #188]	; (9001388c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
900137ce:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
900137d0:	683b      	ldr	r3, [r7, #0]
900137d2:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
900137d6:	4b2e      	ldr	r3, [pc, #184]	; (90013890 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
900137d8:	681b      	ldr	r3, [r3, #0]
900137da:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
900137de:	2e00      	cmp	r6, #0
900137e0:	d04c      	beq.n	9001387c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
900137e2:	6823      	ldr	r3, [r4, #0]
900137e4:	4620      	mov	r0, r4
900137e6:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
900137ea:	6edb      	ldr	r3, [r3, #108]	; 0x6c
900137ec:	4798      	blx	r3
900137ee:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
900137f0:	683b      	ldr	r3, [r7, #0]
900137f2:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
900137f6:	eb03 0342 	add.w	r3, r3, r2, lsl #1
900137fa:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
900137fe:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
90013802:	785b      	ldrb	r3, [r3, #1]
90013804:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
90013808:	f3c3 0381 	ubfx	r3, r3, #2, #2
9001380c:	6b21      	ldr	r1, [r4, #48]	; 0x30
9001380e:	9609      	str	r6, [sp, #36]	; 0x24
90013810:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
90013814:	4b1f      	ldr	r3, [pc, #124]	; (90013894 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
90013816:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
9001381a:	681b      	ldr	r3, [r3, #0]
9001381c:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
90013820:	910b      	str	r1, [sp, #44]	; 0x2c
90013822:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
90013826:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
9001382a:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
9001382e:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
90013832:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
90013836:	b10a      	cbz	r2, 9001383c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
90013838:	6cde      	ldr	r6, [r3, #76]	; 0x4c
9001383a:	b906      	cbnz	r6, 9001383e <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
9001383c:	689e      	ldr	r6, [r3, #8]
9001383e:	af07      	add	r7, sp, #28
90013840:	4621      	mov	r1, r4
90013842:	4638      	mov	r0, r7
90013844:	f004 f96a 	bl	90017b1c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90013848:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
9001384a:	6828      	ldr	r0, [r5, #0]
9001384c:	f7f0 fcee 	bl	9000422c <_ZNK8touchgfx5Texts7getTextEt>
90013850:	6823      	ldr	r3, [r4, #0]
90013852:	4605      	mov	r5, r0
90013854:	4620      	mov	r0, r4
90013856:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
90013858:	4798      	blx	r3
9001385a:	6823      	ldr	r3, [r4, #0]
9001385c:	4680      	mov	r8, r0
9001385e:	4620      	mov	r0, r4
90013860:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
90013864:	4798      	blx	r3
90013866:	ab09      	add	r3, sp, #36	; 0x24
90013868:	9501      	str	r5, [sp, #4]
9001386a:	9300      	str	r3, [sp, #0]
9001386c:	ab05      	add	r3, sp, #20
9001386e:	e9cd 8002 	strd	r8, r0, [sp, #8]
90013872:	4630      	mov	r0, r6
90013874:	e897 0006 	ldmia.w	r7, {r1, r2}
90013878:	f7f0 fc88 	bl	9000418c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
9001387c:	b00e      	add	sp, #56	; 0x38
9001387e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90013882:	bf00      	nop
90013884:	24039890 	.word	0x24039890
90013888:	24039898 	.word	0x24039898
9001388c:	2403988c 	.word	0x2403988c
90013890:	24039894 	.word	0x24039894
90013894:	24039834 	.word	0x24039834

90013898 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
90013898:	b570      	push	{r4, r5, r6, lr}
9001389a:	6803      	ldr	r3, [r0, #0]
9001389c:	4604      	mov	r4, r0
9001389e:	4615      	mov	r5, r2
900138a0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
900138a2:	4798      	blx	r3
900138a4:	6823      	ldr	r3, [r4, #0]
900138a6:	4629      	mov	r1, r5
900138a8:	4620      	mov	r0, r4
900138aa:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
900138ac:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900138b0:	4718      	bx	r3
	...

900138b4 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
900138b4:	b538      	push	{r3, r4, r5, lr}
900138b6:	4b0e      	ldr	r3, [pc, #56]	; (900138f0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
900138b8:	4604      	mov	r4, r0
900138ba:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
900138bc:	881b      	ldrh	r3, [r3, #0]
900138be:	429a      	cmp	r2, r3
900138c0:	d214      	bcs.n	900138ec <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
900138c2:	6803      	ldr	r3, [r0, #0]
900138c4:	6f5b      	ldr	r3, [r3, #116]	; 0x74
900138c6:	4798      	blx	r3
900138c8:	6823      	ldr	r3, [r4, #0]
900138ca:	4605      	mov	r5, r0
900138cc:	4620      	mov	r0, r4
900138ce:	6f1b      	ldr	r3, [r3, #112]	; 0x70
900138d0:	4798      	blx	r3
900138d2:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
900138d6:	b22d      	sxth	r5, r5
900138d8:	4601      	mov	r1, r0
900138da:	f013 0ffd 	tst.w	r3, #253	; 0xfd
900138de:	bf06      	itte	eq
900138e0:	4602      	moveq	r2, r0
900138e2:	4629      	moveq	r1, r5
900138e4:	462a      	movne	r2, r5
900138e6:	4620      	mov	r0, r4
900138e8:	f7ff ffd6 	bl	90013898 <_ZN8touchgfx8Drawable14setWidthHeightEss>
900138ec:	bd38      	pop	{r3, r4, r5, pc}
900138ee:	bf00      	nop
900138f0:	24039890 	.word	0x24039890

900138f4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
900138f4:	b530      	push	{r4, r5, lr}
900138f6:	888b      	ldrh	r3, [r1, #4]
900138f8:	b085      	sub	sp, #20
900138fa:	4604      	mov	r4, r0
900138fc:	8583      	strh	r3, [r0, #44]	; 0x2c
900138fe:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
90013902:	b923      	cbnz	r3, 9001390e <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
90013904:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
90013908:	b90b      	cbnz	r3, 9001390e <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
9001390a:	f7ff ffd3 	bl	900138b4 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
9001390e:	6823      	ldr	r3, [r4, #0]
90013910:	466d      	mov	r5, sp
90013912:	4621      	mov	r1, r4
90013914:	343c      	adds	r4, #60	; 0x3c
90013916:	4628      	mov	r0, r5
90013918:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
9001391c:	4798      	blx	r3
9001391e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90013922:	e884 0007 	stmia.w	r4, {r0, r1, r2}
90013926:	b005      	add	sp, #20
90013928:	bd30      	pop	{r4, r5, pc}

9001392a <_ZNK8touchgfx3Box12getSolidRectEv>:
9001392a:	2300      	movs	r3, #0
9001392c:	8083      	strh	r3, [r0, #4]
9001392e:	80c3      	strh	r3, [r0, #6]
90013930:	8003      	strh	r3, [r0, #0]
90013932:	8043      	strh	r3, [r0, #2]
90013934:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
90013938:	2bff      	cmp	r3, #255	; 0xff
9001393a:	bf01      	itttt	eq
9001393c:	890b      	ldrheq	r3, [r1, #8]
9001393e:	8083      	strheq	r3, [r0, #4]
90013940:	894b      	ldrheq	r3, [r1, #10]
90013942:	80c3      	strheq	r3, [r0, #6]
90013944:	4770      	bx	lr
	...

90013948 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
90013948:	b537      	push	{r0, r1, r2, r4, r5, lr}
9001394a:	4604      	mov	r4, r0
9001394c:	466b      	mov	r3, sp
9001394e:	6808      	ldr	r0, [r1, #0]
90013950:	6849      	ldr	r1, [r1, #4]
90013952:	c303      	stmia	r3!, {r0, r1}
90013954:	6823      	ldr	r3, [r4, #0]
90013956:	4669      	mov	r1, sp
90013958:	4620      	mov	r0, r4
9001395a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001395c:	4798      	blx	r3
9001395e:	4b08      	ldr	r3, [pc, #32]	; (90013980 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
90013960:	681b      	ldr	r3, [r3, #0]
90013962:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
90013966:	b10a      	cbz	r2, 9001396c <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
90013968:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
9001396a:	b900      	cbnz	r0, 9001396e <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
9001396c:	6898      	ldr	r0, [r3, #8]
9001396e:	6803      	ldr	r3, [r0, #0]
90013970:	4669      	mov	r1, sp
90013972:	6aa2      	ldr	r2, [r4, #40]	; 0x28
90013974:	6a1d      	ldr	r5, [r3, #32]
90013976:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
9001397a:	47a8      	blx	r5
9001397c:	b003      	add	sp, #12
9001397e:	bd30      	pop	{r4, r5, pc}
90013980:	24039834 	.word	0x24039834

90013984 <_ZN8touchgfx3BoxD1Ev>:
90013984:	4770      	bx	lr

90013986 <_ZN8touchgfx3BoxD0Ev>:
90013986:	b510      	push	{r4, lr}
90013988:	4604      	mov	r4, r0
9001398a:	212c      	movs	r1, #44	; 0x2c
9001398c:	f014 f8c8 	bl	90027b20 <_ZdlPvj>
90013990:	4620      	mov	r0, r4
90013992:	bd10      	pop	{r4, pc}

90013994 <_ZNK8touchgfx3Box17invalidateContentEv>:
90013994:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
90013998:	b12a      	cbz	r2, 900139a6 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
9001399a:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
9001399e:	b112      	cbz	r2, 900139a6 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
900139a0:	6803      	ldr	r3, [r0, #0]
900139a2:	695b      	ldr	r3, [r3, #20]
900139a4:	4718      	bx	r3
900139a6:	4770      	bx	lr

900139a8 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
900139a8:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
900139ac:	4770      	bx	lr

900139ae <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
900139ae:	b570      	push	{r4, r5, r6, lr}
900139b0:	880b      	ldrh	r3, [r1, #0]
900139b2:	4605      	mov	r5, r0
900139b4:	4604      	mov	r4, r0
900139b6:	85c3      	strh	r3, [r0, #46]	; 0x2e
900139b8:	8813      	ldrh	r3, [r2, #0]
900139ba:	f825 3f30 	strh.w	r3, [r5, #48]!
900139be:	4628      	mov	r0, r5
900139c0:	f006 f91a 	bl	90019bf8 <_ZNK8touchgfx6Bitmap8getWidthEv>
900139c4:	4606      	mov	r6, r0
900139c6:	4628      	mov	r0, r5
900139c8:	f006 f94a 	bl	90019c60 <_ZNK8touchgfx6Bitmap9getHeightEv>
900139cc:	6823      	ldr	r3, [r4, #0]
900139ce:	4605      	mov	r5, r0
900139d0:	4631      	mov	r1, r6
900139d2:	4620      	mov	r0, r4
900139d4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
900139d6:	4798      	blx	r3
900139d8:	6823      	ldr	r3, [r4, #0]
900139da:	4629      	mov	r1, r5
900139dc:	4620      	mov	r0, r4
900139de:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
900139e0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900139e4:	4718      	bx	r3

900139e6 <_ZN8touchgfx14AbstractButton13executeActionEv>:
900139e6:	b510      	push	{r4, lr}
900139e8:	4604      	mov	r4, r0
900139ea:	6a80      	ldr	r0, [r0, #40]	; 0x28
900139ec:	b150      	cbz	r0, 90013a04 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
900139ee:	6803      	ldr	r3, [r0, #0]
900139f0:	68db      	ldr	r3, [r3, #12]
900139f2:	4798      	blx	r3
900139f4:	b130      	cbz	r0, 90013a04 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
900139f6:	6aa0      	ldr	r0, [r4, #40]	; 0x28
900139f8:	4621      	mov	r1, r4
900139fa:	6803      	ldr	r3, [r0, #0]
900139fc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90013a00:	689b      	ldr	r3, [r3, #8]
90013a02:	4718      	bx	r3
90013a04:	bd10      	pop	{r4, pc}

90013a06 <_ZNK8touchgfx6Button12getSolidRectEv>:
90013a06:	b510      	push	{r4, lr}
90013a08:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
90013a0c:	4604      	mov	r4, r0
90013a0e:	2bff      	cmp	r3, #255	; 0xff
90013a10:	d006      	beq.n	90013a20 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
90013a12:	2300      	movs	r3, #0
90013a14:	8003      	strh	r3, [r0, #0]
90013a16:	8043      	strh	r3, [r0, #2]
90013a18:	8083      	strh	r3, [r0, #4]
90013a1a:	80c3      	strh	r3, [r0, #6]
90013a1c:	4620      	mov	r0, r4
90013a1e:	bd10      	pop	{r4, pc}
90013a20:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
90013a24:	b11b      	cbz	r3, 90013a2e <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
90013a26:	3130      	adds	r1, #48	; 0x30
90013a28:	f006 f94e 	bl	90019cc8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
90013a2c:	e7f6      	b.n	90013a1c <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
90013a2e:	312e      	adds	r1, #46	; 0x2e
90013a30:	e7fa      	b.n	90013a28 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

90013a34 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
90013a34:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90013a38:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
90013a3c:	b08a      	sub	sp, #40	; 0x28
90013a3e:	4604      	mov	r4, r0
90013a40:	4688      	mov	r8, r1
90013a42:	2b00      	cmp	r3, #0
90013a44:	d066      	beq.n	90013b14 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
90013a46:	8e03      	ldrh	r3, [r0, #48]	; 0x30
90013a48:	a805      	add	r0, sp, #20
90013a4a:	f8ad 3014 	strh.w	r3, [sp, #20]
90013a4e:	f006 f8d3 	bl	90019bf8 <_ZNK8touchgfx6Bitmap8getWidthEv>
90013a52:	4607      	mov	r7, r0
90013a54:	a805      	add	r0, sp, #20
90013a56:	f006 f903 	bl	90019c60 <_ZNK8touchgfx6Bitmap9getHeightEv>
90013a5a:	f9b8 6000 	ldrsh.w	r6, [r8]
90013a5e:	f8b8 2004 	ldrh.w	r2, [r8, #4]
90013a62:	2300      	movs	r3, #0
90013a64:	4432      	add	r2, r6
90013a66:	9306      	str	r3, [sp, #24]
90013a68:	b292      	uxth	r2, r2
90013a6a:	fa0f fc82 	sxth.w	ip, r2
90013a6e:	459c      	cmp	ip, r3
90013a70:	dd52      	ble.n	90013b18 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
90013a72:	42b7      	cmp	r7, r6
90013a74:	dd50      	ble.n	90013b18 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
90013a76:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
90013a7a:	f8b8 3006 	ldrh.w	r3, [r8, #6]
90013a7e:	442b      	add	r3, r5
90013a80:	b29b      	uxth	r3, r3
90013a82:	b219      	sxth	r1, r3
90013a84:	2900      	cmp	r1, #0
90013a86:	dd47      	ble.n	90013b18 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
90013a88:	42a8      	cmp	r0, r5
90013a8a:	dd45      	ble.n	90013b18 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
90013a8c:	4567      	cmp	r7, ip
90013a8e:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
90013a92:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
90013a96:	bfb8      	it	lt
90013a98:	b2ba      	uxthlt	r2, r7
90013a9a:	4288      	cmp	r0, r1
90013a9c:	f8ad 6018 	strh.w	r6, [sp, #24]
90013aa0:	bfb8      	it	lt
90013aa2:	b283      	uxthlt	r3, r0
90013aa4:	1b92      	subs	r2, r2, r6
90013aa6:	f8ad 501a 	strh.w	r5, [sp, #26]
90013aaa:	1b5b      	subs	r3, r3, r5
90013aac:	f8ad 201c 	strh.w	r2, [sp, #28]
90013ab0:	f8ad 301e 	strh.w	r3, [sp, #30]
90013ab4:	f8bd 2014 	ldrh.w	r2, [sp, #20]
90013ab8:	f64f 73ff 	movw	r3, #65535	; 0xffff
90013abc:	429a      	cmp	r2, r3
90013abe:	d026      	beq.n	90013b0e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
90013ac0:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
90013ac4:	2b00      	cmp	r3, #0
90013ac6:	dd22      	ble.n	90013b0e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
90013ac8:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
90013acc:	2b00      	cmp	r3, #0
90013ace:	dd1e      	ble.n	90013b0e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
90013ad0:	2300      	movs	r3, #0
90013ad2:	a908      	add	r1, sp, #32
90013ad4:	4620      	mov	r0, r4
90013ad6:	e9cd 3308 	strd	r3, r3, [sp, #32]
90013ada:	6823      	ldr	r3, [r4, #0]
90013adc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90013ade:	4798      	blx	r3
90013ae0:	4b0f      	ldr	r3, [pc, #60]	; (90013b20 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
90013ae2:	681b      	ldr	r3, [r3, #0]
90013ae4:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
90013ae8:	b10a      	cbz	r2, 90013aee <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
90013aea:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
90013aec:	b900      	cbnz	r0, 90013af0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
90013aee:	6898      	ldr	r0, [r3, #8]
90013af0:	2501      	movs	r5, #1
90013af2:	6801      	ldr	r1, [r0, #0]
90013af4:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
90013af8:	9502      	str	r5, [sp, #8]
90013afa:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
90013afe:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
90013b02:	9401      	str	r4, [sp, #4]
90013b04:	ac06      	add	r4, sp, #24
90013b06:	9400      	str	r4, [sp, #0]
90013b08:	688c      	ldr	r4, [r1, #8]
90013b0a:	a905      	add	r1, sp, #20
90013b0c:	47a0      	blx	r4
90013b0e:	b00a      	add	sp, #40	; 0x28
90013b10:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90013b14:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
90013b16:	e797      	b.n	90013a48 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
90013b18:	2300      	movs	r3, #0
90013b1a:	9307      	str	r3, [sp, #28]
90013b1c:	e7ca      	b.n	90013ab4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
90013b1e:	bf00      	nop
90013b20:	24039834 	.word	0x24039834

90013b24 <_ZNK8touchgfx6Button17invalidateContentEv>:
90013b24:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
90013b28:	b12a      	cbz	r2, 90013b36 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
90013b2a:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
90013b2e:	b112      	cbz	r2, 90013b36 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
90013b30:	6803      	ldr	r3, [r0, #0]
90013b32:	695b      	ldr	r3, [r3, #20]
90013b34:	4718      	bx	r3
90013b36:	4770      	bx	lr

90013b38 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
90013b38:	4b30      	ldr	r3, [pc, #192]	; (90013bfc <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
90013b3a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90013b3e:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
90013b40:	b08d      	sub	sp, #52	; 0x34
90013b42:	881b      	ldrh	r3, [r3, #0]
90013b44:	4604      	mov	r4, r0
90013b46:	460f      	mov	r7, r1
90013b48:	4293      	cmp	r3, r2
90013b4a:	d954      	bls.n	90013bf6 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
90013b4c:	4b2c      	ldr	r3, [pc, #176]	; (90013c00 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
90013b4e:	6819      	ldr	r1, [r3, #0]
90013b50:	eb01 0342 	add.w	r3, r1, r2, lsl #1
90013b54:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
90013b58:	4a2a      	ldr	r2, [pc, #168]	; (90013c04 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
90013b5a:	6812      	ldr	r2, [r2, #0]
90013b5c:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
90013b60:	2900      	cmp	r1, #0
90013b62:	d048      	beq.n	90013bf6 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
90013b64:	785a      	ldrb	r2, [r3, #1]
90013b66:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
90013b6a:	f3c2 0801 	ubfx	r8, r2, #0, #2
90013b6e:	f3c2 0281 	ubfx	r2, r2, #2, #2
90013b72:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
90013b76:	4b24      	ldr	r3, [pc, #144]	; (90013c08 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
90013b78:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
90013b7c:	681a      	ldr	r2, [r3, #0]
90013b7e:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
90013b82:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
90013b86:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
90013b8a:	6b26      	ldr	r6, [r4, #48]	; 0x30
90013b8c:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
90013b90:	f892 3058 	ldrb.w	r3, [r2, #88]	; 0x58
90013b94:	9107      	str	r1, [sp, #28]
90013b96:	f88d 8020 	strb.w	r8, [sp, #32]
90013b9a:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
90013b9e:	9609      	str	r6, [sp, #36]	; 0x24
90013ba0:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
90013ba4:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
90013ba8:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
90013bac:	b10b      	cbz	r3, 90013bb2 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
90013bae:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
90013bb0:	b905      	cbnz	r5, 90013bb4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
90013bb2:	6895      	ldr	r5, [r2, #8]
90013bb4:	ae05      	add	r6, sp, #20
90013bb6:	4621      	mov	r1, r4
90013bb8:	4630      	mov	r0, r6
90013bba:	f003 ffaf 	bl	90017b1c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90013bbe:	4b13      	ldr	r3, [pc, #76]	; (90013c0c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
90013bc0:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
90013bc2:	6818      	ldr	r0, [r3, #0]
90013bc4:	f7f0 fb32 	bl	9000422c <_ZNK8touchgfx5Texts7getTextEt>
90013bc8:	6823      	ldr	r3, [r4, #0]
90013bca:	4680      	mov	r8, r0
90013bcc:	4620      	mov	r0, r4
90013bce:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
90013bd0:	4798      	blx	r3
90013bd2:	6823      	ldr	r3, [r4, #0]
90013bd4:	4681      	mov	r9, r0
90013bd6:	4620      	mov	r0, r4
90013bd8:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
90013bdc:	4798      	blx	r3
90013bde:	ab07      	add	r3, sp, #28
90013be0:	f8cd 8004 	str.w	r8, [sp, #4]
90013be4:	9300      	str	r3, [sp, #0]
90013be6:	463b      	mov	r3, r7
90013be8:	e9cd 9002 	strd	r9, r0, [sp, #8]
90013bec:	4628      	mov	r0, r5
90013bee:	e896 0006 	ldmia.w	r6, {r1, r2}
90013bf2:	f7f0 facb 	bl	9000418c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
90013bf6:	b00d      	add	sp, #52	; 0x34
90013bf8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90013bfc:	24039890 	.word	0x24039890
90013c00:	2403988c 	.word	0x2403988c
90013c04:	24039894 	.word	0x24039894
90013c08:	24039834 	.word	0x24039834
90013c0c:	24039898 	.word	0x24039898

90013c10 <_ZN8touchgfx13BoxWithBorderD1Ev>:
90013c10:	4770      	bx	lr

90013c12 <_ZN8touchgfx13BoxWithBorderD0Ev>:
90013c12:	b510      	push	{r4, lr}
90013c14:	4604      	mov	r4, r0
90013c16:	2134      	movs	r1, #52	; 0x34
90013c18:	f013 ff82 	bl	90027b20 <_ZdlPvj>
90013c1c:	4620      	mov	r0, r4
90013c1e:	bd10      	pop	{r4, pc}

90013c20 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
90013c20:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90013c24:	8e03      	ldrh	r3, [r0, #48]	; 0x30
90013c26:	4604      	mov	r4, r0
90013c28:	460e      	mov	r6, r1
90013c2a:	b08e      	sub	sp, #56	; 0x38
90013c2c:	b218      	sxth	r0, r3
90013c2e:	8921      	ldrh	r1, [r4, #8]
90013c30:	005b      	lsls	r3, r3, #1
90013c32:	8962      	ldrh	r2, [r4, #10]
90013c34:	f8ad 0000 	strh.w	r0, [sp]
90013c38:	b29b      	uxth	r3, r3
90013c3a:	f8ad 0002 	strh.w	r0, [sp, #2]
90013c3e:	1ac9      	subs	r1, r1, r3
90013c40:	1ad3      	subs	r3, r2, r3
90013c42:	b209      	sxth	r1, r1
90013c44:	b21b      	sxth	r3, r3
90013c46:	2900      	cmp	r1, #0
90013c48:	f8ad 1004 	strh.w	r1, [sp, #4]
90013c4c:	f8ad 3006 	strh.w	r3, [sp, #6]
90013c50:	dd5e      	ble.n	90013d10 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
90013c52:	2b00      	cmp	r3, #0
90013c54:	dd5c      	ble.n	90013d10 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
90013c56:	6830      	ldr	r0, [r6, #0]
90013c58:	ab02      	add	r3, sp, #8
90013c5a:	6871      	ldr	r1, [r6, #4]
90013c5c:	c303      	stmia	r3!, {r0, r1}
90013c5e:	4669      	mov	r1, sp
90013c60:	a802      	add	r0, sp, #8
90013c62:	f7fd fbf5 	bl	90011450 <_ZN8touchgfx4RectaNERKS0_>
90013c66:	4620      	mov	r0, r4
90013c68:	a902      	add	r1, sp, #8
90013c6a:	f7ff fe6d 	bl	90013948 <_ZNK8touchgfx3Box4drawERKNS_4RectE>
90013c6e:	8e20      	ldrh	r0, [r4, #48]	; 0x30
90013c70:	2800      	cmp	r0, #0
90013c72:	d05f      	beq.n	90013d34 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
90013c74:	8963      	ldrh	r3, [r4, #10]
90013c76:	b202      	sxth	r2, r0
90013c78:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
90013c7c:	2500      	movs	r5, #0
90013c7e:	1a1f      	subs	r7, r3, r0
90013c80:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
90013c84:	f8ad 101c 	strh.w	r1, [sp, #28]
90013c88:	b21b      	sxth	r3, r3
90013c8a:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
90013c8e:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
90013c92:	af04      	add	r7, sp, #16
90013c94:	1a09      	subs	r1, r1, r0
90013c96:	9506      	str	r5, [sp, #24]
90013c98:	f8ad 201e 	strh.w	r2, [sp, #30]
90013c9c:	f8ad 5020 	strh.w	r5, [sp, #32]
90013ca0:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
90013ca4:	f8ad 5028 	strh.w	r5, [sp, #40]	; 0x28
90013ca8:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
90013cac:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
90013cb0:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
90013cb4:	f8ad 1030 	strh.w	r1, [sp, #48]	; 0x30
90013cb8:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
90013cbc:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
90013cc0:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
90013cc4:	ab06      	add	r3, sp, #24
90013cc6:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
90013cca:	e893 0003 	ldmia.w	r3, {r0, r1}
90013cce:	e887 0003 	stmia.w	r7, {r0, r1}
90013cd2:	4631      	mov	r1, r6
90013cd4:	4638      	mov	r0, r7
90013cd6:	f7fd fbbb 	bl	90011450 <_ZN8touchgfx4RectaNERKS0_>
90013cda:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
90013cde:	2b00      	cmp	r3, #0
90013ce0:	dd12      	ble.n	90013d08 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
90013ce2:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
90013ce6:	2b00      	cmp	r3, #0
90013ce8:	dd0e      	ble.n	90013d08 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
90013cea:	6823      	ldr	r3, [r4, #0]
90013cec:	4639      	mov	r1, r7
90013cee:	4620      	mov	r0, r4
90013cf0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90013cf2:	4798      	blx	r3
90013cf4:	f7fd fe90 	bl	90011a18 <_ZN8touchgfx3HAL3lcdEv>
90013cf8:	6803      	ldr	r3, [r0, #0]
90013cfa:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
90013cfc:	4639      	mov	r1, r7
90013cfe:	f8d3 8020 	ldr.w	r8, [r3, #32]
90013d02:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
90013d06:	47c0      	blx	r8
90013d08:	3501      	adds	r5, #1
90013d0a:	2d04      	cmp	r5, #4
90013d0c:	d1da      	bne.n	90013cc4 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
90013d0e:	e011      	b.n	90013d34 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
90013d10:	6830      	ldr	r0, [r6, #0]
90013d12:	ab06      	add	r3, sp, #24
90013d14:	6871      	ldr	r1, [r6, #4]
90013d16:	c303      	stmia	r3!, {r0, r1}
90013d18:	6823      	ldr	r3, [r4, #0]
90013d1a:	a906      	add	r1, sp, #24
90013d1c:	4620      	mov	r0, r4
90013d1e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90013d20:	4798      	blx	r3
90013d22:	f7fd fe79 	bl	90011a18 <_ZN8touchgfx3HAL3lcdEv>
90013d26:	6803      	ldr	r3, [r0, #0]
90013d28:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
90013d2a:	a906      	add	r1, sp, #24
90013d2c:	6a1d      	ldr	r5, [r3, #32]
90013d2e:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
90013d32:	47a8      	blx	r5
90013d34:	b00e      	add	sp, #56	; 0x38
90013d36:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90013d3a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_>:
90013d3a:	4770      	bx	lr

90013d3c <_ZN8touchgfx14ButtonWithIconD1Ev>:
90013d3c:	4770      	bx	lr

90013d3e <_ZN8touchgfx14ButtonWithIconD0Ev>:
90013d3e:	b510      	push	{r4, lr}
90013d40:	4604      	mov	r4, r0
90013d42:	213c      	movs	r1, #60	; 0x3c
90013d44:	f013 feec 	bl	90027b20 <_ZdlPvj>
90013d48:	4620      	mov	r0, r4
90013d4a:	bd10      	pop	{r4, pc}

90013d4c <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>:
90013d4c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90013d50:	461c      	mov	r4, r3
90013d52:	4606      	mov	r6, r0
90013d54:	9f06      	ldr	r7, [sp, #24]
90013d56:	f7ff fe2a 	bl	900139ae <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
90013d5a:	8823      	ldrh	r3, [r4, #0]
90013d5c:	f04f 0802 	mov.w	r8, #2
90013d60:	f9b6 5008 	ldrsh.w	r5, [r6, #8]
90013d64:	4638      	mov	r0, r7
90013d66:	86b3      	strh	r3, [r6, #52]	; 0x34
90013d68:	883b      	ldrh	r3, [r7, #0]
90013d6a:	fb95 f5f8 	sdiv	r5, r5, r8
90013d6e:	86f3      	strh	r3, [r6, #54]	; 0x36
90013d70:	b2ad      	uxth	r5, r5
90013d72:	f005 ff41 	bl	90019bf8 <_ZNK8touchgfx6Bitmap8getWidthEv>
90013d76:	f9b6 400a 	ldrsh.w	r4, [r6, #10]
90013d7a:	fb90 f0f8 	sdiv	r0, r0, r8
90013d7e:	1a2d      	subs	r5, r5, r0
90013d80:	4638      	mov	r0, r7
90013d82:	fb94 f4f8 	sdiv	r4, r4, r8
90013d86:	8735      	strh	r5, [r6, #56]	; 0x38
90013d88:	b2a4      	uxth	r4, r4
90013d8a:	f005 ff69 	bl	90019c60 <_ZNK8touchgfx6Bitmap9getHeightEv>
90013d8e:	fb90 f0f8 	sdiv	r0, r0, r8
90013d92:	1a24      	subs	r4, r4, r0
90013d94:	8774      	strh	r4, [r6, #58]	; 0x3a
90013d96:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

90013d9c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE>:
90013d9c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90013da0:	4604      	mov	r4, r0
90013da2:	b08c      	sub	sp, #48	; 0x30
90013da4:	460d      	mov	r5, r1
90013da6:	f7ff fe45 	bl	90013a34 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
90013daa:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
90013dae:	2b00      	cmp	r3, #0
90013db0:	d05d      	beq.n	90013e6e <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd2>
90013db2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
90013db4:	a805      	add	r0, sp, #20
90013db6:	f8ad 3014 	strh.w	r3, [sp, #20]
90013dba:	f9b4 8038 	ldrsh.w	r8, [r4, #56]	; 0x38
90013dbe:	f9b4 703a 	ldrsh.w	r7, [r4, #58]	; 0x3a
90013dc2:	f005 ff19 	bl	90019bf8 <_ZNK8touchgfx6Bitmap8getWidthEv>
90013dc6:	4606      	mov	r6, r0
90013dc8:	a805      	add	r0, sp, #20
90013dca:	f005 ff49 	bl	90019c60 <_ZNK8touchgfx6Bitmap9getHeightEv>
90013dce:	6869      	ldr	r1, [r5, #4]
90013dd0:	f8ad 001e 	strh.w	r0, [sp, #30]
90013dd4:	ab08      	add	r3, sp, #32
90013dd6:	6828      	ldr	r0, [r5, #0]
90013dd8:	ad08      	add	r5, sp, #32
90013dda:	f8ad 8018 	strh.w	r8, [sp, #24]
90013dde:	f8ad 701a 	strh.w	r7, [sp, #26]
90013de2:	f8ad 601c 	strh.w	r6, [sp, #28]
90013de6:	c303      	stmia	r3!, {r0, r1}
90013de8:	a906      	add	r1, sp, #24
90013dea:	4628      	mov	r0, r5
90013dec:	f7fd fb30 	bl	90011450 <_ZN8touchgfx4RectaNERKS0_>
90013df0:	f8bd 2014 	ldrh.w	r2, [sp, #20]
90013df4:	f64f 73ff 	movw	r3, #65535	; 0xffff
90013df8:	429a      	cmp	r2, r3
90013dfa:	d035      	beq.n	90013e68 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
90013dfc:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
90013e00:	2b00      	cmp	r3, #0
90013e02:	dd31      	ble.n	90013e68 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
90013e04:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	; 0x26
90013e08:	2b00      	cmp	r3, #0
90013e0a:	dd2d      	ble.n	90013e68 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
90013e0c:	2300      	movs	r3, #0
90013e0e:	a90a      	add	r1, sp, #40	; 0x28
90013e10:	4620      	mov	r0, r4
90013e12:	e9cd 330a 	strd	r3, r3, [sp, #40]	; 0x28
90013e16:	6823      	ldr	r3, [r4, #0]
90013e18:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90013e1a:	4798      	blx	r3
90013e1c:	f8bd 3020 	ldrh.w	r3, [sp, #32]
90013e20:	8f22      	ldrh	r2, [r4, #56]	; 0x38
90013e22:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
90013e26:	1a9b      	subs	r3, r3, r2
90013e28:	f8ad 3020 	strh.w	r3, [sp, #32]
90013e2c:	8f63      	ldrh	r3, [r4, #58]	; 0x3a
90013e2e:	1ac9      	subs	r1, r1, r3
90013e30:	f8ad 1022 	strh.w	r1, [sp, #34]	; 0x22
90013e34:	490f      	ldr	r1, [pc, #60]	; (90013e74 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd8>)
90013e36:	6809      	ldr	r1, [r1, #0]
90013e38:	f891 0058 	ldrb.w	r0, [r1, #88]	; 0x58
90013e3c:	b108      	cbz	r0, 90013e42 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa6>
90013e3e:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
90013e40:	b900      	cbnz	r0, 90013e44 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa8>
90013e42:	6888      	ldr	r0, [r1, #8]
90013e44:	f8bd 102a 	ldrh.w	r1, [sp, #42]	; 0x2a
90013e48:	2601      	movs	r6, #1
90013e4a:	440b      	add	r3, r1
90013e4c:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
90013e50:	440a      	add	r2, r1
90013e52:	6801      	ldr	r1, [r0, #0]
90013e54:	9602      	str	r6, [sp, #8]
90013e56:	b21b      	sxth	r3, r3
90013e58:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
90013e5c:	b212      	sxth	r2, r2
90013e5e:	e9cd 5400 	strd	r5, r4, [sp]
90013e62:	688c      	ldr	r4, [r1, #8]
90013e64:	a905      	add	r1, sp, #20
90013e66:	47a0      	blx	r4
90013e68:	b00c      	add	sp, #48	; 0x30
90013e6a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90013e6e:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
90013e70:	e7a0      	b.n	90013db4 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x18>
90013e72:	bf00      	nop
90013e74:	24039834 	.word	0x24039834

90013e78 <_ZN8touchgfx14ButtonWithIconC1Ev>:
90013e78:	2101      	movs	r1, #1
90013e7a:	2200      	movs	r2, #0
90013e7c:	b510      	push	{r4, lr}
90013e7e:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
90013e82:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
90013e86:	f64f 71ff 	movw	r1, #65535	; 0xffff
90013e8a:	4c0d      	ldr	r4, [pc, #52]	; (90013ec0 <_ZN8touchgfx14ButtonWithIconC1Ev+0x48>)
90013e8c:	8082      	strh	r2, [r0, #4]
90013e8e:	80c2      	strh	r2, [r0, #6]
90013e90:	8102      	strh	r2, [r0, #8]
90013e92:	8142      	strh	r2, [r0, #10]
90013e94:	8182      	strh	r2, [r0, #12]
90013e96:	81c2      	strh	r2, [r0, #14]
90013e98:	8202      	strh	r2, [r0, #16]
90013e9a:	8242      	strh	r2, [r0, #18]
90013e9c:	61c2      	str	r2, [r0, #28]
90013e9e:	8402      	strh	r2, [r0, #32]
90013ea0:	8442      	strh	r2, [r0, #34]	; 0x22
90013ea2:	6282      	str	r2, [r0, #40]	; 0x28
90013ea4:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
90013ea8:	85c1      	strh	r1, [r0, #46]	; 0x2e
90013eaa:	8601      	strh	r1, [r0, #48]	; 0x30
90013eac:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
90013eb0:	6004      	str	r4, [r0, #0]
90013eb2:	8681      	strh	r1, [r0, #52]	; 0x34
90013eb4:	86c1      	strh	r1, [r0, #54]	; 0x36
90013eb6:	8702      	strh	r2, [r0, #56]	; 0x38
90013eb8:	8742      	strh	r2, [r0, #58]	; 0x3a
90013eba:	e9c0 2205 	strd	r2, r2, [r0, #20]
90013ebe:	bd10      	pop	{r4, pc}
90013ec0:	9002be04 	.word	0x9002be04

90013ec4 <_ZN8touchgfx5ImageD1Ev>:
90013ec4:	4770      	bx	lr

90013ec6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
90013ec6:	b570      	push	{r4, r5, r6, lr}
90013ec8:	880b      	ldrh	r3, [r1, #0]
90013eca:	460d      	mov	r5, r1
90013ecc:	4604      	mov	r4, r0
90013ece:	84c3      	strh	r3, [r0, #38]	; 0x26
90013ed0:	4608      	mov	r0, r1
90013ed2:	f005 fe91 	bl	90019bf8 <_ZNK8touchgfx6Bitmap8getWidthEv>
90013ed6:	4606      	mov	r6, r0
90013ed8:	4628      	mov	r0, r5
90013eda:	f005 fec1 	bl	90019c60 <_ZNK8touchgfx6Bitmap9getHeightEv>
90013ede:	6823      	ldr	r3, [r4, #0]
90013ee0:	4605      	mov	r5, r0
90013ee2:	4631      	mov	r1, r6
90013ee4:	4620      	mov	r0, r4
90013ee6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90013ee8:	4798      	blx	r3
90013eea:	6823      	ldr	r3, [r4, #0]
90013eec:	4629      	mov	r1, r5
90013eee:	4620      	mov	r0, r4
90013ef0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90013ef2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90013ef6:	4718      	bx	r3

90013ef8 <_ZN8touchgfx5ImageD0Ev>:
90013ef8:	b510      	push	{r4, lr}
90013efa:	4604      	mov	r4, r0
90013efc:	212c      	movs	r1, #44	; 0x2c
90013efe:	f013 fe0f 	bl	90027b20 <_ZdlPvj>
90013f02:	4620      	mov	r0, r4
90013f04:	bd10      	pop	{r4, pc}

90013f06 <_ZNK8touchgfx5Image12getSolidRectEv>:
90013f06:	b510      	push	{r4, lr}
90013f08:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
90013f0c:	4604      	mov	r4, r0
90013f0e:	2bff      	cmp	r3, #255	; 0xff
90013f10:	d006      	beq.n	90013f20 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
90013f12:	2300      	movs	r3, #0
90013f14:	8003      	strh	r3, [r0, #0]
90013f16:	8043      	strh	r3, [r0, #2]
90013f18:	8083      	strh	r3, [r0, #4]
90013f1a:	80c3      	strh	r3, [r0, #6]
90013f1c:	4620      	mov	r0, r4
90013f1e:	bd10      	pop	{r4, pc}
90013f20:	3126      	adds	r1, #38	; 0x26
90013f22:	f005 fed1 	bl	90019cc8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
90013f26:	e7f9      	b.n	90013f1c <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

90013f28 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
90013f28:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90013f2c:	4604      	mov	r4, r0
90013f2e:	b088      	sub	sp, #32
90013f30:	2500      	movs	r5, #0
90013f32:	460f      	mov	r7, r1
90013f34:	f854 3b26 	ldr.w	r3, [r4], #38
90013f38:	a904      	add	r1, sp, #16
90013f3a:	4606      	mov	r6, r0
90013f3c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90013f3e:	e9cd 5504 	strd	r5, r5, [sp, #16]
90013f42:	4798      	blx	r3
90013f44:	4620      	mov	r0, r4
90013f46:	f005 fe57 	bl	90019bf8 <_ZNK8touchgfx6Bitmap8getWidthEv>
90013f4a:	4680      	mov	r8, r0
90013f4c:	4620      	mov	r0, r4
90013f4e:	f005 fe87 	bl	90019c60 <_ZNK8touchgfx6Bitmap9getHeightEv>
90013f52:	9506      	str	r5, [sp, #24]
90013f54:	ad06      	add	r5, sp, #24
90013f56:	f8ad 001e 	strh.w	r0, [sp, #30]
90013f5a:	4639      	mov	r1, r7
90013f5c:	f8ad 801c 	strh.w	r8, [sp, #28]
90013f60:	4628      	mov	r0, r5
90013f62:	f7fd fa75 	bl	90011450 <_ZN8touchgfx4RectaNERKS0_>
90013f66:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
90013f6a:	2b00      	cmp	r3, #0
90013f6c:	dd19      	ble.n	90013fa2 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
90013f6e:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
90013f72:	2b00      	cmp	r3, #0
90013f74:	dd15      	ble.n	90013fa2 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
90013f76:	4b0c      	ldr	r3, [pc, #48]	; (90013fa8 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
90013f78:	681b      	ldr	r3, [r3, #0]
90013f7a:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
90013f7e:	b10a      	cbz	r2, 90013f84 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
90013f80:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
90013f82:	b900      	cbnz	r0, 90013f86 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
90013f84:	6898      	ldr	r0, [r3, #8]
90013f86:	2701      	movs	r7, #1
90013f88:	6801      	ldr	r1, [r0, #0]
90013f8a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
90013f8e:	9702      	str	r7, [sp, #8]
90013f90:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
90013f94:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
90013f98:	e9cd 5600 	strd	r5, r6, [sp]
90013f9c:	688d      	ldr	r5, [r1, #8]
90013f9e:	4621      	mov	r1, r4
90013fa0:	47a8      	blx	r5
90013fa2:	b008      	add	sp, #32
90013fa4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90013fa8:	24039834 	.word	0x24039834

90013fac <_ZN8touchgfx15ButtonWithLabelD1Ev>:
90013fac:	4770      	bx	lr

90013fae <_ZN8touchgfx15ButtonWithLabelD0Ev>:
90013fae:	b510      	push	{r4, lr}
90013fb0:	4604      	mov	r4, r0
90013fb2:	2148      	movs	r1, #72	; 0x48
90013fb4:	f013 fdb4 	bl	90027b20 <_ZdlPvj>
90013fb8:	4620      	mov	r0, r4
90013fba:	bd10      	pop	{r4, pc}

90013fbc <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
90013fbc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90013fc0:	b08d      	sub	sp, #52	; 0x34
90013fc2:	4604      	mov	r4, r0
90013fc4:	460f      	mov	r7, r1
90013fc6:	f7ff fd35 	bl	90013a34 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
90013fca:	4a55      	ldr	r2, [pc, #340]	; (90014120 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
90013fcc:	8f23      	ldrh	r3, [r4, #56]	; 0x38
90013fce:	8812      	ldrh	r2, [r2, #0]
90013fd0:	429a      	cmp	r2, r3
90013fd2:	f240 8082 	bls.w	900140da <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
90013fd6:	4d53      	ldr	r5, [pc, #332]	; (90014124 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
90013fd8:	682a      	ldr	r2, [r5, #0]
90013fda:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
90013fde:	4b52      	ldr	r3, [pc, #328]	; (90014128 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
90013fe0:	681b      	ldr	r3, [r3, #0]
90013fe2:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
90013fe6:	2200      	movs	r2, #0
90013fe8:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	; 0x46
90013fec:	e9cd 2203 	strd	r2, r2, [sp, #12]
90013ff0:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
90013ff4:	2a03      	cmp	r2, #3
90013ff6:	d811      	bhi.n	9001401c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
90013ff8:	e8df f002 	tbb	[pc, r2]
90013ffc:	89727902 	.word	0x89727902
90014000:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
90014004:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
90014008:	1ad2      	subs	r2, r2, r3
9001400a:	2002      	movs	r0, #2
9001400c:	f8ad 1010 	strh.w	r1, [sp, #16]
90014010:	f8ad 3012 	strh.w	r3, [sp, #18]
90014014:	fb92 f2f0 	sdiv	r2, r2, r0
90014018:	f8ad 200e 	strh.w	r2, [sp, #14]
9001401c:	f10d 080c 	add.w	r8, sp, #12
90014020:	f10d 0914 	add.w	r9, sp, #20
90014024:	e898 0003 	ldmia.w	r8, {r0, r1}
90014028:	e889 0003 	stmia.w	r9, {r0, r1}
9001402c:	4639      	mov	r1, r7
9001402e:	4648      	mov	r0, r9
90014030:	f7fd fa0e 	bl	90011450 <_ZN8touchgfx4RectaNERKS0_>
90014034:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
90014038:	2b00      	cmp	r3, #0
9001403a:	dd4e      	ble.n	900140da <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
9001403c:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
90014040:	2b00      	cmp	r3, #0
90014042:	dd4a      	ble.n	900140da <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
90014044:	f8bd 3014 	ldrh.w	r3, [sp, #20]
90014048:	4641      	mov	r1, r8
9001404a:	f8bd 200c 	ldrh.w	r2, [sp, #12]
9001404e:	4620      	mov	r0, r4
90014050:	1a9b      	subs	r3, r3, r2
90014052:	f8bd 200e 	ldrh.w	r2, [sp, #14]
90014056:	f8ad 3014 	strh.w	r3, [sp, #20]
9001405a:	f8bd 3016 	ldrh.w	r3, [sp, #22]
9001405e:	1a9b      	subs	r3, r3, r2
90014060:	f8ad 3016 	strh.w	r3, [sp, #22]
90014064:	6823      	ldr	r3, [r4, #0]
90014066:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90014068:	4798      	blx	r3
9001406a:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
9001406e:	2b00      	cmp	r3, #0
90014070:	d053      	beq.n	9001411a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
90014072:	6c22      	ldr	r2, [r4, #64]	; 0x40
90014074:	8f21      	ldrh	r1, [r4, #56]	; 0x38
90014076:	682b      	ldr	r3, [r5, #0]
90014078:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
9001407c:	eb03 0341 	add.w	r3, r3, r1, lsl #1
90014080:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
90014084:	785b      	ldrb	r3, [r3, #1]
90014086:	9209      	str	r2, [sp, #36]	; 0x24
90014088:	f3c3 0501 	ubfx	r5, r3, #0, #2
9001408c:	f3c3 0381 	ubfx	r3, r3, #2, #2
90014090:	9607      	str	r6, [sp, #28]
90014092:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
90014096:	2300      	movs	r3, #0
90014098:	f88d 5020 	strb.w	r5, [sp, #32]
9001409c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
900140a0:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
900140a4:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
900140a8:	4b20      	ldr	r3, [pc, #128]	; (9001412c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
900140aa:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
900140ae:	681b      	ldr	r3, [r3, #0]
900140b0:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
900140b4:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
900140b8:	b10a      	cbz	r2, 900140be <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
900140ba:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
900140bc:	b904      	cbnz	r4, 900140c0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
900140be:	689c      	ldr	r4, [r3, #8]
900140c0:	4b1b      	ldr	r3, [pc, #108]	; (90014130 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
900140c2:	6818      	ldr	r0, [r3, #0]
900140c4:	f7f0 f8b2 	bl	9000422c <_ZNK8touchgfx5Texts7getTextEt>
900140c8:	ab07      	add	r3, sp, #28
900140ca:	9001      	str	r0, [sp, #4]
900140cc:	4620      	mov	r0, r4
900140ce:	9300      	str	r3, [sp, #0]
900140d0:	464b      	mov	r3, r9
900140d2:	e898 0006 	ldmia.w	r8, {r1, r2}
900140d6:	f7f0 f859 	bl	9000418c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
900140da:	b00d      	add	sp, #52	; 0x34
900140dc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900140e0:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
900140e4:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
900140e8:	1ad2      	subs	r2, r2, r3
900140ea:	3201      	adds	r2, #1
900140ec:	e78d      	b.n	9001400a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
900140ee:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
900140f2:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
900140f6:	1ad2      	subs	r2, r2, r3
900140f8:	3201      	adds	r2, #1
900140fa:	2002      	movs	r0, #2
900140fc:	f8ad 3010 	strh.w	r3, [sp, #16]
90014100:	f8ad 1012 	strh.w	r1, [sp, #18]
90014104:	fb92 f2f0 	sdiv	r2, r2, r0
90014108:	f8ad 200c 	strh.w	r2, [sp, #12]
9001410c:	e786      	b.n	9001401c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
9001410e:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
90014112:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
90014116:	1ad2      	subs	r2, r2, r3
90014118:	e7ef      	b.n	900140fa <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
9001411a:	6be2      	ldr	r2, [r4, #60]	; 0x3c
9001411c:	e7aa      	b.n	90014074 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
9001411e:	bf00      	nop
90014120:	24039890 	.word	0x24039890
90014124:	2403988c 	.word	0x2403988c
90014128:	24039894 	.word	0x24039894
9001412c:	24039834 	.word	0x24039834
90014130:	24039898 	.word	0x24039898

90014134 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
90014134:	2101      	movs	r1, #1
90014136:	2200      	movs	r2, #0
90014138:	b510      	push	{r4, lr}
9001413a:	4c13      	ldr	r4, [pc, #76]	; (90014188 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
9001413c:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
90014140:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
90014144:	f64f 71ff 	movw	r1, #65535	; 0xffff
90014148:	6004      	str	r4, [r0, #0]
9001414a:	4c10      	ldr	r4, [pc, #64]	; (9001418c <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
9001414c:	8082      	strh	r2, [r0, #4]
9001414e:	80c2      	strh	r2, [r0, #6]
90014150:	8102      	strh	r2, [r0, #8]
90014152:	8142      	strh	r2, [r0, #10]
90014154:	8182      	strh	r2, [r0, #12]
90014156:	81c2      	strh	r2, [r0, #14]
90014158:	8202      	strh	r2, [r0, #16]
9001415a:	8242      	strh	r2, [r0, #18]
9001415c:	61c2      	str	r2, [r0, #28]
9001415e:	8402      	strh	r2, [r0, #32]
90014160:	8442      	strh	r2, [r0, #34]	; 0x22
90014162:	6282      	str	r2, [r0, #40]	; 0x28
90014164:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
90014168:	85c1      	strh	r1, [r0, #46]	; 0x2e
9001416a:	8601      	strh	r1, [r0, #48]	; 0x30
9001416c:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
90014170:	6344      	str	r4, [r0, #52]	; 0x34
90014172:	8701      	strh	r1, [r0, #56]	; 0x38
90014174:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
90014178:	f8a0 2046 	strh.w	r2, [r0, #70]	; 0x46
9001417c:	e9c0 2205 	strd	r2, r2, [r0, #20]
90014180:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
90014184:	bd10      	pop	{r4, pc}
90014186:	bf00      	nop
90014188:	9002bee8 	.word	0x9002bee8
9001418c:	9002a6f0 	.word	0x9002a6f0

90014190 <_ZN8touchgfx7OutlineD1Ev>:
90014190:	4770      	bx	lr

90014192 <_ZN8touchgfx7OutlineD0Ev>:
90014192:	b510      	push	{r4, lr}
90014194:	4604      	mov	r4, r0
90014196:	2130      	movs	r1, #48	; 0x30
90014198:	f013 fcc2 	bl	90027b20 <_ZdlPvj>
9001419c:	4620      	mov	r0, r4
9001419e:	bd10      	pop	{r4, pc}

900141a0 <_ZN8touchgfx7Outline5resetEv>:
900141a0:	b510      	push	{r4, lr}
900141a2:	4604      	mov	r4, r0
900141a4:	f000 fe86 	bl	90014eb4 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
900141a8:	60e0      	str	r0, [r4, #12]
900141aa:	f000 fe89 	bl	90014ec0 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
900141ae:	68e3      	ldr	r3, [r4, #12]
900141b0:	08c0      	lsrs	r0, r0, #3
900141b2:	2200      	movs	r2, #0
900141b4:	f647 71ff 	movw	r1, #32767	; 0x7fff
900141b8:	6123      	str	r3, [r4, #16]
900141ba:	3801      	subs	r0, #1
900141bc:	60a2      	str	r2, [r4, #8]
900141be:	6060      	str	r0, [r4, #4]
900141c0:	8019      	strh	r1, [r3, #0]
900141c2:	8059      	strh	r1, [r3, #2]
900141c4:	809a      	strh	r2, [r3, #4]
900141c6:	80da      	strh	r2, [r3, #6]
900141c8:	6a63      	ldr	r3, [r4, #36]	; 0x24
900141ca:	f023 0301 	bic.w	r3, r3, #1
900141ce:	f043 0302 	orr.w	r3, r3, #2
900141d2:	6263      	str	r3, [r4, #36]	; 0x24
900141d4:	bd10      	pop	{r4, pc}
	...

900141d8 <_ZN8touchgfx7OutlineC1Ev>:
900141d8:	4b0a      	ldr	r3, [pc, #40]	; (90014204 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
900141da:	b510      	push	{r4, lr}
900141dc:	6003      	str	r3, [r0, #0]
900141de:	2300      	movs	r3, #0
900141e0:	4604      	mov	r4, r0
900141e2:	6243      	str	r3, [r0, #36]	; 0x24
900141e4:	e9c0 3301 	strd	r3, r3, [r0, #4]
900141e8:	e9c0 3303 	strd	r3, r3, [r0, #12]
900141ec:	e9c0 3305 	strd	r3, r3, [r0, #20]
900141f0:	e9c0 3307 	strd	r3, r3, [r0, #28]
900141f4:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
900141f8:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
900141fc:	f7ff ffd0 	bl	900141a0 <_ZN8touchgfx7Outline5resetEv>
90014200:	4620      	mov	r0, r4
90014202:	bd10      	pop	{r4, pc}
90014204:	9002bf5c 	.word	0x9002bf5c

90014208 <_ZN8touchgfx7Outline10renderLineEiiii>:
90014208:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001420c:	b093      	sub	sp, #76	; 0x4c
9001420e:	1156      	asrs	r6, r2, #5
90014210:	9c1c      	ldr	r4, [sp, #112]	; 0x70
90014212:	9305      	str	r3, [sp, #20]
90014214:	1153      	asrs	r3, r2, #5
90014216:	f004 051f 	and.w	r5, r4, #31
9001421a:	9303      	str	r3, [sp, #12]
9001421c:	1163      	asrs	r3, r4, #5
9001421e:	9504      	str	r5, [sp, #16]
90014220:	1165      	asrs	r5, r4, #5
90014222:	9306      	str	r3, [sp, #24]
90014224:	f002 031f 	and.w	r3, r2, #31
90014228:	42ae      	cmp	r6, r5
9001422a:	f040 80f4 	bne.w	90014416 <_ZN8touchgfx7Outline10renderLineEiiii+0x20e>
9001422e:	9c04      	ldr	r4, [sp, #16]
90014230:	9a05      	ldr	r2, [sp, #20]
90014232:	42a3      	cmp	r3, r4
90014234:	ea4f 1e62 	mov.w	lr, r2, asr #5
90014238:	6902      	ldr	r2, [r0, #16]
9001423a:	d125      	bne.n	90014288 <_ZN8touchgfx7Outline10renderLineEiiii+0x80>
9001423c:	f9b2 3000 	ldrsh.w	r3, [r2]
90014240:	459e      	cmp	lr, r3
90014242:	d103      	bne.n	9001424c <_ZN8touchgfx7Outline10renderLineEiiii+0x44>
90014244:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
90014248:	429e      	cmp	r6, r3
9001424a:	d035      	beq.n	900142b8 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
9001424c:	88d1      	ldrh	r1, [r2, #6]
9001424e:	8893      	ldrh	r3, [r2, #4]
90014250:	430b      	orrs	r3, r1
90014252:	d010      	beq.n	90014276 <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
90014254:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
90014258:	2b00      	cmp	r3, #0
9001425a:	db0c      	blt.n	90014276 <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
9001425c:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9001425e:	428b      	cmp	r3, r1
90014260:	da09      	bge.n	90014276 <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
90014262:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
90014266:	428b      	cmp	r3, r1
90014268:	f103 0301 	add.w	r3, r3, #1
9001426c:	bf38      	it	cc
9001426e:	3208      	addcc	r2, #8
90014270:	6083      	str	r3, [r0, #8]
90014272:	bf38      	it	cc
90014274:	6102      	strcc	r2, [r0, #16]
90014276:	6903      	ldr	r3, [r0, #16]
90014278:	9a03      	ldr	r2, [sp, #12]
9001427a:	f8a3 e000 	strh.w	lr, [r3]
9001427e:	805a      	strh	r2, [r3, #2]
90014280:	2200      	movs	r2, #0
90014282:	809a      	strh	r2, [r3, #4]
90014284:	80da      	strh	r2, [r3, #6]
90014286:	e017      	b.n	900142b8 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90014288:	9c05      	ldr	r4, [sp, #20]
9001428a:	114e      	asrs	r6, r1, #5
9001428c:	f001 0c1f 	and.w	ip, r1, #31
90014290:	f8b2 8004 	ldrh.w	r8, [r2, #4]
90014294:	f004 041f 	and.w	r4, r4, #31
90014298:	4576      	cmp	r6, lr
9001429a:	f8b2 a006 	ldrh.w	sl, [r2, #6]
9001429e:	9402      	str	r4, [sp, #8]
900142a0:	9c04      	ldr	r4, [sp, #16]
900142a2:	eba4 0403 	sub.w	r4, r4, r3
900142a6:	d10a      	bne.n	900142be <_ZN8touchgfx7Outline10renderLineEiiii+0xb6>
900142a8:	9b02      	ldr	r3, [sp, #8]
900142aa:	44a0      	add	r8, r4
900142ac:	449c      	add	ip, r3
900142ae:	f8a2 8004 	strh.w	r8, [r2, #4]
900142b2:	fb04 a40c 	mla	r4, r4, ip, sl
900142b6:	80d4      	strh	r4, [r2, #6]
900142b8:	b013      	add	sp, #76	; 0x4c
900142ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900142be:	9d05      	ldr	r5, [sp, #20]
900142c0:	1a69      	subs	r1, r5, r1
900142c2:	bf51      	iteee	pl
900142c4:	f1cc 0520 	rsbpl	r5, ip, #32
900142c8:	fb04 f40c 	mulmi.w	r4, r4, ip
900142cc:	4249      	negmi	r1, r1
900142ce:	2500      	movmi	r5, #0
900142d0:	bf5d      	ittte	pl
900142d2:	436c      	mulpl	r4, r5
900142d4:	2520      	movpl	r5, #32
900142d6:	f04f 0901 	movpl.w	r9, #1
900142da:	f04f 39ff 	movmi.w	r9, #4294967295
900142de:	9501      	str	r5, [sp, #4]
900142e0:	9f01      	ldr	r7, [sp, #4]
900142e2:	444e      	add	r6, r9
900142e4:	fb94 f5f1 	sdiv	r5, r4, r1
900142e8:	fb01 4415 	mls	r4, r1, r5, r4
900142ec:	44bc      	add	ip, r7
900142ee:	2c00      	cmp	r4, #0
900142f0:	bfbc      	itt	lt
900142f2:	f105 35ff 	addlt.w	r5, r5, #4294967295
900142f6:	1864      	addlt	r4, r4, r1
900142f8:	44a8      	add	r8, r5
900142fa:	fb05 ac0c 	mla	ip, r5, ip, sl
900142fe:	f8a2 8004 	strh.w	r8, [r2, #4]
90014302:	f8a2 c006 	strh.w	ip, [r2, #6]
90014306:	f8d0 c010 	ldr.w	ip, [r0, #16]
9001430a:	f8bc 8006 	ldrh.w	r8, [ip, #6]
9001430e:	f8bc 2004 	ldrh.w	r2, [ip, #4]
90014312:	ea58 0202 	orrs.w	r2, r8, r2
90014316:	d011      	beq.n	9001433c <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
90014318:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
9001431c:	f1b8 0f00 	cmp.w	r8, #0
90014320:	db0c      	blt.n	9001433c <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
90014322:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
90014324:	4590      	cmp	r8, r2
90014326:	da09      	bge.n	9001433c <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
90014328:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
9001432c:	4590      	cmp	r8, r2
9001432e:	bf3c      	itt	cc
90014330:	f10c 0208 	addcc.w	r2, ip, #8
90014334:	6102      	strcc	r2, [r0, #16]
90014336:	f108 0201 	add.w	r2, r8, #1
9001433a:	6082      	str	r2, [r0, #8]
9001433c:	f8d0 c010 	ldr.w	ip, [r0, #16]
90014340:	2700      	movs	r7, #0
90014342:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
90014346:	45b6      	cmp	lr, r6
90014348:	f8ac 6000 	strh.w	r6, [ip]
9001434c:	442b      	add	r3, r5
9001434e:	f8ac 2002 	strh.w	r2, [ip, #2]
90014352:	f8ac 7004 	strh.w	r7, [ip, #4]
90014356:	f8ac 7006 	strh.w	r7, [ip, #6]
9001435a:	d04b      	beq.n	900143f4 <_ZN8touchgfx7Outline10renderLineEiiii+0x1ec>
9001435c:	9f04      	ldr	r7, [sp, #16]
9001435e:	1a64      	subs	r4, r4, r1
90014360:	f04f 0a00 	mov.w	sl, #0
90014364:	1aff      	subs	r7, r7, r3
90014366:	443d      	add	r5, r7
90014368:	016d      	lsls	r5, r5, #5
9001436a:	fb95 f8f1 	sdiv	r8, r5, r1
9001436e:	fb01 5518 	mls	r5, r1, r8, r5
90014372:	2d00      	cmp	r5, #0
90014374:	bfbc      	itt	lt
90014376:	f108 38ff 	addlt.w	r8, r8, #4294967295
9001437a:	186d      	addlt	r5, r5, r1
9001437c:	f108 0701 	add.w	r7, r8, #1
90014380:	9703      	str	r7, [sp, #12]
90014382:	f8d0 c010 	ldr.w	ip, [r0, #16]
90014386:	1964      	adds	r4, r4, r5
90014388:	444e      	add	r6, r9
9001438a:	bf54      	ite	pl
9001438c:	9f03      	ldrpl	r7, [sp, #12]
9001438e:	4647      	movmi	r7, r8
90014390:	f8bc b004 	ldrh.w	fp, [ip, #4]
90014394:	bf58      	it	pl
90014396:	1a64      	subpl	r4, r4, r1
90014398:	443b      	add	r3, r7
9001439a:	44bb      	add	fp, r7
9001439c:	f8ac b004 	strh.w	fp, [ip, #4]
900143a0:	f8bc b006 	ldrh.w	fp, [ip, #6]
900143a4:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
900143a8:	f8ac b006 	strh.w	fp, [ip, #6]
900143ac:	f8d0 c010 	ldr.w	ip, [r0, #16]
900143b0:	f8bc b006 	ldrh.w	fp, [ip, #6]
900143b4:	f8bc 7004 	ldrh.w	r7, [ip, #4]
900143b8:	ea5b 0707 	orrs.w	r7, fp, r7
900143bc:	d011      	beq.n	900143e2 <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
900143be:	f9bc b002 	ldrsh.w	fp, [ip, #2]
900143c2:	f1bb 0f00 	cmp.w	fp, #0
900143c6:	db0c      	blt.n	900143e2 <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
900143c8:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
900143ca:	45bb      	cmp	fp, r7
900143cc:	da09      	bge.n	900143e2 <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
900143ce:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
900143d2:	45bb      	cmp	fp, r7
900143d4:	bf3c      	itt	cc
900143d6:	f10c 0708 	addcc.w	r7, ip, #8
900143da:	6107      	strcc	r7, [r0, #16]
900143dc:	f10b 0701 	add.w	r7, fp, #1
900143e0:	6087      	str	r7, [r0, #8]
900143e2:	6907      	ldr	r7, [r0, #16]
900143e4:	45b6      	cmp	lr, r6
900143e6:	803e      	strh	r6, [r7, #0]
900143e8:	807a      	strh	r2, [r7, #2]
900143ea:	f8a7 a004 	strh.w	sl, [r7, #4]
900143ee:	f8a7 a006 	strh.w	sl, [r7, #6]
900143f2:	d1c6      	bne.n	90014382 <_ZN8touchgfx7Outline10renderLineEiiii+0x17a>
900143f4:	9a04      	ldr	r2, [sp, #16]
900143f6:	1ad3      	subs	r3, r2, r3
900143f8:	6902      	ldr	r2, [r0, #16]
900143fa:	8891      	ldrh	r1, [r2, #4]
900143fc:	88d6      	ldrh	r6, [r2, #6]
900143fe:	4419      	add	r1, r3
90014400:	8091      	strh	r1, [r2, #4]
90014402:	9902      	ldr	r1, [sp, #8]
90014404:	f101 0c20 	add.w	ip, r1, #32
90014408:	9901      	ldr	r1, [sp, #4]
9001440a:	ebac 0c01 	sub.w	ip, ip, r1
9001440e:	fb03 630c 	mla	r3, r3, ip, r6
90014412:	80d3      	strh	r3, [r2, #6]
90014414:	e750      	b.n	900142b8 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90014416:	9d05      	ldr	r5, [sp, #20]
90014418:	1aa2      	subs	r2, r4, r2
9001441a:	eba5 0501 	sub.w	r5, r5, r1
9001441e:	9202      	str	r2, [sp, #8]
90014420:	9508      	str	r5, [sp, #32]
90014422:	f140 8128 	bpl.w	90014676 <_ZN8touchgfx7Outline10renderLineEiiii+0x46e>
90014426:	9a03      	ldr	r2, [sp, #12]
90014428:	2a00      	cmp	r2, #0
9001442a:	f6ff af45 	blt.w	900142b8 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
9001442e:	9a02      	ldr	r2, [sp, #8]
90014430:	f04f 34ff 	mov.w	r4, #4294967295
90014434:	4252      	negs	r2, r2
90014436:	940b      	str	r4, [sp, #44]	; 0x2c
90014438:	2400      	movs	r4, #0
9001443a:	9202      	str	r2, [sp, #8]
9001443c:	9a06      	ldr	r2, [sp, #24]
9001443e:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
90014442:	9206      	str	r2, [sp, #24]
90014444:	462a      	mov	r2, r5
90014446:	435a      	muls	r2, r3
90014448:	9401      	str	r4, [sp, #4]
9001444a:	9c02      	ldr	r4, [sp, #8]
9001444c:	9d02      	ldr	r5, [sp, #8]
9001444e:	fb92 f4f4 	sdiv	r4, r2, r4
90014452:	fb05 2214 	mls	r2, r5, r4, r2
90014456:	2a00      	cmp	r2, #0
90014458:	9207      	str	r2, [sp, #28]
9001445a:	bfbc      	itt	lt
9001445c:	1952      	addlt	r2, r2, r5
9001445e:	f104 34ff 	addlt.w	r4, r4, #4294967295
90014462:	6905      	ldr	r5, [r0, #16]
90014464:	bfb8      	it	lt
90014466:	9207      	strlt	r2, [sp, #28]
90014468:	eb04 0901 	add.w	r9, r4, r1
9001446c:	9a01      	ldr	r2, [sp, #4]
9001446e:	ea4f 1669 	mov.w	r6, r9, asr #5
90014472:	429a      	cmp	r2, r3
90014474:	f040 8111 	bne.w	9001469a <_ZN8touchgfx7Outline10renderLineEiiii+0x492>
90014478:	f9b5 3000 	ldrsh.w	r3, [r5]
9001447c:	429e      	cmp	r6, r3
9001447e:	d104      	bne.n	9001448a <_ZN8touchgfx7Outline10renderLineEiiii+0x282>
90014480:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
90014484:	9a03      	ldr	r2, [sp, #12]
90014486:	429a      	cmp	r2, r3
90014488:	d01b      	beq.n	900144c2 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
9001448a:	88ea      	ldrh	r2, [r5, #6]
9001448c:	88ab      	ldrh	r3, [r5, #4]
9001448e:	4313      	orrs	r3, r2
90014490:	d010      	beq.n	900144b4 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
90014492:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
90014496:	2a00      	cmp	r2, #0
90014498:	db0c      	blt.n	900144b4 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
9001449a:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
9001449c:	429a      	cmp	r2, r3
9001449e:	da09      	bge.n	900144b4 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
900144a0:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
900144a4:	429a      	cmp	r2, r3
900144a6:	f102 0201 	add.w	r2, r2, #1
900144aa:	bf38      	it	cc
900144ac:	3508      	addcc	r5, #8
900144ae:	6082      	str	r2, [r0, #8]
900144b0:	bf38      	it	cc
900144b2:	6105      	strcc	r5, [r0, #16]
900144b4:	6903      	ldr	r3, [r0, #16]
900144b6:	9a03      	ldr	r2, [sp, #12]
900144b8:	801e      	strh	r6, [r3, #0]
900144ba:	805a      	strh	r2, [r3, #2]
900144bc:	2200      	movs	r2, #0
900144be:	809a      	strh	r2, [r3, #4]
900144c0:	80da      	strh	r2, [r3, #6]
900144c2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
900144c4:	9a03      	ldr	r2, [sp, #12]
900144c6:	6901      	ldr	r1, [r0, #16]
900144c8:	441a      	add	r2, r3
900144ca:	f9b1 3000 	ldrsh.w	r3, [r1]
900144ce:	42b3      	cmp	r3, r6
900144d0:	d103      	bne.n	900144da <_ZN8touchgfx7Outline10renderLineEiiii+0x2d2>
900144d2:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
900144d6:	429a      	cmp	r2, r3
900144d8:	d01a      	beq.n	90014510 <_ZN8touchgfx7Outline10renderLineEiiii+0x308>
900144da:	88cc      	ldrh	r4, [r1, #6]
900144dc:	888b      	ldrh	r3, [r1, #4]
900144de:	4323      	orrs	r3, r4
900144e0:	d010      	beq.n	90014504 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
900144e2:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
900144e6:	2c00      	cmp	r4, #0
900144e8:	db0c      	blt.n	90014504 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
900144ea:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
900144ec:	429c      	cmp	r4, r3
900144ee:	da09      	bge.n	90014504 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
900144f0:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
900144f4:	429c      	cmp	r4, r3
900144f6:	f104 0401 	add.w	r4, r4, #1
900144fa:	bf38      	it	cc
900144fc:	3108      	addcc	r1, #8
900144fe:	6084      	str	r4, [r0, #8]
90014500:	bf38      	it	cc
90014502:	6101      	strcc	r1, [r0, #16]
90014504:	6903      	ldr	r3, [r0, #16]
90014506:	2100      	movs	r1, #0
90014508:	801e      	strh	r6, [r3, #0]
9001450a:	805a      	strh	r2, [r3, #2]
9001450c:	8099      	strh	r1, [r3, #4]
9001450e:	80d9      	strh	r1, [r3, #6]
90014510:	9b06      	ldr	r3, [sp, #24]
90014512:	4293      	cmp	r3, r2
90014514:	f000 8082 	beq.w	9001461c <_ZN8touchgfx7Outline10renderLineEiiii+0x414>
90014518:	9b08      	ldr	r3, [sp, #32]
9001451a:	9902      	ldr	r1, [sp, #8]
9001451c:	015b      	lsls	r3, r3, #5
9001451e:	9c02      	ldr	r4, [sp, #8]
90014520:	fb93 f1f1 	sdiv	r1, r3, r1
90014524:	fb04 3311 	mls	r3, r4, r1, r3
90014528:	9103      	str	r1, [sp, #12]
9001452a:	2b00      	cmp	r3, #0
9001452c:	9308      	str	r3, [sp, #32]
9001452e:	da04      	bge.n	9001453a <_ZN8touchgfx7Outline10renderLineEiiii+0x332>
90014530:	1e4b      	subs	r3, r1, #1
90014532:	9303      	str	r3, [sp, #12]
90014534:	9b08      	ldr	r3, [sp, #32]
90014536:	4423      	add	r3, r4
90014538:	9308      	str	r3, [sp, #32]
9001453a:	9b07      	ldr	r3, [sp, #28]
9001453c:	464f      	mov	r7, r9
9001453e:	9902      	ldr	r1, [sp, #8]
90014540:	2600      	movs	r6, #0
90014542:	1a5b      	subs	r3, r3, r1
90014544:	9307      	str	r3, [sp, #28]
90014546:	9b01      	ldr	r3, [sp, #4]
90014548:	f1c3 0320 	rsb	r3, r3, #32
9001454c:	930e      	str	r3, [sp, #56]	; 0x38
9001454e:	990e      	ldr	r1, [sp, #56]	; 0x38
90014550:	9b01      	ldr	r3, [sp, #4]
90014552:	1a5b      	subs	r3, r3, r1
90014554:	930a      	str	r3, [sp, #40]	; 0x28
90014556:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
9001455a:	185b      	adds	r3, r3, r1
9001455c:	bf58      	it	pl
9001455e:	9902      	ldrpl	r1, [sp, #8]
90014560:	9307      	str	r3, [sp, #28]
90014562:	bf57      	itett	pl
90014564:	1a5b      	subpl	r3, r3, r1
90014566:	9903      	ldrmi	r1, [sp, #12]
90014568:	9307      	strpl	r3, [sp, #28]
9001456a:	9b03      	ldrpl	r3, [sp, #12]
9001456c:	bf58      	it	pl
9001456e:	1c59      	addpl	r1, r3, #1
90014570:	2a00      	cmp	r2, #0
90014572:	4489      	add	r9, r1
90014574:	ea4f 1a69 	mov.w	sl, r9, asr #5
90014578:	db2e      	blt.n	900145d8 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
9001457a:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
9001457c:	4293      	cmp	r3, r2
9001457e:	dd2b      	ble.n	900145d8 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90014580:	9c01      	ldr	r4, [sp, #4]
90014582:	6905      	ldr	r5, [r0, #16]
90014584:	46a0      	mov	r8, r4
90014586:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90014588:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
9001458c:	45a0      	cmp	r8, r4
9001458e:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
90014592:	f040 814c 	bne.w	9001482e <_ZN8touchgfx7Outline10renderLineEiiii+0x626>
90014596:	f9b5 1000 	ldrsh.w	r1, [r5]
9001459a:	4551      	cmp	r1, sl
9001459c:	d103      	bne.n	900145a6 <_ZN8touchgfx7Outline10renderLineEiiii+0x39e>
9001459e:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
900145a2:	4291      	cmp	r1, r2
900145a4:	d018      	beq.n	900145d8 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
900145a6:	ea5c 010e 	orrs.w	r1, ip, lr
900145aa:	d00f      	beq.n	900145cc <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
900145ac:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
900145b0:	2900      	cmp	r1, #0
900145b2:	db0b      	blt.n	900145cc <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
900145b4:	428b      	cmp	r3, r1
900145b6:	dd09      	ble.n	900145cc <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
900145b8:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
900145bc:	4299      	cmp	r1, r3
900145be:	f101 0101 	add.w	r1, r1, #1
900145c2:	bf38      	it	cc
900145c4:	3508      	addcc	r5, #8
900145c6:	6081      	str	r1, [r0, #8]
900145c8:	bf38      	it	cc
900145ca:	6105      	strcc	r5, [r0, #16]
900145cc:	6903      	ldr	r3, [r0, #16]
900145ce:	f8a3 a000 	strh.w	sl, [r3]
900145d2:	805a      	strh	r2, [r3, #2]
900145d4:	809e      	strh	r6, [r3, #4]
900145d6:	80de      	strh	r6, [r3, #6]
900145d8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
900145da:	6901      	ldr	r1, [r0, #16]
900145dc:	441a      	add	r2, r3
900145de:	88cc      	ldrh	r4, [r1, #6]
900145e0:	888b      	ldrh	r3, [r1, #4]
900145e2:	4323      	orrs	r3, r4
900145e4:	d010      	beq.n	90014608 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
900145e6:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
900145ea:	2c00      	cmp	r4, #0
900145ec:	db0c      	blt.n	90014608 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
900145ee:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
900145f0:	429c      	cmp	r4, r3
900145f2:	da09      	bge.n	90014608 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
900145f4:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
900145f8:	429c      	cmp	r4, r3
900145fa:	f104 0401 	add.w	r4, r4, #1
900145fe:	bf38      	it	cc
90014600:	3108      	addcc	r1, #8
90014602:	6084      	str	r4, [r0, #8]
90014604:	bf38      	it	cc
90014606:	6101      	strcc	r1, [r0, #16]
90014608:	6903      	ldr	r3, [r0, #16]
9001460a:	464f      	mov	r7, r9
9001460c:	f8a3 a000 	strh.w	sl, [r3]
90014610:	805a      	strh	r2, [r3, #2]
90014612:	809e      	strh	r6, [r3, #4]
90014614:	80de      	strh	r6, [r3, #6]
90014616:	9b06      	ldr	r3, [sp, #24]
90014618:	4293      	cmp	r3, r2
9001461a:	d19c      	bne.n	90014556 <_ZN8touchgfx7Outline10renderLineEiiii+0x34e>
9001461c:	9b01      	ldr	r3, [sp, #4]
9001461e:	6907      	ldr	r7, [r0, #16]
90014620:	f1c3 0620 	rsb	r6, r3, #32
90014624:	9b05      	ldr	r3, [sp, #20]
90014626:	ea4f 1e63 	mov.w	lr, r3, asr #5
9001462a:	9b04      	ldr	r3, [sp, #16]
9001462c:	429e      	cmp	r6, r3
9001462e:	f040 81c7 	bne.w	900149c0 <_ZN8touchgfx7Outline10renderLineEiiii+0x7b8>
90014632:	f9b7 3000 	ldrsh.w	r3, [r7]
90014636:	459e      	cmp	lr, r3
90014638:	d104      	bne.n	90014644 <_ZN8touchgfx7Outline10renderLineEiiii+0x43c>
9001463a:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
9001463e:	429a      	cmp	r2, r3
90014640:	f43f ae3a 	beq.w	900142b8 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90014644:	88f9      	ldrh	r1, [r7, #6]
90014646:	88bb      	ldrh	r3, [r7, #4]
90014648:	430b      	orrs	r3, r1
9001464a:	d010      	beq.n	9001466e <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
9001464c:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
90014650:	2b00      	cmp	r3, #0
90014652:	db0c      	blt.n	9001466e <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
90014654:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
90014656:	428b      	cmp	r3, r1
90014658:	da09      	bge.n	9001466e <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
9001465a:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
9001465e:	428b      	cmp	r3, r1
90014660:	f103 0301 	add.w	r3, r3, #1
90014664:	bf38      	it	cc
90014666:	3708      	addcc	r7, #8
90014668:	6083      	str	r3, [r0, #8]
9001466a:	bf38      	it	cc
9001466c:	6107      	strcc	r7, [r0, #16]
9001466e:	6903      	ldr	r3, [r0, #16]
90014670:	f8a3 e000 	strh.w	lr, [r3]
90014674:	e603      	b.n	9001427e <_ZN8touchgfx7Outline10renderLineEiiii+0x76>
90014676:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
90014678:	9c03      	ldr	r4, [sp, #12]
9001467a:	42a2      	cmp	r2, r4
9001467c:	f6ff ae1c 	blt.w	900142b8 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90014680:	9c06      	ldr	r4, [sp, #24]
90014682:	42a2      	cmp	r2, r4
90014684:	9c08      	ldr	r4, [sp, #32]
90014686:	bfbc      	itt	lt
90014688:	3201      	addlt	r2, #1
9001468a:	9206      	strlt	r2, [sp, #24]
9001468c:	f1c3 0220 	rsb	r2, r3, #32
90014690:	4362      	muls	r2, r4
90014692:	2401      	movs	r4, #1
90014694:	940b      	str	r4, [sp, #44]	; 0x2c
90014696:	2420      	movs	r4, #32
90014698:	e6d6      	b.n	90014448 <_ZN8touchgfx7Outline10renderLineEiiii+0x240>
9001469a:	ea4f 1861 	mov.w	r8, r1, asr #5
9001469e:	f009 021f 	and.w	r2, r9, #31
900146a2:	f001 011f 	and.w	r1, r1, #31
900146a6:	f8b5 e004 	ldrh.w	lr, [r5, #4]
900146aa:	920c      	str	r2, [sp, #48]	; 0x30
900146ac:	45b0      	cmp	r8, r6
900146ae:	9a01      	ldr	r2, [sp, #4]
900146b0:	f8b5 a006 	ldrh.w	sl, [r5, #6]
900146b4:	eba2 0203 	sub.w	r2, r2, r3
900146b8:	d108      	bne.n	900146cc <_ZN8touchgfx7Outline10renderLineEiiii+0x4c4>
900146ba:	9b0c      	ldr	r3, [sp, #48]	; 0x30
900146bc:	4496      	add	lr, r2
900146be:	4419      	add	r1, r3
900146c0:	f8a5 e004 	strh.w	lr, [r5, #4]
900146c4:	fb02 a101 	mla	r1, r2, r1, sl
900146c8:	80e9      	strh	r1, [r5, #6]
900146ca:	e6fa      	b.n	900144c2 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
900146cc:	2c00      	cmp	r4, #0
900146ce:	f2c0 80a7 	blt.w	90014820 <_ZN8touchgfx7Outline10renderLineEiiii+0x618>
900146d2:	2701      	movs	r7, #1
900146d4:	f1c1 0c20 	rsb	ip, r1, #32
900146d8:	970a      	str	r7, [sp, #40]	; 0x28
900146da:	2720      	movs	r7, #32
900146dc:	fb02 f20c 	mul.w	r2, r2, ip
900146e0:	9709      	str	r7, [sp, #36]	; 0x24
900146e2:	9f09      	ldr	r7, [sp, #36]	; 0x24
900146e4:	fb92 fcf4 	sdiv	ip, r2, r4
900146e8:	fb04 221c 	mls	r2, r4, ip, r2
900146ec:	4439      	add	r1, r7
900146ee:	2a00      	cmp	r2, #0
900146f0:	bfbc      	itt	lt
900146f2:	f10c 3cff 	addlt.w	ip, ip, #4294967295
900146f6:	1912      	addlt	r2, r2, r4
900146f8:	fb0c a101 	mla	r1, ip, r1, sl
900146fc:	44e6      	add	lr, ip
900146fe:	80e9      	strh	r1, [r5, #6]
90014700:	990a      	ldr	r1, [sp, #40]	; 0x28
90014702:	f8a5 e004 	strh.w	lr, [r5, #4]
90014706:	eb08 0501 	add.w	r5, r8, r1
9001470a:	6901      	ldr	r1, [r0, #16]
9001470c:	f8b1 8006 	ldrh.w	r8, [r1, #6]
90014710:	f8b1 e004 	ldrh.w	lr, [r1, #4]
90014714:	ea58 070e 	orrs.w	r7, r8, lr
90014718:	d010      	beq.n	9001473c <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
9001471a:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
9001471e:	f1be 0f00 	cmp.w	lr, #0
90014722:	db0b      	blt.n	9001473c <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
90014724:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
90014726:	45be      	cmp	lr, r7
90014728:	da08      	bge.n	9001473c <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
9001472a:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
9001472e:	45be      	cmp	lr, r7
90014730:	bf3c      	itt	cc
90014732:	3108      	addcc	r1, #8
90014734:	6101      	strcc	r1, [r0, #16]
90014736:	f10e 0101 	add.w	r1, lr, #1
9001473a:	6081      	str	r1, [r0, #8]
9001473c:	6901      	ldr	r1, [r0, #16]
9001473e:	f04f 0e00 	mov.w	lr, #0
90014742:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
90014746:	42ae      	cmp	r6, r5
90014748:	800d      	strh	r5, [r1, #0]
9001474a:	4463      	add	r3, ip
9001474c:	f8a1 8002 	strh.w	r8, [r1, #2]
90014750:	f8a1 e004 	strh.w	lr, [r1, #4]
90014754:	f8a1 e006 	strh.w	lr, [r1, #6]
90014758:	d053      	beq.n	90014802 <_ZN8touchgfx7Outline10renderLineEiiii+0x5fa>
9001475a:	9901      	ldr	r1, [sp, #4]
9001475c:	1b12      	subs	r2, r2, r4
9001475e:	1ac9      	subs	r1, r1, r3
90014760:	4461      	add	r1, ip
90014762:	0149      	lsls	r1, r1, #5
90014764:	fb91 fef4 	sdiv	lr, r1, r4
90014768:	fb04 111e 	mls	r1, r4, lr, r1
9001476c:	2900      	cmp	r1, #0
9001476e:	bfbc      	itt	lt
90014770:	f10e 3eff 	addlt.w	lr, lr, #4294967295
90014774:	1909      	addlt	r1, r1, r4
90014776:	f10e 0701 	add.w	r7, lr, #1
9001477a:	970d      	str	r7, [sp, #52]	; 0x34
9001477c:	f8d0 a010 	ldr.w	sl, [r0, #16]
90014780:	1852      	adds	r2, r2, r1
90014782:	9f0a      	ldr	r7, [sp, #40]	; 0x28
90014784:	bf54      	ite	pl
90014786:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
9001478a:	46f4      	movmi	ip, lr
9001478c:	f8ba b004 	ldrh.w	fp, [sl, #4]
90014790:	bf58      	it	pl
90014792:	1b12      	subpl	r2, r2, r4
90014794:	4463      	add	r3, ip
90014796:	443d      	add	r5, r7
90014798:	44e3      	add	fp, ip
9001479a:	f8aa b004 	strh.w	fp, [sl, #4]
9001479e:	f8ba b006 	ldrh.w	fp, [sl, #6]
900147a2:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
900147a6:	f8aa b006 	strh.w	fp, [sl, #6]
900147aa:	f8d0 c010 	ldr.w	ip, [r0, #16]
900147ae:	f8bc b006 	ldrh.w	fp, [ip, #6]
900147b2:	f8bc a004 	ldrh.w	sl, [ip, #4]
900147b6:	ea5b 070a 	orrs.w	r7, fp, sl
900147ba:	d014      	beq.n	900147e6 <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
900147bc:	f9bc a002 	ldrsh.w	sl, [ip, #2]
900147c0:	f1ba 0f00 	cmp.w	sl, #0
900147c4:	db0f      	blt.n	900147e6 <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
900147c6:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
900147c8:	45ba      	cmp	sl, r7
900147ca:	da0c      	bge.n	900147e6 <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
900147cc:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
900147d0:	45ba      	cmp	sl, r7
900147d2:	f10a 0a01 	add.w	sl, sl, #1
900147d6:	bf38      	it	cc
900147d8:	f10c 0c08 	addcc.w	ip, ip, #8
900147dc:	f8c0 a008 	str.w	sl, [r0, #8]
900147e0:	bf38      	it	cc
900147e2:	f8c0 c010 	strcc.w	ip, [r0, #16]
900147e6:	f8d0 c010 	ldr.w	ip, [r0, #16]
900147ea:	f04f 0700 	mov.w	r7, #0
900147ee:	42ae      	cmp	r6, r5
900147f0:	f8ac 5000 	strh.w	r5, [ip]
900147f4:	f8ac 8002 	strh.w	r8, [ip, #2]
900147f8:	f8ac 7004 	strh.w	r7, [ip, #4]
900147fc:	f8ac 7006 	strh.w	r7, [ip, #6]
90014800:	d1bc      	bne.n	9001477c <_ZN8touchgfx7Outline10renderLineEiiii+0x574>
90014802:	6904      	ldr	r4, [r0, #16]
90014804:	9a01      	ldr	r2, [sp, #4]
90014806:	990c      	ldr	r1, [sp, #48]	; 0x30
90014808:	1ad3      	subs	r3, r2, r3
9001480a:	88a2      	ldrh	r2, [r4, #4]
9001480c:	3120      	adds	r1, #32
9001480e:	441a      	add	r2, r3
90014810:	80a2      	strh	r2, [r4, #4]
90014812:	9a09      	ldr	r2, [sp, #36]	; 0x24
90014814:	1a89      	subs	r1, r1, r2
90014816:	88e2      	ldrh	r2, [r4, #6]
90014818:	fb03 2301 	mla	r3, r3, r1, r2
9001481c:	80e3      	strh	r3, [r4, #6]
9001481e:	e650      	b.n	900144c2 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
90014820:	f04f 37ff 	mov.w	r7, #4294967295
90014824:	434a      	muls	r2, r1
90014826:	4264      	negs	r4, r4
90014828:	970a      	str	r7, [sp, #40]	; 0x28
9001482a:	2700      	movs	r7, #0
9001482c:	e758      	b.n	900146e0 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d8>
9001482e:	ea4f 1867 	mov.w	r8, r7, asr #5
90014832:	f009 031f 	and.w	r3, r9, #31
90014836:	f007 071f 	and.w	r7, r7, #31
9001483a:	fa1f fc8c 	uxth.w	ip, ip
9001483e:	45d0      	cmp	r8, sl
90014840:	930f      	str	r3, [sp, #60]	; 0x3c
90014842:	fa1f fe8e 	uxth.w	lr, lr
90014846:	d10a      	bne.n	9001485e <_ZN8touchgfx7Outline10renderLineEiiii+0x656>
90014848:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001484a:	449c      	add	ip, r3
9001484c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
9001484e:	441f      	add	r7, r3
90014850:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90014852:	f8a5 c004 	strh.w	ip, [r5, #4]
90014856:	fb03 e707 	mla	r7, r3, r7, lr
9001485a:	80ef      	strh	r7, [r5, #6]
9001485c:	e6bc      	b.n	900145d8 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
9001485e:	2900      	cmp	r1, #0
90014860:	f2c0 80a6 	blt.w	900149b0 <_ZN8touchgfx7Outline10renderLineEiiii+0x7a8>
90014864:	9c0a      	ldr	r4, [sp, #40]	; 0x28
90014866:	f1c7 0320 	rsb	r3, r7, #32
9001486a:	4363      	muls	r3, r4
9001486c:	2401      	movs	r4, #1
9001486e:	940d      	str	r4, [sp, #52]	; 0x34
90014870:	2420      	movs	r4, #32
90014872:	940c      	str	r4, [sp, #48]	; 0x30
90014874:	fb93 f4f1 	sdiv	r4, r3, r1
90014878:	fb01 3b14 	mls	fp, r1, r4, r3
9001487c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9001487e:	f1bb 0f00 	cmp.w	fp, #0
90014882:	441f      	add	r7, r3
90014884:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90014886:	bfbc      	itt	lt
90014888:	f104 34ff 	addlt.w	r4, r4, #4294967295
9001488c:	448b      	addlt	fp, r1
9001488e:	fb04 e707 	mla	r7, r4, r7, lr
90014892:	44a4      	add	ip, r4
90014894:	80ef      	strh	r7, [r5, #6]
90014896:	f8a5 c004 	strh.w	ip, [r5, #4]
9001489a:	eb08 0503 	add.w	r5, r8, r3
9001489e:	f8d0 c010 	ldr.w	ip, [r0, #16]
900148a2:	f8bc e006 	ldrh.w	lr, [ip, #6]
900148a6:	f8bc 7004 	ldrh.w	r7, [ip, #4]
900148aa:	ea5e 0307 	orrs.w	r3, lr, r7
900148ae:	d011      	beq.n	900148d4 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
900148b0:	f9bc e002 	ldrsh.w	lr, [ip, #2]
900148b4:	f1be 0f00 	cmp.w	lr, #0
900148b8:	db0c      	blt.n	900148d4 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
900148ba:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
900148bc:	45be      	cmp	lr, r7
900148be:	da09      	bge.n	900148d4 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
900148c0:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
900148c4:	45be      	cmp	lr, r7
900148c6:	bf3c      	itt	cc
900148c8:	f10c 0708 	addcc.w	r7, ip, #8
900148cc:	6107      	strcc	r7, [r0, #16]
900148ce:	f10e 0701 	add.w	r7, lr, #1
900148d2:	6087      	str	r7, [r0, #8]
900148d4:	6907      	ldr	r7, [r0, #16]
900148d6:	b213      	sxth	r3, r2
900148d8:	4555      	cmp	r5, sl
900148da:	9310      	str	r3, [sp, #64]	; 0x40
900148dc:	807b      	strh	r3, [r7, #2]
900148de:	9b0e      	ldr	r3, [sp, #56]	; 0x38
900148e0:	803d      	strh	r5, [r7, #0]
900148e2:	80be      	strh	r6, [r7, #4]
900148e4:	eb04 0c03 	add.w	ip, r4, r3
900148e8:	80fe      	strh	r6, [r7, #6]
900148ea:	d050      	beq.n	9001498e <_ZN8touchgfx7Outline10renderLineEiiii+0x786>
900148ec:	9b01      	ldr	r3, [sp, #4]
900148ee:	eba3 070c 	sub.w	r7, r3, ip
900148f2:	ebab 0301 	sub.w	r3, fp, r1
900148f6:	443c      	add	r4, r7
900148f8:	9309      	str	r3, [sp, #36]	; 0x24
900148fa:	0164      	lsls	r4, r4, #5
900148fc:	fb94 f8f1 	sdiv	r8, r4, r1
90014900:	fb01 4418 	mls	r4, r1, r8, r4
90014904:	2c00      	cmp	r4, #0
90014906:	bfbc      	itt	lt
90014908:	f108 38ff 	addlt.w	r8, r8, #4294967295
9001490c:	1864      	addlt	r4, r4, r1
9001490e:	f108 0701 	add.w	r7, r8, #1
90014912:	9711      	str	r7, [sp, #68]	; 0x44
90014914:	9b09      	ldr	r3, [sp, #36]	; 0x24
90014916:	f8d0 e010 	ldr.w	lr, [r0, #16]
9001491a:	191b      	adds	r3, r3, r4
9001491c:	f8be b004 	ldrh.w	fp, [lr, #4]
90014920:	bf54      	ite	pl
90014922:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
90014924:	4647      	movmi	r7, r8
90014926:	9309      	str	r3, [sp, #36]	; 0x24
90014928:	bf58      	it	pl
9001492a:	1a5b      	subpl	r3, r3, r1
9001492c:	44bb      	add	fp, r7
9001492e:	44bc      	add	ip, r7
90014930:	bf58      	it	pl
90014932:	9309      	strpl	r3, [sp, #36]	; 0x24
90014934:	f8ae b004 	strh.w	fp, [lr, #4]
90014938:	f8be b006 	ldrh.w	fp, [lr, #6]
9001493c:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
90014940:	9f0d      	ldr	r7, [sp, #52]	; 0x34
90014942:	f8ae b006 	strh.w	fp, [lr, #6]
90014946:	443d      	add	r5, r7
90014948:	f8d0 e010 	ldr.w	lr, [r0, #16]
9001494c:	f8be b006 	ldrh.w	fp, [lr, #6]
90014950:	f8be 7004 	ldrh.w	r7, [lr, #4]
90014954:	ea5b 0307 	orrs.w	r3, fp, r7
90014958:	d011      	beq.n	9001497e <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
9001495a:	f9be b002 	ldrsh.w	fp, [lr, #2]
9001495e:	f1bb 0f00 	cmp.w	fp, #0
90014962:	db0c      	blt.n	9001497e <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
90014964:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
90014966:	45bb      	cmp	fp, r7
90014968:	da09      	bge.n	9001497e <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
9001496a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
9001496e:	45bb      	cmp	fp, r7
90014970:	bf3c      	itt	cc
90014972:	f10e 0708 	addcc.w	r7, lr, #8
90014976:	6107      	strcc	r7, [r0, #16]
90014978:	f10b 0701 	add.w	r7, fp, #1
9001497c:	6087      	str	r7, [r0, #8]
9001497e:	6907      	ldr	r7, [r0, #16]
90014980:	4555      	cmp	r5, sl
90014982:	9b10      	ldr	r3, [sp, #64]	; 0x40
90014984:	803d      	strh	r5, [r7, #0]
90014986:	807b      	strh	r3, [r7, #2]
90014988:	80be      	strh	r6, [r7, #4]
9001498a:	80fe      	strh	r6, [r7, #6]
9001498c:	d1c2      	bne.n	90014914 <_ZN8touchgfx7Outline10renderLineEiiii+0x70c>
9001498e:	9b01      	ldr	r3, [sp, #4]
90014990:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
90014992:	eba3 0c0c 	sub.w	ip, r3, ip
90014996:	6903      	ldr	r3, [r0, #16]
90014998:	3720      	adds	r7, #32
9001499a:	8899      	ldrh	r1, [r3, #4]
9001499c:	4461      	add	r1, ip
9001499e:	8099      	strh	r1, [r3, #4]
900149a0:	990c      	ldr	r1, [sp, #48]	; 0x30
900149a2:	1a7f      	subs	r7, r7, r1
900149a4:	88d9      	ldrh	r1, [r3, #6]
900149a6:	fb0c 1c07 	mla	ip, ip, r7, r1
900149aa:	f8a3 c006 	strh.w	ip, [r3, #6]
900149ae:	e613      	b.n	900145d8 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
900149b0:	f04f 34ff 	mov.w	r4, #4294967295
900149b4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
900149b6:	4249      	negs	r1, r1
900149b8:	940d      	str	r4, [sp, #52]	; 0x34
900149ba:	2400      	movs	r4, #0
900149bc:	437b      	muls	r3, r7
900149be:	e758      	b.n	90014872 <_ZN8touchgfx7Outline10renderLineEiiii+0x66a>
900149c0:	9905      	ldr	r1, [sp, #20]
900149c2:	ea4f 1b69 	mov.w	fp, r9, asr #5
900149c6:	f009 0c1f 	and.w	ip, r9, #31
900149ca:	f8b7 8004 	ldrh.w	r8, [r7, #4]
900149ce:	f001 011f 	and.w	r1, r1, #31
900149d2:	45f3      	cmp	fp, lr
900149d4:	f8b7 a006 	ldrh.w	sl, [r7, #6]
900149d8:	9102      	str	r1, [sp, #8]
900149da:	9904      	ldr	r1, [sp, #16]
900149dc:	eba1 0406 	sub.w	r4, r1, r6
900149e0:	d108      	bne.n	900149f4 <_ZN8touchgfx7Outline10renderLineEiiii+0x7ec>
900149e2:	9b02      	ldr	r3, [sp, #8]
900149e4:	44a0      	add	r8, r4
900149e6:	449c      	add	ip, r3
900149e8:	f8a7 8004 	strh.w	r8, [r7, #4]
900149ec:	fb04 a40c 	mla	r4, r4, ip, sl
900149f0:	80fc      	strh	r4, [r7, #6]
900149f2:	e461      	b.n	900142b8 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
900149f4:	9905      	ldr	r1, [sp, #20]
900149f6:	ebb1 0109 	subs.w	r1, r1, r9
900149fa:	bf51      	iteee	pl
900149fc:	f1cc 0520 	rsbpl	r5, ip, #32
90014a00:	fb04 f40c 	mulmi.w	r4, r4, ip
90014a04:	4249      	negmi	r1, r1
90014a06:	2500      	movmi	r5, #0
90014a08:	bf5d      	ittte	pl
90014a0a:	436c      	mulpl	r4, r5
90014a0c:	2520      	movpl	r5, #32
90014a0e:	f04f 0901 	movpl.w	r9, #1
90014a12:	f04f 39ff 	movmi.w	r9, #4294967295
90014a16:	9501      	str	r5, [sp, #4]
90014a18:	9b01      	ldr	r3, [sp, #4]
90014a1a:	fb94 f5f1 	sdiv	r5, r4, r1
90014a1e:	fb01 4415 	mls	r4, r1, r5, r4
90014a22:	449c      	add	ip, r3
90014a24:	eb0b 0309 	add.w	r3, fp, r9
90014a28:	2c00      	cmp	r4, #0
90014a2a:	bfbc      	itt	lt
90014a2c:	f105 35ff 	addlt.w	r5, r5, #4294967295
90014a30:	1864      	addlt	r4, r4, r1
90014a32:	44a8      	add	r8, r5
90014a34:	fb05 ac0c 	mla	ip, r5, ip, sl
90014a38:	f8a7 8004 	strh.w	r8, [r7, #4]
90014a3c:	f8a7 c006 	strh.w	ip, [r7, #6]
90014a40:	f8d0 c010 	ldr.w	ip, [r0, #16]
90014a44:	f8bc 8006 	ldrh.w	r8, [ip, #6]
90014a48:	f8bc 7004 	ldrh.w	r7, [ip, #4]
90014a4c:	ea58 0707 	orrs.w	r7, r8, r7
90014a50:	d011      	beq.n	90014a76 <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
90014a52:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
90014a56:	f1b8 0f00 	cmp.w	r8, #0
90014a5a:	db0c      	blt.n	90014a76 <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
90014a5c:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
90014a5e:	45b8      	cmp	r8, r7
90014a60:	da09      	bge.n	90014a76 <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
90014a62:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
90014a66:	45b8      	cmp	r8, r7
90014a68:	bf3c      	itt	cc
90014a6a:	f10c 0708 	addcc.w	r7, ip, #8
90014a6e:	6107      	strcc	r7, [r0, #16]
90014a70:	f108 0701 	add.w	r7, r8, #1
90014a74:	6087      	str	r7, [r0, #8]
90014a76:	6907      	ldr	r7, [r0, #16]
90014a78:	f04f 0c00 	mov.w	ip, #0
90014a7c:	b212      	sxth	r2, r2
90014a7e:	459e      	cmp	lr, r3
90014a80:	803b      	strh	r3, [r7, #0]
90014a82:	442e      	add	r6, r5
90014a84:	807a      	strh	r2, [r7, #2]
90014a86:	f8a7 c004 	strh.w	ip, [r7, #4]
90014a8a:	f8a7 c006 	strh.w	ip, [r7, #6]
90014a8e:	d04b      	beq.n	90014b28 <_ZN8touchgfx7Outline10renderLineEiiii+0x920>
90014a90:	9f04      	ldr	r7, [sp, #16]
90014a92:	1a64      	subs	r4, r4, r1
90014a94:	f04f 0a00 	mov.w	sl, #0
90014a98:	1bbf      	subs	r7, r7, r6
90014a9a:	443d      	add	r5, r7
90014a9c:	016d      	lsls	r5, r5, #5
90014a9e:	fb95 f8f1 	sdiv	r8, r5, r1
90014aa2:	fb01 5518 	mls	r5, r1, r8, r5
90014aa6:	4565      	cmp	r5, ip
90014aa8:	bfbc      	itt	lt
90014aaa:	f108 38ff 	addlt.w	r8, r8, #4294967295
90014aae:	186d      	addlt	r5, r5, r1
90014ab0:	f108 0701 	add.w	r7, r8, #1
90014ab4:	9703      	str	r7, [sp, #12]
90014ab6:	f8d0 c010 	ldr.w	ip, [r0, #16]
90014aba:	1964      	adds	r4, r4, r5
90014abc:	444b      	add	r3, r9
90014abe:	bf54      	ite	pl
90014ac0:	9f03      	ldrpl	r7, [sp, #12]
90014ac2:	4647      	movmi	r7, r8
90014ac4:	f8bc b004 	ldrh.w	fp, [ip, #4]
90014ac8:	bf58      	it	pl
90014aca:	1a64      	subpl	r4, r4, r1
90014acc:	443e      	add	r6, r7
90014ace:	44bb      	add	fp, r7
90014ad0:	f8ac b004 	strh.w	fp, [ip, #4]
90014ad4:	f8bc b006 	ldrh.w	fp, [ip, #6]
90014ad8:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
90014adc:	f8ac b006 	strh.w	fp, [ip, #6]
90014ae0:	f8d0 c010 	ldr.w	ip, [r0, #16]
90014ae4:	f8bc b006 	ldrh.w	fp, [ip, #6]
90014ae8:	f8bc 7004 	ldrh.w	r7, [ip, #4]
90014aec:	ea5b 0707 	orrs.w	r7, fp, r7
90014af0:	d011      	beq.n	90014b16 <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
90014af2:	f9bc b002 	ldrsh.w	fp, [ip, #2]
90014af6:	f1bb 0f00 	cmp.w	fp, #0
90014afa:	db0c      	blt.n	90014b16 <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
90014afc:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
90014afe:	45bb      	cmp	fp, r7
90014b00:	da09      	bge.n	90014b16 <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
90014b02:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
90014b06:	45bb      	cmp	fp, r7
90014b08:	bf3c      	itt	cc
90014b0a:	f10c 0708 	addcc.w	r7, ip, #8
90014b0e:	6107      	strcc	r7, [r0, #16]
90014b10:	f10b 0701 	add.w	r7, fp, #1
90014b14:	6087      	str	r7, [r0, #8]
90014b16:	6907      	ldr	r7, [r0, #16]
90014b18:	459e      	cmp	lr, r3
90014b1a:	803b      	strh	r3, [r7, #0]
90014b1c:	807a      	strh	r2, [r7, #2]
90014b1e:	f8a7 a004 	strh.w	sl, [r7, #4]
90014b22:	f8a7 a006 	strh.w	sl, [r7, #6]
90014b26:	d1c6      	bne.n	90014ab6 <_ZN8touchgfx7Outline10renderLineEiiii+0x8ae>
90014b28:	9b04      	ldr	r3, [sp, #16]
90014b2a:	1b9e      	subs	r6, r3, r6
90014b2c:	6903      	ldr	r3, [r0, #16]
90014b2e:	889a      	ldrh	r2, [r3, #4]
90014b30:	4432      	add	r2, r6
90014b32:	809a      	strh	r2, [r3, #4]
90014b34:	9a02      	ldr	r2, [sp, #8]
90014b36:	f102 0c20 	add.w	ip, r2, #32
90014b3a:	9a01      	ldr	r2, [sp, #4]
90014b3c:	ebac 0c02 	sub.w	ip, ip, r2
90014b40:	88da      	ldrh	r2, [r3, #6]
90014b42:	fb06 260c 	mla	r6, r6, ip, r2
90014b46:	80de      	strh	r6, [r3, #6]
90014b48:	f7ff bbb6 	b.w	900142b8 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>

90014b4c <_ZN8touchgfx7Outline6lineToEii>:
90014b4c:	6a43      	ldr	r3, [r0, #36]	; 0x24
90014b4e:	079b      	lsls	r3, r3, #30
90014b50:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
90014b52:	460e      	mov	r6, r1
90014b54:	4615      	mov	r5, r2
90014b56:	d511      	bpl.n	90014b7c <_ZN8touchgfx7Outline6lineToEii+0x30>
90014b58:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
90014b5c:	ea86 0701 	eor.w	r7, r6, r1
90014b60:	ea85 0302 	eor.w	r3, r5, r2
90014b64:	433b      	orrs	r3, r7
90014b66:	d009      	beq.n	90014b7c <_ZN8touchgfx7Outline6lineToEii+0x30>
90014b68:	4633      	mov	r3, r6
90014b6a:	9500      	str	r5, [sp, #0]
90014b6c:	f7ff fb4c 	bl	90014208 <_ZN8touchgfx7Outline10renderLineEiiii>
90014b70:	6a43      	ldr	r3, [r0, #36]	; 0x24
90014b72:	f043 0301 	orr.w	r3, r3, #1
90014b76:	e9c0 6505 	strd	r6, r5, [r0, #20]
90014b7a:	6243      	str	r3, [r0, #36]	; 0x24
90014b7c:	b003      	add	sp, #12
90014b7e:	bdf0      	pop	{r4, r5, r6, r7, pc}

90014b80 <_ZN8touchgfx7Outline6moveToEii>:
90014b80:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90014b82:	6a43      	ldr	r3, [r0, #36]	; 0x24
90014b84:	4615      	mov	r5, r2
90014b86:	4604      	mov	r4, r0
90014b88:	460e      	mov	r6, r1
90014b8a:	079a      	lsls	r2, r3, #30
90014b8c:	d401      	bmi.n	90014b92 <_ZN8touchgfx7Outline6moveToEii+0x12>
90014b8e:	f7ff fb07 	bl	900141a0 <_ZN8touchgfx7Outline5resetEv>
90014b92:	6a63      	ldr	r3, [r4, #36]	; 0x24
90014b94:	07db      	lsls	r3, r3, #31
90014b96:	d504      	bpl.n	90014ba2 <_ZN8touchgfx7Outline6moveToEii+0x22>
90014b98:	4620      	mov	r0, r4
90014b9a:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
90014b9e:	f7ff ffd5 	bl	90014b4c <_ZN8touchgfx7Outline6lineToEii>
90014ba2:	6923      	ldr	r3, [r4, #16]
90014ba4:	1170      	asrs	r0, r6, #5
90014ba6:	1169      	asrs	r1, r5, #5
90014ba8:	f9b3 2000 	ldrsh.w	r2, [r3]
90014bac:	4290      	cmp	r0, r2
90014bae:	d103      	bne.n	90014bb8 <_ZN8touchgfx7Outline6moveToEii+0x38>
90014bb0:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
90014bb4:	4291      	cmp	r1, r2
90014bb6:	d01a      	beq.n	90014bee <_ZN8touchgfx7Outline6moveToEii+0x6e>
90014bb8:	88df      	ldrh	r7, [r3, #6]
90014bba:	889a      	ldrh	r2, [r3, #4]
90014bbc:	433a      	orrs	r2, r7
90014bbe:	d010      	beq.n	90014be2 <_ZN8touchgfx7Outline6moveToEii+0x62>
90014bc0:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
90014bc4:	2a00      	cmp	r2, #0
90014bc6:	db0c      	blt.n	90014be2 <_ZN8touchgfx7Outline6moveToEii+0x62>
90014bc8:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
90014bca:	42ba      	cmp	r2, r7
90014bcc:	da09      	bge.n	90014be2 <_ZN8touchgfx7Outline6moveToEii+0x62>
90014bce:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
90014bd2:	42ba      	cmp	r2, r7
90014bd4:	f102 0201 	add.w	r2, r2, #1
90014bd8:	bf38      	it	cc
90014bda:	3308      	addcc	r3, #8
90014bdc:	60a2      	str	r2, [r4, #8]
90014bde:	bf38      	it	cc
90014be0:	6123      	strcc	r3, [r4, #16]
90014be2:	6923      	ldr	r3, [r4, #16]
90014be4:	2200      	movs	r2, #0
90014be6:	8018      	strh	r0, [r3, #0]
90014be8:	8059      	strh	r1, [r3, #2]
90014bea:	809a      	strh	r2, [r3, #4]
90014bec:	80da      	strh	r2, [r3, #6]
90014bee:	6166      	str	r6, [r4, #20]
90014bf0:	6225      	str	r5, [r4, #32]
90014bf2:	e9c4 5606 	strd	r5, r6, [r4, #24]
90014bf6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

90014bf8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
90014bf8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90014bfc:	b0d0      	sub	sp, #320	; 0x140
90014bfe:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
90014c02:	466c      	mov	r4, sp
90014c04:	4627      	mov	r7, r4
90014c06:	1a0d      	subs	r5, r1, r0
90014c08:	f100 0308 	add.w	r3, r0, #8
90014c0c:	2d48      	cmp	r5, #72	; 0x48
90014c0e:	f340 80d5 	ble.w	90014dbc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
90014c12:	112d      	asrs	r5, r5, #4
90014c14:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
90014c18:	f9b0 9000 	ldrsh.w	r9, [r0]
90014c1c:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
90014c20:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
90014c24:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
90014c28:	6816      	ldr	r6, [r2, #0]
90014c2a:	6006      	str	r6, [r0, #0]
90014c2c:	6856      	ldr	r6, [r2, #4]
90014c2e:	6046      	str	r6, [r0, #4]
90014c30:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
90014c34:	f8a2 8002 	strh.w	r8, [r2, #2]
90014c38:	f8a2 e004 	strh.w	lr, [r2, #4]
90014c3c:	f8a2 c006 	strh.w	ip, [r2, #6]
90014c40:	f1a1 0208 	sub.w	r2, r1, #8
90014c44:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
90014c48:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
90014c4c:	4565      	cmp	r5, ip
90014c4e:	db06      	blt.n	90014c5e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
90014c50:	d119      	bne.n	90014c86 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
90014c52:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
90014c56:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
90014c5a:	42ae      	cmp	r6, r5
90014c5c:	dd13      	ble.n	90014c86 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
90014c5e:	460e      	mov	r6, r1
90014c60:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
90014c64:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
90014c68:	f856 5d08 	ldr.w	r5, [r6, #-8]!
90014c6c:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
90014c70:	601d      	str	r5, [r3, #0]
90014c72:	6875      	ldr	r5, [r6, #4]
90014c74:	605d      	str	r5, [r3, #4]
90014c76:	f821 9c08 	strh.w	r9, [r1, #-8]
90014c7a:	f821 cc06 	strh.w	ip, [r1, #-6]
90014c7e:	f821 8c04 	strh.w	r8, [r1, #-4]
90014c82:	f821 ec02 	strh.w	lr, [r1, #-2]
90014c86:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
90014c8a:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
90014c8e:	42ae      	cmp	r6, r5
90014c90:	db06      	blt.n	90014ca0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
90014c92:	d116      	bne.n	90014cc2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
90014c94:	f9b0 c000 	ldrsh.w	ip, [r0]
90014c98:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
90014c9c:	45ac      	cmp	ip, r5
90014c9e:	da10      	bge.n	90014cc2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
90014ca0:	681d      	ldr	r5, [r3, #0]
90014ca2:	f9b0 8000 	ldrsh.w	r8, [r0]
90014ca6:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
90014caa:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
90014cae:	6005      	str	r5, [r0, #0]
90014cb0:	685d      	ldr	r5, [r3, #4]
90014cb2:	f8a0 8008 	strh.w	r8, [r0, #8]
90014cb6:	6045      	str	r5, [r0, #4]
90014cb8:	8146      	strh	r6, [r0, #10]
90014cba:	f8a0 e00c 	strh.w	lr, [r0, #12]
90014cbe:	f8a0 c00e 	strh.w	ip, [r0, #14]
90014cc2:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
90014cc6:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
90014cca:	4565      	cmp	r5, ip
90014ccc:	db06      	blt.n	90014cdc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
90014cce:	d119      	bne.n	90014d04 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
90014cd0:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
90014cd4:	f9b0 5000 	ldrsh.w	r5, [r0]
90014cd8:	42ae      	cmp	r6, r5
90014cda:	da13      	bge.n	90014d04 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
90014cdc:	460e      	mov	r6, r1
90014cde:	f9b0 9000 	ldrsh.w	r9, [r0]
90014ce2:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
90014ce6:	f856 5d08 	ldr.w	r5, [r6, #-8]!
90014cea:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
90014cee:	6005      	str	r5, [r0, #0]
90014cf0:	6875      	ldr	r5, [r6, #4]
90014cf2:	6045      	str	r5, [r0, #4]
90014cf4:	f821 9c08 	strh.w	r9, [r1, #-8]
90014cf8:	f821 cc06 	strh.w	ip, [r1, #-6]
90014cfc:	f821 8c04 	strh.w	r8, [r1, #-4]
90014d00:	f821 ec02 	strh.w	lr, [r1, #-2]
90014d04:	3308      	adds	r3, #8
90014d06:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
90014d0a:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
90014d0e:	45e6      	cmp	lr, ip
90014d10:	dbf8      	blt.n	90014d04 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
90014d12:	d105      	bne.n	90014d20 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
90014d14:	f9b3 6000 	ldrsh.w	r6, [r3]
90014d18:	f9b0 5000 	ldrsh.w	r5, [r0]
90014d1c:	42ae      	cmp	r6, r5
90014d1e:	dbf1      	blt.n	90014d04 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
90014d20:	4615      	mov	r5, r2
90014d22:	3a08      	subs	r2, #8
90014d24:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
90014d28:	45b4      	cmp	ip, r6
90014d2a:	dbf9      	blt.n	90014d20 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
90014d2c:	d105      	bne.n	90014d3a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
90014d2e:	f9b0 8000 	ldrsh.w	r8, [r0]
90014d32:	f9b2 6000 	ldrsh.w	r6, [r2]
90014d36:	45b0      	cmp	r8, r6
90014d38:	dbf2      	blt.n	90014d20 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
90014d3a:	4293      	cmp	r3, r2
90014d3c:	f1a5 0608 	sub.w	r6, r5, #8
90014d40:	d816      	bhi.n	90014d70 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
90014d42:	f8d6 c000 	ldr.w	ip, [r6]
90014d46:	f9b3 a000 	ldrsh.w	sl, [r3]
90014d4a:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
90014d4e:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
90014d52:	f8c3 c000 	str.w	ip, [r3]
90014d56:	f8d6 c004 	ldr.w	ip, [r6, #4]
90014d5a:	f8c3 c004 	str.w	ip, [r3, #4]
90014d5e:	f825 ac08 	strh.w	sl, [r5, #-8]
90014d62:	f825 ec06 	strh.w	lr, [r5, #-6]
90014d66:	f825 9c04 	strh.w	r9, [r5, #-4]
90014d6a:	f825 8c02 	strh.w	r8, [r5, #-2]
90014d6e:	e7c9      	b.n	90014d04 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
90014d70:	f8d6 e000 	ldr.w	lr, [r6]
90014d74:	f9b0 a000 	ldrsh.w	sl, [r0]
90014d78:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
90014d7c:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
90014d80:	f8c0 e000 	str.w	lr, [r0]
90014d84:	f8d6 e004 	ldr.w	lr, [r6, #4]
90014d88:	1a16      	subs	r6, r2, r0
90014d8a:	f8c0 e004 	str.w	lr, [r0, #4]
90014d8e:	f825 ac08 	strh.w	sl, [r5, #-8]
90014d92:	f825 cc06 	strh.w	ip, [r5, #-6]
90014d96:	f825 9c04 	strh.w	r9, [r5, #-4]
90014d9a:	f825 8c02 	strh.w	r8, [r5, #-2]
90014d9e:	1acd      	subs	r5, r1, r3
90014da0:	10ed      	asrs	r5, r5, #3
90014da2:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
90014da6:	bfb5      	itete	lt
90014da8:	e9c4 0200 	strdlt	r0, r2, [r4]
90014dac:	e9c4 3100 	strdge	r3, r1, [r4]
90014db0:	460a      	movlt	r2, r1
90014db2:	4603      	movge	r3, r0
90014db4:	3408      	adds	r4, #8
90014db6:	4618      	mov	r0, r3
90014db8:	4611      	mov	r1, r2
90014dba:	e724      	b.n	90014c06 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
90014dbc:	4299      	cmp	r1, r3
90014dbe:	d927      	bls.n	90014e10 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x218>
90014dc0:	f1a3 0210 	sub.w	r2, r3, #16
90014dc4:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
90014dc8:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
90014dcc:	45ac      	cmp	ip, r5
90014dce:	db06      	blt.n	90014dde <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
90014dd0:	d11c      	bne.n	90014e0c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x214>
90014dd2:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
90014dd6:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
90014dda:	42ae      	cmp	r6, r5
90014ddc:	da16      	bge.n	90014e0c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x214>
90014dde:	4615      	mov	r5, r2
90014de0:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
90014de4:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
90014de8:	3a08      	subs	r2, #8
90014dea:	f855 6f08 	ldr.w	r6, [r5, #8]!
90014dee:	f9b2 e01e 	ldrsh.w	lr, [r2, #30]
90014df2:	6196      	str	r6, [r2, #24]
90014df4:	42a8      	cmp	r0, r5
90014df6:	686e      	ldr	r6, [r5, #4]
90014df8:	f8a2 9010 	strh.w	r9, [r2, #16]
90014dfc:	61d6      	str	r6, [r2, #28]
90014dfe:	f8a2 c012 	strh.w	ip, [r2, #18]
90014e02:	f8a2 8014 	strh.w	r8, [r2, #20]
90014e06:	f8a2 e016 	strh.w	lr, [r2, #22]
90014e0a:	d1db      	bne.n	90014dc4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
90014e0c:	3308      	adds	r3, #8
90014e0e:	e7d5      	b.n	90014dbc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
90014e10:	42bc      	cmp	r4, r7
90014e12:	d903      	bls.n	90014e1c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x224>
90014e14:	e954 0102 	ldrd	r0, r1, [r4, #-8]
90014e18:	3c08      	subs	r4, #8
90014e1a:	e6f4      	b.n	90014c06 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
90014e1c:	b050      	add	sp, #320	; 0x140
90014e1e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

90014e22 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
90014e22:	b510      	push	{r4, lr}
90014e24:	6a43      	ldr	r3, [r0, #36]	; 0x24
90014e26:	4604      	mov	r4, r0
90014e28:	07da      	lsls	r2, r3, #31
90014e2a:	d507      	bpl.n	90014e3c <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
90014e2c:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
90014e30:	f7ff fe8c 	bl	90014b4c <_ZN8touchgfx7Outline6lineToEii>
90014e34:	6a43      	ldr	r3, [r0, #36]	; 0x24
90014e36:	f023 0301 	bic.w	r3, r3, #1
90014e3a:	6243      	str	r3, [r0, #36]	; 0x24
90014e3c:	6a63      	ldr	r3, [r4, #36]	; 0x24
90014e3e:	079b      	lsls	r3, r3, #30
90014e40:	d521      	bpl.n	90014e86 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
90014e42:	6923      	ldr	r3, [r4, #16]
90014e44:	88d9      	ldrh	r1, [r3, #6]
90014e46:	889a      	ldrh	r2, [r3, #4]
90014e48:	430a      	orrs	r2, r1
90014e4a:	d010      	beq.n	90014e6e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
90014e4c:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
90014e50:	2a00      	cmp	r2, #0
90014e52:	db0c      	blt.n	90014e6e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
90014e54:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
90014e56:	428a      	cmp	r2, r1
90014e58:	da09      	bge.n	90014e6e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
90014e5a:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
90014e5e:	4291      	cmp	r1, r2
90014e60:	f102 0201 	add.w	r2, r2, #1
90014e64:	bf88      	it	hi
90014e66:	3308      	addhi	r3, #8
90014e68:	60a2      	str	r2, [r4, #8]
90014e6a:	bf88      	it	hi
90014e6c:	6123      	strhi	r3, [r4, #16]
90014e6e:	68a1      	ldr	r1, [r4, #8]
90014e70:	b129      	cbz	r1, 90014e7e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
90014e72:	6863      	ldr	r3, [r4, #4]
90014e74:	4299      	cmp	r1, r3
90014e76:	d802      	bhi.n	90014e7e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
90014e78:	68e0      	ldr	r0, [r4, #12]
90014e7a:	f7ff febd 	bl	90014bf8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
90014e7e:	6a63      	ldr	r3, [r4, #36]	; 0x24
90014e80:	f023 0302 	bic.w	r3, r3, #2
90014e84:	6263      	str	r3, [r4, #36]	; 0x24
90014e86:	68e0      	ldr	r0, [r4, #12]
90014e88:	bd10      	pop	{r4, pc}
	...

90014e8c <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
90014e8c:	4b02      	ldr	r3, [pc, #8]	; (90014e98 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
90014e8e:	6018      	str	r0, [r3, #0]
90014e90:	4b02      	ldr	r3, [pc, #8]	; (90014e9c <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
90014e92:	6019      	str	r1, [r3, #0]
90014e94:	4770      	bx	lr
90014e96:	bf00      	nop
90014e98:	2403983c 	.word	0x2403983c
90014e9c:	24039840 	.word	0x24039840

90014ea0 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
90014ea0:	2300      	movs	r3, #0
90014ea2:	4a02      	ldr	r2, [pc, #8]	; (90014eac <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
90014ea4:	6013      	str	r3, [r2, #0]
90014ea6:	4a02      	ldr	r2, [pc, #8]	; (90014eb0 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
90014ea8:	6013      	str	r3, [r2, #0]
90014eaa:	4770      	bx	lr
90014eac:	2403983c 	.word	0x2403983c
90014eb0:	24039840 	.word	0x24039840

90014eb4 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
90014eb4:	4b01      	ldr	r3, [pc, #4]	; (90014ebc <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
90014eb6:	6818      	ldr	r0, [r3, #0]
90014eb8:	4770      	bx	lr
90014eba:	bf00      	nop
90014ebc:	2403983c 	.word	0x2403983c

90014ec0 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
90014ec0:	4b01      	ldr	r3, [pc, #4]	; (90014ec8 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
90014ec2:	6818      	ldr	r0, [r3, #0]
90014ec4:	4770      	bx	lr
90014ec6:	bf00      	nop
90014ec8:	24039840 	.word	0x24039840

90014ecc <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
90014ecc:	b510      	push	{r4, lr}
90014ece:	6803      	ldr	r3, [r0, #0]
90014ed0:	460c      	mov	r4, r1
90014ed2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90014ed4:	4798      	blx	r3
90014ed6:	1b03      	subs	r3, r0, r4
90014ed8:	4258      	negs	r0, r3
90014eda:	4158      	adcs	r0, r3
90014edc:	bd10      	pop	{r4, pc}
	...

90014ee0 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
90014ee0:	4b01      	ldr	r3, [pc, #4]	; (90014ee8 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
90014ee2:	6019      	str	r1, [r3, #0]
90014ee4:	4770      	bx	lr
90014ee6:	bf00      	nop
90014ee8:	24039844 	.word	0x24039844

90014eec <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
90014eec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90014ef0:	4696      	mov	lr, r2
90014ef2:	b097      	sub	sp, #92	; 0x5c
90014ef4:	4605      	mov	r5, r0
90014ef6:	4614      	mov	r4, r2
90014ef8:	460e      	mov	r6, r1
90014efa:	461f      	mov	r7, r3
90014efc:	f10d 0c1c 	add.w	ip, sp, #28
90014f00:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
90014f04:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
90014f08:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
90014f0c:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90014f10:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90014f14:	f8de 3000 	ldr.w	r3, [lr]
90014f18:	f104 0e14 	add.w	lr, r4, #20
90014f1c:	f8cc 3000 	str.w	r3, [ip]
90014f20:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
90014f24:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90014f28:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90014f2c:	f8de 3000 	ldr.w	r3, [lr]
90014f30:	f104 0e28 	add.w	lr, r4, #40	; 0x28
90014f34:	f8cc 3000 	str.w	r3, [ip]
90014f38:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
90014f3c:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90014f40:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90014f44:	f8de 3000 	ldr.w	r3, [lr]
90014f48:	4631      	mov	r1, r6
90014f4a:	9a21      	ldr	r2, [sp, #132]	; 0x84
90014f4c:	4628      	mov	r0, r5
90014f4e:	f8cc 3000 	str.w	r3, [ip]
90014f52:	682b      	ldr	r3, [r5, #0]
90014f54:	9201      	str	r2, [sp, #4]
90014f56:	9a20      	ldr	r2, [sp, #128]	; 0x80
90014f58:	f8cd 8008 	str.w	r8, [sp, #8]
90014f5c:	9200      	str	r2, [sp, #0]
90014f5e:	aa07      	add	r2, sp, #28
90014f60:	e9cd 9a03 	strd	r9, sl, [sp, #12]
90014f64:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
90014f68:	463b      	mov	r3, r7
90014f6a:	47d8      	blx	fp
90014f6c:	46a6      	mov	lr, r4
90014f6e:	f10d 0c1c 	add.w	ip, sp, #28
90014f72:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90014f76:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90014f7a:	f8de 3000 	ldr.w	r3, [lr]
90014f7e:	f104 0e28 	add.w	lr, r4, #40	; 0x28
90014f82:	343c      	adds	r4, #60	; 0x3c
90014f84:	f8cc 3000 	str.w	r3, [ip]
90014f88:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
90014f8c:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90014f90:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90014f94:	f8de 3000 	ldr.w	r3, [lr]
90014f98:	f8cc 3000 	str.w	r3, [ip]
90014f9c:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
90014fa0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
90014fa2:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90014fa6:	6823      	ldr	r3, [r4, #0]
90014fa8:	4631      	mov	r1, r6
90014faa:	4628      	mov	r0, r5
90014fac:	f8cc 3000 	str.w	r3, [ip]
90014fb0:	682b      	ldr	r3, [r5, #0]
90014fb2:	e9cd 9a03 	strd	r9, sl, [sp, #12]
90014fb6:	9a21      	ldr	r2, [sp, #132]	; 0x84
90014fb8:	f8cd 8008 	str.w	r8, [sp, #8]
90014fbc:	9201      	str	r2, [sp, #4]
90014fbe:	9a20      	ldr	r2, [sp, #128]	; 0x80
90014fc0:	9200      	str	r2, [sp, #0]
90014fc2:	aa07      	add	r2, sp, #28
90014fc4:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
90014fc6:	463b      	mov	r3, r7
90014fc8:	47a0      	blx	r4
90014fca:	b017      	add	sp, #92	; 0x5c
90014fcc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90014fd0 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
90014fd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90014fd4:	b08d      	sub	sp, #52	; 0x34
90014fd6:	4688      	mov	r8, r1
90014fd8:	f8d3 c000 	ldr.w	ip, [r3]
90014fdc:	9916      	ldr	r1, [sp, #88]	; 0x58
90014fde:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
90014fe2:	680f      	ldr	r7, [r1, #0]
90014fe4:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
90014fe8:	eba7 070c 	sub.w	r7, r7, ip
90014fec:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
90014ff0:	edd3 6a07 	vldr	s13, [r3, #28]
90014ff4:	42bc      	cmp	r4, r7
90014ff6:	9918      	ldr	r1, [sp, #96]	; 0x60
90014ff8:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
90014ffc:	bfa8      	it	ge
90014ffe:	463c      	movge	r4, r7
90015000:	f9b1 9000 	ldrsh.w	r9, [r1]
90015004:	f9ba 1000 	ldrsh.w	r1, [sl]
90015008:	ee07 4a90 	vmov	s15, r4
9001500c:	eb09 0e0c 	add.w	lr, r9, ip
90015010:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
90015014:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
90015018:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
9001501c:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
90015020:	4571      	cmp	r1, lr
90015022:	ee25 4a04 	vmul.f32	s8, s10, s8
90015026:	ee65 4a24 	vmul.f32	s9, s10, s9
9001502a:	ee25 5a27 	vmul.f32	s10, s10, s15
9001502e:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
90015032:	ee71 0aa4 	vadd.f32	s1, s3, s9
90015036:	ee32 1a05 	vadd.f32	s2, s4, s10
9001503a:	ee87 7aa6 	vdiv.f32	s14, s15, s13
9001503e:	ee36 0a84 	vadd.f32	s0, s13, s8
90015042:	ee61 1a87 	vmul.f32	s3, s3, s14
90015046:	ee22 2a07 	vmul.f32	s4, s4, s14
9001504a:	f340 808c 	ble.w	90015166 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x196>
9001504e:	eba1 060e 	sub.w	r6, r1, lr
90015052:	fb96 f5f4 	sdiv	r5, r6, r4
90015056:	ee07 5a10 	vmov	s14, r5
9001505a:	2d00      	cmp	r5, #0
9001505c:	fb04 6615 	mls	r6, r4, r5, r6
90015060:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90015064:	eea7 0a04 	vfma.f32	s0, s14, s8
90015068:	eee7 0a24 	vfma.f32	s1, s14, s9
9001506c:	eea7 1a05 	vfma.f32	s2, s14, s10
90015070:	dd12      	ble.n	90015098 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xc8>
90015072:	ee70 6a44 	vsub.f32	s13, s0, s8
90015076:	ee70 1ae4 	vsub.f32	s3, s1, s9
9001507a:	ee31 2a45 	vsub.f32	s4, s2, s10
9001507e:	eef5 6a40 	vcmp.f32	s13, #0.0
90015082:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90015086:	bf14      	ite	ne
90015088:	ee87 7aa6 	vdivne.f32	s14, s15, s13
9001508c:	eeb0 7a67 	vmoveq.f32	s14, s15
90015090:	ee61 1a87 	vmul.f32	s3, s3, s14
90015094:	ee22 2a07 	vmul.f32	s4, s4, s14
90015098:	fb05 f204 	mul.w	r2, r5, r4
9001509c:	1abf      	subs	r7, r7, r2
9001509e:	4494      	add	ip, r2
900150a0:	f8ba 2004 	ldrh.w	r2, [sl, #4]
900150a4:	4411      	add	r1, r2
900150a6:	eb09 020c 	add.w	r2, r9, ip
900150aa:	b209      	sxth	r1, r1
900150ac:	443a      	add	r2, r7
900150ae:	428a      	cmp	r2, r1
900150b0:	bfc4      	itt	gt
900150b2:	eba1 0209 	subgt.w	r2, r1, r9
900150b6:	eba2 070c 	subgt.w	r7, r2, ip
900150ba:	2f00      	cmp	r7, #0
900150bc:	dd50      	ble.n	90015160 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x190>
900150be:	fb97 f1f4 	sdiv	r1, r7, r4
900150c2:	fb04 7211 	mls	r2, r4, r1, r7
900150c6:	b90a      	cbnz	r2, 900150cc <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfc>
900150c8:	3901      	subs	r1, #1
900150ca:	4622      	mov	r2, r4
900150cc:	eec7 3a80 	vdiv.f32	s7, s15, s0
900150d0:	6840      	ldr	r0, [r0, #4]
900150d2:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
900150d6:	44b6      	add	lr, r6
900150d8:	f8d0 a000 	ldr.w	sl, [r0]
900150dc:	2900      	cmp	r1, #0
900150de:	bfcc      	ite	gt
900150e0:	46a1      	movgt	r9, r4
900150e2:	4691      	movle	r9, r2
900150e4:	900b      	str	r0, [sp, #44]	; 0x2c
900150e6:	9817      	ldr	r0, [sp, #92]	; 0x5c
900150e8:	fb04 e505 	mla	r5, r4, r5, lr
900150ec:	eef0 6a42 	vmov.f32	s13, s4
900150f0:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
900150f4:	9008      	str	r0, [sp, #32]
900150f6:	eeb0 7a61 	vmov.f32	s14, s3
900150fa:	9818      	ldr	r0, [sp, #96]	; 0x60
900150fc:	695b      	ldr	r3, [r3, #20]
900150fe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90015102:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
90015106:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
9001510a:	980b      	ldr	r0, [sp, #44]	; 0x2c
9001510c:	445b      	add	r3, fp
9001510e:	9307      	str	r3, [sp, #28]
90015110:	ee16 3a90 	vmov	r3, s13
90015114:	e9cd 8505 	strd	r8, r5, [sp, #20]
90015118:	ee60 2aa3 	vmul.f32	s5, s1, s7
9001511c:	ee21 3a23 	vmul.f32	s6, s2, s7
90015120:	ee72 7ae1 	vsub.f32	s15, s5, s3
90015124:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
90015128:	ee17 7a90 	vmov	r7, s15
9001512c:	ee73 7a42 	vsub.f32	s15, s6, s4
90015130:	fb97 f7f4 	sdiv	r7, r7, r4
90015134:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
90015138:	ee17 ca90 	vmov	ip, s15
9001513c:	fb9c fcf4 	sdiv	ip, ip, r4
90015140:	fb0c 3306 	mla	r3, ip, r6, r3
90015144:	9302      	str	r3, [sp, #8]
90015146:	ee17 3a10 	vmov	r3, s14
9001514a:	e9cd 7c03 	strd	r7, ip, [sp, #12]
9001514e:	fb07 3706 	mla	r7, r7, r6, r3
90015152:	eba9 0306 	sub.w	r3, r9, r6
90015156:	e9cd 4700 	strd	r4, r7, [sp]
9001515a:	f8da 4008 	ldr.w	r4, [sl, #8]
9001515e:	47a0      	blx	r4
90015160:	b00d      	add	sp, #52	; 0x34
90015162:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90015166:	2500      	movs	r5, #0
90015168:	462e      	mov	r6, r5
9001516a:	e799      	b.n	900150a0 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd0>

9001516c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
9001516c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90015170:	b0db      	sub	sp, #364	; 0x16c
90015172:	461d      	mov	r5, r3
90015174:	4614      	mov	r4, r2
90015176:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
9001517a:	910f      	str	r1, [sp, #60]	; 0x3c
9001517c:	4629      	mov	r1, r5
9001517e:	930a      	str	r3, [sp, #40]	; 0x28
90015180:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
90015184:	9009      	str	r0, [sp, #36]	; 0x24
90015186:	930b      	str	r3, [sp, #44]	; 0x2c
90015188:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
9001518c:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
90015190:	9310      	str	r3, [sp, #64]	; 0x40
90015192:	6803      	ldr	r3, [r0, #0]
90015194:	6c5f      	ldr	r7, [r3, #68]	; 0x44
90015196:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
9001519a:	47b8      	blx	r7
9001519c:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001519e:	6058      	str	r0, [r3, #4]
900151a0:	2800      	cmp	r0, #0
900151a2:	f000 83a1 	beq.w	900158e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
900151a6:	682b      	ldr	r3, [r5, #0]
900151a8:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
900151ac:	ed94 7a02 	vldr	s14, [r4, #8]
900151b0:	9314      	str	r3, [sp, #80]	; 0x50
900151b2:	686b      	ldr	r3, [r5, #4]
900151b4:	eeb4 7ae7 	vcmpe.f32	s14, s15
900151b8:	9315      	str	r3, [sp, #84]	; 0x54
900151ba:	4bc1      	ldr	r3, [pc, #772]	; (900154c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
900151bc:	7819      	ldrb	r1, [r3, #0]
900151be:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
900151c2:	2900      	cmp	r1, #0
900151c4:	bf16      	itet	ne
900151c6:	4619      	movne	r1, r3
900151c8:	4611      	moveq	r1, r2
900151ca:	4613      	movne	r3, r2
900151cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900151d0:	9116      	str	r1, [sp, #88]	; 0x58
900151d2:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
900151d6:	f240 8387 	bls.w	900158e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
900151da:	ed94 7a07 	vldr	s14, [r4, #28]
900151de:	eeb4 7ae7 	vcmpe.f32	s14, s15
900151e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900151e6:	f240 837f 	bls.w	900158e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
900151ea:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
900151ee:	eeb4 7ae7 	vcmpe.f32	s14, s15
900151f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900151f6:	f240 8377 	bls.w	900158e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
900151fa:	6822      	ldr	r2, [r4, #0]
900151fc:	4bb1      	ldr	r3, [pc, #708]	; (900154c4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
900151fe:	429a      	cmp	r2, r3
90015200:	f2c0 8372 	blt.w	900158e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90015204:	49b0      	ldr	r1, [pc, #704]	; (900154c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
90015206:	6963      	ldr	r3, [r4, #20]
90015208:	428a      	cmp	r2, r1
9001520a:	f300 836d 	bgt.w	900158e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
9001520e:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
90015212:	48ae      	ldr	r0, [pc, #696]	; (900154cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
90015214:	33ff      	adds	r3, #255	; 0xff
90015216:	4283      	cmp	r3, r0
90015218:	f200 8366 	bhi.w	900158e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
9001521c:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9001521e:	4dac      	ldr	r5, [pc, #688]	; (900154d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
90015220:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
90015224:	33ff      	adds	r3, #255	; 0xff
90015226:	42ab      	cmp	r3, r5
90015228:	f200 835e 	bhi.w	900158e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
9001522c:	6862      	ldr	r2, [r4, #4]
9001522e:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
90015232:	33ff      	adds	r3, #255	; 0xff
90015234:	4283      	cmp	r3, r0
90015236:	f200 8357 	bhi.w	900158e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
9001523a:	69a1      	ldr	r1, [r4, #24]
9001523c:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
90015240:	33ff      	adds	r3, #255	; 0xff
90015242:	4283      	cmp	r3, r0
90015244:	f200 8350 	bhi.w	900158e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90015248:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9001524a:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
9001524e:	30ff      	adds	r0, #255	; 0xff
90015250:	42a8      	cmp	r0, r5
90015252:	f200 8349 	bhi.w	900158e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90015256:	428a      	cmp	r2, r1
90015258:	f280 8110 	bge.w	9001547c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
9001525c:	429a      	cmp	r2, r3
9001525e:	f300 8119 	bgt.w	90015494 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
90015262:	4299      	cmp	r1, r3
90015264:	f280 811d 	bge.w	900154a2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
90015268:	2502      	movs	r5, #2
9001526a:	2701      	movs	r7, #1
9001526c:	46a9      	mov	r9, r5
9001526e:	46b8      	mov	r8, r7
90015270:	f04f 0a00 	mov.w	sl, #0
90015274:	4621      	mov	r1, r4
90015276:	a849      	add	r0, sp, #292	; 0x124
90015278:	f003 fe7c 	bl	90018f74 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
9001527c:	4622      	mov	r2, r4
9001527e:	4653      	mov	r3, sl
90015280:	a949      	add	r1, sp, #292	; 0x124
90015282:	f8cd 9000 	str.w	r9, [sp]
90015286:	a819      	add	r0, sp, #100	; 0x64
90015288:	f003 ffa4 	bl	900191d4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
9001528c:	4622      	mov	r2, r4
9001528e:	4653      	mov	r3, sl
90015290:	a949      	add	r1, sp, #292	; 0x124
90015292:	f8cd 8000 	str.w	r8, [sp]
90015296:	a829      	add	r0, sp, #164	; 0xa4
90015298:	f003 ff9c 	bl	900191d4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
9001529c:	4643      	mov	r3, r8
9001529e:	4622      	mov	r2, r4
900152a0:	a949      	add	r1, sp, #292	; 0x124
900152a2:	f8cd 9000 	str.w	r9, [sp]
900152a6:	a839      	add	r0, sp, #228	; 0xe4
900152a8:	f003 ff94 	bl	900191d4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
900152ac:	42af      	cmp	r7, r5
900152ae:	af12      	add	r7, sp, #72	; 0x48
900152b0:	bfb7      	itett	lt
900152b2:	2300      	movlt	r3, #0
900152b4:	2301      	movge	r3, #1
900152b6:	ad29      	addlt	r5, sp, #164	; 0xa4
900152b8:	ac19      	addlt	r4, sp, #100	; 0x64
900152ba:	bfb1      	iteee	lt
900152bc:	930e      	strlt	r3, [sp, #56]	; 0x38
900152be:	ad19      	addge	r5, sp, #100	; 0x64
900152c0:	930e      	strge	r3, [sp, #56]	; 0x38
900152c2:	ac29      	addge	r4, sp, #164	; 0xa4
900152c4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
900152c6:	e893 0003 	ldmia.w	r3, {r0, r1}
900152ca:	e887 0003 	stmia.w	r7, {r0, r1}
900152ce:	b928      	cbnz	r0, 900152dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
900152d0:	4b80      	ldr	r3, [pc, #512]	; (900154d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
900152d2:	6818      	ldr	r0, [r3, #0]
900152d4:	6803      	ldr	r3, [r0, #0]
900152d6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
900152d8:	4798      	blx	r3
900152da:	6038      	str	r0, [r7, #0]
900152dc:	9b64      	ldr	r3, [sp, #400]	; 0x190
900152de:	f8bb 0006 	ldrh.w	r0, [fp, #6]
900152e2:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
900152e6:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
900152e8:	930c      	str	r3, [sp, #48]	; 0x30
900152ea:	990c      	ldr	r1, [sp, #48]	; 0x30
900152ec:	6963      	ldr	r3, [r4, #20]
900152ee:	440b      	add	r3, r1
900152f0:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
900152f4:	4408      	add	r0, r1
900152f6:	b200      	sxth	r0, r0
900152f8:	4283      	cmp	r3, r0
900152fa:	900d      	str	r0, [sp, #52]	; 0x34
900152fc:	f280 80dd 	bge.w	900154ba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
90015300:	428b      	cmp	r3, r1
90015302:	da08      	bge.n	90015316 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
90015304:	2a00      	cmp	r2, #0
90015306:	dd06      	ble.n	90015316 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
90015308:	1acb      	subs	r3, r1, r3
9001530a:	429a      	cmp	r2, r3
9001530c:	f2c0 80e4 	blt.w	900154d8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
90015310:	2b00      	cmp	r3, #0
90015312:	f300 80e2 	bgt.w	900154da <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
90015316:	6967      	ldr	r7, [r4, #20]
90015318:	f10d 0850 	add.w	r8, sp, #80	; 0x50
9001531c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9001531e:	443b      	add	r3, r7
90015320:	461f      	mov	r7, r3
90015322:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90015324:	1bdf      	subs	r7, r3, r7
90015326:	4297      	cmp	r7, r2
90015328:	bfa8      	it	ge
9001532a:	4617      	movge	r7, r2
9001532c:	2f00      	cmp	r7, #0
9001532e:	f340 8166 	ble.w	900155fe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
90015332:	9b64      	ldr	r3, [sp, #400]	; 0x190
90015334:	6829      	ldr	r1, [r5, #0]
90015336:	f9b3 2000 	ldrsh.w	r2, [r3]
9001533a:	f9bb 3000 	ldrsh.w	r3, [fp]
9001533e:	4411      	add	r1, r2
90015340:	6820      	ldr	r0, [r4, #0]
90015342:	4299      	cmp	r1, r3
90015344:	dd1a      	ble.n	9001537c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
90015346:	f8bb 1004 	ldrh.w	r1, [fp, #4]
9001534a:	4402      	add	r2, r0
9001534c:	440b      	add	r3, r1
9001534e:	b21b      	sxth	r3, r3
90015350:	429a      	cmp	r2, r3
90015352:	dc13      	bgt.n	9001537c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
90015354:	9a10      	ldr	r2, [sp, #64]	; 0x40
90015356:	a912      	add	r1, sp, #72	; 0x48
90015358:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001535a:	9809      	ldr	r0, [sp, #36]	; 0x24
9001535c:	681b      	ldr	r3, [r3, #0]
9001535e:	9206      	str	r2, [sp, #24]
90015360:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
90015362:	9500      	str	r5, [sp, #0]
90015364:	9205      	str	r2, [sp, #20]
90015366:	9a0a      	ldr	r2, [sp, #40]	; 0x28
90015368:	e9cd b203 	strd	fp, r2, [sp, #12]
9001536c:	9a64      	ldr	r2, [sp, #400]	; 0x190
9001536e:	e9cd 8201 	strd	r8, r2, [sp, #4]
90015372:	aa49      	add	r2, sp, #292	; 0x124
90015374:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
90015378:	4623      	mov	r3, r4
9001537a:	47c8      	blx	r9
9001537c:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
90015380:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
90015384:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
90015388:	ee37 7a27 	vadd.f32	s14, s14, s15
9001538c:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
90015390:	68a1      	ldr	r1, [r4, #8]
90015392:	ee77 7aa6 	vadd.f32	s15, s15, s13
90015396:	ed94 6a08 	vldr	s12, [r4, #32]
9001539a:	edd4 6a07 	vldr	s13, [r4, #28]
9001539e:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
900153a2:	ee76 6a86 	vadd.f32	s13, s13, s12
900153a6:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
900153aa:	e9d4 2300 	ldrd	r2, r3, [r4]
900153ae:	edc4 6a07 	vstr	s13, [r4, #28]
900153b2:	441a      	add	r2, r3
900153b4:	6963      	ldr	r3, [r4, #20]
900153b6:	3301      	adds	r3, #1
900153b8:	6022      	str	r2, [r4, #0]
900153ba:	6163      	str	r3, [r4, #20]
900153bc:	69a3      	ldr	r3, [r4, #24]
900153be:	3b01      	subs	r3, #1
900153c0:	61a3      	str	r3, [r4, #24]
900153c2:	6923      	ldr	r3, [r4, #16]
900153c4:	440b      	add	r3, r1
900153c6:	68e1      	ldr	r1, [r4, #12]
900153c8:	428b      	cmp	r3, r1
900153ca:	6123      	str	r3, [r4, #16]
900153cc:	db15      	blt.n	900153fa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
900153ce:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
900153d2:	3201      	adds	r2, #1
900153d4:	1a5b      	subs	r3, r3, r1
900153d6:	ee76 6a26 	vadd.f32	s13, s12, s13
900153da:	6022      	str	r2, [r4, #0]
900153dc:	6123      	str	r3, [r4, #16]
900153de:	edc4 6a07 	vstr	s13, [r4, #28]
900153e2:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
900153e6:	ee36 7a87 	vadd.f32	s14, s13, s14
900153ea:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
900153ee:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
900153f2:	ee77 7a27 	vadd.f32	s15, s14, s15
900153f6:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
900153fa:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
900153fe:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
90015402:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
90015406:	ee37 7a27 	vadd.f32	s14, s14, s15
9001540a:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
9001540e:	68a9      	ldr	r1, [r5, #8]
90015410:	ee77 7aa6 	vadd.f32	s15, s15, s13
90015414:	ed95 6a08 	vldr	s12, [r5, #32]
90015418:	edd5 6a07 	vldr	s13, [r5, #28]
9001541c:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
90015420:	ee76 6a86 	vadd.f32	s13, s13, s12
90015424:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
90015428:	e9d5 2300 	ldrd	r2, r3, [r5]
9001542c:	edc5 6a07 	vstr	s13, [r5, #28]
90015430:	441a      	add	r2, r3
90015432:	696b      	ldr	r3, [r5, #20]
90015434:	3301      	adds	r3, #1
90015436:	602a      	str	r2, [r5, #0]
90015438:	616b      	str	r3, [r5, #20]
9001543a:	69ab      	ldr	r3, [r5, #24]
9001543c:	3b01      	subs	r3, #1
9001543e:	61ab      	str	r3, [r5, #24]
90015440:	692b      	ldr	r3, [r5, #16]
90015442:	440b      	add	r3, r1
90015444:	68e9      	ldr	r1, [r5, #12]
90015446:	428b      	cmp	r3, r1
90015448:	612b      	str	r3, [r5, #16]
9001544a:	db15      	blt.n	90015478 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
9001544c:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
90015450:	3201      	adds	r2, #1
90015452:	1a5b      	subs	r3, r3, r1
90015454:	ee76 6a26 	vadd.f32	s13, s12, s13
90015458:	602a      	str	r2, [r5, #0]
9001545a:	612b      	str	r3, [r5, #16]
9001545c:	edc5 6a07 	vstr	s13, [r5, #28]
90015460:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
90015464:	ee36 7a87 	vadd.f32	s14, s13, s14
90015468:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
9001546c:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
90015470:	ee77 7a27 	vadd.f32	s15, s14, s15
90015474:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
90015478:	3f01      	subs	r7, #1
9001547a:	e757      	b.n	9001532c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
9001547c:	4299      	cmp	r1, r3
9001547e:	dc13      	bgt.n	900154a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
90015480:	429a      	cmp	r2, r3
90015482:	da14      	bge.n	900154ae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
90015484:	2502      	movs	r5, #2
90015486:	2703      	movs	r7, #3
90015488:	f04f 0800 	mov.w	r8, #0
9001548c:	46a9      	mov	r9, r5
9001548e:	f04f 0a01 	mov.w	sl, #1
90015492:	e6ef      	b.n	90015274 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
90015494:	2501      	movs	r5, #1
90015496:	2700      	movs	r7, #0
90015498:	46a9      	mov	r9, r5
9001549a:	46b8      	mov	r8, r7
9001549c:	f04f 0a02 	mov.w	sl, #2
900154a0:	e6e8      	b.n	90015274 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
900154a2:	2501      	movs	r5, #1
900154a4:	2702      	movs	r7, #2
900154a6:	e6e1      	b.n	9001526c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
900154a8:	2500      	movs	r5, #0
900154aa:	2701      	movs	r7, #1
900154ac:	e7f4      	b.n	90015498 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
900154ae:	2702      	movs	r7, #2
900154b0:	2503      	movs	r5, #3
900154b2:	f04f 0900 	mov.w	r9, #0
900154b6:	46b8      	mov	r8, r7
900154b8:	e7e9      	b.n	9001548e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
900154ba:	4613      	mov	r3, r2
900154bc:	e728      	b.n	90015310 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
900154be:	bf00      	nop
900154c0:	2403982c 	.word	0x2403982c
900154c4:	fffd8f01 	.word	0xfffd8f01
900154c8:	00027100 	.word	0x00027100
900154cc:	0004e1ff 	.word	0x0004e1ff
900154d0:	0004e1fe 	.word	0x0004e1fe
900154d4:	24039834 	.word	0x24039834
900154d8:	4613      	mov	r3, r2
900154da:	992b      	ldr	r1, [sp, #172]	; 0xac
900154dc:	469e      	mov	lr, r3
900154de:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
900154e0:	469c      	mov	ip, r3
900154e2:	9111      	str	r1, [sp, #68]	; 0x44
900154e4:	f04f 0900 	mov.w	r9, #0
900154e8:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
900154ec:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
900154f0:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
900154f4:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
900154f8:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
900154fc:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
90015500:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
90015504:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
90015508:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
9001550c:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
90015510:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
90015514:	f1bc 0f00 	cmp.w	ip, #0
90015518:	d147      	bne.n	900155aa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
9001551a:	eb03 0c07 	add.w	ip, r3, r7
9001551e:	1ad7      	subs	r7, r2, r3
90015520:	f1b9 0f00 	cmp.w	r9, #0
90015524:	d009      	beq.n	9001553a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
90015526:	9029      	str	r0, [sp, #164]	; 0xa4
90015528:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
9001552c:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
90015530:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
90015534:	912d      	str	r1, [sp, #180]	; 0xb4
90015536:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
9001553a:	991b      	ldr	r1, [sp, #108]	; 0x6c
9001553c:	f04f 0800 	mov.w	r8, #0
90015540:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
90015544:	9111      	str	r1, [sp, #68]	; 0x44
90015546:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
9001554a:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
9001554e:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
90015552:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
90015556:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
9001555a:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
9001555e:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
90015562:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
90015566:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
9001556a:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
9001556e:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
90015572:	f1be 0f00 	cmp.w	lr, #0
90015576:	d031      	beq.n	900155dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
90015578:	9e11      	ldr	r6, [sp, #68]	; 0x44
9001557a:	4450      	add	r0, sl
9001557c:	ee76 6aa4 	vadd.f32	s13, s13, s9
90015580:	4431      	add	r1, r6
90015582:	ee37 7a04 	vadd.f32	s14, s14, s8
90015586:	ee77 7aa3 	vadd.f32	s15, s15, s7
9001558a:	4549      	cmp	r1, r9
9001558c:	db08      	blt.n	900155a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
9001558e:	ee77 7a85 	vadd.f32	s15, s15, s10
90015592:	3001      	adds	r0, #1
90015594:	ee76 6aa5 	vadd.f32	s13, s13, s11
90015598:	eba1 0109 	sub.w	r1, r1, r9
9001559c:	ee37 7a06 	vadd.f32	s14, s14, s12
900155a0:	f10e 3eff 	add.w	lr, lr, #4294967295
900155a4:	f04f 0801 	mov.w	r8, #1
900155a8:	e7e3      	b.n	90015572 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
900155aa:	9e11      	ldr	r6, [sp, #68]	; 0x44
900155ac:	4450      	add	r0, sl
900155ae:	ee37 7a24 	vadd.f32	s14, s14, s9
900155b2:	4431      	add	r1, r6
900155b4:	ee77 7a84 	vadd.f32	s15, s15, s8
900155b8:	ee76 6aa3 	vadd.f32	s13, s13, s7
900155bc:	4541      	cmp	r1, r8
900155be:	db08      	blt.n	900155d2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
900155c0:	ee76 6a85 	vadd.f32	s13, s13, s10
900155c4:	3001      	adds	r0, #1
900155c6:	ee37 7a25 	vadd.f32	s14, s14, s11
900155ca:	eba1 0108 	sub.w	r1, r1, r8
900155ce:	ee77 7a86 	vadd.f32	s15, s15, s12
900155d2:	f10c 3cff 	add.w	ip, ip, #4294967295
900155d6:	f04f 0901 	mov.w	r9, #1
900155da:	e79b      	b.n	90015514 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
900155dc:	449c      	add	ip, r3
900155de:	1aff      	subs	r7, r7, r3
900155e0:	f1b8 0f00 	cmp.w	r8, #0
900155e4:	d009      	beq.n	900155fa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
900155e6:	9019      	str	r0, [sp, #100]	; 0x64
900155e8:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
900155ec:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
900155f0:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
900155f4:	911d      	str	r1, [sp, #116]	; 0x74
900155f6:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
900155fa:	1ad2      	subs	r2, r2, r3
900155fc:	e68b      	b.n	90015316 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
900155fe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90015600:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
90015602:	2b00      	cmp	r3, #0
90015604:	f000 80d1 	beq.w	900157aa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
90015608:	ad19      	add	r5, sp, #100	; 0x64
9001560a:	ac39      	add	r4, sp, #228	; 0xe4
9001560c:	9b64      	ldr	r3, [sp, #400]	; 0x190
9001560e:	f8bb 0006 	ldrh.w	r0, [fp, #6]
90015612:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
90015616:	930c      	str	r3, [sp, #48]	; 0x30
90015618:	990c      	ldr	r1, [sp, #48]	; 0x30
9001561a:	6963      	ldr	r3, [r4, #20]
9001561c:	440b      	add	r3, r1
9001561e:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
90015622:	4408      	add	r0, r1
90015624:	b200      	sxth	r0, r0
90015626:	4283      	cmp	r3, r0
90015628:	900d      	str	r0, [sp, #52]	; 0x34
9001562a:	f280 80c1 	bge.w	900157b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
9001562e:	428b      	cmp	r3, r1
90015630:	da08      	bge.n	90015644 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
90015632:	2a00      	cmp	r2, #0
90015634:	dd06      	ble.n	90015644 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
90015636:	1acb      	subs	r3, r1, r3
90015638:	429a      	cmp	r2, r3
9001563a:	f2c0 80bb 	blt.w	900157b4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
9001563e:	2b00      	cmp	r3, #0
90015640:	f300 80b9 	bgt.w	900157b6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
90015644:	6967      	ldr	r7, [r4, #20]
90015646:	f10d 0850 	add.w	r8, sp, #80	; 0x50
9001564a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9001564c:	443b      	add	r3, r7
9001564e:	461f      	mov	r7, r3
90015650:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90015652:	1bdf      	subs	r7, r3, r7
90015654:	4297      	cmp	r7, r2
90015656:	bfa8      	it	ge
90015658:	4617      	movge	r7, r2
9001565a:	2f00      	cmp	r7, #0
9001565c:	f340 813c 	ble.w	900158d8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
90015660:	9b64      	ldr	r3, [sp, #400]	; 0x190
90015662:	6829      	ldr	r1, [r5, #0]
90015664:	f9b3 2000 	ldrsh.w	r2, [r3]
90015668:	f9bb 3000 	ldrsh.w	r3, [fp]
9001566c:	4411      	add	r1, r2
9001566e:	6820      	ldr	r0, [r4, #0]
90015670:	4299      	cmp	r1, r3
90015672:	dd1a      	ble.n	900156aa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
90015674:	f8bb 1004 	ldrh.w	r1, [fp, #4]
90015678:	4402      	add	r2, r0
9001567a:	440b      	add	r3, r1
9001567c:	b21b      	sxth	r3, r3
9001567e:	429a      	cmp	r2, r3
90015680:	dc13      	bgt.n	900156aa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
90015682:	9a10      	ldr	r2, [sp, #64]	; 0x40
90015684:	a912      	add	r1, sp, #72	; 0x48
90015686:	9b09      	ldr	r3, [sp, #36]	; 0x24
90015688:	9809      	ldr	r0, [sp, #36]	; 0x24
9001568a:	681b      	ldr	r3, [r3, #0]
9001568c:	9206      	str	r2, [sp, #24]
9001568e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
90015690:	9500      	str	r5, [sp, #0]
90015692:	9205      	str	r2, [sp, #20]
90015694:	9a0a      	ldr	r2, [sp, #40]	; 0x28
90015696:	e9cd b203 	strd	fp, r2, [sp, #12]
9001569a:	9a64      	ldr	r2, [sp, #400]	; 0x190
9001569c:	e9cd 8201 	strd	r8, r2, [sp, #4]
900156a0:	aa49      	add	r2, sp, #292	; 0x124
900156a2:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
900156a6:	4623      	mov	r3, r4
900156a8:	47c8      	blx	r9
900156aa:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
900156ae:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
900156b2:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
900156b6:	ee37 7a27 	vadd.f32	s14, s14, s15
900156ba:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
900156be:	68a1      	ldr	r1, [r4, #8]
900156c0:	ee77 7aa6 	vadd.f32	s15, s15, s13
900156c4:	ed94 6a08 	vldr	s12, [r4, #32]
900156c8:	edd4 6a07 	vldr	s13, [r4, #28]
900156cc:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
900156d0:	ee76 6a86 	vadd.f32	s13, s13, s12
900156d4:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
900156d8:	e9d4 2300 	ldrd	r2, r3, [r4]
900156dc:	edc4 6a07 	vstr	s13, [r4, #28]
900156e0:	441a      	add	r2, r3
900156e2:	6963      	ldr	r3, [r4, #20]
900156e4:	3301      	adds	r3, #1
900156e6:	6022      	str	r2, [r4, #0]
900156e8:	6163      	str	r3, [r4, #20]
900156ea:	69a3      	ldr	r3, [r4, #24]
900156ec:	3b01      	subs	r3, #1
900156ee:	61a3      	str	r3, [r4, #24]
900156f0:	6923      	ldr	r3, [r4, #16]
900156f2:	440b      	add	r3, r1
900156f4:	68e1      	ldr	r1, [r4, #12]
900156f6:	428b      	cmp	r3, r1
900156f8:	6123      	str	r3, [r4, #16]
900156fa:	db15      	blt.n	90015728 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
900156fc:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
90015700:	3201      	adds	r2, #1
90015702:	1a5b      	subs	r3, r3, r1
90015704:	ee76 6a26 	vadd.f32	s13, s12, s13
90015708:	6022      	str	r2, [r4, #0]
9001570a:	6123      	str	r3, [r4, #16]
9001570c:	edc4 6a07 	vstr	s13, [r4, #28]
90015710:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
90015714:	ee36 7a87 	vadd.f32	s14, s13, s14
90015718:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
9001571c:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
90015720:	ee77 7a27 	vadd.f32	s15, s14, s15
90015724:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
90015728:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
9001572c:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
90015730:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
90015734:	ee37 7a27 	vadd.f32	s14, s14, s15
90015738:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
9001573c:	68a9      	ldr	r1, [r5, #8]
9001573e:	ee77 7aa6 	vadd.f32	s15, s15, s13
90015742:	ed95 6a08 	vldr	s12, [r5, #32]
90015746:	edd5 6a07 	vldr	s13, [r5, #28]
9001574a:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
9001574e:	ee76 6a86 	vadd.f32	s13, s13, s12
90015752:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
90015756:	e9d5 2300 	ldrd	r2, r3, [r5]
9001575a:	edc5 6a07 	vstr	s13, [r5, #28]
9001575e:	441a      	add	r2, r3
90015760:	696b      	ldr	r3, [r5, #20]
90015762:	3301      	adds	r3, #1
90015764:	602a      	str	r2, [r5, #0]
90015766:	616b      	str	r3, [r5, #20]
90015768:	69ab      	ldr	r3, [r5, #24]
9001576a:	3b01      	subs	r3, #1
9001576c:	61ab      	str	r3, [r5, #24]
9001576e:	692b      	ldr	r3, [r5, #16]
90015770:	440b      	add	r3, r1
90015772:	68e9      	ldr	r1, [r5, #12]
90015774:	428b      	cmp	r3, r1
90015776:	612b      	str	r3, [r5, #16]
90015778:	db15      	blt.n	900157a6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
9001577a:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
9001577e:	3201      	adds	r2, #1
90015780:	1a5b      	subs	r3, r3, r1
90015782:	ee76 6a26 	vadd.f32	s13, s12, s13
90015786:	602a      	str	r2, [r5, #0]
90015788:	612b      	str	r3, [r5, #16]
9001578a:	edc5 6a07 	vstr	s13, [r5, #28]
9001578e:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
90015792:	ee36 7a87 	vadd.f32	s14, s13, s14
90015796:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
9001579a:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
9001579e:	ee77 7a27 	vadd.f32	s15, s14, s15
900157a2:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
900157a6:	3f01      	subs	r7, #1
900157a8:	e757      	b.n	9001565a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
900157aa:	ad39      	add	r5, sp, #228	; 0xe4
900157ac:	ac19      	add	r4, sp, #100	; 0x64
900157ae:	e72d      	b.n	9001560c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
900157b0:	4613      	mov	r3, r2
900157b2:	e744      	b.n	9001563e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
900157b4:	4613      	mov	r3, r2
900157b6:	9e3b      	ldr	r6, [sp, #236]	; 0xec
900157b8:	469e      	mov	lr, r3
900157ba:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
900157be:	461f      	mov	r7, r3
900157c0:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
900157c4:	f04f 0900 	mov.w	r9, #0
900157c8:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
900157cc:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
900157d0:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
900157d4:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
900157d8:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
900157dc:	993d      	ldr	r1, [sp, #244]	; 0xf4
900157de:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
900157e2:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
900157e6:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
900157ea:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
900157ee:	960e      	str	r6, [sp, #56]	; 0x38
900157f0:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
900157f4:	2f00      	cmp	r7, #0
900157f6:	d146      	bne.n	90015886 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
900157f8:	449c      	add	ip, r3
900157fa:	1ad7      	subs	r7, r2, r3
900157fc:	f1b9 0f00 	cmp.w	r9, #0
90015800:	d009      	beq.n	90015816 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
90015802:	9039      	str	r0, [sp, #228]	; 0xe4
90015804:	913d      	str	r1, [sp, #244]	; 0xf4
90015806:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
9001580a:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
9001580e:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
90015812:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
90015816:	991b      	ldr	r1, [sp, #108]	; 0x6c
90015818:	f04f 0800 	mov.w	r8, #0
9001581c:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
90015820:	910e      	str	r1, [sp, #56]	; 0x38
90015822:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
90015826:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
9001582a:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
9001582e:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
90015832:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
90015836:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
9001583a:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
9001583e:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
90015842:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
90015846:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
9001584a:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
9001584e:	f1be 0f00 	cmp.w	lr, #0
90015852:	d030      	beq.n	900158b6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
90015854:	9e0e      	ldr	r6, [sp, #56]	; 0x38
90015856:	4450      	add	r0, sl
90015858:	ee76 6aa4 	vadd.f32	s13, s13, s9
9001585c:	4431      	add	r1, r6
9001585e:	ee37 7a04 	vadd.f32	s14, s14, s8
90015862:	ee77 7aa3 	vadd.f32	s15, s15, s7
90015866:	4549      	cmp	r1, r9
90015868:	db08      	blt.n	9001587c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
9001586a:	ee77 7a85 	vadd.f32	s15, s15, s10
9001586e:	3001      	adds	r0, #1
90015870:	ee76 6aa5 	vadd.f32	s13, s13, s11
90015874:	eba1 0109 	sub.w	r1, r1, r9
90015878:	ee37 7a06 	vadd.f32	s14, s14, s12
9001587c:	f10e 3eff 	add.w	lr, lr, #4294967295
90015880:	f04f 0801 	mov.w	r8, #1
90015884:	e7e3      	b.n	9001584e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
90015886:	9e0e      	ldr	r6, [sp, #56]	; 0x38
90015888:	4450      	add	r0, sl
9001588a:	ee37 7a24 	vadd.f32	s14, s14, s9
9001588e:	4431      	add	r1, r6
90015890:	ee77 7a84 	vadd.f32	s15, s15, s8
90015894:	ee76 6aa3 	vadd.f32	s13, s13, s7
90015898:	4541      	cmp	r1, r8
9001589a:	db08      	blt.n	900158ae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
9001589c:	ee76 6a85 	vadd.f32	s13, s13, s10
900158a0:	3001      	adds	r0, #1
900158a2:	ee37 7a25 	vadd.f32	s14, s14, s11
900158a6:	eba1 0108 	sub.w	r1, r1, r8
900158aa:	ee77 7a86 	vadd.f32	s15, s15, s12
900158ae:	3f01      	subs	r7, #1
900158b0:	f04f 0901 	mov.w	r9, #1
900158b4:	e79e      	b.n	900157f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
900158b6:	449c      	add	ip, r3
900158b8:	1aff      	subs	r7, r7, r3
900158ba:	f1b8 0f00 	cmp.w	r8, #0
900158be:	d009      	beq.n	900158d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
900158c0:	9019      	str	r0, [sp, #100]	; 0x64
900158c2:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
900158c6:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
900158ca:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
900158ce:	911d      	str	r1, [sp, #116]	; 0x74
900158d0:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
900158d4:	1ad2      	subs	r2, r2, r3
900158d6:	e6b5      	b.n	90015644 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
900158d8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
900158da:	681b      	ldr	r3, [r3, #0]
900158dc:	b923      	cbnz	r3, 900158e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
900158de:	4b04      	ldr	r3, [pc, #16]	; (900158f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
900158e0:	6818      	ldr	r0, [r3, #0]
900158e2:	6803      	ldr	r3, [r0, #0]
900158e4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900158e6:	4798      	blx	r3
900158e8:	b05b      	add	sp, #364	; 0x16c
900158ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900158ee:	bf00      	nop
900158f0:	24039834 	.word	0x24039834

900158f4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
900158f4:	b570      	push	{r4, r5, r6, lr}
900158f6:	4604      	mov	r4, r0
900158f8:	2500      	movs	r5, #0
900158fa:	9805      	ldr	r0, [sp, #20]
900158fc:	f89d 601c 	ldrb.w	r6, [sp, #28]
90015900:	6061      	str	r1, [r4, #4]
90015902:	8263      	strh	r3, [r4, #18]
90015904:	f89d 1010 	ldrb.w	r1, [sp, #16]
90015908:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
9001590c:	8025      	strh	r5, [r4, #0]
9001590e:	7221      	strb	r1, [r4, #8]
90015910:	7266      	strb	r6, [r4, #9]
90015912:	60e0      	str	r0, [r4, #12]
90015914:	8222      	strh	r2, [r4, #16]
90015916:	82a3      	strh	r3, [r4, #20]
90015918:	82e5      	strh	r5, [r4, #22]
9001591a:	8325      	strh	r5, [r4, #24]
9001591c:	8365      	strh	r5, [r4, #26]
9001591e:	83a5      	strh	r5, [r4, #28]
90015920:	83e5      	strh	r5, [r4, #30]
90015922:	8425      	strh	r5, [r4, #32]
90015924:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
90015928:	b32e      	cbz	r6, 90015976 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
9001592a:	6803      	ldr	r3, [r0, #0]
9001592c:	695b      	ldr	r3, [r3, #20]
9001592e:	4798      	blx	r3
90015930:	4606      	mov	r6, r0
90015932:	b300      	cbz	r0, 90015976 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
90015934:	68e0      	ldr	r0, [r4, #12]
90015936:	4631      	mov	r1, r6
90015938:	6803      	ldr	r3, [r0, #0]
9001593a:	68db      	ldr	r3, [r3, #12]
9001593c:	4798      	blx	r3
9001593e:	4605      	mov	r5, r0
90015940:	b1c8      	cbz	r0, 90015976 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
90015942:	7b43      	ldrb	r3, [r0, #13]
90015944:	7a82      	ldrb	r2, [r0, #10]
90015946:	005b      	lsls	r3, r3, #1
90015948:	f403 7380 	and.w	r3, r3, #256	; 0x100
9001594c:	4313      	orrs	r3, r2
9001594e:	8423      	strh	r3, [r4, #32]
90015950:	7a63      	ldrb	r3, [r4, #9]
90015952:	2b06      	cmp	r3, #6
90015954:	d10f      	bne.n	90015976 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
90015956:	68e0      	ldr	r0, [r4, #12]
90015958:	462a      	mov	r2, r5
9001595a:	4631      	mov	r1, r6
9001595c:	6803      	ldr	r3, [r0, #0]
9001595e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90015960:	4798      	blx	r3
90015962:	7b6b      	ldrb	r3, [r5, #13]
90015964:	005b      	lsls	r3, r3, #1
90015966:	f403 7280 	and.w	r2, r3, #256	; 0x100
9001596a:	7aab      	ldrb	r3, [r5, #10]
9001596c:	4313      	orrs	r3, r2
9001596e:	4418      	add	r0, r3
90015970:	8c23      	ldrh	r3, [r4, #32]
90015972:	4418      	add	r0, r3
90015974:	8420      	strh	r0, [r4, #32]
90015976:	4620      	mov	r0, r4
90015978:	bd70      	pop	{r4, r5, r6, pc}

9001597a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
9001597a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001597e:	2400      	movs	r4, #0
90015980:	b085      	sub	sp, #20
90015982:	4681      	mov	r9, r0
90015984:	4688      	mov	r8, r1
90015986:	4692      	mov	sl, r2
90015988:	469b      	mov	fp, r3
9001598a:	4627      	mov	r7, r4
9001598c:	4625      	mov	r5, r4
9001598e:	4626      	mov	r6, r4
90015990:	4554      	cmp	r4, sl
90015992:	da2a      	bge.n	900159ea <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
90015994:	2300      	movs	r3, #0
90015996:	9303      	str	r3, [sp, #12]
90015998:	f64f 63ff 	movw	r3, #65279	; 0xfeff
9001599c:	429d      	cmp	r5, r3
9001599e:	d004      	beq.n	900159aa <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
900159a0:	f242 030b 	movw	r3, #8203	; 0x200b
900159a4:	429d      	cmp	r5, r3
900159a6:	bf18      	it	ne
900159a8:	462f      	movne	r7, r5
900159aa:	ab03      	add	r3, sp, #12
900159ac:	4642      	mov	r2, r8
900159ae:	4659      	mov	r1, fp
900159b0:	4648      	mov	r0, r9
900159b2:	f003 f8f5 	bl	90018ba0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
900159b6:	4605      	mov	r5, r0
900159b8:	b1b8      	cbz	r0, 900159ea <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
900159ba:	280a      	cmp	r0, #10
900159bc:	d015      	beq.n	900159ea <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
900159be:	9a03      	ldr	r2, [sp, #12]
900159c0:	b18a      	cbz	r2, 900159e6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
900159c2:	7b50      	ldrb	r0, [r2, #13]
900159c4:	4639      	mov	r1, r7
900159c6:	7a93      	ldrb	r3, [r2, #10]
900159c8:	0040      	lsls	r0, r0, #1
900159ca:	8895      	ldrh	r5, [r2, #4]
900159cc:	f400 7080 	and.w	r0, r0, #256	; 0x100
900159d0:	4303      	orrs	r3, r0
900159d2:	4640      	mov	r0, r8
900159d4:	9301      	str	r3, [sp, #4]
900159d6:	f8d8 3000 	ldr.w	r3, [r8]
900159da:	6c5b      	ldr	r3, [r3, #68]	; 0x44
900159dc:	4798      	blx	r3
900159de:	9b01      	ldr	r3, [sp, #4]
900159e0:	4418      	add	r0, r3
900159e2:	4406      	add	r6, r0
900159e4:	b2b6      	uxth	r6, r6
900159e6:	3401      	adds	r4, #1
900159e8:	e7d2      	b.n	90015990 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
900159ea:	4630      	mov	r0, r6
900159ec:	b005      	add	sp, #20
900159ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900159f2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
900159f2:	2a02      	cmp	r2, #2
900159f4:	b530      	push	{r4, r5, lr}
900159f6:	d011      	beq.n	90015a1c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
900159f8:	2a03      	cmp	r2, #3
900159fa:	d01c      	beq.n	90015a36 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
900159fc:	2a01      	cmp	r2, #1
900159fe:	d10c      	bne.n	90015a1a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
90015a00:	888b      	ldrh	r3, [r1, #4]
90015a02:	8801      	ldrh	r1, [r0, #0]
90015a04:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
90015a08:	1a5b      	subs	r3, r3, r1
90015a0a:	8844      	ldrh	r4, [r0, #2]
90015a0c:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
90015a10:	1a9b      	subs	r3, r3, r2
90015a12:	8004      	strh	r4, [r0, #0]
90015a14:	8081      	strh	r1, [r0, #4]
90015a16:	8043      	strh	r3, [r0, #2]
90015a18:	80c2      	strh	r2, [r0, #6]
90015a1a:	bd30      	pop	{r4, r5, pc}
90015a1c:	88cb      	ldrh	r3, [r1, #6]
90015a1e:	8842      	ldrh	r2, [r0, #2]
90015a20:	1a9b      	subs	r3, r3, r2
90015a22:	88c2      	ldrh	r2, [r0, #6]
90015a24:	1a9b      	subs	r3, r3, r2
90015a26:	888a      	ldrh	r2, [r1, #4]
90015a28:	8801      	ldrh	r1, [r0, #0]
90015a2a:	8043      	strh	r3, [r0, #2]
90015a2c:	1a52      	subs	r2, r2, r1
90015a2e:	8881      	ldrh	r1, [r0, #4]
90015a30:	1a52      	subs	r2, r2, r1
90015a32:	8002      	strh	r2, [r0, #0]
90015a34:	e7f1      	b.n	90015a1a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
90015a36:	88cb      	ldrh	r3, [r1, #6]
90015a38:	8841      	ldrh	r1, [r0, #2]
90015a3a:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
90015a3e:	1a5b      	subs	r3, r3, r1
90015a40:	f9b0 5000 	ldrsh.w	r5, [r0]
90015a44:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
90015a48:	1a9b      	subs	r3, r3, r2
90015a4a:	8045      	strh	r5, [r0, #2]
90015a4c:	8082      	strh	r2, [r0, #4]
90015a4e:	8003      	strh	r3, [r0, #0]
90015a50:	80c4      	strh	r4, [r0, #6]
90015a52:	e7e2      	b.n	90015a1a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

90015a54 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
90015a54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90015a58:	b09f      	sub	sp, #124	; 0x7c
90015a5a:	9116      	str	r1, [sp, #88]	; 0x58
90015a5c:	9317      	str	r3, [sp, #92]	; 0x5c
90015a5e:	9929      	ldr	r1, [sp, #164]	; 0xa4
90015a60:	9b29      	ldr	r3, [sp, #164]	; 0xa4
90015a62:	8809      	ldrh	r1, [r1, #0]
90015a64:	889b      	ldrh	r3, [r3, #4]
90015a66:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
90015a6a:	440b      	add	r3, r1
90015a6c:	9212      	str	r2, [sp, #72]	; 0x48
90015a6e:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
90015a72:	b21b      	sxth	r3, r3
90015a74:	9011      	str	r0, [sp, #68]	; 0x44
90015a76:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
90015a7a:	9310      	str	r3, [sp, #64]	; 0x40
90015a7c:	f8d8 3000 	ldr.w	r3, [r8]
90015a80:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
90015a84:	7b19      	ldrb	r1, [r3, #12]
90015a86:	7adb      	ldrb	r3, [r3, #11]
90015a88:	9114      	str	r1, [sp, #80]	; 0x50
90015a8a:	9315      	str	r3, [sp, #84]	; 0x54
90015a8c:	2a00      	cmp	r2, #0
90015a8e:	d06a      	beq.n	90015b66 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
90015a90:	f898 3010 	ldrb.w	r3, [r8, #16]
90015a94:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
90015a96:	2b06      	cmp	r3, #6
90015a98:	bf14      	ite	ne
90015a9a:	2301      	movne	r3, #1
90015a9c:	2302      	moveq	r3, #2
90015a9e:	4413      	add	r3, r2
90015aa0:	f04f 0900 	mov.w	r9, #0
90015aa4:	930f      	str	r3, [sp, #60]	; 0x3c
90015aa6:	464c      	mov	r4, r9
90015aa8:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
90015aac:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
90015ab0:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
90015ab4:	4293      	cmp	r3, r2
90015ab6:	f280 808f 	bge.w	90015bd8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
90015aba:	2300      	movs	r3, #0
90015abc:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
90015ac0:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
90015ac4:	f64f 63ff 	movw	r3, #65279	; 0xfeff
90015ac8:	429c      	cmp	r4, r3
90015aca:	d006      	beq.n	90015ada <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
90015acc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90015ace:	f242 020b 	movw	r2, #8203	; 0x200b
90015ad2:	4294      	cmp	r4, r2
90015ad4:	bf18      	it	ne
90015ad6:	4623      	movne	r3, r4
90015ad8:	930d      	str	r3, [sp, #52]	; 0x34
90015ada:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90015adc:	992d      	ldr	r1, [sp, #180]	; 0xb4
90015ade:	f8d8 2000 	ldr.w	r2, [r8]
90015ae2:	428b      	cmp	r3, r1
90015ae4:	db41      	blt.n	90015b6a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
90015ae6:	6813      	ldr	r3, [r2, #0]
90015ae8:	4610      	mov	r0, r2
90015aea:	695b      	ldr	r3, [r3, #20]
90015aec:	4798      	blx	r3
90015aee:	4604      	mov	r4, r0
90015af0:	f8d8 0000 	ldr.w	r0, [r8]
90015af4:	aa1d      	add	r2, sp, #116	; 0x74
90015af6:	4621      	mov	r1, r4
90015af8:	6803      	ldr	r3, [r0, #0]
90015afa:	689d      	ldr	r5, [r3, #8]
90015afc:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
90015b00:	47a8      	blx	r5
90015b02:	901c      	str	r0, [sp, #112]	; 0x70
90015b04:	f64f 63ff 	movw	r3, #65279	; 0xfeff
90015b08:	429c      	cmp	r4, r3
90015b0a:	f000 80ec 	beq.w	90015ce6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
90015b0e:	f242 030b 	movw	r3, #8203	; 0x200b
90015b12:	429c      	cmp	r4, r3
90015b14:	f000 80e7 	beq.w	90015ce6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
90015b18:	2c00      	cmp	r4, #0
90015b1a:	f000 80f9 	beq.w	90015d10 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2bc>
90015b1e:	2c0a      	cmp	r4, #10
90015b20:	d060      	beq.n	90015be4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
90015b22:	9a1c      	ldr	r2, [sp, #112]	; 0x70
90015b24:	b36a      	cbz	r2, 90015b82 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
90015b26:	8894      	ldrh	r4, [r2, #4]
90015b28:	f1bb 0f00 	cmp.w	fp, #0
90015b2c:	d03b      	beq.n	90015ba6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
90015b2e:	f892 900d 	ldrb.w	r9, [r2, #13]
90015b32:	f1bb 0f01 	cmp.w	fp, #1
90015b36:	ea4f 0949 	mov.w	r9, r9, lsl #1
90015b3a:	f409 7380 	and.w	r3, r9, #256	; 0x100
90015b3e:	f892 900a 	ldrb.w	r9, [r2, #10]
90015b42:	ea49 0903 	orr.w	r9, r9, r3
90015b46:	d134      	bne.n	90015bb2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
90015b48:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90015b4a:	eba6 0609 	sub.w	r6, r6, r9
90015b4e:	2b00      	cmp	r3, #0
90015b50:	d14f      	bne.n	90015bf2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
90015b52:	9a14      	ldr	r2, [sp, #80]	; 0x50
90015b54:	eb09 0306 	add.w	r3, r9, r6
90015b58:	4413      	add	r3, r2
90015b5a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
90015b5c:	f9b2 2000 	ldrsh.w	r2, [r2]
90015b60:	4293      	cmp	r3, r2
90015b62:	da51      	bge.n	90015c08 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
90015b64:	e038      	b.n	90015bd8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
90015b66:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
90015b68:	e79a      	b.n	90015aa0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
90015b6a:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
90015b6e:	4659      	mov	r1, fp
90015b70:	982c      	ldr	r0, [sp, #176]	; 0xb0
90015b72:	9301      	str	r3, [sp, #4]
90015b74:	ab1d      	add	r3, sp, #116	; 0x74
90015b76:	9300      	str	r3, [sp, #0]
90015b78:	ab1c      	add	r3, sp, #112	; 0x70
90015b7a:	f003 f85a 	bl	90018c32 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
90015b7e:	4604      	mov	r4, r0
90015b80:	e7c0      	b.n	90015b04 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
90015b82:	f8d8 0000 	ldr.w	r0, [r8]
90015b86:	6803      	ldr	r3, [r0, #0]
90015b88:	691b      	ldr	r3, [r3, #16]
90015b8a:	4798      	blx	r3
90015b8c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
90015b90:	4298      	cmp	r0, r3
90015b92:	f000 80a8 	beq.w	90015ce6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
90015b96:	f242 030b 	movw	r3, #8203	; 0x200b
90015b9a:	4298      	cmp	r0, r3
90015b9c:	f000 80a3 	beq.w	90015ce6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
90015ba0:	f1bb 0f00 	cmp.w	fp, #0
90015ba4:	d100      	bne.n	90015ba8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
90015ba6:	444e      	add	r6, r9
90015ba8:	9a1c      	ldr	r2, [sp, #112]	; 0x70
90015baa:	2a00      	cmp	r2, #0
90015bac:	d1bf      	bne.n	90015b2e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
90015bae:	4691      	mov	r9, r2
90015bb0:	e099      	b.n	90015ce6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
90015bb2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90015bb4:	2b00      	cmp	r3, #0
90015bb6:	f000 80ad 	beq.w	90015d14 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c0>
90015bba:	f1bb 0f00 	cmp.w	fp, #0
90015bbe:	d118      	bne.n	90015bf2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
90015bc0:	f8d8 0000 	ldr.w	r0, [r8]
90015bc4:	990d      	ldr	r1, [sp, #52]	; 0x34
90015bc6:	6803      	ldr	r3, [r0, #0]
90015bc8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90015bca:	4798      	blx	r3
90015bcc:	4406      	add	r6, r0
90015bce:	9b15      	ldr	r3, [sp, #84]	; 0x54
90015bd0:	9a10      	ldr	r2, [sp, #64]	; 0x40
90015bd2:	1af3      	subs	r3, r6, r3
90015bd4:	4293      	cmp	r3, r2
90015bd6:	dd17      	ble.n	90015c08 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
90015bd8:	2c00      	cmp	r4, #0
90015bda:	f000 8099 	beq.w	90015d10 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2bc>
90015bde:	2c0a      	cmp	r4, #10
90015be0:	f040 8087 	bne.w	90015cf2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29e>
90015be4:	240a      	movs	r4, #10
90015be6:	fab4 f084 	clz	r0, r4
90015bea:	0940      	lsrs	r0, r0, #5
90015bec:	b01f      	add	sp, #124	; 0x7c
90015bee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90015bf2:	f8d8 0000 	ldr.w	r0, [r8]
90015bf6:	990d      	ldr	r1, [sp, #52]	; 0x34
90015bf8:	6803      	ldr	r3, [r0, #0]
90015bfa:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90015bfc:	4798      	blx	r3
90015bfe:	f1bb 0f01 	cmp.w	fp, #1
90015c02:	eba6 0600 	sub.w	r6, r6, r0
90015c06:	d0a4      	beq.n	90015b52 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
90015c08:	981c      	ldr	r0, [sp, #112]	; 0x70
90015c0a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
90015c0c:	f990 1009 	ldrsb.w	r1, [r0, #9]
90015c10:	f9b3 7000 	ldrsh.w	r7, [r3]
90015c14:	7b43      	ldrb	r3, [r0, #13]
90015c16:	4431      	add	r1, r6
90015c18:	015b      	lsls	r3, r3, #5
90015c1a:	f403 7280 	and.w	r2, r3, #256	; 0x100
90015c1e:	7983      	ldrb	r3, [r0, #6]
90015c20:	4313      	orrs	r3, r2
90015c22:	440b      	add	r3, r1
90015c24:	42bb      	cmp	r3, r7
90015c26:	db5e      	blt.n	90015ce6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
90015c28:	9b10      	ldr	r3, [sp, #64]	; 0x40
90015c2a:	4299      	cmp	r1, r3
90015c2c:	da5b      	bge.n	90015ce6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
90015c2e:	f8d8 0000 	ldr.w	r0, [r8]
90015c32:	42b7      	cmp	r7, r6
90015c34:	6803      	ldr	r3, [r0, #0]
90015c36:	bfcc      	ite	gt
90015c38:	1bbf      	subgt	r7, r7, r6
90015c3a:	2700      	movle	r7, #0
90015c3c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90015c3e:	bfc8      	it	gt
90015c40:	b2bf      	uxthgt	r7, r7
90015c42:	4798      	blx	r3
90015c44:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90015c46:	7b5a      	ldrb	r2, [r3, #13]
90015c48:	00d1      	lsls	r1, r2, #3
90015c4a:	f401 7580 	and.w	r5, r1, #256	; 0x100
90015c4e:	7a19      	ldrb	r1, [r3, #8]
90015c50:	4329      	orrs	r1, r5
90015c52:	0655      	lsls	r5, r2, #25
90015c54:	9d17      	ldr	r5, [sp, #92]	; 0x5c
90015c56:	bf48      	it	mi
90015c58:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
90015c5c:	4405      	add	r5, r0
90015c5e:	bf48      	it	mi
90015c60:	b209      	sxthmi	r1, r1
90015c62:	1a6d      	subs	r5, r5, r1
90015c64:	9929      	ldr	r1, [sp, #164]	; 0xa4
90015c66:	b2ad      	uxth	r5, r5
90015c68:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
90015c6c:	fa0f fa85 	sxth.w	sl, r5
90015c70:	4551      	cmp	r1, sl
90015c72:	dd3c      	ble.n	90015cee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29a>
90015c74:	0112      	lsls	r2, r2, #4
90015c76:	79d8      	ldrb	r0, [r3, #7]
90015c78:	f402 7280 	and.w	r2, r2, #256	; 0x100
90015c7c:	4302      	orrs	r2, r0
90015c7e:	4492      	add	sl, r2
90015c80:	4551      	cmp	r1, sl
90015c82:	dc30      	bgt.n	90015ce6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
90015c84:	1b4d      	subs	r5, r1, r5
90015c86:	468a      	mov	sl, r1
90015c88:	b22d      	sxth	r5, r5
90015c8a:	9319      	str	r3, [sp, #100]	; 0x64
90015c8c:	b2ad      	uxth	r5, r5
90015c8e:	9b11      	ldr	r3, [sp, #68]	; 0x44
90015c90:	f8d8 0000 	ldr.w	r0, [r8]
90015c94:	681a      	ldr	r2, [r3, #0]
90015c96:	6801      	ldr	r1, [r0, #0]
90015c98:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
90015c9a:	9a1d      	ldr	r2, [sp, #116]	; 0x74
90015c9c:	9313      	str	r3, [sp, #76]	; 0x4c
90015c9e:	9218      	str	r2, [sp, #96]	; 0x60
90015ca0:	6c09      	ldr	r1, [r1, #64]	; 0x40
90015ca2:	4788      	blx	r1
90015ca4:	f898 1006 	ldrb.w	r1, [r8, #6]
90015ca8:	9b19      	ldr	r3, [sp, #100]	; 0x64
90015caa:	910b      	str	r1, [sp, #44]	; 0x2c
90015cac:	f898 100e 	ldrb.w	r1, [r8, #14]
90015cb0:	9a18      	ldr	r2, [sp, #96]	; 0x60
90015cb2:	910a      	str	r1, [sp, #40]	; 0x28
90015cb4:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
90015cb8:	9109      	str	r1, [sp, #36]	; 0x24
90015cba:	f8d8 1008 	ldr.w	r1, [r8, #8]
90015cbe:	9305      	str	r3, [sp, #20]
90015cc0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
90015cc2:	9206      	str	r2, [sp, #24]
90015cc4:	9304      	str	r3, [sp, #16]
90015cc6:	9b12      	ldr	r3, [sp, #72]	; 0x48
90015cc8:	f8cd a004 	str.w	sl, [sp, #4]
90015ccc:	e9cd 7502 	strd	r7, r5, [sp, #8]
90015cd0:	4437      	add	r7, r6
90015cd2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
90015cd4:	b23f      	sxth	r7, r7
90015cd6:	e9cd 0107 	strd	r0, r1, [sp, #28]
90015cda:	9700      	str	r7, [sp, #0]
90015cdc:	9916      	ldr	r1, [sp, #88]	; 0x58
90015cde:	681a      	ldr	r2, [r3, #0]
90015ce0:	9811      	ldr	r0, [sp, #68]	; 0x44
90015ce2:	685b      	ldr	r3, [r3, #4]
90015ce4:	47a8      	blx	r5
90015ce6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90015ce8:	3301      	adds	r3, #1
90015cea:	930e      	str	r3, [sp, #56]	; 0x38
90015cec:	e6e0      	b.n	90015ab0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
90015cee:	2500      	movs	r5, #0
90015cf0:	e7cb      	b.n	90015c8a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x236>
90015cf2:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90015cf4:	3501      	adds	r5, #1
90015cf6:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
90015cf8:	429d      	cmp	r5, r3
90015cfa:	f6bf af74 	bge.w	90015be6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
90015cfe:	4659      	mov	r1, fp
90015d00:	982c      	ldr	r0, [sp, #176]	; 0xb0
90015d02:	f7ee f9f1 	bl	900040e8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
90015d06:	4604      	mov	r4, r0
90015d08:	b110      	cbz	r0, 90015d10 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2bc>
90015d0a:	280a      	cmp	r0, #10
90015d0c:	d1f2      	bne.n	90015cf4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2a0>
90015d0e:	e769      	b.n	90015be4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
90015d10:	2400      	movs	r4, #0
90015d12:	e768      	b.n	90015be6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
90015d14:	f1bb 0f00 	cmp.w	fp, #0
90015d18:	f43f af59 	beq.w	90015bce <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
90015d1c:	e774      	b.n	90015c08 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

90015d1e <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
90015d1e:	b530      	push	{r4, r5, lr}
90015d20:	8ac4      	ldrh	r4, [r0, #22]
90015d22:	8b45      	ldrh	r5, [r0, #26]
90015d24:	8343      	strh	r3, [r0, #26]
90015d26:	442c      	add	r4, r5
90015d28:	1ae4      	subs	r4, r4, r3
90015d2a:	8b83      	ldrh	r3, [r0, #28]
90015d2c:	82c4      	strh	r4, [r0, #22]
90015d2e:	8b04      	ldrh	r4, [r0, #24]
90015d30:	4422      	add	r2, r4
90015d32:	440c      	add	r4, r1
90015d34:	1a59      	subs	r1, r3, r1
90015d36:	83c2      	strh	r2, [r0, #30]
90015d38:	8304      	strh	r4, [r0, #24]
90015d3a:	8381      	strh	r1, [r0, #28]
90015d3c:	bd30      	pop	{r4, r5, pc}

90015d3e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
90015d3e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90015d42:	4604      	mov	r4, r0
90015d44:	8a47      	ldrh	r7, [r0, #18]
90015d46:	68c0      	ldr	r0, [r0, #12]
90015d48:	b085      	sub	sp, #20
90015d4a:	6803      	ldr	r3, [r0, #0]
90015d4c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90015d4e:	4798      	blx	r3
90015d50:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
90015d54:	7a63      	ldrb	r3, [r4, #9]
90015d56:	eb06 0640 	add.w	r6, r6, r0, lsl #1
90015d5a:	3b01      	subs	r3, #1
90015d5c:	42b7      	cmp	r7, r6
90015d5e:	bfac      	ite	ge
90015d60:	f04f 0900 	movge.w	r9, #0
90015d64:	f04f 0901 	movlt.w	r9, #1
90015d68:	2b05      	cmp	r3, #5
90015d6a:	d804      	bhi.n	90015d76 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x38>
90015d6c:	e8df f003 	tbb	[pc, r3]
90015d70:	470f0854 	.word	0x470f0854
90015d74:	4c4c      	.short	0x4c4c
90015d76:	2500      	movs	r5, #0
90015d78:	46a9      	mov	r9, r5
90015d7a:	462e      	mov	r6, r5
90015d7c:	462f      	mov	r7, r5
90015d7e:	e00e      	b.n	90015d9e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
90015d80:	42b7      	cmp	r7, r6
90015d82:	f04f 0500 	mov.w	r5, #0
90015d86:	bfb4      	ite	lt
90015d88:	2600      	movlt	r6, #0
90015d8a:	2601      	movge	r6, #1
90015d8c:	e7f6      	b.n	90015d7c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
90015d8e:	42b7      	cmp	r7, r6
90015d90:	464d      	mov	r5, r9
90015d92:	f04f 0900 	mov.w	r9, #0
90015d96:	bfb4      	ite	lt
90015d98:	2600      	movlt	r6, #0
90015d9a:	2601      	movge	r6, #1
90015d9c:	464f      	mov	r7, r9
90015d9e:	f04f 0800 	mov.w	r8, #0
90015da2:	f8a4 8016 	strh.w	r8, [r4, #22]
90015da6:	f8a4 8018 	strh.w	r8, [r4, #24]
90015daa:	f8cd 8004 	str.w	r8, [sp, #4]
90015dae:	2300      	movs	r3, #0
90015db0:	9303      	str	r3, [sp, #12]
90015db2:	8823      	ldrh	r3, [r4, #0]
90015db4:	2b20      	cmp	r3, #32
90015db6:	d033      	beq.n	90015e20 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe2>
90015db8:	f242 010b 	movw	r1, #8203	; 0x200b
90015dbc:	1a5a      	subs	r2, r3, r1
90015dbe:	f1d2 0a00 	rsbs	sl, r2, #0
90015dc2:	eb4a 0a02 	adc.w	sl, sl, r2
90015dc6:	f64f 62ff 	movw	r2, #65279	; 0xfeff
90015dca:	4293      	cmp	r3, r2
90015dcc:	d008      	beq.n	90015de0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
90015dce:	428b      	cmp	r3, r1
90015dd0:	9a01      	ldr	r2, [sp, #4]
90015dd2:	bf0e      	itee	eq
90015dd4:	f04f 0a01 	moveq.w	sl, #1
90015dd8:	461a      	movne	r2, r3
90015dda:	f04f 0a00 	movne.w	sl, #0
90015dde:	9201      	str	r2, [sp, #4]
90015de0:	ab03      	add	r3, sp, #12
90015de2:	68e2      	ldr	r2, [r4, #12]
90015de4:	7a21      	ldrb	r1, [r4, #8]
90015de6:	6860      	ldr	r0, [r4, #4]
90015de8:	f002 feda 	bl	90018ba0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
90015dec:	8020      	strh	r0, [r4, #0]
90015dee:	b9d8      	cbnz	r0, 90015e28 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xea>
90015df0:	8ba2      	ldrh	r2, [r4, #28]
90015df2:	2300      	movs	r3, #0
90015df4:	4611      	mov	r1, r2
90015df6:	4620      	mov	r0, r4
90015df8:	f7ff ff91 	bl	90015d1e <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
90015dfc:	e06e      	b.n	90015edc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
90015dfe:	2500      	movs	r5, #0
90015e00:	2701      	movs	r7, #1
90015e02:	46a9      	mov	r9, r5
90015e04:	462e      	mov	r6, r5
90015e06:	e7ca      	b.n	90015d9e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
90015e08:	42b7      	cmp	r7, r6
90015e0a:	f04f 0500 	mov.w	r5, #0
90015e0e:	bfb4      	ite	lt
90015e10:	2700      	movlt	r7, #0
90015e12:	2701      	movge	r7, #1
90015e14:	462e      	mov	r6, r5
90015e16:	e7c2      	b.n	90015d9e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
90015e18:	2500      	movs	r5, #0
90015e1a:	2601      	movs	r6, #1
90015e1c:	46a9      	mov	r9, r5
90015e1e:	e7ad      	b.n	90015d7c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
90015e20:	9301      	str	r3, [sp, #4]
90015e22:	f04f 0a01 	mov.w	sl, #1
90015e26:	e7db      	b.n	90015de0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
90015e28:	8b63      	ldrh	r3, [r4, #26]
90015e2a:	280a      	cmp	r0, #10
90015e2c:	f103 0301 	add.w	r3, r3, #1
90015e30:	8363      	strh	r3, [r4, #26]
90015e32:	d0dd      	beq.n	90015df0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb2>
90015e34:	9a03      	ldr	r2, [sp, #12]
90015e36:	bb62      	cbnz	r2, 90015e92 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x154>
90015e38:	f64f 63ff 	movw	r3, #65279	; 0xfeff
90015e3c:	4298      	cmp	r0, r3
90015e3e:	d003      	beq.n	90015e48 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
90015e40:	f242 030b 	movw	r3, #8203	; 0x200b
90015e44:	4298      	cmp	r0, r3
90015e46:	d1b2      	bne.n	90015dae <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90015e48:	8823      	ldrh	r3, [r4, #0]
90015e4a:	8ba1      	ldrh	r1, [r4, #28]
90015e4c:	2b20      	cmp	r3, #32
90015e4e:	d003      	beq.n	90015e58 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11a>
90015e50:	f242 000b 	movw	r0, #8203	; 0x200b
90015e54:	4283      	cmp	r3, r0
90015e56:	d131      	bne.n	90015ebc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x17e>
90015e58:	f1ba 0f00 	cmp.w	sl, #0
90015e5c:	bf0a      	itet	eq
90015e5e:	4688      	moveq	r8, r1
90015e60:	4650      	movne	r0, sl
90015e62:	2001      	moveq	r0, #1
90015e64:	440a      	add	r2, r1
90015e66:	8b23      	ldrh	r3, [r4, #24]
90015e68:	f8b4 c010 	ldrh.w	ip, [r4, #16]
90015e6c:	b292      	uxth	r2, r2
90015e6e:	83a2      	strh	r2, [r4, #28]
90015e70:	4413      	add	r3, r2
90015e72:	f1b9 0f00 	cmp.w	r9, #0
90015e76:	d102      	bne.n	90015e7e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x140>
90015e78:	2d00      	cmp	r5, #0
90015e7a:	d042      	beq.n	90015f02 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c4>
90015e7c:	b300      	cbz	r0, 90015ec0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x182>
90015e7e:	8c21      	ldrh	r1, [r4, #32]
90015e80:	4419      	add	r1, r3
90015e82:	458c      	cmp	ip, r1
90015e84:	da37      	bge.n	90015ef6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
90015e86:	8ae1      	ldrh	r1, [r4, #22]
90015e88:	2900      	cmp	r1, #0
90015e8a:	d034      	beq.n	90015ef6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
90015e8c:	4563      	cmp	r3, ip
90015e8e:	dd8e      	ble.n	90015dae <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90015e90:	e01d      	b.n	90015ece <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x190>
90015e92:	8893      	ldrh	r3, [r2, #4]
90015e94:	9901      	ldr	r1, [sp, #4]
90015e96:	8023      	strh	r3, [r4, #0]
90015e98:	f892 b00d 	ldrb.w	fp, [r2, #13]
90015e9c:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
90015ea0:	f40b 7080 	and.w	r0, fp, #256	; 0x100
90015ea4:	f892 b00a 	ldrb.w	fp, [r2, #10]
90015ea8:	ea4b 0b00 	orr.w	fp, fp, r0
90015eac:	68e0      	ldr	r0, [r4, #12]
90015eae:	6803      	ldr	r3, [r0, #0]
90015eb0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90015eb2:	4798      	blx	r3
90015eb4:	eb0b 0200 	add.w	r2, fp, r0
90015eb8:	b292      	uxth	r2, r2
90015eba:	e7c5      	b.n	90015e48 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
90015ebc:	2000      	movs	r0, #0
90015ebe:	e7d1      	b.n	90015e64 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x126>
90015ec0:	4563      	cmp	r3, ip
90015ec2:	f77f af74 	ble.w	90015dae <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90015ec6:	8ae3      	ldrh	r3, [r4, #22]
90015ec8:	2b00      	cmp	r3, #0
90015eca:	f43f af70 	beq.w	90015dae <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90015ece:	2301      	movs	r3, #1
90015ed0:	8c22      	ldrh	r2, [r4, #32]
90015ed2:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
90015ed6:	8be3      	ldrh	r3, [r4, #30]
90015ed8:	4413      	add	r3, r2
90015eda:	83e3      	strh	r3, [r4, #30]
90015edc:	68e0      	ldr	r0, [r4, #12]
90015ede:	6803      	ldr	r3, [r0, #0]
90015ee0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90015ee2:	4798      	blx	r3
90015ee4:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
90015ee8:	4418      	add	r0, r3
90015eea:	8a63      	ldrh	r3, [r4, #18]
90015eec:	1a18      	subs	r0, r3, r0
90015eee:	8260      	strh	r0, [r4, #18]
90015ef0:	b005      	add	sp, #20
90015ef2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90015ef6:	2300      	movs	r3, #0
90015ef8:	4611      	mov	r1, r2
90015efa:	4620      	mov	r0, r4
90015efc:	f7ff ff0f 	bl	90015d1e <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
90015f00:	e755      	b.n	90015dae <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90015f02:	4563      	cmp	r3, ip
90015f04:	dd14      	ble.n	90015f30 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f2>
90015f06:	b117      	cbz	r7, 90015f0e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d0>
90015f08:	2301      	movs	r3, #1
90015f0a:	460a      	mov	r2, r1
90015f0c:	e772      	b.n	90015df4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb6>
90015f0e:	2e00      	cmp	r6, #0
90015f10:	f43f af4d 	beq.w	90015dae <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90015f14:	2800      	cmp	r0, #0
90015f16:	f47f af4a 	bne.w	90015dae <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90015f1a:	f1ba 0f00 	cmp.w	sl, #0
90015f1e:	d002      	beq.n	90015f26 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1e8>
90015f20:	2301      	movs	r3, #1
90015f22:	4642      	mov	r2, r8
90015f24:	e767      	b.n	90015df6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
90015f26:	8ae3      	ldrh	r3, [r4, #22]
90015f28:	2b00      	cmp	r3, #0
90015f2a:	f43f af40 	beq.w	90015dae <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90015f2e:	e7d5      	b.n	90015edc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
90015f30:	2800      	cmp	r0, #0
90015f32:	f47f af3c 	bne.w	90015dae <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90015f36:	f1ba 0f00 	cmp.w	sl, #0
90015f3a:	f43f af38 	beq.w	90015dae <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90015f3e:	2301      	movs	r3, #1
90015f40:	4642      	mov	r2, r8
90015f42:	e7da      	b.n	90015efa <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1bc>

90015f44 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
90015f44:	b5f0      	push	{r4, r5, r6, r7, lr}
90015f46:	4605      	mov	r5, r0
90015f48:	b08f      	sub	sp, #60	; 0x3c
90015f4a:	4617      	mov	r7, r2
90015f4c:	461c      	mov	r4, r3
90015f4e:	460e      	mov	r6, r1
90015f50:	b1d1      	cbz	r1, 90015f88 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
90015f52:	681b      	ldr	r3, [r3, #0]
90015f54:	4620      	mov	r0, r4
90015f56:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90015f58:	4798      	blx	r3
90015f5a:	4240      	negs	r0, r0
90015f5c:	9603      	str	r6, [sp, #12]
90015f5e:	f64f 73ff 	movw	r3, #65535	; 0xffff
90015f62:	b200      	sxth	r0, r0
90015f64:	9700      	str	r7, [sp, #0]
90015f66:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
90015f6a:	4629      	mov	r1, r5
90015f6c:	e9cd 4001 	strd	r4, r0, [sp, #4]
90015f70:	2401      	movs	r4, #1
90015f72:	a805      	add	r0, sp, #20
90015f74:	f7ff fcbe 	bl	900158f4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
90015f78:	a805      	add	r0, sp, #20
90015f7a:	f7ff fee0 	bl	90015d3e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
90015f7e:	f8bd 3014 	ldrh.w	r3, [sp, #20]
90015f82:	b163      	cbz	r3, 90015f9e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
90015f84:	3401      	adds	r4, #1
90015f86:	e7f7      	b.n	90015f78 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
90015f88:	2401      	movs	r4, #1
90015f8a:	f002 fed5 	bl	90018d38 <_ZN8touchgfx12TextProvider11getNextCharEv>
90015f8e:	280a      	cmp	r0, #10
90015f90:	4628      	mov	r0, r5
90015f92:	bf08      	it	eq
90015f94:	3401      	addeq	r4, #1
90015f96:	f002 fecf 	bl	90018d38 <_ZN8touchgfx12TextProvider11getNextCharEv>
90015f9a:	2800      	cmp	r0, #0
90015f9c:	d1f7      	bne.n	90015f8e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
90015f9e:	b2a0      	uxth	r0, r4
90015fa0:	b00f      	add	sp, #60	; 0x3c
90015fa2:	bdf0      	pop	{r4, r5, r6, r7, pc}

90015fa4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
90015fa4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90015fa8:	b0e3      	sub	sp, #396	; 0x18c
90015faa:	461c      	mov	r4, r3
90015fac:	4683      	mov	fp, r0
90015fae:	4688      	mov	r8, r1
90015fb0:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
90015fb2:	2b00      	cmp	r3, #0
90015fb4:	f000 8112 	beq.w	900161dc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90015fb8:	6823      	ldr	r3, [r4, #0]
90015fba:	2b00      	cmp	r3, #0
90015fbc:	f000 810e 	beq.w	900161dc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90015fc0:	7ba3      	ldrb	r3, [r4, #14]
90015fc2:	2b00      	cmp	r3, #0
90015fc4:	f000 810a 	beq.w	900161dc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90015fc8:	ad0a      	add	r5, sp, #40	; 0x28
90015fca:	6810      	ldr	r0, [r2, #0]
90015fcc:	6851      	ldr	r1, [r2, #4]
90015fce:	462b      	mov	r3, r5
90015fd0:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
90015fd4:	c303      	stmia	r3!, {r0, r1}
90015fd6:	2100      	movs	r1, #0
90015fd8:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
90015fdc:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
90015fe0:	4628      	mov	r0, r5
90015fe2:	910c      	str	r1, [sp, #48]	; 0x30
90015fe4:	a90c      	add	r1, sp, #48	; 0x30
90015fe6:	79a2      	ldrb	r2, [r4, #6]
90015fe8:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
90015fec:	f7ff fd01 	bl	900159f2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
90015ff0:	a90c      	add	r1, sp, #48	; 0x30
90015ff2:	79a2      	ldrb	r2, [r4, #6]
90015ff4:	4608      	mov	r0, r1
90015ff6:	f7ff fcfc 	bl	900159f2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
90015ffa:	a817      	add	r0, sp, #92	; 0x5c
90015ffc:	f002 fa6f 	bl	900184de <_ZN8touchgfx12TextProviderC1Ev>
90016000:	6820      	ldr	r0, [r4, #0]
90016002:	6803      	ldr	r3, [r0, #0]
90016004:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90016006:	4798      	blx	r3
90016008:	4606      	mov	r6, r0
9001600a:	6820      	ldr	r0, [r4, #0]
9001600c:	6803      	ldr	r3, [r0, #0]
9001600e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90016010:	4798      	blx	r3
90016012:	4633      	mov	r3, r6
90016014:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
90016016:	996c      	ldr	r1, [sp, #432]	; 0x1b0
90016018:	9000      	str	r0, [sp, #0]
9001601a:	a817      	add	r0, sp, #92	; 0x5c
9001601c:	f002 faba 	bl	90018594 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90016020:	6820      	ldr	r0, [r4, #0]
90016022:	f894 a004 	ldrb.w	sl, [r4, #4]
90016026:	6803      	ldr	r3, [r0, #0]
90016028:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001602a:	4798      	blx	r3
9001602c:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
90016030:	6823      	ldr	r3, [r4, #0]
90016032:	4607      	mov	r7, r0
90016034:	4406      	add	r6, r0
90016036:	a830      	add	r0, sp, #192	; 0xc0
90016038:	f893 9009 	ldrb.w	r9, [r3, #9]
9001603c:	f002 fa4f 	bl	900184de <_ZN8touchgfx12TextProviderC1Ev>
90016040:	7c23      	ldrb	r3, [r4, #16]
90016042:	b17b      	cbz	r3, 90016064 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
90016044:	6820      	ldr	r0, [r4, #0]
90016046:	6803      	ldr	r3, [r0, #0]
90016048:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
9001604a:	4798      	blx	r3
9001604c:	9009      	str	r0, [sp, #36]	; 0x24
9001604e:	6820      	ldr	r0, [r4, #0]
90016050:	6802      	ldr	r2, [r0, #0]
90016052:	6d12      	ldr	r2, [r2, #80]	; 0x50
90016054:	4790      	blx	r2
90016056:	9b09      	ldr	r3, [sp, #36]	; 0x24
90016058:	9000      	str	r0, [sp, #0]
9001605a:	a830      	add	r0, sp, #192	; 0xc0
9001605c:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
9001605e:	996c      	ldr	r1, [sp, #432]	; 0x1b0
90016060:	f002 fa98 	bl	90018594 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90016064:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
90016068:	a80e      	add	r0, sp, #56	; 0x38
9001606a:	7be2      	ldrb	r2, [r4, #15]
9001606c:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
90016070:	1a8a      	subs	r2, r1, r2
90016072:	7c21      	ldrb	r1, [r4, #16]
90016074:	9103      	str	r1, [sp, #12]
90016076:	b292      	uxth	r2, r2
90016078:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
9001607c:	9102      	str	r1, [sp, #8]
9001607e:	6821      	ldr	r1, [r4, #0]
90016080:	9101      	str	r1, [sp, #4]
90016082:	7961      	ldrb	r1, [r4, #5]
90016084:	9100      	str	r1, [sp, #0]
90016086:	a930      	add	r1, sp, #192	; 0xc0
90016088:	f7ff fc34 	bl	900158f4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
9001608c:	2e00      	cmp	r6, #0
9001608e:	dc5b      	bgt.n	90016148 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
90016090:	af17      	add	r7, sp, #92	; 0x5c
90016092:	f04f 0900 	mov.w	r9, #0
90016096:	7c23      	ldrb	r3, [r4, #16]
90016098:	2b00      	cmp	r3, #0
9001609a:	f000 80b1 	beq.w	90016200 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
9001609e:	a80e      	add	r0, sp, #56	; 0x38
900160a0:	f7ff fe4d 	bl	90015d3e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
900160a4:	f1ba 0f00 	cmp.w	sl, #0
900160a8:	f000 80a5 	beq.w	900161f6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
900160ac:	7c23      	ldrb	r3, [r4, #16]
900160ae:	2264      	movs	r2, #100	; 0x64
900160b0:	4639      	mov	r1, r7
900160b2:	a849      	add	r0, sp, #292	; 0x124
900160b4:	9309      	str	r3, [sp, #36]	; 0x24
900160b6:	f012 f8c9 	bl	9002824c <memcpy>
900160ba:	9b09      	ldr	r3, [sp, #36]	; 0x24
900160bc:	2b00      	cmp	r3, #0
900160be:	f000 80a7 	beq.w	90016210 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
900160c2:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
900160c6:	7922      	ldrb	r2, [r4, #4]
900160c8:	2a01      	cmp	r2, #1
900160ca:	f040 808a 	bne.w	900161e2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
900160ce:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	; 0x34
900160d2:	1ac0      	subs	r0, r0, r3
900160d4:	2302      	movs	r3, #2
900160d6:	fb90 f0f3 	sdiv	r0, r0, r3
900160da:	b200      	sxth	r0, r0
900160dc:	7c23      	ldrb	r3, [r4, #16]
900160de:	2b00      	cmp	r3, #0
900160e0:	f000 808b 	beq.w	900161fa <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
900160e4:	f8bd 204e 	ldrh.w	r2, [sp, #78]	; 0x4e
900160e8:	f89d 105a 	ldrb.w	r1, [sp, #90]	; 0x5a
900160ec:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
900160f0:	e9cd 2105 	strd	r2, r1, [sp, #20]
900160f4:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
900160f8:	2100      	movs	r1, #0
900160fa:	4410      	add	r0, r2
900160fc:	4642      	mov	r2, r8
900160fe:	b200      	sxth	r0, r0
90016100:	e9cd 9703 	strd	r9, r7, [sp, #12]
90016104:	9000      	str	r0, [sp, #0]
90016106:	4658      	mov	r0, fp
90016108:	e9cd 5401 	strd	r5, r4, [sp, #4]
9001610c:	f7ff fca2 	bl	90015a54 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
90016110:	2800      	cmp	r0, #0
90016112:	d163      	bne.n	900161dc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90016114:	b2b2      	uxth	r2, r6
90016116:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
9001611a:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
9001611e:	4413      	add	r3, r2
90016120:	1a8a      	subs	r2, r1, r2
90016122:	b21b      	sxth	r3, r3
90016124:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
90016128:	f89d 205a 	ldrb.w	r2, [sp, #90]	; 0x5a
9001612c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
90016130:	2a00      	cmp	r2, #0
90016132:	d153      	bne.n	900161dc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90016134:	6822      	ldr	r2, [r4, #0]
90016136:	8869      	ldrh	r1, [r5, #2]
90016138:	7a12      	ldrb	r2, [r2, #8]
9001613a:	1a9b      	subs	r3, r3, r2
9001613c:	88ea      	ldrh	r2, [r5, #6]
9001613e:	440a      	add	r2, r1
90016140:	b212      	sxth	r2, r2
90016142:	4293      	cmp	r3, r2
90016144:	dda7      	ble.n	90016096 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
90016146:	e049      	b.n	900161dc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90016148:	7c23      	ldrb	r3, [r4, #16]
9001614a:	444f      	add	r7, r9
9001614c:	b1c3      	cbz	r3, 90016180 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
9001614e:	f64f 79ff 	movw	r9, #65535	; 0xffff
90016152:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
90016156:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
9001615a:	443b      	add	r3, r7
9001615c:	4293      	cmp	r3, r2
9001615e:	da97      	bge.n	90016090 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
90016160:	a80e      	add	r0, sp, #56	; 0x38
90016162:	f7ff fdec 	bl	90015d3e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
90016166:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
9001616a:	3b01      	subs	r3, #1
9001616c:	b29b      	uxth	r3, r3
9001616e:	454b      	cmp	r3, r9
90016170:	9309      	str	r3, [sp, #36]	; 0x24
90016172:	d021      	beq.n	900161b8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
90016174:	7961      	ldrb	r1, [r4, #5]
90016176:	a817      	add	r0, sp, #92	; 0x5c
90016178:	f7ed ffb6 	bl	900040e8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
9001617c:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001617e:	e7f4      	b.n	9001616a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
90016180:	fa1f f986 	uxth.w	r9, r6
90016184:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
90016188:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
9001618c:	443b      	add	r3, r7
9001618e:	4293      	cmp	r3, r2
90016190:	f6bf af7e 	bge.w	90016090 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
90016194:	a817      	add	r0, sp, #92	; 0x5c
90016196:	f002 fdcf 	bl	90018d38 <_ZN8touchgfx12TextProvider11getNextCharEv>
9001619a:	b1f8      	cbz	r0, 900161dc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
9001619c:	280a      	cmp	r0, #10
9001619e:	d1f1      	bne.n	90016184 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
900161a0:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
900161a4:	444b      	add	r3, r9
900161a6:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
900161aa:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
900161ae:	eba3 0309 	sub.w	r3, r3, r9
900161b2:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
900161b6:	e7e5      	b.n	90016184 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
900161b8:	b2b3      	uxth	r3, r6
900161ba:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
900161be:	441a      	add	r2, r3
900161c0:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
900161c4:	f8bd 2036 	ldrh.w	r2, [sp, #54]	; 0x36
900161c8:	1ad3      	subs	r3, r2, r3
900161ca:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
900161ce:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
900161d2:	b11b      	cbz	r3, 900161dc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
900161d4:	f89d 305a 	ldrb.w	r3, [sp, #90]	; 0x5a
900161d8:	2b00      	cmp	r3, #0
900161da:	d0ba      	beq.n	90016152 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
900161dc:	b063      	add	sp, #396	; 0x18c
900161de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900161e2:	2a02      	cmp	r2, #2
900161e4:	d105      	bne.n	900161f2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
900161e6:	7be2      	ldrb	r2, [r4, #15]
900161e8:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
900161ec:	1a80      	subs	r0, r0, r2
900161ee:	1ac0      	subs	r0, r0, r3
900161f0:	e773      	b.n	900160da <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
900161f2:	2000      	movs	r0, #0
900161f4:	e772      	b.n	900160dc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
900161f6:	7be0      	ldrb	r0, [r4, #15]
900161f8:	e770      	b.n	900160dc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
900161fa:	f647 72ff 	movw	r2, #32767	; 0x7fff
900161fe:	e773      	b.n	900160e8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
90016200:	f1ba 0f00 	cmp.w	sl, #0
90016204:	d0f7      	beq.n	900161f6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
90016206:	2264      	movs	r2, #100	; 0x64
90016208:	4639      	mov	r1, r7
9001620a:	a849      	add	r0, sp, #292	; 0x124
9001620c:	f012 f81e 	bl	9002824c <memcpy>
90016210:	2300      	movs	r3, #0
90016212:	f647 72ff 	movw	r2, #32767	; 0x7fff
90016216:	6821      	ldr	r1, [r4, #0]
90016218:	a849      	add	r0, sp, #292	; 0x124
9001621a:	f7ff fbae 	bl	9001597a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
9001621e:	b203      	sxth	r3, r0
90016220:	e751      	b.n	900160c6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

90016222 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
90016222:	2b03      	cmp	r3, #3
90016224:	d818      	bhi.n	90016258 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
90016226:	e8df f003 	tbb	[pc, r3]
9001622a:	0602      	.short	0x0602
9001622c:	130d      	.short	0x130d
9001622e:	f9b0 2000 	ldrsh.w	r2, [r0]
90016232:	1850      	adds	r0, r2, r1
90016234:	4770      	bx	lr
90016236:	8803      	ldrh	r3, [r0, #0]
90016238:	8880      	ldrh	r0, [r0, #4]
9001623a:	4418      	add	r0, r3
9001623c:	b200      	sxth	r0, r0
9001623e:	1a80      	subs	r0, r0, r2
90016240:	3801      	subs	r0, #1
90016242:	4770      	bx	lr
90016244:	8803      	ldrh	r3, [r0, #0]
90016246:	8880      	ldrh	r0, [r0, #4]
90016248:	4418      	add	r0, r3
9001624a:	b200      	sxth	r0, r0
9001624c:	1a40      	subs	r0, r0, r1
9001624e:	e7f7      	b.n	90016240 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
90016250:	f9b0 0000 	ldrsh.w	r0, [r0]
90016254:	4410      	add	r0, r2
90016256:	4770      	bx	lr
90016258:	2000      	movs	r0, #0
9001625a:	4770      	bx	lr

9001625c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
9001625c:	2b03      	cmp	r3, #3
9001625e:	d817      	bhi.n	90016290 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
90016260:	e8df f003 	tbb	[pc, r3]
90016264:	10090602 	.word	0x10090602
90016268:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
9001626c:	1850      	adds	r0, r2, r1
9001626e:	4770      	bx	lr
90016270:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
90016274:	e7fa      	b.n	9001626c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
90016276:	8843      	ldrh	r3, [r0, #2]
90016278:	88c0      	ldrh	r0, [r0, #6]
9001627a:	4418      	add	r0, r3
9001627c:	b200      	sxth	r0, r0
9001627e:	1a80      	subs	r0, r0, r2
90016280:	3801      	subs	r0, #1
90016282:	4770      	bx	lr
90016284:	8843      	ldrh	r3, [r0, #2]
90016286:	88c0      	ldrh	r0, [r0, #6]
90016288:	4418      	add	r0, r3
9001628a:	b200      	sxth	r0, r0
9001628c:	1a40      	subs	r0, r0, r1
9001628e:	e7f7      	b.n	90016280 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
90016290:	2000      	movs	r0, #0
90016292:	4770      	bx	lr

90016294 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
90016294:	4b01      	ldr	r3, [pc, #4]	; (9001629c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
90016296:	2200      	movs	r2, #0
90016298:	601a      	str	r2, [r3, #0]
9001629a:	4770      	bx	lr
9001629c:	24039844 	.word	0x24039844

900162a0 <_ZN8touchgfx16TouchCalibration4clzuEm>:
900162a0:	4603      	mov	r3, r0
900162a2:	b1c8      	cbz	r0, 900162d8 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
900162a4:	0c02      	lsrs	r2, r0, #16
900162a6:	0412      	lsls	r2, r2, #16
900162a8:	b9a2      	cbnz	r2, 900162d4 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
900162aa:	0403      	lsls	r3, r0, #16
900162ac:	2010      	movs	r0, #16
900162ae:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
900162b2:	bf04      	itt	eq
900162b4:	021b      	lsleq	r3, r3, #8
900162b6:	3008      	addeq	r0, #8
900162b8:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
900162bc:	bf04      	itt	eq
900162be:	011b      	lsleq	r3, r3, #4
900162c0:	3004      	addeq	r0, #4
900162c2:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
900162c6:	bf04      	itt	eq
900162c8:	009b      	lsleq	r3, r3, #2
900162ca:	3002      	addeq	r0, #2
900162cc:	2b00      	cmp	r3, #0
900162ce:	db04      	blt.n	900162da <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
900162d0:	3001      	adds	r0, #1
900162d2:	4770      	bx	lr
900162d4:	2000      	movs	r0, #0
900162d6:	e7ea      	b.n	900162ae <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
900162d8:	2020      	movs	r0, #32
900162da:	4770      	bx	lr

900162dc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
900162dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900162e0:	b087      	sub	sp, #28
900162e2:	460d      	mov	r5, r1
900162e4:	4616      	mov	r6, r2
900162e6:	4698      	mov	r8, r3
900162e8:	4601      	mov	r1, r0
900162ea:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
900162ee:	b120      	cbz	r0, 900162fa <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
900162f0:	b11a      	cbz	r2, 900162fa <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
900162f2:	2d1f      	cmp	r5, #31
900162f4:	d801      	bhi.n	900162fa <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
900162f6:	2b1f      	cmp	r3, #31
900162f8:	d904      	bls.n	90016304 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
900162fa:	2000      	movs	r0, #0
900162fc:	6038      	str	r0, [r7, #0]
900162fe:	b007      	add	sp, #28
90016300:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90016304:	b97d      	cbnz	r5, 90016326 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
90016306:	b143      	cbz	r3, 9001631a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
90016308:	4602      	mov	r2, r0
9001630a:	462b      	mov	r3, r5
9001630c:	4641      	mov	r1, r8
9001630e:	4630      	mov	r0, r6
90016310:	e9cd 4700 	strd	r4, r7, [sp]
90016314:	f7ff ffe2 	bl	900162dc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
90016318:	e7f1      	b.n	900162fe <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
9001631a:	f04f 33ff 	mov.w	r3, #4294967295
9001631e:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
90016322:	603b      	str	r3, [r7, #0]
90016324:	e7eb      	b.n	900162fe <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
90016326:	fa32 fa05 	lsrs.w	sl, r2, r5
9001632a:	d106      	bne.n	9001633a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
9001632c:	4346      	muls	r6, r0
9001632e:	fbb6 f0f4 	udiv	r0, r6, r4
90016332:	fb04 6610 	mls	r6, r4, r0, r6
90016336:	603e      	str	r6, [r7, #0]
90016338:	e7e1      	b.n	900162fe <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
9001633a:	2201      	movs	r2, #1
9001633c:	fa00 fb05 	lsl.w	fp, r0, r5
90016340:	40aa      	lsls	r2, r5
90016342:	fbbb f9f4 	udiv	r9, fp, r4
90016346:	3a01      	subs	r2, #1
90016348:	fb0a f309 	mul.w	r3, sl, r9
9001634c:	fb04 b919 	mls	r9, r4, r9, fp
90016350:	4016      	ands	r6, r2
90016352:	9303      	str	r3, [sp, #12]
90016354:	4630      	mov	r0, r6
90016356:	f7ff ffa3 	bl	900162a0 <_ZN8touchgfx16TouchCalibration4clzuEm>
9001635a:	462b      	mov	r3, r5
9001635c:	460a      	mov	r2, r1
9001635e:	4601      	mov	r1, r0
90016360:	4630      	mov	r0, r6
90016362:	e9cd 4700 	strd	r4, r7, [sp]
90016366:	f7ff ffb9 	bl	900162dc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
9001636a:	4606      	mov	r6, r0
9001636c:	4648      	mov	r0, r9
9001636e:	eb05 0108 	add.w	r1, r5, r8
90016372:	f7ff ff95 	bl	900162a0 <_ZN8touchgfx16TouchCalibration4clzuEm>
90016376:	ab05      	add	r3, sp, #20
90016378:	464a      	mov	r2, r9
9001637a:	e9cd 4300 	strd	r4, r3, [sp]
9001637e:	4603      	mov	r3, r0
90016380:	4650      	mov	r0, sl
90016382:	f7ff ffab 	bl	900162dc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
90016386:	6839      	ldr	r1, [r7, #0]
90016388:	9a05      	ldr	r2, [sp, #20]
9001638a:	9b03      	ldr	r3, [sp, #12]
9001638c:	4411      	add	r1, r2
9001638e:	fbb1 f2f4 	udiv	r2, r1, r4
90016392:	18d3      	adds	r3, r2, r3
90016394:	fb04 1412 	mls	r4, r4, r2, r1
90016398:	441e      	add	r6, r3
9001639a:	603c      	str	r4, [r7, #0]
9001639c:	4430      	add	r0, r6
9001639e:	e7ae      	b.n	900162fe <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

900163a0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
900163a0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900163a4:	b085      	sub	sp, #20
900163a6:	f1b0 0900 	subs.w	r9, r0, #0
900163aa:	461d      	mov	r5, r3
900163ac:	4617      	mov	r7, r2
900163ae:	9c0c      	ldr	r4, [sp, #48]	; 0x30
900163b0:	bfbb      	ittet	lt
900163b2:	f1c9 0900 	rsblt	r9, r9, #0
900163b6:	f04f 36ff 	movlt.w	r6, #4294967295
900163ba:	2601      	movge	r6, #1
900163bc:	6823      	ldrlt	r3, [r4, #0]
900163be:	bfbc      	itt	lt
900163c0:	425b      	neglt	r3, r3
900163c2:	6023      	strlt	r3, [r4, #0]
900163c4:	2a00      	cmp	r2, #0
900163c6:	da04      	bge.n	900163d2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
900163c8:	6823      	ldr	r3, [r4, #0]
900163ca:	4257      	negs	r7, r2
900163cc:	4276      	negs	r6, r6
900163ce:	425b      	negs	r3, r3
900163d0:	6023      	str	r3, [r4, #0]
900163d2:	2d00      	cmp	r5, #0
900163d4:	4638      	mov	r0, r7
900163d6:	bfba      	itte	lt
900163d8:	426d      	neglt	r5, r5
900163da:	f04f 38ff 	movlt.w	r8, #4294967295
900163de:	f04f 0801 	movge.w	r8, #1
900163e2:	f7ff ff5d 	bl	900162a0 <_ZN8touchgfx16TouchCalibration4clzuEm>
900163e6:	ab03      	add	r3, sp, #12
900163e8:	463a      	mov	r2, r7
900163ea:	e9cd 5300 	strd	r5, r3, [sp]
900163ee:	4603      	mov	r3, r0
900163f0:	4648      	mov	r0, r9
900163f2:	f7ff ff73 	bl	900162dc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
900163f6:	6823      	ldr	r3, [r4, #0]
900163f8:	9a03      	ldr	r2, [sp, #12]
900163fa:	4546      	cmp	r6, r8
900163fc:	441a      	add	r2, r3
900163fe:	fb92 f3f5 	sdiv	r3, r2, r5
90016402:	4418      	add	r0, r3
90016404:	fb05 2313 	mls	r3, r5, r3, r2
90016408:	bf18      	it	ne
9001640a:	4240      	negne	r0, r0
9001640c:	1c72      	adds	r2, r6, #1
9001640e:	6023      	str	r3, [r4, #0]
90016410:	d105      	bne.n	9001641e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
90016412:	2b00      	cmp	r3, #0
90016414:	f1c3 0200 	rsb	r2, r3, #0
90016418:	db0b      	blt.n	90016432 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
9001641a:	6022      	str	r2, [r4, #0]
9001641c:	e006      	b.n	9001642c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
9001641e:	2e01      	cmp	r6, #1
90016420:	d104      	bne.n	9001642c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
90016422:	2b00      	cmp	r3, #0
90016424:	da02      	bge.n	9001642c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
90016426:	442b      	add	r3, r5
90016428:	3801      	subs	r0, #1
9001642a:	6023      	str	r3, [r4, #0]
9001642c:	b005      	add	sp, #20
9001642e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90016432:	3801      	subs	r0, #1
90016434:	1b52      	subs	r2, r2, r5
90016436:	e7f0      	b.n	9001641a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

90016438 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
90016438:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
9001643c:	4c1c      	ldr	r4, [pc, #112]	; (900164b0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
9001643e:	4605      	mov	r5, r0
90016440:	6807      	ldr	r7, [r0, #0]
90016442:	69a3      	ldr	r3, [r4, #24]
90016444:	b92b      	cbnz	r3, 90016452 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
90016446:	6840      	ldr	r0, [r0, #4]
90016448:	e9c5 7000 	strd	r7, r0, [r5]
9001644c:	b004      	add	sp, #16
9001644e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90016452:	f04f 0802 	mov.w	r8, #2
90016456:	68a2      	ldr	r2, [r4, #8]
90016458:	ae04      	add	r6, sp, #16
9001645a:	6820      	ldr	r0, [r4, #0]
9001645c:	fb93 f1f8 	sdiv	r1, r3, r8
90016460:	440a      	add	r2, r1
90016462:	69e1      	ldr	r1, [r4, #28]
90016464:	f846 2d04 	str.w	r2, [r6, #-4]!
90016468:	463a      	mov	r2, r7
9001646a:	9600      	str	r6, [sp, #0]
9001646c:	f7ff ff98 	bl	900163a0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90016470:	69a3      	ldr	r3, [r4, #24]
90016472:	4607      	mov	r7, r0
90016474:	686a      	ldr	r2, [r5, #4]
90016476:	6a21      	ldr	r1, [r4, #32]
90016478:	9600      	str	r6, [sp, #0]
9001647a:	6860      	ldr	r0, [r4, #4]
9001647c:	f7ff ff90 	bl	900163a0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90016480:	69a3      	ldr	r3, [r4, #24]
90016482:	6962      	ldr	r2, [r4, #20]
90016484:	4407      	add	r7, r0
90016486:	6a61      	ldr	r1, [r4, #36]	; 0x24
90016488:	9600      	str	r6, [sp, #0]
9001648a:	68e0      	ldr	r0, [r4, #12]
9001648c:	fb93 f8f8 	sdiv	r8, r3, r8
90016490:	4442      	add	r2, r8
90016492:	9203      	str	r2, [sp, #12]
90016494:	682a      	ldr	r2, [r5, #0]
90016496:	f7ff ff83 	bl	900163a0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
9001649a:	4680      	mov	r8, r0
9001649c:	9600      	str	r6, [sp, #0]
9001649e:	69a3      	ldr	r3, [r4, #24]
900164a0:	686a      	ldr	r2, [r5, #4]
900164a2:	6aa1      	ldr	r1, [r4, #40]	; 0x28
900164a4:	6920      	ldr	r0, [r4, #16]
900164a6:	f7ff ff7b 	bl	900163a0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
900164aa:	4440      	add	r0, r8
900164ac:	e7cc      	b.n	90016448 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
900164ae:	bf00      	nop
900164b0:	24039848 	.word	0x24039848

900164b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
900164b4:	4b07      	ldr	r3, [pc, #28]	; (900164d4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
900164b6:	781b      	ldrb	r3, [r3, #0]
900164b8:	2b01      	cmp	r3, #1
900164ba:	d109      	bne.n	900164d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
900164bc:	f9b1 3000 	ldrsh.w	r3, [r1]
900164c0:	f9b0 2000 	ldrsh.w	r2, [r0]
900164c4:	8003      	strh	r3, [r0, #0]
900164c6:	4b04      	ldr	r3, [pc, #16]	; (900164d8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
900164c8:	881b      	ldrh	r3, [r3, #0]
900164ca:	3b01      	subs	r3, #1
900164cc:	1a9b      	subs	r3, r3, r2
900164ce:	800b      	strh	r3, [r1, #0]
900164d0:	4770      	bx	lr
900164d2:	bf00      	nop
900164d4:	2403982c 	.word	0x2403982c
900164d8:	24039828 	.word	0x24039828

900164dc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
900164dc:	4b07      	ldr	r3, [pc, #28]	; (900164fc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
900164de:	b510      	push	{r4, lr}
900164e0:	781b      	ldrb	r3, [r3, #0]
900164e2:	2b01      	cmp	r3, #1
900164e4:	d108      	bne.n	900164f8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
900164e6:	4b06      	ldr	r3, [pc, #24]	; (90016500 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
900164e8:	880c      	ldrh	r4, [r1, #0]
900164ea:	881b      	ldrh	r3, [r3, #0]
900164ec:	f9b0 2000 	ldrsh.w	r2, [r0]
900164f0:	3b01      	subs	r3, #1
900164f2:	1b1b      	subs	r3, r3, r4
900164f4:	8003      	strh	r3, [r0, #0]
900164f6:	800a      	strh	r2, [r1, #0]
900164f8:	bd10      	pop	{r4, pc}
900164fa:	bf00      	nop
900164fc:	2403982c 	.word	0x2403982c
90016500:	24039828 	.word	0x24039828

90016504 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
90016504:	4b0a      	ldr	r3, [pc, #40]	; (90016530 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
90016506:	b510      	push	{r4, lr}
90016508:	781b      	ldrb	r3, [r3, #0]
9001650a:	2b01      	cmp	r3, #1
9001650c:	d10e      	bne.n	9001652c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
9001650e:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
90016512:	8843      	ldrh	r3, [r0, #2]
90016514:	f9b0 4000 	ldrsh.w	r4, [r0]
90016518:	18ca      	adds	r2, r1, r3
9001651a:	4b06      	ldr	r3, [pc, #24]	; (90016534 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
9001651c:	8044      	strh	r4, [r0, #2]
9001651e:	881b      	ldrh	r3, [r3, #0]
90016520:	1a9b      	subs	r3, r3, r2
90016522:	8003      	strh	r3, [r0, #0]
90016524:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
90016528:	8081      	strh	r1, [r0, #4]
9001652a:	80c3      	strh	r3, [r0, #6]
9001652c:	bd10      	pop	{r4, pc}
9001652e:	bf00      	nop
90016530:	2403982c 	.word	0x2403982c
90016534:	24039828 	.word	0x24039828

90016538 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
90016538:	4b08      	ldr	r3, [pc, #32]	; (9001655c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
9001653a:	781b      	ldrb	r3, [r3, #0]
9001653c:	2b01      	cmp	r3, #1
9001653e:	d10c      	bne.n	9001655a <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
90016540:	8803      	ldrh	r3, [r0, #0]
90016542:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
90016546:	8842      	ldrh	r2, [r0, #2]
90016548:	8002      	strh	r2, [r0, #0]
9001654a:	185a      	adds	r2, r3, r1
9001654c:	4b04      	ldr	r3, [pc, #16]	; (90016560 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
9001654e:	881b      	ldrh	r3, [r3, #0]
90016550:	1a9b      	subs	r3, r3, r2
90016552:	8043      	strh	r3, [r0, #2]
90016554:	88c3      	ldrh	r3, [r0, #6]
90016556:	80c1      	strh	r1, [r0, #6]
90016558:	8083      	strh	r3, [r0, #4]
9001655a:	4770      	bx	lr
9001655c:	2403982c 	.word	0x2403982c
90016560:	24039828 	.word	0x24039828

90016564 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
90016564:	4b07      	ldr	r3, [pc, #28]	; (90016584 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
90016566:	b510      	push	{r4, lr}
90016568:	781b      	ldrb	r3, [r3, #0]
9001656a:	2b01      	cmp	r3, #1
9001656c:	d108      	bne.n	90016580 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
9001656e:	f9b1 3000 	ldrsh.w	r3, [r1]
90016572:	f9b0 4000 	ldrsh.w	r4, [r0]
90016576:	8003      	strh	r3, [r0, #0]
90016578:	8893      	ldrh	r3, [r2, #4]
9001657a:	3b01      	subs	r3, #1
9001657c:	1b1b      	subs	r3, r3, r4
9001657e:	800b      	strh	r3, [r1, #0]
90016580:	bd10      	pop	{r4, pc}
90016582:	bf00      	nop
90016584:	2403982c 	.word	0x2403982c

90016588 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
90016588:	4b0b      	ldr	r3, [pc, #44]	; (900165b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
9001658a:	781b      	ldrb	r3, [r3, #0]
9001658c:	2b01      	cmp	r3, #1
9001658e:	d111      	bne.n	900165b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
90016590:	680b      	ldr	r3, [r1, #0]
90016592:	ed90 7a00 	vldr	s14, [r0]
90016596:	6003      	str	r3, [r0, #0]
90016598:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
9001659c:	eddf 6a07 	vldr	s13, [pc, #28]	; 900165bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
900165a0:	ee07 3a90 	vmov	s15, r3
900165a4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
900165a8:	ee77 7ae6 	vsub.f32	s15, s15, s13
900165ac:	ee77 7ac7 	vsub.f32	s15, s15, s14
900165b0:	edc1 7a00 	vstr	s15, [r1]
900165b4:	4770      	bx	lr
900165b6:	bf00      	nop
900165b8:	2403982c 	.word	0x2403982c
900165bc:	38d1b717 	.word	0x38d1b717

900165c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
900165c0:	4b0a      	ldr	r3, [pc, #40]	; (900165ec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
900165c2:	460a      	mov	r2, r1
900165c4:	b510      	push	{r4, lr}
900165c6:	781b      	ldrb	r3, [r3, #0]
900165c8:	2b01      	cmp	r3, #1
900165ca:	d10d      	bne.n	900165e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
900165cc:	8881      	ldrh	r1, [r0, #4]
900165ce:	8803      	ldrh	r3, [r0, #0]
900165d0:	440b      	add	r3, r1
900165d2:	4601      	mov	r1, r0
900165d4:	3b01      	subs	r3, #1
900165d6:	f821 3b02 	strh.w	r3, [r1], #2
900165da:	f7ff ffc3 	bl	90016564 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
900165de:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
900165e2:	88c2      	ldrh	r2, [r0, #6]
900165e4:	80c3      	strh	r3, [r0, #6]
900165e6:	8082      	strh	r2, [r0, #4]
900165e8:	bd10      	pop	{r4, pc}
900165ea:	bf00      	nop
900165ec:	2403982c 	.word	0x2403982c

900165f0 <_ZN8touchgfx11Application19changeToStartScreenEv>:
900165f0:	4770      	bx	lr
	...

900165f4 <_ZN8touchgfx11Application13requestRedrawEv>:
900165f4:	4b06      	ldr	r3, [pc, #24]	; (90016610 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
900165f6:	2100      	movs	r1, #0
900165f8:	f9b3 2000 	ldrsh.w	r2, [r3]
900165fc:	4b05      	ldr	r3, [pc, #20]	; (90016614 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
900165fe:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
90016602:	f9b3 3000 	ldrsh.w	r3, [r3]
90016606:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
9001660a:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
9001660e:	4770      	bx	lr
90016610:	24039828 	.word	0x24039828
90016614:	2403982a 	.word	0x2403982a

90016618 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
90016618:	4b03      	ldr	r3, [pc, #12]	; (90016628 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
9001661a:	6818      	ldr	r0, [r3, #0]
9001661c:	b110      	cbz	r0, 90016624 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
9001661e:	6803      	ldr	r3, [r0, #0]
90016620:	699b      	ldr	r3, [r3, #24]
90016622:	4718      	bx	r3
90016624:	4770      	bx	lr
90016626:	bf00      	nop
90016628:	24039878 	.word	0x24039878

9001662c <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
9001662c:	4770      	bx	lr
	...

90016630 <_ZN8touchgfx11Application4drawEv>:
90016630:	4b09      	ldr	r3, [pc, #36]	; (90016658 <_ZN8touchgfx11Application4drawEv+0x28>)
90016632:	b507      	push	{r0, r1, r2, lr}
90016634:	f9b3 2000 	ldrsh.w	r2, [r3]
90016638:	2100      	movs	r1, #0
9001663a:	4b08      	ldr	r3, [pc, #32]	; (9001665c <_ZN8touchgfx11Application4drawEv+0x2c>)
9001663c:	9100      	str	r1, [sp, #0]
9001663e:	4669      	mov	r1, sp
90016640:	f9b3 3000 	ldrsh.w	r3, [r3]
90016644:	f8ad 2004 	strh.w	r2, [sp, #4]
90016648:	f8ad 3006 	strh.w	r3, [sp, #6]
9001664c:	6803      	ldr	r3, [r0, #0]
9001664e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
90016650:	4798      	blx	r3
90016652:	b003      	add	sp, #12
90016654:	f85d fb04 	ldr.w	pc, [sp], #4
90016658:	24039828 	.word	0x24039828
9001665c:	2403982a 	.word	0x2403982a

90016660 <_ZN8touchgfx11Application10invalidateEv>:
90016660:	4b09      	ldr	r3, [pc, #36]	; (90016688 <_ZN8touchgfx11Application10invalidateEv+0x28>)
90016662:	b082      	sub	sp, #8
90016664:	2100      	movs	r1, #0
90016666:	f9b3 2000 	ldrsh.w	r2, [r3]
9001666a:	4b08      	ldr	r3, [pc, #32]	; (9001668c <_ZN8touchgfx11Application10invalidateEv+0x2c>)
9001666c:	f8ad 2004 	strh.w	r2, [sp, #4]
90016670:	aa02      	add	r2, sp, #8
90016672:	f9b3 3000 	ldrsh.w	r3, [r3]
90016676:	9100      	str	r1, [sp, #0]
90016678:	f8ad 3006 	strh.w	r3, [sp, #6]
9001667c:	6803      	ldr	r3, [r0, #0]
9001667e:	e912 0006 	ldmdb	r2, {r1, r2}
90016682:	6c1b      	ldr	r3, [r3, #64]	; 0x40
90016684:	b002      	add	sp, #8
90016686:	4718      	bx	r3
90016688:	24039828 	.word	0x24039828
9001668c:	2403982a 	.word	0x2403982a

90016690 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
90016690:	4b03      	ldr	r3, [pc, #12]	; (900166a0 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
90016692:	6818      	ldr	r0, [r3, #0]
90016694:	b110      	cbz	r0, 9001669c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
90016696:	6803      	ldr	r3, [r0, #0]
90016698:	69db      	ldr	r3, [r3, #28]
9001669a:	4718      	bx	r3
9001669c:	4770      	bx	lr
9001669e:	bf00      	nop
900166a0:	24039878 	.word	0x24039878

900166a4 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
900166a4:	4b03      	ldr	r3, [pc, #12]	; (900166b4 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
900166a6:	6818      	ldr	r0, [r3, #0]
900166a8:	b110      	cbz	r0, 900166b0 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
900166aa:	6803      	ldr	r3, [r0, #0]
900166ac:	6a1b      	ldr	r3, [r3, #32]
900166ae:	4718      	bx	r3
900166b0:	4770      	bx	lr
900166b2:	bf00      	nop
900166b4:	24039878 	.word	0x24039878

900166b8 <_ZN8touchgfx11Application16clearCachedAreasEv>:
900166b8:	2300      	movs	r3, #0
900166ba:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
900166be:	4770      	bx	lr

900166c0 <_ZN8touchgfx11Application14handleKeyEventEh>:
900166c0:	4b03      	ldr	r3, [pc, #12]	; (900166d0 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
900166c2:	6818      	ldr	r0, [r3, #0]
900166c4:	b110      	cbz	r0, 900166cc <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
900166c6:	6803      	ldr	r3, [r0, #0]
900166c8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
900166ca:	4718      	bx	r3
900166cc:	4770      	bx	lr
900166ce:	bf00      	nop
900166d0:	24039878 	.word	0x24039878

900166d4 <_ZN8touchgfx11ApplicationD1Ev>:
900166d4:	4770      	bx	lr

900166d6 <_ZN8touchgfx11ApplicationD0Ev>:
900166d6:	b510      	push	{r4, lr}
900166d8:	4604      	mov	r4, r0
900166da:	f44f 719e 	mov.w	r1, #316	; 0x13c
900166de:	f011 fa1f 	bl	90027b20 <_ZdlPvj>
900166e2:	4620      	mov	r0, r4
900166e4:	bd10      	pop	{r4, pc}

900166e6 <_ZNK8touchgfx4Rect9intersectERKS0_>:
900166e6:	b510      	push	{r4, lr}
900166e8:	f9b1 4000 	ldrsh.w	r4, [r1]
900166ec:	888a      	ldrh	r2, [r1, #4]
900166ee:	f9b0 3000 	ldrsh.w	r3, [r0]
900166f2:	4422      	add	r2, r4
900166f4:	b212      	sxth	r2, r2
900166f6:	4293      	cmp	r3, r2
900166f8:	da15      	bge.n	90016726 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
900166fa:	8882      	ldrh	r2, [r0, #4]
900166fc:	4413      	add	r3, r2
900166fe:	b21b      	sxth	r3, r3
90016700:	429c      	cmp	r4, r3
90016702:	da10      	bge.n	90016726 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
90016704:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
90016708:	88c9      	ldrh	r1, [r1, #6]
9001670a:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
9001670e:	4419      	add	r1, r3
90016710:	b209      	sxth	r1, r1
90016712:	428a      	cmp	r2, r1
90016714:	da07      	bge.n	90016726 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
90016716:	88c0      	ldrh	r0, [r0, #6]
90016718:	4410      	add	r0, r2
9001671a:	b200      	sxth	r0, r0
9001671c:	4283      	cmp	r3, r0
9001671e:	bfac      	ite	ge
90016720:	2000      	movge	r0, #0
90016722:	2001      	movlt	r0, #1
90016724:	bd10      	pop	{r4, pc}
90016726:	2000      	movs	r0, #0
90016728:	e7fc      	b.n	90016724 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

9001672a <_ZN8touchgfx4Rect10restrictToEss>:
9001672a:	f9b0 3000 	ldrsh.w	r3, [r0]
9001672e:	2b00      	cmp	r3, #0
90016730:	b510      	push	{r4, lr}
90016732:	da04      	bge.n	9001673e <_ZN8touchgfx4Rect10restrictToEss+0x14>
90016734:	8884      	ldrh	r4, [r0, #4]
90016736:	4423      	add	r3, r4
90016738:	8083      	strh	r3, [r0, #4]
9001673a:	2300      	movs	r3, #0
9001673c:	8003      	strh	r3, [r0, #0]
9001673e:	f9b0 4000 	ldrsh.w	r4, [r0]
90016742:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
90016746:	1b09      	subs	r1, r1, r4
90016748:	428b      	cmp	r3, r1
9001674a:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
9001674e:	bfc8      	it	gt
90016750:	8081      	strhgt	r1, [r0, #4]
90016752:	2b00      	cmp	r3, #0
90016754:	da04      	bge.n	90016760 <_ZN8touchgfx4Rect10restrictToEss+0x36>
90016756:	88c1      	ldrh	r1, [r0, #6]
90016758:	440b      	add	r3, r1
9001675a:	80c3      	strh	r3, [r0, #6]
9001675c:	2300      	movs	r3, #0
9001675e:	8043      	strh	r3, [r0, #2]
90016760:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
90016764:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
90016768:	1a52      	subs	r2, r2, r1
9001676a:	4293      	cmp	r3, r2
9001676c:	bfc8      	it	gt
9001676e:	80c2      	strhgt	r2, [r0, #6]
90016770:	bd10      	pop	{r4, pc}
	...

90016774 <_ZN8touchgfx11Application4drawERNS_4RectE>:
90016774:	4b10      	ldr	r3, [pc, #64]	; (900167b8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
90016776:	b510      	push	{r4, lr}
90016778:	460c      	mov	r4, r1
9001677a:	f9b3 2000 	ldrsh.w	r2, [r3]
9001677e:	4b0f      	ldr	r3, [pc, #60]	; (900167bc <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
90016780:	4620      	mov	r0, r4
90016782:	f9b3 1000 	ldrsh.w	r1, [r3]
90016786:	f7ff ffd0 	bl	9001672a <_ZN8touchgfx4Rect10restrictToEss>
9001678a:	4b0d      	ldr	r3, [pc, #52]	; (900167c0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
9001678c:	6818      	ldr	r0, [r3, #0]
9001678e:	b190      	cbz	r0, 900167b6 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
90016790:	6803      	ldr	r3, [r0, #0]
90016792:	4621      	mov	r1, r4
90016794:	689b      	ldr	r3, [r3, #8]
90016796:	4798      	blx	r3
90016798:	4b0a      	ldr	r3, [pc, #40]	; (900167c4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
9001679a:	6818      	ldr	r0, [r3, #0]
9001679c:	b118      	cbz	r0, 900167a6 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
9001679e:	6803      	ldr	r3, [r0, #0]
900167a0:	4621      	mov	r1, r4
900167a2:	689b      	ldr	r3, [r3, #8]
900167a4:	4798      	blx	r3
900167a6:	4b08      	ldr	r3, [pc, #32]	; (900167c8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
900167a8:	4621      	mov	r1, r4
900167aa:	6818      	ldr	r0, [r3, #0]
900167ac:	6803      	ldr	r3, [r0, #0]
900167ae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900167b2:	69db      	ldr	r3, [r3, #28]
900167b4:	4718      	bx	r3
900167b6:	bd10      	pop	{r4, pc}
900167b8:	2403982a 	.word	0x2403982a
900167bc:	24039828 	.word	0x24039828
900167c0:	24039878 	.word	0x24039878
900167c4:	24039874 	.word	0x24039874
900167c8:	24039834 	.word	0x24039834

900167cc <_ZNK8touchgfx4Rect8includesERKS0_>:
900167cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
900167ce:	4606      	mov	r6, r0
900167d0:	4608      	mov	r0, r1
900167d2:	460f      	mov	r7, r1
900167d4:	f7fa fe7f 	bl	900114d6 <_ZNK8touchgfx4Rect7isEmptyEv>
900167d8:	b9e8      	cbnz	r0, 90016816 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
900167da:	f9b7 5000 	ldrsh.w	r5, [r7]
900167de:	f9b6 4000 	ldrsh.w	r4, [r6]
900167e2:	42a5      	cmp	r5, r4
900167e4:	db17      	blt.n	90016816 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
900167e6:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
900167ea:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
900167ee:	429a      	cmp	r2, r3
900167f0:	db11      	blt.n	90016816 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
900167f2:	88b9      	ldrh	r1, [r7, #4]
900167f4:	440d      	add	r5, r1
900167f6:	88b1      	ldrh	r1, [r6, #4]
900167f8:	440c      	add	r4, r1
900167fa:	b22d      	sxth	r5, r5
900167fc:	b224      	sxth	r4, r4
900167fe:	42a5      	cmp	r5, r4
90016800:	dc09      	bgt.n	90016816 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
90016802:	88f8      	ldrh	r0, [r7, #6]
90016804:	4410      	add	r0, r2
90016806:	88f2      	ldrh	r2, [r6, #6]
90016808:	4413      	add	r3, r2
9001680a:	b200      	sxth	r0, r0
9001680c:	b21b      	sxth	r3, r3
9001680e:	4298      	cmp	r0, r3
90016810:	bfcc      	ite	gt
90016812:	2000      	movgt	r0, #0
90016814:	2001      	movle	r0, #1
90016816:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

90016818 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
90016818:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9001681a:	4604      	mov	r4, r0
9001681c:	4608      	mov	r0, r1
9001681e:	460d      	mov	r5, r1
90016820:	f7fa fe59 	bl	900114d6 <_ZNK8touchgfx4Rect7isEmptyEv>
90016824:	b978      	cbnz	r0, 90016846 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
90016826:	4620      	mov	r0, r4
90016828:	f7fa fe55 	bl	900114d6 <_ZNK8touchgfx4Rect7isEmptyEv>
9001682c:	f9b5 6000 	ldrsh.w	r6, [r5]
90016830:	b150      	cbz	r0, 90016848 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
90016832:	8026      	strh	r6, [r4, #0]
90016834:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
90016838:	8063      	strh	r3, [r4, #2]
9001683a:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
9001683e:	80a3      	strh	r3, [r4, #4]
90016840:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
90016844:	80e3      	strh	r3, [r4, #6]
90016846:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90016848:	f9b4 1000 	ldrsh.w	r1, [r4]
9001684c:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
90016850:	42b1      	cmp	r1, r6
90016852:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
90016856:	f8b5 c004 	ldrh.w	ip, [r5, #4]
9001685a:	460f      	mov	r7, r1
9001685c:	88ed      	ldrh	r5, [r5, #6]
9001685e:	bfa8      	it	ge
90016860:	4637      	movge	r7, r6
90016862:	4293      	cmp	r3, r2
90016864:	4618      	mov	r0, r3
90016866:	4466      	add	r6, ip
90016868:	f8b4 c004 	ldrh.w	ip, [r4, #4]
9001686c:	bfa8      	it	ge
9001686e:	4610      	movge	r0, r2
90016870:	442a      	add	r2, r5
90016872:	88e5      	ldrh	r5, [r4, #6]
90016874:	4461      	add	r1, ip
90016876:	b236      	sxth	r6, r6
90016878:	8027      	strh	r7, [r4, #0]
9001687a:	442b      	add	r3, r5
9001687c:	b209      	sxth	r1, r1
9001687e:	b212      	sxth	r2, r2
90016880:	8060      	strh	r0, [r4, #2]
90016882:	b21b      	sxth	r3, r3
90016884:	428e      	cmp	r6, r1
90016886:	bfac      	ite	ge
90016888:	ebc7 0106 	rsbge	r1, r7, r6
9001688c:	ebc7 0101 	rsblt	r1, r7, r1
90016890:	429a      	cmp	r2, r3
90016892:	bfac      	ite	ge
90016894:	ebc0 0202 	rsbge	r2, r0, r2
90016898:	ebc0 0203 	rsblt	r2, r0, r3
9001689c:	80a1      	strh	r1, [r4, #4]
9001689e:	80e2      	strh	r2, [r4, #6]
900168a0:	e7d1      	b.n	90016846 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

900168a4 <_ZN8touchgfx11Application11getInstanceEv>:
900168a4:	4b01      	ldr	r3, [pc, #4]	; (900168ac <_ZN8touchgfx11Application11getInstanceEv+0x8>)
900168a6:	6818      	ldr	r0, [r3, #0]
900168a8:	4770      	bx	lr
900168aa:	bf00      	nop
900168ac:	24039888 	.word	0x24039888

900168b0 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>:
900168b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
900168b2:	4b10      	ldr	r3, [pc, #64]	; (900168f4 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x44>)
900168b4:	4605      	mov	r5, r0
900168b6:	781b      	ldrb	r3, [r3, #0]
900168b8:	b1d3      	cbz	r3, 900168f0 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x40>
900168ba:	4b0f      	ldr	r3, [pc, #60]	; (900168f8 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x48>)
900168bc:	f100 06ee 	add.w	r6, r0, #238	; 0xee
900168c0:	4f0e      	ldr	r7, [pc, #56]	; (900168fc <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x4c>)
900168c2:	881c      	ldrh	r4, [r3, #0]
900168c4:	f8b5 312e 	ldrh.w	r3, [r5, #302]	; 0x12e
900168c8:	42a3      	cmp	r3, r4
900168ca:	d90e      	bls.n	900168ea <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x3a>
900168cc:	683b      	ldr	r3, [r7, #0]
900168ce:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
900168d2:	b10a      	cbz	r2, 900168d8 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x28>
900168d4:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
900168d6:	b900      	cbnz	r0, 900168da <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x2a>
900168d8:	6898      	ldr	r0, [r3, #8]
900168da:	6803      	ldr	r3, [r0, #0]
900168dc:	eb06 01c4 	add.w	r1, r6, r4, lsl #3
900168e0:	3401      	adds	r4, #1
900168e2:	69db      	ldr	r3, [r3, #28]
900168e4:	4798      	blx	r3
900168e6:	b2a4      	uxth	r4, r4
900168e8:	e7ec      	b.n	900168c4 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x14>
900168ea:	2300      	movs	r3, #0
900168ec:	f8a5 312e 	strh.w	r3, [r5, #302]	; 0x12e
900168f0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
900168f2:	bf00      	nop
900168f4:	24039832 	.word	0x24039832
900168f8:	24000080 	.word	0x24000080
900168fc:	24039834 	.word	0x24039834

90016900 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
90016900:	2300      	movs	r3, #0
90016902:	b510      	push	{r4, lr}
90016904:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
90016908:	4604      	mov	r4, r0
9001690a:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
9001690e:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
90016912:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
90016916:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
9001691a:	429a      	cmp	r2, r3
9001691c:	d90e      	bls.n	9001693c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
9001691e:	18e2      	adds	r2, r4, r3
90016920:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
90016924:	b122      	cbz	r2, 90016930 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
90016926:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
9001692a:	6803      	ldr	r3, [r0, #0]
9001692c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
9001692e:	4798      	blx	r3
90016930:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
90016934:	3301      	adds	r3, #1
90016936:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
9001693a:	e7ea      	b.n	90016912 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
9001693c:	bd10      	pop	{r4, pc}

9001693e <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
9001693e:	2300      	movs	r3, #0
90016940:	f100 0284 	add.w	r2, r0, #132	; 0x84
90016944:	30a4      	adds	r0, #164	; 0xa4
90016946:	f820 3c24 	strh.w	r3, [r0, #-36]
9001694a:	f802 3b01 	strb.w	r3, [r2], #1
9001694e:	4282      	cmp	r2, r0
90016950:	d1fb      	bne.n	9001694a <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
90016952:	4770      	bx	lr

90016954 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
90016954:	b570      	push	{r4, r5, r6, lr}
90016956:	4c0b      	ldr	r4, [pc, #44]	; (90016984 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
90016958:	4605      	mov	r5, r0
9001695a:	460e      	mov	r6, r1
9001695c:	6820      	ldr	r0, [r4, #0]
9001695e:	b110      	cbz	r0, 90016966 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
90016960:	6803      	ldr	r3, [r0, #0]
90016962:	695b      	ldr	r3, [r3, #20]
90016964:	4798      	blx	r3
90016966:	1d28      	adds	r0, r5, #4
90016968:	f7ff ffe9 	bl	9001693e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
9001696c:	6026      	str	r6, [r4, #0]
9001696e:	6833      	ldr	r3, [r6, #0]
90016970:	4630      	mov	r0, r6
90016972:	68db      	ldr	r3, [r3, #12]
90016974:	4798      	blx	r3
90016976:	682b      	ldr	r3, [r5, #0]
90016978:	4628      	mov	r0, r5
9001697a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
9001697c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90016980:	4718      	bx	r3
90016982:	bf00      	nop
90016984:	24039878 	.word	0x24039878

90016988 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
90016988:	2300      	movs	r3, #0
9001698a:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
9001698e:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
90016992:	461a      	mov	r2, r3
90016994:	b5f0      	push	{r4, r5, r6, r7, lr}
90016996:	461c      	mov	r4, r3
90016998:	461d      	mov	r5, r3
9001699a:	459c      	cmp	ip, r3
9001699c:	dd1a      	ble.n	900169d4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
9001699e:	18c6      	adds	r6, r0, r3
900169a0:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
900169a4:	b16e      	cbz	r6, 900169c2 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
900169a6:	429a      	cmp	r2, r3
900169a8:	d008      	beq.n	900169bc <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
900169aa:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
900169ae:	fa1f fe82 	uxth.w	lr, r2
900169b2:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
900169b6:	1887      	adds	r7, r0, r2
900169b8:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
900169bc:	3201      	adds	r2, #1
900169be:	3301      	adds	r3, #1
900169c0:	e7eb      	b.n	9001699a <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
900169c2:	4299      	cmp	r1, r3
900169c4:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
900169c8:	bfa8      	it	ge
900169ca:	3501      	addge	r5, #1
900169cc:	429e      	cmp	r6, r3
900169ce:	bfc8      	it	gt
900169d0:	3401      	addgt	r4, #1
900169d2:	e7f4      	b.n	900169be <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
900169d4:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
900169d8:	1b49      	subs	r1, r1, r5
900169da:	1b1b      	subs	r3, r3, r4
900169dc:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
900169e0:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
900169e4:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
900169e8:	4293      	cmp	r3, r2
900169ea:	dd03      	ble.n	900169f4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
900169ec:	3b01      	subs	r3, #1
900169ee:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
900169f2:	e7f7      	b.n	900169e4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
900169f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

900169f8 <_ZN8touchgfx11Application15handleTickEventEv>:
900169f8:	b570      	push	{r4, r5, r6, lr}
900169fa:	4d16      	ldr	r5, [pc, #88]	; (90016a54 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
900169fc:	4604      	mov	r4, r0
900169fe:	6828      	ldr	r0, [r5, #0]
90016a00:	b140      	cbz	r0, 90016a14 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
90016a02:	7a03      	ldrb	r3, [r0, #8]
90016a04:	b933      	cbnz	r3, 90016a14 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
90016a06:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
90016a0a:	6803      	ldr	r3, [r0, #0]
90016a0c:	689b      	ldr	r3, [r3, #8]
90016a0e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90016a12:	4718      	bx	r3
90016a14:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
90016a18:	4e0f      	ldr	r6, [pc, #60]	; (90016a58 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
90016a1a:	b973      	cbnz	r3, 90016a3a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
90016a1c:	b168      	cbz	r0, 90016a3a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
90016a1e:	7a03      	ldrb	r3, [r0, #8]
90016a20:	b15b      	cbz	r3, 90016a3a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
90016a22:	6830      	ldr	r0, [r6, #0]
90016a24:	b110      	cbz	r0, 90016a2c <_ZN8touchgfx11Application15handleTickEventEv+0x34>
90016a26:	6803      	ldr	r3, [r0, #0]
90016a28:	691b      	ldr	r3, [r3, #16]
90016a2a:	4798      	blx	r3
90016a2c:	6828      	ldr	r0, [r5, #0]
90016a2e:	6803      	ldr	r3, [r0, #0]
90016a30:	68db      	ldr	r3, [r3, #12]
90016a32:	4798      	blx	r3
90016a34:	2301      	movs	r3, #1
90016a36:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
90016a3a:	3404      	adds	r4, #4
90016a3c:	4620      	mov	r0, r4
90016a3e:	f7ff ff5f 	bl	90016900 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
90016a42:	4620      	mov	r0, r4
90016a44:	f7ff ffa0 	bl	90016988 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
90016a48:	6830      	ldr	r0, [r6, #0]
90016a4a:	b110      	cbz	r0, 90016a52 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
90016a4c:	6803      	ldr	r3, [r0, #0]
90016a4e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90016a50:	e7dd      	b.n	90016a0e <_ZN8touchgfx11Application15handleTickEventEv+0x16>
90016a52:	bd70      	pop	{r4, r5, r6, pc}
90016a54:	2403987c 	.word	0x2403987c
90016a58:	24039878 	.word	0x24039878

90016a5c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
90016a5c:	4603      	mov	r3, r0
90016a5e:	f100 0140 	add.w	r1, r0, #64	; 0x40
90016a62:	2200      	movs	r2, #0
90016a64:	801a      	strh	r2, [r3, #0]
90016a66:	3308      	adds	r3, #8
90016a68:	f823 2c06 	strh.w	r2, [r3, #-6]
90016a6c:	f823 2c04 	strh.w	r2, [r3, #-4]
90016a70:	f823 2c02 	strh.w	r2, [r3, #-2]
90016a74:	428b      	cmp	r3, r1
90016a76:	d1f5      	bne.n	90016a64 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
90016a78:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
90016a7c:	4770      	bx	lr
	...

90016a80 <_ZN8touchgfx11ApplicationC1Ev>:
90016a80:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90016a82:	4b1d      	ldr	r3, [pc, #116]	; (90016af8 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
90016a84:	4606      	mov	r6, r0
90016a86:	4604      	mov	r4, r0
90016a88:	2500      	movs	r5, #0
90016a8a:	f846 3b04 	str.w	r3, [r6], #4
90016a8e:	22a8      	movs	r2, #168	; 0xa8
90016a90:	2100      	movs	r1, #0
90016a92:	4630      	mov	r0, r6
90016a94:	f011 fafa 	bl	9002808c <memset>
90016a98:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
90016a9c:	f104 00ac 	add.w	r0, r4, #172	; 0xac
90016aa0:	4f16      	ldr	r7, [pc, #88]	; (90016afc <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
90016aa2:	f7ff ffdb 	bl	90016a5c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
90016aa6:	f104 00ee 	add.w	r0, r4, #238	; 0xee
90016aaa:	f7ff ffd7 	bl	90016a5c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
90016aae:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
90016ab2:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
90016ab6:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
90016aba:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
90016abe:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
90016ac2:	490f      	ldr	r1, [pc, #60]	; (90016b00 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
90016ac4:	480f      	ldr	r0, [pc, #60]	; (90016b04 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
90016ac6:	f010 fbdb 	bl	90027280 <CRC_Lock>
90016aca:	4b0f      	ldr	r3, [pc, #60]	; (90016b08 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
90016acc:	b158      	cbz	r0, 90016ae6 <_ZN8touchgfx11ApplicationC1Ev+0x66>
90016ace:	801d      	strh	r5, [r3, #0]
90016ad0:	2300      	movs	r3, #0
90016ad2:	4a0e      	ldr	r2, [pc, #56]	; (90016b0c <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
90016ad4:	4630      	mov	r0, r6
90016ad6:	6013      	str	r3, [r2, #0]
90016ad8:	4a0d      	ldr	r2, [pc, #52]	; (90016b10 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
90016ada:	603b      	str	r3, [r7, #0]
90016adc:	6013      	str	r3, [r2, #0]
90016ade:	f7ff ff2e 	bl	9001693e <_ZN8touchgfx11Application12TimerWidgets5clearEv>
90016ae2:	4620      	mov	r0, r4
90016ae4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90016ae6:	f44f 6280 	mov.w	r2, #1024	; 0x400
90016aea:	2002      	movs	r0, #2
90016aec:	801a      	strh	r2, [r3, #0]
90016aee:	6038      	str	r0, [r7, #0]
90016af0:	f001 fb48 	bl	90018184 <_ZN8touchgfx6Screen4drawEv>
90016af4:	e7ec      	b.n	90016ad0 <_ZN8touchgfx11ApplicationC1Ev+0x50>
90016af6:	bf00      	nop
90016af8:	9002bf6c 	.word	0x9002bf6c
90016afc:	24039878 	.word	0x24039878
90016b00:	b5e8b5cd 	.word	0xb5e8b5cd
90016b04:	f407a5c2 	.word	0xf407a5c2
90016b08:	24000080 	.word	0x24000080
90016b0c:	24039888 	.word	0x24039888
90016b10:	2403987c 	.word	0x2403987c

90016b14 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
90016b14:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
90016b18:	3b01      	subs	r3, #1
90016b1a:	b29b      	uxth	r3, r3
90016b1c:	428b      	cmp	r3, r1
90016b1e:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
90016b22:	b510      	push	{r4, lr}
90016b24:	d908      	bls.n	90016b38 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
90016b26:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
90016b2a:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
90016b2e:	681a      	ldr	r2, [r3, #0]
90016b30:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
90016b34:	685a      	ldr	r2, [r3, #4]
90016b36:	6062      	str	r2, [r4, #4]
90016b38:	bd10      	pop	{r4, pc}
	...

90016b3c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
90016b3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90016b40:	b08f      	sub	sp, #60	; 0x3c
90016b42:	4b8f      	ldr	r3, [pc, #572]	; (90016d80 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
90016b44:	4683      	mov	fp, r0
90016b46:	ac0a      	add	r4, sp, #40	; 0x28
90016b48:	e884 0006 	stmia.w	r4, {r1, r2}
90016b4c:	f9b3 2000 	ldrsh.w	r2, [r3]
90016b50:	4620      	mov	r0, r4
90016b52:	4b8c      	ldr	r3, [pc, #560]	; (90016d84 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
90016b54:	f9b3 1000 	ldrsh.w	r1, [r3]
90016b58:	f7ff fde7 	bl	9001672a <_ZN8touchgfx4Rect10restrictToEss>
90016b5c:	4620      	mov	r0, r4
90016b5e:	f7fa fcba 	bl	900114d6 <_ZNK8touchgfx4Rect7isEmptyEv>
90016b62:	2800      	cmp	r0, #0
90016b64:	d16a      	bne.n	90016c3c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
90016b66:	9403      	str	r4, [sp, #12]
90016b68:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
90016b6c:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
90016b70:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
90016b74:	9301      	str	r3, [sp, #4]
90016b76:	35a4      	adds	r5, #164	; 0xa4
90016b78:	b15c      	cbz	r4, 90016b92 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
90016b7a:	4629      	mov	r1, r5
90016b7c:	9803      	ldr	r0, [sp, #12]
90016b7e:	f7ff fe25 	bl	900167cc <_ZNK8touchgfx4Rect8includesERKS0_>
90016b82:	3c01      	subs	r4, #1
90016b84:	b118      	cbz	r0, 90016b8e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
90016b86:	b2a1      	uxth	r1, r4
90016b88:	9801      	ldr	r0, [sp, #4]
90016b8a:	f7ff ffc3 	bl	90016b14 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90016b8e:	3d08      	subs	r5, #8
90016b90:	e7f2      	b.n	90016b78 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
90016b92:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	; 0xec
90016b96:	f10a 33ff 	add.w	r3, sl, #4294967295
90016b9a:	f8cd a010 	str.w	sl, [sp, #16]
90016b9e:	9302      	str	r3, [sp, #8]
90016ba0:	ea4f 03ca 	mov.w	r3, sl, lsl #3
90016ba4:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
90016ba8:	9306      	str	r3, [sp, #24]
90016baa:	445c      	add	r4, fp
90016bac:	2500      	movs	r5, #0
90016bae:	4626      	mov	r6, r4
90016bb0:	f8cd a014 	str.w	sl, [sp, #20]
90016bb4:	462f      	mov	r7, r5
90016bb6:	9b05      	ldr	r3, [sp, #20]
90016bb8:	2b00      	cmp	r3, #0
90016bba:	d073      	beq.n	90016ca4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
90016bbc:	9903      	ldr	r1, [sp, #12]
90016bbe:	4630      	mov	r0, r6
90016bc0:	f7ff fd91 	bl	900166e6 <_ZNK8touchgfx4Rect9intersectERKS0_>
90016bc4:	b350      	cbz	r0, 90016c1c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
90016bc6:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
90016bca:	f9b6 c000 	ldrsh.w	ip, [r6]
90016bce:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	; 0x2a
90016bd2:	45e6      	cmp	lr, ip
90016bd4:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
90016bd8:	db33      	blt.n	90016c42 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
90016bda:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
90016bde:	88b3      	ldrh	r3, [r6, #4]
90016be0:	4472      	add	r2, lr
90016be2:	4463      	add	r3, ip
90016be4:	b212      	sxth	r2, r2
90016be6:	b21b      	sxth	r3, r3
90016be8:	429a      	cmp	r2, r3
90016bea:	dc2a      	bgt.n	90016c42 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
90016bec:	fa1f f289 	uxth.w	r2, r9
90016bf0:	88f3      	ldrh	r3, [r6, #6]
90016bf2:	45c8      	cmp	r8, r9
90016bf4:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
90016bf8:	4413      	add	r3, r2
90016bfa:	fa1f fc88 	uxth.w	ip, r8
90016bfe:	b29b      	uxth	r3, r3
90016c00:	fa0f fe83 	sxth.w	lr, r3
90016c04:	db0f      	blt.n	90016c26 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
90016c06:	eba3 030c 	sub.w	r3, r3, ip
90016c0a:	1ac9      	subs	r1, r1, r3
90016c0c:	b209      	sxth	r1, r1
90016c0e:	2900      	cmp	r1, #0
90016c10:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
90016c14:	dd12      	ble.n	90016c3c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
90016c16:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
90016c1a:	4605      	mov	r5, r0
90016c1c:	9b05      	ldr	r3, [sp, #20]
90016c1e:	3e08      	subs	r6, #8
90016c20:	3b01      	subs	r3, #1
90016c22:	9305      	str	r3, [sp, #20]
90016c24:	e7c7      	b.n	90016bb6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
90016c26:	4461      	add	r1, ip
90016c28:	b209      	sxth	r1, r1
90016c2a:	4571      	cmp	r1, lr
90016c2c:	dc38      	bgt.n	90016ca0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
90016c2e:	eba2 020c 	sub.w	r2, r2, ip
90016c32:	b212      	sxth	r2, r2
90016c34:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
90016c38:	2a00      	cmp	r2, #0
90016c3a:	dcee      	bgt.n	90016c1a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
90016c3c:	b00f      	add	sp, #60	; 0x3c
90016c3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90016c42:	45c8      	cmp	r8, r9
90016c44:	db2c      	blt.n	90016ca0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
90016c46:	88f3      	ldrh	r3, [r6, #6]
90016c48:	4499      	add	r9, r3
90016c4a:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
90016c4e:	4498      	add	r8, r3
90016c50:	fa0f f989 	sxth.w	r9, r9
90016c54:	fa0f f888 	sxth.w	r8, r8
90016c58:	45c1      	cmp	r9, r8
90016c5a:	db21      	blt.n	90016ca0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
90016c5c:	fa1f f28c 	uxth.w	r2, ip
90016c60:	88b3      	ldrh	r3, [r6, #4]
90016c62:	45e6      	cmp	lr, ip
90016c64:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
90016c68:	4413      	add	r3, r2
90016c6a:	fa1f f88e 	uxth.w	r8, lr
90016c6e:	b29b      	uxth	r3, r3
90016c70:	fa0f f983 	sxth.w	r9, r3
90016c74:	db0a      	blt.n	90016c8c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
90016c76:	eba3 0308 	sub.w	r3, r3, r8
90016c7a:	1ac9      	subs	r1, r1, r3
90016c7c:	b209      	sxth	r1, r1
90016c7e:	2900      	cmp	r1, #0
90016c80:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
90016c84:	ddda      	ble.n	90016c3c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
90016c86:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
90016c8a:	e7c6      	b.n	90016c1a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
90016c8c:	4441      	add	r1, r8
90016c8e:	b209      	sxth	r1, r1
90016c90:	4549      	cmp	r1, r9
90016c92:	dc05      	bgt.n	90016ca0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
90016c94:	eba2 0208 	sub.w	r2, r2, r8
90016c98:	b212      	sxth	r2, r2
90016c9a:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
90016c9e:	e7cb      	b.n	90016c38 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
90016ca0:	4607      	mov	r7, r0
90016ca2:	e7bb      	b.n	90016c1c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
90016ca4:	2d00      	cmp	r5, #0
90016ca6:	d181      	bne.n	90016bac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
90016ca8:	2f00      	cmp	r7, #0
90016caa:	f000 81dd 	beq.w	90017068 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
90016cae:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
90016cb2:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
90016cb6:	b2b3      	uxth	r3, r6
90016cb8:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
90016cbc:	9305      	str	r3, [sp, #20]
90016cbe:	9a05      	ldr	r2, [sp, #20]
90016cc0:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
90016cc4:	4413      	add	r3, r2
90016cc6:	b2ba      	uxth	r2, r7
90016cc8:	4492      	add	sl, r2
90016cca:	b29b      	uxth	r3, r3
90016ccc:	fa1f fa8a 	uxth.w	sl, sl
90016cd0:	fa0f f883 	sxth.w	r8, r3
90016cd4:	fa0f f98a 	sxth.w	r9, sl
90016cd8:	e9cd 2307 	strd	r2, r3, [sp, #28]
90016cdc:	9b04      	ldr	r3, [sp, #16]
90016cde:	2b00      	cmp	r3, #0
90016ce0:	d052      	beq.n	90016d88 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
90016ce2:	9903      	ldr	r1, [sp, #12]
90016ce4:	4620      	mov	r0, r4
90016ce6:	f7ff fcfe 	bl	900166e6 <_ZNK8touchgfx4Rect9intersectERKS0_>
90016cea:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
90016cee:	b1c0      	cbz	r0, 90016d22 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
90016cf0:	f9b4 e000 	ldrsh.w	lr, [r4]
90016cf4:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
90016cf8:	4576      	cmp	r6, lr
90016cfa:	dc22      	bgt.n	90016d42 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
90016cfc:	f8b4 c004 	ldrh.w	ip, [r4, #4]
90016d00:	44f4      	add	ip, lr
90016d02:	fa0f fc8c 	sxth.w	ip, ip
90016d06:	45e0      	cmp	r8, ip
90016d08:	db1b      	blt.n	90016d42 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
90016d0a:	428f      	cmp	r7, r1
90016d0c:	fa1f fc81 	uxth.w	ip, r1
90016d10:	88e1      	ldrh	r1, [r4, #6]
90016d12:	dc0d      	bgt.n	90016d30 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
90016d14:	ebaa 0c0c 	sub.w	ip, sl, ip
90016d18:	f8a4 9002 	strh.w	r9, [r4, #2]
90016d1c:	eba1 010c 	sub.w	r1, r1, ip
90016d20:	80e1      	strh	r1, [r4, #6]
90016d22:	4628      	mov	r0, r5
90016d24:	9904      	ldr	r1, [sp, #16]
90016d26:	3c08      	subs	r4, #8
90016d28:	4605      	mov	r5, r0
90016d2a:	3901      	subs	r1, #1
90016d2c:	9104      	str	r1, [sp, #16]
90016d2e:	e7d3      	b.n	90016cd8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
90016d30:	4461      	add	r1, ip
90016d32:	b209      	sxth	r1, r1
90016d34:	4549      	cmp	r1, r9
90016d36:	dcf5      	bgt.n	90016d24 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
90016d38:	eba2 0c0c 	sub.w	ip, r2, ip
90016d3c:	f8a4 c006 	strh.w	ip, [r4, #6]
90016d40:	e7ef      	b.n	90016d22 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
90016d42:	428f      	cmp	r7, r1
90016d44:	dcee      	bgt.n	90016d24 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
90016d46:	f8b4 c006 	ldrh.w	ip, [r4, #6]
90016d4a:	4461      	add	r1, ip
90016d4c:	b209      	sxth	r1, r1
90016d4e:	4589      	cmp	r9, r1
90016d50:	dbe8      	blt.n	90016d24 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
90016d52:	4576      	cmp	r6, lr
90016d54:	fa1f fc8e 	uxth.w	ip, lr
90016d58:	88a1      	ldrh	r1, [r4, #4]
90016d5a:	dc07      	bgt.n	90016d6c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
90016d5c:	eba3 0c0c 	sub.w	ip, r3, ip
90016d60:	f8a4 8000 	strh.w	r8, [r4]
90016d64:	eba1 010c 	sub.w	r1, r1, ip
90016d68:	80a1      	strh	r1, [r4, #4]
90016d6a:	e7da      	b.n	90016d22 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
90016d6c:	4461      	add	r1, ip
90016d6e:	b209      	sxth	r1, r1
90016d70:	4588      	cmp	r8, r1
90016d72:	dbd7      	blt.n	90016d24 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
90016d74:	9905      	ldr	r1, [sp, #20]
90016d76:	eba1 0c0c 	sub.w	ip, r1, ip
90016d7a:	f8a4 c004 	strh.w	ip, [r4, #4]
90016d7e:	e7d0      	b.n	90016d22 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
90016d80:	2403982a 	.word	0x2403982a
90016d84:	24039828 	.word	0x24039828
90016d88:	2d00      	cmp	r5, #0
90016d8a:	f000 816d 	beq.w	90017068 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
90016d8e:	9b06      	ldr	r3, [sp, #24]
90016d90:	445b      	add	r3, fp
90016d92:	461c      	mov	r4, r3
90016d94:	9b02      	ldr	r3, [sp, #8]
90016d96:	3301      	adds	r3, #1
90016d98:	f000 8166 	beq.w	90017068 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
90016d9c:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
90016da0:	9803      	ldr	r0, [sp, #12]
90016da2:	4629      	mov	r1, r5
90016da4:	f7ff fd12 	bl	900167cc <_ZNK8touchgfx4Rect8includesERKS0_>
90016da8:	b120      	cbz	r0, 90016db4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
90016daa:	f8bd 1008 	ldrh.w	r1, [sp, #8]
90016dae:	9801      	ldr	r0, [sp, #4]
90016db0:	f7ff feb0 	bl	90016b14 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90016db4:	9903      	ldr	r1, [sp, #12]
90016db6:	4628      	mov	r0, r5
90016db8:	f7ff fc95 	bl	900166e6 <_ZNK8touchgfx4Rect9intersectERKS0_>
90016dbc:	2800      	cmp	r0, #0
90016dbe:	f000 809c 	beq.w	90016efa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
90016dc2:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
90016dc6:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
90016dca:	fa1f f189 	uxth.w	r1, r9
90016dce:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
90016dd2:	9309      	str	r3, [sp, #36]	; 0x24
90016dd4:	eb01 0c03 	add.w	ip, r1, r3
90016dd8:	b283      	uxth	r3, r0
90016dda:	4548      	cmp	r0, r9
90016ddc:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
90016de0:	fa1f fa8c 	uxth.w	sl, ip
90016de4:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
90016de8:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
90016dec:	eb03 050c 	add.w	r5, r3, ip
90016df0:	b2ad      	uxth	r5, r5
90016df2:	9505      	str	r5, [sp, #20]
90016df4:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
90016df8:	9504      	str	r5, [sp, #16]
90016dfa:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
90016dfe:	f340 8099 	ble.w	90016f34 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
90016e02:	1a5b      	subs	r3, r3, r1
90016e04:	4596      	cmp	lr, r2
90016e06:	fa0f f08a 	sxth.w	r0, sl
90016e0a:	b29b      	uxth	r3, r3
90016e0c:	b21e      	sxth	r6, r3
90016e0e:	dd2e      	ble.n	90016e6e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
90016e10:	9f02      	ldr	r7, [sp, #8]
90016e12:	fa1f fe8e 	uxth.w	lr, lr
90016e16:	b292      	uxth	r2, r2
90016e18:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
90016e1c:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
90016e20:	9f04      	ldr	r7, [sp, #16]
90016e22:	ebae 0102 	sub.w	r1, lr, r2
90016e26:	44a6      	add	lr, r4
90016e28:	1a3f      	subs	r7, r7, r0
90016e2a:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
90016e2e:	b289      	uxth	r1, r1
90016e30:	4402      	add	r2, r0
90016e32:	fa0f fe8e 	sxth.w	lr, lr
90016e36:	b20d      	sxth	r5, r1
90016e38:	b212      	sxth	r2, r2
90016e3a:	436f      	muls	r7, r5
90016e3c:	ebae 0202 	sub.w	r2, lr, r2
90016e40:	4372      	muls	r2, r6
90016e42:	4297      	cmp	r7, r2
90016e44:	db09      	blt.n	90016e5a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
90016e46:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
90016e4a:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
90016e4e:	449c      	add	ip, r3
90016e50:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
90016e54:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
90016e58:	e686      	b.n	90016b68 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
90016e5a:	4421      	add	r1, r4
90016e5c:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
90016e60:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
90016e64:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
90016e68:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
90016e6c:	e67c      	b.n	90016b68 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
90016e6e:	9f04      	ldr	r7, [sp, #16]
90016e70:	42b8      	cmp	r0, r7
90016e72:	da27      	bge.n	90016ec4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
90016e74:	9902      	ldr	r1, [sp, #8]
90016e76:	1a3f      	subs	r7, r7, r0
90016e78:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
90016e7c:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
90016e80:	eb05 010e 	add.w	r1, r5, lr
90016e84:	fa1f f881 	uxth.w	r8, r1
90016e88:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
90016e8c:	4411      	add	r1, r2
90016e8e:	fa0f f988 	sxth.w	r9, r8
90016e92:	eba2 020e 	sub.w	r2, r2, lr
90016e96:	eba1 0108 	sub.w	r1, r1, r8
90016e9a:	4372      	muls	r2, r6
90016e9c:	b289      	uxth	r1, r1
90016e9e:	fa0f f881 	sxth.w	r8, r1
90016ea2:	fb08 f707 	mul.w	r7, r8, r7
90016ea6:	42ba      	cmp	r2, r7
90016ea8:	dc06      	bgt.n	90016eb8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
90016eaa:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
90016eae:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
90016eb2:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
90016eb6:	e7ca      	b.n	90016e4e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
90016eb8:	4429      	add	r1, r5
90016eba:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
90016ebe:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
90016ec2:	e651      	b.n	90016b68 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
90016ec4:	9805      	ldr	r0, [sp, #20]
90016ec6:	2d06      	cmp	r5, #6
90016ec8:	ebaa 0000 	sub.w	r0, sl, r0
90016ecc:	b280      	uxth	r0, r0
90016ece:	fa0f fe80 	sxth.w	lr, r0
90016ed2:	d817      	bhi.n	90016f04 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
90016ed4:	9b04      	ldr	r3, [sp, #16]
90016ed6:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
90016eda:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
90016ede:	1c6b      	adds	r3, r5, #1
90016ee0:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
90016ee4:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
90016ee8:	9b01      	ldr	r3, [sp, #4]
90016eea:	9801      	ldr	r0, [sp, #4]
90016eec:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
90016ef0:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
90016ef4:	805a      	strh	r2, [r3, #2]
90016ef6:	809e      	strh	r6, [r3, #4]
90016ef8:	80d9      	strh	r1, [r3, #6]
90016efa:	9b02      	ldr	r3, [sp, #8]
90016efc:	3c08      	subs	r4, #8
90016efe:	3b01      	subs	r3, #1
90016f00:	9302      	str	r3, [sp, #8]
90016f02:	e747      	b.n	90016d94 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
90016f04:	9a02      	ldr	r2, [sp, #8]
90016f06:	45b6      	cmp	lr, r6
90016f08:	ea4f 02c2 	mov.w	r2, r2, lsl #3
90016f0c:	db0d      	blt.n	90016f2a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
90016f0e:	449c      	add	ip, r3
90016f10:	445a      	add	r2, fp
90016f12:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
90016f16:	fa1f fc8c 	uxth.w	ip, ip
90016f1a:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
90016f1e:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
90016f22:	448c      	add	ip, r1
90016f24:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
90016f28:	e61e      	b.n	90016b68 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
90016f2a:	445a      	add	r2, fp
90016f2c:	4484      	add	ip, r0
90016f2e:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
90016f32:	e78f      	b.n	90016e54 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
90016f34:	fa1f f18e 	uxth.w	r1, lr
90016f38:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
90016f3c:	b293      	uxth	r3, r2
90016f3e:	4596      	cmp	lr, r2
90016f40:	eb01 0806 	add.w	r8, r1, r6
90016f44:	9306      	str	r3, [sp, #24]
90016f46:	fa1f f888 	uxth.w	r8, r8
90016f4a:	9f06      	ldr	r7, [sp, #24]
90016f4c:	fa0f f388 	sxth.w	r3, r8
90016f50:	9307      	str	r3, [sp, #28]
90016f52:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
90016f56:	443b      	add	r3, r7
90016f58:	b29b      	uxth	r3, r3
90016f5a:	9308      	str	r3, [sp, #32]
90016f5c:	da24      	bge.n	90016fa8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
90016f5e:	9905      	ldr	r1, [sp, #20]
90016f60:	eba3 0308 	sub.w	r3, r3, r8
90016f64:	eba2 020e 	sub.w	r2, r2, lr
90016f68:	eba9 0000 	sub.w	r0, r9, r0
90016f6c:	ebaa 0401 	sub.w	r4, sl, r1
90016f70:	b29b      	uxth	r3, r3
90016f72:	b2a4      	uxth	r4, r4
90016f74:	b219      	sxth	r1, r3
90016f76:	b225      	sxth	r5, r4
90016f78:	4348      	muls	r0, r1
90016f7a:	436a      	muls	r2, r5
90016f7c:	4282      	cmp	r2, r0
90016f7e:	9a02      	ldr	r2, [sp, #8]
90016f80:	ea4f 02c2 	mov.w	r2, r2, lsl #3
90016f84:	445a      	add	r2, fp
90016f86:	dc06      	bgt.n	90016f96 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
90016f88:	9b07      	ldr	r3, [sp, #28]
90016f8a:	44a4      	add	ip, r4
90016f8c:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
90016f90:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
90016f94:	e75e      	b.n	90016e54 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
90016f96:	9904      	ldr	r1, [sp, #16]
90016f98:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
90016f9c:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
90016fa0:	4433      	add	r3, r6
90016fa2:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
90016fa6:	e5df      	b.n	90016b68 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
90016fa8:	9f06      	ldr	r7, [sp, #24]
90016faa:	9b04      	ldr	r3, [sp, #16]
90016fac:	1bc9      	subs	r1, r1, r7
90016fae:	fa0f f78a 	sxth.w	r7, sl
90016fb2:	b289      	uxth	r1, r1
90016fb4:	429f      	cmp	r7, r3
90016fb6:	fa0f fe81 	sxth.w	lr, r1
90016fba:	dd23      	ble.n	90017004 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
90016fbc:	9a05      	ldr	r2, [sp, #20]
90016fbe:	eba9 0000 	sub.w	r0, r9, r0
90016fc2:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
90016fc6:	ebaa 0202 	sub.w	r2, sl, r2
90016fca:	9d07      	ldr	r5, [sp, #28]
90016fcc:	fb0e f000 	mul.w	r0, lr, r0
90016fd0:	b292      	uxth	r2, r2
90016fd2:	eba5 0a03 	sub.w	sl, r5, r3
90016fd6:	9b02      	ldr	r3, [sp, #8]
90016fd8:	b214      	sxth	r4, r2
90016fda:	00db      	lsls	r3, r3, #3
90016fdc:	fb04 fa0a 	mul.w	sl, r4, sl
90016fe0:	445b      	add	r3, fp
90016fe2:	4550      	cmp	r0, sl
90016fe4:	db03      	blt.n	90016fee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
90016fe6:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
90016fea:	4494      	add	ip, r2
90016fec:	e732      	b.n	90016e54 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
90016fee:	9a04      	ldr	r2, [sp, #16]
90016ff0:	4431      	add	r1, r6
90016ff2:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
90016ff6:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
90016ffa:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
90016ffe:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
90017002:	e75c      	b.n	90016ebe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
90017004:	9b08      	ldr	r3, [sp, #32]
90017006:	2d06      	cmp	r5, #6
90017008:	eba3 0308 	sub.w	r3, r3, r8
9001700c:	b29b      	uxth	r3, r3
9001700e:	b218      	sxth	r0, r3
90017010:	d813      	bhi.n	9001703a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
90017012:	9b07      	ldr	r3, [sp, #28]
90017014:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
90017018:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
9001701c:	1c6b      	adds	r3, r5, #1
9001701e:	9901      	ldr	r1, [sp, #4]
90017020:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
90017024:	9b01      	ldr	r3, [sp, #4]
90017026:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
9001702a:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
9001702e:	805a      	strh	r2, [r3, #2]
90017030:	9a09      	ldr	r2, [sp, #36]	; 0x24
90017032:	f8a3 e006 	strh.w	lr, [r3, #6]
90017036:	809a      	strh	r2, [r3, #4]
90017038:	e75f      	b.n	90016efa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
9001703a:	9c02      	ldr	r4, [sp, #8]
9001703c:	4570      	cmp	r0, lr
9001703e:	ea4f 04c4 	mov.w	r4, r4, lsl #3
90017042:	db0d      	blt.n	90017060 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
90017044:	4431      	add	r1, r6
90017046:	9b06      	ldr	r3, [sp, #24]
90017048:	445c      	add	r4, fp
9001704a:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
9001704e:	b289      	uxth	r1, r1
90017050:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
90017054:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
90017058:	4419      	add	r1, r3
9001705a:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
9001705e:	e583      	b.n	90016b68 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
90017060:	445c      	add	r4, fp
90017062:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
90017066:	e79b      	b.n	90016fa0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
90017068:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
9001706c:	f64f 76ff 	movw	r6, #65535	; 0xffff
90017070:	1e65      	subs	r5, r4, #1
90017072:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
90017076:	b2ad      	uxth	r5, r5
90017078:	42b5      	cmp	r5, r6
9001707a:	d044      	beq.n	90017106 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
9001707c:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
90017080:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	; 0xa6
90017084:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
90017088:	4282      	cmp	r2, r0
9001708a:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	; 0xa4
9001708e:	d11f      	bne.n	900170d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
90017090:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
90017094:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
90017098:	459c      	cmp	ip, r3
9001709a:	d119      	bne.n	900170d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
9001709c:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	; 0xa8
900170a0:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
900170a4:	19d8      	adds	r0, r3, r7
900170a6:	b200      	sxth	r0, r0
900170a8:	4288      	cmp	r0, r1
900170aa:	d109      	bne.n	900170c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
900170ac:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
900170b0:	4413      	add	r3, r2
900170b2:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
900170b6:	4629      	mov	r1, r5
900170b8:	9801      	ldr	r0, [sp, #4]
900170ba:	f7ff fd2b 	bl	90016b14 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
900170be:	e003      	b.n	900170c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
900170c0:	4411      	add	r1, r2
900170c2:	b209      	sxth	r1, r1
900170c4:	42b9      	cmp	r1, r7
900170c6:	d0f3      	beq.n	900170b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
900170c8:	3d01      	subs	r5, #1
900170ca:	3c08      	subs	r4, #8
900170cc:	b2ad      	uxth	r5, r5
900170ce:	e7d3      	b.n	90017078 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
900170d0:	42b9      	cmp	r1, r7
900170d2:	d1f9      	bne.n	900170c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
900170d4:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	; 0x2c
900170d8:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
900170dc:	4299      	cmp	r1, r3
900170de:	d1f3      	bne.n	900170c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
900170e0:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
900170e4:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
900170e8:	181f      	adds	r7, r3, r0
900170ea:	b23f      	sxth	r7, r7
900170ec:	42ba      	cmp	r2, r7
900170ee:	d105      	bne.n	900170fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
900170f0:	f8ad 002a 	strh.w	r0, [sp, #42]	; 0x2a
900170f4:	440b      	add	r3, r1
900170f6:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
900170fa:	e7dc      	b.n	900170b6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
900170fc:	440a      	add	r2, r1
900170fe:	b212      	sxth	r2, r2
90017100:	4290      	cmp	r0, r2
90017102:	d1e1      	bne.n	900170c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
90017104:	e7f6      	b.n	900170f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
90017106:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
9001710a:	2e07      	cmp	r6, #7
9001710c:	ea4f 04c6 	mov.w	r4, r6, lsl #3
90017110:	d812      	bhi.n	90017138 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
90017112:	1c75      	adds	r5, r6, #1
90017114:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
90017118:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
9001711c:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
90017120:	9d01      	ldr	r5, [sp, #4]
90017122:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
90017126:	442c      	add	r4, r5
90017128:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
9001712c:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
90017130:	8061      	strh	r1, [r4, #2]
90017132:	80a2      	strh	r2, [r4, #4]
90017134:	80e3      	strh	r3, [r4, #6]
90017136:	e581      	b.n	90016c3c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
90017138:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
9001713c:	3e01      	subs	r6, #1
9001713e:	445c      	add	r4, fp
90017140:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
90017144:	f04f 37ff 	mov.w	r7, #4294967295
90017148:	2500      	movs	r5, #0
9001714a:	9305      	str	r3, [sp, #20]
9001714c:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
90017150:	1e72      	subs	r2, r6, #1
90017152:	9302      	str	r3, [sp, #8]
90017154:	4691      	mov	r9, r2
90017156:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
9001715a:	9304      	str	r3, [sp, #16]
9001715c:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
90017160:	f1b9 3fff 	cmp.w	r9, #4294967295
90017164:	6818      	ldr	r0, [r3, #0]
90017166:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
9001716a:	9207      	str	r2, [sp, #28]
9001716c:	bf16      	itet	ne
9001716e:	9905      	ldrne	r1, [sp, #20]
90017170:	f8dd e00c 	ldreq.w	lr, [sp, #12]
90017174:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
90017178:	9306      	str	r3, [sp, #24]
9001717a:	f8be 1006 	ldrh.w	r1, [lr, #6]
9001717e:	f8be 8004 	ldrh.w	r8, [lr, #4]
90017182:	fb18 f801 	smulbb	r8, r8, r1
90017186:	6859      	ldr	r1, [r3, #4]
90017188:	e8ac 0003 	stmia.w	ip!, {r0, r1}
9001718c:	4671      	mov	r1, lr
9001718e:	a80c      	add	r0, sp, #48	; 0x30
90017190:	f7ff fb42 	bl	90016818 <_ZN8touchgfx4Rect11expandToFitERKS0_>
90017194:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
90017198:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
9001719c:	f04f 0c08 	mov.w	ip, #8
900171a0:	9b04      	ldr	r3, [sp, #16]
900171a2:	9a02      	ldr	r2, [sp, #8]
900171a4:	fb10 f001 	smulbb	r0, r0, r1
900171a8:	fb02 8803 	mla	r8, r2, r3, r8
900171ac:	eba0 0108 	sub.w	r1, r0, r8
900171b0:	fb90 f0fc 	sdiv	r0, r0, ip
900171b4:	4288      	cmp	r0, r1
900171b6:	dc20      	bgt.n	900171fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6be>
900171b8:	4551      	cmp	r1, sl
900171ba:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
900171be:	da03      	bge.n	900171c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68c>
900171c0:	b1d9      	cbz	r1, 900171fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6be>
900171c2:	468a      	mov	sl, r1
900171c4:	464f      	mov	r7, r9
900171c6:	4635      	mov	r5, r6
900171c8:	f109 39ff 	add.w	r9, r9, #4294967295
900171cc:	f119 0f02 	cmn.w	r9, #2
900171d0:	d1c6      	bne.n	90017160 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
900171d2:	4616      	mov	r6, r2
900171d4:	3201      	adds	r2, #1
900171d6:	f1a4 0408 	sub.w	r4, r4, #8
900171da:	d1b7      	bne.n	9001714c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
900171dc:	9b01      	ldr	r3, [sp, #4]
900171de:	b2ac      	uxth	r4, r5
900171e0:	00ed      	lsls	r5, r5, #3
900171e2:	1958      	adds	r0, r3, r5
900171e4:	1c7b      	adds	r3, r7, #1
900171e6:	d10b      	bne.n	90017200 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c4>
900171e8:	4601      	mov	r1, r0
900171ea:	9803      	ldr	r0, [sp, #12]
900171ec:	f7ff fb14 	bl	90016818 <_ZN8touchgfx4Rect11expandToFitERKS0_>
900171f0:	4621      	mov	r1, r4
900171f2:	9801      	ldr	r0, [sp, #4]
900171f4:	f7ff fc8e 	bl	90016b14 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
900171f8:	e4b6      	b.n	90016b68 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
900171fa:	464f      	mov	r7, r9
900171fc:	4635      	mov	r5, r6
900171fe:	e7ed      	b.n	900171dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a0>
90017200:	9b01      	ldr	r3, [sp, #4]
90017202:	00ff      	lsls	r7, r7, #3
90017204:	445d      	add	r5, fp
90017206:	19d9      	adds	r1, r3, r7
90017208:	445f      	add	r7, fp
9001720a:	f7ff fb05 	bl	90016818 <_ZN8touchgfx4Rect11expandToFitERKS0_>
9001720e:	9b03      	ldr	r3, [sp, #12]
90017210:	cb03      	ldmia	r3!, {r0, r1}
90017212:	9b03      	ldr	r3, [sp, #12]
90017214:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
90017218:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
9001721c:	f855 0fac 	ldr.w	r0, [r5, #172]!
90017220:	6869      	ldr	r1, [r5, #4]
90017222:	c303      	stmia	r3!, {r0, r1}
90017224:	e7e4      	b.n	900171f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b4>
90017226:	bf00      	nop

90017228 <_ZN8touchgfx11Application15drawCachedAreasEv>:
90017228:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001722c:	f500 7698 	add.w	r6, r0, #304	; 0x130
90017230:	b09b      	sub	sp, #108	; 0x6c
90017232:	4604      	mov	r4, r0
90017234:	4630      	mov	r0, r6
90017236:	f7fa f94e 	bl	900114d6 <_ZNK8touchgfx4Rect7isEmptyEv>
9001723a:	4605      	mov	r5, r0
9001723c:	b948      	cbnz	r0, 90017252 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
9001723e:	6823      	ldr	r3, [r4, #0]
90017240:	4620      	mov	r0, r4
90017242:	6c1b      	ldr	r3, [r3, #64]	; 0x40
90017244:	e896 0006 	ldmia.w	r6, {r1, r2}
90017248:	4798      	blx	r3
9001724a:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
9001724e:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
90017252:	4bc5      	ldr	r3, [pc, #788]	; (90017568 <_ZN8touchgfx11Application15drawCachedAreasEv+0x340>)
90017254:	681b      	ldr	r3, [r3, #0]
90017256:	2b00      	cmp	r3, #0
90017258:	d03f      	beq.n	900172da <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
9001725a:	4dc4      	ldr	r5, [pc, #784]	; (9001756c <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
9001725c:	4628      	mov	r0, r5
9001725e:	f7fa f93a 	bl	900114d6 <_ZNK8touchgfx4Rect7isEmptyEv>
90017262:	4606      	mov	r6, r0
90017264:	2800      	cmp	r0, #0
90017266:	d138      	bne.n	900172da <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
90017268:	4628      	mov	r0, r5
9001726a:	f7ff f94b 	bl	90016504 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
9001726e:	6823      	ldr	r3, [r4, #0]
90017270:	6829      	ldr	r1, [r5, #0]
90017272:	4620      	mov	r0, r4
90017274:	6c1b      	ldr	r3, [r3, #64]	; 0x40
90017276:	686a      	ldr	r2, [r5, #4]
90017278:	4798      	blx	r3
9001727a:	802e      	strh	r6, [r5, #0]
9001727c:	806e      	strh	r6, [r5, #2]
9001727e:	80ae      	strh	r6, [r5, #4]
90017280:	80ee      	strh	r6, [r5, #6]
90017282:	f10d 0824 	add.w	r8, sp, #36	; 0x24
90017286:	4dba      	ldr	r5, [pc, #744]	; (90017570 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
90017288:	4640      	mov	r0, r8
9001728a:	f7ff fbe7 	bl	90016a5c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
9001728e:	882e      	ldrh	r6, [r5, #0]
90017290:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
90017294:	f104 00ac 	add.w	r0, r4, #172	; 0xac
90017298:	4633      	mov	r3, r6
9001729a:	42bb      	cmp	r3, r7
9001729c:	d224      	bcs.n	900172e8 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
9001729e:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
900172a2:	2907      	cmp	r1, #7
900172a4:	d816      	bhi.n	900172d4 <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
900172a6:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
900172aa:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
900172ae:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
900172b2:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
900172b6:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
900172ba:	1c4a      	adds	r2, r1, #1
900172bc:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
900172c0:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
900172c4:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
900172c8:	f8a2 a002 	strh.w	sl, [r2, #2]
900172cc:	f8a2 e004 	strh.w	lr, [r2, #4]
900172d0:	f8a2 c006 	strh.w	ip, [r2, #6]
900172d4:	3301      	adds	r3, #1
900172d6:	b29b      	uxth	r3, r3
900172d8:	e7df      	b.n	9001729a <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
900172da:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
900172de:	2b00      	cmp	r3, #0
900172e0:	d1cf      	bne.n	90017282 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
900172e2:	b01b      	add	sp, #108	; 0x6c
900172e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900172e8:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
900172ec:	42b3      	cmp	r3, r6
900172ee:	d90c      	bls.n	9001730a <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
900172f0:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
900172f4:	6822      	ldr	r2, [r4, #0]
900172f6:	3601      	adds	r6, #1
900172f8:	4620      	mov	r0, r4
900172fa:	6c17      	ldr	r7, [r2, #64]	; 0x40
900172fc:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
90017300:	b2b6      	uxth	r6, r6
90017302:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
90017306:	47b8      	blx	r7
90017308:	e7ee      	b.n	900172e8 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
9001730a:	4a9a      	ldr	r2, [pc, #616]	; (90017574 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
9001730c:	6813      	ldr	r3, [r2, #0]
9001730e:	4691      	mov	r9, r2
90017310:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
90017314:	2b01      	cmp	r3, #1
90017316:	f040 80e0 	bne.w	900174da <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b2>
9001731a:	8829      	ldrh	r1, [r5, #0]
9001731c:	2600      	movs	r6, #0
9001731e:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
90017322:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
90017326:	33ae      	adds	r3, #174	; 0xae
90017328:	428f      	cmp	r7, r1
9001732a:	f103 0308 	add.w	r3, r3, #8
9001732e:	dd0a      	ble.n	90017346 <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
90017330:	f833 2c04 	ldrh.w	r2, [r3, #-4]
90017334:	3101      	adds	r1, #1
90017336:	f833 0c08 	ldrh.w	r0, [r3, #-8]
9001733a:	4402      	add	r2, r0
9001733c:	b212      	sxth	r2, r2
9001733e:	4296      	cmp	r6, r2
90017340:	bfb8      	it	lt
90017342:	4616      	movlt	r6, r2
90017344:	e7f0      	b.n	90017328 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
90017346:	4b8c      	ldr	r3, [pc, #560]	; (90017578 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
90017348:	f8df 9228 	ldr.w	r9, [pc, #552]	; 90017574 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>
9001734c:	881b      	ldrh	r3, [r3, #0]
9001734e:	2b0f      	cmp	r3, #15
90017350:	bf8c      	ite	hi
90017352:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
90017356:	f04f 0b01 	movls.w	fp, #1
9001735a:	2300      	movs	r3, #0
9001735c:	e9cd 3305 	strd	r3, r3, [sp, #20]
90017360:	f8bd 7016 	ldrh.w	r7, [sp, #22]
90017364:	f8bd 001a 	ldrh.w	r0, [sp, #26]
90017368:	4b82      	ldr	r3, [pc, #520]	; (90017574 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
9001736a:	4438      	add	r0, r7
9001736c:	b207      	sxth	r7, r0
9001736e:	6818      	ldr	r0, [r3, #0]
90017370:	42b7      	cmp	r7, r6
90017372:	6803      	ldr	r3, [r0, #0]
90017374:	f280 8083 	bge.w	9001747e <_ZN8touchgfx11Application15drawCachedAreasEv+0x256>
90017378:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
9001737c:	4798      	blx	r3
9001737e:	eb07 030b 	add.w	r3, r7, fp
90017382:	4298      	cmp	r0, r3
90017384:	da07      	bge.n	90017396 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
90017386:	42b0      	cmp	r0, r6
90017388:	da05      	bge.n	90017396 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
9001738a:	4287      	cmp	r7, r0
9001738c:	dd6c      	ble.n	90017468 <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
9001738e:	2f00      	cmp	r7, #0
90017390:	dd6a      	ble.n	90017468 <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
90017392:	4630      	mov	r0, r6
90017394:	e004      	b.n	900173a0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x178>
90017396:	4287      	cmp	r7, r0
90017398:	dcfb      	bgt.n	90017392 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16a>
9001739a:	42b0      	cmp	r0, r6
9001739c:	bfa8      	it	ge
9001739e:	4630      	movge	r0, r6
900173a0:	4b76      	ldr	r3, [pc, #472]	; (9001757c <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
900173a2:	1bc0      	subs	r0, r0, r7
900173a4:	2200      	movs	r2, #0
900173a6:	f8ad 7016 	strh.w	r7, [sp, #22]
900173aa:	f9b3 3000 	ldrsh.w	r3, [r3]
900173ae:	882f      	ldrh	r7, [r5, #0]
900173b0:	f8ad 2014 	strh.w	r2, [sp, #20]
900173b4:	f8ad 3018 	strh.w	r3, [sp, #24]
900173b8:	f8ad 001a 	strh.w	r0, [sp, #26]
900173bc:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
900173c0:	42bb      	cmp	r3, r7
900173c2:	d9cd      	bls.n	90017360 <_ZN8touchgfx11Application15drawCachedAreasEv+0x138>
900173c4:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
900173c8:	ab07      	add	r3, sp, #28
900173ca:	f852 0fac 	ldr.w	r0, [r2, #172]!
900173ce:	6851      	ldr	r1, [r2, #4]
900173d0:	c303      	stmia	r3!, {r0, r1}
900173d2:	a905      	add	r1, sp, #20
900173d4:	a807      	add	r0, sp, #28
900173d6:	f7ff f986 	bl	900166e6 <_ZNK8touchgfx4Rect9intersectERKS0_>
900173da:	2800      	cmp	r0, #0
900173dc:	d04c      	beq.n	90017478 <_ZN8touchgfx11Application15drawCachedAreasEv+0x250>
900173de:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
900173e2:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
900173e6:	f8bd a020 	ldrh.w	sl, [sp, #32]
900173ea:	4686      	mov	lr, r0
900173ec:	4290      	cmp	r0, r2
900173ee:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
900173f2:	4450      	add	r0, sl
900173f4:	f8bd a018 	ldrh.w	sl, [sp, #24]
900173f8:	bfb8      	it	lt
900173fa:	4696      	movlt	lr, r2
900173fc:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
90017400:	4452      	add	r2, sl
90017402:	b280      	uxth	r0, r0
90017404:	4299      	cmp	r1, r3
90017406:	468c      	mov	ip, r1
90017408:	b292      	uxth	r2, r2
9001740a:	9302      	str	r3, [sp, #8]
9001740c:	bfb8      	it	lt
9001740e:	469c      	movlt	ip, r3
90017410:	b203      	sxth	r3, r0
90017412:	fa0f fa82 	sxth.w	sl, r2
90017416:	f8ad e01c 	strh.w	lr, [sp, #28]
9001741a:	f8ad c01e 	strh.w	ip, [sp, #30]
9001741e:	4553      	cmp	r3, sl
90017420:	bfb8      	it	lt
90017422:	4602      	movlt	r2, r0
90017424:	9b02      	ldr	r3, [sp, #8]
90017426:	eba2 020e 	sub.w	r2, r2, lr
9001742a:	f8ad 2020 	strh.w	r2, [sp, #32]
9001742e:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
90017432:	4411      	add	r1, r2
90017434:	f8bd 201a 	ldrh.w	r2, [sp, #26]
90017438:	4413      	add	r3, r2
9001743a:	b289      	uxth	r1, r1
9001743c:	b29b      	uxth	r3, r3
9001743e:	b208      	sxth	r0, r1
90017440:	b21a      	sxth	r2, r3
90017442:	4290      	cmp	r0, r2
90017444:	bfb8      	it	lt
90017446:	460b      	movlt	r3, r1
90017448:	eba3 030c 	sub.w	r3, r3, ip
9001744c:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
90017450:	a807      	add	r0, sp, #28
90017452:	f7fa f840 	bl	900114d6 <_ZNK8touchgfx4Rect7isEmptyEv>
90017456:	b920      	cbnz	r0, 90017462 <_ZN8touchgfx11Application15drawCachedAreasEv+0x23a>
90017458:	6823      	ldr	r3, [r4, #0]
9001745a:	a907      	add	r1, sp, #28
9001745c:	4620      	mov	r0, r4
9001745e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
90017460:	4798      	blx	r3
90017462:	3701      	adds	r7, #1
90017464:	b2bf      	uxth	r7, r7
90017466:	e7a9      	b.n	900173bc <_ZN8touchgfx11Application15drawCachedAreasEv+0x194>
90017468:	f8d9 0000 	ldr.w	r0, [r9]
9001746c:	2101      	movs	r1, #1
9001746e:	6803      	ldr	r3, [r0, #0]
90017470:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
90017474:	4798      	blx	r3
90017476:	e773      	b.n	90017360 <_ZN8touchgfx11Application15drawCachedAreasEv+0x138>
90017478:	e9cd 0007 	strd	r0, r0, [sp, #28]
9001747c:	e7e8      	b.n	90017450 <_ZN8touchgfx11Application15drawCachedAreasEv+0x228>
9001747e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90017480:	4798      	blx	r3
90017482:	4b3f      	ldr	r3, [pc, #252]	; (90017580 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
90017484:	781b      	ldrb	r3, [r3, #0]
90017486:	2b00      	cmp	r3, #0
90017488:	f43f af2b 	beq.w	900172e2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
9001748c:	2300      	movs	r3, #0
9001748e:	f104 00ee 	add.w	r0, r4, #238	; 0xee
90017492:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
90017496:	882b      	ldrh	r3, [r5, #0]
90017498:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
9001749c:	42ab      	cmp	r3, r5
9001749e:	f4bf af20 	bcs.w	900172e2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
900174a2:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
900174a6:	2907      	cmp	r1, #7
900174a8:	d814      	bhi.n	900174d4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ac>
900174aa:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
900174ae:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
900174b2:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
900174b6:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
900174ba:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
900174be:	1c4a      	adds	r2, r1, #1
900174c0:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
900174c4:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
900174c8:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
900174cc:	f8a2 c002 	strh.w	ip, [r2, #2]
900174d0:	8097      	strh	r7, [r2, #4]
900174d2:	80d6      	strh	r6, [r2, #6]
900174d4:	3301      	adds	r3, #1
900174d6:	b29b      	uxth	r3, r3
900174d8:	e7e0      	b.n	9001749c <_ZN8touchgfx11Application15drawCachedAreasEv+0x274>
900174da:	2b02      	cmp	r3, #2
900174dc:	f040 8133 	bne.w	90017746 <_ZN8touchgfx11Application15drawCachedAreasEv+0x51e>
900174e0:	4b28      	ldr	r3, [pc, #160]	; (90017584 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
900174e2:	f104 0aac 	add.w	sl, r4, #172	; 0xac
900174e6:	781b      	ldrb	r3, [r3, #0]
900174e8:	2b01      	cmp	r3, #1
900174ea:	f000 8098 	beq.w	9001761e <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
900174ee:	882a      	ldrh	r2, [r5, #0]
900174f0:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	; 0xec
900174f4:	3201      	adds	r2, #1
900174f6:	b292      	uxth	r2, r2
900174f8:	2900      	cmp	r1, #0
900174fa:	d0c2      	beq.n	90017482 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
900174fc:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	; 0xae
90017500:	4694      	mov	ip, r2
90017502:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
90017506:	f04f 0900 	mov.w	r9, #0
9001750a:	441e      	add	r6, r3
9001750c:	b236      	sxth	r6, r6
9001750e:	fa1f f38c 	uxth.w	r3, ip
90017512:	ea4f 07c9 	mov.w	r7, r9, lsl #3
90017516:	4299      	cmp	r1, r3
90017518:	f240 80be 	bls.w	90017698 <_ZN8touchgfx11Application15drawCachedAreasEv+0x470>
9001751c:	4427      	add	r7, r4
9001751e:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
90017522:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
90017526:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	; 0xae
9001752a:	4283      	cmp	r3, r0
9001752c:	f340 80a0 	ble.w	90017670 <_ZN8touchgfx11Application15drawCachedAreasEv+0x448>
90017530:	f8be 60b2 	ldrh.w	r6, [lr, #178]	; 0xb2
90017534:	46e1      	mov	r9, ip
90017536:	4406      	add	r6, r0
90017538:	b236      	sxth	r6, r6
9001753a:	429e      	cmp	r6, r3
9001753c:	bfa8      	it	ge
9001753e:	461e      	movge	r6, r3
90017540:	f10c 0c01 	add.w	ip, ip, #1
90017544:	e7e3      	b.n	9001750e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2e6>
90017546:	d10a      	bne.n	9001755e <_ZN8touchgfx11Application15drawCachedAreasEv+0x336>
90017548:	4562      	cmp	r2, ip
9001754a:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	; 0xb2
9001754e:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	; 0xb2
90017552:	bfb8      	it	lt
90017554:	4662      	movlt	r2, ip
90017556:	4288      	cmp	r0, r1
90017558:	bfb8      	it	lt
9001755a:	461f      	movlt	r7, r3
9001755c:	e086      	b.n	9001766c <_ZN8touchgfx11Application15drawCachedAreasEv+0x444>
9001755e:	428a      	cmp	r2, r1
90017560:	bfb8      	it	lt
90017562:	460a      	movlt	r2, r1
90017564:	e082      	b.n	9001766c <_ZN8touchgfx11Application15drawCachedAreasEv+0x444>
90017566:	bf00      	nop
90017568:	24039874 	.word	0x24039874
9001756c:	24039880 	.word	0x24039880
90017570:	24000080 	.word	0x24000080
90017574:	24039834 	.word	0x24039834
90017578:	2403982a 	.word	0x2403982a
9001757c:	24039828 	.word	0x24039828
90017580:	24039832 	.word	0x24039832
90017584:	2403982c 	.word	0x2403982c
90017588:	19a1      	adds	r1, r4, r6
9001758a:	ab07      	add	r3, sp, #28
9001758c:	f851 0fac 	ldr.w	r0, [r1, #172]!
90017590:	6849      	ldr	r1, [r1, #4]
90017592:	c303      	stmia	r3!, {r0, r1}
90017594:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
90017598:	a807      	add	r0, sp, #28
9001759a:	f8bd 101c 	ldrh.w	r1, [sp, #28]
9001759e:	2b13      	cmp	r3, #19
900175a0:	440b      	add	r3, r1
900175a2:	bfd8      	it	le
900175a4:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
900175a8:	1a9b      	subs	r3, r3, r2
900175aa:	f8ad 201c 	strh.w	r2, [sp, #28]
900175ae:	f8ad 3020 	strh.w	r3, [sp, #32]
900175b2:	f7fe ffc1 	bl	90016538 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
900175b6:	a807      	add	r0, sp, #28
900175b8:	f7f9 ff8d 	bl	900114d6 <_ZNK8touchgfx4Rect7isEmptyEv>
900175bc:	bb78      	cbnz	r0, 9001761e <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
900175be:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
900175c2:	4426      	add	r6, r4
900175c4:	f8d9 0000 	ldr.w	r0, [r9]
900175c8:	f1bc 0f14 	cmp.w	ip, #20
900175cc:	f8bd 3020 	ldrh.w	r3, [sp, #32]
900175d0:	f8d0 e000 	ldr.w	lr, [r0]
900175d4:	bfa8      	it	ge
900175d6:	f04f 0c14 	movge.w	ip, #20
900175da:	f8bd 201e 	ldrh.w	r2, [sp, #30]
900175de:	f8bd 101c 	ldrh.w	r1, [sp, #28]
900175e2:	fa1f fc8c 	uxth.w	ip, ip
900175e6:	f8cd c000 	str.w	ip, [sp]
900175ea:	f8de b090 	ldr.w	fp, [lr, #144]	; 0x90
900175ee:	47d8      	blx	fp
900175f0:	4683      	mov	fp, r0
900175f2:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
900175f6:	a807      	add	r0, sp, #28
900175f8:	f7fe ff84 	bl	90016504 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
900175fc:	6823      	ldr	r3, [r4, #0]
900175fe:	4620      	mov	r0, r4
90017600:	a907      	add	r1, sp, #28
90017602:	6c9b      	ldr	r3, [r3, #72]	; 0x48
90017604:	4798      	blx	r3
90017606:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
9001760a:	eba0 000b 	sub.w	r0, r0, fp
9001760e:	b200      	sxth	r0, r0
90017610:	f8a6 00b0 	strh.w	r0, [r6, #176]	; 0xb0
90017614:	b918      	cbnz	r0, 9001761e <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
90017616:	b2b9      	uxth	r1, r7
90017618:	4650      	mov	r0, sl
9001761a:	f7ff fa7b 	bl	90016b14 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
9001761e:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
90017622:	f1bb 0f00 	cmp.w	fp, #0
90017626:	f43f af2c 	beq.w	90017482 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
9001762a:	882b      	ldrh	r3, [r5, #0]
9001762c:	2700      	movs	r7, #0
9001762e:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
90017632:	3301      	adds	r3, #1
90017634:	b29b      	uxth	r3, r3
90017636:	b299      	uxth	r1, r3
90017638:	00fe      	lsls	r6, r7, #3
9001763a:	458b      	cmp	fp, r1
9001763c:	d9a4      	bls.n	90017588 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>
9001763e:	4426      	add	r6, r4
90017640:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
90017644:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	; 0xac
90017648:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
9001764c:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	; 0xac
90017650:	4408      	add	r0, r1
90017652:	f8be 10b0 	ldrh.w	r1, [lr, #176]	; 0xb0
90017656:	4461      	add	r1, ip
90017658:	b200      	sxth	r0, r0
9001765a:	b209      	sxth	r1, r1
9001765c:	4288      	cmp	r0, r1
9001765e:	f6bf af72 	bge.w	90017546 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31e>
90017662:	4584      	cmp	ip, r0
90017664:	4662      	mov	r2, ip
90017666:	461f      	mov	r7, r3
90017668:	bfb8      	it	lt
9001766a:	4602      	movlt	r2, r0
9001766c:	3301      	adds	r3, #1
9001766e:	e7e2      	b.n	90017636 <_ZN8touchgfx11Application15drawCachedAreasEv+0x40e>
90017670:	d10e      	bne.n	90017690 <_ZN8touchgfx11Application15drawCachedAreasEv+0x468>
90017672:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
90017676:	f8be e0b2 	ldrh.w	lr, [lr, #178]	; 0xb2
9001767a:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
9001767e:	4473      	add	r3, lr
90017680:	b21b      	sxth	r3, r3
90017682:	429e      	cmp	r6, r3
90017684:	bfa8      	it	ge
90017686:	461e      	movge	r6, r3
90017688:	4287      	cmp	r7, r0
9001768a:	bfb8      	it	lt
9001768c:	46e1      	movlt	r9, ip
9001768e:	e757      	b.n	90017540 <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
90017690:	4286      	cmp	r6, r0
90017692:	bfa8      	it	ge
90017694:	4606      	movge	r6, r0
90017696:	e753      	b.n	90017540 <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
90017698:	eb0a 0007 	add.w	r0, sl, r7
9001769c:	4427      	add	r7, r4
9001769e:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	; 0xb2
900176a2:	f1bb 0f13 	cmp.w	fp, #19
900176a6:	bfdc      	itt	le
900176a8:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	; 0xae
900176ac:	445e      	addle	r6, fp
900176ae:	e9cd 2102 	strd	r2, r1, [sp, #8]
900176b2:	bfd8      	it	le
900176b4:	b236      	sxthle	r6, r6
900176b6:	f7f9 ff0e 	bl	900114d6 <_ZNK8touchgfx4Rect7isEmptyEv>
900176ba:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
900176be:	2800      	cmp	r0, #0
900176c0:	f47f af1a 	bne.w	900174f8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d0>
900176c4:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
900176c8:	fa1f fb8b 	uxth.w	fp, fp
900176cc:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
900176d0:	1ab6      	subs	r6, r6, r2
900176d2:	4829      	ldr	r0, [pc, #164]	; (90017778 <_ZN8touchgfx11Application15drawCachedAreasEv+0x550>)
900176d4:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
900176d8:	2e14      	cmp	r6, #20
900176da:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
900176de:	6800      	ldr	r0, [r0, #0]
900176e0:	bfa8      	it	ge
900176e2:	2614      	movge	r6, #20
900176e4:	f8ad 101c 	strh.w	r1, [sp, #28]
900176e8:	f8ad 201e 	strh.w	r2, [sp, #30]
900176ec:	b289      	uxth	r1, r1
900176ee:	f8ad 3020 	strh.w	r3, [sp, #32]
900176f2:	b2b6      	uxth	r6, r6
900176f4:	f8d0 c000 	ldr.w	ip, [r0]
900176f8:	b292      	uxth	r2, r2
900176fa:	455e      	cmp	r6, fp
900176fc:	bf94      	ite	ls
900176fe:	9600      	strls	r6, [sp, #0]
90017700:	f8cd b000 	strhi.w	fp, [sp]
90017704:	b29b      	uxth	r3, r3
90017706:	f8dc 6090 	ldr.w	r6, [ip, #144]	; 0x90
9001770a:	47b0      	blx	r6
9001770c:	6823      	ldr	r3, [r4, #0]
9001770e:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
90017712:	a907      	add	r1, sp, #28
90017714:	6c9b      	ldr	r3, [r3, #72]	; 0x48
90017716:	4620      	mov	r0, r4
90017718:	4798      	blx	r3
9001771a:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
9001771e:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
90017722:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
90017726:	1a5b      	subs	r3, r3, r1
90017728:	440a      	add	r2, r1
9001772a:	b21b      	sxth	r3, r3
9001772c:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
90017730:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
90017734:	2b00      	cmp	r3, #0
90017736:	f47f aeda 	bne.w	900174ee <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c6>
9001773a:	fa1f f189 	uxth.w	r1, r9
9001773e:	4650      	mov	r0, sl
90017740:	f7ff f9e8 	bl	90016b14 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90017744:	e6d3      	b.n	900174ee <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c6>
90017746:	882e      	ldrh	r6, [r5, #0]
90017748:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
9001774c:	42b3      	cmp	r3, r6
9001774e:	f67f ae98 	bls.w	90017482 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
90017752:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
90017756:	ab07      	add	r3, sp, #28
90017758:	f852 0fac 	ldr.w	r0, [r2, #172]!
9001775c:	6851      	ldr	r1, [r2, #4]
9001775e:	c303      	stmia	r3!, {r0, r1}
90017760:	a807      	add	r0, sp, #28
90017762:	f7f9 feb8 	bl	900114d6 <_ZNK8touchgfx4Rect7isEmptyEv>
90017766:	b920      	cbnz	r0, 90017772 <_ZN8touchgfx11Application15drawCachedAreasEv+0x54a>
90017768:	6823      	ldr	r3, [r4, #0]
9001776a:	a907      	add	r1, sp, #28
9001776c:	4620      	mov	r0, r4
9001776e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
90017770:	4798      	blx	r3
90017772:	3601      	adds	r6, #1
90017774:	b2b6      	uxth	r6, r6
90017776:	e7e7      	b.n	90017748 <_ZN8touchgfx11Application15drawCachedAreasEv+0x520>
90017778:	24039834 	.word	0x24039834

9001777c <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
9001777c:	4b03      	ldr	r3, [pc, #12]	; (9001778c <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
9001777e:	2200      	movs	r2, #0
90017780:	801a      	strh	r2, [r3, #0]
90017782:	805a      	strh	r2, [r3, #2]
90017784:	809a      	strh	r2, [r3, #4]
90017786:	80da      	strh	r2, [r3, #6]
90017788:	4770      	bx	lr
9001778a:	bf00      	nop
9001778c:	24039880 	.word	0x24039880

90017790 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
90017790:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90017794:	b09d      	sub	sp, #116	; 0x74
90017796:	4606      	mov	r6, r0
90017798:	4614      	mov	r4, r2
9001779a:	468a      	mov	sl, r1
9001779c:	a803      	add	r0, sp, #12
9001779e:	461d      	mov	r5, r3
900177a0:	f000 fe9d 	bl	900184de <_ZN8touchgfx12TextProviderC1Ev>
900177a4:	6833      	ldr	r3, [r6, #0]
900177a6:	4630      	mov	r0, r6
900177a8:	f242 0b0b 	movw	fp, #8203	; 0x200b
900177ac:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
900177ae:	4798      	blx	r3
900177b0:	6833      	ldr	r3, [r6, #0]
900177b2:	4607      	mov	r7, r0
900177b4:	4630      	mov	r0, r6
900177b6:	6d1b      	ldr	r3, [r3, #80]	; 0x50
900177b8:	4798      	blx	r3
900177ba:	462a      	mov	r2, r5
900177bc:	2500      	movs	r5, #0
900177be:	4621      	mov	r1, r4
900177c0:	9000      	str	r0, [sp, #0]
900177c2:	463b      	mov	r3, r7
900177c4:	462c      	mov	r4, r5
900177c6:	46a9      	mov	r9, r5
900177c8:	46a8      	mov	r8, r5
900177ca:	a803      	add	r0, sp, #12
900177cc:	f000 fee2 	bl	90018594 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
900177d0:	2300      	movs	r3, #0
900177d2:	9302      	str	r3, [sp, #8]
900177d4:	f64f 63ff 	movw	r3, #65279	; 0xfeff
900177d8:	429c      	cmp	r4, r3
900177da:	d002      	beq.n	900177e2 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
900177dc:	455c      	cmp	r4, fp
900177de:	bf18      	it	ne
900177e0:	4625      	movne	r5, r4
900177e2:	ab02      	add	r3, sp, #8
900177e4:	4632      	mov	r2, r6
900177e6:	4651      	mov	r1, sl
900177e8:	a803      	add	r0, sp, #12
900177ea:	f001 f9d9 	bl	90018ba0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
900177ee:	4604      	mov	r4, r0
900177f0:	b108      	cbz	r0, 900177f6 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
900177f2:	280a      	cmp	r0, #10
900177f4:	d10a      	bne.n	9001780c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
900177f6:	45c1      	cmp	r9, r8
900177f8:	bf38      	it	cc
900177fa:	46c1      	movcc	r9, r8
900177fc:	f04f 0800 	mov.w	r8, #0
90017800:	2c00      	cmp	r4, #0
90017802:	d1e5      	bne.n	900177d0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
90017804:	4648      	mov	r0, r9
90017806:	b01d      	add	sp, #116	; 0x74
90017808:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001780c:	9a02      	ldr	r2, [sp, #8]
9001780e:	2a00      	cmp	r2, #0
90017810:	d0de      	beq.n	900177d0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
90017812:	7b57      	ldrb	r7, [r2, #13]
90017814:	4629      	mov	r1, r5
90017816:	6833      	ldr	r3, [r6, #0]
90017818:	007f      	lsls	r7, r7, #1
9001781a:	8894      	ldrh	r4, [r2, #4]
9001781c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
9001781e:	f407 7080 	and.w	r0, r7, #256	; 0x100
90017822:	7a97      	ldrb	r7, [r2, #10]
90017824:	4307      	orrs	r7, r0
90017826:	4630      	mov	r0, r6
90017828:	4798      	blx	r3
9001782a:	4438      	add	r0, r7
9001782c:	4480      	add	r8, r0
9001782e:	fa1f f888 	uxth.w	r8, r8
90017832:	e7e5      	b.n	90017800 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

90017834 <_ZNK8touchgfx4Font12getCharWidthEt>:
90017834:	b508      	push	{r3, lr}
90017836:	6803      	ldr	r3, [r0, #0]
90017838:	68db      	ldr	r3, [r3, #12]
9001783a:	4798      	blx	r3
9001783c:	b128      	cbz	r0, 9001784a <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
9001783e:	7b43      	ldrb	r3, [r0, #13]
90017840:	7a80      	ldrb	r0, [r0, #10]
90017842:	005b      	lsls	r3, r3, #1
90017844:	f403 7380 	and.w	r3, r3, #256	; 0x100
90017848:	4318      	orrs	r0, r3
9001784a:	bd08      	pop	{r3, pc}

9001784c <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
9001784c:	b40e      	push	{r1, r2, r3}
9001784e:	b5f0      	push	{r4, r5, r6, r7, lr}
90017850:	b09e      	sub	sp, #120	; 0x78
90017852:	4605      	mov	r5, r0
90017854:	ab23      	add	r3, sp, #140	; 0x8c
90017856:	a805      	add	r0, sp, #20
90017858:	f853 4b04 	ldr.w	r4, [r3], #4
9001785c:	9303      	str	r3, [sp, #12]
9001785e:	f000 fe3e 	bl	900184de <_ZN8touchgfx12TextProviderC1Ev>
90017862:	682b      	ldr	r3, [r5, #0]
90017864:	4628      	mov	r0, r5
90017866:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90017868:	4798      	blx	r3
9001786a:	682b      	ldr	r3, [r5, #0]
9001786c:	4606      	mov	r6, r0
9001786e:	4628      	mov	r0, r5
90017870:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90017872:	4798      	blx	r3
90017874:	4633      	mov	r3, r6
90017876:	4621      	mov	r1, r4
90017878:	ae1e      	add	r6, sp, #120	; 0x78
9001787a:	2400      	movs	r4, #0
9001787c:	9000      	str	r0, [sp, #0]
9001787e:	9a03      	ldr	r2, [sp, #12]
90017880:	a805      	add	r0, sp, #20
90017882:	f000 fe87 	bl	90018594 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90017886:	f846 4d68 	str.w	r4, [r6, #-104]!
9001788a:	462a      	mov	r2, r5
9001788c:	4633      	mov	r3, r6
9001788e:	4621      	mov	r1, r4
90017890:	a805      	add	r0, sp, #20
90017892:	f001 f985 	bl	90018ba0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
90017896:	b300      	cbz	r0, 900178da <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8e>
90017898:	280a      	cmp	r0, #10
9001789a:	d01a      	beq.n	900178d2 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
9001789c:	9f04      	ldr	r7, [sp, #16]
9001789e:	b1c7      	cbz	r7, 900178d2 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
900178a0:	7b78      	ldrb	r0, [r7, #13]
900178a2:	7a3b      	ldrb	r3, [r7, #8]
900178a4:	00c1      	lsls	r1, r0, #3
900178a6:	88ea      	ldrh	r2, [r5, #6]
900178a8:	f401 7180 	and.w	r1, r1, #256	; 0x100
900178ac:	4319      	orrs	r1, r3
900178ae:	0643      	lsls	r3, r0, #25
900178b0:	ea4f 1000 	mov.w	r0, r0, lsl #4
900178b4:	bf48      	it	mi
900178b6:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
900178ba:	f400 7080 	and.w	r0, r0, #256	; 0x100
900178be:	bf48      	it	mi
900178c0:	b219      	sxthmi	r1, r3
900178c2:	79fb      	ldrb	r3, [r7, #7]
900178c4:	4303      	orrs	r3, r0
900178c6:	4413      	add	r3, r2
900178c8:	1a5b      	subs	r3, r3, r1
900178ca:	b21b      	sxth	r3, r3
900178cc:	429c      	cmp	r4, r3
900178ce:	bfb8      	it	lt
900178d0:	461c      	movlt	r4, r3
900178d2:	4633      	mov	r3, r6
900178d4:	462a      	mov	r2, r5
900178d6:	2100      	movs	r1, #0
900178d8:	e7da      	b.n	90017890 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
900178da:	b2a0      	uxth	r0, r4
900178dc:	b01e      	add	sp, #120	; 0x78
900178de:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
900178e2:	b003      	add	sp, #12
900178e4:	4770      	bx	lr

900178e6 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
900178e6:	7a43      	ldrb	r3, [r0, #9]
900178e8:	8880      	ldrh	r0, [r0, #4]
900178ea:	4418      	add	r0, r3
900178ec:	b280      	uxth	r0, r0
900178ee:	4770      	bx	lr

900178f0 <_ZNK8touchgfx4Font13getFontHeightEv>:
900178f0:	6803      	ldr	r3, [r0, #0]
900178f2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
900178f4:	4718      	bx	r3

900178f6 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
900178f6:	b40e      	push	{r1, r2, r3}
900178f8:	b570      	push	{r4, r5, r6, lr}
900178fa:	b09d      	sub	sp, #116	; 0x74
900178fc:	4604      	mov	r4, r0
900178fe:	ab21      	add	r3, sp, #132	; 0x84
90017900:	a803      	add	r0, sp, #12
90017902:	f853 5b04 	ldr.w	r5, [r3], #4
90017906:	9302      	str	r3, [sp, #8]
90017908:	f000 fde9 	bl	900184de <_ZN8touchgfx12TextProviderC1Ev>
9001790c:	6823      	ldr	r3, [r4, #0]
9001790e:	4620      	mov	r0, r4
90017910:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90017912:	4798      	blx	r3
90017914:	6823      	ldr	r3, [r4, #0]
90017916:	4606      	mov	r6, r0
90017918:	4620      	mov	r0, r4
9001791a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
9001791c:	2401      	movs	r4, #1
9001791e:	4798      	blx	r3
90017920:	4633      	mov	r3, r6
90017922:	9000      	str	r0, [sp, #0]
90017924:	4629      	mov	r1, r5
90017926:	9a02      	ldr	r2, [sp, #8]
90017928:	a803      	add	r0, sp, #12
9001792a:	f000 fe33 	bl	90018594 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
9001792e:	a803      	add	r0, sp, #12
90017930:	f001 fa02 	bl	90018d38 <_ZN8touchgfx12TextProvider11getNextCharEv>
90017934:	b2a3      	uxth	r3, r4
90017936:	b138      	cbz	r0, 90017948 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x52>
90017938:	280a      	cmp	r0, #10
9001793a:	a803      	add	r0, sp, #12
9001793c:	bf04      	itt	eq
9001793e:	3301      	addeq	r3, #1
90017940:	b21c      	sxtheq	r4, r3
90017942:	f001 f9f9 	bl	90018d38 <_ZN8touchgfx12TextProvider11getNextCharEv>
90017946:	e7f5      	b.n	90017934 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
90017948:	4618      	mov	r0, r3
9001794a:	b01d      	add	sp, #116	; 0x74
9001794c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90017950:	b003      	add	sp, #12
90017952:	4770      	bx	lr

90017954 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
90017954:	b40e      	push	{r1, r2, r3}
90017956:	b5f0      	push	{r4, r5, r6, r7, lr}
90017958:	b09e      	sub	sp, #120	; 0x78
9001795a:	4604      	mov	r4, r0
9001795c:	ab23      	add	r3, sp, #140	; 0x8c
9001795e:	a805      	add	r0, sp, #20
90017960:	f853 5b04 	ldr.w	r5, [r3], #4
90017964:	9303      	str	r3, [sp, #12]
90017966:	f000 fdba 	bl	900184de <_ZN8touchgfx12TextProviderC1Ev>
9001796a:	6823      	ldr	r3, [r4, #0]
9001796c:	4620      	mov	r0, r4
9001796e:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90017970:	4798      	blx	r3
90017972:	6823      	ldr	r3, [r4, #0]
90017974:	4606      	mov	r6, r0
90017976:	4620      	mov	r0, r4
90017978:	6d1b      	ldr	r3, [r3, #80]	; 0x50
9001797a:	4798      	blx	r3
9001797c:	4633      	mov	r3, r6
9001797e:	4629      	mov	r1, r5
90017980:	9000      	str	r0, [sp, #0]
90017982:	9a03      	ldr	r2, [sp, #12]
90017984:	a805      	add	r0, sp, #20
90017986:	f000 fe05 	bl	90018594 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
9001798a:	ad1e      	add	r5, sp, #120	; 0x78
9001798c:	2100      	movs	r1, #0
9001798e:	f647 76ff 	movw	r6, #32767	; 0x7fff
90017992:	4622      	mov	r2, r4
90017994:	a805      	add	r0, sp, #20
90017996:	f845 1d68 	str.w	r1, [r5, #-104]!
9001799a:	462b      	mov	r3, r5
9001799c:	f001 f900 	bl	90018ba0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
900179a0:	b1d8      	cbz	r0, 900179da <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
900179a2:	280a      	cmp	r0, #10
900179a4:	d012      	beq.n	900179cc <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
900179a6:	9804      	ldr	r0, [sp, #16]
900179a8:	b180      	cbz	r0, 900179cc <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
900179aa:	7b47      	ldrb	r7, [r0, #13]
900179ac:	88e2      	ldrh	r2, [r4, #6]
900179ae:	00fb      	lsls	r3, r7, #3
900179b0:	f403 7180 	and.w	r1, r3, #256	; 0x100
900179b4:	7a03      	ldrb	r3, [r0, #8]
900179b6:	430b      	orrs	r3, r1
900179b8:	0679      	lsls	r1, r7, #25
900179ba:	bf44      	itt	mi
900179bc:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
900179c0:	b21b      	sxthmi	r3, r3
900179c2:	1ad3      	subs	r3, r2, r3
900179c4:	b21b      	sxth	r3, r3
900179c6:	429e      	cmp	r6, r3
900179c8:	bfa8      	it	ge
900179ca:	461e      	movge	r6, r3
900179cc:	462b      	mov	r3, r5
900179ce:	4622      	mov	r2, r4
900179d0:	2100      	movs	r1, #0
900179d2:	a805      	add	r0, sp, #20
900179d4:	f001 f8e4 	bl	90018ba0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
900179d8:	e7e2      	b.n	900179a0 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
900179da:	4630      	mov	r0, r6
900179dc:	b01e      	add	sp, #120	; 0x78
900179de:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
900179e2:	b003      	add	sp, #12
900179e4:	4770      	bx	lr

900179e6 <_ZNK8touchgfx8Drawable10invalidateEv>:
900179e6:	b513      	push	{r0, r1, r4, lr}
900179e8:	6803      	ldr	r3, [r0, #0]
900179ea:	2400      	movs	r4, #0
900179ec:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
900179f0:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
900179f4:	f8ad 1004 	strh.w	r1, [sp, #4]
900179f8:	4669      	mov	r1, sp
900179fa:	691b      	ldr	r3, [r3, #16]
900179fc:	9400      	str	r4, [sp, #0]
900179fe:	f8ad 2006 	strh.w	r2, [sp, #6]
90017a02:	4798      	blx	r3
90017a04:	b002      	add	sp, #8
90017a06:	bd10      	pop	{r4, pc}

90017a08 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
90017a08:	b538      	push	{r3, r4, r5, lr}
90017a0a:	680b      	ldr	r3, [r1, #0]
90017a0c:	460c      	mov	r4, r1
90017a0e:	4605      	mov	r5, r0
90017a10:	68db      	ldr	r3, [r3, #12]
90017a12:	4798      	blx	r3
90017a14:	6823      	ldr	r3, [r4, #0]
90017a16:	4620      	mov	r0, r4
90017a18:	4629      	mov	r1, r5
90017a1a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90017a1c:	4798      	blx	r3
90017a1e:	4628      	mov	r0, r5
90017a20:	bd38      	pop	{r3, r4, r5, pc}

90017a22 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
90017a22:	b410      	push	{r4}
90017a24:	880a      	ldrh	r2, [r1, #0]
90017a26:	8884      	ldrh	r4, [r0, #4]
90017a28:	4422      	add	r2, r4
90017a2a:	800a      	strh	r2, [r1, #0]
90017a2c:	884a      	ldrh	r2, [r1, #2]
90017a2e:	88c4      	ldrh	r4, [r0, #6]
90017a30:	4422      	add	r2, r4
90017a32:	804a      	strh	r2, [r1, #2]
90017a34:	6940      	ldr	r0, [r0, #20]
90017a36:	b120      	cbz	r0, 90017a42 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
90017a38:	6803      	ldr	r3, [r0, #0]
90017a3a:	f85d 4b04 	ldr.w	r4, [sp], #4
90017a3e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90017a40:	4718      	bx	r3
90017a42:	f85d 4b04 	ldr.w	r4, [sp], #4
90017a46:	4770      	bx	lr

90017a48 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
90017a48:	b570      	push	{r4, r5, r6, lr}
90017a4a:	8882      	ldrh	r2, [r0, #4]
90017a4c:	460c      	mov	r4, r1
90017a4e:	880b      	ldrh	r3, [r1, #0]
90017a50:	4605      	mov	r5, r0
90017a52:	4413      	add	r3, r2
90017a54:	800b      	strh	r3, [r1, #0]
90017a56:	884b      	ldrh	r3, [r1, #2]
90017a58:	88c2      	ldrh	r2, [r0, #6]
90017a5a:	4413      	add	r3, r2
90017a5c:	804b      	strh	r3, [r1, #2]
90017a5e:	1d01      	adds	r1, r0, #4
90017a60:	4620      	mov	r0, r4
90017a62:	f7f9 fcf5 	bl	90011450 <_ZN8touchgfx4RectaNERKS0_>
90017a66:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
90017a6a:	2b00      	cmp	r3, #0
90017a6c:	dd0b      	ble.n	90017a86 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
90017a6e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
90017a72:	2b00      	cmp	r3, #0
90017a74:	dd07      	ble.n	90017a86 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
90017a76:	6968      	ldr	r0, [r5, #20]
90017a78:	b128      	cbz	r0, 90017a86 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
90017a7a:	6803      	ldr	r3, [r0, #0]
90017a7c:	4621      	mov	r1, r4
90017a7e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90017a80:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90017a84:	4718      	bx	r3
90017a86:	bd70      	pop	{r4, r5, r6, pc}

90017a88 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
90017a88:	b570      	push	{r4, r5, r6, lr}
90017a8a:	8882      	ldrh	r2, [r0, #4]
90017a8c:	460c      	mov	r4, r1
90017a8e:	880b      	ldrh	r3, [r1, #0]
90017a90:	4605      	mov	r5, r0
90017a92:	4413      	add	r3, r2
90017a94:	800b      	strh	r3, [r1, #0]
90017a96:	884b      	ldrh	r3, [r1, #2]
90017a98:	88c2      	ldrh	r2, [r0, #6]
90017a9a:	4413      	add	r3, r2
90017a9c:	804b      	strh	r3, [r1, #2]
90017a9e:	1d01      	adds	r1, r0, #4
90017aa0:	4620      	mov	r0, r4
90017aa2:	f7f9 fcd5 	bl	90011450 <_ZN8touchgfx4RectaNERKS0_>
90017aa6:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
90017aaa:	2b00      	cmp	r3, #0
90017aac:	dd19      	ble.n	90017ae2 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
90017aae:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
90017ab2:	2b00      	cmp	r3, #0
90017ab4:	dd15      	ble.n	90017ae2 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
90017ab6:	6968      	ldr	r0, [r5, #20]
90017ab8:	b128      	cbz	r0, 90017ac6 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
90017aba:	6803      	ldr	r3, [r0, #0]
90017abc:	4621      	mov	r1, r4
90017abe:	691b      	ldr	r3, [r3, #16]
90017ac0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90017ac4:	4718      	bx	r3
90017ac6:	4b07      	ldr	r3, [pc, #28]	; (90017ae4 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
90017ac8:	681b      	ldr	r3, [r3, #0]
90017aca:	3304      	adds	r3, #4
90017acc:	429d      	cmp	r5, r3
90017ace:	d108      	bne.n	90017ae2 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
90017ad0:	f7fe fee8 	bl	900168a4 <_ZN8touchgfx11Application11getInstanceEv>
90017ad4:	6803      	ldr	r3, [r0, #0]
90017ad6:	6821      	ldr	r1, [r4, #0]
90017ad8:	6862      	ldr	r2, [r4, #4]
90017ada:	6c1b      	ldr	r3, [r3, #64]	; 0x40
90017adc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90017ae0:	4718      	bx	r3
90017ae2:	bd70      	pop	{r4, r5, r6, pc}
90017ae4:	24039878 	.word	0x24039878

90017ae8 <_ZN8touchgfx8Drawable12moveRelativeEss>:
90017ae8:	b570      	push	{r4, r5, r6, lr}
90017aea:	4604      	mov	r4, r0
90017aec:	4616      	mov	r6, r2
90017aee:	460d      	mov	r5, r1
90017af0:	b901      	cbnz	r1, 90017af4 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
90017af2:	b192      	cbz	r2, 90017b1a <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
90017af4:	6823      	ldr	r3, [r4, #0]
90017af6:	4620      	mov	r0, r4
90017af8:	699b      	ldr	r3, [r3, #24]
90017afa:	4798      	blx	r3
90017afc:	88e2      	ldrh	r2, [r4, #6]
90017afe:	88a1      	ldrh	r1, [r4, #4]
90017b00:	4620      	mov	r0, r4
90017b02:	4432      	add	r2, r6
90017b04:	4429      	add	r1, r5
90017b06:	b212      	sxth	r2, r2
90017b08:	b209      	sxth	r1, r1
90017b0a:	f7f9 ff77 	bl	900119fc <_ZN8touchgfx8Drawable5setXYEss>
90017b0e:	6823      	ldr	r3, [r4, #0]
90017b10:	4620      	mov	r0, r4
90017b12:	699b      	ldr	r3, [r3, #24]
90017b14:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90017b18:	4718      	bx	r3
90017b1a:	bd70      	pop	{r4, r5, r6, pc}

90017b1c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
90017b1c:	b510      	push	{r4, lr}
90017b1e:	2300      	movs	r3, #0
90017b20:	4604      	mov	r4, r0
90017b22:	4608      	mov	r0, r1
90017b24:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
90017b28:	8023      	strh	r3, [r4, #0]
90017b2a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
90017b2e:	8063      	strh	r3, [r4, #2]
90017b30:	6803      	ldr	r3, [r0, #0]
90017b32:	80a1      	strh	r1, [r4, #4]
90017b34:	4621      	mov	r1, r4
90017b36:	80e2      	strh	r2, [r4, #6]
90017b38:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90017b3a:	4798      	blx	r3
90017b3c:	4620      	mov	r0, r4
90017b3e:	bd10      	pop	{r4, pc}

90017b40 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
90017b40:	b530      	push	{r4, r5, lr}
90017b42:	8083      	strh	r3, [r0, #4]
90017b44:	f8bd 300c 	ldrh.w	r3, [sp, #12]
90017b48:	f89d 5018 	ldrb.w	r5, [sp, #24]
90017b4c:	80c3      	strh	r3, [r0, #6]
90017b4e:	f89d 3010 	ldrb.w	r3, [sp, #16]
90017b52:	6141      	str	r1, [r0, #20]
90017b54:	7203      	strb	r3, [r0, #8]
90017b56:	f89d 3014 	ldrb.w	r3, [sp, #20]
90017b5a:	8302      	strh	r2, [r0, #24]
90017b5c:	7243      	strb	r3, [r0, #9]
90017b5e:	7a83      	ldrb	r3, [r0, #10]
90017b60:	f365 0306 	bfi	r3, r5, #0, #7
90017b64:	f89d 501c 	ldrb.w	r5, [sp, #28]
90017b68:	f365 13c7 	bfi	r3, r5, #7, #1
90017b6c:	7283      	strb	r3, [r0, #10]
90017b6e:	f89d 3020 	ldrb.w	r3, [sp, #32]
90017b72:	72c3      	strb	r3, [r0, #11]
90017b74:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
90017b78:	7303      	strb	r3, [r0, #12]
90017b7a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
90017b7e:	81c3      	strh	r3, [r0, #14]
90017b80:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
90017b84:	8203      	strh	r3, [r0, #16]
90017b86:	4b01      	ldr	r3, [pc, #4]	; (90017b8c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
90017b88:	6003      	str	r3, [r0, #0]
90017b8a:	bd30      	pop	{r4, r5, pc}
90017b8c:	9002bfc0 	.word	0x9002bfc0

90017b90 <_ZNK8touchgfx9ConstFont4findEt>:
90017b90:	b5f0      	push	{r4, r5, r6, r7, lr}
90017b92:	6944      	ldr	r4, [r0, #20]
90017b94:	b3bc      	cbz	r4, 90017c06 <_ZNK8touchgfx9ConstFont4findEt+0x76>
90017b96:	88a3      	ldrh	r3, [r4, #4]
90017b98:	8b02      	ldrh	r2, [r0, #24]
90017b9a:	1acb      	subs	r3, r1, r3
90017b9c:	f102 32ff 	add.w	r2, r2, #4294967295
90017ba0:	d431      	bmi.n	90017c06 <_ZNK8touchgfx9ConstFont4findEt+0x76>
90017ba2:	4293      	cmp	r3, r2
90017ba4:	dd0c      	ble.n	90017bc0 <_ZNK8touchgfx9ConstFont4findEt+0x30>
90017ba6:	230e      	movs	r3, #14
90017ba8:	fb03 4302 	mla	r3, r3, r2, r4
90017bac:	889b      	ldrh	r3, [r3, #4]
90017bae:	1a5b      	subs	r3, r3, r1
90017bb0:	1ad3      	subs	r3, r2, r3
90017bb2:	429a      	cmp	r2, r3
90017bb4:	db27      	blt.n	90017c06 <_ZNK8touchgfx9ConstFont4findEt+0x76>
90017bb6:	2b00      	cmp	r3, #0
90017bb8:	bfbc      	itt	lt
90017bba:	2302      	movlt	r3, #2
90017bbc:	fb92 f3f3 	sdivlt	r3, r2, r3
90017bc0:	2500      	movs	r5, #0
90017bc2:	260e      	movs	r6, #14
90017bc4:	4295      	cmp	r5, r2
90017bc6:	dc1e      	bgt.n	90017c06 <_ZNK8touchgfx9ConstFont4findEt+0x76>
90017bc8:	fb06 4003 	mla	r0, r6, r3, r4
90017bcc:	8887      	ldrh	r7, [r0, #4]
90017bce:	42b9      	cmp	r1, r7
90017bd0:	d01a      	beq.n	90017c08 <_ZNK8touchgfx9ConstFont4findEt+0x78>
90017bd2:	d20d      	bcs.n	90017bf0 <_ZNK8touchgfx9ConstFont4findEt+0x60>
90017bd4:	1e5a      	subs	r2, r3, #1
90017bd6:	4295      	cmp	r5, r2
90017bd8:	dc15      	bgt.n	90017c06 <_ZNK8touchgfx9ConstFont4findEt+0x76>
90017bda:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
90017bde:	1a5b      	subs	r3, r3, r1
90017be0:	1ad3      	subs	r3, r2, r3
90017be2:	429a      	cmp	r2, r3
90017be4:	db0f      	blt.n	90017c06 <_ZNK8touchgfx9ConstFont4findEt+0x76>
90017be6:	429d      	cmp	r5, r3
90017be8:	ddec      	ble.n	90017bc4 <_ZNK8touchgfx9ConstFont4findEt+0x34>
90017bea:	1953      	adds	r3, r2, r5
90017bec:	105b      	asrs	r3, r3, #1
90017bee:	e7e9      	b.n	90017bc4 <_ZNK8touchgfx9ConstFont4findEt+0x34>
90017bf0:	1c5d      	adds	r5, r3, #1
90017bf2:	42aa      	cmp	r2, r5
90017bf4:	db07      	blt.n	90017c06 <_ZNK8touchgfx9ConstFont4findEt+0x76>
90017bf6:	8a43      	ldrh	r3, [r0, #18]
90017bf8:	1acb      	subs	r3, r1, r3
90017bfa:	442b      	add	r3, r5
90017bfc:	429d      	cmp	r5, r3
90017bfe:	dc02      	bgt.n	90017c06 <_ZNK8touchgfx9ConstFont4findEt+0x76>
90017c00:	429a      	cmp	r2, r3
90017c02:	dadf      	bge.n	90017bc4 <_ZNK8touchgfx9ConstFont4findEt+0x34>
90017c04:	e7f1      	b.n	90017bea <_ZNK8touchgfx9ConstFont4findEt+0x5a>
90017c06:	2000      	movs	r0, #0
90017c08:	bdf0      	pop	{r4, r5, r6, r7, pc}

90017c0a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
90017c0a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90017c0c:	4604      	mov	r4, r0
90017c0e:	4617      	mov	r7, r2
90017c10:	461e      	mov	r6, r3
90017c12:	b911      	cbnz	r1, 90017c1a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
90017c14:	2500      	movs	r5, #0
90017c16:	4628      	mov	r0, r5
90017c18:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90017c1a:	290a      	cmp	r1, #10
90017c1c:	d0fa      	beq.n	90017c14 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
90017c1e:	f64f 62ff 	movw	r2, #65279	; 0xfeff
90017c22:	4291      	cmp	r1, r2
90017c24:	d0f6      	beq.n	90017c14 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
90017c26:	f242 020b 	movw	r2, #8203	; 0x200b
90017c2a:	4291      	cmp	r1, r2
90017c2c:	d0f2      	beq.n	90017c14 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
90017c2e:	f7ff ffaf 	bl	90017b90 <_ZNK8touchgfx9ConstFont4findEt>
90017c32:	4605      	mov	r5, r0
90017c34:	b950      	cbnz	r0, 90017c4c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
90017c36:	6823      	ldr	r3, [r4, #0]
90017c38:	4620      	mov	r0, r4
90017c3a:	691b      	ldr	r3, [r3, #16]
90017c3c:	4798      	blx	r3
90017c3e:	4601      	mov	r1, r0
90017c40:	4620      	mov	r0, r4
90017c42:	f7ff ffa5 	bl	90017b90 <_ZNK8touchgfx9ConstFont4findEt>
90017c46:	4605      	mov	r5, r0
90017c48:	2800      	cmp	r0, #0
90017c4a:	d0e3      	beq.n	90017c14 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
90017c4c:	6823      	ldr	r3, [r4, #0]
90017c4e:	4629      	mov	r1, r5
90017c50:	4620      	mov	r0, r4
90017c52:	6d5b      	ldr	r3, [r3, #84]	; 0x54
90017c54:	4798      	blx	r3
90017c56:	6038      	str	r0, [r7, #0]
90017c58:	6823      	ldr	r3, [r4, #0]
90017c5a:	4620      	mov	r0, r4
90017c5c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90017c5e:	4798      	blx	r3
90017c60:	7030      	strb	r0, [r6, #0]
90017c62:	e7d8      	b.n	90017c16 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

90017c64 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
90017c64:	b538      	push	{r3, r4, r5, lr}
90017c66:	4605      	mov	r5, r0
90017c68:	f002 f936 	bl	90019ed8 <_ZNK8touchgfx6Bitmap9getFormatEv>
90017c6c:	4604      	mov	r4, r0
90017c6e:	4628      	mov	r0, r5
90017c70:	f002 f876 	bl	90019d60 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
90017c74:	2800      	cmp	r0, #0
90017c76:	bf14      	ite	ne
90017c78:	2002      	movne	r0, #2
90017c7a:	2000      	moveq	r0, #0
90017c7c:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
90017c80:	b280      	uxth	r0, r0
90017c82:	bd38      	pop	{r3, r4, r5, pc}

90017c84 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
90017c84:	b538      	push	{r3, r4, r5, lr}
90017c86:	4605      	mov	r5, r0
90017c88:	f002 f926 	bl	90019ed8 <_ZNK8touchgfx6Bitmap9getFormatEv>
90017c8c:	4604      	mov	r4, r0
90017c8e:	4628      	mov	r0, r5
90017c90:	f002 f866 	bl	90019d60 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
90017c94:	2800      	cmp	r0, #0
90017c96:	bf14      	ite	ne
90017c98:	2002      	movne	r0, #2
90017c9a:	2000      	moveq	r0, #0
90017c9c:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
90017ca0:	f040 0001 	orr.w	r0, r0, #1
90017ca4:	b280      	uxth	r0, r0
90017ca6:	bd38      	pop	{r3, r4, r5, pc}

90017ca8 <_ZN8touchgfx4clzuEm>:
90017ca8:	4603      	mov	r3, r0
90017caa:	b1c8      	cbz	r0, 90017ce0 <_ZN8touchgfx4clzuEm+0x38>
90017cac:	0c02      	lsrs	r2, r0, #16
90017cae:	0412      	lsls	r2, r2, #16
90017cb0:	b9a2      	cbnz	r2, 90017cdc <_ZN8touchgfx4clzuEm+0x34>
90017cb2:	0403      	lsls	r3, r0, #16
90017cb4:	2010      	movs	r0, #16
90017cb6:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
90017cba:	bf04      	itt	eq
90017cbc:	021b      	lsleq	r3, r3, #8
90017cbe:	3008      	addeq	r0, #8
90017cc0:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
90017cc4:	bf04      	itt	eq
90017cc6:	011b      	lsleq	r3, r3, #4
90017cc8:	3004      	addeq	r0, #4
90017cca:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
90017cce:	bf04      	itt	eq
90017cd0:	009b      	lsleq	r3, r3, #2
90017cd2:	3002      	addeq	r0, #2
90017cd4:	2b00      	cmp	r3, #0
90017cd6:	db04      	blt.n	90017ce2 <_ZN8touchgfx4clzuEm+0x3a>
90017cd8:	3001      	adds	r0, #1
90017cda:	4770      	bx	lr
90017cdc:	2000      	movs	r0, #0
90017cde:	e7ea      	b.n	90017cb6 <_ZN8touchgfx4clzuEm+0xe>
90017ce0:	2020      	movs	r0, #32
90017ce2:	4770      	bx	lr

90017ce4 <_ZN8touchgfx7muldivuEmmmRm>:
90017ce4:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
90017ce8:	460f      	mov	r7, r1
90017cea:	4615      	mov	r5, r2
90017cec:	461e      	mov	r6, r3
90017cee:	4601      	mov	r1, r0
90017cf0:	b100      	cbz	r0, 90017cf4 <_ZN8touchgfx7muldivuEmmmRm+0x10>
90017cf2:	b927      	cbnz	r7, 90017cfe <_ZN8touchgfx7muldivuEmmmRm+0x1a>
90017cf4:	2000      	movs	r0, #0
90017cf6:	6030      	str	r0, [r6, #0]
90017cf8:	b002      	add	sp, #8
90017cfa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90017cfe:	f7ff ffd3 	bl	90017ca8 <_ZN8touchgfx4clzuEm>
90017d02:	b980      	cbnz	r0, 90017d26 <_ZN8touchgfx7muldivuEmmmRm+0x42>
90017d04:	4638      	mov	r0, r7
90017d06:	f7ff ffcf 	bl	90017ca8 <_ZN8touchgfx4clzuEm>
90017d0a:	2800      	cmp	r0, #0
90017d0c:	dd05      	ble.n	90017d1a <_ZN8touchgfx7muldivuEmmmRm+0x36>
90017d0e:	4633      	mov	r3, r6
90017d10:	462a      	mov	r2, r5
90017d12:	4638      	mov	r0, r7
90017d14:	f7ff ffe6 	bl	90017ce4 <_ZN8touchgfx7muldivuEmmmRm>
90017d18:	e7ee      	b.n	90017cf8 <_ZN8touchgfx7muldivuEmmmRm+0x14>
90017d1a:	f04f 33ff 	mov.w	r3, #4294967295
90017d1e:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
90017d22:	6033      	str	r3, [r6, #0]
90017d24:	e7e8      	b.n	90017cf8 <_ZN8touchgfx7muldivuEmmmRm+0x14>
90017d26:	fa37 f800 	lsrs.w	r8, r7, r0
90017d2a:	fb07 f301 	mul.w	r3, r7, r1
90017d2e:	d105      	bne.n	90017d3c <_ZN8touchgfx7muldivuEmmmRm+0x58>
90017d30:	fbb3 f0f5 	udiv	r0, r3, r5
90017d34:	fb05 3510 	mls	r5, r5, r0, r3
90017d38:	6035      	str	r5, [r6, #0]
90017d3a:	e7dd      	b.n	90017cf8 <_ZN8touchgfx7muldivuEmmmRm+0x14>
90017d3c:	2301      	movs	r3, #1
90017d3e:	fa01 fa00 	lsl.w	sl, r1, r0
90017d42:	462a      	mov	r2, r5
90017d44:	fa03 f000 	lsl.w	r0, r3, r0
90017d48:	4633      	mov	r3, r6
90017d4a:	fbba f9f5 	udiv	r9, sl, r5
90017d4e:	3801      	subs	r0, #1
90017d50:	fb08 f409 	mul.w	r4, r8, r9
90017d54:	4038      	ands	r0, r7
90017d56:	f7ff ffc5 	bl	90017ce4 <_ZN8touchgfx7muldivuEmmmRm>
90017d5a:	462a      	mov	r2, r5
90017d5c:	4607      	mov	r7, r0
90017d5e:	ab01      	add	r3, sp, #4
90017d60:	fb05 a119 	mls	r1, r5, r9, sl
90017d64:	4640      	mov	r0, r8
90017d66:	f7ff ffbd 	bl	90017ce4 <_ZN8touchgfx7muldivuEmmmRm>
90017d6a:	9b01      	ldr	r3, [sp, #4]
90017d6c:	6832      	ldr	r2, [r6, #0]
90017d6e:	441a      	add	r2, r3
90017d70:	fbb2 f3f5 	udiv	r3, r2, r5
90017d74:	441c      	add	r4, r3
90017d76:	fb05 2513 	mls	r5, r5, r3, r2
90017d7a:	443c      	add	r4, r7
90017d7c:	4420      	add	r0, r4
90017d7e:	e7db      	b.n	90017d38 <_ZN8touchgfx7muldivuEmmmRm+0x54>

90017d80 <_ZN8touchgfx6muldivElllRl>:
90017d80:	b573      	push	{r0, r1, r4, r5, r6, lr}
90017d82:	2800      	cmp	r0, #0
90017d84:	461e      	mov	r6, r3
90017d86:	bfba      	itte	lt
90017d88:	4240      	neglt	r0, r0
90017d8a:	f04f 34ff 	movlt.w	r4, #4294967295
90017d8e:	2401      	movge	r4, #1
90017d90:	2900      	cmp	r1, #0
90017d92:	bfbc      	itt	lt
90017d94:	4249      	neglt	r1, r1
90017d96:	4264      	neglt	r4, r4
90017d98:	2a00      	cmp	r2, #0
90017d9a:	bfb6      	itet	lt
90017d9c:	4265      	neglt	r5, r4
90017d9e:	4625      	movge	r5, r4
90017da0:	4252      	neglt	r2, r2
90017da2:	4288      	cmp	r0, r1
90017da4:	bfc2      	ittt	gt
90017da6:	4603      	movgt	r3, r0
90017da8:	4608      	movgt	r0, r1
90017daa:	4619      	movgt	r1, r3
90017dac:	ab01      	add	r3, sp, #4
90017dae:	f7ff ff99 	bl	90017ce4 <_ZN8touchgfx7muldivuEmmmRm>
90017db2:	9b01      	ldr	r3, [sp, #4]
90017db4:	4368      	muls	r0, r5
90017db6:	435c      	muls	r4, r3
90017db8:	6034      	str	r4, [r6, #0]
90017dba:	b002      	add	sp, #8
90017dbc:	bd70      	pop	{r4, r5, r6, pc}

90017dbe <_ZN8touchgfx6muldivElll>:
90017dbe:	b573      	push	{r0, r1, r4, r5, r6, lr}
90017dc0:	4606      	mov	r6, r0
90017dc2:	ab01      	add	r3, sp, #4
90017dc4:	460d      	mov	r5, r1
90017dc6:	4614      	mov	r4, r2
90017dc8:	f7ff ffda 	bl	90017d80 <_ZN8touchgfx6muldivElllRl>
90017dcc:	2e00      	cmp	r6, #0
90017dce:	db20      	blt.n	90017e12 <_ZN8touchgfx6muldivElll+0x54>
90017dd0:	bf14      	ite	ne
90017dd2:	2301      	movne	r3, #1
90017dd4:	2300      	moveq	r3, #0
90017dd6:	2d00      	cmp	r5, #0
90017dd8:	db1e      	blt.n	90017e18 <_ZN8touchgfx6muldivElll+0x5a>
90017dda:	bf14      	ite	ne
90017ddc:	2201      	movne	r2, #1
90017dde:	2200      	moveq	r2, #0
90017de0:	2c00      	cmp	r4, #0
90017de2:	fb03 f202 	mul.w	r2, r3, r2
90017de6:	db1a      	blt.n	90017e1e <_ZN8touchgfx6muldivElll+0x60>
90017de8:	bf14      	ite	ne
90017dea:	2301      	movne	r3, #1
90017dec:	2300      	moveq	r3, #0
90017dee:	4353      	muls	r3, r2
90017df0:	2b01      	cmp	r3, #1
90017df2:	d117      	bne.n	90017e24 <_ZN8touchgfx6muldivElll+0x66>
90017df4:	2c00      	cmp	r4, #0
90017df6:	9b01      	ldr	r3, [sp, #4]
90017df8:	bfb8      	it	lt
90017dfa:	4264      	neglt	r4, r4
90017dfc:	2b00      	cmp	r3, #0
90017dfe:	f104 0401 	add.w	r4, r4, #1
90017e02:	bfb8      	it	lt
90017e04:	425b      	neglt	r3, r3
90017e06:	ebb3 0f64 	cmp.w	r3, r4, asr #1
90017e0a:	db00      	blt.n	90017e0e <_ZN8touchgfx6muldivElll+0x50>
90017e0c:	3001      	adds	r0, #1
90017e0e:	b002      	add	sp, #8
90017e10:	bd70      	pop	{r4, r5, r6, pc}
90017e12:	f04f 33ff 	mov.w	r3, #4294967295
90017e16:	e7de      	b.n	90017dd6 <_ZN8touchgfx6muldivElll+0x18>
90017e18:	f04f 32ff 	mov.w	r2, #4294967295
90017e1c:	e7e0      	b.n	90017de0 <_ZN8touchgfx6muldivElll+0x22>
90017e1e:	f04f 33ff 	mov.w	r3, #4294967295
90017e22:	e7e4      	b.n	90017dee <_ZN8touchgfx6muldivElll+0x30>
90017e24:	3301      	adds	r3, #1
90017e26:	d1f2      	bne.n	90017e0e <_ZN8touchgfx6muldivElll+0x50>
90017e28:	9b01      	ldr	r3, [sp, #4]
90017e2a:	2c00      	cmp	r4, #0
90017e2c:	bfb8      	it	lt
90017e2e:	4264      	neglt	r4, r4
90017e30:	2b00      	cmp	r3, #0
90017e32:	bfb8      	it	lt
90017e34:	425b      	neglt	r3, r3
90017e36:	ebb3 0f64 	cmp.w	r3, r4, asr #1
90017e3a:	bfc8      	it	gt
90017e3c:	f100 30ff 	addgt.w	r0, r0, #4294967295
90017e40:	e7e5      	b.n	90017e0e <_ZN8touchgfx6muldivElll+0x50>

90017e42 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
90017e42:	2000      	movs	r0, #0
90017e44:	4770      	bx	lr

90017e46 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
90017e46:	2001      	movs	r0, #1
90017e48:	4770      	bx	lr

90017e4a <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
90017e4a:	2002      	movs	r0, #2
90017e4c:	4770      	bx	lr

90017e4e <_ZN8touchgfx6ScreenD1Ev>:
90017e4e:	4770      	bx	lr

90017e50 <_ZN8touchgfx6Screen11setupScreenEv>:
90017e50:	4770      	bx	lr

90017e52 <_ZN8touchgfx12GestureEventD1Ev>:
90017e52:	4770      	bx	lr

90017e54 <_ZN8touchgfx9DragEventD1Ev>:
90017e54:	4770      	bx	lr

90017e56 <_ZN8touchgfx10ClickEventD1Ev>:
90017e56:	4770      	bx	lr

90017e58 <_ZN8touchgfx10ClickEventD0Ev>:
90017e58:	b510      	push	{r4, lr}
90017e5a:	4604      	mov	r4, r0
90017e5c:	210c      	movs	r1, #12
90017e5e:	f00f fe5f 	bl	90027b20 <_ZdlPvj>
90017e62:	4620      	mov	r0, r4
90017e64:	bd10      	pop	{r4, pc}

90017e66 <_ZN8touchgfx9DragEventD0Ev>:
90017e66:	b510      	push	{r4, lr}
90017e68:	4604      	mov	r4, r0
90017e6a:	2110      	movs	r1, #16
90017e6c:	f00f fe58 	bl	90027b20 <_ZdlPvj>
90017e70:	4620      	mov	r0, r4
90017e72:	bd10      	pop	{r4, pc}

90017e74 <_ZN8touchgfx12GestureEventD0Ev>:
90017e74:	b510      	push	{r4, lr}
90017e76:	4604      	mov	r4, r0
90017e78:	210c      	movs	r1, #12
90017e7a:	f00f fe51 	bl	90027b20 <_ZdlPvj>
90017e7e:	4620      	mov	r0, r4
90017e80:	bd10      	pop	{r4, pc}

90017e82 <_ZN8touchgfx6ScreenD0Ev>:
90017e82:	b510      	push	{r4, lr}
90017e84:	4604      	mov	r4, r0
90017e86:	213c      	movs	r1, #60	; 0x3c
90017e88:	f00f fe4a 	bl	90027b20 <_ZdlPvj>
90017e8c:	4620      	mov	r0, r4
90017e8e:	bd10      	pop	{r4, pc}

90017e90 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
90017e90:	b530      	push	{r4, r5, lr}
90017e92:	460d      	mov	r5, r1
90017e94:	6b01      	ldr	r1, [r0, #48]	; 0x30
90017e96:	b087      	sub	sp, #28
90017e98:	4604      	mov	r4, r0
90017e9a:	b301      	cbz	r1, 90017ede <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
90017e9c:	a801      	add	r0, sp, #4
90017e9e:	f7ff fe3d 	bl	90017b1c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90017ea2:	892a      	ldrh	r2, [r5, #8]
90017ea4:	f8bd 3004 	ldrh.w	r3, [sp, #4]
90017ea8:	7928      	ldrb	r0, [r5, #4]
90017eaa:	1ad2      	subs	r2, r2, r3
90017eac:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
90017eae:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
90017eb2:	441a      	add	r2, r3
90017eb4:	896b      	ldrh	r3, [r5, #10]
90017eb6:	f8bd 5006 	ldrh.w	r5, [sp, #6]
90017eba:	f88d 0010 	strb.w	r0, [sp, #16]
90017ebe:	1b5b      	subs	r3, r3, r5
90017ec0:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
90017ec2:	6b20      	ldr	r0, [r4, #48]	; 0x30
90017ec4:	442b      	add	r3, r5
90017ec6:	4d07      	ldr	r5, [pc, #28]	; (90017ee4 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
90017ec8:	f8ad 1012 	strh.w	r1, [sp, #18]
90017ecc:	a903      	add	r1, sp, #12
90017ece:	9503      	str	r5, [sp, #12]
90017ed0:	f8ad 2014 	strh.w	r2, [sp, #20]
90017ed4:	f8ad 3016 	strh.w	r3, [sp, #22]
90017ed8:	6803      	ldr	r3, [r0, #0]
90017eda:	6c9b      	ldr	r3, [r3, #72]	; 0x48
90017edc:	4798      	blx	r3
90017ede:	b007      	add	sp, #28
90017ee0:	bd30      	pop	{r4, r5, pc}
90017ee2:	bf00      	nop
90017ee4:	9002c048 	.word	0x9002c048

90017ee8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
90017ee8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90017eec:	6b03      	ldr	r3, [r0, #48]	; 0x30
90017eee:	b08a      	sub	sp, #40	; 0x28
90017ef0:	4604      	mov	r4, r0
90017ef2:	460d      	mov	r5, r1
90017ef4:	b113      	cbz	r3, 90017efc <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
90017ef6:	790b      	ldrb	r3, [r1, #4]
90017ef8:	2b00      	cmp	r3, #0
90017efa:	d044      	beq.n	90017f86 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
90017efc:	f104 0804 	add.w	r8, r4, #4
90017f00:	a803      	add	r0, sp, #12
90017f02:	4641      	mov	r1, r8
90017f04:	f7ff fe0a 	bl	90017b1c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90017f08:	792b      	ldrb	r3, [r5, #4]
90017f0a:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
90017f0e:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
90017f12:	b983      	cbnz	r3, 90017f36 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
90017f14:	f104 0336 	add.w	r3, r4, #54	; 0x36
90017f18:	892a      	ldrh	r2, [r5, #8]
90017f1a:	88e9      	ldrh	r1, [r5, #6]
90017f1c:	4640      	mov	r0, r8
90017f1e:	1b92      	subs	r2, r2, r6
90017f20:	9301      	str	r3, [sp, #4]
90017f22:	1bc9      	subs	r1, r1, r7
90017f24:	f104 0334 	add.w	r3, r4, #52	; 0x34
90017f28:	b212      	sxth	r2, r2
90017f2a:	9300      	str	r3, [sp, #0]
90017f2c:	b209      	sxth	r1, r1
90017f2e:	f104 0330 	add.w	r3, r4, #48	; 0x30
90017f32:	f7f9 f9ab 	bl	9001128c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
90017f36:	6b21      	ldr	r1, [r4, #48]	; 0x30
90017f38:	b329      	cbz	r1, 90017f86 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
90017f3a:	a805      	add	r0, sp, #20
90017f3c:	f7ff fdee 	bl	90017b1c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90017f40:	f8bd 2014 	ldrh.w	r2, [sp, #20]
90017f44:	792b      	ldrb	r3, [r5, #4]
90017f46:	a907      	add	r1, sp, #28
90017f48:	1abf      	subs	r7, r7, r2
90017f4a:	88ea      	ldrh	r2, [r5, #6]
90017f4c:	6b20      	ldr	r0, [r4, #48]	; 0x30
90017f4e:	4417      	add	r7, r2
90017f50:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
90017f52:	f88d 3020 	strb.w	r3, [sp, #32]
90017f56:	4417      	add	r7, r2
90017f58:	f8bd 2016 	ldrh.w	r2, [sp, #22]
90017f5c:	1ab6      	subs	r6, r6, r2
90017f5e:	892a      	ldrh	r2, [r5, #8]
90017f60:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
90017f64:	4416      	add	r6, r2
90017f66:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
90017f68:	4416      	add	r6, r2
90017f6a:	4a08      	ldr	r2, [pc, #32]	; (90017f8c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
90017f6c:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
90017f70:	2600      	movs	r6, #0
90017f72:	9207      	str	r2, [sp, #28]
90017f74:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
90017f78:	6803      	ldr	r3, [r0, #0]
90017f7a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90017f7c:	4798      	blx	r3
90017f7e:	792b      	ldrb	r3, [r5, #4]
90017f80:	b10b      	cbz	r3, 90017f86 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
90017f82:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
90017f86:	b00a      	add	sp, #40	; 0x28
90017f88:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90017f8c:	9002c020 	.word	0x9002c020

90017f90 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
90017f90:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90017f94:	460c      	mov	r4, r1
90017f96:	6b01      	ldr	r1, [r0, #48]	; 0x30
90017f98:	b088      	sub	sp, #32
90017f9a:	4605      	mov	r5, r0
90017f9c:	2900      	cmp	r1, #0
90017f9e:	d06d      	beq.n	9001807c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
90017fa0:	4668      	mov	r0, sp
90017fa2:	f7ff fdbb 	bl	90017b1c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90017fa6:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
90017fa8:	88e3      	ldrh	r3, [r4, #6]
90017faa:	f9bd 8000 	ldrsh.w	r8, [sp]
90017fae:	440b      	add	r3, r1
90017fb0:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
90017fb4:	b21b      	sxth	r3, r3
90017fb6:	4543      	cmp	r3, r8
90017fb8:	db31      	blt.n	9001801e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
90017fba:	f8bd c004 	ldrh.w	ip, [sp, #4]
90017fbe:	44c4      	add	ip, r8
90017fc0:	fa0f fc8c 	sxth.w	ip, ip
90017fc4:	4563      	cmp	r3, ip
90017fc6:	da2a      	bge.n	9001801e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
90017fc8:	8eea      	ldrh	r2, [r5, #54]	; 0x36
90017fca:	8926      	ldrh	r6, [r4, #8]
90017fcc:	4416      	add	r6, r2
90017fce:	b236      	sxth	r6, r6
90017fd0:	42be      	cmp	r6, r7
90017fd2:	db24      	blt.n	9001801e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
90017fd4:	f8bd 0006 	ldrh.w	r0, [sp, #6]
90017fd8:	4438      	add	r0, r7
90017fda:	b200      	sxth	r0, r0
90017fdc:	4286      	cmp	r6, r0
90017fde:	da1e      	bge.n	9001801e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
90017fe0:	8963      	ldrh	r3, [r4, #10]
90017fe2:	4419      	add	r1, r3
90017fe4:	b209      	sxth	r1, r1
90017fe6:	4541      	cmp	r1, r8
90017fe8:	db08      	blt.n	90017ffc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
90017fea:	4561      	cmp	r1, ip
90017fec:	da06      	bge.n	90017ffc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
90017fee:	89a3      	ldrh	r3, [r4, #12]
90017ff0:	441a      	add	r2, r3
90017ff2:	b212      	sxth	r2, r2
90017ff4:	42ba      	cmp	r2, r7
90017ff6:	db01      	blt.n	90017ffc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
90017ff8:	4282      	cmp	r2, r0
90017ffa:	db10      	blt.n	9001801e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
90017ffc:	4b21      	ldr	r3, [pc, #132]	; (90018084 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
90017ffe:	a904      	add	r1, sp, #16
90018000:	6b28      	ldr	r0, [r5, #48]	; 0x30
90018002:	9304      	str	r3, [sp, #16]
90018004:	2302      	movs	r3, #2
90018006:	f88d 3014 	strb.w	r3, [sp, #20]
9001800a:	2300      	movs	r3, #0
9001800c:	f8ad 3016 	strh.w	r3, [sp, #22]
90018010:	f8ad 3018 	strh.w	r3, [sp, #24]
90018014:	f8ad 301a 	strh.w	r3, [sp, #26]
90018018:	6803      	ldr	r3, [r0, #0]
9001801a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
9001801c:	4798      	blx	r3
9001801e:	1d29      	adds	r1, r5, #4
90018020:	a802      	add	r0, sp, #8
90018022:	f7ff fd7b 	bl	90017b1c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90018026:	f8bd 3008 	ldrh.w	r3, [sp, #8]
9001802a:	88e0      	ldrh	r0, [r4, #6]
9001802c:	eba3 0808 	sub.w	r8, r3, r8
90018030:	f8bd 300a 	ldrh.w	r3, [sp, #10]
90018034:	7921      	ldrb	r1, [r4, #4]
90018036:	fa1f f888 	uxth.w	r8, r8
9001803a:	1bdf      	subs	r7, r3, r7
9001803c:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
90018040:	b2bb      	uxth	r3, r7
90018042:	4440      	add	r0, r8
90018044:	8922      	ldrh	r2, [r4, #8]
90018046:	8967      	ldrh	r7, [r4, #10]
90018048:	4460      	add	r0, ip
9001804a:	89a4      	ldrh	r4, [r4, #12]
9001804c:	441a      	add	r2, r3
9001804e:	8eee      	ldrh	r6, [r5, #54]	; 0x36
90018050:	44b8      	add	r8, r7
90018052:	4423      	add	r3, r4
90018054:	f8ad 0016 	strh.w	r0, [sp, #22]
90018058:	4432      	add	r2, r6
9001805a:	44e0      	add	r8, ip
9001805c:	4433      	add	r3, r6
9001805e:	4c0a      	ldr	r4, [pc, #40]	; (90018088 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
90018060:	6b28      	ldr	r0, [r5, #48]	; 0x30
90018062:	f88d 1014 	strb.w	r1, [sp, #20]
90018066:	a904      	add	r1, sp, #16
90018068:	9404      	str	r4, [sp, #16]
9001806a:	f8ad 2018 	strh.w	r2, [sp, #24]
9001806e:	f8ad 801a 	strh.w	r8, [sp, #26]
90018072:	f8ad 301c 	strh.w	r3, [sp, #28]
90018076:	6803      	ldr	r3, [r0, #0]
90018078:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
9001807a:	4798      	blx	r3
9001807c:	b008      	add	sp, #32
9001807e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90018082:	bf00      	nop
90018084:	9002c020 	.word	0x9002c020
90018088:	9002c034 	.word	0x9002c034

9001808c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
9001808c:	b537      	push	{r0, r1, r2, r4, r5, lr}
9001808e:	4604      	mov	r4, r0
90018090:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
90018094:	3201      	adds	r2, #1
90018096:	d112      	bne.n	900180be <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
90018098:	2500      	movs	r5, #0
9001809a:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
9001809e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
900180a2:	6803      	ldr	r3, [r0, #0]
900180a4:	9500      	str	r5, [sp, #0]
900180a6:	466d      	mov	r5, sp
900180a8:	f8ad 1004 	strh.w	r1, [sp, #4]
900180ac:	f8ad 2006 	strh.w	r2, [sp, #6]
900180b0:	4629      	mov	r1, r5
900180b2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
900180b4:	4798      	blx	r3
900180b6:	e895 0003 	ldmia.w	r5, {r0, r1}
900180ba:	e884 0003 	stmia.w	r4, {r0, r1}
900180be:	4620      	mov	r0, r4
900180c0:	b003      	add	sp, #12
900180c2:	bd30      	pop	{r4, r5, pc}

900180c4 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
900180c4:	b513      	push	{r0, r1, r4, lr}
900180c6:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
900180ca:	4604      	mov	r4, r0
900180cc:	3301      	adds	r3, #1
900180ce:	d109      	bne.n	900180e4 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
900180d0:	4601      	mov	r1, r0
900180d2:	4668      	mov	r0, sp
900180d4:	f7ff fd22 	bl	90017b1c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900180d8:	f8bd 3000 	ldrh.w	r3, [sp]
900180dc:	8423      	strh	r3, [r4, #32]
900180de:	f8bd 3002 	ldrh.w	r3, [sp, #2]
900180e2:	8463      	strh	r3, [r4, #34]	; 0x22
900180e4:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
900180e8:	b002      	add	sp, #8
900180ea:	bd10      	pop	{r4, pc}

900180ec <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
900180ec:	b513      	push	{r0, r1, r4, lr}
900180ee:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
900180f2:	4604      	mov	r4, r0
900180f4:	3301      	adds	r3, #1
900180f6:	d109      	bne.n	9001810c <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
900180f8:	4601      	mov	r1, r0
900180fa:	4668      	mov	r0, sp
900180fc:	f7ff fd0e 	bl	90017b1c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90018100:	f8bd 3000 	ldrh.w	r3, [sp]
90018104:	8423      	strh	r3, [r4, #32]
90018106:	f8bd 3002 	ldrh.w	r3, [sp, #2]
9001810a:	8463      	strh	r3, [r4, #34]	; 0x22
9001810c:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
90018110:	b002      	add	sp, #8
90018112:	bd10      	pop	{r4, pc}

90018114 <_ZN8touchgfx6ScreenC1Ev>:
90018114:	b570      	push	{r4, r5, r6, lr}
90018116:	4b17      	ldr	r3, [pc, #92]	; (90018174 <_ZN8touchgfx6ScreenC1Ev+0x60>)
90018118:	4605      	mov	r5, r0
9001811a:	4a17      	ldr	r2, [pc, #92]	; (90018178 <_ZN8touchgfx6ScreenC1Ev+0x64>)
9001811c:	2101      	movs	r1, #1
9001811e:	f845 3b04 	str.w	r3, [r5], #4
90018122:	2300      	movs	r3, #0
90018124:	6042      	str	r2, [r0, #4]
90018126:	4604      	mov	r4, r0
90018128:	8103      	strh	r3, [r0, #8]
9001812a:	8143      	strh	r3, [r0, #10]
9001812c:	8183      	strh	r3, [r0, #12]
9001812e:	81c3      	strh	r3, [r0, #14]
90018130:	8203      	strh	r3, [r0, #16]
90018132:	8243      	strh	r3, [r0, #18]
90018134:	8283      	strh	r3, [r0, #20]
90018136:	82c3      	strh	r3, [r0, #22]
90018138:	6203      	str	r3, [r0, #32]
9001813a:	8483      	strh	r3, [r0, #36]	; 0x24
9001813c:	84c3      	strh	r3, [r0, #38]	; 0x26
9001813e:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
90018142:	6343      	str	r3, [r0, #52]	; 0x34
90018144:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
90018148:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
9001814c:	e9c0 3306 	strd	r3, r3, [r0, #24]
90018150:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
90018154:	4b09      	ldr	r3, [pc, #36]	; (9001817c <_ZN8touchgfx6ScreenC1Ev+0x68>)
90018156:	4628      	mov	r0, r5
90018158:	f9b3 6000 	ldrsh.w	r6, [r3]
9001815c:	6b93      	ldr	r3, [r2, #56]	; 0x38
9001815e:	4a08      	ldr	r2, [pc, #32]	; (90018180 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
90018160:	f9b2 1000 	ldrsh.w	r1, [r2]
90018164:	4798      	blx	r3
90018166:	6863      	ldr	r3, [r4, #4]
90018168:	4628      	mov	r0, r5
9001816a:	4631      	mov	r1, r6
9001816c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
9001816e:	4798      	blx	r3
90018170:	4620      	mov	r0, r4
90018172:	bd70      	pop	{r4, r5, r6, pc}
90018174:	9002c05c 	.word	0x9002c05c
90018178:	9002b934 	.word	0x9002b934
9001817c:	2403982a 	.word	0x2403982a
90018180:	24039828 	.word	0x24039828

90018184 <_ZN8touchgfx6Screen4drawEv>:
90018184:	4b09      	ldr	r3, [pc, #36]	; (900181ac <_ZN8touchgfx6Screen4drawEv+0x28>)
90018186:	b507      	push	{r0, r1, r2, lr}
90018188:	f9b3 2000 	ldrsh.w	r2, [r3]
9001818c:	2100      	movs	r1, #0
9001818e:	4b08      	ldr	r3, [pc, #32]	; (900181b0 <_ZN8touchgfx6Screen4drawEv+0x2c>)
90018190:	9100      	str	r1, [sp, #0]
90018192:	4669      	mov	r1, sp
90018194:	f9b3 3000 	ldrsh.w	r3, [r3]
90018198:	f8ad 2004 	strh.w	r2, [sp, #4]
9001819c:	f8ad 3006 	strh.w	r3, [sp, #6]
900181a0:	6803      	ldr	r3, [r0, #0]
900181a2:	689b      	ldr	r3, [r3, #8]
900181a4:	4798      	blx	r3
900181a6:	b003      	add	sp, #12
900181a8:	f85d fb04 	ldr.w	pc, [sp], #4
900181ac:	24039828 	.word	0x24039828
900181b0:	2403982a 	.word	0x2403982a

900181b4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
900181b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900181b8:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
900181bc:	b089      	sub	sp, #36	; 0x24
900181be:	4680      	mov	r8, r0
900181c0:	460c      	mov	r4, r1
900181c2:	2b00      	cmp	r3, #0
900181c4:	4615      	mov	r5, r2
900181c6:	dd0e      	ble.n	900181e6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
900181c8:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
900181cc:	2b00      	cmp	r3, #0
900181ce:	dd0a      	ble.n	900181e6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
900181d0:	4628      	mov	r0, r5
900181d2:	f7ff ff5b 	bl	9001808c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
900181d6:	4621      	mov	r1, r4
900181d8:	f7fe fa85 	bl	900166e6 <_ZNK8touchgfx4Rect9intersectERKS0_>
900181dc:	69eb      	ldr	r3, [r5, #28]
900181de:	b928      	cbnz	r0, 900181ec <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
900181e0:	461d      	mov	r5, r3
900181e2:	2b00      	cmp	r3, #0
900181e4:	d1f4      	bne.n	900181d0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
900181e6:	b009      	add	sp, #36	; 0x24
900181e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900181ec:	ae04      	add	r6, sp, #16
900181ee:	2b00      	cmp	r3, #0
900181f0:	f000 80b5 	beq.w	9001835e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
900181f4:	682b      	ldr	r3, [r5, #0]
900181f6:	4629      	mov	r1, r5
900181f8:	a802      	add	r0, sp, #8
900181fa:	68db      	ldr	r3, [r3, #12]
900181fc:	4798      	blx	r3
900181fe:	4628      	mov	r0, r5
90018200:	f7ff ff60 	bl	900180c4 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
90018204:	f8bd 7008 	ldrh.w	r7, [sp, #8]
90018208:	4407      	add	r7, r0
9001820a:	4628      	mov	r0, r5
9001820c:	f7ff ff6e 	bl	900180ec <_ZN8touchgfx8Drawable13getCachedAbsYEv>
90018210:	f8bd 300a 	ldrh.w	r3, [sp, #10]
90018214:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
90018218:	b23f      	sxth	r7, r7
9001821a:	4418      	add	r0, r3
9001821c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
90018220:	4621      	mov	r1, r4
90018222:	f8ad 2014 	strh.w	r2, [sp, #20]
90018226:	f8ad 0012 	strh.w	r0, [sp, #18]
9001822a:	4630      	mov	r0, r6
9001822c:	f8ad 3016 	strh.w	r3, [sp, #22]
90018230:	f8ad 7010 	strh.w	r7, [sp, #16]
90018234:	f7f9 f90c 	bl	90011450 <_ZN8touchgfx4RectaNERKS0_>
90018238:	4628      	mov	r0, r5
9001823a:	f7ff ff27 	bl	9001808c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
9001823e:	ab06      	add	r3, sp, #24
90018240:	4602      	mov	r2, r0
90018242:	e896 0003 	ldmia.w	r6, {r0, r1}
90018246:	e883 0003 	stmia.w	r3, {r0, r1}
9001824a:	4611      	mov	r1, r2
9001824c:	4618      	mov	r0, r3
9001824e:	f7f9 f8ff 	bl	90011450 <_ZN8touchgfx4RectaNERKS0_>
90018252:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
90018256:	f9b4 1000 	ldrsh.w	r1, [r4]
9001825a:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
9001825e:	4299      	cmp	r1, r3
90018260:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
90018264:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
90018268:	d10b      	bne.n	90018282 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
9001826a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
9001826e:	4552      	cmp	r2, sl
90018270:	d107      	bne.n	90018282 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
90018272:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
90018276:	455a      	cmp	r2, fp
90018278:	d103      	bne.n	90018282 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
9001827a:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
9001827e:	454a      	cmp	r2, r9
90018280:	d06d      	beq.n	9001835e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
90018282:	f1bb 0f00 	cmp.w	fp, #0
90018286:	dd65      	ble.n	90018354 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
90018288:	f1b9 0f00 	cmp.w	r9, #0
9001828c:	dd62      	ble.n	90018354 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
9001828e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
90018292:	fa1f f08a 	uxth.w	r0, sl
90018296:	4552      	cmp	r2, sl
90018298:	9000      	str	r0, [sp, #0]
9001829a:	da12      	bge.n	900182c2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
9001829c:	9301      	str	r3, [sp, #4]
9001829e:	9b00      	ldr	r3, [sp, #0]
900182a0:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
900182a4:	f8ad 2012 	strh.w	r2, [sp, #18]
900182a8:	1a9a      	subs	r2, r3, r2
900182aa:	f8ad 1010 	strh.w	r1, [sp, #16]
900182ae:	4631      	mov	r1, r6
900182b0:	f8ad 0014 	strh.w	r0, [sp, #20]
900182b4:	4640      	mov	r0, r8
900182b6:	f8ad 2016 	strh.w	r2, [sp, #22]
900182ba:	69ea      	ldr	r2, [r5, #28]
900182bc:	f7ff ff7a 	bl	900181b4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
900182c0:	9b01      	ldr	r3, [sp, #4]
900182c2:	f9b4 2000 	ldrsh.w	r2, [r4]
900182c6:	b29f      	uxth	r7, r3
900182c8:	429a      	cmp	r2, r3
900182ca:	da0d      	bge.n	900182e8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
900182cc:	f8ad 2010 	strh.w	r2, [sp, #16]
900182d0:	1aba      	subs	r2, r7, r2
900182d2:	f8ad a012 	strh.w	sl, [sp, #18]
900182d6:	4631      	mov	r1, r6
900182d8:	f8ad 2014 	strh.w	r2, [sp, #20]
900182dc:	4640      	mov	r0, r8
900182de:	f8ad 9016 	strh.w	r9, [sp, #22]
900182e2:	69ea      	ldr	r2, [r5, #28]
900182e4:	f7ff ff66 	bl	900181b4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
900182e8:	8822      	ldrh	r2, [r4, #0]
900182ea:	445f      	add	r7, fp
900182ec:	88a3      	ldrh	r3, [r4, #4]
900182ee:	b2bf      	uxth	r7, r7
900182f0:	4413      	add	r3, r2
900182f2:	b23a      	sxth	r2, r7
900182f4:	b29b      	uxth	r3, r3
900182f6:	b219      	sxth	r1, r3
900182f8:	4291      	cmp	r1, r2
900182fa:	dd0d      	ble.n	90018318 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
900182fc:	1bdb      	subs	r3, r3, r7
900182fe:	f8ad 2010 	strh.w	r2, [sp, #16]
90018302:	f8ad a012 	strh.w	sl, [sp, #18]
90018306:	4631      	mov	r1, r6
90018308:	f8ad 3014 	strh.w	r3, [sp, #20]
9001830c:	4640      	mov	r0, r8
9001830e:	f8ad 9016 	strh.w	r9, [sp, #22]
90018312:	69ea      	ldr	r2, [r5, #28]
90018314:	f7ff ff4e 	bl	900181b4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
90018318:	88e2      	ldrh	r2, [r4, #6]
9001831a:	8863      	ldrh	r3, [r4, #2]
9001831c:	4413      	add	r3, r2
9001831e:	9a00      	ldr	r2, [sp, #0]
90018320:	444a      	add	r2, r9
90018322:	b29b      	uxth	r3, r3
90018324:	fa1f f982 	uxth.w	r9, r2
90018328:	b219      	sxth	r1, r3
9001832a:	fa0f f289 	sxth.w	r2, r9
9001832e:	428a      	cmp	r2, r1
90018330:	da15      	bge.n	9001835e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
90018332:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90018336:	eba3 0309 	sub.w	r3, r3, r9
9001833a:	f9b4 0000 	ldrsh.w	r0, [r4]
9001833e:	f8ad 1014 	strh.w	r1, [sp, #20]
90018342:	4631      	mov	r1, r6
90018344:	f8ad 0010 	strh.w	r0, [sp, #16]
90018348:	f8ad 2012 	strh.w	r2, [sp, #18]
9001834c:	f8ad 3016 	strh.w	r3, [sp, #22]
90018350:	69ea      	ldr	r2, [r5, #28]
90018352:	e001      	b.n	90018358 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
90018354:	69ea      	ldr	r2, [r5, #28]
90018356:	4621      	mov	r1, r4
90018358:	4640      	mov	r0, r8
9001835a:	f7ff ff2b 	bl	900181b4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
9001835e:	4628      	mov	r0, r5
90018360:	f7ff fe94 	bl	9001808c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
90018364:	6861      	ldr	r1, [r4, #4]
90018366:	4602      	mov	r2, r0
90018368:	4633      	mov	r3, r6
9001836a:	6820      	ldr	r0, [r4, #0]
9001836c:	c303      	stmia	r3!, {r0, r1}
9001836e:	4611      	mov	r1, r2
90018370:	4630      	mov	r0, r6
90018372:	f7f9 f86d 	bl	90011450 <_ZN8touchgfx4RectaNERKS0_>
90018376:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
9001837a:	2b00      	cmp	r3, #0
9001837c:	f77f af33 	ble.w	900181e6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
90018380:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
90018384:	2b00      	cmp	r3, #0
90018386:	f77f af2e 	ble.w	900181e6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
9001838a:	4628      	mov	r0, r5
9001838c:	f7ff fe9a 	bl	900180c4 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
90018390:	f8bd 3010 	ldrh.w	r3, [sp, #16]
90018394:	1a18      	subs	r0, r3, r0
90018396:	f8ad 0010 	strh.w	r0, [sp, #16]
9001839a:	4628      	mov	r0, r5
9001839c:	f7ff fea6 	bl	900180ec <_ZN8touchgfx8Drawable13getCachedAbsYEv>
900183a0:	f8bd 3012 	ldrh.w	r3, [sp, #18]
900183a4:	4631      	mov	r1, r6
900183a6:	1a18      	subs	r0, r3, r0
900183a8:	f8ad 0012 	strh.w	r0, [sp, #18]
900183ac:	4628      	mov	r0, r5
900183ae:	682b      	ldr	r3, [r5, #0]
900183b0:	689b      	ldr	r3, [r3, #8]
900183b2:	4798      	blx	r3
900183b4:	e717      	b.n	900181e6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

900183b6 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
900183b6:	b570      	push	{r4, r5, r6, lr}
900183b8:	1d06      	adds	r6, r0, #4
900183ba:	b086      	sub	sp, #24
900183bc:	460c      	mov	r4, r1
900183be:	2300      	movs	r3, #0
900183c0:	4631      	mov	r1, r6
900183c2:	4605      	mov	r5, r0
900183c4:	a802      	add	r0, sp, #8
900183c6:	9301      	str	r3, [sp, #4]
900183c8:	f7ff fba8 	bl	90017b1c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900183cc:	f8bd 3008 	ldrh.w	r3, [sp, #8]
900183d0:	8822      	ldrh	r2, [r4, #0]
900183d2:	f8bd 100a 	ldrh.w	r1, [sp, #10]
900183d6:	1ad2      	subs	r2, r2, r3
900183d8:	8863      	ldrh	r3, [r4, #2]
900183da:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
900183de:	1a5b      	subs	r3, r3, r1
900183e0:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
900183e4:	f8ad 2010 	strh.w	r2, [sp, #16]
900183e8:	aa01      	add	r2, sp, #4
900183ea:	f8ad 0014 	strh.w	r0, [sp, #20]
900183ee:	4630      	mov	r0, r6
900183f0:	f8ad 1016 	strh.w	r1, [sp, #22]
900183f4:	a904      	add	r1, sp, #16
900183f6:	f8ad 3012 	strh.w	r3, [sp, #18]
900183fa:	f7f9 f901 	bl	90011600 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
900183fe:	9a01      	ldr	r2, [sp, #4]
90018400:	b11a      	cbz	r2, 9001840a <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
90018402:	4621      	mov	r1, r4
90018404:	4628      	mov	r0, r5
90018406:	f7ff fed5 	bl	900181b4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
9001840a:	b006      	add	sp, #24
9001840c:	bd70      	pop	{r4, r5, r6, pc}

9001840e <_ZN8touchgfx6Screen4drawERNS_4RectE>:
9001840e:	4602      	mov	r2, r0
90018410:	b530      	push	{r4, r5, lr}
90018412:	4604      	mov	r4, r0
90018414:	b085      	sub	sp, #20
90018416:	f852 0f08 	ldr.w	r0, [r2, #8]!
9001841a:	460d      	mov	r5, r1
9001841c:	466b      	mov	r3, sp
9001841e:	6851      	ldr	r1, [r2, #4]
90018420:	c303      	stmia	r3!, {r0, r1}
90018422:	4629      	mov	r1, r5
90018424:	4668      	mov	r0, sp
90018426:	f7f9 f813 	bl	90011450 <_ZN8touchgfx4RectaNERKS0_>
9001842a:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
9001842e:	b12b      	cbz	r3, 9001843c <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
90018430:	4669      	mov	r1, sp
90018432:	4620      	mov	r0, r4
90018434:	f7ff ffbf 	bl	900183b6 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
90018438:	b005      	add	sp, #20
9001843a:	bd30      	pop	{r4, r5, pc}
9001843c:	3404      	adds	r4, #4
9001843e:	a802      	add	r0, sp, #8
90018440:	4621      	mov	r1, r4
90018442:	f7ff fb6b 	bl	90017b1c <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90018446:	f8bd 3000 	ldrh.w	r3, [sp]
9001844a:	f8bd 2008 	ldrh.w	r2, [sp, #8]
9001844e:	4669      	mov	r1, sp
90018450:	4620      	mov	r0, r4
90018452:	1a9b      	subs	r3, r3, r2
90018454:	f8bd 200a 	ldrh.w	r2, [sp, #10]
90018458:	f8ad 3000 	strh.w	r3, [sp]
9001845c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90018460:	1a9b      	subs	r3, r3, r2
90018462:	f8ad 3002 	strh.w	r3, [sp, #2]
90018466:	f7f9 f892 	bl	9001158e <_ZNK8touchgfx9Container4drawERKNS_4RectE>
9001846a:	e7e5      	b.n	90018438 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

9001846c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
9001846c:	460b      	mov	r3, r1
9001846e:	680a      	ldr	r2, [r1, #0]
90018470:	1d01      	adds	r1, r0, #4
90018472:	6992      	ldr	r2, [r2, #24]
90018474:	4618      	mov	r0, r3
90018476:	4710      	bx	r2

90018478 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
90018478:	4298      	cmp	r0, r3
9001847a:	d200      	bcs.n	9001847e <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
9001847c:	b913      	cbnz	r3, 90018484 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
9001847e:	440a      	add	r2, r1
90018480:	b210      	sxth	r0, r2
90018482:	4770      	bx	lr
90018484:	ee07 0a90 	vmov	s15, r0
90018488:	eef8 6a67 	vcvt.f32.u32	s13, s15
9001848c:	ee07 3a90 	vmov	s15, r3
90018490:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90018494:	ee86 7aa7 	vdiv.f32	s14, s13, s15
90018498:	ee07 2a90 	vmov	s15, r2
9001849c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
900184a0:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
900184a4:	ee07 1a90 	vmov	s15, r1
900184a8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
900184ac:	ee37 7a66 	vsub.f32	s14, s14, s13
900184b0:	ee67 5a07 	vmul.f32	s11, s14, s14
900184b4:	eee5 6a87 	vfma.f32	s13, s11, s14
900184b8:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
900184bc:	eee6 7a26 	vfma.f32	s15, s12, s13
900184c0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
900184c4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900184c8:	bfcc      	ite	gt
900184ca:	ee77 7a87 	vaddgt.f32	s15, s15, s14
900184ce:	ee77 7ac7 	vsuble.f32	s15, s15, s14
900184d2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
900184d6:	ee17 3a90 	vmov	r3, s15
900184da:	b218      	sxth	r0, r3
900184dc:	4770      	bx	lr

900184de <_ZN8touchgfx12TextProviderC1Ev>:
900184de:	b538      	push	{r3, r4, r5, lr}
900184e0:	2500      	movs	r5, #0
900184e2:	2302      	movs	r3, #2
900184e4:	4604      	mov	r4, r0
900184e6:	220e      	movs	r2, #14
900184e8:	7403      	strb	r3, [r0, #16]
900184ea:	4629      	mov	r1, r5
900184ec:	6145      	str	r5, [r0, #20]
900184ee:	7605      	strb	r5, [r0, #24]
900184f0:	83c5      	strh	r5, [r0, #30]
900184f2:	8405      	strh	r5, [r0, #32]
900184f4:	86c5      	strh	r5, [r0, #54]	; 0x36
900184f6:	8705      	strh	r5, [r0, #56]	; 0x38
900184f8:	87c5      	strh	r5, [r0, #62]	; 0x3e
900184fa:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
900184fe:	e9c0 5500 	strd	r5, r5, [r0]
90018502:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
90018506:	304c      	adds	r0, #76	; 0x4c
90018508:	f00f fdc0 	bl	9002808c <memset>
9001850c:	2301      	movs	r3, #1
9001850e:	4620      	mov	r0, r4
90018510:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
90018514:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
90018518:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
9001851c:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
90018520:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
90018524:	f7eb fe30 	bl	90004188 <_ZN8touchgfx12TextProvider18initializeInternalEv>
90018528:	4620      	mov	r0, r4
9001852a:	bd38      	pop	{r3, r4, r5, pc}

9001852c <_ZN8touchgfx12TextProvider11endOfStringEv>:
9001852c:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
9001852e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90018532:	8c40      	ldrh	r0, [r0, #34]	; 0x22
90018534:	fab0 f080 	clz	r0, r0
90018538:	0940      	lsrs	r0, r0, #5
9001853a:	4770      	bx	lr

9001853c <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
9001853c:	b530      	push	{r4, r5, lr}
9001853e:	2500      	movs	r5, #0
90018540:	2401      	movs	r4, #1
90018542:	6843      	ldr	r3, [r0, #4]
90018544:	b913      	cbnz	r3, 9001854c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
90018546:	6803      	ldr	r3, [r0, #0]
90018548:	b313      	cbz	r3, 90018590 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
9001854a:	6043      	str	r3, [r0, #4]
9001854c:	7e03      	ldrb	r3, [r0, #24]
9001854e:	b143      	cbz	r3, 90018562 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
90018550:	6943      	ldr	r3, [r0, #20]
90018552:	b12b      	cbz	r3, 90018560 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
90018554:	881a      	ldrh	r2, [r3, #0]
90018556:	b11a      	cbz	r2, 90018560 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
90018558:	1c9a      	adds	r2, r3, #2
9001855a:	6142      	str	r2, [r0, #20]
9001855c:	8818      	ldrh	r0, [r3, #0]
9001855e:	bd30      	pop	{r4, r5, pc}
90018560:	7605      	strb	r5, [r0, #24]
90018562:	6843      	ldr	r3, [r0, #4]
90018564:	8819      	ldrh	r1, [r3, #0]
90018566:	b199      	cbz	r1, 90018590 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
90018568:	1c9a      	adds	r2, r3, #2
9001856a:	2902      	cmp	r1, #2
9001856c:	6042      	str	r2, [r0, #4]
9001856e:	d1f5      	bne.n	9001855c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
90018570:	7c03      	ldrb	r3, [r0, #16]
90018572:	2b01      	cmp	r3, #1
90018574:	d8e5      	bhi.n	90018542 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
90018576:	1c5a      	adds	r2, r3, #1
90018578:	3302      	adds	r3, #2
9001857a:	7402      	strb	r2, [r0, #16]
9001857c:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
90018580:	6143      	str	r3, [r0, #20]
90018582:	2b00      	cmp	r3, #0
90018584:	d0dd      	beq.n	90018542 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
90018586:	881b      	ldrh	r3, [r3, #0]
90018588:	2b00      	cmp	r3, #0
9001858a:	d0da      	beq.n	90018542 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
9001858c:	7604      	strb	r4, [r0, #24]
9001858e:	e7d8      	b.n	90018542 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
90018590:	2000      	movs	r0, #0
90018592:	e7e4      	b.n	9001855e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

90018594 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
90018594:	6001      	str	r1, [r0, #0]
90018596:	2100      	movs	r1, #0
90018598:	b430      	push	{r4, r5}
9001859a:	6041      	str	r1, [r0, #4]
9001859c:	6815      	ldr	r5, [r2, #0]
9001859e:	6085      	str	r5, [r0, #8]
900185a0:	6852      	ldr	r2, [r2, #4]
900185a2:	6443      	str	r3, [r0, #68]	; 0x44
900185a4:	9b02      	ldr	r3, [sp, #8]
900185a6:	60c2      	str	r2, [r0, #12]
900185a8:	7401      	strb	r1, [r0, #16]
900185aa:	6141      	str	r1, [r0, #20]
900185ac:	7601      	strb	r1, [r0, #24]
900185ae:	8701      	strh	r1, [r0, #56]	; 0x38
900185b0:	8401      	strh	r1, [r0, #32]
900185b2:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
900185b6:	6483      	str	r3, [r0, #72]	; 0x48
900185b8:	bc30      	pop	{r4, r5}
900185ba:	f7eb bde5 	b.w	90004188 <_ZN8touchgfx12TextProvider18initializeInternalEv>

900185be <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
900185be:	b408      	push	{r3}
900185c0:	b510      	push	{r4, lr}
900185c2:	b085      	sub	sp, #20
900185c4:	ac07      	add	r4, sp, #28
900185c6:	f854 3b04 	ldr.w	r3, [r4], #4
900185ca:	9300      	str	r3, [sp, #0]
900185cc:	4613      	mov	r3, r2
900185ce:	4622      	mov	r2, r4
900185d0:	9403      	str	r4, [sp, #12]
900185d2:	f7ff ffdf 	bl	90018594 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
900185d6:	b005      	add	sp, #20
900185d8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900185dc:	b001      	add	sp, #4
900185de:	4770      	bx	lr

900185e0 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
900185e0:	b5f0      	push	{r4, r5, r6, r7, lr}
900185e2:	4605      	mov	r5, r0
900185e4:	4608      	mov	r0, r1
900185e6:	b1f1      	cbz	r1, 90018626 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x46>
900185e8:	f105 044c 	add.w	r4, r5, #76	; 0x4c
900185ec:	460b      	mov	r3, r1
900185ee:	f101 0708 	add.w	r7, r1, #8
900185f2:	4622      	mov	r2, r4
900185f4:	6818      	ldr	r0, [r3, #0]
900185f6:	3308      	adds	r3, #8
900185f8:	f853 1c04 	ldr.w	r1, [r3, #-4]
900185fc:	4626      	mov	r6, r4
900185fe:	42bb      	cmp	r3, r7
90018600:	c603      	stmia	r6!, {r0, r1}
90018602:	4634      	mov	r4, r6
90018604:	d1f6      	bne.n	900185f4 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
90018606:	6818      	ldr	r0, [r3, #0]
90018608:	6030      	str	r0, [r6, #0]
9001860a:	4610      	mov	r0, r2
9001860c:	889b      	ldrh	r3, [r3, #4]
9001860e:	80b3      	strh	r3, [r6, #4]
90018610:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
90018614:	015b      	lsls	r3, r3, #5
90018616:	f403 7180 	and.w	r1, r3, #256	; 0x100
9001861a:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
9001861e:	430b      	orrs	r3, r1
90018620:	425b      	negs	r3, r3
90018622:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
90018626:	bdf0      	pop	{r4, r5, r6, r7, pc}

90018628 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
90018628:	b538      	push	{r3, r4, r5, lr}
9001862a:	460c      	mov	r4, r1
9001862c:	6811      	ldr	r1, [r2, #0]
9001862e:	4610      	mov	r0, r2
90018630:	68cd      	ldr	r5, [r1, #12]
90018632:	4619      	mov	r1, r3
90018634:	47a8      	blx	r5
90018636:	2800      	cmp	r0, #0
90018638:	bf08      	it	eq
9001863a:	4620      	moveq	r0, r4
9001863c:	bd38      	pop	{r3, r4, r5, pc}
	...

90018640 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
90018640:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90018642:	4604      	mov	r4, r0
90018644:	4615      	mov	r5, r2
90018646:	4608      	mov	r0, r1
90018648:	b93a      	cbnz	r2, 9001865a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
9001864a:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
9001864e:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
90018652:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
90018656:	4628      	mov	r0, r5
90018658:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9001865a:	f892 c00d 	ldrb.w	ip, [r2, #13]
9001865e:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
90018662:	8893      	ldrh	r3, [r2, #4]
90018664:	ea4f 160c 	mov.w	r6, ip, lsl #4
90018668:	f406 7280 	and.w	r2, r6, #256	; 0x100
9001866c:	79ee      	ldrb	r6, [r5, #7]
9001866e:	4316      	orrs	r6, r2
90018670:	19da      	adds	r2, r3, r7
90018672:	b291      	uxth	r1, r2
90018674:	b2b7      	uxth	r7, r6
90018676:	291d      	cmp	r1, #29
90018678:	d87b      	bhi.n	90018772 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x132>
9001867a:	2201      	movs	r2, #1
9001867c:	10f6      	asrs	r6, r6, #3
9001867e:	408a      	lsls	r2, r1
90018680:	4974      	ldr	r1, [pc, #464]	; (90018854 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
90018682:	420a      	tst	r2, r1
90018684:	d12e      	bne.n	900186e4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
90018686:	f412 7f60 	tst.w	r2, #896	; 0x380
9001868a:	d072      	beq.n	90018772 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x132>
9001868c:	f104 024c 	add.w	r2, r4, #76	; 0x4c
90018690:	462b      	mov	r3, r5
90018692:	f105 0e08 	add.w	lr, r5, #8
90018696:	4615      	mov	r5, r2
90018698:	6818      	ldr	r0, [r3, #0]
9001869a:	3308      	adds	r3, #8
9001869c:	f853 1c04 	ldr.w	r1, [r3, #-4]
900186a0:	4694      	mov	ip, r2
900186a2:	4573      	cmp	r3, lr
900186a4:	e8ac 0003 	stmia.w	ip!, {r0, r1}
900186a8:	4662      	mov	r2, ip
900186aa:	d1f5      	bne.n	90018698 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x58>
900186ac:	6818      	ldr	r0, [r3, #0]
900186ae:	f8cc 0000 	str.w	r0, [ip]
900186b2:	889b      	ldrh	r3, [r3, #4]
900186b4:	f8ac 3004 	strh.w	r3, [ip, #4]
900186b8:	b2b3      	uxth	r3, r6
900186ba:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
900186be:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
900186c2:	1aca      	subs	r2, r1, r3
900186c4:	1bcf      	subs	r7, r1, r7
900186c6:	f020 0060 	bic.w	r0, r0, #96	; 0x60
900186ca:	b292      	uxth	r2, r2
900186cc:	1afb      	subs	r3, r7, r3
900186ce:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
900186d2:	10d2      	asrs	r2, r2, #3
900186d4:	f002 0260 	and.w	r2, r2, #96	; 0x60
900186d8:	4302      	orrs	r2, r0
900186da:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
900186de:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
900186e2:	e7b8      	b.n	90018656 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
900186e4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
900186e6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
900186ea:	8c59      	ldrh	r1, [r3, #34]	; 0x22
900186ec:	f640 6333 	movw	r3, #3635	; 0xe33
900186f0:	4299      	cmp	r1, r3
900186f2:	d110      	bne.n	90018716 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
900186f4:	6803      	ldr	r3, [r0, #0]
900186f6:	68db      	ldr	r3, [r3, #12]
900186f8:	4798      	blx	r3
900186fa:	7b41      	ldrb	r1, [r0, #13]
900186fc:	00cb      	lsls	r3, r1, #3
900186fe:	f403 7280 	and.w	r2, r3, #256	; 0x100
90018702:	7a03      	ldrb	r3, [r0, #8]
90018704:	0648      	lsls	r0, r1, #25
90018706:	ea43 0302 	orr.w	r3, r3, r2
9001870a:	bf44      	itt	mi
9001870c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
90018710:	b21b      	sxthmi	r3, r3
90018712:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
90018716:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
9001871a:	462a      	mov	r2, r5
9001871c:	f105 0c08 	add.w	ip, r5, #8
90018720:	443b      	add	r3, r7
90018722:	4433      	add	r3, r6
90018724:	f104 064c 	add.w	r6, r4, #76	; 0x4c
90018728:	b29b      	uxth	r3, r3
9001872a:	4635      	mov	r5, r6
9001872c:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
90018730:	6810      	ldr	r0, [r2, #0]
90018732:	3208      	adds	r2, #8
90018734:	f852 1c04 	ldr.w	r1, [r2, #-4]
90018738:	4637      	mov	r7, r6
9001873a:	4562      	cmp	r2, ip
9001873c:	c703      	stmia	r7!, {r0, r1}
9001873e:	463e      	mov	r6, r7
90018740:	d1f6      	bne.n	90018730 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
90018742:	6810      	ldr	r0, [r2, #0]
90018744:	6038      	str	r0, [r7, #0]
90018746:	8892      	ldrh	r2, [r2, #4]
90018748:	80ba      	strh	r2, [r7, #4]
9001874a:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
9001874e:	10db      	asrs	r3, r3, #3
90018750:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
90018754:	f003 0360 	and.w	r3, r3, #96	; 0x60
90018758:	f022 0260 	bic.w	r2, r2, #96	; 0x60
9001875c:	4313      	orrs	r3, r2
9001875e:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
90018762:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
90018766:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
9001876a:	1a9b      	subs	r3, r3, r2
9001876c:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
90018770:	e771      	b.n	90018656 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
90018772:	f023 0204 	bic.w	r2, r3, #4
90018776:	f640 611b 	movw	r1, #3611	; 0xe1b
9001877a:	428a      	cmp	r2, r1
9001877c:	d003      	beq.n	90018786 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x146>
9001877e:	f640 621d 	movw	r2, #3613	; 0xe1d
90018782:	4293      	cmp	r3, r2
90018784:	d120      	bne.n	900187c8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x188>
90018786:	3b01      	subs	r3, #1
90018788:	4602      	mov	r2, r0
9001878a:	4629      	mov	r1, r5
9001878c:	4620      	mov	r0, r4
9001878e:	b29b      	uxth	r3, r3
90018790:	f7ff ff4a 	bl	90018628 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
90018794:	7b41      	ldrb	r1, [r0, #13]
90018796:	00cb      	lsls	r3, r1, #3
90018798:	0649      	lsls	r1, r1, #25
9001879a:	f403 7280 	and.w	r2, r3, #256	; 0x100
9001879e:	7a03      	ldrb	r3, [r0, #8]
900187a0:	ea43 0302 	orr.w	r3, r3, r2
900187a4:	bf44      	itt	mi
900187a6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
900187aa:	b21b      	sxthmi	r3, r3
900187ac:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
900187b0:	7b6b      	ldrb	r3, [r5, #13]
900187b2:	7aaa      	ldrb	r2, [r5, #10]
900187b4:	005b      	lsls	r3, r3, #1
900187b6:	f403 7380 	and.w	r3, r3, #256	; 0x100
900187ba:	4313      	orrs	r3, r2
900187bc:	115a      	asrs	r2, r3, #5
900187be:	eb02 0393 	add.w	r3, r2, r3, lsr #2
900187c2:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
900187c6:	e035      	b.n	90018834 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
900187c8:	ea4f 02cc 	mov.w	r2, ip, lsl #3
900187cc:	f01c 0f40 	tst.w	ip, #64	; 0x40
900187d0:	f402 7180 	and.w	r1, r2, #256	; 0x100
900187d4:	7a2a      	ldrb	r2, [r5, #8]
900187d6:	ea42 0201 	orr.w	r2, r2, r1
900187da:	f640 6109 	movw	r1, #3593	; 0xe09
900187de:	bf1c      	itt	ne
900187e0:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
900187e4:	b212      	sxthne	r2, r2
900187e6:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
900187ea:	f023 0210 	bic.w	r2, r3, #16
900187ee:	428a      	cmp	r2, r1
900187f0:	d003      	beq.n	900187fa <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ba>
900187f2:	f640 6213 	movw	r2, #3603	; 0xe13
900187f6:	4293      	cmp	r3, r2
900187f8:	d129      	bne.n	9001884e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
900187fa:	7b6e      	ldrb	r6, [r5, #13]
900187fc:	4629      	mov	r1, r5
900187fe:	0076      	lsls	r6, r6, #1
90018800:	f406 7280 	and.w	r2, r6, #256	; 0x100
90018804:	7aae      	ldrb	r6, [r5, #10]
90018806:	4316      	orrs	r6, r2
90018808:	f640 6213 	movw	r2, #3603	; 0xe13
9001880c:	4293      	cmp	r3, r2
9001880e:	4602      	mov	r2, r0
90018810:	4620      	mov	r0, r4
90018812:	bf16      	itet	ne
90018814:	f103 33ff 	addne.w	r3, r3, #4294967295
90018818:	f640 630c 	movweq	r3, #3596	; 0xe0c
9001881c:	b29b      	uxthne	r3, r3
9001881e:	f7ff ff03 	bl	90018628 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
90018822:	7b43      	ldrb	r3, [r0, #13]
90018824:	7a82      	ldrb	r2, [r0, #10]
90018826:	005b      	lsls	r3, r3, #1
90018828:	f403 7380 	and.w	r3, r3, #256	; 0x100
9001882c:	4313      	orrs	r3, r2
9001882e:	1af6      	subs	r6, r6, r3
90018830:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
90018834:	7b69      	ldrb	r1, [r5, #13]
90018836:	00cb      	lsls	r3, r1, #3
90018838:	f403 7280 	and.w	r2, r3, #256	; 0x100
9001883c:	7a2b      	ldrb	r3, [r5, #8]
9001883e:	4313      	orrs	r3, r2
90018840:	064a      	lsls	r2, r1, #25
90018842:	bf44      	itt	mi
90018844:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
90018848:	b21b      	sxthmi	r3, r3
9001884a:	1bdb      	subs	r3, r3, r7
9001884c:	e747      	b.n	900186de <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
9001884e:	2300      	movs	r3, #0
90018850:	e7b7      	b.n	900187c2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x182>
90018852:	bf00      	nop
90018854:	3fc00079 	.word	0x3fc00079

90018858 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
90018858:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9001885c:	4604      	mov	r4, r0
9001885e:	b942      	cbnz	r2, 90018872 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
90018860:	f44f 4300 	mov.w	r3, #32768	; 0x8000
90018864:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
90018868:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
9001886c:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
90018870:	e047      	b.n	90018902 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
90018872:	7b51      	ldrb	r1, [r2, #13]
90018874:	8893      	ldrh	r3, [r2, #4]
90018876:	010d      	lsls	r5, r1, #4
90018878:	f405 7080 	and.w	r0, r5, #256	; 0x100
9001887c:	79d5      	ldrb	r5, [r2, #7]
9001887e:	4305      	orrs	r5, r0
90018880:	2d04      	cmp	r5, #4
90018882:	bfcc      	ite	gt
90018884:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
90018888:	f04f 0e01 	movle.w	lr, #1
9001888c:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
90018890:	f200 80ab 	bhi.w	900189ea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
90018894:	f240 60e7 	movw	r0, #1767	; 0x6e7
90018898:	4283      	cmp	r3, r0
9001889a:	d216      	bcs.n	900188ca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001889c:	f240 605b 	movw	r0, #1627	; 0x65b
900188a0:	4283      	cmp	r3, r0
900188a2:	d859      	bhi.n	90018958 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
900188a4:	f240 6057 	movw	r0, #1623	; 0x657
900188a8:	4283      	cmp	r3, r0
900188aa:	d20e      	bcs.n	900188ca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
900188ac:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
900188b0:	d24a      	bcs.n	90018948 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
900188b2:	f240 604e 	movw	r0, #1614	; 0x64e
900188b6:	4283      	cmp	r3, r0
900188b8:	d207      	bcs.n	900188ca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
900188ba:	f240 601a 	movw	r0, #1562	; 0x61a
900188be:	4283      	cmp	r3, r0
900188c0:	d02a      	beq.n	90018918 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
900188c2:	d821      	bhi.n	90018908 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
900188c4:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
900188c8:	d35b      	bcc.n	90018982 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
900188ca:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
900188ce:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
900188d2:	f040 80d0 	bne.w	90018a76 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
900188d6:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
900188da:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
900188de:	f040 80ca 	bne.w	90018a76 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
900188e2:	00cb      	lsls	r3, r1, #3
900188e4:	0649      	lsls	r1, r1, #25
900188e6:	f403 7080 	and.w	r0, r3, #256	; 0x100
900188ea:	7a13      	ldrb	r3, [r2, #8]
900188ec:	ea43 0300 	orr.w	r3, r3, r0
900188f0:	bf44      	itt	mi
900188f2:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
900188f6:	b21b      	sxthmi	r3, r3
900188f8:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
900188fc:	1b5d      	subs	r5, r3, r5
900188fe:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
90018902:	4610      	mov	r0, r2
90018904:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90018908:	f240 604b 	movw	r0, #1611	; 0x64b
9001890c:	4283      	cmp	r3, r0
9001890e:	d338      	bcc.n	90018982 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
90018910:	f240 604c 	movw	r0, #1612	; 0x64c
90018914:	4283      	cmp	r3, r0
90018916:	d9d8      	bls.n	900188ca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90018918:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
9001891c:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
90018920:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
90018924:	f040 80f3 	bne.w	90018b0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
90018928:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
9001892c:	f040 80ef 	bne.w	90018b0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
90018930:	00cb      	lsls	r3, r1, #3
90018932:	064e      	lsls	r6, r1, #25
90018934:	f403 7080 	and.w	r0, r3, #256	; 0x100
90018938:	7a13      	ldrb	r3, [r2, #8]
9001893a:	ea43 0300 	orr.w	r3, r3, r0
9001893e:	bf44      	itt	mi
90018940:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
90018944:	b21b      	sxthmi	r3, r3
90018946:	e7d9      	b.n	900188fc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
90018948:	f240 6054 	movw	r0, #1620	; 0x654
9001894c:	4283      	cmp	r3, r0
9001894e:	d8e3      	bhi.n	90018918 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90018950:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
90018954:	d9e0      	bls.n	90018918 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90018956:	e7b8      	b.n	900188ca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90018958:	f240 6074 	movw	r0, #1652	; 0x674
9001895c:	4283      	cmp	r3, r0
9001895e:	d0b4      	beq.n	900188ca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90018960:	d82d      	bhi.n	900189be <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
90018962:	f240 605e 	movw	r0, #1630	; 0x65e
90018966:	4283      	cmp	r3, r0
90018968:	d804      	bhi.n	90018974 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
9001896a:	f240 605d 	movw	r0, #1629	; 0x65d
9001896e:	4283      	cmp	r3, r0
90018970:	d3d2      	bcc.n	90018918 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90018972:	e7aa      	b.n	900188ca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90018974:	f240 605f 	movw	r0, #1631	; 0x65f
90018978:	4283      	cmp	r3, r0
9001897a:	d0cd      	beq.n	90018918 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001897c:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
90018980:	d0a3      	beq.n	900188ca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90018982:	00cb      	lsls	r3, r1, #3
90018984:	0649      	lsls	r1, r1, #25
90018986:	f403 7080 	and.w	r0, r3, #256	; 0x100
9001898a:	7a13      	ldrb	r3, [r2, #8]
9001898c:	ea43 0300 	orr.w	r3, r3, r0
90018990:	bf44      	itt	mi
90018992:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
90018996:	b21b      	sxthmi	r3, r3
90018998:	1b5d      	subs	r5, r3, r5
9001899a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
9001899e:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
900189a2:	7b53      	ldrb	r3, [r2, #13]
900189a4:	015b      	lsls	r3, r3, #5
900189a6:	f403 7180 	and.w	r1, r3, #256	; 0x100
900189aa:	7993      	ldrb	r3, [r2, #6]
900189ac:	430b      	orrs	r3, r1
900189ae:	2105      	movs	r1, #5
900189b0:	005b      	lsls	r3, r3, #1
900189b2:	fb93 f3f1 	sdiv	r3, r3, r1
900189b6:	f992 1009 	ldrsb.w	r1, [r2, #9]
900189ba:	440b      	add	r3, r1
900189bc:	e756      	b.n	9001886c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
900189be:	f240 60e2 	movw	r0, #1762	; 0x6e2
900189c2:	4283      	cmp	r3, r0
900189c4:	d809      	bhi.n	900189da <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
900189c6:	f240 60df 	movw	r0, #1759	; 0x6df
900189ca:	4283      	cmp	r3, r0
900189cc:	f4bf af7d 	bcs.w	900188ca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
900189d0:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
900189d4:	2b05      	cmp	r3, #5
900189d6:	d8d4      	bhi.n	90018982 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
900189d8:	e777      	b.n	900188ca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
900189da:	f240 60e3 	movw	r0, #1763	; 0x6e3
900189de:	4283      	cmp	r3, r0
900189e0:	d09a      	beq.n	90018918 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
900189e2:	f240 60e4 	movw	r0, #1764	; 0x6e4
900189e6:	4283      	cmp	r3, r0
900189e8:	e7ca      	b.n	90018980 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
900189ea:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
900189ee:	d22b      	bcs.n	90018a48 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
900189f0:	f640 00ed 	movw	r0, #2285	; 0x8ed
900189f4:	4283      	cmp	r3, r0
900189f6:	d28f      	bcs.n	90018918 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
900189f8:	f640 00e5 	movw	r0, #2277	; 0x8e5
900189fc:	4283      	cmp	r3, r0
900189fe:	d816      	bhi.n	90018a2e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
90018a00:	f640 00e4 	movw	r0, #2276	; 0x8e4
90018a04:	4283      	cmp	r3, r0
90018a06:	f4bf af60 	bcs.w	900188ca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90018a0a:	f240 60ec 	movw	r0, #1772	; 0x6ec
90018a0e:	4283      	cmp	r3, r0
90018a10:	d80a      	bhi.n	90018a28 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
90018a12:	f240 60eb 	movw	r0, #1771	; 0x6eb
90018a16:	4283      	cmp	r3, r0
90018a18:	f4bf af57 	bcs.w	900188ca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90018a1c:	f240 60ea 	movw	r0, #1770	; 0x6ea
90018a20:	4283      	cmp	r3, r0
90018a22:	f43f af79 	beq.w	90018918 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90018a26:	e7ac      	b.n	90018982 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
90018a28:	f240 60ed 	movw	r0, #1773	; 0x6ed
90018a2c:	e7f8      	b.n	90018a20 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
90018a2e:	f640 00e8 	movw	r0, #2280	; 0x8e8
90018a32:	4283      	cmp	r3, r0
90018a34:	d802      	bhi.n	90018a3c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
90018a36:	f640 00e7 	movw	r0, #2279	; 0x8e7
90018a3a:	e798      	b.n	9001896e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
90018a3c:	f640 00e9 	movw	r0, #2281	; 0x8e9
90018a40:	4283      	cmp	r3, r0
90018a42:	f47f af42 	bne.w	900188ca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90018a46:	e767      	b.n	90018918 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90018a48:	f640 00f6 	movw	r0, #2294	; 0x8f6
90018a4c:	4283      	cmp	r3, r0
90018a4e:	f43f af63 	beq.w	90018918 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90018a52:	d802      	bhi.n	90018a5a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
90018a54:	f640 00f2 	movw	r0, #2290	; 0x8f2
90018a58:	e7f2      	b.n	90018a40 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
90018a5a:	f640 00fa 	movw	r0, #2298	; 0x8fa
90018a5e:	4283      	cmp	r3, r0
90018a60:	d805      	bhi.n	90018a6e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
90018a62:	f640 00f9 	movw	r0, #2297	; 0x8f9
90018a66:	4283      	cmp	r3, r0
90018a68:	f4ff af2f 	bcc.w	900188ca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90018a6c:	e754      	b.n	90018918 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90018a6e:	f640 00fe 	movw	r0, #2302	; 0x8fe
90018a72:	4283      	cmp	r3, r0
90018a74:	e7af      	b.n	900189d6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
90018a76:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
90018a7a:	4617      	mov	r7, r2
90018a7c:	f102 0808 	add.w	r8, r2, #8
90018a80:	4666      	mov	r6, ip
90018a82:	6838      	ldr	r0, [r7, #0]
90018a84:	3708      	adds	r7, #8
90018a86:	f857 1c04 	ldr.w	r1, [r7, #-4]
90018a8a:	46e6      	mov	lr, ip
90018a8c:	4547      	cmp	r7, r8
90018a8e:	e8ae 0003 	stmia.w	lr!, {r0, r1}
90018a92:	46f4      	mov	ip, lr
90018a94:	d1f5      	bne.n	90018a82 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
90018a96:	6838      	ldr	r0, [r7, #0]
90018a98:	f8ce 0000 	str.w	r0, [lr]
90018a9c:	88b9      	ldrh	r1, [r7, #4]
90018a9e:	f8ae 1004 	strh.w	r1, [lr, #4]
90018aa2:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
90018aa6:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
90018aaa:	d009      	beq.n	90018ac0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x268>
90018aac:	7b51      	ldrb	r1, [r2, #13]
90018aae:	7992      	ldrb	r2, [r2, #6]
90018ab0:	0149      	lsls	r1, r1, #5
90018ab2:	f401 7180 	and.w	r1, r1, #256	; 0x100
90018ab6:	4311      	orrs	r1, r2
90018ab8:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
90018abc:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
90018ac0:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
90018ac4:	b2ad      	uxth	r5, r5
90018ac6:	d00d      	beq.n	90018ae4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28c>
90018ac8:	442b      	add	r3, r5
90018aca:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
90018ace:	b29b      	uxth	r3, r3
90018ad0:	f022 0260 	bic.w	r2, r2, #96	; 0x60
90018ad4:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
90018ad8:	10db      	asrs	r3, r3, #3
90018ada:	f003 0360 	and.w	r3, r3, #96	; 0x60
90018ade:	4313      	orrs	r3, r2
90018ae0:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
90018ae4:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
90018ae8:	00cb      	lsls	r3, r1, #3
90018aea:	064f      	lsls	r7, r1, #25
90018aec:	f403 7280 	and.w	r2, r3, #256	; 0x100
90018af0:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
90018af4:	ea43 0302 	orr.w	r3, r3, r2
90018af8:	bf44      	itt	mi
90018afa:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
90018afe:	b21b      	sxthmi	r3, r3
90018b00:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
90018b04:	1b5b      	subs	r3, r3, r5
90018b06:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
90018b0a:	4632      	mov	r2, r6
90018b0c:	e6f9      	b.n	90018902 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
90018b0e:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
90018b12:	4617      	mov	r7, r2
90018b14:	f102 0908 	add.w	r9, r2, #8
90018b18:	4666      	mov	r6, ip
90018b1a:	6838      	ldr	r0, [r7, #0]
90018b1c:	3708      	adds	r7, #8
90018b1e:	f857 1c04 	ldr.w	r1, [r7, #-4]
90018b22:	46e0      	mov	r8, ip
90018b24:	454f      	cmp	r7, r9
90018b26:	e8a8 0003 	stmia.w	r8!, {r0, r1}
90018b2a:	46c4      	mov	ip, r8
90018b2c:	d1f5      	bne.n	90018b1a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c2>
90018b2e:	6838      	ldr	r0, [r7, #0]
90018b30:	f8c8 0000 	str.w	r0, [r8]
90018b34:	88b9      	ldrh	r1, [r7, #4]
90018b36:	f8a8 1004 	strh.w	r1, [r8, #4]
90018b3a:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
90018b3e:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
90018b42:	d009      	beq.n	90018b58 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x300>
90018b44:	7b51      	ldrb	r1, [r2, #13]
90018b46:	7992      	ldrb	r2, [r2, #6]
90018b48:	0149      	lsls	r1, r1, #5
90018b4a:	f401 7180 	and.w	r1, r1, #256	; 0x100
90018b4e:	4311      	orrs	r1, r2
90018b50:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
90018b54:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
90018b58:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
90018b5c:	d00e      	beq.n	90018b7c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
90018b5e:	eba3 030e 	sub.w	r3, r3, lr
90018b62:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
90018b66:	b29b      	uxth	r3, r3
90018b68:	f022 0260 	bic.w	r2, r2, #96	; 0x60
90018b6c:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
90018b70:	10db      	asrs	r3, r3, #3
90018b72:	f003 0360 	and.w	r3, r3, #96	; 0x60
90018b76:	4313      	orrs	r3, r2
90018b78:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
90018b7c:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
90018b80:	00cb      	lsls	r3, r1, #3
90018b82:	0648      	lsls	r0, r1, #25
90018b84:	f403 7280 	and.w	r2, r3, #256	; 0x100
90018b88:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
90018b8c:	ea43 0302 	orr.w	r3, r3, r2
90018b90:	bf44      	itt	mi
90018b92:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
90018b96:	b21b      	sxthmi	r3, r3
90018b98:	1b5d      	subs	r5, r3, r5
90018b9a:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
90018b9e:	e7b4      	b.n	90018b0a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b2>

90018ba0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
90018ba0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90018ba4:	461e      	mov	r6, r3
90018ba6:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
90018ba8:	4604      	mov	r4, r0
90018baa:	4617      	mov	r7, r2
90018bac:	eb00 0343 	add.w	r3, r0, r3, lsl #1
90018bb0:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
90018bb4:	f7eb fa98 	bl	900040e8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
90018bb8:	4605      	mov	r5, r0
90018bba:	b918      	cbnz	r0, 90018bc4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
90018bbc:	6030      	str	r0, [r6, #0]
90018bbe:	4628      	mov	r0, r5
90018bc0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90018bc4:	683b      	ldr	r3, [r7, #0]
90018bc6:	4601      	mov	r1, r0
90018bc8:	4638      	mov	r0, r7
90018bca:	68db      	ldr	r3, [r3, #12]
90018bcc:	4798      	blx	r3
90018bce:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
90018bd2:	4602      	mov	r2, r0
90018bd4:	6030      	str	r0, [r6, #0]
90018bd6:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
90018bda:	d213      	bcs.n	90018c04 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
90018bdc:	4643      	mov	r3, r8
90018bde:	4639      	mov	r1, r7
90018be0:	4620      	mov	r0, r4
90018be2:	f7ff fe39 	bl	90018858 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
90018be6:	6030      	str	r0, [r6, #0]
90018be8:	6833      	ldr	r3, [r6, #0]
90018bea:	b143      	cbz	r3, 90018bfe <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
90018bec:	7b5a      	ldrb	r2, [r3, #13]
90018bee:	7a9b      	ldrb	r3, [r3, #10]
90018bf0:	0052      	lsls	r2, r2, #1
90018bf2:	f402 7280 	and.w	r2, r2, #256	; 0x100
90018bf6:	4313      	orrs	r3, r2
90018bf8:	bf0c      	ite	eq
90018bfa:	2301      	moveq	r3, #1
90018bfc:	2300      	movne	r3, #0
90018bfe:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
90018c02:	e7dc      	b.n	90018bbe <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
90018c04:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
90018c08:	b29b      	uxth	r3, r3
90018c0a:	2b7f      	cmp	r3, #127	; 0x7f
90018c0c:	d804      	bhi.n	90018c18 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
90018c0e:	4639      	mov	r1, r7
90018c10:	4620      	mov	r0, r4
90018c12:	f7ff fd15 	bl	90018640 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
90018c16:	e7e6      	b.n	90018be6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
90018c18:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
90018c1c:	2b00      	cmp	r3, #0
90018c1e:	d0e3      	beq.n	90018be8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
90018c20:	f640 1302 	movw	r3, #2306	; 0x902
90018c24:	429d      	cmp	r5, r3
90018c26:	d1df      	bne.n	90018be8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
90018c28:	4601      	mov	r1, r0
90018c2a:	4620      	mov	r0, r4
90018c2c:	f7ff fcd8 	bl	900185e0 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
90018c30:	e7d9      	b.n	90018be6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

90018c32 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
90018c32:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
90018c36:	461e      	mov	r6, r3
90018c38:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
90018c3a:	4604      	mov	r4, r0
90018c3c:	4617      	mov	r7, r2
90018c3e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
90018c42:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
90018c46:	f7eb fa4f 	bl	900040e8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
90018c4a:	4605      	mov	r5, r0
90018c4c:	b918      	cbnz	r0, 90018c56 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
90018c4e:	6030      	str	r0, [r6, #0]
90018c50:	4628      	mov	r0, r5
90018c52:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
90018c56:	683b      	ldr	r3, [r7, #0]
90018c58:	4601      	mov	r1, r0
90018c5a:	4638      	mov	r0, r7
90018c5c:	f8d3 9008 	ldr.w	r9, [r3, #8]
90018c60:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
90018c64:	47c8      	blx	r9
90018c66:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
90018c6a:	4602      	mov	r2, r0
90018c6c:	6030      	str	r0, [r6, #0]
90018c6e:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
90018c72:	d213      	bcs.n	90018c9c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
90018c74:	4643      	mov	r3, r8
90018c76:	4639      	mov	r1, r7
90018c78:	4620      	mov	r0, r4
90018c7a:	f7ff fded 	bl	90018858 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
90018c7e:	6030      	str	r0, [r6, #0]
90018c80:	6833      	ldr	r3, [r6, #0]
90018c82:	b143      	cbz	r3, 90018c96 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
90018c84:	7b5a      	ldrb	r2, [r3, #13]
90018c86:	7a9b      	ldrb	r3, [r3, #10]
90018c88:	0052      	lsls	r2, r2, #1
90018c8a:	f402 7280 	and.w	r2, r2, #256	; 0x100
90018c8e:	4313      	orrs	r3, r2
90018c90:	bf0c      	ite	eq
90018c92:	2301      	moveq	r3, #1
90018c94:	2300      	movne	r3, #0
90018c96:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
90018c9a:	e7d9      	b.n	90018c50 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
90018c9c:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
90018ca0:	b29b      	uxth	r3, r3
90018ca2:	2b7f      	cmp	r3, #127	; 0x7f
90018ca4:	d804      	bhi.n	90018cb0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
90018ca6:	4639      	mov	r1, r7
90018ca8:	4620      	mov	r0, r4
90018caa:	f7ff fcc9 	bl	90018640 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
90018cae:	e7e6      	b.n	90018c7e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
90018cb0:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
90018cb4:	2b00      	cmp	r3, #0
90018cb6:	d0e3      	beq.n	90018c80 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
90018cb8:	f640 1302 	movw	r3, #2306	; 0x902
90018cbc:	429d      	cmp	r5, r3
90018cbe:	d1df      	bne.n	90018c80 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
90018cc0:	4601      	mov	r1, r0
90018cc2:	4620      	mov	r0, r4
90018cc4:	f7ff fc8c 	bl	900185e0 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
90018cc8:	e7d9      	b.n	90018c7e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

90018cca <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
90018cca:	b510      	push	{r4, lr}
90018ccc:	4604      	mov	r4, r0
90018cce:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
90018cd2:	8f23      	ldrh	r3, [r4, #56]	; 0x38
90018cd4:	b1e1      	cbz	r1, 90018d10 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
90018cd6:	2b0a      	cmp	r3, #10
90018cd8:	d02d      	beq.n	90018d36 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
90018cda:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
90018cdc:	3901      	subs	r1, #1
90018cde:	eb04 0042 	add.w	r0, r4, r2, lsl #1
90018ce2:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
90018ce4:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
90018ce8:	1c51      	adds	r1, r2, #1
90018cea:	b289      	uxth	r1, r1
90018cec:	2901      	cmp	r1, #1
90018cee:	bf8a      	itet	hi
90018cf0:	f102 32ff 	addhi.w	r2, r2, #4294967295
90018cf4:	87e1      	strhls	r1, [r4, #62]	; 0x3e
90018cf6:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
90018cf8:	1c5a      	adds	r2, r3, #1
90018cfa:	8722      	strh	r2, [r4, #56]	; 0x38
90018cfc:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
90018cfe:	4413      	add	r3, r2
90018d00:	b29b      	uxth	r3, r3
90018d02:	2b09      	cmp	r3, #9
90018d04:	bf88      	it	hi
90018d06:	3b0a      	subhi	r3, #10
90018d08:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90018d0c:	8458      	strh	r0, [r3, #34]	; 0x22
90018d0e:	e7de      	b.n	90018cce <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
90018d10:	8f23      	ldrh	r3, [r4, #56]	; 0x38
90018d12:	2b0a      	cmp	r3, #10
90018d14:	d00f      	beq.n	90018d36 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
90018d16:	4620      	mov	r0, r4
90018d18:	f7ff fc10 	bl	9001853c <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
90018d1c:	8f23      	ldrh	r3, [r4, #56]	; 0x38
90018d1e:	1c5a      	adds	r2, r3, #1
90018d20:	8722      	strh	r2, [r4, #56]	; 0x38
90018d22:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
90018d24:	4413      	add	r3, r2
90018d26:	b29b      	uxth	r3, r3
90018d28:	2b09      	cmp	r3, #9
90018d2a:	bf88      	it	hi
90018d2c:	3b0a      	subhi	r3, #10
90018d2e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90018d32:	8458      	strh	r0, [r3, #34]	; 0x22
90018d34:	e7ec      	b.n	90018d10 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
90018d36:	bd10      	pop	{r4, pc}

90018d38 <_ZN8touchgfx12TextProvider11getNextCharEv>:
90018d38:	b538      	push	{r3, r4, r5, lr}
90018d3a:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
90018d3c:	4604      	mov	r4, r0
90018d3e:	eb00 0243 	add.w	r2, r0, r3, lsl #1
90018d42:	8c55      	ldrh	r5, [r2, #34]	; 0x22
90018d44:	8f02      	ldrh	r2, [r0, #56]	; 0x38
90018d46:	3a01      	subs	r2, #1
90018d48:	8702      	strh	r2, [r0, #56]	; 0x38
90018d4a:	1c5a      	adds	r2, r3, #1
90018d4c:	b292      	uxth	r2, r2
90018d4e:	2a09      	cmp	r2, #9
90018d50:	bf8a      	itet	hi
90018d52:	3b09      	subhi	r3, #9
90018d54:	86c2      	strhls	r2, [r0, #54]	; 0x36
90018d56:	86c3      	strhhi	r3, [r0, #54]	; 0x36
90018d58:	f7ff ffb7 	bl	90018cca <_ZN8touchgfx12TextProvider15fillInputBufferEv>
90018d5c:	8c23      	ldrh	r3, [r4, #32]
90018d5e:	2b01      	cmp	r3, #1
90018d60:	bf9c      	itt	ls
90018d62:	3301      	addls	r3, #1
90018d64:	8423      	strhls	r3, [r4, #32]
90018d66:	8be3      	ldrh	r3, [r4, #30]
90018d68:	b90b      	cbnz	r3, 90018d6e <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
90018d6a:	2302      	movs	r3, #2
90018d6c:	83e3      	strh	r3, [r4, #30]
90018d6e:	8be3      	ldrh	r3, [r4, #30]
90018d70:	4628      	mov	r0, r5
90018d72:	3b01      	subs	r3, #1
90018d74:	b29b      	uxth	r3, r3
90018d76:	83e3      	strh	r3, [r4, #30]
90018d78:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90018d7c:	8365      	strh	r5, [r4, #26]
90018d7e:	bd38      	pop	{r3, r4, r5, pc}

90018d80 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
90018d80:	428a      	cmp	r2, r1
90018d82:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90018d86:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
90018d88:	d932      	bls.n	90018df0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x70>
90018d8a:	8f05      	ldrh	r5, [r0, #56]	; 0x38
90018d8c:	1a54      	subs	r4, r2, r1
90018d8e:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
90018d92:	19ee      	adds	r6, r5, r7
90018d94:	fa1f fe84 	uxth.w	lr, r4
90018d98:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
90018d9c:	3e01      	subs	r6, #1
90018d9e:	b2b4      	uxth	r4, r6
90018da0:	eba4 090e 	sub.w	r9, r4, lr
90018da4:	fa1f f989 	uxth.w	r9, r9
90018da8:	2c09      	cmp	r4, #9
90018daa:	4626      	mov	r6, r4
90018dac:	bf88      	it	hi
90018dae:	f1a4 060a 	subhi.w	r6, r4, #10
90018db2:	f1bc 0f00 	cmp.w	ip, #0
90018db6:	f104 34ff 	add.w	r4, r4, #4294967295
90018dba:	bf08      	it	eq
90018dbc:	f04f 0c02 	moveq.w	ip, #2
90018dc0:	eb00 0646 	add.w	r6, r0, r6, lsl #1
90018dc4:	b2a4      	uxth	r4, r4
90018dc6:	f10c 3cff 	add.w	ip, ip, #4294967295
90018dca:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
90018dce:	454c      	cmp	r4, r9
90018dd0:	fa1f fc8c 	uxth.w	ip, ip
90018dd4:	eb00 064c 	add.w	r6, r0, ip, lsl #1
90018dd8:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
90018ddc:	d1e4      	bne.n	90018da8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
90018dde:	eba5 050e 	sub.w	r5, r5, lr
90018de2:	eb0e 0408 	add.w	r4, lr, r8
90018de6:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
90018dea:	8705      	strh	r5, [r0, #56]	; 0x38
90018dec:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
90018df0:	8f04      	ldrh	r4, [r0, #56]	; 0x38
90018df2:	250a      	movs	r5, #10
90018df4:	1a64      	subs	r4, r4, r1
90018df6:	4439      	add	r1, r7
90018df8:	b289      	uxth	r1, r1
90018dfa:	8704      	strh	r4, [r0, #56]	; 0x38
90018dfc:	2909      	cmp	r1, #9
90018dfe:	bf88      	it	hi
90018e00:	390a      	subhi	r1, #10
90018e02:	86c1      	strh	r1, [r0, #54]	; 0x36
90018e04:	b18a      	cbz	r2, 90018e2a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xaa>
90018e06:	8f01      	ldrh	r1, [r0, #56]	; 0x38
90018e08:	3a01      	subs	r2, #1
90018e0a:	3101      	adds	r1, #1
90018e0c:	b292      	uxth	r2, r2
90018e0e:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
90018e12:	8701      	strh	r1, [r0, #56]	; 0x38
90018e14:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
90018e16:	b901      	cbnz	r1, 90018e1a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9a>
90018e18:	86c5      	strh	r5, [r0, #54]	; 0x36
90018e1a:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
90018e1c:	3901      	subs	r1, #1
90018e1e:	b289      	uxth	r1, r1
90018e20:	86c1      	strh	r1, [r0, #54]	; 0x36
90018e22:	eb00 0141 	add.w	r1, r0, r1, lsl #1
90018e26:	844c      	strh	r4, [r1, #34]	; 0x22
90018e28:	e7ec      	b.n	90018e04 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>
90018e2a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90018e2e:	f7ff bf4c 	b.w	90018cca <_ZN8touchgfx12TextProvider15fillInputBufferEv>

90018e32 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
90018e32:	b570      	push	{r4, r5, r6, lr}
90018e34:	2500      	movs	r5, #0
90018e36:	4295      	cmp	r5, r2
90018e38:	d011      	beq.n	90018e5e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
90018e3a:	8bc4      	ldrh	r4, [r0, #30]
90018e3c:	f831 6b02 	ldrh.w	r6, [r1], #2
90018e40:	4414      	add	r4, r2
90018e42:	3c01      	subs	r4, #1
90018e44:	1b64      	subs	r4, r4, r5
90018e46:	b2a4      	uxth	r4, r4
90018e48:	2c01      	cmp	r4, #1
90018e4a:	bf88      	it	hi
90018e4c:	3c02      	subhi	r4, #2
90018e4e:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90018e52:	8b64      	ldrh	r4, [r4, #26]
90018e54:	42b4      	cmp	r4, r6
90018e56:	d117      	bne.n	90018e88 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
90018e58:	3501      	adds	r5, #1
90018e5a:	b2ad      	uxth	r5, r5
90018e5c:	e7eb      	b.n	90018e36 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
90018e5e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
90018e62:	2400      	movs	r4, #0
90018e64:	4413      	add	r3, r2
90018e66:	b2a2      	uxth	r2, r4
90018e68:	429a      	cmp	r2, r3
90018e6a:	da0f      	bge.n	90018e8c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
90018e6c:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
90018e6e:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
90018e72:	3401      	adds	r4, #1
90018e74:	4432      	add	r2, r6
90018e76:	b292      	uxth	r2, r2
90018e78:	2a09      	cmp	r2, #9
90018e7a:	bf88      	it	hi
90018e7c:	3a0a      	subhi	r2, #10
90018e7e:	eb00 0242 	add.w	r2, r0, r2, lsl #1
90018e82:	8c52      	ldrh	r2, [r2, #34]	; 0x22
90018e84:	42aa      	cmp	r2, r5
90018e86:	d0ee      	beq.n	90018e66 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
90018e88:	2000      	movs	r0, #0
90018e8a:	bd70      	pop	{r4, r5, r6, pc}
90018e8c:	2001      	movs	r0, #1
90018e8e:	e7fc      	b.n	90018e8a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

90018e90 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
90018e90:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
90018e94:	4605      	mov	r5, r0
90018e96:	4616      	mov	r6, r2
90018e98:	1c8c      	adds	r4, r1, #2
90018e9a:	8809      	ldrh	r1, [r1, #0]
90018e9c:	ea4f 3a11 	mov.w	sl, r1, lsr #12
90018ea0:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
90018ea4:	42b3      	cmp	r3, r6
90018ea6:	d124      	bne.n	90018ef2 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
90018ea8:	f3c1 2903 	ubfx	r9, r1, #8, #4
90018eac:	f3c1 1803 	ubfx	r8, r1, #4, #4
90018eb0:	f001 070f 	and.w	r7, r1, #15
90018eb4:	4652      	mov	r2, sl
90018eb6:	f8cd 8000 	str.w	r8, [sp]
90018eba:	464b      	mov	r3, r9
90018ebc:	4621      	mov	r1, r4
90018ebe:	4628      	mov	r0, r5
90018ec0:	f7ff ffb7 	bl	90018e32 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
90018ec4:	4683      	mov	fp, r0
90018ec6:	b168      	cbz	r0, 90018ee4 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
90018ec8:	eb0a 0109 	add.w	r1, sl, r9
90018ecc:	463a      	mov	r2, r7
90018ece:	4628      	mov	r0, r5
90018ed0:	4441      	add	r1, r8
90018ed2:	eb04 0341 	add.w	r3, r4, r1, lsl #1
90018ed6:	4649      	mov	r1, r9
90018ed8:	f7ff ff52 	bl	90018d80 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
90018edc:	4658      	mov	r0, fp
90018ede:	b003      	add	sp, #12
90018ee0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90018ee4:	eb07 010a 	add.w	r1, r7, sl
90018ee8:	4449      	add	r1, r9
90018eea:	4441      	add	r1, r8
90018eec:	eb04 0141 	add.w	r1, r4, r1, lsl #1
90018ef0:	e7d2      	b.n	90018e98 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
90018ef2:	f04f 0b00 	mov.w	fp, #0
90018ef6:	e7f1      	b.n	90018edc <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

90018ef8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
90018ef8:	b570      	push	{r4, r5, r6, lr}
90018efa:	8810      	ldrh	r0, [r2, #0]
90018efc:	4298      	cmp	r0, r3
90018efe:	d817      	bhi.n	90018f30 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
90018f00:	1e48      	subs	r0, r1, #1
90018f02:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
90018f06:	4298      	cmp	r0, r3
90018f08:	d312      	bcc.n	90018f30 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
90018f0a:	2400      	movs	r4, #0
90018f0c:	428c      	cmp	r4, r1
90018f0e:	d20f      	bcs.n	90018f30 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
90018f10:	1860      	adds	r0, r4, r1
90018f12:	1040      	asrs	r0, r0, #1
90018f14:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
90018f18:	0085      	lsls	r5, r0, #2
90018f1a:	42b3      	cmp	r3, r6
90018f1c:	d902      	bls.n	90018f24 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
90018f1e:	3001      	adds	r0, #1
90018f20:	b284      	uxth	r4, r0
90018f22:	e7f3      	b.n	90018f0c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
90018f24:	d201      	bcs.n	90018f2a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
90018f26:	b281      	uxth	r1, r0
90018f28:	e7f0      	b.n	90018f0c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
90018f2a:	442a      	add	r2, r5
90018f2c:	8850      	ldrh	r0, [r2, #2]
90018f2e:	bd70      	pop	{r4, r5, r6, pc}
90018f30:	2000      	movs	r0, #0
90018f32:	e7fc      	b.n	90018f2e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

90018f34 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
90018f34:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90018f38:	6c45      	ldr	r5, [r0, #68]	; 0x44
90018f3a:	4604      	mov	r4, r0
90018f3c:	260b      	movs	r6, #11
90018f3e:	886f      	ldrh	r7, [r5, #2]
90018f40:	087f      	lsrs	r7, r7, #1
90018f42:	3e01      	subs	r6, #1
90018f44:	d013      	beq.n	90018f6e <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
90018f46:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
90018f48:	462a      	mov	r2, r5
90018f4a:	4639      	mov	r1, r7
90018f4c:	4620      	mov	r0, r4
90018f4e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90018f52:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
90018f56:	4643      	mov	r3, r8
90018f58:	f7ff ffce 	bl	90018ef8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
90018f5c:	b138      	cbz	r0, 90018f6e <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
90018f5e:	eb05 0140 	add.w	r1, r5, r0, lsl #1
90018f62:	4642      	mov	r2, r8
90018f64:	4620      	mov	r0, r4
90018f66:	f7ff ff93 	bl	90018e90 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
90018f6a:	2800      	cmp	r0, #0
90018f6c:	d1e9      	bne.n	90018f42 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
90018f6e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

90018f74 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
90018f74:	b570      	push	{r4, r5, r6, lr}
90018f76:	694a      	ldr	r2, [r1, #20]
90018f78:	6a8d      	ldr	r5, [r1, #40]	; 0x28
90018f7a:	684b      	ldr	r3, [r1, #4]
90018f7c:	1b54      	subs	r4, r2, r5
90018f7e:	6ace      	ldr	r6, [r1, #44]	; 0x2c
90018f80:	f000 8106 	beq.w	90019190 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
90018f84:	1b9b      	subs	r3, r3, r6
90018f86:	d003      	beq.n	90018f90 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
90018f88:	4363      	muls	r3, r4
90018f8a:	2210      	movs	r2, #16
90018f8c:	fb93 f3f2 	sdiv	r3, r3, r2
90018f90:	680c      	ldr	r4, [r1, #0]
90018f92:	698a      	ldr	r2, [r1, #24]
90018f94:	1b65      	subs	r5, r4, r5
90018f96:	f000 80fd 	beq.w	90019194 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
90018f9a:	1b92      	subs	r2, r2, r6
90018f9c:	d003      	beq.n	90018fa6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
90018f9e:	436a      	muls	r2, r5
90018fa0:	2410      	movs	r4, #16
90018fa2:	fb92 f2f4 	sdiv	r2, r2, r4
90018fa6:	1a9b      	subs	r3, r3, r2
90018fa8:	ed9f 4a89 	vldr	s8, [pc, #548]	; 900191d0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
90018fac:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90018fb0:	460a      	mov	r2, r1
90018fb2:	ee07 3a90 	vmov	s15, r3
90018fb6:	f100 040c 	add.w	r4, r0, #12
90018fba:	4603      	mov	r3, r0
90018fbc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90018fc0:	ee67 7a84 	vmul.f32	s15, s15, s8
90018fc4:	ee87 3a27 	vdiv.f32	s6, s14, s15
90018fc8:	eeb1 6a43 	vneg.f32	s12, s6
90018fcc:	edd2 7a02 	vldr	s15, [r2, #8]
90018fd0:	3214      	adds	r2, #20
90018fd2:	eec7 6a27 	vdiv.f32	s13, s14, s15
90018fd6:	ece3 6a01 	vstmia	r3!, {s13}
90018fda:	429c      	cmp	r4, r3
90018fdc:	ed52 7a02 	vldr	s15, [r2, #-8]
90018fe0:	ee67 7aa6 	vmul.f32	s15, s15, s13
90018fe4:	edc3 7a02 	vstr	s15, [r3, #8]
90018fe8:	ed52 7a01 	vldr	s15, [r2, #-4]
90018fec:	ee67 7aa6 	vmul.f32	s15, s15, s13
90018ff0:	edc3 7a05 	vstr	s15, [r3, #20]
90018ff4:	d1ea      	bne.n	90018fcc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
90018ff6:	6aca      	ldr	r2, [r1, #44]	; 0x2c
90018ff8:	698b      	ldr	r3, [r1, #24]
90018ffa:	edd0 4a02 	vldr	s9, [r0, #8]
90018ffe:	1a9b      	subs	r3, r3, r2
90019000:	edd0 3a00 	vldr	s7, [r0]
90019004:	edd0 6a01 	vldr	s13, [r0, #4]
90019008:	ee07 3a90 	vmov	s15, r3
9001900c:	684b      	ldr	r3, [r1, #4]
9001900e:	ee76 6ae4 	vsub.f32	s13, s13, s9
90019012:	ed90 5a05 	vldr	s10, [r0, #20]
90019016:	1a9b      	subs	r3, r3, r2
90019018:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001901c:	ee73 4ae4 	vsub.f32	s9, s7, s9
90019020:	ed90 2a03 	vldr	s4, [r0, #12]
90019024:	ee07 3a10 	vmov	s14, r3
90019028:	edd0 5a04 	vldr	s11, [r0, #16]
9001902c:	ee67 7a84 	vmul.f32	s15, s15, s8
90019030:	ed90 1a07 	vldr	s2, [r0, #28]
90019034:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90019038:	edd0 2a06 	vldr	s5, [r0, #24]
9001903c:	ee75 5ac5 	vsub.f32	s11, s11, s10
90019040:	ee64 7ae7 	vnmul.f32	s15, s9, s15
90019044:	ee27 7a04 	vmul.f32	s14, s14, s8
90019048:	ee32 5a45 	vsub.f32	s10, s4, s10
9001904c:	eee6 7a87 	vfma.f32	s15, s13, s14
90019050:	ee67 7a83 	vmul.f32	s15, s15, s6
90019054:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
90019058:	6a8c      	ldr	r4, [r1, #40]	; 0x28
9001905a:	694a      	ldr	r2, [r1, #20]
9001905c:	1b13      	subs	r3, r2, r4
9001905e:	ee07 3a10 	vmov	s14, r3
90019062:	680b      	ldr	r3, [r1, #0]
90019064:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90019068:	1b1b      	subs	r3, r3, r4
9001906a:	ee27 7a04 	vmul.f32	s14, s14, s8
9001906e:	ee64 4ac7 	vnmul.f32	s9, s9, s14
90019072:	ee07 3a10 	vmov	s14, r3
90019076:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001907a:	ee27 7a04 	vmul.f32	s14, s14, s8
9001907e:	eee6 4a87 	vfma.f32	s9, s13, s14
90019082:	ee64 4a86 	vmul.f32	s9, s9, s12
90019086:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
9001908a:	6aca      	ldr	r2, [r1, #44]	; 0x2c
9001908c:	698b      	ldr	r3, [r1, #24]
9001908e:	1a9b      	subs	r3, r3, r2
90019090:	ee06 3a90 	vmov	s13, r3
90019094:	684b      	ldr	r3, [r1, #4]
90019096:	1a9b      	subs	r3, r3, r2
90019098:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9001909c:	ee07 3a10 	vmov	s14, r3
900190a0:	ee66 6a84 	vmul.f32	s13, s13, s8
900190a4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
900190a8:	ee65 6a66 	vnmul.f32	s13, s10, s13
900190ac:	ee27 7a04 	vmul.f32	s14, s14, s8
900190b0:	eee5 6a87 	vfma.f32	s13, s11, s14
900190b4:	ee66 6a83 	vmul.f32	s13, s13, s6
900190b8:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
900190bc:	6a8c      	ldr	r4, [r1, #40]	; 0x28
900190be:	694a      	ldr	r2, [r1, #20]
900190c0:	1b13      	subs	r3, r2, r4
900190c2:	ee07 3a10 	vmov	s14, r3
900190c6:	680b      	ldr	r3, [r1, #0]
900190c8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
900190cc:	1b1b      	subs	r3, r3, r4
900190ce:	ee27 7a04 	vmul.f32	s14, s14, s8
900190d2:	ee25 5a47 	vnmul.f32	s10, s10, s14
900190d6:	ee07 3a10 	vmov	s14, r3
900190da:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
900190de:	ee27 7a04 	vmul.f32	s14, s14, s8
900190e2:	eea5 5a87 	vfma.f32	s10, s11, s14
900190e6:	edd0 5a08 	vldr	s11, [r0, #32]
900190ea:	ee31 1a65 	vsub.f32	s2, s2, s11
900190ee:	ee72 5ae5 	vsub.f32	s11, s5, s11
900190f2:	ee25 5a06 	vmul.f32	s10, s10, s12
900190f6:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
900190fa:	6aca      	ldr	r2, [r1, #44]	; 0x2c
900190fc:	698b      	ldr	r3, [r1, #24]
900190fe:	1a9b      	subs	r3, r3, r2
90019100:	ee07 3a10 	vmov	s14, r3
90019104:	684b      	ldr	r3, [r1, #4]
90019106:	1a9b      	subs	r3, r3, r2
90019108:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001910c:	ee01 3a90 	vmov	s3, r3
90019110:	ee27 7a04 	vmul.f32	s14, s14, s8
90019114:	eef8 1ae1 	vcvt.f32.s32	s3, s3
90019118:	ee25 7ac7 	vnmul.f32	s14, s11, s14
9001911c:	ee61 1a84 	vmul.f32	s3, s3, s8
90019120:	eea1 7a21 	vfma.f32	s14, s2, s3
90019124:	ee27 7a03 	vmul.f32	s14, s14, s6
90019128:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
9001912c:	6a8c      	ldr	r4, [r1, #40]	; 0x28
9001912e:	694a      	ldr	r2, [r1, #20]
90019130:	1b13      	subs	r3, r2, r4
90019132:	ee03 3a10 	vmov	s6, r3
90019136:	680b      	ldr	r3, [r1, #0]
90019138:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
9001913c:	1b1b      	subs	r3, r3, r4
9001913e:	ee23 3a04 	vmul.f32	s6, s6, s8
90019142:	ee65 5ac3 	vnmul.f32	s11, s11, s6
90019146:	ee03 3a10 	vmov	s6, r3
9001914a:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
9001914e:	ee23 4a04 	vmul.f32	s8, s6, s8
90019152:	eee1 5a04 	vfma.f32	s11, s2, s8
90019156:	ee25 6a86 	vmul.f32	s12, s11, s12
9001915a:	ee62 5a67 	vnmul.f32	s11, s4, s15
9001915e:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
90019162:	eee3 5aa6 	vfma.f32	s11, s7, s13
90019166:	eef5 5ac0 	vcmpe.f32	s11, #0.0
9001916a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001916e:	dd13      	ble.n	90019198 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
90019170:	f44f 4300 	mov.w	r3, #32768	; 0x8000
90019174:	ee62 7ae7 	vnmul.f32	s15, s5, s15
90019178:	63c3      	str	r3, [r0, #60]	; 0x3c
9001917a:	eee3 7a87 	vfma.f32	s15, s7, s14
9001917e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
90019182:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90019186:	dd15      	ble.n	900191b4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
90019188:	f44f 4300 	mov.w	r3, #32768	; 0x8000
9001918c:	6403      	str	r3, [r0, #64]	; 0x40
9001918e:	bd70      	pop	{r4, r5, r6, pc}
90019190:	4623      	mov	r3, r4
90019192:	e6fd      	b.n	90018f90 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
90019194:	462a      	mov	r2, r5
90019196:	e706      	b.n	90018fa6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
90019198:	d502      	bpl.n	900191a0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
9001919a:	f647 73ff 	movw	r3, #32767	; 0x7fff
9001919e:	e7e9      	b.n	90019174 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
900191a0:	ee22 2a64 	vnmul.f32	s4, s4, s9
900191a4:	eea3 2a85 	vfma.f32	s4, s7, s10
900191a8:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
900191ac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900191b0:	dade      	bge.n	90019170 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
900191b2:	e7f2      	b.n	9001919a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
900191b4:	d502      	bpl.n	900191bc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
900191b6:	f647 73ff 	movw	r3, #32767	; 0x7fff
900191ba:	e7e7      	b.n	9001918c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
900191bc:	ee62 4ae4 	vnmul.f32	s9, s5, s9
900191c0:	eee3 4a86 	vfma.f32	s9, s7, s12
900191c4:	eef5 4ac0 	vcmpe.f32	s9, #0.0
900191c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900191cc:	dadc      	bge.n	90019188 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
900191ce:	e7f2      	b.n	900191b6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
900191d0:	3d800000 	.word	0x3d800000

900191d4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
900191d4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900191d8:	2714      	movs	r7, #20
900191da:	435f      	muls	r7, r3
900191dc:	eb02 0c07 	add.w	ip, r2, r7
900191e0:	f8dc 5004 	ldr.w	r5, [ip, #4]
900191e4:	f115 0e0f 	adds.w	lr, r5, #15
900191e8:	f100 80a2 	bmi.w	90019330 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
900191ec:	ea4f 1e2e 	mov.w	lr, lr, asr #4
900191f0:	9c08      	ldr	r4, [sp, #32]
900191f2:	2614      	movs	r6, #20
900191f4:	f8c0 e014 	str.w	lr, [r0, #20]
900191f8:	4366      	muls	r6, r4
900191fa:	eb02 0806 	add.w	r8, r2, r6
900191fe:	f8d8 5004 	ldr.w	r5, [r8, #4]
90019202:	f115 040f 	adds.w	r4, r5, #15
90019206:	f100 809f 	bmi.w	90019348 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
9001920a:	1124      	asrs	r4, r4, #4
9001920c:	eba4 040e 	sub.w	r4, r4, lr
90019210:	6184      	str	r4, [r0, #24]
90019212:	2c00      	cmp	r4, #0
90019214:	f000 808a 	beq.w	9001932c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
90019218:	f8dc 9004 	ldr.w	r9, [ip, #4]
9001921c:	f8d8 4004 	ldr.w	r4, [r8, #4]
90019220:	5995      	ldr	r5, [r2, r6]
90019222:	eba4 0809 	sub.w	r8, r4, r9
90019226:	59d4      	ldr	r4, [r2, r7]
90019228:	eba5 0a04 	sub.w	sl, r5, r4
9001922c:	ea4f 1608 	mov.w	r6, r8, lsl #4
90019230:	ea4f 150a 	mov.w	r5, sl, lsl #4
90019234:	fb0e fe05 	mul.w	lr, lr, r5
90019238:	fb0a ee19 	mls	lr, sl, r9, lr
9001923c:	fb08 e404 	mla	r4, r8, r4, lr
90019240:	3c01      	subs	r4, #1
90019242:	19a4      	adds	r4, r4, r6
90019244:	f100 808c 	bmi.w	90019360 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
90019248:	fb94 fef6 	sdiv	lr, r4, r6
9001924c:	fb06 441e 	mls	r4, r6, lr, r4
90019250:	f8c0 e000 	str.w	lr, [r0]
90019254:	6104      	str	r4, [r0, #16]
90019256:	2d00      	cmp	r5, #0
90019258:	f2c0 8095 	blt.w	90019386 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
9001925c:	fb95 f4f6 	sdiv	r4, r5, r6
90019260:	fb06 5514 	mls	r5, r6, r4, r5
90019264:	6044      	str	r4, [r0, #4]
90019266:	6085      	str	r5, [r0, #8]
90019268:	60c6      	str	r6, [r0, #12]
9001926a:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9001926e:	f8dc 4004 	ldr.w	r4, [ip, #4]
90019272:	6945      	ldr	r5, [r0, #20]
90019274:	59d2      	ldr	r2, [r2, r7]
90019276:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
9001927a:	eddf 6a4b 	vldr	s13, [pc, #300]	; 900193a8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
9001927e:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
90019282:	ee07 4a10 	vmov	s14, r4
90019286:	6804      	ldr	r4, [r0, #0]
90019288:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
9001928c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90019290:	ee07 2a90 	vmov	s15, r2
90019294:	ee27 7a26 	vmul.f32	s14, s14, s13
90019298:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001929c:	ee67 7aa6 	vmul.f32	s15, s15, s13
900192a0:	edd3 6a00 	vldr	s13, [r3]
900192a4:	eee6 6a07 	vfma.f32	s13, s12, s14
900192a8:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
900192ac:	eee6 6a27 	vfma.f32	s13, s12, s15
900192b0:	edc0 6a07 	vstr	s13, [r0, #28]
900192b4:	edd0 6a01 	vldr	s13, [r0, #4]
900192b8:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
900192bc:	eef8 6ae6 	vcvt.f32.s32	s13, s13
900192c0:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
900192c4:	eea6 6aa5 	vfma.f32	s12, s13, s11
900192c8:	ed80 6a08 	vstr	s12, [r0, #32]
900192cc:	6a4a      	ldr	r2, [r1, #36]	; 0x24
900192ce:	6242      	str	r2, [r0, #36]	; 0x24
900192d0:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
900192d4:	ed93 6a03 	vldr	s12, [r3, #12]
900192d8:	eea5 6a87 	vfma.f32	s12, s11, s14
900192dc:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
900192e0:	eea5 6aa7 	vfma.f32	s12, s11, s15
900192e4:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
900192e8:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
900192ec:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
900192f0:	eea6 6aa5 	vfma.f32	s12, s13, s11
900192f4:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
900192f8:	6aca      	ldr	r2, [r1, #44]	; 0x2c
900192fa:	6302      	str	r2, [r0, #48]	; 0x30
900192fc:	ed93 6a06 	vldr	s12, [r3, #24]
90019300:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
90019304:	eea5 6a87 	vfma.f32	s12, s11, s14
90019308:	eeb0 7a46 	vmov.f32	s14, s12
9001930c:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
90019310:	eea6 7a27 	vfma.f32	s14, s12, s15
90019314:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
90019318:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
9001931c:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
90019320:	eee6 7a87 	vfma.f32	s15, s13, s14
90019324:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
90019328:	6b4b      	ldr	r3, [r1, #52]	; 0x34
9001932a:	63c3      	str	r3, [r0, #60]	; 0x3c
9001932c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90019330:	2410      	movs	r4, #16
90019332:	f1c5 0501 	rsb	r5, r5, #1
90019336:	fb9e fef4 	sdiv	lr, lr, r4
9001933a:	f015 050f 	ands.w	r5, r5, #15
9001933e:	bf18      	it	ne
90019340:	2501      	movne	r5, #1
90019342:	ebae 0e05 	sub.w	lr, lr, r5
90019346:	e753      	b.n	900191f0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
90019348:	f04f 0910 	mov.w	r9, #16
9001934c:	f1c5 0501 	rsb	r5, r5, #1
90019350:	fb94 f4f9 	sdiv	r4, r4, r9
90019354:	f015 050f 	ands.w	r5, r5, #15
90019358:	bf18      	it	ne
9001935a:	2501      	movne	r5, #1
9001935c:	1b64      	subs	r4, r4, r5
9001935e:	e755      	b.n	9001920c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
90019360:	4264      	negs	r4, r4
90019362:	fb94 fef6 	sdiv	lr, r4, r6
90019366:	f1ce 0800 	rsb	r8, lr, #0
9001936a:	fb06 441e 	mls	r4, r6, lr, r4
9001936e:	f8c0 8000 	str.w	r8, [r0]
90019372:	6104      	str	r4, [r0, #16]
90019374:	2c00      	cmp	r4, #0
90019376:	f43f af6e 	beq.w	90019256 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
9001937a:	ea6f 0e0e 	mvn.w	lr, lr
9001937e:	1b34      	subs	r4, r6, r4
90019380:	f8c0 e000 	str.w	lr, [r0]
90019384:	e766      	b.n	90019254 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
90019386:	426d      	negs	r5, r5
90019388:	fb95 f4f6 	sdiv	r4, r5, r6
9001938c:	f1c4 0e00 	rsb	lr, r4, #0
90019390:	fb06 5514 	mls	r5, r6, r4, r5
90019394:	f8c0 e004 	str.w	lr, [r0, #4]
90019398:	6085      	str	r5, [r0, #8]
9001939a:	2d00      	cmp	r5, #0
9001939c:	f43f af64 	beq.w	90019268 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
900193a0:	43e4      	mvns	r4, r4
900193a2:	1b75      	subs	r5, r6, r5
900193a4:	6044      	str	r4, [r0, #4]
900193a6:	e75e      	b.n	90019266 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
900193a8:	3d800000 	.word	0x3d800000

900193ac <_ZN8touchgfx7Unicode6strlenEPKt>:
900193ac:	4602      	mov	r2, r0
900193ae:	b148      	cbz	r0, 900193c4 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
900193b0:	2300      	movs	r3, #0
900193b2:	b298      	uxth	r0, r3
900193b4:	3301      	adds	r3, #1
900193b6:	eb02 0143 	add.w	r1, r2, r3, lsl #1
900193ba:	f831 1c02 	ldrh.w	r1, [r1, #-2]
900193be:	2900      	cmp	r1, #0
900193c0:	d1f7      	bne.n	900193b2 <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
900193c2:	4770      	bx	lr
900193c4:	4770      	bx	lr

900193c6 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
900193c6:	b530      	push	{r4, r5, lr}
900193c8:	4604      	mov	r4, r0
900193ca:	b159      	cbz	r1, 900193e4 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
900193cc:	b148      	cbz	r0, 900193e2 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
900193ce:	2300      	movs	r3, #0
900193d0:	b298      	uxth	r0, r3
900193d2:	4282      	cmp	r2, r0
900193d4:	d905      	bls.n	900193e2 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
900193d6:	5ccd      	ldrb	r5, [r1, r3]
900193d8:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
900193dc:	3301      	adds	r3, #1
900193de:	2d00      	cmp	r5, #0
900193e0:	d1f6      	bne.n	900193d0 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
900193e2:	bd30      	pop	{r4, r5, pc}
900193e4:	4608      	mov	r0, r1
900193e6:	e7fc      	b.n	900193e2 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

900193e8 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
900193e8:	b5f0      	push	{r4, r5, r6, r7, lr}
900193ea:	b08b      	sub	sp, #44	; 0x2c
900193ec:	468c      	mov	ip, r1
900193ee:	4604      	mov	r4, r0
900193f0:	2100      	movs	r1, #0
900193f2:	261f      	movs	r6, #31
900193f4:	af01      	add	r7, sp, #4
900193f6:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
900193fa:	1e71      	subs	r1, r6, #1
900193fc:	fb94 fef3 	sdiv	lr, r4, r3
90019400:	fb03 441e 	mls	r4, r3, lr, r4
90019404:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
90019408:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
9001940c:	b2ec      	uxtb	r4, r5
9001940e:	2d09      	cmp	r5, #9
90019410:	bfd4      	ite	le
90019412:	3430      	addle	r4, #48	; 0x30
90019414:	3457      	addgt	r4, #87	; 0x57
90019416:	b2e4      	uxtb	r4, r4
90019418:	55bc      	strb	r4, [r7, r6]
9001941a:	4674      	mov	r4, lr
9001941c:	b974      	cbnz	r4, 9001943c <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
9001941e:	2800      	cmp	r0, #0
90019420:	da05      	bge.n	9001942e <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
90019422:	ab0a      	add	r3, sp, #40	; 0x28
90019424:	4419      	add	r1, r3
90019426:	232d      	movs	r3, #45	; 0x2d
90019428:	f801 3c24 	strb.w	r3, [r1, #-36]
9001942c:	1eb1      	subs	r1, r6, #2
9001942e:	3101      	adds	r1, #1
90019430:	4660      	mov	r0, ip
90019432:	4439      	add	r1, r7
90019434:	f7ff ffc7 	bl	900193c6 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
90019438:	b00b      	add	sp, #44	; 0x2c
9001943a:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001943c:	460e      	mov	r6, r1
9001943e:	e7dc      	b.n	900193fa <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

90019440 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
90019440:	b5f0      	push	{r4, r5, r6, r7, lr}
90019442:	468c      	mov	ip, r1
90019444:	b08b      	sub	sp, #44	; 0x2c
90019446:	2100      	movs	r1, #0
90019448:	ae01      	add	r6, sp, #4
9001944a:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
9001944e:	211f      	movs	r1, #31
90019450:	fbb0 f7f3 	udiv	r7, r0, r3
90019454:	fb03 0517 	mls	r5, r3, r7, r0
90019458:	4638      	mov	r0, r7
9001945a:	b2ec      	uxtb	r4, r5
9001945c:	2d09      	cmp	r5, #9
9001945e:	bfd4      	ite	le
90019460:	3430      	addle	r4, #48	; 0x30
90019462:	3457      	addgt	r4, #87	; 0x57
90019464:	b2e4      	uxtb	r4, r4
90019466:	558c      	strb	r4, [r1, r6]
90019468:	1e4c      	subs	r4, r1, #1
9001946a:	b92f      	cbnz	r7, 90019478 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
9001946c:	4431      	add	r1, r6
9001946e:	4660      	mov	r0, ip
90019470:	f7ff ffa9 	bl	900193c6 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
90019474:	b00b      	add	sp, #44	; 0x2c
90019476:	bdf0      	pop	{r4, r5, r6, r7, pc}
90019478:	4621      	mov	r1, r4
9001947a:	e7e9      	b.n	90019450 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

9001947c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
9001947c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90019480:	b085      	sub	sp, #20
90019482:	4691      	mov	r9, r2
90019484:	6802      	ldr	r2, [r0, #0]
90019486:	4688      	mov	r8, r1
90019488:	461c      	mov	r4, r3
9001948a:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
9001948e:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
90019492:	4683      	mov	fp, r0
90019494:	4610      	mov	r0, r2
90019496:	9103      	str	r1, [sp, #12]
90019498:	9302      	str	r3, [sp, #8]
9001949a:	9201      	str	r2, [sp, #4]
9001949c:	f7ff ff86 	bl	900193ac <_ZN8touchgfx7Unicode6strlenEPKt>
900194a0:	f1b8 0f00 	cmp.w	r8, #0
900194a4:	bf0c      	ite	eq
900194a6:	4684      	moveq	ip, r0
900194a8:	f100 0c01 	addne.w	ip, r0, #1
900194ac:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
900194b0:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
900194b4:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
900194b6:	fa1f fc8c 	uxth.w	ip, ip
900194ba:	9d13      	ldr	r5, [sp, #76]	; 0x4c
900194bc:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
900194c0:	9903      	ldr	r1, [sp, #12]
900194c2:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
900194c6:	d041      	beq.n	9001954c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
900194c8:	d834      	bhi.n	90019534 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
900194ca:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
900194ce:	d059      	beq.n	90019584 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
900194d0:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
900194d4:	d03a      	beq.n	9001954c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
900194d6:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
900194da:	d034      	beq.n	90019546 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
900194dc:	2400      	movs	r4, #0
900194de:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
900194e2:	3a01      	subs	r2, #1
900194e4:	b169      	cbz	r1, 90019502 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
900194e6:	9911      	ldr	r1, [sp, #68]	; 0x44
900194e8:	458c      	cmp	ip, r1
900194ea:	da09      	bge.n	90019500 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
900194ec:	eba1 010c 	sub.w	r1, r1, ip
900194f0:	b289      	uxth	r1, r1
900194f2:	b933      	cbnz	r3, 90019502 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
900194f4:	2e00      	cmp	r6, #0
900194f6:	d051      	beq.n	9001959c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
900194f8:	2800      	cmp	r0, #0
900194fa:	d04f      	beq.n	9001959c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
900194fc:	440c      	add	r4, r1
900194fe:	b2a4      	uxth	r4, r4
90019500:	2100      	movs	r1, #0
90019502:	682b      	ldr	r3, [r5, #0]
90019504:	4293      	cmp	r3, r2
90019506:	da07      	bge.n	90019518 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
90019508:	f1b8 0f00 	cmp.w	r8, #0
9001950c:	d004      	beq.n	90019518 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
9001950e:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
90019512:	682b      	ldr	r3, [r5, #0]
90019514:	3301      	adds	r3, #1
90019516:	602b      	str	r3, [r5, #0]
90019518:	2730      	movs	r7, #48	; 0x30
9001951a:	2c00      	cmp	r4, #0
9001951c:	d04e      	beq.n	900195bc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
9001951e:	682e      	ldr	r6, [r5, #0]
90019520:	3c01      	subs	r4, #1
90019522:	42b2      	cmp	r2, r6
90019524:	b2a4      	uxth	r4, r4
90019526:	dd49      	ble.n	900195bc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
90019528:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
9001952c:	682b      	ldr	r3, [r5, #0]
9001952e:	3301      	adds	r3, #1
90019530:	602b      	str	r3, [r5, #0]
90019532:	e7f2      	b.n	9001951a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
90019534:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
90019538:	d01d      	beq.n	90019576 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
9001953a:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
9001953e:	d002      	beq.n	90019546 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
90019540:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
90019544:	e7c9      	b.n	900194da <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
90019546:	4684      	mov	ip, r0
90019548:	f04f 0800 	mov.w	r8, #0
9001954c:	2c00      	cmp	r4, #0
9001954e:	d0c6      	beq.n	900194de <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
90019550:	b947      	cbnz	r7, 90019564 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
90019552:	2801      	cmp	r0, #1
90019554:	d106      	bne.n	90019564 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
90019556:	8814      	ldrh	r4, [r2, #0]
90019558:	2c30      	cmp	r4, #48	; 0x30
9001955a:	bf02      	ittt	eq
9001955c:	3202      	addeq	r2, #2
9001955e:	4638      	moveq	r0, r7
90019560:	f8cb 2000 	streq.w	r2, [fp]
90019564:	45bc      	cmp	ip, r7
90019566:	da14      	bge.n	90019592 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
90019568:	b2bf      	uxth	r7, r7
9001956a:	eba7 040c 	sub.w	r4, r7, ip
9001956e:	46bc      	mov	ip, r7
90019570:	b2a4      	uxth	r4, r4
90019572:	2600      	movs	r6, #0
90019574:	e7b3      	b.n	900194de <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
90019576:	4684      	mov	ip, r0
90019578:	b16c      	cbz	r4, 90019596 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
9001957a:	42b8      	cmp	r0, r7
9001957c:	dd00      	ble.n	90019580 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
9001957e:	b2b8      	uxth	r0, r7
90019580:	2400      	movs	r4, #0
90019582:	e003      	b.n	9001958c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
90019584:	f04f 0c01 	mov.w	ip, #1
90019588:	2400      	movs	r4, #0
9001958a:	4660      	mov	r0, ip
9001958c:	4626      	mov	r6, r4
9001958e:	46a0      	mov	r8, r4
90019590:	e7a5      	b.n	900194de <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
90019592:	2400      	movs	r4, #0
90019594:	e7ed      	b.n	90019572 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
90019596:	4626      	mov	r6, r4
90019598:	46a0      	mov	r8, r4
9001959a:	e7a0      	b.n	900194de <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
9001959c:	2900      	cmp	r1, #0
9001959e:	d0b0      	beq.n	90019502 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
900195a0:	2720      	movs	r7, #32
900195a2:	682e      	ldr	r6, [r5, #0]
900195a4:	2900      	cmp	r1, #0
900195a6:	d0ac      	beq.n	90019502 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
900195a8:	3901      	subs	r1, #1
900195aa:	4296      	cmp	r6, r2
900195ac:	b289      	uxth	r1, r1
900195ae:	daa7      	bge.n	90019500 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
900195b0:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
900195b4:	682b      	ldr	r3, [r5, #0]
900195b6:	3301      	adds	r3, #1
900195b8:	602b      	str	r3, [r5, #0]
900195ba:	e7f2      	b.n	900195a2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
900195bc:	b188      	cbz	r0, 900195e2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
900195be:	682b      	ldr	r3, [r5, #0]
900195c0:	3801      	subs	r0, #1
900195c2:	429a      	cmp	r2, r3
900195c4:	b280      	uxth	r0, r0
900195c6:	dd0c      	ble.n	900195e2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
900195c8:	f8db 3000 	ldr.w	r3, [fp]
900195cc:	1c9c      	adds	r4, r3, #2
900195ce:	f8cb 4000 	str.w	r4, [fp]
900195d2:	881c      	ldrh	r4, [r3, #0]
900195d4:	682b      	ldr	r3, [r5, #0]
900195d6:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
900195da:	682b      	ldr	r3, [r5, #0]
900195dc:	3301      	adds	r3, #1
900195de:	602b      	str	r3, [r5, #0]
900195e0:	e7ec      	b.n	900195bc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
900195e2:	2620      	movs	r6, #32
900195e4:	b151      	cbz	r1, 900195fc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
900195e6:	6828      	ldr	r0, [r5, #0]
900195e8:	3901      	subs	r1, #1
900195ea:	4282      	cmp	r2, r0
900195ec:	b289      	uxth	r1, r1
900195ee:	dd05      	ble.n	900195fc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
900195f0:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
900195f4:	682b      	ldr	r3, [r5, #0]
900195f6:	3301      	adds	r3, #1
900195f8:	602b      	str	r3, [r5, #0]
900195fa:	e7f3      	b.n	900195e4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
900195fc:	b005      	add	sp, #20
900195fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90019602 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
90019602:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90019606:	2400      	movs	r4, #0
90019608:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
9001960c:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
90019610:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
90019614:	8014      	strh	r4, [r2, #0]
90019616:	701c      	strb	r4, [r3, #0]
90019618:	f888 4000 	strb.w	r4, [r8]
9001961c:	f88c 4000 	strb.w	r4, [ip]
90019620:	f88e 4000 	strb.w	r4, [lr]
90019624:	703c      	strb	r4, [r7, #0]
90019626:	6804      	ldr	r4, [r0, #0]
90019628:	b1a4      	cbz	r4, 90019654 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
9001962a:	8824      	ldrh	r4, [r4, #0]
9001962c:	f04f 0901 	mov.w	r9, #1
90019630:	b314      	cbz	r4, 90019678 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
90019632:	2c2b      	cmp	r4, #43	; 0x2b
90019634:	d001      	beq.n	9001963a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
90019636:	2c20      	cmp	r4, #32
90019638:	d110      	bne.n	9001965c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
9001963a:	8014      	strh	r4, [r2, #0]
9001963c:	6804      	ldr	r4, [r0, #0]
9001963e:	b10c      	cbz	r4, 90019644 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
90019640:	3402      	adds	r4, #2
90019642:	6004      	str	r4, [r0, #0]
90019644:	680c      	ldr	r4, [r1, #0]
90019646:	b10c      	cbz	r4, 9001964c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
90019648:	3401      	adds	r4, #1
9001964a:	600c      	str	r4, [r1, #0]
9001964c:	6804      	ldr	r4, [r0, #0]
9001964e:	b17c      	cbz	r4, 90019670 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
90019650:	8824      	ldrh	r4, [r4, #0]
90019652:	e7ed      	b.n	90019630 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
90019654:	680c      	ldr	r4, [r1, #0]
90019656:	b17c      	cbz	r4, 90019678 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
90019658:	7824      	ldrb	r4, [r4, #0]
9001965a:	e7e7      	b.n	9001962c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
9001965c:	2c2d      	cmp	r4, #45	; 0x2d
9001965e:	d102      	bne.n	90019666 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
90019660:	f883 9000 	strb.w	r9, [r3]
90019664:	e7ea      	b.n	9001963c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
90019666:	2c23      	cmp	r4, #35	; 0x23
90019668:	d107      	bne.n	9001967a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
9001966a:	f888 9000 	strb.w	r9, [r8]
9001966e:	e7e5      	b.n	9001963c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
90019670:	680c      	ldr	r4, [r1, #0]
90019672:	b10c      	cbz	r4, 90019678 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
90019674:	7824      	ldrb	r4, [r4, #0]
90019676:	e7db      	b.n	90019630 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
90019678:	2400      	movs	r4, #0
9001967a:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
9001967e:	2b09      	cmp	r3, #9
90019680:	d901      	bls.n	90019686 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
90019682:	2c2a      	cmp	r4, #42	; 0x2a
90019684:	d122      	bne.n	900196cc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
90019686:	2301      	movs	r3, #1
90019688:	2c30      	cmp	r4, #48	; 0x30
9001968a:	f88e 3000 	strb.w	r3, [lr]
9001968e:	d10d      	bne.n	900196ac <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
90019690:	f88c 3000 	strb.w	r3, [ip]
90019694:	6803      	ldr	r3, [r0, #0]
90019696:	b10b      	cbz	r3, 9001969c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
90019698:	3302      	adds	r3, #2
9001969a:	6003      	str	r3, [r0, #0]
9001969c:	680b      	ldr	r3, [r1, #0]
9001969e:	b10b      	cbz	r3, 900196a4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
900196a0:	3301      	adds	r3, #1
900196a2:	600b      	str	r3, [r1, #0]
900196a4:	6803      	ldr	r3, [r0, #0]
900196a6:	2b00      	cmp	r3, #0
900196a8:	d02f      	beq.n	9001970a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
900196aa:	881c      	ldrh	r4, [r3, #0]
900196ac:	2c2a      	cmp	r4, #42	; 0x2a
900196ae:	d135      	bne.n	9001971c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
900196b0:	f04f 33ff 	mov.w	r3, #4294967295
900196b4:	6033      	str	r3, [r6, #0]
900196b6:	6803      	ldr	r3, [r0, #0]
900196b8:	b10b      	cbz	r3, 900196be <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
900196ba:	3302      	adds	r3, #2
900196bc:	6003      	str	r3, [r0, #0]
900196be:	680b      	ldr	r3, [r1, #0]
900196c0:	b10b      	cbz	r3, 900196c6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
900196c2:	3301      	adds	r3, #1
900196c4:	600b      	str	r3, [r1, #0]
900196c6:	6803      	ldr	r3, [r0, #0]
900196c8:	b31b      	cbz	r3, 90019712 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
900196ca:	881c      	ldrh	r4, [r3, #0]
900196cc:	2c2e      	cmp	r4, #46	; 0x2e
900196ce:	d11a      	bne.n	90019706 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
900196d0:	2301      	movs	r3, #1
900196d2:	703b      	strb	r3, [r7, #0]
900196d4:	6803      	ldr	r3, [r0, #0]
900196d6:	b10b      	cbz	r3, 900196dc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
900196d8:	3302      	adds	r3, #2
900196da:	6003      	str	r3, [r0, #0]
900196dc:	680b      	ldr	r3, [r1, #0]
900196de:	b10b      	cbz	r3, 900196e4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
900196e0:	3301      	adds	r3, #1
900196e2:	600b      	str	r3, [r1, #0]
900196e4:	6803      	ldr	r3, [r0, #0]
900196e6:	2b00      	cmp	r3, #0
900196e8:	d036      	beq.n	90019758 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
900196ea:	881b      	ldrh	r3, [r3, #0]
900196ec:	2b2a      	cmp	r3, #42	; 0x2a
900196ee:	d137      	bne.n	90019760 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
900196f0:	f04f 33ff 	mov.w	r3, #4294967295
900196f4:	602b      	str	r3, [r5, #0]
900196f6:	6803      	ldr	r3, [r0, #0]
900196f8:	b10b      	cbz	r3, 900196fe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
900196fa:	3302      	adds	r3, #2
900196fc:	6003      	str	r3, [r0, #0]
900196fe:	680b      	ldr	r3, [r1, #0]
90019700:	b10b      	cbz	r3, 90019706 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
90019702:	3301      	adds	r3, #1
90019704:	600b      	str	r3, [r1, #0]
90019706:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001970a:	680c      	ldr	r4, [r1, #0]
9001970c:	b134      	cbz	r4, 9001971c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
9001970e:	7824      	ldrb	r4, [r4, #0]
90019710:	e7cc      	b.n	900196ac <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
90019712:	680b      	ldr	r3, [r1, #0]
90019714:	2b00      	cmp	r3, #0
90019716:	d0f6      	beq.n	90019706 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
90019718:	781c      	ldrb	r4, [r3, #0]
9001971a:	e7d7      	b.n	900196cc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
9001971c:	2300      	movs	r3, #0
9001971e:	220a      	movs	r2, #10
90019720:	6033      	str	r3, [r6, #0]
90019722:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
90019726:	fa1f f38c 	uxth.w	r3, ip
9001972a:	2b09      	cmp	r3, #9
9001972c:	d8ce      	bhi.n	900196cc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
9001972e:	6833      	ldr	r3, [r6, #0]
90019730:	fb02 c303 	mla	r3, r2, r3, ip
90019734:	6033      	str	r3, [r6, #0]
90019736:	6803      	ldr	r3, [r0, #0]
90019738:	b10b      	cbz	r3, 9001973e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
9001973a:	3302      	adds	r3, #2
9001973c:	6003      	str	r3, [r0, #0]
9001973e:	680b      	ldr	r3, [r1, #0]
90019740:	b10b      	cbz	r3, 90019746 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
90019742:	3301      	adds	r3, #1
90019744:	600b      	str	r3, [r1, #0]
90019746:	6803      	ldr	r3, [r0, #0]
90019748:	b10b      	cbz	r3, 9001974e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
9001974a:	881c      	ldrh	r4, [r3, #0]
9001974c:	e7e9      	b.n	90019722 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
9001974e:	680c      	ldr	r4, [r1, #0]
90019750:	2c00      	cmp	r4, #0
90019752:	d0e6      	beq.n	90019722 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
90019754:	7824      	ldrb	r4, [r4, #0]
90019756:	e7e4      	b.n	90019722 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
90019758:	680b      	ldr	r3, [r1, #0]
9001975a:	b10b      	cbz	r3, 90019760 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
9001975c:	781b      	ldrb	r3, [r3, #0]
9001975e:	e7c5      	b.n	900196ec <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
90019760:	2200      	movs	r2, #0
90019762:	240a      	movs	r4, #10
90019764:	602a      	str	r2, [r5, #0]
90019766:	3b30      	subs	r3, #48	; 0x30
90019768:	682a      	ldr	r2, [r5, #0]
9001976a:	b29e      	uxth	r6, r3
9001976c:	2e09      	cmp	r6, #9
9001976e:	d813      	bhi.n	90019798 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
90019770:	fb04 3302 	mla	r3, r4, r2, r3
90019774:	602b      	str	r3, [r5, #0]
90019776:	6803      	ldr	r3, [r0, #0]
90019778:	b10b      	cbz	r3, 9001977e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
9001977a:	3302      	adds	r3, #2
9001977c:	6003      	str	r3, [r0, #0]
9001977e:	680b      	ldr	r3, [r1, #0]
90019780:	b10b      	cbz	r3, 90019786 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
90019782:	3301      	adds	r3, #1
90019784:	600b      	str	r3, [r1, #0]
90019786:	6803      	ldr	r3, [r0, #0]
90019788:	b10b      	cbz	r3, 9001978e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
9001978a:	881b      	ldrh	r3, [r3, #0]
9001978c:	e7eb      	b.n	90019766 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
9001978e:	680b      	ldr	r3, [r1, #0]
90019790:	2b00      	cmp	r3, #0
90019792:	d0e8      	beq.n	90019766 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
90019794:	781b      	ldrb	r3, [r3, #0]
90019796:	e7e6      	b.n	90019766 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
90019798:	2a06      	cmp	r2, #6
9001979a:	bfa8      	it	ge
9001979c:	2206      	movge	r2, #6
9001979e:	602a      	str	r2, [r5, #0]
900197a0:	e7b1      	b.n	90019706 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

900197a2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
900197a2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900197a6:	b0a3      	sub	sp, #140	; 0x8c
900197a8:	2600      	movs	r6, #0
900197aa:	4607      	mov	r7, r0
900197ac:	4688      	mov	r8, r1
900197ae:	f10d 0944 	add.w	r9, sp, #68	; 0x44
900197b2:	4631      	mov	r1, r6
900197b4:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
900197b6:	4648      	mov	r0, r9
900197b8:	960d      	str	r6, [sp, #52]	; 0x34
900197ba:	e9cd 3208 	strd	r3, r2, [sp, #32]
900197be:	2242      	movs	r2, #66	; 0x42
900197c0:	f00e fc64 	bl	9002808c <memset>
900197c4:	b15f      	cbz	r7, 900197de <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
900197c6:	f108 3aff 	add.w	sl, r8, #4294967295
900197ca:	9a09      	ldr	r2, [sp, #36]	; 0x24
900197cc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
900197ce:	b152      	cbz	r2, 900197e6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
900197d0:	8812      	ldrh	r2, [r2, #0]
900197d2:	b10a      	cbz	r2, 900197d8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
900197d4:	459a      	cmp	sl, r3
900197d6:	dc2e      	bgt.n	90019836 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
900197d8:	2200      	movs	r2, #0
900197da:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
900197de:	4638      	mov	r0, r7
900197e0:	b023      	add	sp, #140	; 0x8c
900197e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900197e6:	9a08      	ldr	r2, [sp, #32]
900197e8:	2a00      	cmp	r2, #0
900197ea:	d0f5      	beq.n	900197d8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
900197ec:	7812      	ldrb	r2, [r2, #0]
900197ee:	e7f0      	b.n	900197d2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
900197f0:	2d00      	cmp	r5, #0
900197f2:	d0ea      	beq.n	900197ca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
900197f4:	782a      	ldrb	r2, [r5, #0]
900197f6:	b142      	cbz	r2, 9001980a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
900197f8:	2a25      	cmp	r2, #37	; 0x25
900197fa:	d001      	beq.n	90019800 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
900197fc:	459a      	cmp	sl, r3
900197fe:	dc08      	bgt.n	90019812 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
90019800:	f1bb 0f00 	cmp.w	fp, #0
90019804:	d121      	bne.n	9001984a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
90019806:	2d00      	cmp	r5, #0
90019808:	d0df      	beq.n	900197ca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
9001980a:	782a      	ldrb	r2, [r5, #0]
9001980c:	f04f 0b00 	mov.w	fp, #0
90019810:	e01d      	b.n	9001984e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
90019812:	f1bb 0f00 	cmp.w	fp, #0
90019816:	d077      	beq.n	90019908 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x166>
90019818:	f8bb 2000 	ldrh.w	r2, [fp]
9001981c:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
90019820:	f1bb 0f00 	cmp.w	fp, #0
90019824:	d002      	beq.n	9001982c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
90019826:	f10b 0202 	add.w	r2, fp, #2
9001982a:	9209      	str	r2, [sp, #36]	; 0x24
9001982c:	b10d      	cbz	r5, 90019832 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
9001982e:	3501      	adds	r5, #1
90019830:	9508      	str	r5, [sp, #32]
90019832:	3301      	adds	r3, #1
90019834:	930d      	str	r3, [sp, #52]	; 0x34
90019836:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90019838:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
9001983c:	f1bb 0f00 	cmp.w	fp, #0
90019840:	d0d6      	beq.n	900197f0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
90019842:	f8bb 2000 	ldrh.w	r2, [fp]
90019846:	2a00      	cmp	r2, #0
90019848:	d1d6      	bne.n	900197f8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
9001984a:	f8bb 2000 	ldrh.w	r2, [fp]
9001984e:	2a00      	cmp	r2, #0
90019850:	d0bb      	beq.n	900197ca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
90019852:	459a      	cmp	sl, r3
90019854:	ddb9      	ble.n	900197ca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
90019856:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
9001985a:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
9001985e:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
90019862:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
90019866:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
9001986a:	960e      	str	r6, [sp, #56]	; 0x38
9001986c:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
90019870:	960f      	str	r6, [sp, #60]	; 0x3c
90019872:	f1bb 0f00 	cmp.w	fp, #0
90019876:	d002      	beq.n	9001987e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
90019878:	f10b 0302 	add.w	r3, fp, #2
9001987c:	9309      	str	r3, [sp, #36]	; 0x24
9001987e:	b10d      	cbz	r5, 90019884 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
90019880:	1c6b      	adds	r3, r5, #1
90019882:	9308      	str	r3, [sp, #32]
90019884:	ab0f      	add	r3, sp, #60	; 0x3c
90019886:	f10d 0232 	add.w	r2, sp, #50	; 0x32
9001988a:	a908      	add	r1, sp, #32
9001988c:	a809      	add	r0, sp, #36	; 0x24
9001988e:	9305      	str	r3, [sp, #20]
90019890:	f10d 0331 	add.w	r3, sp, #49	; 0x31
90019894:	9304      	str	r3, [sp, #16]
90019896:	ab0e      	add	r3, sp, #56	; 0x38
90019898:	9303      	str	r3, [sp, #12]
9001989a:	ab0c      	add	r3, sp, #48	; 0x30
9001989c:	9302      	str	r3, [sp, #8]
9001989e:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
900198a2:	9301      	str	r3, [sp, #4]
900198a4:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
900198a8:	9300      	str	r3, [sp, #0]
900198aa:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
900198ae:	f7ff fea8 	bl	90019602 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
900198b2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
900198b4:	2b00      	cmp	r3, #0
900198b6:	bfbf      	itttt	lt
900198b8:	6823      	ldrlt	r3, [r4, #0]
900198ba:	3404      	addlt	r4, #4
900198bc:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
900198c0:	930e      	strlt	r3, [sp, #56]	; 0x38
900198c2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
900198c4:	2b00      	cmp	r3, #0
900198c6:	bfbe      	ittt	lt
900198c8:	6823      	ldrlt	r3, [r4, #0]
900198ca:	3404      	addlt	r4, #4
900198cc:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
900198d0:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
900198d4:	bfb8      	it	lt
900198d6:	930f      	strlt	r3, [sp, #60]	; 0x3c
900198d8:	b1d9      	cbz	r1, 90019912 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x170>
900198da:	880b      	ldrh	r3, [r1, #0]
900198dc:	2b69      	cmp	r3, #105	; 0x69
900198de:	d01f      	beq.n	90019920 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
900198e0:	d82f      	bhi.n	90019942 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a0>
900198e2:	2b58      	cmp	r3, #88	; 0x58
900198e4:	d01c      	beq.n	90019920 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
900198e6:	d818      	bhi.n	9001991a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x178>
900198e8:	2b25      	cmp	r3, #37	; 0x25
900198ea:	d034      	beq.n	90019956 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b4>
900198ec:	9b0d      	ldr	r3, [sp, #52]	; 0x34
900198ee:	e9cd 5b08 	strd	r5, fp, [sp, #32]
900198f2:	f1bb 0f00 	cmp.w	fp, #0
900198f6:	f000 80b7 	beq.w	90019a68 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c6>
900198fa:	f8bb 5000 	ldrh.w	r5, [fp]
900198fe:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
90019902:	3301      	adds	r3, #1
90019904:	930d      	str	r3, [sp, #52]	; 0x34
90019906:	e029      	b.n	9001995c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ba>
90019908:	b10d      	cbz	r5, 9001990e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16c>
9001990a:	782a      	ldrb	r2, [r5, #0]
9001990c:	e786      	b.n	9001981c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
9001990e:	462a      	mov	r2, r5
90019910:	e784      	b.n	9001981c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
90019912:	2a00      	cmp	r2, #0
90019914:	d0ea      	beq.n	900198ec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
90019916:	7813      	ldrb	r3, [r2, #0]
90019918:	e7e0      	b.n	900198dc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13a>
9001991a:	3b63      	subs	r3, #99	; 0x63
9001991c:	2b01      	cmp	r3, #1
9001991e:	d8e5      	bhi.n	900198ec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
90019920:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
90019924:	b329      	cbz	r1, 90019972 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d0>
90019926:	880b      	ldrh	r3, [r1, #0]
90019928:	2b69      	cmp	r3, #105	; 0x69
9001992a:	d063      	beq.n	900199f4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x252>
9001992c:	d825      	bhi.n	9001997a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d8>
9001992e:	2b63      	cmp	r3, #99	; 0x63
90019930:	d038      	beq.n	900199a4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x202>
90019932:	2b64      	cmp	r3, #100	; 0x64
90019934:	d05e      	beq.n	900199f4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x252>
90019936:	2b58      	cmp	r3, #88	; 0x58
90019938:	d07a      	beq.n	90019a30 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28e>
9001993a:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
9001993e:	4625      	mov	r5, r4
90019940:	e036      	b.n	900199b0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
90019942:	2b73      	cmp	r3, #115	; 0x73
90019944:	d0ec      	beq.n	90019920 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
90019946:	d802      	bhi.n	9001994e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ac>
90019948:	2b6f      	cmp	r3, #111	; 0x6f
9001994a:	d1cf      	bne.n	900198ec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
9001994c:	e7e8      	b.n	90019920 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
9001994e:	2b75      	cmp	r3, #117	; 0x75
90019950:	d0e6      	beq.n	90019920 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
90019952:	2b78      	cmp	r3, #120	; 0x78
90019954:	e7f9      	b.n	9001994a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a8>
90019956:	9a0d      	ldr	r2, [sp, #52]	; 0x34
90019958:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
9001995c:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001995e:	b10b      	cbz	r3, 90019964 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c2>
90019960:	3302      	adds	r3, #2
90019962:	9309      	str	r3, [sp, #36]	; 0x24
90019964:	9b08      	ldr	r3, [sp, #32]
90019966:	2b00      	cmp	r3, #0
90019968:	f43f af2f 	beq.w	900197ca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
9001996c:	3301      	adds	r3, #1
9001996e:	9308      	str	r3, [sp, #32]
90019970:	e72b      	b.n	900197ca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
90019972:	2a00      	cmp	r2, #0
90019974:	d0e1      	beq.n	9001993a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
90019976:	7813      	ldrb	r3, [r2, #0]
90019978:	e7d6      	b.n	90019928 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x186>
9001997a:	2b73      	cmp	r3, #115	; 0x73
9001997c:	d036      	beq.n	900199ec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24a>
9001997e:	d807      	bhi.n	90019990 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ee>
90019980:	2b6f      	cmp	r3, #111	; 0x6f
90019982:	d1da      	bne.n	9001993a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
90019984:	9a0d      	ldr	r2, [sp, #52]	; 0x34
90019986:	1d25      	adds	r5, r4, #4
90019988:	2308      	movs	r3, #8
9001998a:	eba8 0202 	sub.w	r2, r8, r2
9001998e:	e049      	b.n	90019a24 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x282>
90019990:	2b75      	cmp	r3, #117	; 0x75
90019992:	d042      	beq.n	90019a1a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x278>
90019994:	2b78      	cmp	r3, #120	; 0x78
90019996:	d1d0      	bne.n	9001993a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
90019998:	9a0d      	ldr	r2, [sp, #52]	; 0x34
9001999a:	1d25      	adds	r5, r4, #4
9001999c:	2310      	movs	r3, #16
9001999e:	eba8 0202 	sub.w	r2, r8, r2
900199a2:	e03f      	b.n	90019a24 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x282>
900199a4:	6823      	ldr	r3, [r4, #0]
900199a6:	1d25      	adds	r5, r4, #4
900199a8:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
900199ac:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
900199b0:	9b09      	ldr	r3, [sp, #36]	; 0x24
900199b2:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
900199b6:	2b00      	cmp	r3, #0
900199b8:	d051      	beq.n	90019a5e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2bc>
900199ba:	881a      	ldrh	r2, [r3, #0]
900199bc:	a80d      	add	r0, sp, #52	; 0x34
900199be:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
900199c2:	462c      	mov	r4, r5
900199c4:	9005      	str	r0, [sp, #20]
900199c6:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
900199ca:	9004      	str	r0, [sp, #16]
900199cc:	980e      	ldr	r0, [sp, #56]	; 0x38
900199ce:	9003      	str	r0, [sp, #12]
900199d0:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
900199d4:	9002      	str	r0, [sp, #8]
900199d6:	980f      	ldr	r0, [sp, #60]	; 0x3c
900199d8:	9001      	str	r0, [sp, #4]
900199da:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
900199de:	e9cd 8706 	strd	r8, r7, [sp, #24]
900199e2:	9000      	str	r0, [sp, #0]
900199e4:	a810      	add	r0, sp, #64	; 0x40
900199e6:	f7ff fd49 	bl	9001947c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
900199ea:	e7b7      	b.n	9001995c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ba>
900199ec:	1d25      	adds	r5, r4, #4
900199ee:	6823      	ldr	r3, [r4, #0]
900199f0:	9310      	str	r3, [sp, #64]	; 0x40
900199f2:	e7dd      	b.n	900199b0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
900199f4:	9a0d      	ldr	r2, [sp, #52]	; 0x34
900199f6:	230a      	movs	r3, #10
900199f8:	4649      	mov	r1, r9
900199fa:	6820      	ldr	r0, [r4, #0]
900199fc:	eba8 0202 	sub.w	r2, r8, r2
90019a00:	1d25      	adds	r5, r4, #4
90019a02:	b292      	uxth	r2, r2
90019a04:	f7ff fcf0 	bl	900193e8 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
90019a08:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
90019a0c:	2b2d      	cmp	r3, #45	; 0x2d
90019a0e:	d1cf      	bne.n	900199b0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
90019a10:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
90019a14:	9b10      	ldr	r3, [sp, #64]	; 0x40
90019a16:	3302      	adds	r3, #2
90019a18:	e7ea      	b.n	900199f0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24e>
90019a1a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
90019a1c:	1d25      	adds	r5, r4, #4
90019a1e:	230a      	movs	r3, #10
90019a20:	eba8 0202 	sub.w	r2, r8, r2
90019a24:	b292      	uxth	r2, r2
90019a26:	4649      	mov	r1, r9
90019a28:	6820      	ldr	r0, [r4, #0]
90019a2a:	f7ff fd09 	bl	90019440 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
90019a2e:	e7bf      	b.n	900199b0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
90019a30:	9a0d      	ldr	r2, [sp, #52]	; 0x34
90019a32:	2310      	movs	r3, #16
90019a34:	4649      	mov	r1, r9
90019a36:	6820      	ldr	r0, [r4, #0]
90019a38:	eba8 0202 	sub.w	r2, r8, r2
90019a3c:	1d25      	adds	r5, r4, #4
90019a3e:	b292      	uxth	r2, r2
90019a40:	f7ff fcfe 	bl	90019440 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
90019a44:	f10d 0242 	add.w	r2, sp, #66	; 0x42
90019a48:	f832 3f02 	ldrh.w	r3, [r2, #2]!
90019a4c:	2b00      	cmp	r3, #0
90019a4e:	d0af      	beq.n	900199b0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
90019a50:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
90019a54:	2919      	cmp	r1, #25
90019a56:	d8f7      	bhi.n	90019a48 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a6>
90019a58:	3b20      	subs	r3, #32
90019a5a:	8013      	strh	r3, [r2, #0]
90019a5c:	e7f4      	b.n	90019a48 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a6>
90019a5e:	9a08      	ldr	r2, [sp, #32]
90019a60:	2a00      	cmp	r2, #0
90019a62:	d0ab      	beq.n	900199bc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21a>
90019a64:	7812      	ldrb	r2, [r2, #0]
90019a66:	e7a9      	b.n	900199bc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21a>
90019a68:	2d00      	cmp	r5, #0
90019a6a:	f43f af48 	beq.w	900198fe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15c>
90019a6e:	782d      	ldrb	r5, [r5, #0]
90019a70:	e745      	b.n	900198fe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15c>

90019a72 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
90019a72:	b507      	push	{r0, r1, r2, lr}
90019a74:	9300      	str	r3, [sp, #0]
90019a76:	4613      	mov	r3, r2
90019a78:	2200      	movs	r2, #0
90019a7a:	f7ff fe92 	bl	900197a2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
90019a7e:	b003      	add	sp, #12
90019a80:	f85d fb04 	ldr.w	pc, [sp], #4

90019a84 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
90019a84:	b40c      	push	{r2, r3}
90019a86:	b507      	push	{r0, r1, r2, lr}
90019a88:	ab04      	add	r3, sp, #16
90019a8a:	f853 2b04 	ldr.w	r2, [r3], #4
90019a8e:	9301      	str	r3, [sp, #4]
90019a90:	f7ff ffef 	bl	90019a72 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
90019a94:	b003      	add	sp, #12
90019a96:	f85d eb04 	ldr.w	lr, [sp], #4
90019a9a:	b002      	add	sp, #8
90019a9c:	4770      	bx	lr
	...

90019aa0 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
90019aa0:	4b01      	ldr	r3, [pc, #4]	; (90019aa8 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
90019aa2:	6018      	str	r0, [r3, #0]
90019aa4:	4770      	bx	lr
90019aa6:	bf00      	nop
90019aa8:	2403989c 	.word	0x2403989c

90019aac <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
90019aac:	4b06      	ldr	r3, [pc, #24]	; (90019ac8 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
90019aae:	881a      	ldrh	r2, [r3, #0]
90019ab0:	4282      	cmp	r2, r0
90019ab2:	d807      	bhi.n	90019ac4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
90019ab4:	4b05      	ldr	r3, [pc, #20]	; (90019acc <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
90019ab6:	881b      	ldrh	r3, [r3, #0]
90019ab8:	4413      	add	r3, r2
90019aba:	4298      	cmp	r0, r3
90019abc:	bfac      	ite	ge
90019abe:	2000      	movge	r0, #0
90019ac0:	2001      	movlt	r0, #1
90019ac2:	4770      	bx	lr
90019ac4:	2000      	movs	r0, #0
90019ac6:	4770      	bx	lr
90019ac8:	240398bc 	.word	0x240398bc
90019acc:	240398c0 	.word	0x240398c0

90019ad0 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
90019ad0:	b508      	push	{r3, lr}
90019ad2:	4601      	mov	r1, r0
90019ad4:	f7ff ffea 	bl	90019aac <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
90019ad8:	b118      	cbz	r0, 90019ae2 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
90019ada:	4b02      	ldr	r3, [pc, #8]	; (90019ae4 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
90019adc:	681b      	ldr	r3, [r3, #0]
90019ade:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
90019ae2:	bd08      	pop	{r3, pc}
90019ae4:	240398a0 	.word	0x240398a0

90019ae8 <_ZN8touchgfx6Bitmap10clearCacheEv>:
90019ae8:	b5f0      	push	{r4, r5, r6, r7, lr}
90019aea:	4c24      	ldr	r4, [pc, #144]	; (90019b7c <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
90019aec:	6823      	ldr	r3, [r4, #0]
90019aee:	2b00      	cmp	r3, #0
90019af0:	d042      	beq.n	90019b78 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
90019af2:	4a23      	ldr	r2, [pc, #140]	; (90019b80 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
90019af4:	4d23      	ldr	r5, [pc, #140]	; (90019b84 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
90019af6:	8811      	ldrh	r1, [r2, #0]
90019af8:	f8b5 c000 	ldrh.w	ip, [r5]
90019afc:	4822      	ldr	r0, [pc, #136]	; (90019b88 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
90019afe:	4461      	add	r1, ip
90019b00:	1c4a      	adds	r2, r1, #1
90019b02:	008f      	lsls	r7, r1, #2
90019b04:	f022 0201 	bic.w	r2, r2, #1
90019b08:	19de      	adds	r6, r3, r7
90019b0a:	0412      	lsls	r2, r2, #16
90019b0c:	6006      	str	r6, [r0, #0]
90019b0e:	4e1f      	ldr	r6, [pc, #124]	; (90019b8c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
90019b10:	0c12      	lsrs	r2, r2, #16
90019b12:	eb07 0742 	add.w	r7, r7, r2, lsl #1
90019b16:	19da      	adds	r2, r3, r7
90019b18:	6032      	str	r2, [r6, #0]
90019b1a:	220e      	movs	r2, #14
90019b1c:	fb02 f20c 	mul.w	r2, r2, ip
90019b20:	3203      	adds	r2, #3
90019b22:	f022 0203 	bic.w	r2, r2, #3
90019b26:	443a      	add	r2, r7
90019b28:	4f19      	ldr	r7, [pc, #100]	; (90019b90 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
90019b2a:	4413      	add	r3, r2
90019b2c:	603b      	str	r3, [r7, #0]
90019b2e:	2300      	movs	r3, #0
90019b30:	4f18      	ldr	r7, [pc, #96]	; (90019b94 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
90019b32:	469c      	mov	ip, r3
90019b34:	803b      	strh	r3, [r7, #0]
90019b36:	4f18      	ldr	r7, [pc, #96]	; (90019b98 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
90019b38:	683f      	ldr	r7, [r7, #0]
90019b3a:	1aba      	subs	r2, r7, r2
90019b3c:	4f17      	ldr	r7, [pc, #92]	; (90019b9c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
90019b3e:	603a      	str	r2, [r7, #0]
90019b40:	f64f 77ff 	movw	r7, #65535	; 0xffff
90019b44:	4a16      	ldr	r2, [pc, #88]	; (90019ba0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
90019b46:	8013      	strh	r3, [r2, #0]
90019b48:	428b      	cmp	r3, r1
90019b4a:	d10d      	bne.n	90019b68 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
90019b4c:	882d      	ldrh	r5, [r5, #0]
90019b4e:	2300      	movs	r3, #0
90019b50:	6830      	ldr	r0, [r6, #0]
90019b52:	240e      	movs	r4, #14
90019b54:	429d      	cmp	r5, r3
90019b56:	d90f      	bls.n	90019b78 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
90019b58:	fb04 0203 	mla	r2, r4, r3, r0
90019b5c:	3301      	adds	r3, #1
90019b5e:	7b11      	ldrb	r1, [r2, #12]
90019b60:	f36f 1145 	bfc	r1, #5, #1
90019b64:	7311      	strb	r1, [r2, #12]
90019b66:	e7f5      	b.n	90019b54 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
90019b68:	6822      	ldr	r2, [r4, #0]
90019b6a:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
90019b6e:	6802      	ldr	r2, [r0, #0]
90019b70:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
90019b74:	3301      	adds	r3, #1
90019b76:	e7e7      	b.n	90019b48 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
90019b78:	bdf0      	pop	{r4, r5, r6, r7, pc}
90019b7a:	bf00      	nop
90019b7c:	240398a0 	.word	0x240398a0
90019b80:	240398bc 	.word	0x240398bc
90019b84:	240398c0 	.word	0x240398c0
90019b88:	240398b4 	.word	0x240398b4
90019b8c:	240398a4 	.word	0x240398a4
90019b90:	240398ac 	.word	0x240398ac
90019b94:	240398be 	.word	0x240398be
90019b98:	240398a8 	.word	0x240398a8
90019b9c:	240398b8 	.word	0x240398b8
90019ba0:	240398b0 	.word	0x240398b0

90019ba4 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
90019ba4:	4b06      	ldr	r3, [pc, #24]	; (90019bc0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
90019ba6:	681b      	ldr	r3, [r3, #0]
90019ba8:	b943      	cbnz	r3, 90019bbc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
90019baa:	b139      	cbz	r1, 90019bbc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
90019bac:	4b05      	ldr	r3, [pc, #20]	; (90019bc4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
90019bae:	801a      	strh	r2, [r3, #0]
90019bb0:	4b05      	ldr	r3, [pc, #20]	; (90019bc8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
90019bb2:	6019      	str	r1, [r3, #0]
90019bb4:	4b05      	ldr	r3, [pc, #20]	; (90019bcc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
90019bb6:	6018      	str	r0, [r3, #0]
90019bb8:	f7ff bf96 	b.w	90019ae8 <_ZN8touchgfx6Bitmap10clearCacheEv>
90019bbc:	4770      	bx	lr
90019bbe:	bf00      	nop
90019bc0:	240398ac 	.word	0x240398ac
90019bc4:	240398c0 	.word	0x240398c0
90019bc8:	240398a8 	.word	0x240398a8
90019bcc:	240398a0 	.word	0x240398a0

90019bd0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
90019bd0:	b470      	push	{r4, r5, r6}
90019bd2:	4c07      	ldr	r4, [pc, #28]	; (90019bf0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
90019bd4:	4605      	mov	r5, r0
90019bd6:	4610      	mov	r0, r2
90019bd8:	9a03      	ldr	r2, [sp, #12]
90019bda:	6826      	ldr	r6, [r4, #0]
90019bdc:	b936      	cbnz	r6, 90019bec <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
90019bde:	6025      	str	r5, [r4, #0]
90019be0:	4c04      	ldr	r4, [pc, #16]	; (90019bf4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
90019be2:	8021      	strh	r1, [r4, #0]
90019be4:	4619      	mov	r1, r3
90019be6:	bc70      	pop	{r4, r5, r6}
90019be8:	f7ff bfdc 	b.w	90019ba4 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
90019bec:	bc70      	pop	{r4, r5, r6}
90019bee:	4770      	bx	lr
90019bf0:	240398c4 	.word	0x240398c4
90019bf4:	240398bc 	.word	0x240398bc

90019bf8 <_ZNK8touchgfx6Bitmap8getWidthEv>:
90019bf8:	4a12      	ldr	r2, [pc, #72]	; (90019c44 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
90019bfa:	8803      	ldrh	r3, [r0, #0]
90019bfc:	8812      	ldrh	r2, [r2, #0]
90019bfe:	4293      	cmp	r3, r2
90019c00:	d207      	bcs.n	90019c12 <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
90019c02:	4a11      	ldr	r2, [pc, #68]	; (90019c48 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
90019c04:	2114      	movs	r1, #20
90019c06:	6812      	ldr	r2, [r2, #0]
90019c08:	fb01 2303 	mla	r3, r1, r3, r2
90019c0c:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
90019c10:	4770      	bx	lr
90019c12:	490e      	ldr	r1, [pc, #56]	; (90019c4c <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
90019c14:	8809      	ldrh	r1, [r1, #0]
90019c16:	4411      	add	r1, r2
90019c18:	428b      	cmp	r3, r1
90019c1a:	da04      	bge.n	90019c26 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
90019c1c:	1a9b      	subs	r3, r3, r2
90019c1e:	4a0c      	ldr	r2, [pc, #48]	; (90019c50 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
90019c20:	210e      	movs	r1, #14
90019c22:	6812      	ldr	r2, [r2, #0]
90019c24:	e7f0      	b.n	90019c08 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
90019c26:	f64f 72fe 	movw	r2, #65534	; 0xfffe
90019c2a:	4293      	cmp	r3, r2
90019c2c:	d108      	bne.n	90019c40 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
90019c2e:	4b09      	ldr	r3, [pc, #36]	; (90019c54 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
90019c30:	781b      	ldrb	r3, [r3, #0]
90019c32:	b91b      	cbnz	r3, 90019c3c <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
90019c34:	4b08      	ldr	r3, [pc, #32]	; (90019c58 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
90019c36:	f9b3 0000 	ldrsh.w	r0, [r3]
90019c3a:	4770      	bx	lr
90019c3c:	4b07      	ldr	r3, [pc, #28]	; (90019c5c <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
90019c3e:	e7fa      	b.n	90019c36 <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
90019c40:	2000      	movs	r0, #0
90019c42:	4770      	bx	lr
90019c44:	240398bc 	.word	0x240398bc
90019c48:	240398c4 	.word	0x240398c4
90019c4c:	240398c0 	.word	0x240398c0
90019c50:	240398a4 	.word	0x240398a4
90019c54:	2403982c 	.word	0x2403982c
90019c58:	2403982e 	.word	0x2403982e
90019c5c:	24039830 	.word	0x24039830

90019c60 <_ZNK8touchgfx6Bitmap9getHeightEv>:
90019c60:	4a12      	ldr	r2, [pc, #72]	; (90019cac <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
90019c62:	8803      	ldrh	r3, [r0, #0]
90019c64:	8812      	ldrh	r2, [r2, #0]
90019c66:	4293      	cmp	r3, r2
90019c68:	d207      	bcs.n	90019c7a <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
90019c6a:	4a11      	ldr	r2, [pc, #68]	; (90019cb0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
90019c6c:	2114      	movs	r1, #20
90019c6e:	6812      	ldr	r2, [r2, #0]
90019c70:	fb01 2303 	mla	r3, r1, r3, r2
90019c74:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
90019c78:	4770      	bx	lr
90019c7a:	490e      	ldr	r1, [pc, #56]	; (90019cb4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
90019c7c:	8809      	ldrh	r1, [r1, #0]
90019c7e:	4411      	add	r1, r2
90019c80:	428b      	cmp	r3, r1
90019c82:	da04      	bge.n	90019c8e <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
90019c84:	1a9b      	subs	r3, r3, r2
90019c86:	4a0c      	ldr	r2, [pc, #48]	; (90019cb8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
90019c88:	210e      	movs	r1, #14
90019c8a:	6812      	ldr	r2, [r2, #0]
90019c8c:	e7f0      	b.n	90019c70 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
90019c8e:	f64f 72fe 	movw	r2, #65534	; 0xfffe
90019c92:	4293      	cmp	r3, r2
90019c94:	d108      	bne.n	90019ca8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
90019c96:	4b09      	ldr	r3, [pc, #36]	; (90019cbc <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
90019c98:	781b      	ldrb	r3, [r3, #0]
90019c9a:	b91b      	cbnz	r3, 90019ca4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
90019c9c:	4b08      	ldr	r3, [pc, #32]	; (90019cc0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
90019c9e:	f9b3 0000 	ldrsh.w	r0, [r3]
90019ca2:	4770      	bx	lr
90019ca4:	4b07      	ldr	r3, [pc, #28]	; (90019cc4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
90019ca6:	e7fa      	b.n	90019c9e <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
90019ca8:	2000      	movs	r0, #0
90019caa:	4770      	bx	lr
90019cac:	240398bc 	.word	0x240398bc
90019cb0:	240398c4 	.word	0x240398c4
90019cb4:	240398c0 	.word	0x240398c0
90019cb8:	240398a4 	.word	0x240398a4
90019cbc:	2403982c 	.word	0x2403982c
90019cc0:	24039830 	.word	0x24039830
90019cc4:	2403982e 	.word	0x2403982e

90019cc8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
90019cc8:	4a1f      	ldr	r2, [pc, #124]	; (90019d48 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
90019cca:	b510      	push	{r4, lr}
90019ccc:	880b      	ldrh	r3, [r1, #0]
90019cce:	8812      	ldrh	r2, [r2, #0]
90019cd0:	4293      	cmp	r3, r2
90019cd2:	d213      	bcs.n	90019cfc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
90019cd4:	4a1d      	ldr	r2, [pc, #116]	; (90019d4c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
90019cd6:	2114      	movs	r1, #20
90019cd8:	6812      	ldr	r2, [r2, #0]
90019cda:	fb01 2303 	mla	r3, r1, r3, r2
90019cde:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
90019ce2:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
90019ce6:	8a1a      	ldrh	r2, [r3, #16]
90019ce8:	8a5b      	ldrh	r3, [r3, #18]
90019cea:	f3c2 020c 	ubfx	r2, r2, #0, #13
90019cee:	8004      	strh	r4, [r0, #0]
90019cf0:	f3c3 030c 	ubfx	r3, r3, #0, #13
90019cf4:	8041      	strh	r1, [r0, #2]
90019cf6:	8082      	strh	r2, [r0, #4]
90019cf8:	80c3      	strh	r3, [r0, #6]
90019cfa:	e00e      	b.n	90019d1a <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
90019cfc:	4914      	ldr	r1, [pc, #80]	; (90019d50 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
90019cfe:	8809      	ldrh	r1, [r1, #0]
90019d00:	4411      	add	r1, r2
90019d02:	428b      	cmp	r3, r1
90019d04:	da0a      	bge.n	90019d1c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
90019d06:	1a9b      	subs	r3, r3, r2
90019d08:	4a12      	ldr	r2, [pc, #72]	; (90019d54 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
90019d0a:	210e      	movs	r1, #14
90019d0c:	6812      	ldr	r2, [r2, #0]
90019d0e:	fb01 2303 	mla	r3, r1, r3, r2
90019d12:	681a      	ldr	r2, [r3, #0]
90019d14:	6002      	str	r2, [r0, #0]
90019d16:	685a      	ldr	r2, [r3, #4]
90019d18:	6042      	str	r2, [r0, #4]
90019d1a:	bd10      	pop	{r4, pc}
90019d1c:	f64f 72fe 	movw	r2, #65534	; 0xfffe
90019d20:	4293      	cmp	r3, r2
90019d22:	d10b      	bne.n	90019d3c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
90019d24:	4b0c      	ldr	r3, [pc, #48]	; (90019d58 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
90019d26:	f9b3 1000 	ldrsh.w	r1, [r3]
90019d2a:	4b0c      	ldr	r3, [pc, #48]	; (90019d5c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
90019d2c:	8081      	strh	r1, [r0, #4]
90019d2e:	f9b3 2000 	ldrsh.w	r2, [r3]
90019d32:	2300      	movs	r3, #0
90019d34:	80c2      	strh	r2, [r0, #6]
90019d36:	8003      	strh	r3, [r0, #0]
90019d38:	8043      	strh	r3, [r0, #2]
90019d3a:	e7ee      	b.n	90019d1a <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
90019d3c:	2300      	movs	r3, #0
90019d3e:	8003      	strh	r3, [r0, #0]
90019d40:	8043      	strh	r3, [r0, #2]
90019d42:	8083      	strh	r3, [r0, #4]
90019d44:	e7d8      	b.n	90019cf8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
90019d46:	bf00      	nop
90019d48:	240398bc 	.word	0x240398bc
90019d4c:	240398c4 	.word	0x240398c4
90019d50:	240398c0 	.word	0x240398c0
90019d54:	240398a4 	.word	0x240398a4
90019d58:	24039828 	.word	0x24039828
90019d5c:	2403982a 	.word	0x2403982a

90019d60 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
90019d60:	4a17      	ldr	r2, [pc, #92]	; (90019dc0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
90019d62:	8803      	ldrh	r3, [r0, #0]
90019d64:	8812      	ldrh	r2, [r2, #0]
90019d66:	4293      	cmp	r3, r2
90019d68:	d213      	bcs.n	90019d92 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
90019d6a:	4a16      	ldr	r2, [pc, #88]	; (90019dc4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
90019d6c:	2114      	movs	r1, #20
90019d6e:	6812      	ldr	r2, [r2, #0]
90019d70:	fb01 2303 	mla	r3, r1, r3, r2
90019d74:	8a1a      	ldrh	r2, [r3, #16]
90019d76:	8919      	ldrh	r1, [r3, #8]
90019d78:	f3c2 020c 	ubfx	r2, r2, #0, #13
90019d7c:	428a      	cmp	r2, r1
90019d7e:	db1d      	blt.n	90019dbc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
90019d80:	8a58      	ldrh	r0, [r3, #18]
90019d82:	f3c0 000c 	ubfx	r0, r0, #0, #13
90019d86:	895b      	ldrh	r3, [r3, #10]
90019d88:	4298      	cmp	r0, r3
90019d8a:	bfac      	ite	ge
90019d8c:	2000      	movge	r0, #0
90019d8e:	2001      	movlt	r0, #1
90019d90:	4770      	bx	lr
90019d92:	490d      	ldr	r1, [pc, #52]	; (90019dc8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
90019d94:	8809      	ldrh	r1, [r1, #0]
90019d96:	4411      	add	r1, r2
90019d98:	428b      	cmp	r3, r1
90019d9a:	da0d      	bge.n	90019db8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
90019d9c:	1a9b      	subs	r3, r3, r2
90019d9e:	4a0b      	ldr	r2, [pc, #44]	; (90019dcc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
90019da0:	210e      	movs	r1, #14
90019da2:	6812      	ldr	r2, [r2, #0]
90019da4:	fb01 2303 	mla	r3, r1, r3, r2
90019da8:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
90019dac:	891a      	ldrh	r2, [r3, #8]
90019dae:	4291      	cmp	r1, r2
90019db0:	db04      	blt.n	90019dbc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
90019db2:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
90019db6:	e7e6      	b.n	90019d86 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
90019db8:	2000      	movs	r0, #0
90019dba:	4770      	bx	lr
90019dbc:	2001      	movs	r0, #1
90019dbe:	4770      	bx	lr
90019dc0:	240398bc 	.word	0x240398bc
90019dc4:	240398c4 	.word	0x240398c4
90019dc8:	240398c0 	.word	0x240398c0
90019dcc:	240398a4 	.word	0x240398a4

90019dd0 <_ZNK8touchgfx6Bitmap7getDataEv>:
90019dd0:	4a12      	ldr	r2, [pc, #72]	; (90019e1c <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
90019dd2:	8803      	ldrh	r3, [r0, #0]
90019dd4:	8811      	ldrh	r1, [r2, #0]
90019dd6:	428b      	cmp	r3, r1
90019dd8:	d20b      	bcs.n	90019df2 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
90019dda:	4a11      	ldr	r2, [pc, #68]	; (90019e20 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
90019ddc:	6812      	ldr	r2, [r2, #0]
90019dde:	b112      	cbz	r2, 90019de6 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
90019de0:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
90019de4:	b9c0      	cbnz	r0, 90019e18 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
90019de6:	4a0f      	ldr	r2, [pc, #60]	; (90019e24 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
90019de8:	6811      	ldr	r1, [r2, #0]
90019dea:	2214      	movs	r2, #20
90019dec:	4353      	muls	r3, r2
90019dee:	58c8      	ldr	r0, [r1, r3]
90019df0:	4770      	bx	lr
90019df2:	4a0d      	ldr	r2, [pc, #52]	; (90019e28 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
90019df4:	8812      	ldrh	r2, [r2, #0]
90019df6:	440a      	add	r2, r1
90019df8:	4293      	cmp	r3, r2
90019dfa:	da04      	bge.n	90019e06 <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
90019dfc:	4a08      	ldr	r2, [pc, #32]	; (90019e20 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
90019dfe:	6812      	ldr	r2, [r2, #0]
90019e00:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
90019e04:	4770      	bx	lr
90019e06:	f64f 72fe 	movw	r2, #65534	; 0xfffe
90019e0a:	4293      	cmp	r3, r2
90019e0c:	d103      	bne.n	90019e16 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
90019e0e:	4b07      	ldr	r3, [pc, #28]	; (90019e2c <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
90019e10:	681b      	ldr	r3, [r3, #0]
90019e12:	6c58      	ldr	r0, [r3, #68]	; 0x44
90019e14:	4770      	bx	lr
90019e16:	2000      	movs	r0, #0
90019e18:	4770      	bx	lr
90019e1a:	bf00      	nop
90019e1c:	240398bc 	.word	0x240398bc
90019e20:	240398a0 	.word	0x240398a0
90019e24:	240398c4 	.word	0x240398c4
90019e28:	240398c0 	.word	0x240398c0
90019e2c:	24039834 	.word	0x24039834

90019e30 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
90019e30:	4b24      	ldr	r3, [pc, #144]	; (90019ec4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
90019e32:	8802      	ldrh	r2, [r0, #0]
90019e34:	8818      	ldrh	r0, [r3, #0]
90019e36:	4282      	cmp	r2, r0
90019e38:	d221      	bcs.n	90019e7e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
90019e3a:	4b23      	ldr	r3, [pc, #140]	; (90019ec8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
90019e3c:	6819      	ldr	r1, [r3, #0]
90019e3e:	2314      	movs	r3, #20
90019e40:	fb03 1302 	mla	r3, r3, r2, r1
90019e44:	6858      	ldr	r0, [r3, #4]
90019e46:	2800      	cmp	r0, #0
90019e48:	d03a      	beq.n	90019ec0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
90019e4a:	4920      	ldr	r1, [pc, #128]	; (90019ecc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
90019e4c:	6809      	ldr	r1, [r1, #0]
90019e4e:	2900      	cmp	r1, #0
90019e50:	d036      	beq.n	90019ec0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
90019e52:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
90019e56:	2900      	cmp	r1, #0
90019e58:	d032      	beq.n	90019ec0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
90019e5a:	891a      	ldrh	r2, [r3, #8]
90019e5c:	8958      	ldrh	r0, [r3, #10]
90019e5e:	4350      	muls	r0, r2
90019e60:	7c5a      	ldrb	r2, [r3, #17]
90019e62:	7cdb      	ldrb	r3, [r3, #19]
90019e64:	0952      	lsrs	r2, r2, #5
90019e66:	f3c3 1342 	ubfx	r3, r3, #5, #3
90019e6a:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
90019e6e:	2b0b      	cmp	r3, #11
90019e70:	bf18      	it	ne
90019e72:	0040      	lslne	r0, r0, #1
90019e74:	3003      	adds	r0, #3
90019e76:	f020 0003 	bic.w	r0, r0, #3
90019e7a:	4408      	add	r0, r1
90019e7c:	4770      	bx	lr
90019e7e:	4b14      	ldr	r3, [pc, #80]	; (90019ed0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
90019e80:	881b      	ldrh	r3, [r3, #0]
90019e82:	4403      	add	r3, r0
90019e84:	429a      	cmp	r2, r3
90019e86:	da1a      	bge.n	90019ebe <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
90019e88:	4b12      	ldr	r3, [pc, #72]	; (90019ed4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
90019e8a:	1a10      	subs	r0, r2, r0
90019e8c:	210e      	movs	r1, #14
90019e8e:	681b      	ldr	r3, [r3, #0]
90019e90:	fb01 3000 	mla	r0, r1, r0, r3
90019e94:	7b03      	ldrb	r3, [r0, #12]
90019e96:	f003 031f 	and.w	r3, r3, #31
90019e9a:	2b0b      	cmp	r3, #11
90019e9c:	d10b      	bne.n	90019eb6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
90019e9e:	8903      	ldrh	r3, [r0, #8]
90019ea0:	8940      	ldrh	r0, [r0, #10]
90019ea2:	4358      	muls	r0, r3
90019ea4:	4b09      	ldr	r3, [pc, #36]	; (90019ecc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
90019ea6:	3003      	adds	r0, #3
90019ea8:	6819      	ldr	r1, [r3, #0]
90019eaa:	f020 0303 	bic.w	r3, r0, #3
90019eae:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
90019eb2:	4418      	add	r0, r3
90019eb4:	4770      	bx	lr
90019eb6:	2b0d      	cmp	r3, #13
90019eb8:	d101      	bne.n	90019ebe <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
90019eba:	300d      	adds	r0, #13
90019ebc:	4770      	bx	lr
90019ebe:	2000      	movs	r0, #0
90019ec0:	4770      	bx	lr
90019ec2:	bf00      	nop
90019ec4:	240398bc 	.word	0x240398bc
90019ec8:	240398c4 	.word	0x240398c4
90019ecc:	240398a0 	.word	0x240398a0
90019ed0:	240398c0 	.word	0x240398c0
90019ed4:	240398a4 	.word	0x240398a4

90019ed8 <_ZNK8touchgfx6Bitmap9getFormatEv>:
90019ed8:	4a17      	ldr	r2, [pc, #92]	; (90019f38 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
90019eda:	b510      	push	{r4, lr}
90019edc:	8803      	ldrh	r3, [r0, #0]
90019ede:	8812      	ldrh	r2, [r2, #0]
90019ee0:	4293      	cmp	r3, r2
90019ee2:	d20c      	bcs.n	90019efe <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
90019ee4:	4a15      	ldr	r2, [pc, #84]	; (90019f3c <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
90019ee6:	2114      	movs	r1, #20
90019ee8:	6812      	ldr	r2, [r2, #0]
90019eea:	fb01 2303 	mla	r3, r1, r3, r2
90019eee:	7c58      	ldrb	r0, [r3, #17]
90019ef0:	0942      	lsrs	r2, r0, #5
90019ef2:	7cd8      	ldrb	r0, [r3, #19]
90019ef4:	f3c0 1042 	ubfx	r0, r0, #5, #3
90019ef8:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
90019efc:	bd10      	pop	{r4, pc}
90019efe:	4910      	ldr	r1, [pc, #64]	; (90019f40 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
90019f00:	8809      	ldrh	r1, [r1, #0]
90019f02:	4411      	add	r1, r2
90019f04:	428b      	cmp	r3, r1
90019f06:	da09      	bge.n	90019f1c <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
90019f08:	1a9b      	subs	r3, r3, r2
90019f0a:	4a0e      	ldr	r2, [pc, #56]	; (90019f44 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
90019f0c:	210e      	movs	r1, #14
90019f0e:	6812      	ldr	r2, [r2, #0]
90019f10:	fb01 2303 	mla	r3, r1, r3, r2
90019f14:	7b18      	ldrb	r0, [r3, #12]
90019f16:	f000 001f 	and.w	r0, r0, #31
90019f1a:	e7ef      	b.n	90019efc <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
90019f1c:	f64f 72fe 	movw	r2, #65534	; 0xfffe
90019f20:	4293      	cmp	r3, r2
90019f22:	d106      	bne.n	90019f32 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
90019f24:	f7f7 fd78 	bl	90011a18 <_ZN8touchgfx3HAL3lcdEv>
90019f28:	6803      	ldr	r3, [r0, #0]
90019f2a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90019f2e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90019f30:	4718      	bx	r3
90019f32:	2000      	movs	r0, #0
90019f34:	e7e2      	b.n	90019efc <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
90019f36:	bf00      	nop
90019f38:	240398bc 	.word	0x240398bc
90019f3c:	240398c4 	.word	0x240398c4
90019f40:	240398c0 	.word	0x240398c0
90019f44:	240398a4 	.word	0x240398a4

90019f48 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
90019f48:	2010      	movs	r0, #16
90019f4a:	4770      	bx	lr

90019f4c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
90019f4c:	4b02      	ldr	r3, [pc, #8]	; (90019f58 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
90019f4e:	8818      	ldrh	r0, [r3, #0]
90019f50:	0040      	lsls	r0, r0, #1
90019f52:	b280      	uxth	r0, r0
90019f54:	4770      	bx	lr
90019f56:	bf00      	nop
90019f58:	2403982e 	.word	0x2403982e

90019f5c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
90019f5c:	2bff      	cmp	r3, #255	; 0xff
90019f5e:	d050      	beq.n	9001a002 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
90019f60:	2a0b      	cmp	r2, #11
90019f62:	d04a      	beq.n	90019ffa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
90019f64:	d80e      	bhi.n	90019f84 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
90019f66:	2a03      	cmp	r2, #3
90019f68:	d03f      	beq.n	90019fea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
90019f6a:	d804      	bhi.n	90019f76 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
90019f6c:	2a01      	cmp	r2, #1
90019f6e:	d03e      	beq.n	90019fee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
90019f70:	d93f      	bls.n	90019ff2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
90019f72:	6b80      	ldr	r0, [r0, #56]	; 0x38
90019f74:	4770      	bx	lr
90019f76:	2a09      	cmp	r2, #9
90019f78:	d03f      	beq.n	90019ffa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
90019f7a:	d83c      	bhi.n	90019ff6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
90019f7c:	2a08      	cmp	r2, #8
90019f7e:	d03a      	beq.n	90019ff6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
90019f80:	2000      	movs	r0, #0
90019f82:	4770      	bx	lr
90019f84:	2a2f      	cmp	r2, #47	; 0x2f
90019f86:	d024      	beq.n	90019fd2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
90019f88:	d80d      	bhi.n	90019fa6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
90019f8a:	2a2d      	cmp	r2, #45	; 0x2d
90019f8c:	d014      	beq.n	90019fb8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
90019f8e:	d826      	bhi.n	90019fde <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
90019f90:	2a2c      	cmp	r2, #44	; 0x2c
90019f92:	d1f5      	bne.n	90019f80 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90019f94:	684b      	ldr	r3, [r1, #4]
90019f96:	781b      	ldrb	r3, [r3, #0]
90019f98:	2b01      	cmp	r3, #1
90019f9a:	d018      	beq.n	90019fce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
90019f9c:	d323      	bcc.n	90019fe6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
90019f9e:	2b02      	cmp	r3, #2
90019fa0:	d1ee      	bne.n	90019f80 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90019fa2:	6880      	ldr	r0, [r0, #8]
90019fa4:	4770      	bx	lr
90019fa6:	2a31      	cmp	r2, #49	; 0x31
90019fa8:	d004      	beq.n	90019fb4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
90019faa:	d328      	bcc.n	90019ffe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
90019fac:	2a32      	cmp	r2, #50	; 0x32
90019fae:	d026      	beq.n	90019ffe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
90019fb0:	2a33      	cmp	r2, #51	; 0x33
90019fb2:	d1e5      	bne.n	90019f80 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90019fb4:	6f00      	ldr	r0, [r0, #112]	; 0x70
90019fb6:	4770      	bx	lr
90019fb8:	684b      	ldr	r3, [r1, #4]
90019fba:	781b      	ldrb	r3, [r3, #0]
90019fbc:	2b01      	cmp	r3, #1
90019fbe:	d004      	beq.n	90019fca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
90019fc0:	d30b      	bcc.n	90019fda <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
90019fc2:	2b02      	cmp	r3, #2
90019fc4:	d1dc      	bne.n	90019f80 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90019fc6:	6900      	ldr	r0, [r0, #16]
90019fc8:	4770      	bx	lr
90019fca:	6a00      	ldr	r0, [r0, #32]
90019fcc:	4770      	bx	lr
90019fce:	6980      	ldr	r0, [r0, #24]
90019fd0:	4770      	bx	lr
90019fd2:	684b      	ldr	r3, [r1, #4]
90019fd4:	781b      	ldrb	r3, [r3, #0]
90019fd6:	2b00      	cmp	r3, #0
90019fd8:	d1d2      	bne.n	90019f80 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90019fda:	6b00      	ldr	r0, [r0, #48]	; 0x30
90019fdc:	4770      	bx	lr
90019fde:	684b      	ldr	r3, [r1, #4]
90019fe0:	781b      	ldrb	r3, [r3, #0]
90019fe2:	2b00      	cmp	r3, #0
90019fe4:	d1cc      	bne.n	90019f80 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90019fe6:	6a80      	ldr	r0, [r0, #40]	; 0x28
90019fe8:	4770      	bx	lr
90019fea:	6c80      	ldr	r0, [r0, #72]	; 0x48
90019fec:	4770      	bx	lr
90019fee:	6d00      	ldr	r0, [r0, #80]	; 0x50
90019ff0:	4770      	bx	lr
90019ff2:	6c00      	ldr	r0, [r0, #64]	; 0x40
90019ff4:	4770      	bx	lr
90019ff6:	6d80      	ldr	r0, [r0, #88]	; 0x58
90019ff8:	4770      	bx	lr
90019ffa:	6e00      	ldr	r0, [r0, #96]	; 0x60
90019ffc:	4770      	bx	lr
90019ffe:	6e80      	ldr	r0, [r0, #104]	; 0x68
9001a000:	4770      	bx	lr
9001a002:	2a0b      	cmp	r2, #11
9001a004:	d049      	beq.n	9001a09a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
9001a006:	d80e      	bhi.n	9001a026 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
9001a008:	2a03      	cmp	r2, #3
9001a00a:	d040      	beq.n	9001a08e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
9001a00c:	d804      	bhi.n	9001a018 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
9001a00e:	2a01      	cmp	r2, #1
9001a010:	d03f      	beq.n	9001a092 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
9001a012:	d940      	bls.n	9001a096 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
9001a014:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
9001a016:	4770      	bx	lr
9001a018:	2a09      	cmp	r2, #9
9001a01a:	d03e      	beq.n	9001a09a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
9001a01c:	d801      	bhi.n	9001a022 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
9001a01e:	2a08      	cmp	r2, #8
9001a020:	d1ae      	bne.n	90019f80 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001a022:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
9001a024:	4770      	bx	lr
9001a026:	2a2f      	cmp	r2, #47	; 0x2f
9001a028:	d024      	beq.n	9001a074 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
9001a02a:	d80d      	bhi.n	9001a048 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
9001a02c:	2a2d      	cmp	r2, #45	; 0x2d
9001a02e:	d014      	beq.n	9001a05a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
9001a030:	d826      	bhi.n	9001a080 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
9001a032:	2a2c      	cmp	r2, #44	; 0x2c
9001a034:	d1a4      	bne.n	90019f80 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001a036:	684b      	ldr	r3, [r1, #4]
9001a038:	781b      	ldrb	r3, [r3, #0]
9001a03a:	2b01      	cmp	r3, #1
9001a03c:	d018      	beq.n	9001a070 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
9001a03e:	d324      	bcc.n	9001a08a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
9001a040:	2b02      	cmp	r3, #2
9001a042:	d19d      	bne.n	90019f80 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001a044:	68c0      	ldr	r0, [r0, #12]
9001a046:	4770      	bx	lr
9001a048:	2a31      	cmp	r2, #49	; 0x31
9001a04a:	d004      	beq.n	9001a056 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
9001a04c:	d327      	bcc.n	9001a09e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
9001a04e:	2a32      	cmp	r2, #50	; 0x32
9001a050:	d025      	beq.n	9001a09e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
9001a052:	2a33      	cmp	r2, #51	; 0x33
9001a054:	d194      	bne.n	90019f80 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001a056:	6f40      	ldr	r0, [r0, #116]	; 0x74
9001a058:	4770      	bx	lr
9001a05a:	684b      	ldr	r3, [r1, #4]
9001a05c:	781b      	ldrb	r3, [r3, #0]
9001a05e:	2b01      	cmp	r3, #1
9001a060:	d004      	beq.n	9001a06c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
9001a062:	d30b      	bcc.n	9001a07c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
9001a064:	2b02      	cmp	r3, #2
9001a066:	d18b      	bne.n	90019f80 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001a068:	6940      	ldr	r0, [r0, #20]
9001a06a:	4770      	bx	lr
9001a06c:	6a40      	ldr	r0, [r0, #36]	; 0x24
9001a06e:	4770      	bx	lr
9001a070:	69c0      	ldr	r0, [r0, #28]
9001a072:	4770      	bx	lr
9001a074:	684b      	ldr	r3, [r1, #4]
9001a076:	781b      	ldrb	r3, [r3, #0]
9001a078:	2b00      	cmp	r3, #0
9001a07a:	d181      	bne.n	90019f80 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001a07c:	6b40      	ldr	r0, [r0, #52]	; 0x34
9001a07e:	4770      	bx	lr
9001a080:	684b      	ldr	r3, [r1, #4]
9001a082:	781b      	ldrb	r3, [r3, #0]
9001a084:	2b00      	cmp	r3, #0
9001a086:	f47f af7b 	bne.w	90019f80 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001a08a:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
9001a08c:	4770      	bx	lr
9001a08e:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
9001a090:	4770      	bx	lr
9001a092:	6d40      	ldr	r0, [r0, #84]	; 0x54
9001a094:	4770      	bx	lr
9001a096:	6c40      	ldr	r0, [r0, #68]	; 0x44
9001a098:	4770      	bx	lr
9001a09a:	6e40      	ldr	r0, [r0, #100]	; 0x64
9001a09c:	4770      	bx	lr
9001a09e:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
9001a0a0:	4770      	bx	lr

9001a0a2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001a0a2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a0a6:	b087      	sub	sp, #28
9001a0a8:	9815      	ldr	r0, [sp, #84]	; 0x54
9001a0aa:	9205      	str	r2, [sp, #20]
9001a0ac:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001a0b0:	9101      	str	r1, [sp, #4]
9001a0b2:	9202      	str	r2, [sp, #8]
9001a0b4:	6841      	ldr	r1, [r0, #4]
9001a0b6:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
9001a0ba:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
9001a0be:	fb01 2404 	mla	r4, r1, r4, r2
9001a0c2:	6802      	ldr	r2, [r0, #0]
9001a0c4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001a0c8:	f8de 2000 	ldr.w	r2, [lr]
9001a0cc:	9203      	str	r2, [sp, #12]
9001a0ce:	f8de 2004 	ldr.w	r2, [lr, #4]
9001a0d2:	3204      	adds	r2, #4
9001a0d4:	9204      	str	r2, [sp, #16]
9001a0d6:	9a02      	ldr	r2, [sp, #8]
9001a0d8:	43d6      	mvns	r6, r2
9001a0da:	b2f6      	uxtb	r6, r6
9001a0dc:	9a01      	ldr	r2, [sp, #4]
9001a0de:	2a00      	cmp	r2, #0
9001a0e0:	dc03      	bgt.n	9001a0ea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
9001a0e2:	9a05      	ldr	r2, [sp, #20]
9001a0e4:	2a00      	cmp	r2, #0
9001a0e6:	f340 8129 	ble.w	9001a33c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
9001a0ea:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001a0ec:	f9be c008 	ldrsh.w	ip, [lr, #8]
9001a0f0:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001a0f4:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001a0f6:	f9be 700c 	ldrsh.w	r7, [lr, #12]
9001a0fa:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001a0fe:	2b00      	cmp	r3, #0
9001a100:	dd0e      	ble.n	9001a120 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001a102:	1408      	asrs	r0, r1, #16
9001a104:	d405      	bmi.n	9001a112 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001a106:	4560      	cmp	r0, ip
9001a108:	da03      	bge.n	9001a112 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001a10a:	1410      	asrs	r0, r2, #16
9001a10c:	d401      	bmi.n	9001a112 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001a10e:	42b8      	cmp	r0, r7
9001a110:	db07      	blt.n	9001a122 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9001a112:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001a114:	3b01      	subs	r3, #1
9001a116:	3402      	adds	r4, #2
9001a118:	4401      	add	r1, r0
9001a11a:	9814      	ldr	r0, [sp, #80]	; 0x50
9001a11c:	4402      	add	r2, r0
9001a11e:	e7ee      	b.n	9001a0fe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
9001a120:	d071      	beq.n	9001a206 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001a122:	1e58      	subs	r0, r3, #1
9001a124:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9001a126:	fb05 1500 	mla	r5, r5, r0, r1
9001a12a:	142d      	asrs	r5, r5, #16
9001a12c:	d45f      	bmi.n	9001a1ee <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001a12e:	4565      	cmp	r5, ip
9001a130:	da5d      	bge.n	9001a1ee <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001a132:	9d14      	ldr	r5, [sp, #80]	; 0x50
9001a134:	fb05 2000 	mla	r0, r5, r0, r2
9001a138:	1400      	asrs	r0, r0, #16
9001a13a:	d458      	bmi.n	9001a1ee <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001a13c:	42b8      	cmp	r0, r7
9001a13e:	da56      	bge.n	9001a1ee <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001a140:	4699      	mov	r9, r3
9001a142:	46a2      	mov	sl, r4
9001a144:	f8bd b008 	ldrh.w	fp, [sp, #8]
9001a148:	f1b9 0f00 	cmp.w	r9, #0
9001a14c:	dd57      	ble.n	9001a1fe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
9001a14e:	ea4f 4c22 	mov.w	ip, r2, asr #16
9001a152:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001a156:	9803      	ldr	r0, [sp, #12]
9001a158:	140d      	asrs	r5, r1, #16
9001a15a:	f109 39ff 	add.w	r9, r9, #4294967295
9001a15e:	fb07 000c 	mla	r0, r7, ip, r0
9001a162:	5d40      	ldrb	r0, [r0, r5]
9001a164:	9d04      	ldr	r5, [sp, #16]
9001a166:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
9001a16a:	f8ba 5000 	ldrh.w	r5, [sl]
9001a16e:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001a172:	122f      	asrs	r7, r5, #8
9001a174:	ea4f 08e5 	mov.w	r8, r5, asr #3
9001a178:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001a17c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001a180:	00ed      	lsls	r5, r5, #3
9001a182:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
9001a186:	fb17 f706 	smulbb	r7, r7, r6
9001a18a:	b2ed      	uxtb	r5, r5
9001a18c:	fb18 f806 	smulbb	r8, r8, r6
9001a190:	fb0c 7c0b 	mla	ip, ip, fp, r7
9001a194:	10c7      	asrs	r7, r0, #3
9001a196:	fb15 f506 	smulbb	r5, r5, r6
9001a19a:	00c0      	lsls	r0, r0, #3
9001a19c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001a1a0:	fa1f fc8c 	uxth.w	ip, ip
9001a1a4:	b2c0      	uxtb	r0, r0
9001a1a6:	fb07 870b 	mla	r7, r7, fp, r8
9001a1aa:	fb00 500b 	mla	r0, r0, fp, r5
9001a1ae:	f10c 0501 	add.w	r5, ip, #1
9001a1b2:	b2bf      	uxth	r7, r7
9001a1b4:	b280      	uxth	r0, r0
9001a1b6:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001a1ba:	f107 0801 	add.w	r8, r7, #1
9001a1be:	1c45      	adds	r5, r0, #1
9001a1c0:	eb08 2817 	add.w	r8, r8, r7, lsr #8
9001a1c4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001a1c8:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001a1cc:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001a1ce:	ea4f 1858 	mov.w	r8, r8, lsr #5
9001a1d2:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001a1d6:	4401      	add	r1, r0
9001a1d8:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
9001a1dc:	9814      	ldr	r0, [sp, #80]	; 0x50
9001a1de:	ea45 0c0c 	orr.w	ip, r5, ip
9001a1e2:	4402      	add	r2, r0
9001a1e4:	ea4c 0c08 	orr.w	ip, ip, r8
9001a1e8:	f82a cb02 	strh.w	ip, [sl], #2
9001a1ec:	e7ac      	b.n	9001a148 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
9001a1ee:	f04f 0800 	mov.w	r8, #0
9001a1f2:	f8bd a008 	ldrh.w	sl, [sp, #8]
9001a1f6:	eb03 0008 	add.w	r0, r3, r8
9001a1fa:	2800      	cmp	r0, #0
9001a1fc:	dc41      	bgt.n	9001a282 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
9001a1fe:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001a202:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001a206:	9b01      	ldr	r3, [sp, #4]
9001a208:	2b00      	cmp	r3, #0
9001a20a:	f340 8097 	ble.w	9001a33c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
9001a20e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
9001a212:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001a214:	ee30 0a04 	vadd.f32	s0, s0, s8
9001a218:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001a21c:	eef0 6a62 	vmov.f32	s13, s5
9001a220:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001a224:	ee31 1a05 	vadd.f32	s2, s2, s10
9001a228:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001a22c:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
9001a230:	eef0 6a43 	vmov.f32	s13, s6
9001a234:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001a238:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
9001a23c:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001a240:	ee61 7a27 	vmul.f32	s15, s2, s15
9001a244:	ee77 2a62 	vsub.f32	s5, s14, s5
9001a248:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001a24c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001a250:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001a254:	ee12 2a90 	vmov	r2, s5
9001a258:	eef0 2a47 	vmov.f32	s5, s14
9001a25c:	fb92 f3f3 	sdiv	r3, r2, r3
9001a260:	ee13 2a10 	vmov	r2, s6
9001a264:	9313      	str	r3, [sp, #76]	; 0x4c
9001a266:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001a268:	eeb0 3a67 	vmov.f32	s6, s15
9001a26c:	fb92 f3f3 	sdiv	r3, r2, r3
9001a270:	9314      	str	r3, [sp, #80]	; 0x50
9001a272:	9b01      	ldr	r3, [sp, #4]
9001a274:	9a05      	ldr	r2, [sp, #20]
9001a276:	3b01      	subs	r3, #1
9001a278:	9301      	str	r3, [sp, #4]
9001a27a:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001a27c:	bf08      	it	eq
9001a27e:	4613      	moveq	r3, r2
9001a280:	e72c      	b.n	9001a0dc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
9001a282:	140f      	asrs	r7, r1, #16
9001a284:	d453      	bmi.n	9001a32e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001a286:	f8de 5008 	ldr.w	r5, [lr, #8]
9001a28a:	42bd      	cmp	r5, r7
9001a28c:	dd4f      	ble.n	9001a32e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001a28e:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001a292:	d44c      	bmi.n	9001a32e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001a294:	f8de 000c 	ldr.w	r0, [lr, #12]
9001a298:	4560      	cmp	r0, ip
9001a29a:	dd48      	ble.n	9001a32e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001a29c:	9803      	ldr	r0, [sp, #12]
9001a29e:	b22d      	sxth	r5, r5
9001a2a0:	fb0c 0505 	mla	r5, ip, r5, r0
9001a2a4:	5de8      	ldrb	r0, [r5, r7]
9001a2a6:	9d04      	ldr	r5, [sp, #16]
9001a2a8:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
9001a2ac:	f06f 0501 	mvn.w	r5, #1
9001a2b0:	fb05 fb08 	mul.w	fp, r5, r8
9001a2b4:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001a2b8:	f834 500b 	ldrh.w	r5, [r4, fp]
9001a2bc:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001a2c0:	122f      	asrs	r7, r5, #8
9001a2c2:	ea4f 09e5 	mov.w	r9, r5, asr #3
9001a2c6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001a2ca:	00ed      	lsls	r5, r5, #3
9001a2cc:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
9001a2d0:	fb17 f706 	smulbb	r7, r7, r6
9001a2d4:	b2ed      	uxtb	r5, r5
9001a2d6:	fb19 f906 	smulbb	r9, r9, r6
9001a2da:	fb0c 7c0a 	mla	ip, ip, sl, r7
9001a2de:	10c7      	asrs	r7, r0, #3
9001a2e0:	fb15 f506 	smulbb	r5, r5, r6
9001a2e4:	00c0      	lsls	r0, r0, #3
9001a2e6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001a2ea:	fa1f fc8c 	uxth.w	ip, ip
9001a2ee:	b2c0      	uxtb	r0, r0
9001a2f0:	fb07 970a 	mla	r7, r7, sl, r9
9001a2f4:	fb00 500a 	mla	r0, r0, sl, r5
9001a2f8:	f10c 0501 	add.w	r5, ip, #1
9001a2fc:	b2bf      	uxth	r7, r7
9001a2fe:	b280      	uxth	r0, r0
9001a300:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001a304:	f107 0901 	add.w	r9, r7, #1
9001a308:	1c45      	adds	r5, r0, #1
9001a30a:	eb09 2917 	add.w	r9, r9, r7, lsr #8
9001a30e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001a312:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001a316:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001a31a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001a31e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
9001a322:	ea45 0c0c 	orr.w	ip, r5, ip
9001a326:	ea4c 0c09 	orr.w	ip, ip, r9
9001a32a:	f824 c00b 	strh.w	ip, [r4, fp]
9001a32e:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001a330:	f108 38ff 	add.w	r8, r8, #4294967295
9001a334:	4401      	add	r1, r0
9001a336:	9814      	ldr	r0, [sp, #80]	; 0x50
9001a338:	4402      	add	r2, r0
9001a33a:	e75c      	b.n	9001a1f6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
9001a33c:	b007      	add	sp, #28
9001a33e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001a342 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001a342:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a346:	b085      	sub	sp, #20
9001a348:	4693      	mov	fp, r2
9001a34a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001a34e:	9e13      	ldr	r6, [sp, #76]	; 0x4c
9001a350:	9d16      	ldr	r5, [sp, #88]	; 0x58
9001a352:	6870      	ldr	r0, [r6, #4]
9001a354:	9100      	str	r1, [sp, #0]
9001a356:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
9001a35a:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
9001a35e:	fb00 2404 	mla	r4, r0, r4, r2
9001a362:	6832      	ldr	r2, [r6, #0]
9001a364:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001a368:	682a      	ldr	r2, [r5, #0]
9001a36a:	9201      	str	r2, [sp, #4]
9001a36c:	686a      	ldr	r2, [r5, #4]
9001a36e:	3204      	adds	r2, #4
9001a370:	9202      	str	r2, [sp, #8]
9001a372:	9a00      	ldr	r2, [sp, #0]
9001a374:	2a00      	cmp	r2, #0
9001a376:	dc03      	bgt.n	9001a380 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9001a378:	f1bb 0f00 	cmp.w	fp, #0
9001a37c:	f340 80a0 	ble.w	9001a4c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
9001a380:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001a382:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001a386:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
9001a38a:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001a38c:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
9001a390:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001a394:	2b00      	cmp	r3, #0
9001a396:	dd0c      	ble.n	9001a3b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001a398:	1406      	asrs	r6, r0, #16
9001a39a:	d405      	bmi.n	9001a3a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001a39c:	454e      	cmp	r6, r9
9001a39e:	da03      	bge.n	9001a3a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001a3a0:	1416      	asrs	r6, r2, #16
9001a3a2:	d401      	bmi.n	9001a3a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001a3a4:	4546      	cmp	r6, r8
9001a3a6:	db05      	blt.n	9001a3b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001a3a8:	4470      	add	r0, lr
9001a3aa:	4462      	add	r2, ip
9001a3ac:	3b01      	subs	r3, #1
9001a3ae:	3402      	adds	r4, #2
9001a3b0:	e7f0      	b.n	9001a394 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9001a3b2:	d00f      	beq.n	9001a3d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001a3b4:	1e5e      	subs	r6, r3, #1
9001a3b6:	fb0e 0706 	mla	r7, lr, r6, r0
9001a3ba:	143f      	asrs	r7, r7, #16
9001a3bc:	d541      	bpl.n	9001a442 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
9001a3be:	eb04 0643 	add.w	r6, r4, r3, lsl #1
9001a3c2:	4698      	mov	r8, r3
9001a3c4:	9603      	str	r6, [sp, #12]
9001a3c6:	f1b8 0f00 	cmp.w	r8, #0
9001a3ca:	dc59      	bgt.n	9001a480 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001a3cc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001a3d0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001a3d4:	9b00      	ldr	r3, [sp, #0]
9001a3d6:	2b00      	cmp	r3, #0
9001a3d8:	dd72      	ble.n	9001a4c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
9001a3da:	ee30 0a04 	vadd.f32	s0, s0, s8
9001a3de:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001a3e0:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001a3e4:	eeb0 6a62 	vmov.f32	s12, s5
9001a3e8:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001a3ec:	ee31 1a05 	vadd.f32	s2, s2, s10
9001a3f0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001a3f4:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
9001a3f8:	eeb0 6a43 	vmov.f32	s12, s6
9001a3fc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001a400:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
9001a404:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001a408:	ee61 7a27 	vmul.f32	s15, s2, s15
9001a40c:	ee77 2a62 	vsub.f32	s5, s14, s5
9001a410:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001a414:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001a418:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001a41c:	ee12 2a90 	vmov	r2, s5
9001a420:	eef0 2a47 	vmov.f32	s5, s14
9001a424:	fb92 fef3 	sdiv	lr, r2, r3
9001a428:	ee13 2a10 	vmov	r2, s6
9001a42c:	eeb0 3a67 	vmov.f32	s6, s15
9001a430:	fb92 fcf3 	sdiv	ip, r2, r3
9001a434:	9b00      	ldr	r3, [sp, #0]
9001a436:	3b01      	subs	r3, #1
9001a438:	9300      	str	r3, [sp, #0]
9001a43a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001a43c:	bf08      	it	eq
9001a43e:	465b      	moveq	r3, fp
9001a440:	e797      	b.n	9001a372 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
9001a442:	454f      	cmp	r7, r9
9001a444:	dabb      	bge.n	9001a3be <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001a446:	fb0c 2606 	mla	r6, ip, r6, r2
9001a44a:	1436      	asrs	r6, r6, #16
9001a44c:	d4b7      	bmi.n	9001a3be <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001a44e:	4546      	cmp	r6, r8
9001a450:	dab5      	bge.n	9001a3be <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001a452:	461e      	mov	r6, r3
9001a454:	46a0      	mov	r8, r4
9001a456:	2e00      	cmp	r6, #0
9001a458:	ddb8      	ble.n	9001a3cc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9001a45a:	1417      	asrs	r7, r2, #16
9001a45c:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
9001a460:	9901      	ldr	r1, [sp, #4]
9001a462:	ea4f 4920 	mov.w	r9, r0, asr #16
9001a466:	4462      	add	r2, ip
9001a468:	4470      	add	r0, lr
9001a46a:	fb0a 1707 	mla	r7, sl, r7, r1
9001a46e:	9902      	ldr	r1, [sp, #8]
9001a470:	3e01      	subs	r6, #1
9001a472:	f817 7009 	ldrb.w	r7, [r7, r9]
9001a476:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
9001a47a:	f828 7b02 	strh.w	r7, [r8], #2
9001a47e:	e7ea      	b.n	9001a456 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
9001a480:	ea5f 4920 	movs.w	r9, r0, asr #16
9001a484:	d417      	bmi.n	9001a4b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001a486:	68ae      	ldr	r6, [r5, #8]
9001a488:	454e      	cmp	r6, r9
9001a48a:	dd14      	ble.n	9001a4b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001a48c:	ea5f 4a22 	movs.w	sl, r2, asr #16
9001a490:	d411      	bmi.n	9001a4b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001a492:	68ef      	ldr	r7, [r5, #12]
9001a494:	4557      	cmp	r7, sl
9001a496:	dd0e      	ble.n	9001a4b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001a498:	9f01      	ldr	r7, [sp, #4]
9001a49a:	b236      	sxth	r6, r6
9001a49c:	f06f 0101 	mvn.w	r1, #1
9001a4a0:	fb0a 7606 	mla	r6, sl, r6, r7
9001a4a4:	9f02      	ldr	r7, [sp, #8]
9001a4a6:	f816 6009 	ldrb.w	r6, [r6, r9]
9001a4aa:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
9001a4ae:	fb01 f608 	mul.w	r6, r1, r8
9001a4b2:	9903      	ldr	r1, [sp, #12]
9001a4b4:	538f      	strh	r7, [r1, r6]
9001a4b6:	4470      	add	r0, lr
9001a4b8:	4462      	add	r2, ip
9001a4ba:	f108 38ff 	add.w	r8, r8, #4294967295
9001a4be:	e782      	b.n	9001a3c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001a4c0:	b005      	add	sp, #20
9001a4c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001a4c6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001a4c6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a4ca:	b087      	sub	sp, #28
9001a4cc:	9c15      	ldr	r4, [sp, #84]	; 0x54
9001a4ce:	9205      	str	r2, [sp, #20]
9001a4d0:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001a4d4:	9102      	str	r1, [sp, #8]
9001a4d6:	9203      	str	r2, [sp, #12]
9001a4d8:	6861      	ldr	r1, [r4, #4]
9001a4da:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
9001a4de:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
9001a4e2:	fb01 2000 	mla	r0, r1, r0, r2
9001a4e6:	6822      	ldr	r2, [r4, #0]
9001a4e8:	eb02 0240 	add.w	r2, r2, r0, lsl #1
9001a4ec:	9200      	str	r2, [sp, #0]
9001a4ee:	f8dc 2000 	ldr.w	r2, [ip]
9001a4f2:	9204      	str	r2, [sp, #16]
9001a4f4:	f8dc 2004 	ldr.w	r2, [ip, #4]
9001a4f8:	3204      	adds	r2, #4
9001a4fa:	9201      	str	r2, [sp, #4]
9001a4fc:	9a03      	ldr	r2, [sp, #12]
9001a4fe:	43d5      	mvns	r5, r2
9001a500:	b2ed      	uxtb	r5, r5
9001a502:	9a02      	ldr	r2, [sp, #8]
9001a504:	2a00      	cmp	r2, #0
9001a506:	dc03      	bgt.n	9001a510 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
9001a508:	9a05      	ldr	r2, [sp, #20]
9001a50a:	2a00      	cmp	r2, #0
9001a50c:	f340 812c 	ble.w	9001a768 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
9001a510:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001a512:	f9bc e008 	ldrsh.w	lr, [ip, #8]
9001a516:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001a51a:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001a51c:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
9001a520:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001a524:	2b00      	cmp	r3, #0
9001a526:	dd10      	ble.n	9001a54a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001a528:	140c      	asrs	r4, r1, #16
9001a52a:	d405      	bmi.n	9001a538 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001a52c:	4574      	cmp	r4, lr
9001a52e:	da03      	bge.n	9001a538 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001a530:	1414      	asrs	r4, r2, #16
9001a532:	d401      	bmi.n	9001a538 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001a534:	42bc      	cmp	r4, r7
9001a536:	db09      	blt.n	9001a54c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
9001a538:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9001a53a:	3b01      	subs	r3, #1
9001a53c:	9800      	ldr	r0, [sp, #0]
9001a53e:	4421      	add	r1, r4
9001a540:	9c14      	ldr	r4, [sp, #80]	; 0x50
9001a542:	3002      	adds	r0, #2
9001a544:	4422      	add	r2, r4
9001a546:	9000      	str	r0, [sp, #0]
9001a548:	e7ec      	b.n	9001a524 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
9001a54a:	d071      	beq.n	9001a630 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
9001a54c:	1e5c      	subs	r4, r3, #1
9001a54e:	9e13      	ldr	r6, [sp, #76]	; 0x4c
9001a550:	fb06 1604 	mla	r6, r6, r4, r1
9001a554:	1436      	asrs	r6, r6, #16
9001a556:	d45d      	bmi.n	9001a614 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001a558:	4576      	cmp	r6, lr
9001a55a:	da5b      	bge.n	9001a614 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001a55c:	9e14      	ldr	r6, [sp, #80]	; 0x50
9001a55e:	fb06 2404 	mla	r4, r6, r4, r2
9001a562:	1424      	asrs	r4, r4, #16
9001a564:	d456      	bmi.n	9001a614 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001a566:	42bc      	cmp	r4, r7
9001a568:	da54      	bge.n	9001a614 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001a56a:	4698      	mov	r8, r3
9001a56c:	f8dd 9000 	ldr.w	r9, [sp]
9001a570:	f8bd a00c 	ldrh.w	sl, [sp, #12]
9001a574:	f1b8 0f00 	cmp.w	r8, #0
9001a578:	dd54      	ble.n	9001a624 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
9001a57a:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
9001a57e:	1414      	asrs	r4, r2, #16
9001a580:	9804      	ldr	r0, [sp, #16]
9001a582:	140e      	asrs	r6, r1, #16
9001a584:	f108 38ff 	add.w	r8, r8, #4294967295
9001a588:	fb07 0404 	mla	r4, r7, r4, r0
9001a58c:	9801      	ldr	r0, [sp, #4]
9001a58e:	f814 e006 	ldrb.w	lr, [r4, r6]
9001a592:	f8b9 4000 	ldrh.w	r4, [r9]
9001a596:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001a59a:	1227      	asrs	r7, r4, #8
9001a59c:	eb00 0b0e 	add.w	fp, r0, lr
9001a5a0:	f810 e00e 	ldrb.w	lr, [r0, lr]
9001a5a4:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001a5a8:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001a5aa:	f89b 6002 	ldrb.w	r6, [fp, #2]
9001a5ae:	f89b b001 	ldrb.w	fp, [fp, #1]
9001a5b2:	4401      	add	r1, r0
9001a5b4:	fb16 f60a 	smulbb	r6, r6, sl
9001a5b8:	9814      	ldr	r0, [sp, #80]	; 0x50
9001a5ba:	fb1b fb0a 	smulbb	fp, fp, sl
9001a5be:	fb07 6705 	mla	r7, r7, r5, r6
9001a5c2:	10e6      	asrs	r6, r4, #3
9001a5c4:	00e4      	lsls	r4, r4, #3
9001a5c6:	4402      	add	r2, r0
9001a5c8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001a5cc:	b2bf      	uxth	r7, r7
9001a5ce:	b2e4      	uxtb	r4, r4
9001a5d0:	fb06 b605 	mla	r6, r6, r5, fp
9001a5d4:	fb14 f405 	smulbb	r4, r4, r5
9001a5d8:	b2b6      	uxth	r6, r6
9001a5da:	fb0e 4e0a 	mla	lr, lr, sl, r4
9001a5de:	1c7c      	adds	r4, r7, #1
9001a5e0:	f106 0b01 	add.w	fp, r6, #1
9001a5e4:	fa1f fe8e 	uxth.w	lr, lr
9001a5e8:	eb04 2717 	add.w	r7, r4, r7, lsr #8
9001a5ec:	f10e 0401 	add.w	r4, lr, #1
9001a5f0:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
9001a5f4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001a5f8:	eb04 241e 	add.w	r4, r4, lr, lsr #8
9001a5fc:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
9001a600:	f3c4 24c4 	ubfx	r4, r4, #11, #5
9001a604:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
9001a608:	4327      	orrs	r7, r4
9001a60a:	ea47 070b 	orr.w	r7, r7, fp
9001a60e:	f829 7b02 	strh.w	r7, [r9], #2
9001a612:	e7af      	b.n	9001a574 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
9001a614:	f04f 0e00 	mov.w	lr, #0
9001a618:	f8bd 900c 	ldrh.w	r9, [sp, #12]
9001a61c:	eb03 040e 	add.w	r4, r3, lr
9001a620:	2c00      	cmp	r4, #0
9001a622:	dc43      	bgt.n	9001a6ac <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
9001a624:	9a00      	ldr	r2, [sp, #0]
9001a626:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001a62a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001a62e:	9300      	str	r3, [sp, #0]
9001a630:	9b02      	ldr	r3, [sp, #8]
9001a632:	2b00      	cmp	r3, #0
9001a634:	f340 8098 	ble.w	9001a768 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
9001a638:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
9001a63c:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001a63e:	ee30 0a04 	vadd.f32	s0, s0, s8
9001a642:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001a646:	eef0 6a62 	vmov.f32	s13, s5
9001a64a:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001a64e:	ee31 1a05 	vadd.f32	s2, s2, s10
9001a652:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001a656:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
9001a65a:	eef0 6a43 	vmov.f32	s13, s6
9001a65e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001a662:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
9001a666:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001a66a:	ee61 7a27 	vmul.f32	s15, s2, s15
9001a66e:	ee77 2a62 	vsub.f32	s5, s14, s5
9001a672:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001a676:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001a67a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001a67e:	ee12 2a90 	vmov	r2, s5
9001a682:	eef0 2a47 	vmov.f32	s5, s14
9001a686:	fb92 f3f3 	sdiv	r3, r2, r3
9001a68a:	ee13 2a10 	vmov	r2, s6
9001a68e:	9313      	str	r3, [sp, #76]	; 0x4c
9001a690:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001a692:	eeb0 3a67 	vmov.f32	s6, s15
9001a696:	fb92 f3f3 	sdiv	r3, r2, r3
9001a69a:	9314      	str	r3, [sp, #80]	; 0x50
9001a69c:	9b02      	ldr	r3, [sp, #8]
9001a69e:	9a05      	ldr	r2, [sp, #20]
9001a6a0:	3b01      	subs	r3, #1
9001a6a2:	9302      	str	r3, [sp, #8]
9001a6a4:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001a6a6:	bf08      	it	eq
9001a6a8:	4613      	moveq	r3, r2
9001a6aa:	e72a      	b.n	9001a502 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9001a6ac:	140f      	asrs	r7, r1, #16
9001a6ae:	d454      	bmi.n	9001a75a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001a6b0:	f8dc 6008 	ldr.w	r6, [ip, #8]
9001a6b4:	42be      	cmp	r6, r7
9001a6b6:	dd50      	ble.n	9001a75a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001a6b8:	ea5f 4822 	movs.w	r8, r2, asr #16
9001a6bc:	d44d      	bmi.n	9001a75a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001a6be:	f8dc 400c 	ldr.w	r4, [ip, #12]
9001a6c2:	4544      	cmp	r4, r8
9001a6c4:	dd49      	ble.n	9001a75a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001a6c6:	9c04      	ldr	r4, [sp, #16]
9001a6c8:	b236      	sxth	r6, r6
9001a6ca:	f06f 0001 	mvn.w	r0, #1
9001a6ce:	fb08 4606 	mla	r6, r8, r6, r4
9001a6d2:	9c01      	ldr	r4, [sp, #4]
9001a6d4:	fb00 fa0e 	mul.w	sl, r0, lr
9001a6d8:	9800      	ldr	r0, [sp, #0]
9001a6da:	f816 8007 	ldrb.w	r8, [r6, r7]
9001a6de:	eb08 0848 	add.w	r8, r8, r8, lsl #1
9001a6e2:	eb04 0b08 	add.w	fp, r4, r8
9001a6e6:	f830 400a 	ldrh.w	r4, [r0, sl]
9001a6ea:	9801      	ldr	r0, [sp, #4]
9001a6ec:	f89b 6002 	ldrb.w	r6, [fp, #2]
9001a6f0:	1227      	asrs	r7, r4, #8
9001a6f2:	f89b b001 	ldrb.w	fp, [fp, #1]
9001a6f6:	fb16 f609 	smulbb	r6, r6, r9
9001a6fa:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001a6fe:	f810 8008 	ldrb.w	r8, [r0, r8]
9001a702:	fb1b fb09 	smulbb	fp, fp, r9
9001a706:	fb07 6705 	mla	r7, r7, r5, r6
9001a70a:	10e6      	asrs	r6, r4, #3
9001a70c:	00e4      	lsls	r4, r4, #3
9001a70e:	9800      	ldr	r0, [sp, #0]
9001a710:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001a714:	b2bf      	uxth	r7, r7
9001a716:	b2e4      	uxtb	r4, r4
9001a718:	fb06 b605 	mla	r6, r6, r5, fp
9001a71c:	fb14 f405 	smulbb	r4, r4, r5
9001a720:	b2b6      	uxth	r6, r6
9001a722:	fb08 4809 	mla	r8, r8, r9, r4
9001a726:	1c7c      	adds	r4, r7, #1
9001a728:	f106 0b01 	add.w	fp, r6, #1
9001a72c:	fa1f f888 	uxth.w	r8, r8
9001a730:	eb04 2717 	add.w	r7, r4, r7, lsr #8
9001a734:	f108 0401 	add.w	r4, r8, #1
9001a738:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
9001a73c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001a740:	eb04 2418 	add.w	r4, r4, r8, lsr #8
9001a744:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
9001a748:	f3c4 24c4 	ubfx	r4, r4, #11, #5
9001a74c:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
9001a750:	4327      	orrs	r7, r4
9001a752:	ea47 070b 	orr.w	r7, r7, fp
9001a756:	f820 700a 	strh.w	r7, [r0, sl]
9001a75a:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001a75c:	f10e 3eff 	add.w	lr, lr, #4294967295
9001a760:	4401      	add	r1, r0
9001a762:	9814      	ldr	r0, [sp, #80]	; 0x50
9001a764:	4402      	add	r2, r0
9001a766:	e759      	b.n	9001a61c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
9001a768:	b007      	add	sp, #28
9001a76a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

9001a770 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001a770:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a774:	b085      	sub	sp, #20
9001a776:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001a77a:	9e13      	ldr	r6, [sp, #76]	; 0x4c
9001a77c:	9d16      	ldr	r5, [sp, #88]	; 0x58
9001a77e:	9203      	str	r2, [sp, #12]
9001a780:	6870      	ldr	r0, [r6, #4]
9001a782:	686f      	ldr	r7, [r5, #4]
9001a784:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
9001a788:	3704      	adds	r7, #4
9001a78a:	9101      	str	r1, [sp, #4]
9001a78c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
9001a790:	fb00 2404 	mla	r4, r0, r4, r2
9001a794:	6832      	ldr	r2, [r6, #0]
9001a796:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001a79a:	682a      	ldr	r2, [r5, #0]
9001a79c:	9202      	str	r2, [sp, #8]
9001a79e:	9a01      	ldr	r2, [sp, #4]
9001a7a0:	2a00      	cmp	r2, #0
9001a7a2:	dc03      	bgt.n	9001a7ac <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9001a7a4:	9a03      	ldr	r2, [sp, #12]
9001a7a6:	2a00      	cmp	r2, #0
9001a7a8:	f340 80cc 	ble.w	9001a944 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
9001a7ac:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001a7ae:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001a7b2:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
9001a7b6:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001a7b8:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
9001a7bc:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001a7c0:	2b00      	cmp	r3, #0
9001a7c2:	dd0d      	ble.n	9001a7e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001a7c4:	1406      	asrs	r6, r0, #16
9001a7c6:	d405      	bmi.n	9001a7d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
9001a7c8:	454e      	cmp	r6, r9
9001a7ca:	da03      	bge.n	9001a7d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
9001a7cc:	1416      	asrs	r6, r2, #16
9001a7ce:	d401      	bmi.n	9001a7d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
9001a7d0:	4546      	cmp	r6, r8
9001a7d2:	db06      	blt.n	9001a7e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001a7d4:	9e12      	ldr	r6, [sp, #72]	; 0x48
9001a7d6:	4460      	add	r0, ip
9001a7d8:	3b01      	subs	r3, #1
9001a7da:	3402      	adds	r4, #2
9001a7dc:	4432      	add	r2, r6
9001a7de:	e7ef      	b.n	9001a7c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
9001a7e0:	d00f      	beq.n	9001a802 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001a7e2:	1e5e      	subs	r6, r3, #1
9001a7e4:	fb0c 0e06 	mla	lr, ip, r6, r0
9001a7e8:	ea5f 4e2e 	movs.w	lr, lr, asr #16
9001a7ec:	d543      	bpl.n	9001a876 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
9001a7ee:	4698      	mov	r8, r3
9001a7f0:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
9001a7f4:	f1b8 0f00 	cmp.w	r8, #0
9001a7f8:	dc71      	bgt.n	9001a8de <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
9001a7fa:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001a7fe:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001a802:	9b01      	ldr	r3, [sp, #4]
9001a804:	2b00      	cmp	r3, #0
9001a806:	f340 809d 	ble.w	9001a944 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
9001a80a:	ee30 0a04 	vadd.f32	s0, s0, s8
9001a80e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001a810:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001a814:	eeb0 6a62 	vmov.f32	s12, s5
9001a818:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001a81c:	ee31 1a05 	vadd.f32	s2, s2, s10
9001a820:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001a824:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
9001a828:	eeb0 6a43 	vmov.f32	s12, s6
9001a82c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001a830:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
9001a834:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001a838:	ee61 7a27 	vmul.f32	s15, s2, s15
9001a83c:	ee77 2a62 	vsub.f32	s5, s14, s5
9001a840:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001a844:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001a848:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001a84c:	ee12 2a90 	vmov	r2, s5
9001a850:	eef0 2a47 	vmov.f32	s5, s14
9001a854:	fb92 fcf3 	sdiv	ip, r2, r3
9001a858:	ee13 2a10 	vmov	r2, s6
9001a85c:	eeb0 3a67 	vmov.f32	s6, s15
9001a860:	fb92 f3f3 	sdiv	r3, r2, r3
9001a864:	9312      	str	r3, [sp, #72]	; 0x48
9001a866:	9b01      	ldr	r3, [sp, #4]
9001a868:	9a03      	ldr	r2, [sp, #12]
9001a86a:	3b01      	subs	r3, #1
9001a86c:	9301      	str	r3, [sp, #4]
9001a86e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001a870:	bf08      	it	eq
9001a872:	4613      	moveq	r3, r2
9001a874:	e793      	b.n	9001a79e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
9001a876:	45ce      	cmp	lr, r9
9001a878:	dab9      	bge.n	9001a7ee <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001a87a:	9912      	ldr	r1, [sp, #72]	; 0x48
9001a87c:	fb01 2606 	mla	r6, r1, r6, r2
9001a880:	1436      	asrs	r6, r6, #16
9001a882:	d4b4      	bmi.n	9001a7ee <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001a884:	4546      	cmp	r6, r8
9001a886:	dab2      	bge.n	9001a7ee <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001a888:	4698      	mov	r8, r3
9001a88a:	46a2      	mov	sl, r4
9001a88c:	f1b8 0f00 	cmp.w	r8, #0
9001a890:	ddb3      	ble.n	9001a7fa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9001a892:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001a896:	1416      	asrs	r6, r2, #16
9001a898:	9902      	ldr	r1, [sp, #8]
9001a89a:	ea4f 4e20 	mov.w	lr, r0, asr #16
9001a89e:	f108 38ff 	add.w	r8, r8, #4294967295
9001a8a2:	4460      	add	r0, ip
9001a8a4:	fb09 1606 	mla	r6, r9, r6, r1
9001a8a8:	4928      	ldr	r1, [pc, #160]	; (9001a94c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
9001a8aa:	f816 e00e 	ldrb.w	lr, [r6, lr]
9001a8ae:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001a8b2:	eb07 0b0e 	add.w	fp, r7, lr
9001a8b6:	f89b 6001 	ldrb.w	r6, [fp, #1]
9001a8ba:	f89b 9002 	ldrb.w	r9, [fp, #2]
9001a8be:	00f6      	lsls	r6, r6, #3
9001a8c0:	ea01 2909 	and.w	r9, r1, r9, lsl #8
9001a8c4:	9912      	ldr	r1, [sp, #72]	; 0x48
9001a8c6:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001a8ca:	440a      	add	r2, r1
9001a8cc:	ea49 0606 	orr.w	r6, r9, r6
9001a8d0:	f817 900e 	ldrb.w	r9, [r7, lr]
9001a8d4:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
9001a8d8:	f82a 6b02 	strh.w	r6, [sl], #2
9001a8dc:	e7d6      	b.n	9001a88c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
9001a8de:	ea5f 4920 	movs.w	r9, r0, asr #16
9001a8e2:	d429      	bmi.n	9001a938 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001a8e4:	68ae      	ldr	r6, [r5, #8]
9001a8e6:	454e      	cmp	r6, r9
9001a8e8:	dd26      	ble.n	9001a938 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001a8ea:	ea5f 4b22 	movs.w	fp, r2, asr #16
9001a8ee:	d423      	bmi.n	9001a938 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001a8f0:	68e9      	ldr	r1, [r5, #12]
9001a8f2:	4559      	cmp	r1, fp
9001a8f4:	dd20      	ble.n	9001a938 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001a8f6:	fa0f fe86 	sxth.w	lr, r6
9001a8fa:	9902      	ldr	r1, [sp, #8]
9001a8fc:	fb0b 1e0e 	mla	lr, fp, lr, r1
9001a900:	f06f 0101 	mvn.w	r1, #1
9001a904:	f81e e009 	ldrb.w	lr, [lr, r9]
9001a908:	fb01 f908 	mul.w	r9, r1, r8
9001a90c:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
9001a910:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001a914:	eb07 060e 	add.w	r6, r7, lr
9001a918:	f896 b002 	ldrb.w	fp, [r6, #2]
9001a91c:	7876      	ldrb	r6, [r6, #1]
9001a91e:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
9001a922:	00f6      	lsls	r6, r6, #3
9001a924:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001a928:	ea4b 0606 	orr.w	r6, fp, r6
9001a92c:	f817 b00e 	ldrb.w	fp, [r7, lr]
9001a930:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
9001a934:	f82a 6009 	strh.w	r6, [sl, r9]
9001a938:	9912      	ldr	r1, [sp, #72]	; 0x48
9001a93a:	4460      	add	r0, ip
9001a93c:	f108 38ff 	add.w	r8, r8, #4294967295
9001a940:	440a      	add	r2, r1
9001a942:	e757      	b.n	9001a7f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001a944:	b005      	add	sp, #20
9001a946:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001a94a:	bf00      	nop
9001a94c:	fffff800 	.word	0xfffff800

9001a950 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001a950:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a954:	b087      	sub	sp, #28
9001a956:	468b      	mov	fp, r1
9001a958:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001a95c:	9815      	ldr	r0, [sp, #84]	; 0x54
9001a95e:	9204      	str	r2, [sp, #16]
9001a960:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001a964:	6841      	ldr	r1, [r0, #4]
9001a966:	9205      	str	r2, [sp, #20]
9001a968:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
9001a96c:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
9001a970:	fb01 2404 	mla	r4, r1, r4, r2
9001a974:	6802      	ldr	r2, [r0, #0]
9001a976:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001a97a:	f8dc 2000 	ldr.w	r2, [ip]
9001a97e:	9201      	str	r2, [sp, #4]
9001a980:	f8dc 2004 	ldr.w	r2, [ip, #4]
9001a984:	3204      	adds	r2, #4
9001a986:	9202      	str	r2, [sp, #8]
9001a988:	f1bb 0f00 	cmp.w	fp, #0
9001a98c:	dc03      	bgt.n	9001a996 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
9001a98e:	9a04      	ldr	r2, [sp, #16]
9001a990:	2a00      	cmp	r2, #0
9001a992:	f340 8138 	ble.w	9001ac06 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
9001a996:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001a998:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
9001a99c:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
9001a9a0:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001a9a2:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
9001a9a6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001a9aa:	2b00      	cmp	r3, #0
9001a9ac:	dd0e      	ble.n	9001a9cc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001a9ae:	1402      	asrs	r2, r0, #16
9001a9b0:	d405      	bmi.n	9001a9be <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001a9b2:	42ba      	cmp	r2, r7
9001a9b4:	da03      	bge.n	9001a9be <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001a9b6:	140a      	asrs	r2, r1, #16
9001a9b8:	d401      	bmi.n	9001a9be <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001a9ba:	42b2      	cmp	r2, r6
9001a9bc:	db07      	blt.n	9001a9ce <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001a9be:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001a9c0:	3b01      	subs	r3, #1
9001a9c2:	3402      	adds	r4, #2
9001a9c4:	4410      	add	r0, r2
9001a9c6:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001a9c8:	4411      	add	r1, r2
9001a9ca:	e7ee      	b.n	9001a9aa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
9001a9cc:	d019      	beq.n	9001aa02 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
9001a9ce:	1e5a      	subs	r2, r3, #1
9001a9d0:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9001a9d2:	fb05 0502 	mla	r5, r5, r2, r0
9001a9d6:	142d      	asrs	r5, r5, #16
9001a9d8:	d409      	bmi.n	9001a9ee <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001a9da:	42bd      	cmp	r5, r7
9001a9dc:	da07      	bge.n	9001a9ee <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001a9de:	9d14      	ldr	r5, [sp, #80]	; 0x50
9001a9e0:	fb05 1202 	mla	r2, r5, r2, r1
9001a9e4:	1412      	asrs	r2, r2, #16
9001a9e6:	d402      	bmi.n	9001a9ee <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001a9e8:	42b2      	cmp	r2, r6
9001a9ea:	f2c0 80ac 	blt.w	9001ab46 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
9001a9ee:	f04f 0e00 	mov.w	lr, #0
9001a9f2:	eb03 020e 	add.w	r2, r3, lr
9001a9f6:	2a00      	cmp	r2, #0
9001a9f8:	dc3e      	bgt.n	9001aa78 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
9001a9fa:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001a9fe:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001aa02:	f1bb 0f00 	cmp.w	fp, #0
9001aa06:	f340 80fe 	ble.w	9001ac06 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
9001aa0a:	ee30 0a04 	vadd.f32	s0, s0, s8
9001aa0e:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001aa10:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001aa14:	f1bb 0b01 	subs.w	fp, fp, #1
9001aa18:	eeb0 6a62 	vmov.f32	s12, s5
9001aa1c:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001aa20:	ee31 1a05 	vadd.f32	s2, s2, s10
9001aa24:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001aa28:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
9001aa2c:	eeb0 6a43 	vmov.f32	s12, s6
9001aa30:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001aa34:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
9001aa38:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001aa3c:	ee61 7a27 	vmul.f32	s15, s2, s15
9001aa40:	ee77 2a62 	vsub.f32	s5, s14, s5
9001aa44:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001aa48:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001aa4c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001aa50:	ee12 2a90 	vmov	r2, s5
9001aa54:	eef0 2a47 	vmov.f32	s5, s14
9001aa58:	fb92 f3f3 	sdiv	r3, r2, r3
9001aa5c:	ee13 2a10 	vmov	r2, s6
9001aa60:	9313      	str	r3, [sp, #76]	; 0x4c
9001aa62:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001aa64:	eeb0 3a67 	vmov.f32	s6, s15
9001aa68:	fb92 f3f3 	sdiv	r3, r2, r3
9001aa6c:	9a04      	ldr	r2, [sp, #16]
9001aa6e:	9314      	str	r3, [sp, #80]	; 0x50
9001aa70:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001aa72:	bf08      	it	eq
9001aa74:	4613      	moveq	r3, r2
9001aa76:	e787      	b.n	9001a988 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9001aa78:	1406      	asrs	r6, r0, #16
9001aa7a:	d45d      	bmi.n	9001ab38 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001aa7c:	f8dc 5008 	ldr.w	r5, [ip, #8]
9001aa80:	42b5      	cmp	r5, r6
9001aa82:	dd59      	ble.n	9001ab38 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001aa84:	140f      	asrs	r7, r1, #16
9001aa86:	d457      	bmi.n	9001ab38 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001aa88:	f8dc 200c 	ldr.w	r2, [ip, #12]
9001aa8c:	42ba      	cmp	r2, r7
9001aa8e:	dd53      	ble.n	9001ab38 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001aa90:	9a01      	ldr	r2, [sp, #4]
9001aa92:	b22d      	sxth	r5, r5
9001aa94:	fb07 2505 	mla	r5, r7, r5, r2
9001aa98:	5daa      	ldrb	r2, [r5, r6]
9001aa9a:	9d02      	ldr	r5, [sp, #8]
9001aa9c:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
9001aaa0:	0e2e      	lsrs	r6, r5, #24
9001aaa2:	d049      	beq.n	9001ab38 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001aaa4:	f06f 0201 	mvn.w	r2, #1
9001aaa8:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001aaac:	fb02 f20e 	mul.w	r2, r2, lr
9001aab0:	f834 8002 	ldrh.w	r8, [r4, r2]
9001aab4:	9203      	str	r2, [sp, #12]
9001aab6:	9a05      	ldr	r2, [sp, #20]
9001aab8:	ea4f 2728 	mov.w	r7, r8, asr #8
9001aabc:	4356      	muls	r6, r2
9001aabe:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001aac2:	1c72      	adds	r2, r6, #1
9001aac4:	eb02 2226 	add.w	r2, r2, r6, asr #8
9001aac8:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001aacc:	b2ed      	uxtb	r5, r5
9001aace:	1212      	asrs	r2, r2, #8
9001aad0:	fa1f f982 	uxth.w	r9, r2
9001aad4:	43d2      	mvns	r2, r2
9001aad6:	fb16 f609 	smulbb	r6, r6, r9
9001aada:	b2d2      	uxtb	r2, r2
9001aadc:	fb15 f509 	smulbb	r5, r5, r9
9001aae0:	fb07 6702 	mla	r7, r7, r2, r6
9001aae4:	ea4f 06e8 	mov.w	r6, r8, asr #3
9001aae8:	fb1a fa09 	smulbb	sl, sl, r9
9001aaec:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001aaf0:	b2bf      	uxth	r7, r7
9001aaf2:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001aaf6:	fa5f f888 	uxtb.w	r8, r8
9001aafa:	fb06 a602 	mla	r6, r6, r2, sl
9001aafe:	fb08 5502 	mla	r5, r8, r2, r5
9001ab02:	1c7a      	adds	r2, r7, #1
9001ab04:	b2b6      	uxth	r6, r6
9001ab06:	b2ad      	uxth	r5, r5
9001ab08:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001ab0c:	9a03      	ldr	r2, [sp, #12]
9001ab0e:	f105 0a01 	add.w	sl, r5, #1
9001ab12:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001ab16:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001ab1a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001ab1e:	ea4a 0707 	orr.w	r7, sl, r7
9001ab22:	f106 0a01 	add.w	sl, r6, #1
9001ab26:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001ab2a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001ab2e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001ab32:	ea47 070a 	orr.w	r7, r7, sl
9001ab36:	52a7      	strh	r7, [r4, r2]
9001ab38:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001ab3a:	f10e 3eff 	add.w	lr, lr, #4294967295
9001ab3e:	4410      	add	r0, r2
9001ab40:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001ab42:	4411      	add	r1, r2
9001ab44:	e755      	b.n	9001a9f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001ab46:	f04f 0800 	mov.w	r8, #0
9001ab4a:	eba3 0208 	sub.w	r2, r3, r8
9001ab4e:	2a00      	cmp	r2, #0
9001ab50:	f77f af53 	ble.w	9001a9fa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
9001ab54:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
9001ab58:	140a      	asrs	r2, r1, #16
9001ab5a:	9f01      	ldr	r7, [sp, #4]
9001ab5c:	1405      	asrs	r5, r0, #16
9001ab5e:	fb06 7202 	mla	r2, r6, r2, r7
9001ab62:	5d52      	ldrb	r2, [r2, r5]
9001ab64:	9d02      	ldr	r5, [sp, #8]
9001ab66:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
9001ab6a:	0e2e      	lsrs	r6, r5, #24
9001ab6c:	d044      	beq.n	9001abf8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
9001ab6e:	9a05      	ldr	r2, [sp, #20]
9001ab70:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001ab74:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
9001ab78:	4356      	muls	r6, r2
9001ab7a:	ea4f 272e 	mov.w	r7, lr, asr #8
9001ab7e:	1c72      	adds	r2, r6, #1
9001ab80:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001ab84:	eb02 2226 	add.w	r2, r2, r6, asr #8
9001ab88:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001ab8c:	b2ed      	uxtb	r5, r5
9001ab8e:	1212      	asrs	r2, r2, #8
9001ab90:	fa1f f982 	uxth.w	r9, r2
9001ab94:	43d2      	mvns	r2, r2
9001ab96:	fb16 f609 	smulbb	r6, r6, r9
9001ab9a:	b2d2      	uxtb	r2, r2
9001ab9c:	fb15 f509 	smulbb	r5, r5, r9
9001aba0:	fb07 6702 	mla	r7, r7, r2, r6
9001aba4:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001aba8:	fb1a fa09 	smulbb	sl, sl, r9
9001abac:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001abb0:	b2bf      	uxth	r7, r7
9001abb2:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001abb6:	fa5f fe8e 	uxtb.w	lr, lr
9001abba:	fb06 a602 	mla	r6, r6, r2, sl
9001abbe:	fb0e 5502 	mla	r5, lr, r2, r5
9001abc2:	1c7a      	adds	r2, r7, #1
9001abc4:	b2b6      	uxth	r6, r6
9001abc6:	b2ad      	uxth	r5, r5
9001abc8:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001abcc:	f105 0a01 	add.w	sl, r5, #1
9001abd0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001abd4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001abd8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001abdc:	ea4a 0707 	orr.w	r7, sl, r7
9001abe0:	f106 0a01 	add.w	sl, r6, #1
9001abe4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001abe8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001abec:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001abf0:	ea47 070a 	orr.w	r7, r7, sl
9001abf4:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
9001abf8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001abfa:	f108 0801 	add.w	r8, r8, #1
9001abfe:	4410      	add	r0, r2
9001ac00:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001ac02:	4411      	add	r1, r2
9001ac04:	e7a1      	b.n	9001ab4a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
9001ac06:	b007      	add	sp, #28
9001ac08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001ac0c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001ac0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001ac10:	b085      	sub	sp, #20
9001ac12:	468b      	mov	fp, r1
9001ac14:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001ac18:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001ac1a:	9203      	str	r2, [sp, #12]
9001ac1c:	6841      	ldr	r1, [r0, #4]
9001ac1e:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
9001ac22:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
9001ac26:	fb01 2404 	mla	r4, r1, r4, r2
9001ac2a:	6802      	ldr	r2, [r0, #0]
9001ac2c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001ac30:	f8de 2000 	ldr.w	r2, [lr]
9001ac34:	9200      	str	r2, [sp, #0]
9001ac36:	f8de 2004 	ldr.w	r2, [lr, #4]
9001ac3a:	3204      	adds	r2, #4
9001ac3c:	9201      	str	r2, [sp, #4]
9001ac3e:	f1bb 0f00 	cmp.w	fp, #0
9001ac42:	dc03      	bgt.n	9001ac4c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
9001ac44:	9a03      	ldr	r2, [sp, #12]
9001ac46:	2a00      	cmp	r2, #0
9001ac48:	f340 8153 	ble.w	9001aef2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
9001ac4c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001ac4e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001ac52:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001ac56:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001ac58:	f9be 600c 	ldrsh.w	r6, [lr, #12]
9001ac5c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001ac60:	2b00      	cmp	r3, #0
9001ac62:	dd0e      	ble.n	9001ac82 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001ac64:	1408      	asrs	r0, r1, #16
9001ac66:	d405      	bmi.n	9001ac74 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001ac68:	42b8      	cmp	r0, r7
9001ac6a:	da03      	bge.n	9001ac74 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001ac6c:	1410      	asrs	r0, r2, #16
9001ac6e:	d401      	bmi.n	9001ac74 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001ac70:	42b0      	cmp	r0, r6
9001ac72:	db07      	blt.n	9001ac84 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9001ac74:	9811      	ldr	r0, [sp, #68]	; 0x44
9001ac76:	3b01      	subs	r3, #1
9001ac78:	3402      	adds	r4, #2
9001ac7a:	4401      	add	r1, r0
9001ac7c:	9812      	ldr	r0, [sp, #72]	; 0x48
9001ac7e:	4402      	add	r2, r0
9001ac80:	e7ee      	b.n	9001ac60 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
9001ac82:	d017      	beq.n	9001acb4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
9001ac84:	1e58      	subs	r0, r3, #1
9001ac86:	9d11      	ldr	r5, [sp, #68]	; 0x44
9001ac88:	fb05 1500 	mla	r5, r5, r0, r1
9001ac8c:	142d      	asrs	r5, r5, #16
9001ac8e:	d409      	bmi.n	9001aca4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001ac90:	42bd      	cmp	r5, r7
9001ac92:	da07      	bge.n	9001aca4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001ac94:	9d12      	ldr	r5, [sp, #72]	; 0x48
9001ac96:	fb05 2000 	mla	r0, r5, r0, r2
9001ac9a:	1400      	asrs	r0, r0, #16
9001ac9c:	d402      	bmi.n	9001aca4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001ac9e:	42b0      	cmp	r0, r6
9001aca0:	f2c0 80bc 	blt.w	9001ae1c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
9001aca4:	2600      	movs	r6, #0
9001aca6:	1998      	adds	r0, r3, r6
9001aca8:	2800      	cmp	r0, #0
9001acaa:	dc3e      	bgt.n	9001ad2a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
9001acac:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001acb0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001acb4:	f1bb 0f00 	cmp.w	fp, #0
9001acb8:	f340 811b 	ble.w	9001aef2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
9001acbc:	ee30 0a04 	vadd.f32	s0, s0, s8
9001acc0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001acc2:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001acc6:	f1bb 0b01 	subs.w	fp, fp, #1
9001acca:	eeb0 6a62 	vmov.f32	s12, s5
9001acce:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001acd2:	ee31 1a05 	vadd.f32	s2, s2, s10
9001acd6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001acda:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
9001acde:	eeb0 6a43 	vmov.f32	s12, s6
9001ace2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001ace6:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
9001acea:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001acee:	ee61 7a27 	vmul.f32	s15, s2, s15
9001acf2:	ee77 2a62 	vsub.f32	s5, s14, s5
9001acf6:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001acfa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001acfe:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001ad02:	ee12 2a90 	vmov	r2, s5
9001ad06:	eef0 2a47 	vmov.f32	s5, s14
9001ad0a:	fb92 f3f3 	sdiv	r3, r2, r3
9001ad0e:	ee13 2a10 	vmov	r2, s6
9001ad12:	9311      	str	r3, [sp, #68]	; 0x44
9001ad14:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001ad16:	eeb0 3a67 	vmov.f32	s6, s15
9001ad1a:	fb92 f3f3 	sdiv	r3, r2, r3
9001ad1e:	9a03      	ldr	r2, [sp, #12]
9001ad20:	9312      	str	r3, [sp, #72]	; 0x48
9001ad22:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001ad24:	bf08      	it	eq
9001ad26:	4613      	moveq	r3, r2
9001ad28:	e789      	b.n	9001ac3e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
9001ad2a:	140f      	asrs	r7, r1, #16
9001ad2c:	d426      	bmi.n	9001ad7c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001ad2e:	f8de 5008 	ldr.w	r5, [lr, #8]
9001ad32:	42bd      	cmp	r5, r7
9001ad34:	dd22      	ble.n	9001ad7c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001ad36:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001ad3a:	d41f      	bmi.n	9001ad7c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001ad3c:	f8de 000c 	ldr.w	r0, [lr, #12]
9001ad40:	4560      	cmp	r0, ip
9001ad42:	dd1b      	ble.n	9001ad7c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001ad44:	9800      	ldr	r0, [sp, #0]
9001ad46:	b22d      	sxth	r5, r5
9001ad48:	fb0c 0505 	mla	r5, ip, r5, r0
9001ad4c:	5de8      	ldrb	r0, [r5, r7]
9001ad4e:	9d01      	ldr	r5, [sp, #4]
9001ad50:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
9001ad54:	0e07      	lsrs	r7, r0, #24
9001ad56:	2fff      	cmp	r7, #255	; 0xff
9001ad58:	d116      	bne.n	9001ad88 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001ad5a:	f06f 0501 	mvn.w	r5, #1
9001ad5e:	fb05 f706 	mul.w	r7, r5, r6
9001ad62:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
9001ad66:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
9001ad6a:	0945      	lsrs	r5, r0, #5
9001ad6c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
9001ad70:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001ad74:	ea4c 0505 	orr.w	r5, ip, r5
9001ad78:	4305      	orrs	r5, r0
9001ad7a:	53e5      	strh	r5, [r4, r7]
9001ad7c:	9811      	ldr	r0, [sp, #68]	; 0x44
9001ad7e:	3e01      	subs	r6, #1
9001ad80:	4401      	add	r1, r0
9001ad82:	9812      	ldr	r0, [sp, #72]	; 0x48
9001ad84:	4402      	add	r2, r0
9001ad86:	e78e      	b.n	9001aca6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
9001ad88:	b2fd      	uxtb	r5, r7
9001ad8a:	2f00      	cmp	r7, #0
9001ad8c:	d0f6      	beq.n	9001ad7c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001ad8e:	f06f 0701 	mvn.w	r7, #1
9001ad92:	fa1f f985 	uxth.w	r9, r5
9001ad96:	43ed      	mvns	r5, r5
9001ad98:	f3c0 2a07 	ubfx	sl, r0, #8, #8
9001ad9c:	4377      	muls	r7, r6
9001ad9e:	fb1a fa09 	smulbb	sl, sl, r9
9001ada2:	b2ed      	uxtb	r5, r5
9001ada4:	f834 8007 	ldrh.w	r8, [r4, r7]
9001ada8:	9702      	str	r7, [sp, #8]
9001adaa:	f3c0 4707 	ubfx	r7, r0, #16, #8
9001adae:	ea4f 2c28 	mov.w	ip, r8, asr #8
9001adb2:	fb17 f709 	smulbb	r7, r7, r9
9001adb6:	b2c0      	uxtb	r0, r0
9001adb8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001adbc:	fb10 f009 	smulbb	r0, r0, r9
9001adc0:	fb0c 7c05 	mla	ip, ip, r5, r7
9001adc4:	ea4f 07e8 	mov.w	r7, r8, asr #3
9001adc8:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001adcc:	fa1f fc8c 	uxth.w	ip, ip
9001add0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001add4:	fa5f f888 	uxtb.w	r8, r8
9001add8:	fb07 a705 	mla	r7, r7, r5, sl
9001addc:	fb08 0005 	mla	r0, r8, r5, r0
9001ade0:	f10c 0501 	add.w	r5, ip, #1
9001ade4:	b2bf      	uxth	r7, r7
9001ade6:	b280      	uxth	r0, r0
9001ade8:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001adec:	f100 0a01 	add.w	sl, r0, #1
9001adf0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001adf4:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
9001adf8:	9802      	ldr	r0, [sp, #8]
9001adfa:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001adfe:	ea4a 0c0c 	orr.w	ip, sl, ip
9001ae02:	f107 0a01 	add.w	sl, r7, #1
9001ae06:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001ae0a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001ae0e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001ae12:	ea4c 0c0a 	orr.w	ip, ip, sl
9001ae16:	f824 c000 	strh.w	ip, [r4, r0]
9001ae1a:	e7af      	b.n	9001ad7c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001ae1c:	f04f 0800 	mov.w	r8, #0
9001ae20:	eba3 0008 	sub.w	r0, r3, r8
9001ae24:	2800      	cmp	r0, #0
9001ae26:	f77f af41 	ble.w	9001acac <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001ae2a:	f9be 6008 	ldrsh.w	r6, [lr, #8]
9001ae2e:	1410      	asrs	r0, r2, #16
9001ae30:	9f00      	ldr	r7, [sp, #0]
9001ae32:	140d      	asrs	r5, r1, #16
9001ae34:	fb06 7000 	mla	r0, r6, r0, r7
9001ae38:	5d40      	ldrb	r0, [r0, r5]
9001ae3a:	9d01      	ldr	r5, [sp, #4]
9001ae3c:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
9001ae40:	0e2e      	lsrs	r6, r5, #24
9001ae42:	2eff      	cmp	r6, #255	; 0xff
9001ae44:	d112      	bne.n	9001ae6c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
9001ae46:	482c      	ldr	r0, [pc, #176]	; (9001aef8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
9001ae48:	ea00 2615 	and.w	r6, r0, r5, lsr #8
9001ae4c:	0968      	lsrs	r0, r5, #5
9001ae4e:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001ae52:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9001ae56:	4330      	orrs	r0, r6
9001ae58:	4328      	orrs	r0, r5
9001ae5a:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
9001ae5e:	9811      	ldr	r0, [sp, #68]	; 0x44
9001ae60:	f108 0801 	add.w	r8, r8, #1
9001ae64:	4401      	add	r1, r0
9001ae66:	9812      	ldr	r0, [sp, #72]	; 0x48
9001ae68:	4402      	add	r2, r0
9001ae6a:	e7d9      	b.n	9001ae20 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001ae6c:	b2f0      	uxtb	r0, r6
9001ae6e:	2e00      	cmp	r6, #0
9001ae70:	d0f5      	beq.n	9001ae5e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
9001ae72:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
9001ae76:	fa1f f980 	uxth.w	r9, r0
9001ae7a:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001ae7e:	43c0      	mvns	r0, r0
9001ae80:	ea4f 272c 	mov.w	r7, ip, asr #8
9001ae84:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001ae88:	fb16 f609 	smulbb	r6, r6, r9
9001ae8c:	b2c0      	uxtb	r0, r0
9001ae8e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001ae92:	b2ed      	uxtb	r5, r5
9001ae94:	fb1a fa09 	smulbb	sl, sl, r9
9001ae98:	fb07 6700 	mla	r7, r7, r0, r6
9001ae9c:	ea4f 06ec 	mov.w	r6, ip, asr #3
9001aea0:	fb15 f509 	smulbb	r5, r5, r9
9001aea4:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001aea8:	b2bf      	uxth	r7, r7
9001aeaa:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001aeae:	fa5f fc8c 	uxtb.w	ip, ip
9001aeb2:	fb06 a600 	mla	r6, r6, r0, sl
9001aeb6:	fb0c 5500 	mla	r5, ip, r0, r5
9001aeba:	1c78      	adds	r0, r7, #1
9001aebc:	b2b6      	uxth	r6, r6
9001aebe:	b2ad      	uxth	r5, r5
9001aec0:	eb00 2717 	add.w	r7, r0, r7, lsr #8
9001aec4:	f105 0a01 	add.w	sl, r5, #1
9001aec8:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001aecc:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001aed0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001aed4:	ea4a 0707 	orr.w	r7, sl, r7
9001aed8:	f106 0a01 	add.w	sl, r6, #1
9001aedc:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001aee0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001aee4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001aee8:	ea47 070a 	orr.w	r7, r7, sl
9001aeec:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
9001aef0:	e7b5      	b.n	9001ae5e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
9001aef2:	b005      	add	sp, #20
9001aef4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001aef8:	fffff800 	.word	0xfffff800

9001aefc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001aefc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001af00:	b087      	sub	sp, #28
9001af02:	468b      	mov	fp, r1
9001af04:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001af08:	9c15      	ldr	r4, [sp, #84]	; 0x54
9001af0a:	9204      	str	r2, [sp, #16]
9001af0c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001af10:	6861      	ldr	r1, [r4, #4]
9001af12:	9205      	str	r2, [sp, #20]
9001af14:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
9001af18:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
9001af1c:	fb01 2000 	mla	r0, r1, r0, r2
9001af20:	6822      	ldr	r2, [r4, #0]
9001af22:	eb02 0040 	add.w	r0, r2, r0, lsl #1
9001af26:	f8de 2000 	ldr.w	r2, [lr]
9001af2a:	9201      	str	r2, [sp, #4]
9001af2c:	f8de 2004 	ldr.w	r2, [lr, #4]
9001af30:	9202      	str	r2, [sp, #8]
9001af32:	f1bb 0f00 	cmp.w	fp, #0
9001af36:	dc03      	bgt.n	9001af40 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
9001af38:	9a04      	ldr	r2, [sp, #16]
9001af3a:	2a00      	cmp	r2, #0
9001af3c:	f340 8142 	ble.w	9001b1c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
9001af40:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001af42:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001af46:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001af4a:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001af4c:	f9be 600c 	ldrsh.w	r6, [lr, #12]
9001af50:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001af54:	2b00      	cmp	r3, #0
9001af56:	dd0e      	ble.n	9001af76 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
9001af58:	140c      	asrs	r4, r1, #16
9001af5a:	d405      	bmi.n	9001af68 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001af5c:	42bc      	cmp	r4, r7
9001af5e:	da03      	bge.n	9001af68 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001af60:	1414      	asrs	r4, r2, #16
9001af62:	d401      	bmi.n	9001af68 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001af64:	42b4      	cmp	r4, r6
9001af66:	db07      	blt.n	9001af78 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001af68:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9001af6a:	3b01      	subs	r3, #1
9001af6c:	3002      	adds	r0, #2
9001af6e:	4421      	add	r1, r4
9001af70:	9c14      	ldr	r4, [sp, #80]	; 0x50
9001af72:	4422      	add	r2, r4
9001af74:	e7ee      	b.n	9001af54 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
9001af76:	d019      	beq.n	9001afac <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
9001af78:	1e5c      	subs	r4, r3, #1
9001af7a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9001af7c:	fb05 1504 	mla	r5, r5, r4, r1
9001af80:	142d      	asrs	r5, r5, #16
9001af82:	d409      	bmi.n	9001af98 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
9001af84:	42bd      	cmp	r5, r7
9001af86:	da07      	bge.n	9001af98 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
9001af88:	9d14      	ldr	r5, [sp, #80]	; 0x50
9001af8a:	fb05 2404 	mla	r4, r5, r4, r2
9001af8e:	1424      	asrs	r4, r4, #16
9001af90:	d402      	bmi.n	9001af98 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
9001af92:	42b4      	cmp	r4, r6
9001af94:	f2c0 80b1 	blt.w	9001b0fa <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
9001af98:	f04f 0800 	mov.w	r8, #0
9001af9c:	eb03 0408 	add.w	r4, r3, r8
9001afa0:	2c00      	cmp	r4, #0
9001afa2:	dc3e      	bgt.n	9001b022 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
9001afa4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001afa8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001afac:	f1bb 0f00 	cmp.w	fp, #0
9001afb0:	f340 8108 	ble.w	9001b1c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
9001afb4:	ee30 0a04 	vadd.f32	s0, s0, s8
9001afb8:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001afba:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001afbe:	f1bb 0b01 	subs.w	fp, fp, #1
9001afc2:	eeb0 6a62 	vmov.f32	s12, s5
9001afc6:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001afca:	ee31 1a05 	vadd.f32	s2, s2, s10
9001afce:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001afd2:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
9001afd6:	eeb0 6a43 	vmov.f32	s12, s6
9001afda:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001afde:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
9001afe2:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001afe6:	ee61 7a27 	vmul.f32	s15, s2, s15
9001afea:	ee77 2a62 	vsub.f32	s5, s14, s5
9001afee:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001aff2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001aff6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001affa:	ee12 2a90 	vmov	r2, s5
9001affe:	eef0 2a47 	vmov.f32	s5, s14
9001b002:	fb92 f3f3 	sdiv	r3, r2, r3
9001b006:	ee13 2a10 	vmov	r2, s6
9001b00a:	9313      	str	r3, [sp, #76]	; 0x4c
9001b00c:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001b00e:	eeb0 3a67 	vmov.f32	s6, s15
9001b012:	fb92 f3f3 	sdiv	r3, r2, r3
9001b016:	9a04      	ldr	r2, [sp, #16]
9001b018:	9314      	str	r3, [sp, #80]	; 0x50
9001b01a:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001b01c:	bf08      	it	eq
9001b01e:	4613      	moveq	r3, r2
9001b020:	e787      	b.n	9001af32 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
9001b022:	140e      	asrs	r6, r1, #16
9001b024:	d462      	bmi.n	9001b0ec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001b026:	f8de 5008 	ldr.w	r5, [lr, #8]
9001b02a:	42b5      	cmp	r5, r6
9001b02c:	dd5e      	ble.n	9001b0ec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001b02e:	1417      	asrs	r7, r2, #16
9001b030:	d45c      	bmi.n	9001b0ec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001b032:	f8de 400c 	ldr.w	r4, [lr, #12]
9001b036:	42bc      	cmp	r4, r7
9001b038:	dd58      	ble.n	9001b0ec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001b03a:	b22d      	sxth	r5, r5
9001b03c:	9c02      	ldr	r4, [sp, #8]
9001b03e:	fb07 6505 	mla	r5, r7, r5, r6
9001b042:	5d66      	ldrb	r6, [r4, r5]
9001b044:	2e00      	cmp	r6, #0
9001b046:	d051      	beq.n	9001b0ec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001b048:	9c01      	ldr	r4, [sp, #4]
9001b04a:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
9001b04e:	f06f 0401 	mvn.w	r4, #1
9001b052:	fb04 f408 	mul.w	r4, r4, r8
9001b056:	ea4f 2c29 	mov.w	ip, r9, asr #8
9001b05a:	5b05      	ldrh	r5, [r0, r4]
9001b05c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001b060:	9403      	str	r4, [sp, #12]
9001b062:	9c05      	ldr	r4, [sp, #20]
9001b064:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001b068:	4366      	muls	r6, r4
9001b06a:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
9001b06e:	1c74      	adds	r4, r6, #1
9001b070:	eb04 2416 	add.w	r4, r4, r6, lsr #8
9001b074:	122e      	asrs	r6, r5, #8
9001b076:	1224      	asrs	r4, r4, #8
9001b078:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001b07c:	00ed      	lsls	r5, r5, #3
9001b07e:	b2a7      	uxth	r7, r4
9001b080:	43e4      	mvns	r4, r4
9001b082:	b2ed      	uxtb	r5, r5
9001b084:	b2e4      	uxtb	r4, r4
9001b086:	fb16 f604 	smulbb	r6, r6, r4
9001b08a:	fb15 f504 	smulbb	r5, r5, r4
9001b08e:	fb0c 6c07 	mla	ip, ip, r7, r6
9001b092:	ea4f 06e9 	mov.w	r6, r9, asr #3
9001b096:	fb1a fa04 	smulbb	sl, sl, r4
9001b09a:	ea4f 09c9 	mov.w	r9, r9, lsl #3
9001b09e:	fa1f fc8c 	uxth.w	ip, ip
9001b0a2:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001b0a6:	fa5f f989 	uxtb.w	r9, r9
9001b0aa:	fb06 a607 	mla	r6, r6, r7, sl
9001b0ae:	f10c 0401 	add.w	r4, ip, #1
9001b0b2:	fb09 5507 	mla	r5, r9, r7, r5
9001b0b6:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
9001b0ba:	9c03      	ldr	r4, [sp, #12]
9001b0bc:	b2ad      	uxth	r5, r5
9001b0be:	b2b6      	uxth	r6, r6
9001b0c0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001b0c4:	f105 0a01 	add.w	sl, r5, #1
9001b0c8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001b0cc:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001b0d0:	ea4a 0c0c 	orr.w	ip, sl, ip
9001b0d4:	f106 0a01 	add.w	sl, r6, #1
9001b0d8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001b0dc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001b0e0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001b0e4:	ea4c 0c0a 	orr.w	ip, ip, sl
9001b0e8:	f820 c004 	strh.w	ip, [r0, r4]
9001b0ec:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9001b0ee:	f108 38ff 	add.w	r8, r8, #4294967295
9001b0f2:	4421      	add	r1, r4
9001b0f4:	9c14      	ldr	r4, [sp, #80]	; 0x50
9001b0f6:	4422      	add	r2, r4
9001b0f8:	e750      	b.n	9001af9c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001b0fa:	f04f 0900 	mov.w	r9, #0
9001b0fe:	eba3 0409 	sub.w	r4, r3, r9
9001b102:	2c00      	cmp	r4, #0
9001b104:	f77f af4e 	ble.w	9001afa4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
9001b108:	f9be 6008 	ldrsh.w	r6, [lr, #8]
9001b10c:	140d      	asrs	r5, r1, #16
9001b10e:	1414      	asrs	r4, r2, #16
9001b110:	fb06 5404 	mla	r4, r6, r4, r5
9001b114:	9d02      	ldr	r5, [sp, #8]
9001b116:	5d2e      	ldrb	r6, [r5, r4]
9001b118:	2e00      	cmp	r6, #0
9001b11a:	d04c      	beq.n	9001b1b6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
9001b11c:	9d01      	ldr	r5, [sp, #4]
9001b11e:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
9001b122:	9c05      	ldr	r4, [sp, #20]
9001b124:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
9001b128:	ea4f 2c28 	mov.w	ip, r8, asr #8
9001b12c:	4366      	muls	r6, r4
9001b12e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001b132:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001b136:	1c74      	adds	r4, r6, #1
9001b138:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
9001b13c:	eb04 2416 	add.w	r4, r4, r6, lsr #8
9001b140:	122e      	asrs	r6, r5, #8
9001b142:	1224      	asrs	r4, r4, #8
9001b144:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001b148:	00ed      	lsls	r5, r5, #3
9001b14a:	b2a7      	uxth	r7, r4
9001b14c:	43e4      	mvns	r4, r4
9001b14e:	b2ed      	uxtb	r5, r5
9001b150:	b2e4      	uxtb	r4, r4
9001b152:	fb16 f604 	smulbb	r6, r6, r4
9001b156:	fb15 f504 	smulbb	r5, r5, r4
9001b15a:	fb0c 6c07 	mla	ip, ip, r7, r6
9001b15e:	ea4f 06e8 	mov.w	r6, r8, asr #3
9001b162:	fb1a fa04 	smulbb	sl, sl, r4
9001b166:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001b16a:	fa1f fc8c 	uxth.w	ip, ip
9001b16e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001b172:	fa5f f888 	uxtb.w	r8, r8
9001b176:	fb06 a607 	mla	r6, r6, r7, sl
9001b17a:	f10c 0401 	add.w	r4, ip, #1
9001b17e:	fb08 5507 	mla	r5, r8, r7, r5
9001b182:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
9001b186:	b2ad      	uxth	r5, r5
9001b188:	b2b6      	uxth	r6, r6
9001b18a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001b18e:	f105 0a01 	add.w	sl, r5, #1
9001b192:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001b196:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001b19a:	ea4a 0c0c 	orr.w	ip, sl, ip
9001b19e:	f106 0a01 	add.w	sl, r6, #1
9001b1a2:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001b1a6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001b1aa:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001b1ae:	ea4c 0c0a 	orr.w	ip, ip, sl
9001b1b2:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
9001b1b6:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9001b1b8:	f109 0901 	add.w	r9, r9, #1
9001b1bc:	4421      	add	r1, r4
9001b1be:	9c14      	ldr	r4, [sp, #80]	; 0x50
9001b1c0:	4422      	add	r2, r4
9001b1c2:	e79c      	b.n	9001b0fe <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
9001b1c4:	b007      	add	sp, #28
9001b1c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001b1ca <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001b1ca:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b1ce:	b085      	sub	sp, #20
9001b1d0:	468b      	mov	fp, r1
9001b1d2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001b1d6:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9001b1d8:	9203      	str	r2, [sp, #12]
9001b1da:	6861      	ldr	r1, [r4, #4]
9001b1dc:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
9001b1e0:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
9001b1e4:	fb01 2000 	mla	r0, r1, r0, r2
9001b1e8:	6822      	ldr	r2, [r4, #0]
9001b1ea:	eb02 0040 	add.w	r0, r2, r0, lsl #1
9001b1ee:	f8d8 2000 	ldr.w	r2, [r8]
9001b1f2:	9200      	str	r2, [sp, #0]
9001b1f4:	f8d8 2004 	ldr.w	r2, [r8, #4]
9001b1f8:	9201      	str	r2, [sp, #4]
9001b1fa:	f1bb 0f00 	cmp.w	fp, #0
9001b1fe:	dc03      	bgt.n	9001b208 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9001b200:	9a03      	ldr	r2, [sp, #12]
9001b202:	2a00      	cmp	r2, #0
9001b204:	f340 8146 	ble.w	9001b494 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
9001b208:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001b20a:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
9001b20e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001b212:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001b214:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
9001b218:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001b21c:	2b00      	cmp	r3, #0
9001b21e:	dd0e      	ble.n	9001b23e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
9001b220:	140c      	asrs	r4, r1, #16
9001b222:	d405      	bmi.n	9001b230 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001b224:	42bc      	cmp	r4, r7
9001b226:	da03      	bge.n	9001b230 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001b228:	1414      	asrs	r4, r2, #16
9001b22a:	d401      	bmi.n	9001b230 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001b22c:	42b4      	cmp	r4, r6
9001b22e:	db07      	blt.n	9001b240 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001b230:	9c11      	ldr	r4, [sp, #68]	; 0x44
9001b232:	3b01      	subs	r3, #1
9001b234:	3002      	adds	r0, #2
9001b236:	4421      	add	r1, r4
9001b238:	9c12      	ldr	r4, [sp, #72]	; 0x48
9001b23a:	4422      	add	r2, r4
9001b23c:	e7ee      	b.n	9001b21c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9001b23e:	d017      	beq.n	9001b270 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
9001b240:	1e5c      	subs	r4, r3, #1
9001b242:	9d11      	ldr	r5, [sp, #68]	; 0x44
9001b244:	fb05 1504 	mla	r5, r5, r4, r1
9001b248:	142d      	asrs	r5, r5, #16
9001b24a:	d409      	bmi.n	9001b260 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001b24c:	42bd      	cmp	r5, r7
9001b24e:	da07      	bge.n	9001b260 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001b250:	9d12      	ldr	r5, [sp, #72]	; 0x48
9001b252:	fb05 2404 	mla	r4, r5, r4, r2
9001b256:	1424      	asrs	r4, r4, #16
9001b258:	d402      	bmi.n	9001b260 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001b25a:	42b4      	cmp	r4, r6
9001b25c:	f2c0 80b3 	blt.w	9001b3c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
9001b260:	2600      	movs	r6, #0
9001b262:	199c      	adds	r4, r3, r6
9001b264:	2c00      	cmp	r4, #0
9001b266:	dc3e      	bgt.n	9001b2e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
9001b268:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001b26c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001b270:	f1bb 0f00 	cmp.w	fp, #0
9001b274:	f340 810e 	ble.w	9001b494 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
9001b278:	ee30 0a04 	vadd.f32	s0, s0, s8
9001b27c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001b27e:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001b282:	f1bb 0b01 	subs.w	fp, fp, #1
9001b286:	eeb0 6a62 	vmov.f32	s12, s5
9001b28a:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001b28e:	ee31 1a05 	vadd.f32	s2, s2, s10
9001b292:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001b296:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
9001b29a:	eeb0 6a43 	vmov.f32	s12, s6
9001b29e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001b2a2:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
9001b2a6:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001b2aa:	ee61 7a27 	vmul.f32	s15, s2, s15
9001b2ae:	ee77 2a62 	vsub.f32	s5, s14, s5
9001b2b2:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001b2b6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001b2ba:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001b2be:	ee12 2a90 	vmov	r2, s5
9001b2c2:	eef0 2a47 	vmov.f32	s5, s14
9001b2c6:	fb92 f3f3 	sdiv	r3, r2, r3
9001b2ca:	ee13 2a10 	vmov	r2, s6
9001b2ce:	9311      	str	r3, [sp, #68]	; 0x44
9001b2d0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001b2d2:	eeb0 3a67 	vmov.f32	s6, s15
9001b2d6:	fb92 f3f3 	sdiv	r3, r2, r3
9001b2da:	9a03      	ldr	r2, [sp, #12]
9001b2dc:	9312      	str	r3, [sp, #72]	; 0x48
9001b2de:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001b2e0:	bf08      	it	eq
9001b2e2:	4613      	moveq	r3, r2
9001b2e4:	e789      	b.n	9001b1fa <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
9001b2e6:	140f      	asrs	r7, r1, #16
9001b2e8:	d418      	bmi.n	9001b31c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001b2ea:	f8d8 5008 	ldr.w	r5, [r8, #8]
9001b2ee:	42bd      	cmp	r5, r7
9001b2f0:	dd14      	ble.n	9001b31c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001b2f2:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001b2f6:	d411      	bmi.n	9001b31c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001b2f8:	f8d8 400c 	ldr.w	r4, [r8, #12]
9001b2fc:	4564      	cmp	r4, ip
9001b2fe:	dd0d      	ble.n	9001b31c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001b300:	b22d      	sxth	r5, r5
9001b302:	9c01      	ldr	r4, [sp, #4]
9001b304:	fb0c 7505 	mla	r5, ip, r5, r7
9001b308:	5d64      	ldrb	r4, [r4, r5]
9001b30a:	2cff      	cmp	r4, #255	; 0xff
9001b30c:	d10c      	bne.n	9001b328 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
9001b30e:	9c00      	ldr	r4, [sp, #0]
9001b310:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
9001b314:	f06f 0401 	mvn.w	r4, #1
9001b318:	4374      	muls	r4, r6
9001b31a:	5305      	strh	r5, [r0, r4]
9001b31c:	9c11      	ldr	r4, [sp, #68]	; 0x44
9001b31e:	3e01      	subs	r6, #1
9001b320:	4421      	add	r1, r4
9001b322:	9c12      	ldr	r4, [sp, #72]	; 0x48
9001b324:	4422      	add	r2, r4
9001b326:	e79c      	b.n	9001b262 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001b328:	2c00      	cmp	r4, #0
9001b32a:	d0f7      	beq.n	9001b31c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001b32c:	9f00      	ldr	r7, [sp, #0]
9001b32e:	fa1f fc84 	uxth.w	ip, r4
9001b332:	43e4      	mvns	r4, r4
9001b334:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
9001b338:	f06f 0501 	mvn.w	r5, #1
9001b33c:	b2e4      	uxtb	r4, r4
9001b33e:	4375      	muls	r5, r6
9001b340:	ea4f 2e29 	mov.w	lr, r9, asr #8
9001b344:	9502      	str	r5, [sp, #8]
9001b346:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
9001b34a:	5b45      	ldrh	r5, [r0, r5]
9001b34c:	122f      	asrs	r7, r5, #8
9001b34e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001b352:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001b356:	00ed      	lsls	r5, r5, #3
9001b358:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
9001b35c:	fb17 f704 	smulbb	r7, r7, r4
9001b360:	b2ed      	uxtb	r5, r5
9001b362:	fb1a fa04 	smulbb	sl, sl, r4
9001b366:	fb0e 7e0c 	mla	lr, lr, ip, r7
9001b36a:	ea4f 07e9 	mov.w	r7, r9, asr #3
9001b36e:	fb15 f504 	smulbb	r5, r5, r4
9001b372:	ea4f 09c9 	mov.w	r9, r9, lsl #3
9001b376:	fa1f fe8e 	uxth.w	lr, lr
9001b37a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001b37e:	fa5f f989 	uxtb.w	r9, r9
9001b382:	fb07 a70c 	mla	r7, r7, ip, sl
9001b386:	f10e 0401 	add.w	r4, lr, #1
9001b38a:	fb09 550c 	mla	r5, r9, ip, r5
9001b38e:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
9001b392:	9c02      	ldr	r4, [sp, #8]
9001b394:	b2ad      	uxth	r5, r5
9001b396:	b2bf      	uxth	r7, r7
9001b398:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
9001b39c:	f105 0a01 	add.w	sl, r5, #1
9001b3a0:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001b3a4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001b3a8:	ea4a 0e0e 	orr.w	lr, sl, lr
9001b3ac:	f107 0a01 	add.w	sl, r7, #1
9001b3b0:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001b3b4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001b3b8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001b3bc:	ea4e 0e0a 	orr.w	lr, lr, sl
9001b3c0:	f820 e004 	strh.w	lr, [r0, r4]
9001b3c4:	e7aa      	b.n	9001b31c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001b3c6:	f04f 0900 	mov.w	r9, #0
9001b3ca:	eba3 0409 	sub.w	r4, r3, r9
9001b3ce:	2c00      	cmp	r4, #0
9001b3d0:	f77f af4a 	ble.w	9001b268 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001b3d4:	1414      	asrs	r4, r2, #16
9001b3d6:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
9001b3da:	140d      	asrs	r5, r1, #16
9001b3dc:	fb06 5504 	mla	r5, r6, r4, r5
9001b3e0:	9c01      	ldr	r4, [sp, #4]
9001b3e2:	5d64      	ldrb	r4, [r4, r5]
9001b3e4:	2cff      	cmp	r4, #255	; 0xff
9001b3e6:	d10b      	bne.n	9001b400 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
9001b3e8:	9c00      	ldr	r4, [sp, #0]
9001b3ea:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
9001b3ee:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
9001b3f2:	9c11      	ldr	r4, [sp, #68]	; 0x44
9001b3f4:	f109 0901 	add.w	r9, r9, #1
9001b3f8:	4421      	add	r1, r4
9001b3fa:	9c12      	ldr	r4, [sp, #72]	; 0x48
9001b3fc:	4422      	add	r2, r4
9001b3fe:	e7e4      	b.n	9001b3ca <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
9001b400:	2c00      	cmp	r4, #0
9001b402:	d0f6      	beq.n	9001b3f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
9001b404:	9e00      	ldr	r6, [sp, #0]
9001b406:	b2a7      	uxth	r7, r4
9001b408:	43e4      	mvns	r4, r4
9001b40a:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
9001b40e:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
9001b412:	b2e4      	uxtb	r4, r4
9001b414:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001b418:	122e      	asrs	r6, r5, #8
9001b41a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001b41e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001b422:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001b426:	00ed      	lsls	r5, r5, #3
9001b428:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
9001b42c:	fb16 f604 	smulbb	r6, r6, r4
9001b430:	b2ed      	uxtb	r5, r5
9001b432:	fb1a fa04 	smulbb	sl, sl, r4
9001b436:	fb0c 6c07 	mla	ip, ip, r7, r6
9001b43a:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001b43e:	fb15 f504 	smulbb	r5, r5, r4
9001b442:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001b446:	fa1f fc8c 	uxth.w	ip, ip
9001b44a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001b44e:	fa5f fe8e 	uxtb.w	lr, lr
9001b452:	fb06 a607 	mla	r6, r6, r7, sl
9001b456:	f10c 0401 	add.w	r4, ip, #1
9001b45a:	fb0e 5507 	mla	r5, lr, r7, r5
9001b45e:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
9001b462:	b2ad      	uxth	r5, r5
9001b464:	b2b6      	uxth	r6, r6
9001b466:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001b46a:	f105 0a01 	add.w	sl, r5, #1
9001b46e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001b472:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001b476:	ea4a 0c0c 	orr.w	ip, sl, ip
9001b47a:	f106 0a01 	add.w	sl, r6, #1
9001b47e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001b482:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001b486:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001b48a:	ea4c 0c0a 	orr.w	ip, ip, sl
9001b48e:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
9001b492:	e7ae      	b.n	9001b3f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
9001b494:	b005      	add	sp, #20
9001b496:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001b49a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001b49a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b49e:	b085      	sub	sp, #20
9001b4a0:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001b4a2:	9203      	str	r2, [sp, #12]
9001b4a4:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
9001b4a8:	9100      	str	r1, [sp, #0]
9001b4aa:	9201      	str	r2, [sp, #4]
9001b4ac:	6841      	ldr	r1, [r0, #4]
9001b4ae:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
9001b4b2:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
9001b4b6:	fb01 2404 	mla	r4, r1, r4, r2
9001b4ba:	6802      	ldr	r2, [r0, #0]
9001b4bc:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001b4c0:	f8de 2000 	ldr.w	r2, [lr]
9001b4c4:	9202      	str	r2, [sp, #8]
9001b4c6:	9a01      	ldr	r2, [sp, #4]
9001b4c8:	43d6      	mvns	r6, r2
9001b4ca:	b2f6      	uxtb	r6, r6
9001b4cc:	9a00      	ldr	r2, [sp, #0]
9001b4ce:	2a00      	cmp	r2, #0
9001b4d0:	dc03      	bgt.n	9001b4da <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
9001b4d2:	9a03      	ldr	r2, [sp, #12]
9001b4d4:	2a00      	cmp	r2, #0
9001b4d6:	f340 8124 	ble.w	9001b722 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
9001b4da:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001b4dc:	f9be c008 	ldrsh.w	ip, [lr, #8]
9001b4e0:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001b4e4:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001b4e6:	f9be 700c 	ldrsh.w	r7, [lr, #12]
9001b4ea:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001b4ee:	2b00      	cmp	r3, #0
9001b4f0:	dd0e      	ble.n	9001b510 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001b4f2:	1408      	asrs	r0, r1, #16
9001b4f4:	d405      	bmi.n	9001b502 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001b4f6:	4560      	cmp	r0, ip
9001b4f8:	da03      	bge.n	9001b502 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001b4fa:	1410      	asrs	r0, r2, #16
9001b4fc:	d401      	bmi.n	9001b502 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001b4fe:	42b8      	cmp	r0, r7
9001b500:	db07      	blt.n	9001b512 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9001b502:	9811      	ldr	r0, [sp, #68]	; 0x44
9001b504:	3b01      	subs	r3, #1
9001b506:	3402      	adds	r4, #2
9001b508:	4401      	add	r1, r0
9001b50a:	9812      	ldr	r0, [sp, #72]	; 0x48
9001b50c:	4402      	add	r2, r0
9001b50e:	e7ee      	b.n	9001b4ee <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
9001b510:	d06e      	beq.n	9001b5f0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
9001b512:	1e58      	subs	r0, r3, #1
9001b514:	9d11      	ldr	r5, [sp, #68]	; 0x44
9001b516:	fb05 1500 	mla	r5, r5, r0, r1
9001b51a:	142d      	asrs	r5, r5, #16
9001b51c:	d45c      	bmi.n	9001b5d8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001b51e:	4565      	cmp	r5, ip
9001b520:	da5a      	bge.n	9001b5d8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001b522:	9d12      	ldr	r5, [sp, #72]	; 0x48
9001b524:	fb05 2000 	mla	r0, r5, r0, r2
9001b528:	1400      	asrs	r0, r0, #16
9001b52a:	d455      	bmi.n	9001b5d8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001b52c:	42b8      	cmp	r0, r7
9001b52e:	da53      	bge.n	9001b5d8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001b530:	4699      	mov	r9, r3
9001b532:	46a2      	mov	sl, r4
9001b534:	f8bd b004 	ldrh.w	fp, [sp, #4]
9001b538:	f1b9 0f00 	cmp.w	r9, #0
9001b53c:	dd54      	ble.n	9001b5e8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001b53e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001b542:	140d      	asrs	r5, r1, #16
9001b544:	1410      	asrs	r0, r2, #16
9001b546:	f109 39ff 	add.w	r9, r9, #4294967295
9001b54a:	fb07 5000 	mla	r0, r7, r0, r5
9001b54e:	9d02      	ldr	r5, [sp, #8]
9001b550:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
9001b554:	f8ba 5000 	ldrh.w	r5, [sl]
9001b558:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001b55c:	122f      	asrs	r7, r5, #8
9001b55e:	ea4f 08e5 	mov.w	r8, r5, asr #3
9001b562:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001b566:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001b56a:	00ed      	lsls	r5, r5, #3
9001b56c:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
9001b570:	fb17 f706 	smulbb	r7, r7, r6
9001b574:	b2ed      	uxtb	r5, r5
9001b576:	fb18 f806 	smulbb	r8, r8, r6
9001b57a:	fb0c 7c0b 	mla	ip, ip, fp, r7
9001b57e:	10c7      	asrs	r7, r0, #3
9001b580:	fb15 f506 	smulbb	r5, r5, r6
9001b584:	00c0      	lsls	r0, r0, #3
9001b586:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001b58a:	fa1f fc8c 	uxth.w	ip, ip
9001b58e:	b2c0      	uxtb	r0, r0
9001b590:	fb07 870b 	mla	r7, r7, fp, r8
9001b594:	fb00 500b 	mla	r0, r0, fp, r5
9001b598:	f10c 0501 	add.w	r5, ip, #1
9001b59c:	b2bf      	uxth	r7, r7
9001b59e:	b280      	uxth	r0, r0
9001b5a0:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001b5a4:	f107 0801 	add.w	r8, r7, #1
9001b5a8:	1c45      	adds	r5, r0, #1
9001b5aa:	eb08 2817 	add.w	r8, r8, r7, lsr #8
9001b5ae:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001b5b2:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001b5b6:	9811      	ldr	r0, [sp, #68]	; 0x44
9001b5b8:	ea4f 1858 	mov.w	r8, r8, lsr #5
9001b5bc:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001b5c0:	4401      	add	r1, r0
9001b5c2:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
9001b5c6:	9812      	ldr	r0, [sp, #72]	; 0x48
9001b5c8:	ea45 0c0c 	orr.w	ip, r5, ip
9001b5cc:	4402      	add	r2, r0
9001b5ce:	ea4c 0c08 	orr.w	ip, ip, r8
9001b5d2:	f82a cb02 	strh.w	ip, [sl], #2
9001b5d6:	e7af      	b.n	9001b538 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001b5d8:	f04f 0800 	mov.w	r8, #0
9001b5dc:	f8bd a004 	ldrh.w	sl, [sp, #4]
9001b5e0:	eb03 0008 	add.w	r0, r3, r8
9001b5e4:	2800      	cmp	r0, #0
9001b5e6:	dc41      	bgt.n	9001b66c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
9001b5e8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001b5ec:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001b5f0:	9b00      	ldr	r3, [sp, #0]
9001b5f2:	2b00      	cmp	r3, #0
9001b5f4:	f340 8095 	ble.w	9001b722 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
9001b5f8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
9001b5fc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001b5fe:	ee30 0a04 	vadd.f32	s0, s0, s8
9001b602:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001b606:	eef0 6a62 	vmov.f32	s13, s5
9001b60a:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001b60e:	ee31 1a05 	vadd.f32	s2, s2, s10
9001b612:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001b616:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
9001b61a:	eef0 6a43 	vmov.f32	s13, s6
9001b61e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001b622:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
9001b626:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001b62a:	ee61 7a27 	vmul.f32	s15, s2, s15
9001b62e:	ee77 2a62 	vsub.f32	s5, s14, s5
9001b632:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001b636:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001b63a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001b63e:	ee12 2a90 	vmov	r2, s5
9001b642:	eef0 2a47 	vmov.f32	s5, s14
9001b646:	fb92 f3f3 	sdiv	r3, r2, r3
9001b64a:	ee13 2a10 	vmov	r2, s6
9001b64e:	9311      	str	r3, [sp, #68]	; 0x44
9001b650:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001b652:	eeb0 3a67 	vmov.f32	s6, s15
9001b656:	fb92 f3f3 	sdiv	r3, r2, r3
9001b65a:	9312      	str	r3, [sp, #72]	; 0x48
9001b65c:	9b00      	ldr	r3, [sp, #0]
9001b65e:	9a03      	ldr	r2, [sp, #12]
9001b660:	3b01      	subs	r3, #1
9001b662:	9300      	str	r3, [sp, #0]
9001b664:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001b666:	bf08      	it	eq
9001b668:	4613      	moveq	r3, r2
9001b66a:	e72f      	b.n	9001b4cc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
9001b66c:	140f      	asrs	r7, r1, #16
9001b66e:	d451      	bmi.n	9001b714 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001b670:	f8de 5008 	ldr.w	r5, [lr, #8]
9001b674:	42bd      	cmp	r5, r7
9001b676:	dd4d      	ble.n	9001b714 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001b678:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001b67c:	d44a      	bmi.n	9001b714 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001b67e:	f8de 000c 	ldr.w	r0, [lr, #12]
9001b682:	4560      	cmp	r0, ip
9001b684:	dd46      	ble.n	9001b714 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001b686:	b22d      	sxth	r5, r5
9001b688:	9802      	ldr	r0, [sp, #8]
9001b68a:	fb0c 7505 	mla	r5, ip, r5, r7
9001b68e:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
9001b692:	f06f 0501 	mvn.w	r5, #1
9001b696:	fb05 fb08 	mul.w	fp, r5, r8
9001b69a:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001b69e:	f834 500b 	ldrh.w	r5, [r4, fp]
9001b6a2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001b6a6:	122f      	asrs	r7, r5, #8
9001b6a8:	ea4f 09e5 	mov.w	r9, r5, asr #3
9001b6ac:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001b6b0:	00ed      	lsls	r5, r5, #3
9001b6b2:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
9001b6b6:	fb17 f706 	smulbb	r7, r7, r6
9001b6ba:	b2ed      	uxtb	r5, r5
9001b6bc:	fb19 f906 	smulbb	r9, r9, r6
9001b6c0:	fb0c 7c0a 	mla	ip, ip, sl, r7
9001b6c4:	10c7      	asrs	r7, r0, #3
9001b6c6:	fb15 f506 	smulbb	r5, r5, r6
9001b6ca:	00c0      	lsls	r0, r0, #3
9001b6cc:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001b6d0:	fa1f fc8c 	uxth.w	ip, ip
9001b6d4:	b2c0      	uxtb	r0, r0
9001b6d6:	fb07 970a 	mla	r7, r7, sl, r9
9001b6da:	fb00 500a 	mla	r0, r0, sl, r5
9001b6de:	f10c 0501 	add.w	r5, ip, #1
9001b6e2:	b2bf      	uxth	r7, r7
9001b6e4:	b280      	uxth	r0, r0
9001b6e6:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001b6ea:	f107 0901 	add.w	r9, r7, #1
9001b6ee:	1c45      	adds	r5, r0, #1
9001b6f0:	eb09 2917 	add.w	r9, r9, r7, lsr #8
9001b6f4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001b6f8:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001b6fc:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001b700:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001b704:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
9001b708:	ea45 0c0c 	orr.w	ip, r5, ip
9001b70c:	ea4c 0c09 	orr.w	ip, ip, r9
9001b710:	f824 c00b 	strh.w	ip, [r4, fp]
9001b714:	9811      	ldr	r0, [sp, #68]	; 0x44
9001b716:	f108 38ff 	add.w	r8, r8, #4294967295
9001b71a:	4401      	add	r1, r0
9001b71c:	9812      	ldr	r0, [sp, #72]	; 0x48
9001b71e:	4402      	add	r2, r0
9001b720:	e75e      	b.n	9001b5e0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
9001b722:	b005      	add	sp, #20
9001b724:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001b728 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001b728:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b72c:	b085      	sub	sp, #20
9001b72e:	4693      	mov	fp, r2
9001b730:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001b734:	9e13      	ldr	r6, [sp, #76]	; 0x4c
9001b736:	9d16      	ldr	r5, [sp, #88]	; 0x58
9001b738:	6870      	ldr	r0, [r6, #4]
9001b73a:	9101      	str	r1, [sp, #4]
9001b73c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
9001b740:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
9001b744:	fb00 2404 	mla	r4, r0, r4, r2
9001b748:	6832      	ldr	r2, [r6, #0]
9001b74a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001b74e:	682a      	ldr	r2, [r5, #0]
9001b750:	9202      	str	r2, [sp, #8]
9001b752:	9a01      	ldr	r2, [sp, #4]
9001b754:	2a00      	cmp	r2, #0
9001b756:	dc03      	bgt.n	9001b760 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9001b758:	f1bb 0f00 	cmp.w	fp, #0
9001b75c:	f340 809a 	ble.w	9001b894 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
9001b760:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001b762:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001b766:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
9001b76a:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001b76c:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
9001b770:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001b774:	2b00      	cmp	r3, #0
9001b776:	dd0c      	ble.n	9001b792 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
9001b778:	1406      	asrs	r6, r0, #16
9001b77a:	d405      	bmi.n	9001b788 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001b77c:	454e      	cmp	r6, r9
9001b77e:	da03      	bge.n	9001b788 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001b780:	1416      	asrs	r6, r2, #16
9001b782:	d401      	bmi.n	9001b788 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001b784:	4546      	cmp	r6, r8
9001b786:	db05      	blt.n	9001b794 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001b788:	4470      	add	r0, lr
9001b78a:	4462      	add	r2, ip
9001b78c:	3b01      	subs	r3, #1
9001b78e:	3402      	adds	r4, #2
9001b790:	e7f0      	b.n	9001b774 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
9001b792:	d00f      	beq.n	9001b7b4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
9001b794:	1e5e      	subs	r6, r3, #1
9001b796:	fb0e 0706 	mla	r7, lr, r6, r0
9001b79a:	143f      	asrs	r7, r7, #16
9001b79c:	d541      	bpl.n	9001b822 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
9001b79e:	eb04 0643 	add.w	r6, r4, r3, lsl #1
9001b7a2:	4698      	mov	r8, r3
9001b7a4:	9603      	str	r6, [sp, #12]
9001b7a6:	f1b8 0f00 	cmp.w	r8, #0
9001b7aa:	dc56      	bgt.n	9001b85a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
9001b7ac:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001b7b0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001b7b4:	9b01      	ldr	r3, [sp, #4]
9001b7b6:	2b00      	cmp	r3, #0
9001b7b8:	dd6c      	ble.n	9001b894 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
9001b7ba:	ee30 0a04 	vadd.f32	s0, s0, s8
9001b7be:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001b7c0:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001b7c4:	eeb0 6a62 	vmov.f32	s12, s5
9001b7c8:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001b7cc:	ee31 1a05 	vadd.f32	s2, s2, s10
9001b7d0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001b7d4:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
9001b7d8:	eeb0 6a43 	vmov.f32	s12, s6
9001b7dc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001b7e0:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
9001b7e4:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001b7e8:	ee61 7a27 	vmul.f32	s15, s2, s15
9001b7ec:	ee77 2a62 	vsub.f32	s5, s14, s5
9001b7f0:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001b7f4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001b7f8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001b7fc:	ee12 2a90 	vmov	r2, s5
9001b800:	eef0 2a47 	vmov.f32	s5, s14
9001b804:	fb92 fef3 	sdiv	lr, r2, r3
9001b808:	ee13 2a10 	vmov	r2, s6
9001b80c:	eeb0 3a67 	vmov.f32	s6, s15
9001b810:	fb92 fcf3 	sdiv	ip, r2, r3
9001b814:	9b01      	ldr	r3, [sp, #4]
9001b816:	3b01      	subs	r3, #1
9001b818:	9301      	str	r3, [sp, #4]
9001b81a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001b81c:	bf08      	it	eq
9001b81e:	465b      	moveq	r3, fp
9001b820:	e797      	b.n	9001b752 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
9001b822:	454f      	cmp	r7, r9
9001b824:	dabb      	bge.n	9001b79e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001b826:	fb0c 2606 	mla	r6, ip, r6, r2
9001b82a:	1436      	asrs	r6, r6, #16
9001b82c:	d4b7      	bmi.n	9001b79e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001b82e:	4546      	cmp	r6, r8
9001b830:	dab5      	bge.n	9001b79e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001b832:	461e      	mov	r6, r3
9001b834:	46a0      	mov	r8, r4
9001b836:	2e00      	cmp	r6, #0
9001b838:	ddb8      	ble.n	9001b7ac <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001b83a:	1417      	asrs	r7, r2, #16
9001b83c:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
9001b840:	ea4f 4920 	mov.w	r9, r0, asr #16
9001b844:	9902      	ldr	r1, [sp, #8]
9001b846:	4470      	add	r0, lr
9001b848:	4462      	add	r2, ip
9001b84a:	fb0a 9707 	mla	r7, sl, r7, r9
9001b84e:	3e01      	subs	r6, #1
9001b850:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
9001b854:	f828 7b02 	strh.w	r7, [r8], #2
9001b858:	e7ed      	b.n	9001b836 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
9001b85a:	ea5f 4920 	movs.w	r9, r0, asr #16
9001b85e:	d414      	bmi.n	9001b88a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001b860:	68ae      	ldr	r6, [r5, #8]
9001b862:	454e      	cmp	r6, r9
9001b864:	dd11      	ble.n	9001b88a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001b866:	ea5f 4a22 	movs.w	sl, r2, asr #16
9001b86a:	d40e      	bmi.n	9001b88a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001b86c:	68ef      	ldr	r7, [r5, #12]
9001b86e:	4557      	cmp	r7, sl
9001b870:	dd0b      	ble.n	9001b88a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001b872:	b236      	sxth	r6, r6
9001b874:	f06f 0101 	mvn.w	r1, #1
9001b878:	9f02      	ldr	r7, [sp, #8]
9001b87a:	fb0a 9606 	mla	r6, sl, r6, r9
9001b87e:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
9001b882:	fb01 f608 	mul.w	r6, r1, r8
9001b886:	9903      	ldr	r1, [sp, #12]
9001b888:	538f      	strh	r7, [r1, r6]
9001b88a:	4470      	add	r0, lr
9001b88c:	4462      	add	r2, ip
9001b88e:	f108 38ff 	add.w	r8, r8, #4294967295
9001b892:	e788      	b.n	9001b7a6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001b894:	b005      	add	sp, #20
9001b896:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001b89a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001b89a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b89e:	b087      	sub	sp, #28
9001b8a0:	468b      	mov	fp, r1
9001b8a2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001b8a6:	9815      	ldr	r0, [sp, #84]	; 0x54
9001b8a8:	9203      	str	r2, [sp, #12]
9001b8aa:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001b8ae:	6841      	ldr	r1, [r0, #4]
9001b8b0:	9204      	str	r2, [sp, #16]
9001b8b2:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
9001b8b6:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
9001b8ba:	fb01 2505 	mla	r5, r1, r5, r2
9001b8be:	6802      	ldr	r2, [r0, #0]
9001b8c0:	eb02 0545 	add.w	r5, r2, r5, lsl #1
9001b8c4:	f8d9 2000 	ldr.w	r2, [r9]
9001b8c8:	9201      	str	r2, [sp, #4]
9001b8ca:	f1bb 0f00 	cmp.w	fp, #0
9001b8ce:	dc03      	bgt.n	9001b8d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9001b8d0:	9a03      	ldr	r2, [sp, #12]
9001b8d2:	2a00      	cmp	r2, #0
9001b8d4:	f340 8158 	ble.w	9001bb88 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
9001b8d8:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001b8da:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
9001b8de:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
9001b8e2:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001b8e4:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
9001b8e8:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001b8ec:	2b00      	cmp	r3, #0
9001b8ee:	dd0e      	ble.n	9001b90e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
9001b8f0:	1402      	asrs	r2, r0, #16
9001b8f2:	d405      	bmi.n	9001b900 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001b8f4:	42ba      	cmp	r2, r7
9001b8f6:	da03      	bge.n	9001b900 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001b8f8:	140a      	asrs	r2, r1, #16
9001b8fa:	d401      	bmi.n	9001b900 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001b8fc:	42b2      	cmp	r2, r6
9001b8fe:	db07      	blt.n	9001b910 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001b900:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001b902:	3b01      	subs	r3, #1
9001b904:	3502      	adds	r5, #2
9001b906:	4410      	add	r0, r2
9001b908:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001b90a:	4411      	add	r1, r2
9001b90c:	e7ee      	b.n	9001b8ec <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9001b90e:	d017      	beq.n	9001b940 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
9001b910:	1e5a      	subs	r2, r3, #1
9001b912:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9001b914:	fb04 0402 	mla	r4, r4, r2, r0
9001b918:	1424      	asrs	r4, r4, #16
9001b91a:	d409      	bmi.n	9001b930 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001b91c:	42bc      	cmp	r4, r7
9001b91e:	da07      	bge.n	9001b930 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001b920:	9c14      	ldr	r4, [sp, #80]	; 0x50
9001b922:	fb04 1202 	mla	r2, r4, r2, r1
9001b926:	1412      	asrs	r2, r2, #16
9001b928:	d402      	bmi.n	9001b930 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001b92a:	42b2      	cmp	r2, r6
9001b92c:	f2c0 80bf 	blt.w	9001baae <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001b930:	2700      	movs	r7, #0
9001b932:	19da      	adds	r2, r3, r7
9001b934:	2a00      	cmp	r2, #0
9001b936:	dc3e      	bgt.n	9001b9b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
9001b938:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001b93c:	eb05 0543 	add.w	r5, r5, r3, lsl #1
9001b940:	f1bb 0f00 	cmp.w	fp, #0
9001b944:	f340 8120 	ble.w	9001bb88 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
9001b948:	ee30 0a04 	vadd.f32	s0, s0, s8
9001b94c:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001b94e:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001b952:	f1bb 0b01 	subs.w	fp, fp, #1
9001b956:	eeb0 6a62 	vmov.f32	s12, s5
9001b95a:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001b95e:	ee31 1a05 	vadd.f32	s2, s2, s10
9001b962:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001b966:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
9001b96a:	eeb0 6a43 	vmov.f32	s12, s6
9001b96e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001b972:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
9001b976:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001b97a:	ee61 7a27 	vmul.f32	s15, s2, s15
9001b97e:	ee77 2a62 	vsub.f32	s5, s14, s5
9001b982:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001b986:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001b98a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001b98e:	ee12 2a90 	vmov	r2, s5
9001b992:	eef0 2a47 	vmov.f32	s5, s14
9001b996:	fb92 f3f3 	sdiv	r3, r2, r3
9001b99a:	ee13 2a10 	vmov	r2, s6
9001b99e:	9313      	str	r3, [sp, #76]	; 0x4c
9001b9a0:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001b9a2:	eeb0 3a67 	vmov.f32	s6, s15
9001b9a6:	fb92 f3f3 	sdiv	r3, r2, r3
9001b9aa:	9a03      	ldr	r2, [sp, #12]
9001b9ac:	9314      	str	r3, [sp, #80]	; 0x50
9001b9ae:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001b9b0:	bf08      	it	eq
9001b9b2:	4613      	moveq	r3, r2
9001b9b4:	e789      	b.n	9001b8ca <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
9001b9b6:	1406      	asrs	r6, r0, #16
9001b9b8:	d42d      	bmi.n	9001ba16 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001b9ba:	f8d9 4008 	ldr.w	r4, [r9, #8]
9001b9be:	42b4      	cmp	r4, r6
9001b9c0:	dd29      	ble.n	9001ba16 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001b9c2:	ea5f 4c21 	movs.w	ip, r1, asr #16
9001b9c6:	d426      	bmi.n	9001ba16 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001b9c8:	f8d9 200c 	ldr.w	r2, [r9, #12]
9001b9cc:	4562      	cmp	r2, ip
9001b9ce:	dd22      	ble.n	9001ba16 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001b9d0:	b224      	sxth	r4, r4
9001b9d2:	9a01      	ldr	r2, [sp, #4]
9001b9d4:	fb0c 6404 	mla	r4, ip, r4, r6
9001b9d8:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
9001b9dc:	0e22      	lsrs	r2, r4, #24
9001b9de:	d01a      	beq.n	9001ba16 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001b9e0:	9e04      	ldr	r6, [sp, #16]
9001b9e2:	4372      	muls	r2, r6
9001b9e4:	1c56      	adds	r6, r2, #1
9001b9e6:	eb06 2222 	add.w	r2, r6, r2, asr #8
9001b9ea:	0a26      	lsrs	r6, r4, #8
9001b9ec:	1212      	asrs	r2, r2, #8
9001b9ee:	9605      	str	r6, [sp, #20]
9001b9f0:	2aff      	cmp	r2, #255	; 0xff
9001b9f2:	d116      	bne.n	9001ba22 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
9001b9f4:	f06f 0201 	mvn.w	r2, #1
9001b9f8:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
9001b9fc:	fb02 fc07 	mul.w	ip, r2, r7
9001ba00:	0962      	lsrs	r2, r4, #5
9001ba02:	f026 0607 	bic.w	r6, r6, #7
9001ba06:	f3c4 04c4 	ubfx	r4, r4, #3, #5
9001ba0a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001ba0e:	4316      	orrs	r6, r2
9001ba10:	4326      	orrs	r6, r4
9001ba12:	f825 600c 	strh.w	r6, [r5, ip]
9001ba16:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001ba18:	3f01      	subs	r7, #1
9001ba1a:	4410      	add	r0, r2
9001ba1c:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001ba1e:	4411      	add	r1, r2
9001ba20:	e787      	b.n	9001b932 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001ba22:	f06f 0601 	mvn.w	r6, #1
9001ba26:	fa1f fa82 	uxth.w	sl, r2
9001ba2a:	f3c4 4c07 	ubfx	ip, r4, #16, #8
9001ba2e:	43d2      	mvns	r2, r2
9001ba30:	437e      	muls	r6, r7
9001ba32:	b2e4      	uxtb	r4, r4
9001ba34:	fb1c fc0a 	smulbb	ip, ip, sl
9001ba38:	b2d2      	uxtb	r2, r2
9001ba3a:	f835 8006 	ldrh.w	r8, [r5, r6]
9001ba3e:	fb14 f40a 	smulbb	r4, r4, sl
9001ba42:	9602      	str	r6, [sp, #8]
9001ba44:	ea4f 2e28 	mov.w	lr, r8, asr #8
9001ba48:	f89d 6014 	ldrb.w	r6, [sp, #20]
9001ba4c:	fb16 f60a 	smulbb	r6, r6, sl
9001ba50:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
9001ba54:	fb0e ce02 	mla	lr, lr, r2, ip
9001ba58:	ea4f 0ce8 	mov.w	ip, r8, asr #3
9001ba5c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001ba60:	fa1f fe8e 	uxth.w	lr, lr
9001ba64:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
9001ba68:	fa5f f888 	uxtb.w	r8, r8
9001ba6c:	fb0c 6c02 	mla	ip, ip, r2, r6
9001ba70:	fb08 4402 	mla	r4, r8, r2, r4
9001ba74:	f10e 0201 	add.w	r2, lr, #1
9001ba78:	fa1f fc8c 	uxth.w	ip, ip
9001ba7c:	b2a4      	uxth	r4, r4
9001ba7e:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
9001ba82:	9a02      	ldr	r2, [sp, #8]
9001ba84:	1c66      	adds	r6, r4, #1
9001ba86:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
9001ba8a:	eb06 2614 	add.w	r6, r6, r4, lsr #8
9001ba8e:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001ba92:	ea46 0e0e 	orr.w	lr, r6, lr
9001ba96:	f10c 0601 	add.w	r6, ip, #1
9001ba9a:	eb06 261c 	add.w	r6, r6, ip, lsr #8
9001ba9e:	0976      	lsrs	r6, r6, #5
9001baa0:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001baa4:	ea4e 0e06 	orr.w	lr, lr, r6
9001baa8:	f825 e002 	strh.w	lr, [r5, r2]
9001baac:	e7b3      	b.n	9001ba16 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001baae:	f04f 0800 	mov.w	r8, #0
9001bab2:	eba3 0208 	sub.w	r2, r3, r8
9001bab6:	2a00      	cmp	r2, #0
9001bab8:	f77f af3e 	ble.w	9001b938 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001babc:	1404      	asrs	r4, r0, #16
9001babe:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
9001bac2:	140a      	asrs	r2, r1, #16
9001bac4:	fb06 4202 	mla	r2, r6, r2, r4
9001bac8:	9c01      	ldr	r4, [sp, #4]
9001baca:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
9001bace:	0e22      	lsrs	r2, r4, #24
9001bad0:	d015      	beq.n	9001bafe <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
9001bad2:	9e04      	ldr	r6, [sp, #16]
9001bad4:	4372      	muls	r2, r6
9001bad6:	1c56      	adds	r6, r2, #1
9001bad8:	eb06 2222 	add.w	r2, r6, r2, asr #8
9001badc:	0a26      	lsrs	r6, r4, #8
9001bade:	1212      	asrs	r2, r2, #8
9001bae0:	2aff      	cmp	r2, #255	; 0xff
9001bae2:	d113      	bne.n	9001bb0c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
9001bae4:	0962      	lsrs	r2, r4, #5
9001bae6:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
9001baea:	f3c4 04c4 	ubfx	r4, r4, #3, #5
9001baee:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001baf2:	f026 0607 	bic.w	r6, r6, #7
9001baf6:	4316      	orrs	r6, r2
9001baf8:	4326      	orrs	r6, r4
9001bafa:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
9001bafe:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001bb00:	f108 0801 	add.w	r8, r8, #1
9001bb04:	4410      	add	r0, r2
9001bb06:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001bb08:	4411      	add	r1, r2
9001bb0a:	e7d2      	b.n	9001bab2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
9001bb0c:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
9001bb10:	fa1f fa82 	uxth.w	sl, r2
9001bb14:	f3c4 4707 	ubfx	r7, r4, #16, #8
9001bb18:	43d2      	mvns	r2, r2
9001bb1a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001bb1e:	fb17 f70a 	smulbb	r7, r7, sl
9001bb22:	b2d2      	uxtb	r2, r2
9001bb24:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001bb28:	b2e4      	uxtb	r4, r4
9001bb2a:	b2f6      	uxtb	r6, r6
9001bb2c:	fb0c 7c02 	mla	ip, ip, r2, r7
9001bb30:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001bb34:	fb14 f40a 	smulbb	r4, r4, sl
9001bb38:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001bb3c:	fa1f fc8c 	uxth.w	ip, ip
9001bb40:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001bb44:	fb16 f60a 	smulbb	r6, r6, sl
9001bb48:	fa5f fe8e 	uxtb.w	lr, lr
9001bb4c:	fb0e 4402 	mla	r4, lr, r2, r4
9001bb50:	fb07 6702 	mla	r7, r7, r2, r6
9001bb54:	f10c 0201 	add.w	r2, ip, #1
9001bb58:	b2a4      	uxth	r4, r4
9001bb5a:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9001bb5e:	1c66      	adds	r6, r4, #1
9001bb60:	b2bf      	uxth	r7, r7
9001bb62:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001bb66:	eb06 2614 	add.w	r6, r6, r4, lsr #8
9001bb6a:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001bb6e:	ea46 0c0c 	orr.w	ip, r6, ip
9001bb72:	1c7e      	adds	r6, r7, #1
9001bb74:	eb06 2617 	add.w	r6, r6, r7, lsr #8
9001bb78:	0976      	lsrs	r6, r6, #5
9001bb7a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001bb7e:	ea4c 0c06 	orr.w	ip, ip, r6
9001bb82:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
9001bb86:	e7ba      	b.n	9001bafe <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
9001bb88:	b007      	add	sp, #28
9001bb8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

9001bb90 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001bb90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001bb94:	b085      	sub	sp, #20
9001bb96:	468b      	mov	fp, r1
9001bb98:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001bb9c:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001bb9e:	9203      	str	r2, [sp, #12]
9001bba0:	6841      	ldr	r1, [r0, #4]
9001bba2:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
9001bba6:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
9001bbaa:	fb01 2404 	mla	r4, r1, r4, r2
9001bbae:	6802      	ldr	r2, [r0, #0]
9001bbb0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001bbb4:	f8d8 2000 	ldr.w	r2, [r8]
9001bbb8:	9201      	str	r2, [sp, #4]
9001bbba:	f1bb 0f00 	cmp.w	fp, #0
9001bbbe:	dc03      	bgt.n	9001bbc8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9001bbc0:	9a03      	ldr	r2, [sp, #12]
9001bbc2:	2a00      	cmp	r2, #0
9001bbc4:	f340 814f 	ble.w	9001be66 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
9001bbc8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001bbca:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
9001bbce:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001bbd2:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001bbd4:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
9001bbd8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001bbdc:	2b00      	cmp	r3, #0
9001bbde:	dd0e      	ble.n	9001bbfe <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001bbe0:	1408      	asrs	r0, r1, #16
9001bbe2:	d405      	bmi.n	9001bbf0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001bbe4:	42b8      	cmp	r0, r7
9001bbe6:	da03      	bge.n	9001bbf0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001bbe8:	1410      	asrs	r0, r2, #16
9001bbea:	d401      	bmi.n	9001bbf0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001bbec:	42b0      	cmp	r0, r6
9001bbee:	db07      	blt.n	9001bc00 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001bbf0:	9811      	ldr	r0, [sp, #68]	; 0x44
9001bbf2:	3b01      	subs	r3, #1
9001bbf4:	3402      	adds	r4, #2
9001bbf6:	4401      	add	r1, r0
9001bbf8:	9812      	ldr	r0, [sp, #72]	; 0x48
9001bbfa:	4402      	add	r2, r0
9001bbfc:	e7ee      	b.n	9001bbdc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
9001bbfe:	d017      	beq.n	9001bc30 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001bc00:	1e58      	subs	r0, r3, #1
9001bc02:	9d11      	ldr	r5, [sp, #68]	; 0x44
9001bc04:	fb05 1500 	mla	r5, r5, r0, r1
9001bc08:	142d      	asrs	r5, r5, #16
9001bc0a:	d409      	bmi.n	9001bc20 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001bc0c:	42bd      	cmp	r5, r7
9001bc0e:	da07      	bge.n	9001bc20 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001bc10:	9d12      	ldr	r5, [sp, #72]	; 0x48
9001bc12:	fb05 2000 	mla	r0, r5, r0, r2
9001bc16:	1400      	asrs	r0, r0, #16
9001bc18:	d402      	bmi.n	9001bc20 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001bc1a:	42b0      	cmp	r0, r6
9001bc1c:	f2c0 80ba 	blt.w	9001bd94 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9001bc20:	2600      	movs	r6, #0
9001bc22:	1998      	adds	r0, r3, r6
9001bc24:	2800      	cmp	r0, #0
9001bc26:	dc3e      	bgt.n	9001bca6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
9001bc28:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001bc2c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001bc30:	f1bb 0f00 	cmp.w	fp, #0
9001bc34:	f340 8117 	ble.w	9001be66 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
9001bc38:	ee30 0a04 	vadd.f32	s0, s0, s8
9001bc3c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001bc3e:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001bc42:	f1bb 0b01 	subs.w	fp, fp, #1
9001bc46:	eeb0 6a62 	vmov.f32	s12, s5
9001bc4a:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001bc4e:	ee31 1a05 	vadd.f32	s2, s2, s10
9001bc52:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001bc56:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
9001bc5a:	eeb0 6a43 	vmov.f32	s12, s6
9001bc5e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001bc62:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
9001bc66:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001bc6a:	ee61 7a27 	vmul.f32	s15, s2, s15
9001bc6e:	ee77 2a62 	vsub.f32	s5, s14, s5
9001bc72:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001bc76:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001bc7a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001bc7e:	ee12 2a90 	vmov	r2, s5
9001bc82:	eef0 2a47 	vmov.f32	s5, s14
9001bc86:	fb92 f3f3 	sdiv	r3, r2, r3
9001bc8a:	ee13 2a10 	vmov	r2, s6
9001bc8e:	9311      	str	r3, [sp, #68]	; 0x44
9001bc90:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001bc92:	eeb0 3a67 	vmov.f32	s6, s15
9001bc96:	fb92 f3f3 	sdiv	r3, r2, r3
9001bc9a:	9a03      	ldr	r2, [sp, #12]
9001bc9c:	9312      	str	r3, [sp, #72]	; 0x48
9001bc9e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001bca0:	bf08      	it	eq
9001bca2:	4613      	moveq	r3, r2
9001bca4:	e789      	b.n	9001bbba <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
9001bca6:	140f      	asrs	r7, r1, #16
9001bca8:	d424      	bmi.n	9001bcf4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001bcaa:	f8d8 5008 	ldr.w	r5, [r8, #8]
9001bcae:	42bd      	cmp	r5, r7
9001bcb0:	dd20      	ble.n	9001bcf4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001bcb2:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001bcb6:	d41d      	bmi.n	9001bcf4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001bcb8:	f8d8 000c 	ldr.w	r0, [r8, #12]
9001bcbc:	4560      	cmp	r0, ip
9001bcbe:	dd19      	ble.n	9001bcf4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001bcc0:	b22d      	sxth	r5, r5
9001bcc2:	9801      	ldr	r0, [sp, #4]
9001bcc4:	fb0c 7505 	mla	r5, ip, r5, r7
9001bcc8:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
9001bccc:	0e07      	lsrs	r7, r0, #24
9001bcce:	2fff      	cmp	r7, #255	; 0xff
9001bcd0:	d116      	bne.n	9001bd00 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001bcd2:	f06f 0501 	mvn.w	r5, #1
9001bcd6:	fb05 f706 	mul.w	r7, r5, r6
9001bcda:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
9001bcde:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
9001bce2:	0945      	lsrs	r5, r0, #5
9001bce4:	f3c0 00c4 	ubfx	r0, r0, #3, #5
9001bce8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001bcec:	ea4c 0505 	orr.w	r5, ip, r5
9001bcf0:	4305      	orrs	r5, r0
9001bcf2:	53e5      	strh	r5, [r4, r7]
9001bcf4:	9811      	ldr	r0, [sp, #68]	; 0x44
9001bcf6:	3e01      	subs	r6, #1
9001bcf8:	4401      	add	r1, r0
9001bcfa:	9812      	ldr	r0, [sp, #72]	; 0x48
9001bcfc:	4402      	add	r2, r0
9001bcfe:	e790      	b.n	9001bc22 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001bd00:	b2fd      	uxtb	r5, r7
9001bd02:	2f00      	cmp	r7, #0
9001bd04:	d0f6      	beq.n	9001bcf4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001bd06:	f06f 0701 	mvn.w	r7, #1
9001bd0a:	fa1f f985 	uxth.w	r9, r5
9001bd0e:	43ed      	mvns	r5, r5
9001bd10:	f3c0 2a07 	ubfx	sl, r0, #8, #8
9001bd14:	4377      	muls	r7, r6
9001bd16:	fb1a fa09 	smulbb	sl, sl, r9
9001bd1a:	b2ed      	uxtb	r5, r5
9001bd1c:	f834 e007 	ldrh.w	lr, [r4, r7]
9001bd20:	9702      	str	r7, [sp, #8]
9001bd22:	f3c0 4707 	ubfx	r7, r0, #16, #8
9001bd26:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001bd2a:	fb17 f709 	smulbb	r7, r7, r9
9001bd2e:	b2c0      	uxtb	r0, r0
9001bd30:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001bd34:	fb10 f009 	smulbb	r0, r0, r9
9001bd38:	fb0c 7c05 	mla	ip, ip, r5, r7
9001bd3c:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001bd40:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001bd44:	fa1f fc8c 	uxth.w	ip, ip
9001bd48:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001bd4c:	fa5f fe8e 	uxtb.w	lr, lr
9001bd50:	fb07 a705 	mla	r7, r7, r5, sl
9001bd54:	fb0e 0005 	mla	r0, lr, r5, r0
9001bd58:	f10c 0501 	add.w	r5, ip, #1
9001bd5c:	b2bf      	uxth	r7, r7
9001bd5e:	b280      	uxth	r0, r0
9001bd60:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001bd64:	f100 0a01 	add.w	sl, r0, #1
9001bd68:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001bd6c:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
9001bd70:	9802      	ldr	r0, [sp, #8]
9001bd72:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001bd76:	ea4a 0c0c 	orr.w	ip, sl, ip
9001bd7a:	f107 0a01 	add.w	sl, r7, #1
9001bd7e:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001bd82:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001bd86:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001bd8a:	ea4c 0c0a 	orr.w	ip, ip, sl
9001bd8e:	f824 c000 	strh.w	ip, [r4, r0]
9001bd92:	e7af      	b.n	9001bcf4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001bd94:	f04f 0e00 	mov.w	lr, #0
9001bd98:	eba3 000e 	sub.w	r0, r3, lr
9001bd9c:	2800      	cmp	r0, #0
9001bd9e:	f77f af43 	ble.w	9001bc28 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001bda2:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
9001bda6:	140d      	asrs	r5, r1, #16
9001bda8:	1410      	asrs	r0, r2, #16
9001bdaa:	fb06 5000 	mla	r0, r6, r0, r5
9001bdae:	9d01      	ldr	r5, [sp, #4]
9001bdb0:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
9001bdb4:	0e2e      	lsrs	r6, r5, #24
9001bdb6:	2eff      	cmp	r6, #255	; 0xff
9001bdb8:	d112      	bne.n	9001bde0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
9001bdba:	482c      	ldr	r0, [pc, #176]	; (9001be6c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
9001bdbc:	ea00 2615 	and.w	r6, r0, r5, lsr #8
9001bdc0:	0968      	lsrs	r0, r5, #5
9001bdc2:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001bdc6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9001bdca:	4330      	orrs	r0, r6
9001bdcc:	4328      	orrs	r0, r5
9001bdce:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
9001bdd2:	9811      	ldr	r0, [sp, #68]	; 0x44
9001bdd4:	f10e 0e01 	add.w	lr, lr, #1
9001bdd8:	4401      	add	r1, r0
9001bdda:	9812      	ldr	r0, [sp, #72]	; 0x48
9001bddc:	4402      	add	r2, r0
9001bdde:	e7db      	b.n	9001bd98 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
9001bde0:	b2f0      	uxtb	r0, r6
9001bde2:	2e00      	cmp	r6, #0
9001bde4:	d0f5      	beq.n	9001bdd2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
9001bde6:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
9001bdea:	fa1f f980 	uxth.w	r9, r0
9001bdee:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001bdf2:	43c0      	mvns	r0, r0
9001bdf4:	ea4f 272c 	mov.w	r7, ip, asr #8
9001bdf8:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001bdfc:	fb16 f609 	smulbb	r6, r6, r9
9001be00:	b2c0      	uxtb	r0, r0
9001be02:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001be06:	b2ed      	uxtb	r5, r5
9001be08:	fb1a fa09 	smulbb	sl, sl, r9
9001be0c:	fb07 6700 	mla	r7, r7, r0, r6
9001be10:	ea4f 06ec 	mov.w	r6, ip, asr #3
9001be14:	fb15 f509 	smulbb	r5, r5, r9
9001be18:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001be1c:	b2bf      	uxth	r7, r7
9001be1e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001be22:	fa5f fc8c 	uxtb.w	ip, ip
9001be26:	fb06 a600 	mla	r6, r6, r0, sl
9001be2a:	fb0c 5500 	mla	r5, ip, r0, r5
9001be2e:	1c78      	adds	r0, r7, #1
9001be30:	b2b6      	uxth	r6, r6
9001be32:	b2ad      	uxth	r5, r5
9001be34:	eb00 2717 	add.w	r7, r0, r7, lsr #8
9001be38:	f105 0a01 	add.w	sl, r5, #1
9001be3c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001be40:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001be44:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001be48:	ea4a 0707 	orr.w	r7, sl, r7
9001be4c:	f106 0a01 	add.w	sl, r6, #1
9001be50:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001be54:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001be58:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001be5c:	ea47 070a 	orr.w	r7, r7, sl
9001be60:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
9001be64:	e7b5      	b.n	9001bdd2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
9001be66:	b005      	add	sp, #20
9001be68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001be6c:	fffff800 	.word	0xfffff800

9001be70 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001be70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001be74:	b087      	sub	sp, #28
9001be76:	468b      	mov	fp, r1
9001be78:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001be7c:	9815      	ldr	r0, [sp, #84]	; 0x54
9001be7e:	9203      	str	r2, [sp, #12]
9001be80:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001be84:	6841      	ldr	r1, [r0, #4]
9001be86:	9204      	str	r2, [sp, #16]
9001be88:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
9001be8c:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
9001be90:	fb01 2404 	mla	r4, r1, r4, r2
9001be94:	6802      	ldr	r2, [r0, #0]
9001be96:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001be9a:	f8d9 2008 	ldr.w	r2, [r9, #8]
9001be9e:	3201      	adds	r2, #1
9001bea0:	f022 0201 	bic.w	r2, r2, #1
9001bea4:	9200      	str	r2, [sp, #0]
9001bea6:	f8d9 2000 	ldr.w	r2, [r9]
9001beaa:	9201      	str	r2, [sp, #4]
9001beac:	f1bb 0f00 	cmp.w	fp, #0
9001beb0:	dc03      	bgt.n	9001beba <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
9001beb2:	9a03      	ldr	r2, [sp, #12]
9001beb4:	2a00      	cmp	r2, #0
9001beb6:	f340 816a 	ble.w	9001c18e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
9001beba:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001bebc:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
9001bec0:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
9001bec4:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001bec6:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
9001beca:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001bece:	2b00      	cmp	r3, #0
9001bed0:	dd0e      	ble.n	9001bef0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9001bed2:	1402      	asrs	r2, r0, #16
9001bed4:	d405      	bmi.n	9001bee2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001bed6:	42ba      	cmp	r2, r7
9001bed8:	da03      	bge.n	9001bee2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001beda:	140a      	asrs	r2, r1, #16
9001bedc:	d401      	bmi.n	9001bee2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001bede:	42b2      	cmp	r2, r6
9001bee0:	db07      	blt.n	9001bef2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
9001bee2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001bee4:	3b01      	subs	r3, #1
9001bee6:	3402      	adds	r4, #2
9001bee8:	4410      	add	r0, r2
9001beea:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001beec:	4411      	add	r1, r2
9001beee:	e7ee      	b.n	9001bece <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
9001bef0:	d017      	beq.n	9001bf22 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
9001bef2:	1e5a      	subs	r2, r3, #1
9001bef4:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9001bef6:	fb05 0502 	mla	r5, r5, r2, r0
9001befa:	142d      	asrs	r5, r5, #16
9001befc:	d409      	bmi.n	9001bf12 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001befe:	42bd      	cmp	r5, r7
9001bf00:	da07      	bge.n	9001bf12 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001bf02:	9d14      	ldr	r5, [sp, #80]	; 0x50
9001bf04:	fb05 1202 	mla	r2, r5, r2, r1
9001bf08:	1412      	asrs	r2, r2, #16
9001bf0a:	d402      	bmi.n	9001bf12 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001bf0c:	42b2      	cmp	r2, r6
9001bf0e:	f2c0 80c8 	blt.w	9001c0a2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
9001bf12:	2700      	movs	r7, #0
9001bf14:	19da      	adds	r2, r3, r7
9001bf16:	2a00      	cmp	r2, #0
9001bf18:	dc3e      	bgt.n	9001bf98 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
9001bf1a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001bf1e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001bf22:	f1bb 0f00 	cmp.w	fp, #0
9001bf26:	f340 8132 	ble.w	9001c18e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
9001bf2a:	ee30 0a04 	vadd.f32	s0, s0, s8
9001bf2e:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001bf30:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001bf34:	f1bb 0b01 	subs.w	fp, fp, #1
9001bf38:	eeb0 6a62 	vmov.f32	s12, s5
9001bf3c:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001bf40:	ee31 1a05 	vadd.f32	s2, s2, s10
9001bf44:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001bf48:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
9001bf4c:	eeb0 6a43 	vmov.f32	s12, s6
9001bf50:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001bf54:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
9001bf58:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001bf5c:	ee61 7a27 	vmul.f32	s15, s2, s15
9001bf60:	ee77 2a62 	vsub.f32	s5, s14, s5
9001bf64:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001bf68:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001bf6c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001bf70:	ee12 2a90 	vmov	r2, s5
9001bf74:	eef0 2a47 	vmov.f32	s5, s14
9001bf78:	fb92 f3f3 	sdiv	r3, r2, r3
9001bf7c:	ee13 2a10 	vmov	r2, s6
9001bf80:	9313      	str	r3, [sp, #76]	; 0x4c
9001bf82:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001bf84:	eeb0 3a67 	vmov.f32	s6, s15
9001bf88:	fb92 f3f3 	sdiv	r3, r2, r3
9001bf8c:	9a03      	ldr	r2, [sp, #12]
9001bf8e:	9314      	str	r3, [sp, #80]	; 0x50
9001bf90:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001bf92:	bf08      	it	eq
9001bf94:	4613      	moveq	r3, r2
9001bf96:	e789      	b.n	9001beac <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9001bf98:	1405      	asrs	r5, r0, #16
9001bf9a:	d436      	bmi.n	9001c00a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001bf9c:	f8d9 2008 	ldr.w	r2, [r9, #8]
9001bfa0:	42aa      	cmp	r2, r5
9001bfa2:	dd32      	ble.n	9001c00a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001bfa4:	140e      	asrs	r6, r1, #16
9001bfa6:	d430      	bmi.n	9001c00a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001bfa8:	f8d9 200c 	ldr.w	r2, [r9, #12]
9001bfac:	42b2      	cmp	r2, r6
9001bfae:	dd2c      	ble.n	9001c00a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001bfb0:	9a00      	ldr	r2, [sp, #0]
9001bfb2:	fb06 5502 	mla	r5, r6, r2, r5
9001bfb6:	9e01      	ldr	r6, [sp, #4]
9001bfb8:	086a      	lsrs	r2, r5, #1
9001bfba:	5cb2      	ldrb	r2, [r6, r2]
9001bfbc:	07ee      	lsls	r6, r5, #31
9001bfbe:	bf54      	ite	pl
9001bfc0:	f002 020f 	andpl.w	r2, r2, #15
9001bfc4:	1112      	asrmi	r2, r2, #4
9001bfc6:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001bfca:	b2d2      	uxtb	r2, r2
9001bfcc:	b1ea      	cbz	r2, 9001c00a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001bfce:	9d04      	ldr	r5, [sp, #16]
9001bfd0:	436a      	muls	r2, r5
9001bfd2:	1c55      	adds	r5, r2, #1
9001bfd4:	eb05 2222 	add.w	r2, r5, r2, asr #8
9001bfd8:	4d6e      	ldr	r5, [pc, #440]	; (9001c194 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
9001bfda:	1212      	asrs	r2, r2, #8
9001bfdc:	682d      	ldr	r5, [r5, #0]
9001bfde:	2aff      	cmp	r2, #255	; 0xff
9001bfe0:	ea4f 2615 	mov.w	r6, r5, lsr #8
9001bfe4:	9605      	str	r6, [sp, #20]
9001bfe6:	d116      	bne.n	9001c016 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
9001bfe8:	f06f 0201 	mvn.w	r2, #1
9001bfec:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
9001bff0:	fb02 fc07 	mul.w	ip, r2, r7
9001bff4:	096a      	lsrs	r2, r5, #5
9001bff6:	f026 0607 	bic.w	r6, r6, #7
9001bffa:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001bffe:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001c002:	4316      	orrs	r6, r2
9001c004:	432e      	orrs	r6, r5
9001c006:	f824 600c 	strh.w	r6, [r4, ip]
9001c00a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001c00c:	3f01      	subs	r7, #1
9001c00e:	4410      	add	r0, r2
9001c010:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001c012:	4411      	add	r1, r2
9001c014:	e77e      	b.n	9001bf14 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
9001c016:	f06f 0601 	mvn.w	r6, #1
9001c01a:	fa1f fa82 	uxth.w	sl, r2
9001c01e:	f3c5 4c07 	ubfx	ip, r5, #16, #8
9001c022:	43d2      	mvns	r2, r2
9001c024:	437e      	muls	r6, r7
9001c026:	b2ed      	uxtb	r5, r5
9001c028:	fb1c fc0a 	smulbb	ip, ip, sl
9001c02c:	b2d2      	uxtb	r2, r2
9001c02e:	f834 8006 	ldrh.w	r8, [r4, r6]
9001c032:	fb15 f50a 	smulbb	r5, r5, sl
9001c036:	9602      	str	r6, [sp, #8]
9001c038:	ea4f 2e28 	mov.w	lr, r8, asr #8
9001c03c:	f89d 6014 	ldrb.w	r6, [sp, #20]
9001c040:	fb16 f60a 	smulbb	r6, r6, sl
9001c044:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
9001c048:	fb0e ce02 	mla	lr, lr, r2, ip
9001c04c:	ea4f 0ce8 	mov.w	ip, r8, asr #3
9001c050:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001c054:	fa1f fe8e 	uxth.w	lr, lr
9001c058:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
9001c05c:	fa5f f888 	uxtb.w	r8, r8
9001c060:	fb0c 6c02 	mla	ip, ip, r2, r6
9001c064:	fb08 5502 	mla	r5, r8, r2, r5
9001c068:	f10e 0201 	add.w	r2, lr, #1
9001c06c:	fa1f fc8c 	uxth.w	ip, ip
9001c070:	b2ad      	uxth	r5, r5
9001c072:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
9001c076:	9a02      	ldr	r2, [sp, #8]
9001c078:	1c6e      	adds	r6, r5, #1
9001c07a:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
9001c07e:	eb06 2615 	add.w	r6, r6, r5, lsr #8
9001c082:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001c086:	ea46 0e0e 	orr.w	lr, r6, lr
9001c08a:	f10c 0601 	add.w	r6, ip, #1
9001c08e:	eb06 261c 	add.w	r6, r6, ip, lsr #8
9001c092:	0976      	lsrs	r6, r6, #5
9001c094:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001c098:	ea4e 0e06 	orr.w	lr, lr, r6
9001c09c:	f824 e002 	strh.w	lr, [r4, r2]
9001c0a0:	e7b3      	b.n	9001c00a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001c0a2:	f04f 0800 	mov.w	r8, #0
9001c0a6:	eba3 0208 	sub.w	r2, r3, r8
9001c0aa:	2a00      	cmp	r2, #0
9001c0ac:	f77f af35 	ble.w	9001bf1a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
9001c0b0:	1402      	asrs	r2, r0, #16
9001c0b2:	9e00      	ldr	r6, [sp, #0]
9001c0b4:	140d      	asrs	r5, r1, #16
9001c0b6:	fb06 2505 	mla	r5, r6, r5, r2
9001c0ba:	9e01      	ldr	r6, [sp, #4]
9001c0bc:	086a      	lsrs	r2, r5, #1
9001c0be:	07ed      	lsls	r5, r5, #31
9001c0c0:	5cb2      	ldrb	r2, [r6, r2]
9001c0c2:	bf54      	ite	pl
9001c0c4:	f002 020f 	andpl.w	r2, r2, #15
9001c0c8:	1112      	asrmi	r2, r2, #4
9001c0ca:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001c0ce:	b2d2      	uxtb	r2, r2
9001c0d0:	b1c2      	cbz	r2, 9001c104 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001c0d2:	9d04      	ldr	r5, [sp, #16]
9001c0d4:	436a      	muls	r2, r5
9001c0d6:	1c55      	adds	r5, r2, #1
9001c0d8:	eb05 2222 	add.w	r2, r5, r2, asr #8
9001c0dc:	4d2d      	ldr	r5, [pc, #180]	; (9001c194 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
9001c0de:	1212      	asrs	r2, r2, #8
9001c0e0:	682e      	ldr	r6, [r5, #0]
9001c0e2:	2aff      	cmp	r2, #255	; 0xff
9001c0e4:	ea4f 2516 	mov.w	r5, r6, lsr #8
9001c0e8:	d113      	bne.n	9001c112 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
9001c0ea:	0972      	lsrs	r2, r6, #5
9001c0ec:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
9001c0f0:	f3c6 06c4 	ubfx	r6, r6, #3, #5
9001c0f4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001c0f8:	f025 0507 	bic.w	r5, r5, #7
9001c0fc:	4315      	orrs	r5, r2
9001c0fe:	4335      	orrs	r5, r6
9001c100:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
9001c104:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001c106:	f108 0801 	add.w	r8, r8, #1
9001c10a:	4410      	add	r0, r2
9001c10c:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001c10e:	4411      	add	r1, r2
9001c110:	e7c9      	b.n	9001c0a6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
9001c112:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
9001c116:	fa1f fa82 	uxth.w	sl, r2
9001c11a:	f3c6 4707 	ubfx	r7, r6, #16, #8
9001c11e:	43d2      	mvns	r2, r2
9001c120:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001c124:	fb17 f70a 	smulbb	r7, r7, sl
9001c128:	b2d2      	uxtb	r2, r2
9001c12a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001c12e:	b2f6      	uxtb	r6, r6
9001c130:	b2ed      	uxtb	r5, r5
9001c132:	fb0c 7c02 	mla	ip, ip, r2, r7
9001c136:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001c13a:	fb16 f60a 	smulbb	r6, r6, sl
9001c13e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001c142:	fa1f fc8c 	uxth.w	ip, ip
9001c146:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001c14a:	fb15 f50a 	smulbb	r5, r5, sl
9001c14e:	fa5f fe8e 	uxtb.w	lr, lr
9001c152:	fb0e 6602 	mla	r6, lr, r2, r6
9001c156:	fb07 5702 	mla	r7, r7, r2, r5
9001c15a:	f10c 0201 	add.w	r2, ip, #1
9001c15e:	b2b6      	uxth	r6, r6
9001c160:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9001c164:	1c75      	adds	r5, r6, #1
9001c166:	b2bf      	uxth	r7, r7
9001c168:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001c16c:	eb05 2516 	add.w	r5, r5, r6, lsr #8
9001c170:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001c174:	ea45 0c0c 	orr.w	ip, r5, ip
9001c178:	1c7d      	adds	r5, r7, #1
9001c17a:	eb05 2517 	add.w	r5, r5, r7, lsr #8
9001c17e:	096d      	lsrs	r5, r5, #5
9001c180:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001c184:	ea4c 0c05 	orr.w	ip, ip, r5
9001c188:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
9001c18c:	e7ba      	b.n	9001c104 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001c18e:	b007      	add	sp, #28
9001c190:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001c194:	24039844 	.word	0x24039844

9001c198 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001c198:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c19c:	b087      	sub	sp, #28
9001c19e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001c1a2:	f8df 8308 	ldr.w	r8, [pc, #776]	; 9001c4ac <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
9001c1a6:	9815      	ldr	r0, [sp, #84]	; 0x54
9001c1a8:	9101      	str	r1, [sp, #4]
9001c1aa:	9205      	str	r2, [sp, #20]
9001c1ac:	6841      	ldr	r1, [r0, #4]
9001c1ae:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
9001c1b2:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
9001c1b6:	fb01 2404 	mla	r4, r1, r4, r2
9001c1ba:	6802      	ldr	r2, [r0, #0]
9001c1bc:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001c1c0:	f8db 2008 	ldr.w	r2, [fp, #8]
9001c1c4:	3201      	adds	r2, #1
9001c1c6:	f022 0201 	bic.w	r2, r2, #1
9001c1ca:	9202      	str	r2, [sp, #8]
9001c1cc:	f8db 2000 	ldr.w	r2, [fp]
9001c1d0:	9203      	str	r2, [sp, #12]
9001c1d2:	9a01      	ldr	r2, [sp, #4]
9001c1d4:	2a00      	cmp	r2, #0
9001c1d6:	dc03      	bgt.n	9001c1e0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
9001c1d8:	9a05      	ldr	r2, [sp, #20]
9001c1da:	2a00      	cmp	r2, #0
9001c1dc:	f340 8162 	ble.w	9001c4a4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
9001c1e0:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001c1e2:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
9001c1e6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
9001c1ea:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001c1ec:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
9001c1f0:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001c1f4:	2b00      	cmp	r3, #0
9001c1f6:	dd0e      	ble.n	9001c216 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001c1f8:	1402      	asrs	r2, r0, #16
9001c1fa:	d405      	bmi.n	9001c208 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001c1fc:	42ba      	cmp	r2, r7
9001c1fe:	da03      	bge.n	9001c208 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001c200:	140a      	asrs	r2, r1, #16
9001c202:	d401      	bmi.n	9001c208 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001c204:	42b2      	cmp	r2, r6
9001c206:	db07      	blt.n	9001c218 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9001c208:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001c20a:	3b01      	subs	r3, #1
9001c20c:	3402      	adds	r4, #2
9001c20e:	4410      	add	r0, r2
9001c210:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001c212:	4411      	add	r1, r2
9001c214:	e7ee      	b.n	9001c1f4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
9001c216:	d017      	beq.n	9001c248 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
9001c218:	1e5a      	subs	r2, r3, #1
9001c21a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9001c21c:	fb05 0502 	mla	r5, r5, r2, r0
9001c220:	142d      	asrs	r5, r5, #16
9001c222:	d409      	bmi.n	9001c238 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001c224:	42bd      	cmp	r5, r7
9001c226:	da07      	bge.n	9001c238 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001c228:	9d14      	ldr	r5, [sp, #80]	; 0x50
9001c22a:	fb05 1202 	mla	r2, r5, r2, r1
9001c22e:	1412      	asrs	r2, r2, #16
9001c230:	d402      	bmi.n	9001c238 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001c232:	42b2      	cmp	r2, r6
9001c234:	f2c0 80c3 	blt.w	9001c3be <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
9001c238:	2500      	movs	r5, #0
9001c23a:	195a      	adds	r2, r3, r5
9001c23c:	2a00      	cmp	r2, #0
9001c23e:	dc3f      	bgt.n	9001c2c0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
9001c240:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001c244:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001c248:	9b01      	ldr	r3, [sp, #4]
9001c24a:	2b00      	cmp	r3, #0
9001c24c:	f340 812a 	ble.w	9001c4a4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
9001c250:	ee30 0a04 	vadd.f32	s0, s0, s8
9001c254:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001c256:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001c25a:	eeb0 6a62 	vmov.f32	s12, s5
9001c25e:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001c262:	ee31 1a05 	vadd.f32	s2, s2, s10
9001c266:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c26a:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
9001c26e:	eeb0 6a43 	vmov.f32	s12, s6
9001c272:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c276:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
9001c27a:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001c27e:	ee61 7a27 	vmul.f32	s15, s2, s15
9001c282:	ee77 2a62 	vsub.f32	s5, s14, s5
9001c286:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001c28a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001c28e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001c292:	ee12 2a90 	vmov	r2, s5
9001c296:	eef0 2a47 	vmov.f32	s5, s14
9001c29a:	fb92 f3f3 	sdiv	r3, r2, r3
9001c29e:	ee13 2a10 	vmov	r2, s6
9001c2a2:	9313      	str	r3, [sp, #76]	; 0x4c
9001c2a4:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001c2a6:	eeb0 3a67 	vmov.f32	s6, s15
9001c2aa:	fb92 f3f3 	sdiv	r3, r2, r3
9001c2ae:	9314      	str	r3, [sp, #80]	; 0x50
9001c2b0:	9b01      	ldr	r3, [sp, #4]
9001c2b2:	9a05      	ldr	r2, [sp, #20]
9001c2b4:	3b01      	subs	r3, #1
9001c2b6:	9301      	str	r3, [sp, #4]
9001c2b8:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001c2ba:	bf08      	it	eq
9001c2bc:	4613      	moveq	r3, r2
9001c2be:	e788      	b.n	9001c1d2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
9001c2c0:	1406      	asrs	r6, r0, #16
9001c2c2:	d42c      	bmi.n	9001c31e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001c2c4:	f8db 2008 	ldr.w	r2, [fp, #8]
9001c2c8:	42b2      	cmp	r2, r6
9001c2ca:	dd28      	ble.n	9001c31e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001c2cc:	140f      	asrs	r7, r1, #16
9001c2ce:	d426      	bmi.n	9001c31e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001c2d0:	f8db 200c 	ldr.w	r2, [fp, #12]
9001c2d4:	42ba      	cmp	r2, r7
9001c2d6:	dd22      	ble.n	9001c31e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001c2d8:	9a02      	ldr	r2, [sp, #8]
9001c2da:	fb07 6602 	mla	r6, r7, r2, r6
9001c2de:	9f03      	ldr	r7, [sp, #12]
9001c2e0:	0872      	lsrs	r2, r6, #1
9001c2e2:	07f6      	lsls	r6, r6, #31
9001c2e4:	5cba      	ldrb	r2, [r7, r2]
9001c2e6:	bf54      	ite	pl
9001c2e8:	f002 020f 	andpl.w	r2, r2, #15
9001c2ec:	1112      	asrmi	r2, r2, #4
9001c2ee:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001c2f2:	b2d2      	uxtb	r2, r2
9001c2f4:	2aff      	cmp	r2, #255	; 0xff
9001c2f6:	d118      	bne.n	9001c32a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
9001c2f8:	f06f 0601 	mvn.w	r6, #1
9001c2fc:	f8d8 2000 	ldr.w	r2, [r8]
9001c300:	fb06 f705 	mul.w	r7, r6, r5
9001c304:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
9001c308:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
9001c30c:	0956      	lsrs	r6, r2, #5
9001c30e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001c312:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001c316:	ea4c 0606 	orr.w	r6, ip, r6
9001c31a:	4316      	orrs	r6, r2
9001c31c:	53e6      	strh	r6, [r4, r7]
9001c31e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001c320:	3d01      	subs	r5, #1
9001c322:	4410      	add	r0, r2
9001c324:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001c326:	4411      	add	r1, r2
9001c328:	e787      	b.n	9001c23a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001c32a:	2a00      	cmp	r2, #0
9001c32c:	d0f7      	beq.n	9001c31e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001c32e:	f06f 0601 	mvn.w	r6, #1
9001c332:	f8d8 c000 	ldr.w	ip, [r8]
9001c336:	fa1f f982 	uxth.w	r9, r2
9001c33a:	43d2      	mvns	r2, r2
9001c33c:	436e      	muls	r6, r5
9001c33e:	f3cc 2a07 	ubfx	sl, ip, #8, #8
9001c342:	b2d2      	uxtb	r2, r2
9001c344:	f834 e006 	ldrh.w	lr, [r4, r6]
9001c348:	fb1a fa09 	smulbb	sl, sl, r9
9001c34c:	9604      	str	r6, [sp, #16]
9001c34e:	f3cc 4607 	ubfx	r6, ip, #16, #8
9001c352:	ea4f 272e 	mov.w	r7, lr, asr #8
9001c356:	fb16 f609 	smulbb	r6, r6, r9
9001c35a:	fa5f fc8c 	uxtb.w	ip, ip
9001c35e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001c362:	fb1c fc09 	smulbb	ip, ip, r9
9001c366:	fb07 6702 	mla	r7, r7, r2, r6
9001c36a:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001c36e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001c372:	b2bf      	uxth	r7, r7
9001c374:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001c378:	fa5f fe8e 	uxtb.w	lr, lr
9001c37c:	fb06 a602 	mla	r6, r6, r2, sl
9001c380:	fb0e cc02 	mla	ip, lr, r2, ip
9001c384:	1c7a      	adds	r2, r7, #1
9001c386:	b2b6      	uxth	r6, r6
9001c388:	fa1f fc8c 	uxth.w	ip, ip
9001c38c:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001c390:	9a04      	ldr	r2, [sp, #16]
9001c392:	f10c 0a01 	add.w	sl, ip, #1
9001c396:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001c39a:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
9001c39e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001c3a2:	ea4a 0707 	orr.w	r7, sl, r7
9001c3a6:	f106 0a01 	add.w	sl, r6, #1
9001c3aa:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001c3ae:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001c3b2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001c3b6:	ea47 070a 	orr.w	r7, r7, sl
9001c3ba:	52a7      	strh	r7, [r4, r2]
9001c3bc:	e7af      	b.n	9001c31e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001c3be:	f04f 0e00 	mov.w	lr, #0
9001c3c2:	eba3 020e 	sub.w	r2, r3, lr
9001c3c6:	2a00      	cmp	r2, #0
9001c3c8:	f77f af3a 	ble.w	9001c240 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
9001c3cc:	1402      	asrs	r2, r0, #16
9001c3ce:	9e02      	ldr	r6, [sp, #8]
9001c3d0:	140d      	asrs	r5, r1, #16
9001c3d2:	fb06 2505 	mla	r5, r6, r5, r2
9001c3d6:	9e03      	ldr	r6, [sp, #12]
9001c3d8:	086a      	lsrs	r2, r5, #1
9001c3da:	07ed      	lsls	r5, r5, #31
9001c3dc:	5cb2      	ldrb	r2, [r6, r2]
9001c3de:	bf54      	ite	pl
9001c3e0:	f002 020f 	andpl.w	r2, r2, #15
9001c3e4:	1112      	asrmi	r2, r2, #4
9001c3e6:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001c3ea:	b2d2      	uxtb	r2, r2
9001c3ec:	2aff      	cmp	r2, #255	; 0xff
9001c3ee:	d115      	bne.n	9001c41c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
9001c3f0:	f8d8 5000 	ldr.w	r5, [r8]
9001c3f4:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
9001c3f8:	ea02 2615 	and.w	r6, r2, r5, lsr #8
9001c3fc:	096a      	lsrs	r2, r5, #5
9001c3fe:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001c402:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001c406:	4332      	orrs	r2, r6
9001c408:	432a      	orrs	r2, r5
9001c40a:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
9001c40e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001c410:	f10e 0e01 	add.w	lr, lr, #1
9001c414:	4410      	add	r0, r2
9001c416:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001c418:	4411      	add	r1, r2
9001c41a:	e7d2      	b.n	9001c3c2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
9001c41c:	2a00      	cmp	r2, #0
9001c41e:	d0f6      	beq.n	9001c40e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
9001c420:	f8d8 7000 	ldr.w	r7, [r8]
9001c424:	fa1f f982 	uxth.w	r9, r2
9001c428:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
9001c42c:	43d2      	mvns	r2, r2
9001c42e:	f3c7 4507 	ubfx	r5, r7, #16, #8
9001c432:	f3c7 2a07 	ubfx	sl, r7, #8, #8
9001c436:	ea4f 262c 	mov.w	r6, ip, asr #8
9001c43a:	fb15 f509 	smulbb	r5, r5, r9
9001c43e:	b2d2      	uxtb	r2, r2
9001c440:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001c444:	b2ff      	uxtb	r7, r7
9001c446:	fb1a fa09 	smulbb	sl, sl, r9
9001c44a:	fb06 5602 	mla	r6, r6, r2, r5
9001c44e:	ea4f 05ec 	mov.w	r5, ip, asr #3
9001c452:	fb17 f709 	smulbb	r7, r7, r9
9001c456:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001c45a:	b2b6      	uxth	r6, r6
9001c45c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9001c460:	fa5f fc8c 	uxtb.w	ip, ip
9001c464:	fb05 a502 	mla	r5, r5, r2, sl
9001c468:	fb0c 7702 	mla	r7, ip, r2, r7
9001c46c:	1c72      	adds	r2, r6, #1
9001c46e:	b2ad      	uxth	r5, r5
9001c470:	b2bf      	uxth	r7, r7
9001c472:	eb02 2616 	add.w	r6, r2, r6, lsr #8
9001c476:	f107 0a01 	add.w	sl, r7, #1
9001c47a:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
9001c47e:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001c482:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001c486:	ea4a 0606 	orr.w	r6, sl, r6
9001c48a:	f105 0a01 	add.w	sl, r5, #1
9001c48e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001c492:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001c496:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001c49a:	ea46 060a 	orr.w	r6, r6, sl
9001c49e:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
9001c4a2:	e7b4      	b.n	9001c40e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
9001c4a4:	b007      	add	sp, #28
9001c4a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001c4aa:	bf00      	nop
9001c4ac:	24039844 	.word	0x24039844

9001c4b0 <_ZN8touchgfx8LCD16bppD1Ev>:
9001c4b0:	4770      	bx	lr

9001c4b2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
9001c4b2:	4770      	bx	lr

9001c4b4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
9001c4b4:	4770      	bx	lr

9001c4b6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
9001c4b6:	4770      	bx	lr

9001c4b8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
9001c4b8:	4770      	bx	lr

9001c4ba <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
9001c4ba:	4770      	bx	lr

9001c4bc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
9001c4bc:	4770      	bx	lr

9001c4be <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
9001c4be:	4770      	bx	lr

9001c4c0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001c4c0:	4770      	bx	lr

9001c4c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001c4c2:	4770      	bx	lr

9001c4c4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001c4c4:	4770      	bx	lr

9001c4c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
9001c4c6:	4770      	bx	lr

9001c4c8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001c4c8:	4770      	bx	lr

9001c4ca <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
9001c4ca:	4770      	bx	lr

9001c4cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001c4cc:	4770      	bx	lr

9001c4ce <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001c4ce:	4770      	bx	lr

9001c4d0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
9001c4d0:	4770      	bx	lr

9001c4d2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
9001c4d2:	4770      	bx	lr

9001c4d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001c4d4:	4770      	bx	lr

9001c4d6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
9001c4d6:	4770      	bx	lr

9001c4d8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001c4d8:	4770      	bx	lr

9001c4da <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001c4da:	4770      	bx	lr

9001c4dc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001c4dc:	4770      	bx	lr

9001c4de <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
9001c4de:	4770      	bx	lr

9001c4e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001c4e0:	4770      	bx	lr

9001c4e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
9001c4e2:	4770      	bx	lr

9001c4e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
9001c4e4:	4770      	bx	lr

9001c4e6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
9001c4e6:	4770      	bx	lr

9001c4e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001c4e8:	4770      	bx	lr

9001c4ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
9001c4ea:	4770      	bx	lr

9001c4ec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
9001c4ec:	4770      	bx	lr

9001c4ee <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
9001c4ee:	4770      	bx	lr

9001c4f0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
9001c4f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001c4f4:	b088      	sub	sp, #32
9001c4f6:	4606      	mov	r6, r0
9001c4f8:	4688      	mov	r8, r1
9001c4fa:	4691      	mov	r9, r2
9001c4fc:	ac08      	add	r4, sp, #32
9001c4fe:	f824 3d0c 	strh.w	r3, [r4, #-12]!
9001c502:	4620      	mov	r0, r4
9001c504:	f7fd fc64 	bl	90019dd0 <_ZNK8touchgfx6Bitmap7getDataEv>
9001c508:	6833      	ldr	r3, [r6, #0]
9001c50a:	4605      	mov	r5, r0
9001c50c:	4620      	mov	r0, r4
9001c50e:	699f      	ldr	r7, [r3, #24]
9001c510:	f7fd fb72 	bl	90019bf8 <_ZNK8touchgfx6Bitmap8getWidthEv>
9001c514:	4682      	mov	sl, r0
9001c516:	4620      	mov	r0, r4
9001c518:	f7fd fba2 	bl	90019c60 <_ZNK8touchgfx6Bitmap9getHeightEv>
9001c51c:	9500      	str	r5, [sp, #0]
9001c51e:	464b      	mov	r3, r9
9001c520:	4642      	mov	r2, r8
9001c522:	4631      	mov	r1, r6
9001c524:	e9cd a001 	strd	sl, r0, [sp, #4]
9001c528:	a806      	add	r0, sp, #24
9001c52a:	47b8      	blx	r7
9001c52c:	4628      	mov	r0, r5
9001c52e:	b008      	add	sp, #32
9001c530:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

9001c534 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
9001c534:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
9001c538:	2300      	movs	r3, #0
9001c53a:	9300      	str	r3, [sp, #0]
9001c53c:	4b3d      	ldr	r3, [pc, #244]	; (9001c634 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
9001c53e:	781b      	ldrb	r3, [r3, #0]
9001c540:	2b00      	cmp	r3, #0
9001c542:	d137      	bne.n	9001c5b4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
9001c544:	4a3c      	ldr	r2, [pc, #240]	; (9001c638 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001c546:	f9b2 2000 	ldrsh.w	r2, [r2]
9001c54a:	f8ad 2004 	strh.w	r2, [sp, #4]
9001c54e:	2b00      	cmp	r3, #0
9001c550:	d132      	bne.n	9001c5b8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
9001c552:	4b3a      	ldr	r3, [pc, #232]	; (9001c63c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
9001c554:	f9b3 3000 	ldrsh.w	r3, [r3]
9001c558:	ac02      	add	r4, sp, #8
9001c55a:	6808      	ldr	r0, [r1, #0]
9001c55c:	f8ad 3006 	strh.w	r3, [sp, #6]
9001c560:	ab02      	add	r3, sp, #8
9001c562:	6849      	ldr	r1, [r1, #4]
9001c564:	4d36      	ldr	r5, [pc, #216]	; (9001c640 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
9001c566:	c303      	stmia	r3!, {r0, r1}
9001c568:	4669      	mov	r1, sp
9001c56a:	4620      	mov	r0, r4
9001c56c:	f7fa f828 	bl	900165c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001c570:	4668      	mov	r0, sp
9001c572:	f7f9 ffe1 	bl	90016538 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001c576:	f8bd 3008 	ldrh.w	r3, [sp, #8]
9001c57a:	f8bd 2000 	ldrh.w	r2, [sp]
9001c57e:	462f      	mov	r7, r5
9001c580:	6828      	ldr	r0, [r5, #0]
9001c582:	4413      	add	r3, r2
9001c584:	f8bd 2002 	ldrh.w	r2, [sp, #2]
9001c588:	f8ad 3008 	strh.w	r3, [sp, #8]
9001c58c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
9001c590:	4413      	add	r3, r2
9001c592:	f8ad 300a 	strh.w	r3, [sp, #10]
9001c596:	6803      	ldr	r3, [r0, #0]
9001c598:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001c59a:	4798      	blx	r3
9001c59c:	f010 0f01 	tst.w	r0, #1
9001c5a0:	d00c      	beq.n	9001c5bc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
9001c5a2:	6828      	ldr	r0, [r5, #0]
9001c5a4:	6803      	ldr	r3, [r0, #0]
9001c5a6:	e894 0006 	ldmia.w	r4, {r1, r2}
9001c5aa:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
9001c5ac:	4798      	blx	r3
9001c5ae:	b004      	add	sp, #16
9001c5b0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001c5b4:	4a21      	ldr	r2, [pc, #132]	; (9001c63c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
9001c5b6:	e7c6      	b.n	9001c546 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
9001c5b8:	4b1f      	ldr	r3, [pc, #124]	; (9001c638 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001c5ba:	e7cb      	b.n	9001c554 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
9001c5bc:	6838      	ldr	r0, [r7, #0]
9001c5be:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
9001c5c2:	6803      	ldr	r3, [r0, #0]
9001c5c4:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
9001c5c8:	ea4f 0848 	mov.w	r8, r8, lsl #1
9001c5cc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9001c5ce:	4798      	blx	r3
9001c5d0:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
9001c5d4:	f8bd 200a 	ldrh.w	r2, [sp, #10]
9001c5d8:	f8bd 6004 	ldrh.w	r6, [sp, #4]
9001c5dc:	fb16 3602 	smlabb	r6, r6, r2, r3
9001c5e0:	eb00 0646 	add.w	r6, r0, r6, lsl #1
9001c5e4:	6838      	ldr	r0, [r7, #0]
9001c5e6:	6803      	ldr	r3, [r0, #0]
9001c5e8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001c5ea:	4798      	blx	r3
9001c5ec:	4a12      	ldr	r2, [pc, #72]	; (9001c638 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001c5ee:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
9001c5f2:	8813      	ldrh	r3, [r2, #0]
9001c5f4:	4691      	mov	r9, r2
9001c5f6:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
9001c5fa:	435d      	muls	r5, r3
9001c5fc:	fb03 1404 	mla	r4, r3, r4, r1
9001c600:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9001c604:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001c608:	6838      	ldr	r0, [r7, #0]
9001c60a:	42ac      	cmp	r4, r5
9001c60c:	6803      	ldr	r3, [r0, #0]
9001c60e:	d20e      	bcs.n	9001c62e <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
9001c610:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
9001c614:	4632      	mov	r2, r6
9001c616:	4643      	mov	r3, r8
9001c618:	4621      	mov	r1, r4
9001c61a:	47d0      	blx	sl
9001c61c:	f8b9 3000 	ldrh.w	r3, [r9]
9001c620:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001c624:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
9001c628:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001c62c:	e7ec      	b.n	9001c608 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
9001c62e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001c630:	4798      	blx	r3
9001c632:	e7bc      	b.n	9001c5ae <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
9001c634:	2403982c 	.word	0x2403982c
9001c638:	2403982e 	.word	0x2403982e
9001c63c:	24039830 	.word	0x24039830
9001c640:	24039834 	.word	0x24039834

9001c644 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
9001c644:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c648:	b08b      	sub	sp, #44	; 0x2c
9001c64a:	460f      	mov	r7, r1
9001c64c:	4616      	mov	r6, r2
9001c64e:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
9001c652:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
9001c656:	f1bb 0f00 	cmp.w	fp, #0
9001c65a:	d04a      	beq.n	9001c6f2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
9001c65c:	6810      	ldr	r0, [r2, #0]
9001c65e:	ad06      	add	r5, sp, #24
9001c660:	6851      	ldr	r1, [r2, #4]
9001c662:	c503      	stmia	r5!, {r0, r1}
9001c664:	6818      	ldr	r0, [r3, #0]
9001c666:	ad08      	add	r5, sp, #32
9001c668:	6859      	ldr	r1, [r3, #4]
9001c66a:	c503      	stmia	r5!, {r0, r1}
9001c66c:	a806      	add	r0, sp, #24
9001c66e:	f7f9 ff63 	bl	90016538 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001c672:	4631      	mov	r1, r6
9001c674:	a808      	add	r0, sp, #32
9001c676:	f7f9 ffa3 	bl	900165c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001c67a:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
9001c67e:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
9001c682:	f8bd 601c 	ldrh.w	r6, [sp, #28]
9001c686:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
9001c68a:	fb16 2103 	smlabb	r1, r6, r3, r2
9001c68e:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
9001c692:	eb07 0641 	add.w	r6, r7, r1, lsl #1
9001c696:	f8bd 1018 	ldrh.w	r1, [sp, #24]
9001c69a:	4f5f      	ldr	r7, [pc, #380]	; (9001c818 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
9001c69c:	440a      	add	r2, r1
9001c69e:	6838      	ldr	r0, [r7, #0]
9001c6a0:	46b9      	mov	r9, r7
9001c6a2:	f8ad 2020 	strh.w	r2, [sp, #32]
9001c6a6:	f8bd 201a 	ldrh.w	r2, [sp, #26]
9001c6aa:	4413      	add	r3, r2
9001c6ac:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
9001c6b0:	6803      	ldr	r3, [r0, #0]
9001c6b2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001c6b4:	4798      	blx	r3
9001c6b6:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
9001c6ba:	d11d      	bne.n	9001c6f8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
9001c6bc:	b9fc      	cbnz	r4, 9001c6fe <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
9001c6be:	f010 0f01 	tst.w	r0, #1
9001c6c2:	d01c      	beq.n	9001c6fe <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
9001c6c4:	f8d9 0000 	ldr.w	r0, [r9]
9001c6c8:	2700      	movs	r7, #0
9001c6ca:	b2ad      	uxth	r5, r5
9001c6cc:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
9001c6d0:	6801      	ldr	r1, [r0, #0]
9001c6d2:	f8bd 2020 	ldrh.w	r2, [sp, #32]
9001c6d6:	f8cd b00c 	str.w	fp, [sp, #12]
9001c6da:	9501      	str	r5, [sp, #4]
9001c6dc:	e9cd 4704 	strd	r4, r7, [sp, #16]
9001c6e0:	f8bd 401c 	ldrh.w	r4, [sp, #28]
9001c6e4:	9402      	str	r4, [sp, #8]
9001c6e6:	fa1f f488 	uxth.w	r4, r8
9001c6ea:	9400      	str	r4, [sp, #0]
9001c6ec:	6c4c      	ldr	r4, [r1, #68]	; 0x44
9001c6ee:	4631      	mov	r1, r6
9001c6f0:	47a0      	blx	r4
9001c6f2:	b00b      	add	sp, #44	; 0x2c
9001c6f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001c6f8:	f010 0f04 	tst.w	r0, #4
9001c6fc:	e7e1      	b.n	9001c6c2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
9001c6fe:	f8d9 0000 	ldr.w	r0, [r9]
9001c702:	ea4f 0748 	mov.w	r7, r8, lsl #1
9001c706:	6803      	ldr	r3, [r0, #0]
9001c708:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001c70a:	4798      	blx	r3
9001c70c:	4b43      	ldr	r3, [pc, #268]	; (9001c81c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
9001c70e:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
9001c712:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
9001c716:	881a      	ldrh	r2, [r3, #0]
9001c718:	469a      	mov	sl, r3
9001c71a:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
9001c71e:	fb05 f502 	mul.w	r5, r5, r2
9001c722:	fb02 1404 	mla	r4, r2, r4, r1
9001c726:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9001c72a:	d059      	beq.n	9001c7e0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
9001c72c:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
9001c730:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001c734:	fa1f f28b 	uxth.w	r2, fp
9001c738:	469e      	mov	lr, r3
9001c73a:	fa1f f989 	uxth.w	r9, r9
9001c73e:	42ac      	cmp	r4, r5
9001c740:	d264      	bcs.n	9001c80c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
9001c742:	eb04 0a07 	add.w	sl, r4, r7
9001c746:	4554      	cmp	r4, sl
9001c748:	d23d      	bcs.n	9001c7c6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
9001c74a:	8821      	ldrh	r1, [r4, #0]
9001c74c:	f836 3b02 	ldrh.w	r3, [r6], #2
9001c750:	1208      	asrs	r0, r1, #8
9001c752:	ea4f 2c23 	mov.w	ip, r3, asr #8
9001c756:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
9001c75a:	ea4f 0be1 	mov.w	fp, r1, asr #3
9001c75e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001c762:	00c9      	lsls	r1, r1, #3
9001c764:	fb10 f009 	smulbb	r0, r0, r9
9001c768:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
9001c76c:	b2c9      	uxtb	r1, r1
9001c76e:	fb0c 0c02 	mla	ip, ip, r2, r0
9001c772:	10d8      	asrs	r0, r3, #3
9001c774:	fb1b fb09 	smulbb	fp, fp, r9
9001c778:	00db      	lsls	r3, r3, #3
9001c77a:	fa1f fc8c 	uxth.w	ip, ip
9001c77e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
9001c782:	fb11 f109 	smulbb	r1, r1, r9
9001c786:	b2db      	uxtb	r3, r3
9001c788:	fb00 b002 	mla	r0, r0, r2, fp
9001c78c:	f10c 0b01 	add.w	fp, ip, #1
9001c790:	fb03 1302 	mla	r3, r3, r2, r1
9001c794:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
9001c798:	b29b      	uxth	r3, r3
9001c79a:	b280      	uxth	r0, r0
9001c79c:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
9001c7a0:	f103 0c01 	add.w	ip, r3, #1
9001c7a4:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
9001c7a8:	1c43      	adds	r3, r0, #1
9001c7aa:	eb03 2010 	add.w	r0, r3, r0, lsr #8
9001c7ae:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001c7b2:	0940      	lsrs	r0, r0, #5
9001c7b4:	ea4c 0c0b 	orr.w	ip, ip, fp
9001c7b8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9001c7bc:	ea4c 0c00 	orr.w	ip, ip, r0
9001c7c0:	f824 cb02 	strh.w	ip, [r4], #2
9001c7c4:	e7bf      	b.n	9001c746 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
9001c7c6:	f8be 3000 	ldrh.w	r3, [lr]
9001c7ca:	eba3 0308 	sub.w	r3, r3, r8
9001c7ce:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001c7d2:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
9001c7d6:	eba3 0308 	sub.w	r3, r3, r8
9001c7da:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001c7de:	e7ae      	b.n	9001c73e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
9001c7e0:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001c7e4:	f8d9 0000 	ldr.w	r0, [r9]
9001c7e8:	42ac      	cmp	r4, r5
9001c7ea:	6803      	ldr	r3, [r0, #0]
9001c7ec:	d20e      	bcs.n	9001c80c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
9001c7ee:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
9001c7f2:	4632      	mov	r2, r6
9001c7f4:	463b      	mov	r3, r7
9001c7f6:	4621      	mov	r1, r4
9001c7f8:	47c0      	blx	r8
9001c7fa:	f8ba 3000 	ldrh.w	r3, [sl]
9001c7fe:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001c802:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
9001c806:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001c80a:	e7eb      	b.n	9001c7e4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
9001c80c:	4b02      	ldr	r3, [pc, #8]	; (9001c818 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
9001c80e:	6818      	ldr	r0, [r3, #0]
9001c810:	6803      	ldr	r3, [r0, #0]
9001c812:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001c814:	4798      	blx	r3
9001c816:	e76c      	b.n	9001c6f2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
9001c818:	24039834 	.word	0x24039834
9001c81c:	2403982e 	.word	0x2403982e

9001c820 <_ZN8touchgfx8LCD16bppD0Ev>:
9001c820:	b510      	push	{r4, lr}
9001c822:	4604      	mov	r4, r0
9001c824:	2184      	movs	r1, #132	; 0x84
9001c826:	f00b f97b 	bl	90027b20 <_ZdlPvj>
9001c82a:	4620      	mov	r0, r4
9001c82c:	bd10      	pop	{r4, pc}

9001c82e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
9001c82e:	b510      	push	{r4, lr}
9001c830:	4604      	mov	r4, r0
9001c832:	2104      	movs	r1, #4
9001c834:	f00b f974 	bl	90027b20 <_ZdlPvj>
9001c838:	4620      	mov	r0, r4
9001c83a:	bd10      	pop	{r4, pc}

9001c83c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
9001c83c:	b510      	push	{r4, lr}
9001c83e:	4604      	mov	r4, r0
9001c840:	2104      	movs	r1, #4
9001c842:	f00b f96d 	bl	90027b20 <_ZdlPvj>
9001c846:	4620      	mov	r0, r4
9001c848:	bd10      	pop	{r4, pc}

9001c84a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
9001c84a:	b510      	push	{r4, lr}
9001c84c:	4604      	mov	r4, r0
9001c84e:	f640 0144 	movw	r1, #2116	; 0x844
9001c852:	f00b f965 	bl	90027b20 <_ZdlPvj>
9001c856:	4620      	mov	r0, r4
9001c858:	bd10      	pop	{r4, pc}

9001c85a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001c85a:	b510      	push	{r4, lr}
9001c85c:	4604      	mov	r4, r0
9001c85e:	2104      	movs	r1, #4
9001c860:	f00b f95e 	bl	90027b20 <_ZdlPvj>
9001c864:	4620      	mov	r0, r4
9001c866:	bd10      	pop	{r4, pc}

9001c868 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
9001c868:	b510      	push	{r4, lr}
9001c86a:	4604      	mov	r4, r0
9001c86c:	2104      	movs	r1, #4
9001c86e:	f00b f957 	bl	90027b20 <_ZdlPvj>
9001c872:	4620      	mov	r0, r4
9001c874:	bd10      	pop	{r4, pc}

9001c876 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
9001c876:	b510      	push	{r4, lr}
9001c878:	4604      	mov	r4, r0
9001c87a:	2104      	movs	r1, #4
9001c87c:	f00b f950 	bl	90027b20 <_ZdlPvj>
9001c880:	4620      	mov	r0, r4
9001c882:	bd10      	pop	{r4, pc}

9001c884 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
9001c884:	b510      	push	{r4, lr}
9001c886:	4604      	mov	r4, r0
9001c888:	2104      	movs	r1, #4
9001c88a:	f00b f949 	bl	90027b20 <_ZdlPvj>
9001c88e:	4620      	mov	r0, r4
9001c890:	bd10      	pop	{r4, pc}

9001c892 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001c892:	b510      	push	{r4, lr}
9001c894:	4604      	mov	r4, r0
9001c896:	2104      	movs	r1, #4
9001c898:	f00b f942 	bl	90027b20 <_ZdlPvj>
9001c89c:	4620      	mov	r0, r4
9001c89e:	bd10      	pop	{r4, pc}

9001c8a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
9001c8a0:	b510      	push	{r4, lr}
9001c8a2:	4604      	mov	r4, r0
9001c8a4:	2104      	movs	r1, #4
9001c8a6:	f00b f93b 	bl	90027b20 <_ZdlPvj>
9001c8aa:	4620      	mov	r0, r4
9001c8ac:	bd10      	pop	{r4, pc}

9001c8ae <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
9001c8ae:	b510      	push	{r4, lr}
9001c8b0:	4604      	mov	r4, r0
9001c8b2:	2104      	movs	r1, #4
9001c8b4:	f00b f934 	bl	90027b20 <_ZdlPvj>
9001c8b8:	4620      	mov	r0, r4
9001c8ba:	bd10      	pop	{r4, pc}

9001c8bc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
9001c8bc:	b510      	push	{r4, lr}
9001c8be:	4604      	mov	r4, r0
9001c8c0:	2104      	movs	r1, #4
9001c8c2:	f00b f92d 	bl	90027b20 <_ZdlPvj>
9001c8c6:	4620      	mov	r0, r4
9001c8c8:	bd10      	pop	{r4, pc}

9001c8ca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001c8ca:	b510      	push	{r4, lr}
9001c8cc:	4604      	mov	r4, r0
9001c8ce:	2104      	movs	r1, #4
9001c8d0:	f00b f926 	bl	90027b20 <_ZdlPvj>
9001c8d4:	4620      	mov	r0, r4
9001c8d6:	bd10      	pop	{r4, pc}

9001c8d8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001c8d8:	b510      	push	{r4, lr}
9001c8da:	4604      	mov	r4, r0
9001c8dc:	2104      	movs	r1, #4
9001c8de:	f00b f91f 	bl	90027b20 <_ZdlPvj>
9001c8e2:	4620      	mov	r0, r4
9001c8e4:	bd10      	pop	{r4, pc}

9001c8e6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001c8e6:	b510      	push	{r4, lr}
9001c8e8:	4604      	mov	r4, r0
9001c8ea:	2104      	movs	r1, #4
9001c8ec:	f00b f918 	bl	90027b20 <_ZdlPvj>
9001c8f0:	4620      	mov	r0, r4
9001c8f2:	bd10      	pop	{r4, pc}

9001c8f4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
9001c8f4:	b510      	push	{r4, lr}
9001c8f6:	4604      	mov	r4, r0
9001c8f8:	2104      	movs	r1, #4
9001c8fa:	f00b f911 	bl	90027b20 <_ZdlPvj>
9001c8fe:	4620      	mov	r0, r4
9001c900:	bd10      	pop	{r4, pc}

9001c902 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001c902:	b510      	push	{r4, lr}
9001c904:	4604      	mov	r4, r0
9001c906:	2104      	movs	r1, #4
9001c908:	f00b f90a 	bl	90027b20 <_ZdlPvj>
9001c90c:	4620      	mov	r0, r4
9001c90e:	bd10      	pop	{r4, pc}

9001c910 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
9001c910:	b510      	push	{r4, lr}
9001c912:	4604      	mov	r4, r0
9001c914:	2104      	movs	r1, #4
9001c916:	f00b f903 	bl	90027b20 <_ZdlPvj>
9001c91a:	4620      	mov	r0, r4
9001c91c:	bd10      	pop	{r4, pc}

9001c91e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001c91e:	b510      	push	{r4, lr}
9001c920:	4604      	mov	r4, r0
9001c922:	2104      	movs	r1, #4
9001c924:	f00b f8fc 	bl	90027b20 <_ZdlPvj>
9001c928:	4620      	mov	r0, r4
9001c92a:	bd10      	pop	{r4, pc}

9001c92c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001c92c:	b510      	push	{r4, lr}
9001c92e:	4604      	mov	r4, r0
9001c930:	2104      	movs	r1, #4
9001c932:	f00b f8f5 	bl	90027b20 <_ZdlPvj>
9001c936:	4620      	mov	r0, r4
9001c938:	bd10      	pop	{r4, pc}

9001c93a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
9001c93a:	b510      	push	{r4, lr}
9001c93c:	4604      	mov	r4, r0
9001c93e:	2104      	movs	r1, #4
9001c940:	f00b f8ee 	bl	90027b20 <_ZdlPvj>
9001c944:	4620      	mov	r0, r4
9001c946:	bd10      	pop	{r4, pc}

9001c948 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
9001c948:	b510      	push	{r4, lr}
9001c94a:	4604      	mov	r4, r0
9001c94c:	2104      	movs	r1, #4
9001c94e:	f00b f8e7 	bl	90027b20 <_ZdlPvj>
9001c952:	4620      	mov	r0, r4
9001c954:	bd10      	pop	{r4, pc}

9001c956 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001c956:	b510      	push	{r4, lr}
9001c958:	4604      	mov	r4, r0
9001c95a:	2104      	movs	r1, #4
9001c95c:	f00b f8e0 	bl	90027b20 <_ZdlPvj>
9001c960:	4620      	mov	r0, r4
9001c962:	bd10      	pop	{r4, pc}

9001c964 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
9001c964:	b510      	push	{r4, lr}
9001c966:	4604      	mov	r4, r0
9001c968:	2104      	movs	r1, #4
9001c96a:	f00b f8d9 	bl	90027b20 <_ZdlPvj>
9001c96e:	4620      	mov	r0, r4
9001c970:	bd10      	pop	{r4, pc}

9001c972 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001c972:	b510      	push	{r4, lr}
9001c974:	4604      	mov	r4, r0
9001c976:	2104      	movs	r1, #4
9001c978:	f00b f8d2 	bl	90027b20 <_ZdlPvj>
9001c97c:	4620      	mov	r0, r4
9001c97e:	bd10      	pop	{r4, pc}

9001c980 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001c980:	b510      	push	{r4, lr}
9001c982:	4604      	mov	r4, r0
9001c984:	2104      	movs	r1, #4
9001c986:	f00b f8cb 	bl	90027b20 <_ZdlPvj>
9001c98a:	4620      	mov	r0, r4
9001c98c:	bd10      	pop	{r4, pc}

9001c98e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001c98e:	b510      	push	{r4, lr}
9001c990:	4604      	mov	r4, r0
9001c992:	2104      	movs	r1, #4
9001c994:	f00b f8c4 	bl	90027b20 <_ZdlPvj>
9001c998:	4620      	mov	r0, r4
9001c99a:	bd10      	pop	{r4, pc}

9001c99c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
9001c99c:	b510      	push	{r4, lr}
9001c99e:	4604      	mov	r4, r0
9001c9a0:	2104      	movs	r1, #4
9001c9a2:	f00b f8bd 	bl	90027b20 <_ZdlPvj>
9001c9a6:	4620      	mov	r0, r4
9001c9a8:	bd10      	pop	{r4, pc}

9001c9aa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
9001c9aa:	b510      	push	{r4, lr}
9001c9ac:	4604      	mov	r4, r0
9001c9ae:	2104      	movs	r1, #4
9001c9b0:	f00b f8b6 	bl	90027b20 <_ZdlPvj>
9001c9b4:	4620      	mov	r0, r4
9001c9b6:	bd10      	pop	{r4, pc}

9001c9b8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
9001c9b8:	b510      	push	{r4, lr}
9001c9ba:	4604      	mov	r4, r0
9001c9bc:	2104      	movs	r1, #4
9001c9be:	f00b f8af 	bl	90027b20 <_ZdlPvj>
9001c9c2:	4620      	mov	r0, r4
9001c9c4:	bd10      	pop	{r4, pc}

9001c9c6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
9001c9c6:	b510      	push	{r4, lr}
9001c9c8:	4604      	mov	r4, r0
9001c9ca:	2104      	movs	r1, #4
9001c9cc:	f00b f8a8 	bl	90027b20 <_ZdlPvj>
9001c9d0:	4620      	mov	r0, r4
9001c9d2:	bd10      	pop	{r4, pc}

9001c9d4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
9001c9d4:	b510      	push	{r4, lr}
9001c9d6:	4604      	mov	r4, r0
9001c9d8:	2104      	movs	r1, #4
9001c9da:	f00b f8a1 	bl	90027b20 <_ZdlPvj>
9001c9de:	4620      	mov	r0, r4
9001c9e0:	bd10      	pop	{r4, pc}
	...

9001c9e4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
9001c9e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c9e8:	b08f      	sub	sp, #60	; 0x3c
9001c9ea:	461c      	mov	r4, r3
9001c9ec:	9205      	str	r2, [sp, #20]
9001c9ee:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001c9f2:	9100      	str	r1, [sp, #0]
9001c9f4:	9b18      	ldr	r3, [sp, #96]	; 0x60
9001c9f6:	9201      	str	r2, [sp, #4]
9001c9f8:	2a00      	cmp	r2, #0
9001c9fa:	f000 8116 	beq.w	9001cc2a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x246>
9001c9fe:	6820      	ldr	r0, [r4, #0]
9001ca00:	aa0a      	add	r2, sp, #40	; 0x28
9001ca02:	6861      	ldr	r1, [r4, #4]
9001ca04:	c203      	stmia	r2!, {r0, r1}
9001ca06:	6818      	ldr	r0, [r3, #0]
9001ca08:	aa0c      	add	r2, sp, #48	; 0x30
9001ca0a:	6859      	ldr	r1, [r3, #4]
9001ca0c:	c203      	stmia	r2!, {r0, r1}
9001ca0e:	a80a      	add	r0, sp, #40	; 0x28
9001ca10:	f7f9 fd92 	bl	90016538 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001ca14:	4621      	mov	r1, r4
9001ca16:	a80c      	add	r0, sp, #48	; 0x30
9001ca18:	f7f9 fdd2 	bl	900165c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001ca1c:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
9001ca20:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
9001ca24:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
9001ca28:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
9001ca2c:	bfdb      	ittet	le
9001ca2e:	b2b3      	uxthle	r3, r6
9001ca30:	f44f 6280 	movle.w	r2, #1024	; 0x400
9001ca34:	2301      	movgt	r3, #1
9001ca36:	fb92 f3f3 	sdivle	r3, r2, r3
9001ca3a:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
9001ca3e:	441d      	add	r5, r3
9001ca40:	fb92 f1f3 	sdiv	r1, r2, r3
9001ca44:	fa1f fc81 	uxth.w	ip, r1
9001ca48:	3d01      	subs	r5, #1
9001ca4a:	fb0c 2413 	mls	r4, ip, r3, r2
9001ca4e:	4661      	mov	r1, ip
9001ca50:	fb14 f406 	smulbb	r4, r4, r6
9001ca54:	4404      	add	r4, r0
9001ca56:	fb95 f5f3 	sdiv	r5, r5, r3
9001ca5a:	b2a4      	uxth	r4, r4
9001ca5c:	b131      	cbz	r1, 9001ca6c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x88>
9001ca5e:	9b05      	ldr	r3, [sp, #20]
9001ca60:	9900      	ldr	r1, [sp, #0]
9001ca62:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
9001ca66:	ba1b      	rev	r3, r3
9001ca68:	4419      	add	r1, r3
9001ca6a:	9100      	str	r1, [sp, #0]
9001ca6c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
9001ca70:	b2ad      	uxth	r5, r5
9001ca72:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
9001ca76:	4418      	add	r0, r3
9001ca78:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
9001ca7c:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
9001ca80:	00ad      	lsls	r5, r5, #2
9001ca82:	441a      	add	r2, r3
9001ca84:	4b6a      	ldr	r3, [pc, #424]	; (9001cc30 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
9001ca86:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
9001ca8a:	6818      	ldr	r0, [r3, #0]
9001ca8c:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
9001ca90:	6803      	ldr	r3, [r0, #0]
9001ca92:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001ca94:	4798      	blx	r3
9001ca96:	4967      	ldr	r1, [pc, #412]	; (9001cc34 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
9001ca98:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
9001ca9c:	2c00      	cmp	r4, #0
9001ca9e:	880b      	ldrh	r3, [r1, #0]
9001caa0:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
9001caa4:	bf0c      	ite	eq
9001caa6:	46c6      	moveq	lr, r8
9001caa8:	f04f 0e00 	movne.w	lr, #0
9001caac:	9109      	str	r1, [sp, #36]	; 0x24
9001caae:	fb03 c202 	mla	r2, r3, r2, ip
9001cab2:	f8bd 1004 	ldrh.w	r1, [sp, #4]
9001cab6:	4373      	muls	r3, r6
9001cab8:	fa1f fe8e 	uxth.w	lr, lr
9001cabc:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001cac0:	9103      	str	r1, [sp, #12]
9001cac2:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001cac6:	9306      	str	r3, [sp, #24]
9001cac8:	1d2b      	adds	r3, r5, #4
9001caca:	9307      	str	r3, [sp, #28]
9001cacc:	9b01      	ldr	r3, [sp, #4]
9001cace:	f1c3 02ff 	rsb	r2, r3, #255	; 0xff
9001cad2:	2300      	movs	r3, #0
9001cad4:	b292      	uxth	r2, r2
9001cad6:	9302      	str	r3, [sp, #8]
9001cad8:	9204      	str	r2, [sp, #16]
9001cada:	9a06      	ldr	r2, [sp, #24]
9001cadc:	4282      	cmp	r2, r0
9001cade:	f240 809f 	bls.w	9001cc20 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23c>
9001cae2:	b963      	cbnz	r3, 9001cafe <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
9001cae4:	9b00      	ldr	r3, [sp, #0]
9001cae6:	781a      	ldrb	r2, [r3, #0]
9001cae8:	0993      	lsrs	r3, r2, #6
9001caea:	f002 023f 	and.w	r2, r2, #63	; 0x3f
9001caee:	9202      	str	r2, [sp, #8]
9001caf0:	1e5a      	subs	r2, r3, #1
9001caf2:	2a02      	cmp	r2, #2
9001caf4:	d815      	bhi.n	9001cb22 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
9001caf6:	9a00      	ldr	r2, [sp, #0]
9001caf8:	b29b      	uxth	r3, r3
9001cafa:	3201      	adds	r2, #1
9001cafc:	9200      	str	r2, [sp, #0]
9001cafe:	b1b4      	cbz	r4, 9001cb2e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14a>
9001cb00:	429c      	cmp	r4, r3
9001cb02:	bf91      	iteee	ls
9001cb04:	1b1c      	subls	r4, r3, r4
9001cb06:	1ae4      	subhi	r4, r4, r3
9001cb08:	4671      	movhi	r1, lr
9001cb0a:	f04f 0a00 	movhi.w	sl, #0
9001cb0e:	bf9b      	ittet	ls
9001cb10:	fa1f fa84 	uxthls.w	sl, r4
9001cb14:	2400      	movls	r4, #0
9001cb16:	b2a4      	uxthhi	r4, r4
9001cb18:	fa1f f188 	uxthls.w	r1, r8
9001cb1c:	4653      	mov	r3, sl
9001cb1e:	468e      	mov	lr, r1
9001cb20:	e7db      	b.n	9001cada <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf6>
9001cb22:	9a00      	ldr	r2, [sp, #0]
9001cb24:	9b00      	ldr	r3, [sp, #0]
9001cb26:	3202      	adds	r2, #2
9001cb28:	785b      	ldrb	r3, [r3, #1]
9001cb2a:	9200      	str	r2, [sp, #0]
9001cb2c:	e7e7      	b.n	9001cafe <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
9001cb2e:	2202      	movs	r2, #2
9001cb30:	9907      	ldr	r1, [sp, #28]
9001cb32:	4573      	cmp	r3, lr
9001cb34:	4615      	mov	r5, r2
9001cb36:	9a02      	ldr	r2, [sp, #8]
9001cb38:	bf24      	itt	cs
9001cb3a:	eba3 0a0e 	subcs.w	sl, r3, lr
9001cb3e:	46f1      	movcs	r9, lr
9001cb40:	fb15 1202 	smlabb	r2, r5, r2, r1
9001cb44:	9905      	ldr	r1, [sp, #20]
9001cb46:	bf34      	ite	cc
9001cb48:	4699      	movcc	r9, r3
9001cb4a:	fa1f fa8a 	uxthcs.w	sl, sl
9001cb4e:	f831 c002 	ldrh.w	ip, [r1, r2]
9001cb52:	bf38      	it	cc
9001cb54:	ebae 0103 	subcc.w	r1, lr, r3
9001cb58:	9a01      	ldr	r2, [sp, #4]
9001cb5a:	bf2e      	itee	cs
9001cb5c:	4621      	movcs	r1, r4
9001cb5e:	b289      	uxthcc	r1, r1
9001cb60:	46a2      	movcc	sl, r4
9001cb62:	2aff      	cmp	r2, #255	; 0xff
9001cb64:	ea4f 0949 	mov.w	r9, r9, lsl #1
9001cb68:	d105      	bne.n	9001cb76 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x192>
9001cb6a:	4481      	add	r9, r0
9001cb6c:	4581      	cmp	r9, r0
9001cb6e:	d045      	beq.n	9001cbfc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
9001cb70:	f820 cb02 	strh.w	ip, [r0], #2
9001cb74:	e7fa      	b.n	9001cb6c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x188>
9001cb76:	ea4f 222c 	mov.w	r2, ip, asr #8
9001cb7a:	9d03      	ldr	r5, [sp, #12]
9001cb7c:	ea4f 0bec 	mov.w	fp, ip, asr #3
9001cb80:	4481      	add	r9, r0
9001cb82:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001cb86:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
9001cb8a:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
9001cb8e:	fa5f fc8c 	uxtb.w	ip, ip
9001cb92:	436a      	muls	r2, r5
9001cb94:	fb0b fb05 	mul.w	fp, fp, r5
9001cb98:	fb0c fc05 	mul.w	ip, ip, r5
9001cb9c:	9208      	str	r2, [sp, #32]
9001cb9e:	4581      	cmp	r9, r0
9001cba0:	d02c      	beq.n	9001cbfc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
9001cba2:	8802      	ldrh	r2, [r0, #0]
9001cba4:	9d04      	ldr	r5, [sp, #16]
9001cba6:	1216      	asrs	r6, r2, #8
9001cba8:	9f04      	ldr	r7, [sp, #16]
9001cbaa:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001cbae:	fb16 f605 	smulbb	r6, r6, r5
9001cbb2:	9d08      	ldr	r5, [sp, #32]
9001cbb4:	442e      	add	r6, r5
9001cbb6:	10d5      	asrs	r5, r2, #3
9001cbb8:	00d2      	lsls	r2, r2, #3
9001cbba:	b2b6      	uxth	r6, r6
9001cbbc:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9001cbc0:	b2d2      	uxtb	r2, r2
9001cbc2:	fb15 f507 	smulbb	r5, r5, r7
9001cbc6:	fb12 f207 	smulbb	r2, r2, r7
9001cbca:	1c77      	adds	r7, r6, #1
9001cbcc:	445d      	add	r5, fp
9001cbce:	4462      	add	r2, ip
9001cbd0:	eb07 2616 	add.w	r6, r7, r6, lsr #8
9001cbd4:	b2ad      	uxth	r5, r5
9001cbd6:	b292      	uxth	r2, r2
9001cbd8:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
9001cbdc:	1c57      	adds	r7, r2, #1
9001cbde:	eb07 2212 	add.w	r2, r7, r2, lsr #8
9001cbe2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001cbe6:	4316      	orrs	r6, r2
9001cbe8:	1c6a      	adds	r2, r5, #1
9001cbea:	eb02 2515 	add.w	r5, r2, r5, lsr #8
9001cbee:	096d      	lsrs	r5, r5, #5
9001cbf0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001cbf4:	432e      	orrs	r6, r5
9001cbf6:	f820 6b02 	strh.w	r6, [r0], #2
9001cbfa:	e7d0      	b.n	9001cb9e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ba>
9001cbfc:	4573      	cmp	r3, lr
9001cbfe:	d38d      	bcc.n	9001cb1c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
9001cc00:	fa1f f188 	uxth.w	r1, r8
9001cc04:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
9001cc08:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001cc0a:	1a64      	subs	r4, r4, r1
9001cc0c:	881b      	ldrh	r3, [r3, #0]
9001cc0e:	b2a4      	uxth	r4, r4
9001cc10:	eba3 0308 	sub.w	r3, r3, r8
9001cc14:	2c00      	cmp	r4, #0
9001cc16:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001cc1a:	bf18      	it	ne
9001cc1c:	2100      	movne	r1, #0
9001cc1e:	e77d      	b.n	9001cb1c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
9001cc20:	4b03      	ldr	r3, [pc, #12]	; (9001cc30 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
9001cc22:	6818      	ldr	r0, [r3, #0]
9001cc24:	6803      	ldr	r3, [r0, #0]
9001cc26:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001cc28:	4798      	blx	r3
9001cc2a:	b00f      	add	sp, #60	; 0x3c
9001cc2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001cc30:	24039834 	.word	0x24039834
9001cc34:	2403982e 	.word	0x2403982e

9001cc38 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
9001cc38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001cc3c:	b09f      	sub	sp, #124	; 0x7c
9001cc3e:	461d      	mov	r5, r3
9001cc40:	4604      	mov	r4, r0
9001cc42:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9001cc44:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
9001cc48:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
9001cc4c:	9209      	str	r2, [sp, #36]	; 0x24
9001cc4e:	2a00      	cmp	r2, #0
9001cc50:	f000 81ed 	beq.w	9001d02e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f6>
9001cc54:	6828      	ldr	r0, [r5, #0]
9001cc56:	aa1a      	add	r2, sp, #104	; 0x68
9001cc58:	6869      	ldr	r1, [r5, #4]
9001cc5a:	c203      	stmia	r2!, {r0, r1}
9001cc5c:	6818      	ldr	r0, [r3, #0]
9001cc5e:	aa1c      	add	r2, sp, #112	; 0x70
9001cc60:	6859      	ldr	r1, [r3, #4]
9001cc62:	c203      	stmia	r2!, {r0, r1}
9001cc64:	a81a      	add	r0, sp, #104	; 0x68
9001cc66:	f7f9 fc67 	bl	90016538 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001cc6a:	4629      	mov	r1, r5
9001cc6c:	a81c      	add	r0, sp, #112	; 0x70
9001cc6e:	f7f9 fca7 	bl	900165c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001cc72:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
9001cc76:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	; 0x6e
9001cc7a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
9001cc7e:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	; 0x76
9001cc82:	bfdb      	ittet	le
9001cc84:	b29a      	uxthle	r2, r3
9001cc86:	f44f 6180 	movle.w	r1, #1024	; 0x400
9001cc8a:	2201      	movgt	r2, #1
9001cc8c:	fb91 f2f2 	sdivle	r2, r1, r2
9001cc90:	9202      	str	r2, [sp, #8]
9001cc92:	9802      	ldr	r0, [sp, #8]
9001cc94:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
9001cc98:	9902      	ldr	r1, [sp, #8]
9001cc9a:	fb92 f0f0 	sdiv	r0, r2, r0
9001cc9e:	b280      	uxth	r0, r0
9001cca0:	4488      	add	r8, r1
9001cca2:	9010      	str	r0, [sp, #64]	; 0x40
9001cca4:	f108 38ff 	add.w	r8, r8, #4294967295
9001cca8:	9802      	ldr	r0, [sp, #8]
9001ccaa:	9d10      	ldr	r5, [sp, #64]	; 0x40
9001ccac:	fb05 2510 	mls	r5, r5, r0, r2
9001ccb0:	fb98 f8f1 	sdiv	r8, r8, r1
9001ccb4:	fb15 f503 	smulbb	r5, r5, r3
9001ccb8:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
9001ccbc:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
9001ccc0:	f108 0801 	add.w	r8, r8, #1
9001ccc4:	440d      	add	r5, r1
9001ccc6:	4419      	add	r1, r3
9001ccc8:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
9001cccc:	fa1f f888 	uxth.w	r8, r8
9001ccd0:	441a      	add	r2, r3
9001ccd2:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
9001ccd6:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
9001ccda:	b2ad      	uxth	r5, r5
9001ccdc:	9304      	str	r3, [sp, #16]
9001ccde:	4b94      	ldr	r3, [pc, #592]	; (9001cf30 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
9001cce0:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
9001cce4:	6818      	ldr	r0, [r3, #0]
9001cce6:	6803      	ldr	r3, [r0, #0]
9001cce8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001ccea:	4798      	blx	r3
9001ccec:	4b91      	ldr	r3, [pc, #580]	; (9001cf34 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
9001ccee:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
9001ccf2:	2d00      	cmp	r5, #0
9001ccf4:	881a      	ldrh	r2, [r3, #0]
9001ccf6:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
9001ccfa:	fb02 f606 	mul.w	r6, r2, r6
9001ccfe:	fb02 7101 	mla	r1, r2, r1, r7
9001cd02:	9318      	str	r3, [sp, #96]	; 0x60
9001cd04:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001cd08:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
9001cd0c:	f04f 0100 	mov.w	r1, #0
9001cd10:	eb00 0246 	add.w	r2, r0, r6, lsl #1
9001cd14:	930f      	str	r3, [sp, #60]	; 0x3c
9001cd16:	4b88      	ldr	r3, [pc, #544]	; (9001cf38 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>)
9001cd18:	920a      	str	r2, [sp, #40]	; 0x28
9001cd1a:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001cd1c:	eba3 0304 	sub.w	r3, r3, r4
9001cd20:	910d      	str	r1, [sp, #52]	; 0x34
9001cd22:	eb02 0888 	add.w	r8, r2, r8, lsl #2
9001cd26:	9319      	str	r3, [sp, #100]	; 0x64
9001cd28:	f108 0204 	add.w	r2, r8, #4
9001cd2c:	9211      	str	r2, [sp, #68]	; 0x44
9001cd2e:	9a09      	ldr	r2, [sp, #36]	; 0x24
9001cd30:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
9001cd34:	9215      	str	r2, [sp, #84]	; 0x54
9001cd36:	9a04      	ldr	r2, [sp, #16]
9001cd38:	bf18      	it	ne
9001cd3a:	2200      	movne	r2, #0
9001cd3c:	b292      	uxth	r2, r2
9001cd3e:	9910      	ldr	r1, [sp, #64]	; 0x40
9001cd40:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001cd42:	fa11 f383 	uxtah	r3, r1, r3
9001cd46:	9914      	ldr	r1, [sp, #80]	; 0x50
9001cd48:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9001cd4c:	3304      	adds	r3, #4
9001cd4e:	9306      	str	r3, [sp, #24]
9001cd50:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001cd52:	4283      	cmp	r3, r0
9001cd54:	f240 8166 	bls.w	9001d024 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3ec>
9001cd58:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
9001cd5c:	f04f 0a01 	mov.w	sl, #1
9001cd60:	9902      	ldr	r1, [sp, #8]
9001cd62:	9e06      	ldr	r6, [sp, #24]
9001cd64:	46d3      	mov	fp, sl
9001cd66:	4657      	mov	r7, sl
9001cd68:	7836      	ldrb	r6, [r6, #0]
9001cd6a:	fbb5 f3f3 	udiv	r3, r5, r3
9001cd6e:	1acb      	subs	r3, r1, r3
9001cd70:	9612      	str	r6, [sp, #72]	; 0x48
9001cd72:	3601      	adds	r6, #1
9001cd74:	b29b      	uxth	r3, r3
9001cd76:	9605      	str	r6, [sp, #20]
9001cd78:	9316      	str	r3, [sp, #88]	; 0x58
9001cd7a:	9b06      	ldr	r3, [sp, #24]
9001cd7c:	7859      	ldrb	r1, [r3, #1]
9001cd7e:	789b      	ldrb	r3, [r3, #2]
9001cd80:	021b      	lsls	r3, r3, #8
9001cd82:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
9001cd86:	9906      	ldr	r1, [sp, #24]
9001cd88:	78c9      	ldrb	r1, [r1, #3]
9001cd8a:	430b      	orrs	r3, r1
9001cd8c:	9913      	ldr	r1, [sp, #76]	; 0x4c
9001cd8e:	4419      	add	r1, r3
9001cd90:	1c4e      	adds	r6, r1, #1
9001cd92:	7849      	ldrb	r1, [r1, #1]
9001cd94:	9603      	str	r6, [sp, #12]
9001cd96:	0209      	lsls	r1, r1, #8
9001cd98:	9e13      	ldr	r6, [sp, #76]	; 0x4c
9001cd9a:	f401 71ff 	and.w	r1, r1, #510	; 0x1fe
9001cd9e:	5cf3      	ldrb	r3, [r6, r3]
9001cda0:	4319      	orrs	r1, r3
9001cda2:	b28b      	uxth	r3, r1
9001cda4:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
9001cda8:	930c      	str	r3, [sp, #48]	; 0x30
9001cdaa:	2300      	movs	r3, #0
9001cdac:	9307      	str	r3, [sp, #28]
9001cdae:	469c      	mov	ip, r3
9001cdb0:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
9001cdb4:	930e      	str	r3, [sp, #56]	; 0x38
9001cdb6:	2d00      	cmp	r5, #0
9001cdb8:	d07e      	beq.n	9001ceb8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x280>
9001cdba:	42af      	cmp	r7, r5
9001cdbc:	d26e      	bcs.n	9001ce9c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x264>
9001cdbe:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001cdc0:	1bed      	subs	r5, r5, r7
9001cdc2:	9201      	str	r2, [sp, #4]
9001cdc4:	4283      	cmp	r3, r0
9001cdc6:	b2ad      	uxth	r5, r5
9001cdc8:	d802      	bhi.n	9001cdd0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x198>
9001cdca:	e073      	b.n	9001ceb4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
9001cdcc:	2b00      	cmp	r3, #0
9001cdce:	d15f      	bne.n	9001ce90 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x258>
9001cdd0:	9b03      	ldr	r3, [sp, #12]
9001cdd2:	f1cb 0207 	rsb	r2, fp, #7
9001cdd6:	785b      	ldrb	r3, [r3, #1]
9001cdd8:	4093      	lsls	r3, r2
9001cdda:	005b      	lsls	r3, r3, #1
9001cddc:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
9001cde0:	9b03      	ldr	r3, [sp, #12]
9001cde2:	781b      	ldrb	r3, [r3, #0]
9001cde4:	fa43 f30b 	asr.w	r3, r3, fp
9001cde8:	b2db      	uxtb	r3, r3
9001cdea:	4313      	orrs	r3, r2
9001cdec:	f10b 0201 	add.w	r2, fp, #1
9001cdf0:	fa5f fb82 	uxtb.w	fp, r2
9001cdf4:	9a03      	ldr	r2, [sp, #12]
9001cdf6:	b29f      	uxth	r7, r3
9001cdf8:	f1bb 0f08 	cmp.w	fp, #8
9001cdfc:	bf13      	iteet	ne
9001cdfe:	3201      	addne	r2, #1
9001ce00:	3202      	addeq	r2, #2
9001ce02:	f04f 0b00 	moveq.w	fp, #0
9001ce06:	9203      	strne	r2, [sp, #12]
9001ce08:	bf08      	it	eq
9001ce0a:	9203      	streq	r2, [sp, #12]
9001ce0c:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001ce0e:	42ba      	cmp	r2, r7
9001ce10:	d309      	bcc.n	9001ce26 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ee>
9001ce12:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
9001ce16:	2301      	movs	r3, #1
9001ce18:	9a05      	ldr	r2, [sp, #20]
9001ce1a:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
9001ce1e:	d30e      	bcc.n	9001ce3e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
9001ce20:	469a      	mov	sl, r3
9001ce22:	2600      	movs	r6, #0
9001ce24:	e035      	b.n	9001ce92 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x25a>
9001ce26:	9b05      	ldr	r3, [sp, #20]
9001ce28:	429f      	cmp	r7, r3
9001ce2a:	d318      	bcc.n	9001ce5e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x226>
9001ce2c:	eb04 030a 	add.w	r3, r4, sl
9001ce30:	f894 2804 	ldrb.w	r2, [r4, #2052]	; 0x804
9001ce34:	f883 2804 	strb.w	r2, [r3, #2052]	; 0x804
9001ce38:	f10a 0301 	add.w	r3, sl, #1
9001ce3c:	b29b      	uxth	r3, r3
9001ce3e:	9a05      	ldr	r2, [sp, #20]
9001ce40:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
9001ce44:	eb04 0282 	add.w	r2, r4, r2, lsl #2
9001ce48:	990c      	ldr	r1, [sp, #48]	; 0x30
9001ce4a:	7116      	strb	r6, [r2, #4]
9001ce4c:	f10a 0601 	add.w	r6, sl, #1
9001ce50:	80d1      	strh	r1, [r2, #6]
9001ce52:	7156      	strb	r6, [r2, #5]
9001ce54:	9a05      	ldr	r2, [sp, #20]
9001ce56:	3201      	adds	r2, #1
9001ce58:	b292      	uxth	r2, r2
9001ce5a:	9205      	str	r2, [sp, #20]
9001ce5c:	e7e0      	b.n	9001ce20 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e8>
9001ce5e:	eb04 0387 	add.w	r3, r4, r7, lsl #2
9001ce62:	463a      	mov	r2, r7
9001ce64:	795b      	ldrb	r3, [r3, #5]
9001ce66:	f603 0604 	addw	r6, r3, #2052	; 0x804
9001ce6a:	4426      	add	r6, r4
9001ce6c:	9919      	ldr	r1, [sp, #100]	; 0x64
9001ce6e:	eb01 0c06 	add.w	ip, r1, r6
9001ce72:	f1bc 0f00 	cmp.w	ip, #0
9001ce76:	dd07      	ble.n	9001ce88 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>
9001ce78:	eb04 0282 	add.w	r2, r4, r2, lsl #2
9001ce7c:	f892 c004 	ldrb.w	ip, [r2, #4]
9001ce80:	f806 cd01 	strb.w	ip, [r6, #-1]!
9001ce84:	88d2      	ldrh	r2, [r2, #6]
9001ce86:	e7f1      	b.n	9001ce6c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x234>
9001ce88:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
9001ce8c:	b29b      	uxth	r3, r3
9001ce8e:	e7c3      	b.n	9001ce18 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e0>
9001ce90:	9f0c      	ldr	r7, [sp, #48]	; 0x30
9001ce92:	970c      	str	r7, [sp, #48]	; 0x30
9001ce94:	46b4      	mov	ip, r6
9001ce96:	9a01      	ldr	r2, [sp, #4]
9001ce98:	461f      	mov	r7, r3
9001ce9a:	e78c      	b.n	9001cdb6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17e>
9001ce9c:	1b7b      	subs	r3, r7, r5
9001ce9e:	eb0c 0605 	add.w	r6, ip, r5
9001cea2:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001cea6:	b29b      	uxth	r3, r3
9001cea8:	b2b6      	uxth	r6, r6
9001ceaa:	9201      	str	r2, [sp, #4]
9001ceac:	2500      	movs	r5, #0
9001ceae:	9a0a      	ldr	r2, [sp, #40]	; 0x28
9001ceb0:	4282      	cmp	r2, r0
9001ceb2:	d88b      	bhi.n	9001cdcc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
9001ceb4:	9a01      	ldr	r2, [sp, #4]
9001ceb6:	e74b      	b.n	9001cd50 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x118>
9001ceb8:	4297      	cmp	r7, r2
9001ceba:	d332      	bcc.n	9001cf22 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2ea>
9001cebc:	1abb      	subs	r3, r7, r2
9001cebe:	9208      	str	r2, [sp, #32]
9001cec0:	9501      	str	r5, [sp, #4]
9001cec2:	b29b      	uxth	r3, r3
9001cec4:	9909      	ldr	r1, [sp, #36]	; 0x24
9001cec6:	29ff      	cmp	r1, #255	; 0xff
9001cec8:	9908      	ldr	r1, [sp, #32]
9001ceca:	eb0c 0601 	add.w	r6, ip, r1
9001cece:	d135      	bne.n	9001cf3c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
9001ced0:	f1a0 0e02 	sub.w	lr, r0, #2
9001ced4:	b2b6      	uxth	r6, r6
9001ced6:	45b4      	cmp	ip, r6
9001ced8:	f040 808c 	bne.w	9001cff4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3bc>
9001cedc:	9908      	ldr	r1, [sp, #32]
9001cede:	4297      	cmp	r7, r2
9001cee0:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001cee4:	d3e2      	bcc.n	9001ceac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x274>
9001cee6:	9a18      	ldr	r2, [sp, #96]	; 0x60
9001cee8:	9904      	ldr	r1, [sp, #16]
9001ceea:	8812      	ldrh	r2, [r2, #0]
9001ceec:	1a52      	subs	r2, r2, r1
9001ceee:	9916      	ldr	r1, [sp, #88]	; 0x58
9001cef0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001cef4:	9a07      	ldr	r2, [sp, #28]
9001cef6:	3201      	adds	r2, #1
9001cef8:	428a      	cmp	r2, r1
9001cefa:	9207      	str	r2, [sp, #28]
9001cefc:	f040 8087 	bne.w	9001d00e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d6>
9001cf00:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
9001cf04:	f8bd 7068 	ldrh.w	r7, [sp, #104]	; 0x68
9001cf08:	9b04      	ldr	r3, [sp, #16]
9001cf0a:	1bed      	subs	r5, r5, r7
9001cf0c:	b2ad      	uxth	r5, r5
9001cf0e:	2d00      	cmp	r5, #0
9001cf10:	bf08      	it	eq
9001cf12:	461a      	moveq	r2, r3
9001cf14:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001cf16:	bf18      	it	ne
9001cf18:	2200      	movne	r2, #0
9001cf1a:	3301      	adds	r3, #1
9001cf1c:	b292      	uxth	r2, r2
9001cf1e:	930d      	str	r3, [sp, #52]	; 0x34
9001cf20:	e70d      	b.n	9001cd3e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x106>
9001cf22:	1bd1      	subs	r1, r2, r7
9001cf24:	9708      	str	r7, [sp, #32]
9001cf26:	b28b      	uxth	r3, r1
9001cf28:	9301      	str	r3, [sp, #4]
9001cf2a:	462b      	mov	r3, r5
9001cf2c:	e7ca      	b.n	9001cec4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x28c>
9001cf2e:	bf00      	nop
9001cf30:	24039834 	.word	0x24039834
9001cf34:	2403982e 	.word	0x2403982e
9001cf38:	fffff7fb 	.word	0xfffff7fb
9001cf3c:	b2b6      	uxth	r6, r6
9001cf3e:	900b      	str	r0, [sp, #44]	; 0x2c
9001cf40:	45b4      	cmp	ip, r6
9001cf42:	d0cb      	beq.n	9001cedc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a4>
9001cf44:	f10c 0101 	add.w	r1, ip, #1
9001cf48:	44a4      	add	ip, r4
9001cf4a:	9117      	str	r1, [sp, #92]	; 0x5c
9001cf4c:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
9001cf50:	9911      	ldr	r1, [sp, #68]	; 0x44
9001cf52:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
9001cf56:	990b      	ldr	r1, [sp, #44]	; 0x2c
9001cf58:	ea4f 2825 	mov.w	r8, r5, asr #8
9001cf5c:	f8b1 c000 	ldrh.w	ip, [r1]
9001cf60:	990e      	ldr	r1, [sp, #56]	; 0x38
9001cf62:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
9001cf66:	ea4f 2e2c 	mov.w	lr, ip, asr #8
9001cf6a:	ea4f 09ec 	mov.w	r9, ip, asr #3
9001cf6e:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
9001cf72:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001cf76:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
9001cf7a:	fb1e fe01 	smulbb	lr, lr, r1
9001cf7e:	990f      	ldr	r1, [sp, #60]	; 0x3c
9001cf80:	fa5f fc8c 	uxtb.w	ip, ip
9001cf84:	fb08 e801 	mla	r8, r8, r1, lr
9001cf88:	ea4f 0ee5 	mov.w	lr, r5, asr #3
9001cf8c:	990e      	ldr	r1, [sp, #56]	; 0x38
9001cf8e:	00ed      	lsls	r5, r5, #3
9001cf90:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
9001cf94:	fa1f f888 	uxth.w	r8, r8
9001cf98:	fb19 f901 	smulbb	r9, r9, r1
9001cf9c:	990f      	ldr	r1, [sp, #60]	; 0x3c
9001cf9e:	b2ed      	uxtb	r5, r5
9001cfa0:	fb0e 9e01 	mla	lr, lr, r1, r9
9001cfa4:	990e      	ldr	r1, [sp, #56]	; 0x38
9001cfa6:	fb1c fc01 	smulbb	ip, ip, r1
9001cfaa:	990f      	ldr	r1, [sp, #60]	; 0x3c
9001cfac:	fa1f fe8e 	uxth.w	lr, lr
9001cfb0:	fb05 c501 	mla	r5, r5, r1, ip
9001cfb4:	f108 0c01 	add.w	ip, r8, #1
9001cfb8:	f10e 0901 	add.w	r9, lr, #1
9001cfbc:	990b      	ldr	r1, [sp, #44]	; 0x2c
9001cfbe:	b2ad      	uxth	r5, r5
9001cfc0:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
9001cfc4:	f105 0c01 	add.w	ip, r5, #1
9001cfc8:	eb09 291e 	add.w	r9, r9, lr, lsr #8
9001cfcc:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
9001cfd0:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
9001cfd4:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001cfd8:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001cfdc:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
9001cfe0:	ea4c 0808 	orr.w	r8, ip, r8
9001cfe4:	f8bd c05c 	ldrh.w	ip, [sp, #92]	; 0x5c
9001cfe8:	ea48 0809 	orr.w	r8, r8, r9
9001cfec:	f821 8b02 	strh.w	r8, [r1], #2
9001cff0:	910b      	str	r1, [sp, #44]	; 0x2c
9001cff2:	e7a5      	b.n	9001cf40 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x308>
9001cff4:	f10c 0801 	add.w	r8, ip, #1
9001cff8:	44a4      	add	ip, r4
9001cffa:	9911      	ldr	r1, [sp, #68]	; 0x44
9001cffc:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
9001d000:	fa1f fc88 	uxth.w	ip, r8
9001d004:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
9001d008:	f82e 5f02 	strh.w	r5, [lr, #2]!
9001d00c:	e763      	b.n	9001ced6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29e>
9001d00e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001d012:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
9001d016:	1aad      	subs	r5, r5, r2
9001d018:	b2ad      	uxth	r5, r5
9001d01a:	2d00      	cmp	r5, #0
9001d01c:	bf18      	it	ne
9001d01e:	2200      	movne	r2, #0
9001d020:	9201      	str	r2, [sp, #4]
9001d022:	e744      	b.n	9001ceae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x276>
9001d024:	4b03      	ldr	r3, [pc, #12]	; (9001d034 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3fc>)
9001d026:	6818      	ldr	r0, [r3, #0]
9001d028:	6803      	ldr	r3, [r0, #0]
9001d02a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001d02c:	4798      	blx	r3
9001d02e:	b01f      	add	sp, #124	; 0x7c
9001d030:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001d034:	24039834 	.word	0x24039834

9001d038 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
9001d038:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d03c:	b08f      	sub	sp, #60	; 0x3c
9001d03e:	461c      	mov	r4, r3
9001d040:	460f      	mov	r7, r1
9001d042:	9203      	str	r2, [sp, #12]
9001d044:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001d048:	9b18      	ldr	r3, [sp, #96]	; 0x60
9001d04a:	9202      	str	r2, [sp, #8]
9001d04c:	2a00      	cmp	r2, #0
9001d04e:	f000 8128 	beq.w	9001d2a2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
9001d052:	6820      	ldr	r0, [r4, #0]
9001d054:	aa0a      	add	r2, sp, #40	; 0x28
9001d056:	6861      	ldr	r1, [r4, #4]
9001d058:	c203      	stmia	r2!, {r0, r1}
9001d05a:	6818      	ldr	r0, [r3, #0]
9001d05c:	aa0c      	add	r2, sp, #48	; 0x30
9001d05e:	6859      	ldr	r1, [r3, #4]
9001d060:	c203      	stmia	r2!, {r0, r1}
9001d062:	a80a      	add	r0, sp, #40	; 0x28
9001d064:	f7f9 fa68 	bl	90016538 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001d068:	4621      	mov	r1, r4
9001d06a:	a80c      	add	r0, sp, #48	; 0x30
9001d06c:	f7f9 faa8 	bl	900165c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001d070:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
9001d074:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
9001d078:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
9001d07c:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
9001d080:	bfdb      	ittet	le
9001d082:	b2b3      	uxthle	r3, r6
9001d084:	f44f 6280 	movle.w	r2, #1024	; 0x400
9001d088:	2301      	movgt	r3, #1
9001d08a:	fb92 f3f3 	sdivle	r3, r2, r3
9001d08e:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
9001d092:	441d      	add	r5, r3
9001d094:	fb92 f1f3 	sdiv	r1, r2, r3
9001d098:	fa1f fc81 	uxth.w	ip, r1
9001d09c:	3d01      	subs	r5, #1
9001d09e:	fb0c 2413 	mls	r4, ip, r3, r2
9001d0a2:	4661      	mov	r1, ip
9001d0a4:	fb14 f406 	smulbb	r4, r4, r6
9001d0a8:	4404      	add	r4, r0
9001d0aa:	fb95 f5f3 	sdiv	r5, r5, r3
9001d0ae:	b2a4      	uxth	r4, r4
9001d0b0:	b121      	cbz	r1, 9001d0bc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x84>
9001d0b2:	9b03      	ldr	r3, [sp, #12]
9001d0b4:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
9001d0b8:	ba1b      	rev	r3, r3
9001d0ba:	441f      	add	r7, r3
9001d0bc:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
9001d0c0:	b2ad      	uxth	r5, r5
9001d0c2:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
9001d0c6:	4418      	add	r0, r3
9001d0c8:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
9001d0cc:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
9001d0d0:	00ad      	lsls	r5, r5, #2
9001d0d2:	441a      	add	r2, r3
9001d0d4:	4b74      	ldr	r3, [pc, #464]	; (9001d2a8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
9001d0d6:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
9001d0da:	6818      	ldr	r0, [r3, #0]
9001d0dc:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
9001d0e0:	6803      	ldr	r3, [r0, #0]
9001d0e2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001d0e4:	4798      	blx	r3
9001d0e6:	4a71      	ldr	r2, [pc, #452]	; (9001d2ac <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
9001d0e8:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
9001d0ec:	2c00      	cmp	r4, #0
9001d0ee:	8813      	ldrh	r3, [r2, #0]
9001d0f0:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
9001d0f4:	bf0c      	ite	eq
9001d0f6:	46c8      	moveq	r8, r9
9001d0f8:	f04f 0800 	movne.w	r8, #0
9001d0fc:	9209      	str	r2, [sp, #36]	; 0x24
9001d0fe:	fb03 c101 	mla	r1, r3, r1, ip
9001d102:	4373      	muls	r3, r6
9001d104:	fa1f f888 	uxth.w	r8, r8
9001d108:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001d10c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001d110:	9304      	str	r3, [sp, #16]
9001d112:	1d2b      	adds	r3, r5, #4
9001d114:	9305      	str	r3, [sp, #20]
9001d116:	2300      	movs	r3, #0
9001d118:	9301      	str	r3, [sp, #4]
9001d11a:	9a04      	ldr	r2, [sp, #16]
9001d11c:	4282      	cmp	r2, r0
9001d11e:	f240 80bb 	bls.w	9001d298 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
9001d122:	b95b      	cbnz	r3, 9001d13c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x104>
9001d124:	783a      	ldrb	r2, [r7, #0]
9001d126:	0993      	lsrs	r3, r2, #6
9001d128:	f002 023f 	and.w	r2, r2, #63	; 0x3f
9001d12c:	9201      	str	r2, [sp, #4]
9001d12e:	1e5a      	subs	r2, r3, #1
9001d130:	2a02      	cmp	r2, #2
9001d132:	bf8d      	iteet	hi
9001d134:	787b      	ldrbhi	r3, [r7, #1]
9001d136:	3701      	addls	r7, #1
9001d138:	b29b      	uxthls	r3, r3
9001d13a:	3702      	addhi	r7, #2
9001d13c:	b184      	cbz	r4, 9001d160 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x128>
9001d13e:	429c      	cmp	r4, r3
9001d140:	bf91      	iteee	ls
9001d142:	1b1c      	subls	r4, r3, r4
9001d144:	1ae4      	subhi	r4, r4, r3
9001d146:	46c4      	movhi	ip, r8
9001d148:	f04f 0a00 	movhi.w	sl, #0
9001d14c:	bf9b      	ittet	ls
9001d14e:	fa1f fa84 	uxthls.w	sl, r4
9001d152:	2400      	movls	r4, #0
9001d154:	b2a4      	uxthhi	r4, r4
9001d156:	fa1f fc89 	uxthls.w	ip, r9
9001d15a:	4653      	mov	r3, sl
9001d15c:	46e0      	mov	r8, ip
9001d15e:	e7dc      	b.n	9001d11a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe2>
9001d160:	2204      	movs	r2, #4
9001d162:	9905      	ldr	r1, [sp, #20]
9001d164:	4543      	cmp	r3, r8
9001d166:	4615      	mov	r5, r2
9001d168:	9a01      	ldr	r2, [sp, #4]
9001d16a:	bf24      	itt	cs
9001d16c:	eba3 0a08 	subcs.w	sl, r3, r8
9001d170:	46c6      	movcs	lr, r8
9001d172:	fb15 1202 	smlabb	r2, r5, r2, r1
9001d176:	9903      	ldr	r1, [sp, #12]
9001d178:	bf3c      	itt	cc
9001d17a:	eba8 0c03 	subcc.w	ip, r8, r3
9001d17e:	469e      	movcc	lr, r3
9001d180:	588a      	ldr	r2, [r1, r2]
9001d182:	bf26      	itte	cs
9001d184:	fa1f fa8a 	uxthcs.w	sl, sl
9001d188:	46a4      	movcs	ip, r4
9001d18a:	fa1f fc8c 	uxthcc.w	ip, ip
9001d18e:	ea4f 6112 	mov.w	r1, r2, lsr #24
9001d192:	bf38      	it	cc
9001d194:	46a2      	movcc	sl, r4
9001d196:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
9001d19a:	2900      	cmp	r1, #0
9001d19c:	d066      	beq.n	9001d26c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
9001d19e:	29ff      	cmp	r1, #255	; 0xff
9001d1a0:	ea4f 2612 	mov.w	r6, r2, lsr #8
9001d1a4:	d114      	bne.n	9001d1d0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
9001d1a6:	9d02      	ldr	r5, [sp, #8]
9001d1a8:	2dff      	cmp	r5, #255	; 0xff
9001d1aa:	d111      	bne.n	9001d1d0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
9001d1ac:	0951      	lsrs	r1, r2, #5
9001d1ae:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
9001d1b2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001d1b6:	4486      	add	lr, r0
9001d1b8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
9001d1bc:	f026 0607 	bic.w	r6, r6, #7
9001d1c0:	430e      	orrs	r6, r1
9001d1c2:	4316      	orrs	r6, r2
9001d1c4:	b2b6      	uxth	r6, r6
9001d1c6:	4586      	cmp	lr, r0
9001d1c8:	d051      	beq.n	9001d26e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
9001d1ca:	f820 6b02 	strh.w	r6, [r0], #2
9001d1ce:	e7fa      	b.n	9001d1c6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
9001d1d0:	9d02      	ldr	r5, [sp, #8]
9001d1d2:	b2f6      	uxtb	r6, r6
9001d1d4:	4486      	add	lr, r0
9001d1d6:	4369      	muls	r1, r5
9001d1d8:	1c4d      	adds	r5, r1, #1
9001d1da:	eb05 2521 	add.w	r5, r5, r1, asr #8
9001d1de:	f3c2 4107 	ubfx	r1, r2, #16, #8
9001d1e2:	b2d2      	uxtb	r2, r2
9001d1e4:	122d      	asrs	r5, r5, #8
9001d1e6:	ea6f 0b05 	mvn.w	fp, r5
9001d1ea:	b2ad      	uxth	r5, r5
9001d1ec:	fb11 f105 	smulbb	r1, r1, r5
9001d1f0:	fa5f fb8b 	uxtb.w	fp, fp
9001d1f4:	fb16 f605 	smulbb	r6, r6, r5
9001d1f8:	fb12 f205 	smulbb	r2, r2, r5
9001d1fc:	b289      	uxth	r1, r1
9001d1fe:	b2b6      	uxth	r6, r6
9001d200:	b292      	uxth	r2, r2
9001d202:	9106      	str	r1, [sp, #24]
9001d204:	9607      	str	r6, [sp, #28]
9001d206:	9208      	str	r2, [sp, #32]
9001d208:	4586      	cmp	lr, r0
9001d20a:	d030      	beq.n	9001d26e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
9001d20c:	8802      	ldrh	r2, [r0, #0]
9001d20e:	9906      	ldr	r1, [sp, #24]
9001d210:	1216      	asrs	r6, r2, #8
9001d212:	10d5      	asrs	r5, r2, #3
9001d214:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001d218:	00d2      	lsls	r2, r2, #3
9001d21a:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9001d21e:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001d222:	b2d2      	uxtb	r2, r2
9001d224:	fb06 160b 	mla	r6, r6, fp, r1
9001d228:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001d22c:	9907      	ldr	r1, [sp, #28]
9001d22e:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001d232:	b2b6      	uxth	r6, r6
9001d234:	fb05 150b 	mla	r5, r5, fp, r1
9001d238:	9908      	ldr	r1, [sp, #32]
9001d23a:	fb02 120b 	mla	r2, r2, fp, r1
9001d23e:	1c71      	adds	r1, r6, #1
9001d240:	b2ad      	uxth	r5, r5
9001d242:	b292      	uxth	r2, r2
9001d244:	eb01 2616 	add.w	r6, r1, r6, lsr #8
9001d248:	1c51      	adds	r1, r2, #1
9001d24a:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
9001d24e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
9001d252:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001d256:	4316      	orrs	r6, r2
9001d258:	1c6a      	adds	r2, r5, #1
9001d25a:	eb02 2515 	add.w	r5, r2, r5, lsr #8
9001d25e:	096d      	lsrs	r5, r5, #5
9001d260:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001d264:	432e      	orrs	r6, r5
9001d266:	f820 6b02 	strh.w	r6, [r0], #2
9001d26a:	e7cd      	b.n	9001d208 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
9001d26c:	4470      	add	r0, lr
9001d26e:	4543      	cmp	r3, r8
9001d270:	f4ff af73 	bcc.w	9001d15a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
9001d274:	fa1f fc89 	uxth.w	ip, r9
9001d278:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
9001d27c:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001d27e:	eba4 040c 	sub.w	r4, r4, ip
9001d282:	881b      	ldrh	r3, [r3, #0]
9001d284:	b2a4      	uxth	r4, r4
9001d286:	eba3 0309 	sub.w	r3, r3, r9
9001d28a:	2c00      	cmp	r4, #0
9001d28c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001d290:	bf18      	it	ne
9001d292:	f04f 0c00 	movne.w	ip, #0
9001d296:	e760      	b.n	9001d15a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
9001d298:	4b03      	ldr	r3, [pc, #12]	; (9001d2a8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
9001d29a:	6818      	ldr	r0, [r3, #0]
9001d29c:	6803      	ldr	r3, [r0, #0]
9001d29e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001d2a0:	4798      	blx	r3
9001d2a2:	b00f      	add	sp, #60	; 0x3c
9001d2a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001d2a8:	24039834 	.word	0x24039834
9001d2ac:	2403982e 	.word	0x2403982e

9001d2b0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
9001d2b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d2b4:	b093      	sub	sp, #76	; 0x4c
9001d2b6:	461c      	mov	r4, r3
9001d2b8:	9205      	str	r2, [sp, #20]
9001d2ba:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
9001d2be:	9101      	str	r1, [sp, #4]
9001d2c0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9001d2c2:	9202      	str	r2, [sp, #8]
9001d2c4:	2a00      	cmp	r2, #0
9001d2c6:	f000 812e 	beq.w	9001d526 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
9001d2ca:	6820      	ldr	r0, [r4, #0]
9001d2cc:	aa0e      	add	r2, sp, #56	; 0x38
9001d2ce:	6861      	ldr	r1, [r4, #4]
9001d2d0:	c203      	stmia	r2!, {r0, r1}
9001d2d2:	6818      	ldr	r0, [r3, #0]
9001d2d4:	aa10      	add	r2, sp, #64	; 0x40
9001d2d6:	6859      	ldr	r1, [r3, #4]
9001d2d8:	c203      	stmia	r2!, {r0, r1}
9001d2da:	a80e      	add	r0, sp, #56	; 0x38
9001d2dc:	f7f9 f92c 	bl	90016538 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001d2e0:	4621      	mov	r1, r4
9001d2e2:	a810      	add	r0, sp, #64	; 0x40
9001d2e4:	f7f9 f96c 	bl	900165c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001d2e8:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
9001d2ec:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
9001d2f0:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
9001d2f4:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
9001d2f8:	bfdb      	ittet	le
9001d2fa:	b2b3      	uxthle	r3, r6
9001d2fc:	f44f 6280 	movle.w	r2, #1024	; 0x400
9001d300:	2301      	movgt	r3, #1
9001d302:	fb92 f3f3 	sdivle	r3, r2, r3
9001d306:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
9001d30a:	441d      	add	r5, r3
9001d30c:	fb92 f1f3 	sdiv	r1, r2, r3
9001d310:	fa1f fc81 	uxth.w	ip, r1
9001d314:	3d01      	subs	r5, #1
9001d316:	fb0c 2413 	mls	r4, ip, r3, r2
9001d31a:	4661      	mov	r1, ip
9001d31c:	fb14 f406 	smulbb	r4, r4, r6
9001d320:	4404      	add	r4, r0
9001d322:	fb95 f5f3 	sdiv	r5, r5, r3
9001d326:	b2a4      	uxth	r4, r4
9001d328:	b131      	cbz	r1, 9001d338 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x88>
9001d32a:	9b05      	ldr	r3, [sp, #20]
9001d32c:	9901      	ldr	r1, [sp, #4]
9001d32e:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
9001d332:	ba1b      	rev	r3, r3
9001d334:	4419      	add	r1, r3
9001d336:	9101      	str	r1, [sp, #4]
9001d338:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
9001d33c:	b2ad      	uxth	r5, r5
9001d33e:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
9001d342:	4418      	add	r0, r3
9001d344:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
9001d348:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	; 0x46
9001d34c:	00ad      	lsls	r5, r5, #2
9001d34e:	441a      	add	r2, r3
9001d350:	4b76      	ldr	r3, [pc, #472]	; (9001d52c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
9001d352:	f8ad 0040 	strh.w	r0, [sp, #64]	; 0x40
9001d356:	6818      	ldr	r0, [r3, #0]
9001d358:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
9001d35c:	6803      	ldr	r3, [r0, #0]
9001d35e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001d360:	4798      	blx	r3
9001d362:	4973      	ldr	r1, [pc, #460]	; (9001d530 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
9001d364:	f9bd c040 	ldrsh.w	ip, [sp, #64]	; 0x40
9001d368:	2c00      	cmp	r4, #0
9001d36a:	880b      	ldrh	r3, [r1, #0]
9001d36c:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
9001d370:	910d      	str	r1, [sp, #52]	; 0x34
9001d372:	fb03 c202 	mla	r2, r3, r2, ip
9001d376:	bf08      	it	eq
9001d378:	46dc      	moveq	ip, fp
9001d37a:	fb03 f306 	mul.w	r3, r3, r6
9001d37e:	bf18      	it	ne
9001d380:	f04f 0c00 	movne.w	ip, #0
9001d384:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001d388:	f8bd 1008 	ldrh.w	r1, [sp, #8]
9001d38c:	fa1f fc8c 	uxth.w	ip, ip
9001d390:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001d394:	9106      	str	r1, [sp, #24]
9001d396:	9308      	str	r3, [sp, #32]
9001d398:	1d2b      	adds	r3, r5, #4
9001d39a:	9309      	str	r3, [sp, #36]	; 0x24
9001d39c:	9b02      	ldr	r3, [sp, #8]
9001d39e:	43da      	mvns	r2, r3
9001d3a0:	2300      	movs	r3, #0
9001d3a2:	b2d2      	uxtb	r2, r2
9001d3a4:	9303      	str	r3, [sp, #12]
9001d3a6:	9207      	str	r2, [sp, #28]
9001d3a8:	9a08      	ldr	r2, [sp, #32]
9001d3aa:	4282      	cmp	r2, r0
9001d3ac:	f240 80b6 	bls.w	9001d51c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26c>
9001d3b0:	b963      	cbnz	r3, 9001d3cc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
9001d3b2:	9b01      	ldr	r3, [sp, #4]
9001d3b4:	781a      	ldrb	r2, [r3, #0]
9001d3b6:	0993      	lsrs	r3, r2, #6
9001d3b8:	f002 023f 	and.w	r2, r2, #63	; 0x3f
9001d3bc:	9203      	str	r2, [sp, #12]
9001d3be:	1e5a      	subs	r2, r3, #1
9001d3c0:	2a02      	cmp	r2, #2
9001d3c2:	d815      	bhi.n	9001d3f0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x140>
9001d3c4:	9a01      	ldr	r2, [sp, #4]
9001d3c6:	b29b      	uxth	r3, r3
9001d3c8:	3201      	adds	r2, #1
9001d3ca:	9201      	str	r2, [sp, #4]
9001d3cc:	b1b4      	cbz	r4, 9001d3fc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14c>
9001d3ce:	429c      	cmp	r4, r3
9001d3d0:	bf91      	iteee	ls
9001d3d2:	1b1c      	subls	r4, r3, r4
9001d3d4:	1ae4      	subhi	r4, r4, r3
9001d3d6:	4666      	movhi	r6, ip
9001d3d8:	f04f 0800 	movhi.w	r8, #0
9001d3dc:	bf9b      	ittet	ls
9001d3de:	fa1f f884 	uxthls.w	r8, r4
9001d3e2:	2400      	movls	r4, #0
9001d3e4:	b2a4      	uxthhi	r4, r4
9001d3e6:	fa1f f68b 	uxthls.w	r6, fp
9001d3ea:	4643      	mov	r3, r8
9001d3ec:	46b4      	mov	ip, r6
9001d3ee:	e7db      	b.n	9001d3a8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf8>
9001d3f0:	9a01      	ldr	r2, [sp, #4]
9001d3f2:	9b01      	ldr	r3, [sp, #4]
9001d3f4:	3202      	adds	r2, #2
9001d3f6:	785b      	ldrb	r3, [r3, #1]
9001d3f8:	9201      	str	r2, [sp, #4]
9001d3fa:	e7e7      	b.n	9001d3cc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
9001d3fc:	2203      	movs	r2, #3
9001d3fe:	9909      	ldr	r1, [sp, #36]	; 0x24
9001d400:	4563      	cmp	r3, ip
9001d402:	4615      	mov	r5, r2
9001d404:	9a03      	ldr	r2, [sp, #12]
9001d406:	bf2c      	ite	cs
9001d408:	eba3 080c 	subcs.w	r8, r3, ip
9001d40c:	ebac 0603 	subcc.w	r6, ip, r3
9001d410:	fb15 1202 	smlabb	r2, r5, r2, r1
9001d414:	9905      	ldr	r1, [sp, #20]
9001d416:	bf24      	itt	cs
9001d418:	fa1f f888 	uxthcs.w	r8, r8
9001d41c:	46e1      	movcs	r9, ip
9001d41e:	eb01 0502 	add.w	r5, r1, r2
9001d422:	9902      	ldr	r1, [sp, #8]
9001d424:	bf2f      	iteee	cs
9001d426:	4626      	movcs	r6, r4
9001d428:	b2b6      	uxthcc	r6, r6
9001d42a:	4699      	movcc	r9, r3
9001d42c:	46a0      	movcc	r8, r4
9001d42e:	29ff      	cmp	r1, #255	; 0xff
9001d430:	d04a      	beq.n	9001d4c8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
9001d432:	9f06      	ldr	r7, [sp, #24]
9001d434:	46ca      	mov	sl, r9
9001d436:	78a9      	ldrb	r1, [r5, #2]
9001d438:	9004      	str	r0, [sp, #16]
9001d43a:	4379      	muls	r1, r7
9001d43c:	910a      	str	r1, [sp, #40]	; 0x28
9001d43e:	7869      	ldrb	r1, [r5, #1]
9001d440:	4379      	muls	r1, r7
9001d442:	910b      	str	r1, [sp, #44]	; 0x2c
9001d444:	9905      	ldr	r1, [sp, #20]
9001d446:	5c8a      	ldrb	r2, [r1, r2]
9001d448:	437a      	muls	r2, r7
9001d44a:	920c      	str	r2, [sp, #48]	; 0x30
9001d44c:	f1ba 0f00 	cmp.w	sl, #0
9001d450:	d03d      	beq.n	9001d4ce <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
9001d452:	9a04      	ldr	r2, [sp, #16]
9001d454:	f10a 3aff 	add.w	sl, sl, #4294967295
9001d458:	9f07      	ldr	r7, [sp, #28]
9001d45a:	8812      	ldrh	r2, [r2, #0]
9001d45c:	fa1f fa8a 	uxth.w	sl, sl
9001d460:	46be      	mov	lr, r7
9001d462:	9f0a      	ldr	r7, [sp, #40]	; 0x28
9001d464:	1215      	asrs	r5, r2, #8
9001d466:	10d1      	asrs	r1, r2, #3
9001d468:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
9001d46c:	00d2      	lsls	r2, r2, #3
9001d46e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
9001d472:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
9001d476:	b2d2      	uxtb	r2, r2
9001d478:	fb05 750e 	mla	r5, r5, lr, r7
9001d47c:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
9001d480:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
9001d482:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001d486:	b2ad      	uxth	r5, r5
9001d488:	fb01 710e 	mla	r1, r1, lr, r7
9001d48c:	9f0c      	ldr	r7, [sp, #48]	; 0x30
9001d48e:	fb02 720e 	mla	r2, r2, lr, r7
9001d492:	f105 0e01 	add.w	lr, r5, #1
9001d496:	b289      	uxth	r1, r1
9001d498:	b292      	uxth	r2, r2
9001d49a:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
9001d49e:	f102 0e01 	add.w	lr, r2, #1
9001d4a2:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
9001d4a6:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
9001d4aa:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001d4ae:	4315      	orrs	r5, r2
9001d4b0:	1c4a      	adds	r2, r1, #1
9001d4b2:	eb02 2111 	add.w	r1, r2, r1, lsr #8
9001d4b6:	9a04      	ldr	r2, [sp, #16]
9001d4b8:	0949      	lsrs	r1, r1, #5
9001d4ba:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
9001d4be:	430d      	orrs	r5, r1
9001d4c0:	f822 5b02 	strh.w	r5, [r2], #2
9001d4c4:	9204      	str	r2, [sp, #16]
9001d4c6:	e7c1      	b.n	9001d44c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19c>
9001d4c8:	4649      	mov	r1, r9
9001d4ca:	4686      	mov	lr, r0
9001d4cc:	b999      	cbnz	r1, 9001d4f6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x246>
9001d4ce:	4563      	cmp	r3, ip
9001d4d0:	eb00 0049 	add.w	r0, r0, r9, lsl #1
9001d4d4:	d389      	bcc.n	9001d3ea <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
9001d4d6:	fa1f f68b 	uxth.w	r6, fp
9001d4da:	f8bd 403c 	ldrh.w	r4, [sp, #60]	; 0x3c
9001d4de:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001d4e0:	1ba4      	subs	r4, r4, r6
9001d4e2:	881b      	ldrh	r3, [r3, #0]
9001d4e4:	b2a4      	uxth	r4, r4
9001d4e6:	eba3 030b 	sub.w	r3, r3, fp
9001d4ea:	2c00      	cmp	r4, #0
9001d4ec:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001d4f0:	bf18      	it	ne
9001d4f2:	2600      	movne	r6, #0
9001d4f4:	e779      	b.n	9001d3ea <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
9001d4f6:	78aa      	ldrb	r2, [r5, #2]
9001d4f8:	3901      	subs	r1, #1
9001d4fa:	4f0e      	ldr	r7, [pc, #56]	; (9001d534 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x284>)
9001d4fc:	b289      	uxth	r1, r1
9001d4fe:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
9001d502:	786a      	ldrb	r2, [r5, #1]
9001d504:	00d2      	lsls	r2, r2, #3
9001d506:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001d50a:	ea4a 0202 	orr.w	r2, sl, r2
9001d50e:	f895 a000 	ldrb.w	sl, [r5]
9001d512:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
9001d516:	f82e 2b02 	strh.w	r2, [lr], #2
9001d51a:	e7d7      	b.n	9001d4cc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21c>
9001d51c:	4b03      	ldr	r3, [pc, #12]	; (9001d52c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
9001d51e:	6818      	ldr	r0, [r3, #0]
9001d520:	6803      	ldr	r3, [r0, #0]
9001d522:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001d524:	4798      	blx	r3
9001d526:	b013      	add	sp, #76	; 0x4c
9001d528:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001d52c:	24039834 	.word	0x24039834
9001d530:	2403982e 	.word	0x2403982e
9001d534:	fffff800 	.word	0xfffff800

9001d538 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
9001d538:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d53c:	b09d      	sub	sp, #116	; 0x74
9001d53e:	461c      	mov	r4, r3
9001d540:	4683      	mov	fp, r0
9001d542:	9b26      	ldr	r3, [sp, #152]	; 0x98
9001d544:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
9001d548:	f89d 209c 	ldrb.w	r2, [sp, #156]	; 0x9c
9001d54c:	920e      	str	r2, [sp, #56]	; 0x38
9001d54e:	2a00      	cmp	r2, #0
9001d550:	f000 81e4 	beq.w	9001d91c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>
9001d554:	6820      	ldr	r0, [r4, #0]
9001d556:	aa18      	add	r2, sp, #96	; 0x60
9001d558:	6861      	ldr	r1, [r4, #4]
9001d55a:	c203      	stmia	r2!, {r0, r1}
9001d55c:	6818      	ldr	r0, [r3, #0]
9001d55e:	aa1a      	add	r2, sp, #104	; 0x68
9001d560:	6859      	ldr	r1, [r3, #4]
9001d562:	c203      	stmia	r2!, {r0, r1}
9001d564:	a818      	add	r0, sp, #96	; 0x60
9001d566:	f7f8 ffe7 	bl	90016538 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001d56a:	4621      	mov	r1, r4
9001d56c:	a81a      	add	r0, sp, #104	; 0x68
9001d56e:	f7f9 f827 	bl	900165c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001d572:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	; 0x64
9001d576:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	; 0x66
9001d57a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
9001d57e:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
9001d582:	bfdb      	ittet	le
9001d584:	b29a      	uxthle	r2, r3
9001d586:	f44f 6180 	movle.w	r1, #1024	; 0x400
9001d58a:	2201      	movgt	r2, #1
9001d58c:	fb91 f2f2 	sdivle	r2, r1, r2
9001d590:	9202      	str	r2, [sp, #8]
9001d592:	9802      	ldr	r0, [sp, #8]
9001d594:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	; 0x6a
9001d598:	9902      	ldr	r1, [sp, #8]
9001d59a:	fb92 f0f0 	sdiv	r0, r2, r0
9001d59e:	b280      	uxth	r0, r0
9001d5a0:	440c      	add	r4, r1
9001d5a2:	900f      	str	r0, [sp, #60]	; 0x3c
9001d5a4:	3c01      	subs	r4, #1
9001d5a6:	9802      	ldr	r0, [sp, #8]
9001d5a8:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
9001d5aa:	fb05 2510 	mls	r5, r5, r0, r2
9001d5ae:	fb94 f4f1 	sdiv	r4, r4, r1
9001d5b2:	fb15 f503 	smulbb	r5, r5, r3
9001d5b6:	f8bd 1068 	ldrh.w	r1, [sp, #104]	; 0x68
9001d5ba:	f8bd 3060 	ldrh.w	r3, [sp, #96]	; 0x60
9001d5be:	3401      	adds	r4, #1
9001d5c0:	440d      	add	r5, r1
9001d5c2:	4419      	add	r1, r3
9001d5c4:	f8bd 3062 	ldrh.w	r3, [sp, #98]	; 0x62
9001d5c8:	b2a4      	uxth	r4, r4
9001d5ca:	441a      	add	r2, r3
9001d5cc:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
9001d5d0:	f8ad 1068 	strh.w	r1, [sp, #104]	; 0x68
9001d5d4:	00a4      	lsls	r4, r4, #2
9001d5d6:	9306      	str	r3, [sp, #24]
9001d5d8:	b2ad      	uxth	r5, r5
9001d5da:	4bb3      	ldr	r3, [pc, #716]	; (9001d8a8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
9001d5dc:	f8ad 206a 	strh.w	r2, [sp, #106]	; 0x6a
9001d5e0:	6818      	ldr	r0, [r3, #0]
9001d5e2:	6803      	ldr	r3, [r0, #0]
9001d5e4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001d5e6:	4798      	blx	r3
9001d5e8:	4bb0      	ldr	r3, [pc, #704]	; (9001d8ac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>)
9001d5ea:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	; 0x6a
9001d5ee:	2d00      	cmp	r5, #0
9001d5f0:	881a      	ldrh	r2, [r3, #0]
9001d5f2:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	; 0x68
9001d5f6:	fb02 f606 	mul.w	r6, r2, r6
9001d5fa:	fb02 7101 	mla	r1, r2, r1, r7
9001d5fe:	9316      	str	r3, [sp, #88]	; 0x58
9001d600:	eb00 0841 	add.w	r8, r0, r1, lsl #1
9001d604:	4baa      	ldr	r3, [pc, #680]	; (9001d8b0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x378>)
9001d606:	bf18      	it	ne
9001d608:	2100      	movne	r1, #0
9001d60a:	eb08 0246 	add.w	r2, r8, r6, lsl #1
9001d60e:	eba3 030b 	sub.w	r3, r3, fp
9001d612:	920a      	str	r2, [sp, #40]	; 0x28
9001d614:	f104 0204 	add.w	r2, r4, #4
9001d618:	9317      	str	r3, [sp, #92]	; 0x5c
9001d61a:	9213      	str	r2, [sp, #76]	; 0x4c
9001d61c:	9a06      	ldr	r2, [sp, #24]
9001d61e:	bf08      	it	eq
9001d620:	4611      	moveq	r1, r2
9001d622:	2200      	movs	r2, #0
9001d624:	b289      	uxth	r1, r1
9001d626:	920d      	str	r2, [sp, #52]	; 0x34
9001d628:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001d62a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001d62c:	fa12 f383 	uxtah	r3, r2, r3
9001d630:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001d632:	eb02 0383 	add.w	r3, r2, r3, lsl #2
9001d636:	3304      	adds	r3, #4
9001d638:	9308      	str	r3, [sp, #32]
9001d63a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001d63c:	4543      	cmp	r3, r8
9001d63e:	f240 8168 	bls.w	9001d912 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3da>
9001d642:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
9001d646:	f04f 0e01 	mov.w	lr, #1
9001d64a:	9a02      	ldr	r2, [sp, #8]
9001d64c:	9808      	ldr	r0, [sp, #32]
9001d64e:	fbb5 f3f3 	udiv	r3, r5, r3
9001d652:	1ad3      	subs	r3, r2, r3
9001d654:	7800      	ldrb	r0, [r0, #0]
9001d656:	b29b      	uxth	r3, r3
9001d658:	9010      	str	r0, [sp, #64]	; 0x40
9001d65a:	3001      	adds	r0, #1
9001d65c:	9314      	str	r3, [sp, #80]	; 0x50
9001d65e:	9b08      	ldr	r3, [sp, #32]
9001d660:	9007      	str	r0, [sp, #28]
9001d662:	785a      	ldrb	r2, [r3, #1]
9001d664:	789b      	ldrb	r3, [r3, #2]
9001d666:	021b      	lsls	r3, r3, #8
9001d668:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9001d66c:	9a08      	ldr	r2, [sp, #32]
9001d66e:	78d2      	ldrb	r2, [r2, #3]
9001d670:	4313      	orrs	r3, r2
9001d672:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001d674:	441a      	add	r2, r3
9001d676:	1c50      	adds	r0, r2, #1
9001d678:	7852      	ldrb	r2, [r2, #1]
9001d67a:	9005      	str	r0, [sp, #20]
9001d67c:	0212      	lsls	r2, r2, #8
9001d67e:	9811      	ldr	r0, [sp, #68]	; 0x44
9001d680:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
9001d684:	5cc3      	ldrb	r3, [r0, r3]
9001d686:	431a      	orrs	r2, r3
9001d688:	b293      	uxth	r3, r2
9001d68a:	f88b 2804 	strb.w	r2, [fp, #2052]	; 0x804
9001d68e:	930b      	str	r3, [sp, #44]	; 0x2c
9001d690:	2300      	movs	r3, #0
9001d692:	9309      	str	r3, [sp, #36]	; 0x24
9001d694:	2301      	movs	r3, #1
9001d696:	9301      	str	r3, [sp, #4]
9001d698:	9304      	str	r3, [sp, #16]
9001d69a:	2300      	movs	r3, #0
9001d69c:	9303      	str	r3, [sp, #12]
9001d69e:	2d00      	cmp	r5, #0
9001d6a0:	d07d      	beq.n	9001d79e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x266>
9001d6a2:	45ae      	cmp	lr, r5
9001d6a4:	d26c      	bcs.n	9001d780 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x248>
9001d6a6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001d6a8:	eba5 050e 	sub.w	r5, r5, lr
9001d6ac:	460c      	mov	r4, r1
9001d6ae:	4543      	cmp	r3, r8
9001d6b0:	b2ad      	uxth	r5, r5
9001d6b2:	d802      	bhi.n	9001d6ba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x182>
9001d6b4:	e071      	b.n	9001d79a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x262>
9001d6b6:	2b00      	cmp	r3, #0
9001d6b8:	d15d      	bne.n	9001d776 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x23e>
9001d6ba:	9b05      	ldr	r3, [sp, #20]
9001d6bc:	9a04      	ldr	r2, [sp, #16]
9001d6be:	785b      	ldrb	r3, [r3, #1]
9001d6c0:	f1c2 0207 	rsb	r2, r2, #7
9001d6c4:	9904      	ldr	r1, [sp, #16]
9001d6c6:	4093      	lsls	r3, r2
9001d6c8:	005b      	lsls	r3, r3, #1
9001d6ca:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
9001d6ce:	9b05      	ldr	r3, [sp, #20]
9001d6d0:	781b      	ldrb	r3, [r3, #0]
9001d6d2:	410b      	asrs	r3, r1
9001d6d4:	3101      	adds	r1, #1
9001d6d6:	b2c9      	uxtb	r1, r1
9001d6d8:	b2db      	uxtb	r3, r3
9001d6da:	2908      	cmp	r1, #8
9001d6dc:	9104      	str	r1, [sp, #16]
9001d6de:	9905      	ldr	r1, [sp, #20]
9001d6e0:	ea43 0302 	orr.w	r3, r3, r2
9001d6e4:	bf0c      	ite	eq
9001d6e6:	3102      	addeq	r1, #2
9001d6e8:	3101      	addne	r1, #1
9001d6ea:	b29a      	uxth	r2, r3
9001d6ec:	bf05      	ittet	eq
9001d6ee:	9105      	streq	r1, [sp, #20]
9001d6f0:	2100      	moveq	r1, #0
9001d6f2:	9105      	strne	r1, [sp, #20]
9001d6f4:	9104      	streq	r1, [sp, #16]
9001d6f6:	9910      	ldr	r1, [sp, #64]	; 0x40
9001d6f8:	4291      	cmp	r1, r2
9001d6fa:	d30a      	bcc.n	9001d712 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1da>
9001d6fc:	f88b 3804 	strb.w	r3, [fp, #2052]	; 0x804
9001d700:	2301      	movs	r3, #1
9001d702:	9907      	ldr	r1, [sp, #28]
9001d704:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
9001d708:	d30f      	bcc.n	9001d72a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1f2>
9001d70a:	2100      	movs	r1, #0
9001d70c:	9301      	str	r3, [sp, #4]
9001d70e:	9103      	str	r1, [sp, #12]
9001d710:	e032      	b.n	9001d778 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
9001d712:	9b07      	ldr	r3, [sp, #28]
9001d714:	429a      	cmp	r2, r3
9001d716:	d318      	bcc.n	9001d74a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x212>
9001d718:	9b01      	ldr	r3, [sp, #4]
9001d71a:	f89b 1804 	ldrb.w	r1, [fp, #2052]	; 0x804
9001d71e:	445b      	add	r3, fp
9001d720:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
9001d724:	9b01      	ldr	r3, [sp, #4]
9001d726:	3301      	adds	r3, #1
9001d728:	b29b      	uxth	r3, r3
9001d72a:	9907      	ldr	r1, [sp, #28]
9001d72c:	f89b 0804 	ldrb.w	r0, [fp, #2052]	; 0x804
9001d730:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
9001d734:	7108      	strb	r0, [r1, #4]
9001d736:	980b      	ldr	r0, [sp, #44]	; 0x2c
9001d738:	80c8      	strh	r0, [r1, #6]
9001d73a:	9801      	ldr	r0, [sp, #4]
9001d73c:	3001      	adds	r0, #1
9001d73e:	7148      	strb	r0, [r1, #5]
9001d740:	9907      	ldr	r1, [sp, #28]
9001d742:	3101      	adds	r1, #1
9001d744:	b289      	uxth	r1, r1
9001d746:	9107      	str	r1, [sp, #28]
9001d748:	e7df      	b.n	9001d70a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
9001d74a:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
9001d74e:	4611      	mov	r1, r2
9001d750:	795b      	ldrb	r3, [r3, #5]
9001d752:	f603 0004 	addw	r0, r3, #2052	; 0x804
9001d756:	4458      	add	r0, fp
9001d758:	9e17      	ldr	r6, [sp, #92]	; 0x5c
9001d75a:	4406      	add	r6, r0
9001d75c:	2e00      	cmp	r6, #0
9001d75e:	dd06      	ble.n	9001d76e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
9001d760:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
9001d764:	790e      	ldrb	r6, [r1, #4]
9001d766:	f800 6d01 	strb.w	r6, [r0, #-1]!
9001d76a:	88c9      	ldrh	r1, [r1, #6]
9001d76c:	e7f4      	b.n	9001d758 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x220>
9001d76e:	f88b 1804 	strb.w	r1, [fp, #2052]	; 0x804
9001d772:	b29b      	uxth	r3, r3
9001d774:	e7c5      	b.n	9001d702 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
9001d776:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
9001d778:	4621      	mov	r1, r4
9001d77a:	920b      	str	r2, [sp, #44]	; 0x2c
9001d77c:	469e      	mov	lr, r3
9001d77e:	e78e      	b.n	9001d69e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x166>
9001d780:	9a03      	ldr	r2, [sp, #12]
9001d782:	ebae 0305 	sub.w	r3, lr, r5
9001d786:	f8bd 4018 	ldrh.w	r4, [sp, #24]
9001d78a:	442a      	add	r2, r5
9001d78c:	b29b      	uxth	r3, r3
9001d78e:	b292      	uxth	r2, r2
9001d790:	9203      	str	r2, [sp, #12]
9001d792:	2500      	movs	r5, #0
9001d794:	9a0a      	ldr	r2, [sp, #40]	; 0x28
9001d796:	4542      	cmp	r2, r8
9001d798:	d88d      	bhi.n	9001d6b6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17e>
9001d79a:	4621      	mov	r1, r4
9001d79c:	e74d      	b.n	9001d63a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x102>
9001d79e:	458e      	cmp	lr, r1
9001d7a0:	f04f 0900 	mov.w	r9, #0
9001d7a4:	bf2b      	itete	cs
9001d7a6:	ebae 0301 	subcs.w	r3, lr, r1
9001d7aa:	eba1 040e 	subcc.w	r4, r1, lr
9001d7ae:	462c      	movcs	r4, r5
9001d7b0:	462b      	movcc	r3, r5
9001d7b2:	bf27      	ittee	cs
9001d7b4:	b29b      	uxthcs	r3, r3
9001d7b6:	910c      	strcs	r1, [sp, #48]	; 0x30
9001d7b8:	b2a4      	uxthcc	r4, r4
9001d7ba:	f8cd e030 	strcc.w	lr, [sp, #48]	; 0x30
9001d7be:	9a03      	ldr	r2, [sp, #12]
9001d7c0:	980c      	ldr	r0, [sp, #48]	; 0x30
9001d7c2:	444a      	add	r2, r9
9001d7c4:	4548      	cmp	r0, r9
9001d7c6:	b292      	uxth	r2, r2
9001d7c8:	d074      	beq.n	9001d8b4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x37c>
9001d7ca:	2004      	movs	r0, #4
9001d7cc:	445a      	add	r2, fp
9001d7ce:	4605      	mov	r5, r0
9001d7d0:	f892 2804 	ldrb.w	r2, [r2, #2052]	; 0x804
9001d7d4:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001d7d6:	fb15 0202 	smlabb	r2, r5, r2, r0
9001d7da:	9812      	ldr	r0, [sp, #72]	; 0x48
9001d7dc:	5880      	ldr	r0, [r0, r2]
9001d7de:	ea5f 6a10 	movs.w	sl, r0, lsr #24
9001d7e2:	d014      	beq.n	9001d80e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
9001d7e4:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
9001d7e8:	ea4f 2510 	mov.w	r5, r0, lsr #8
9001d7ec:	d112      	bne.n	9001d814 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
9001d7ee:	9a0e      	ldr	r2, [sp, #56]	; 0x38
9001d7f0:	2aff      	cmp	r2, #255	; 0xff
9001d7f2:	d10f      	bne.n	9001d814 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
9001d7f4:	0942      	lsrs	r2, r0, #5
9001d7f6:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
9001d7fa:	f3c0 00c4 	ubfx	r0, r0, #3, #5
9001d7fe:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001d802:	f025 0507 	bic.w	r5, r5, #7
9001d806:	4315      	orrs	r5, r2
9001d808:	4305      	orrs	r5, r0
9001d80a:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
9001d80e:	f109 0901 	add.w	r9, r9, #1
9001d812:	e7d4      	b.n	9001d7be <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x286>
9001d814:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
9001d818:	b2ed      	uxtb	r5, r5
9001d81a:	ea4f 06ec 	mov.w	r6, ip, asr #3
9001d81e:	ea4f 272c 	mov.w	r7, ip, asr #8
9001d822:	f006 02fc 	and.w	r2, r6, #252	; 0xfc
9001d826:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001d82a:	f3c0 4607 	ubfx	r6, r0, #16, #8
9001d82e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001d832:	9215      	str	r2, [sp, #84]	; 0x54
9001d834:	fa5f fc8c 	uxtb.w	ip, ip
9001d838:	9a0e      	ldr	r2, [sp, #56]	; 0x38
9001d83a:	b2c0      	uxtb	r0, r0
9001d83c:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
9001d840:	fb02 fa0a 	mul.w	sl, r2, sl
9001d844:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
9001d848:	f10a 0201 	add.w	r2, sl, #1
9001d84c:	eb02 222a 	add.w	r2, r2, sl, asr #8
9001d850:	1212      	asrs	r2, r2, #8
9001d852:	fa1f fa82 	uxth.w	sl, r2
9001d856:	43d2      	mvns	r2, r2
9001d858:	fb16 f60a 	smulbb	r6, r6, sl
9001d85c:	b2d2      	uxtb	r2, r2
9001d85e:	fb10 f00a 	smulbb	r0, r0, sl
9001d862:	fb07 6702 	mla	r7, r7, r2, r6
9001d866:	9e15      	ldr	r6, [sp, #84]	; 0x54
9001d868:	fb0c 0002 	mla	r0, ip, r2, r0
9001d86c:	fb15 f50a 	smulbb	r5, r5, sl
9001d870:	b2bf      	uxth	r7, r7
9001d872:	b280      	uxth	r0, r0
9001d874:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
9001d878:	fb06 5602 	mla	r6, r6, r2, r5
9001d87c:	1c7a      	adds	r2, r7, #1
9001d87e:	1c45      	adds	r5, r0, #1
9001d880:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001d884:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001d888:	b2b6      	uxth	r6, r6
9001d88a:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001d88e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001d892:	432f      	orrs	r7, r5
9001d894:	1c75      	adds	r5, r6, #1
9001d896:	eb05 2516 	add.w	r5, r5, r6, lsr #8
9001d89a:	096d      	lsrs	r5, r5, #5
9001d89c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001d8a0:	432f      	orrs	r7, r5
9001d8a2:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
9001d8a6:	e7b2      	b.n	9001d80e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
9001d8a8:	24039834 	.word	0x24039834
9001d8ac:	2403982e 	.word	0x2403982e
9001d8b0:	fffff7fb 	.word	0xfffff7fb
9001d8b4:	9203      	str	r2, [sp, #12]
9001d8b6:	458e      	cmp	lr, r1
9001d8b8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
9001d8ba:	eb08 0842 	add.w	r8, r8, r2, lsl #1
9001d8be:	f4ff af68 	bcc.w	9001d792 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
9001d8c2:	9a16      	ldr	r2, [sp, #88]	; 0x58
9001d8c4:	9906      	ldr	r1, [sp, #24]
9001d8c6:	8812      	ldrh	r2, [r2, #0]
9001d8c8:	1a52      	subs	r2, r2, r1
9001d8ca:	9914      	ldr	r1, [sp, #80]	; 0x50
9001d8cc:	eb08 0842 	add.w	r8, r8, r2, lsl #1
9001d8d0:	9a09      	ldr	r2, [sp, #36]	; 0x24
9001d8d2:	3201      	adds	r2, #1
9001d8d4:	428a      	cmp	r2, r1
9001d8d6:	9209      	str	r2, [sp, #36]	; 0x24
9001d8d8:	d111      	bne.n	9001d8fe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3c6>
9001d8da:	f8bd 5068 	ldrh.w	r5, [sp, #104]	; 0x68
9001d8de:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
9001d8e2:	9b06      	ldr	r3, [sp, #24]
9001d8e4:	eba5 0509 	sub.w	r5, r5, r9
9001d8e8:	b2ad      	uxth	r5, r5
9001d8ea:	2d00      	cmp	r5, #0
9001d8ec:	bf08      	it	eq
9001d8ee:	4619      	moveq	r1, r3
9001d8f0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001d8f2:	bf18      	it	ne
9001d8f4:	2100      	movne	r1, #0
9001d8f6:	3301      	adds	r3, #1
9001d8f8:	b289      	uxth	r1, r1
9001d8fa:	930d      	str	r3, [sp, #52]	; 0x34
9001d8fc:	e694      	b.n	9001d628 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf0>
9001d8fe:	f8bd 4018 	ldrh.w	r4, [sp, #24]
9001d902:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
9001d906:	1b2d      	subs	r5, r5, r4
9001d908:	b2ad      	uxth	r5, r5
9001d90a:	2d00      	cmp	r5, #0
9001d90c:	bf18      	it	ne
9001d90e:	2400      	movne	r4, #0
9001d910:	e740      	b.n	9001d794 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25c>
9001d912:	4b04      	ldr	r3, [pc, #16]	; (9001d924 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3ec>)
9001d914:	6818      	ldr	r0, [r3, #0]
9001d916:	6803      	ldr	r3, [r0, #0]
9001d918:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001d91a:	4798      	blx	r3
9001d91c:	b01d      	add	sp, #116	; 0x74
9001d91e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001d922:	bf00      	nop
9001d924:	24039834 	.word	0x24039834

9001d928 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
9001d928:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d92c:	b09f      	sub	sp, #124	; 0x7c
9001d92e:	461d      	mov	r5, r3
9001d930:	4604      	mov	r4, r0
9001d932:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9001d934:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
9001d938:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
9001d93c:	920a      	str	r2, [sp, #40]	; 0x28
9001d93e:	2a00      	cmp	r2, #0
9001d940:	f000 81fe 	beq.w	9001dd40 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>
9001d944:	6828      	ldr	r0, [r5, #0]
9001d946:	aa1a      	add	r2, sp, #104	; 0x68
9001d948:	6869      	ldr	r1, [r5, #4]
9001d94a:	c203      	stmia	r2!, {r0, r1}
9001d94c:	6818      	ldr	r0, [r3, #0]
9001d94e:	aa1c      	add	r2, sp, #112	; 0x70
9001d950:	6859      	ldr	r1, [r3, #4]
9001d952:	c203      	stmia	r2!, {r0, r1}
9001d954:	a81a      	add	r0, sp, #104	; 0x68
9001d956:	f7f8 fdef 	bl	90016538 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001d95a:	4629      	mov	r1, r5
9001d95c:	a81c      	add	r0, sp, #112	; 0x70
9001d95e:	f7f8 fe2f 	bl	900165c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001d962:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
9001d966:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
9001d96a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
9001d96e:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	; 0x76
9001d972:	bfdb      	ittet	le
9001d974:	b29a      	uxthle	r2, r3
9001d976:	f44f 6180 	movle.w	r1, #1024	; 0x400
9001d97a:	2201      	movgt	r2, #1
9001d97c:	fb91 f2f2 	sdivle	r2, r1, r2
9001d980:	9201      	str	r2, [sp, #4]
9001d982:	9801      	ldr	r0, [sp, #4]
9001d984:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
9001d988:	9901      	ldr	r1, [sp, #4]
9001d98a:	fb92 f0f0 	sdiv	r0, r2, r0
9001d98e:	b280      	uxth	r0, r0
9001d990:	440e      	add	r6, r1
9001d992:	9010      	str	r0, [sp, #64]	; 0x40
9001d994:	3e01      	subs	r6, #1
9001d996:	9801      	ldr	r0, [sp, #4]
9001d998:	9d10      	ldr	r5, [sp, #64]	; 0x40
9001d99a:	fb05 2510 	mls	r5, r5, r0, r2
9001d99e:	fb96 f6f1 	sdiv	r6, r6, r1
9001d9a2:	fb15 f503 	smulbb	r5, r5, r3
9001d9a6:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
9001d9aa:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
9001d9ae:	3601      	adds	r6, #1
9001d9b0:	440d      	add	r5, r1
9001d9b2:	4419      	add	r1, r3
9001d9b4:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
9001d9b8:	b2b6      	uxth	r6, r6
9001d9ba:	441a      	add	r2, r3
9001d9bc:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
9001d9c0:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
9001d9c4:	b2ad      	uxth	r5, r5
9001d9c6:	9304      	str	r3, [sp, #16]
9001d9c8:	4b96      	ldr	r3, [pc, #600]	; (9001dc24 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
9001d9ca:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
9001d9ce:	6818      	ldr	r0, [r3, #0]
9001d9d0:	6803      	ldr	r3, [r0, #0]
9001d9d2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001d9d4:	4798      	blx	r3
9001d9d6:	4b94      	ldr	r3, [pc, #592]	; (9001dc28 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>)
9001d9d8:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
9001d9dc:	2d00      	cmp	r5, #0
9001d9de:	881a      	ldrh	r2, [r3, #0]
9001d9e0:	f9bd c070 	ldrsh.w	ip, [sp, #112]	; 0x70
9001d9e4:	fb02 f707 	mul.w	r7, r2, r7
9001d9e8:	fb02 c101 	mla	r1, r2, r1, ip
9001d9ec:	9318      	str	r3, [sp, #96]	; 0x60
9001d9ee:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
9001d9f2:	4b8e      	ldr	r3, [pc, #568]	; (9001dc2c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x304>)
9001d9f4:	bf18      	it	ne
9001d9f6:	2100      	movne	r1, #0
9001d9f8:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
9001d9fc:	eba3 0304 	sub.w	r3, r3, r4
9001da00:	920b      	str	r2, [sp, #44]	; 0x2c
9001da02:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001da04:	9319      	str	r3, [sp, #100]	; 0x64
9001da06:	eb02 0686 	add.w	r6, r2, r6, lsl #2
9001da0a:	f106 0204 	add.w	r2, r6, #4
9001da0e:	9206      	str	r2, [sp, #24]
9001da10:	9a0a      	ldr	r2, [sp, #40]	; 0x28
9001da12:	ea6f 0202 	mvn.w	r2, r2
9001da16:	b2d2      	uxtb	r2, r2
9001da18:	9215      	str	r2, [sp, #84]	; 0x54
9001da1a:	9a04      	ldr	r2, [sp, #16]
9001da1c:	bf08      	it	eq
9001da1e:	4611      	moveq	r1, r2
9001da20:	2200      	movs	r2, #0
9001da22:	b289      	uxth	r1, r1
9001da24:	920d      	str	r2, [sp, #52]	; 0x34
9001da26:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001da28:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001da2a:	fa12 f383 	uxtah	r3, r2, r3
9001da2e:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001da30:	eb02 0383 	add.w	r3, r2, r3, lsl #2
9001da34:	3304      	adds	r3, #4
9001da36:	9307      	str	r3, [sp, #28]
9001da38:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001da3a:	455b      	cmp	r3, fp
9001da3c:	f240 817b 	bls.w	9001dd36 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x40e>
9001da40:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
9001da44:	f04f 0801 	mov.w	r8, #1
9001da48:	9a01      	ldr	r2, [sp, #4]
9001da4a:	9807      	ldr	r0, [sp, #28]
9001da4c:	46c4      	mov	ip, r8
9001da4e:	f8cd 8008 	str.w	r8, [sp, #8]
9001da52:	7800      	ldrb	r0, [r0, #0]
9001da54:	fbb5 f3f3 	udiv	r3, r5, r3
9001da58:	1ad3      	subs	r3, r2, r3
9001da5a:	9011      	str	r0, [sp, #68]	; 0x44
9001da5c:	3001      	adds	r0, #1
9001da5e:	b29b      	uxth	r3, r3
9001da60:	9005      	str	r0, [sp, #20]
9001da62:	9316      	str	r3, [sp, #88]	; 0x58
9001da64:	9b07      	ldr	r3, [sp, #28]
9001da66:	785a      	ldrb	r2, [r3, #1]
9001da68:	789b      	ldrb	r3, [r3, #2]
9001da6a:	021b      	lsls	r3, r3, #8
9001da6c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9001da70:	9a07      	ldr	r2, [sp, #28]
9001da72:	78d2      	ldrb	r2, [r2, #3]
9001da74:	4313      	orrs	r3, r2
9001da76:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001da78:	441a      	add	r2, r3
9001da7a:	1c50      	adds	r0, r2, #1
9001da7c:	7852      	ldrb	r2, [r2, #1]
9001da7e:	9003      	str	r0, [sp, #12]
9001da80:	0212      	lsls	r2, r2, #8
9001da82:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001da84:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
9001da88:	5cc3      	ldrb	r3, [r0, r3]
9001da8a:	431a      	orrs	r2, r3
9001da8c:	b293      	uxth	r3, r2
9001da8e:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
9001da92:	930c      	str	r3, [sp, #48]	; 0x30
9001da94:	2300      	movs	r3, #0
9001da96:	9308      	str	r3, [sp, #32]
9001da98:	461a      	mov	r2, r3
9001da9a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
9001da9e:	930e      	str	r3, [sp, #56]	; 0x38
9001daa0:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
9001daa4:	930f      	str	r3, [sp, #60]	; 0x3c
9001daa6:	2d00      	cmp	r5, #0
9001daa8:	d07d      	beq.n	9001dba6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27e>
9001daaa:	45ac      	cmp	ip, r5
9001daac:	d26d      	bcs.n	9001db8a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x262>
9001daae:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001dab0:	eba5 050c 	sub.w	r5, r5, ip
9001dab4:	4608      	mov	r0, r1
9001dab6:	455b      	cmp	r3, fp
9001dab8:	b2ad      	uxth	r5, r5
9001daba:	d802      	bhi.n	9001dac2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19a>
9001dabc:	e071      	b.n	9001dba2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27a>
9001dabe:	2b00      	cmp	r3, #0
9001dac0:	d15d      	bne.n	9001db7e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
9001dac2:	9b03      	ldr	r3, [sp, #12]
9001dac4:	9a02      	ldr	r2, [sp, #8]
9001dac6:	785b      	ldrb	r3, [r3, #1]
9001dac8:	f1c2 0207 	rsb	r2, r2, #7
9001dacc:	9902      	ldr	r1, [sp, #8]
9001dace:	4093      	lsls	r3, r2
9001dad0:	005b      	lsls	r3, r3, #1
9001dad2:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
9001dad6:	9b03      	ldr	r3, [sp, #12]
9001dad8:	781b      	ldrb	r3, [r3, #0]
9001dada:	410b      	asrs	r3, r1
9001dadc:	3101      	adds	r1, #1
9001dade:	b2c9      	uxtb	r1, r1
9001dae0:	b2db      	uxtb	r3, r3
9001dae2:	2908      	cmp	r1, #8
9001dae4:	9102      	str	r1, [sp, #8]
9001dae6:	9903      	ldr	r1, [sp, #12]
9001dae8:	ea43 0302 	orr.w	r3, r3, r2
9001daec:	bf0c      	ite	eq
9001daee:	3102      	addeq	r1, #2
9001daf0:	3101      	addne	r1, #1
9001daf2:	b29a      	uxth	r2, r3
9001daf4:	bf05      	ittet	eq
9001daf6:	9103      	streq	r1, [sp, #12]
9001daf8:	2100      	moveq	r1, #0
9001dafa:	9103      	strne	r1, [sp, #12]
9001dafc:	9102      	streq	r1, [sp, #8]
9001dafe:	9911      	ldr	r1, [sp, #68]	; 0x44
9001db00:	4291      	cmp	r1, r2
9001db02:	d30a      	bcc.n	9001db1a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1f2>
9001db04:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
9001db08:	2301      	movs	r3, #1
9001db0a:	9905      	ldr	r1, [sp, #20]
9001db0c:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
9001db10:	d30f      	bcc.n	9001db32 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x20a>
9001db12:	2100      	movs	r1, #0
9001db14:	4698      	mov	r8, r3
9001db16:	9100      	str	r1, [sp, #0]
9001db18:	e032      	b.n	9001db80 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x258>
9001db1a:	9b05      	ldr	r3, [sp, #20]
9001db1c:	429a      	cmp	r2, r3
9001db1e:	d318      	bcc.n	9001db52 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22a>
9001db20:	eb04 0308 	add.w	r3, r4, r8
9001db24:	f894 1804 	ldrb.w	r1, [r4, #2052]	; 0x804
9001db28:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
9001db2c:	f108 0301 	add.w	r3, r8, #1
9001db30:	b29b      	uxth	r3, r3
9001db32:	9905      	ldr	r1, [sp, #20]
9001db34:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
9001db38:	eb04 0181 	add.w	r1, r4, r1, lsl #2
9001db3c:	710e      	strb	r6, [r1, #4]
9001db3e:	9e0c      	ldr	r6, [sp, #48]	; 0x30
9001db40:	80ce      	strh	r6, [r1, #6]
9001db42:	f108 0601 	add.w	r6, r8, #1
9001db46:	714e      	strb	r6, [r1, #5]
9001db48:	9905      	ldr	r1, [sp, #20]
9001db4a:	3101      	adds	r1, #1
9001db4c:	b289      	uxth	r1, r1
9001db4e:	9105      	str	r1, [sp, #20]
9001db50:	e7df      	b.n	9001db12 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1ea>
9001db52:	eb04 0382 	add.w	r3, r4, r2, lsl #2
9001db56:	4611      	mov	r1, r2
9001db58:	795b      	ldrb	r3, [r3, #5]
9001db5a:	f603 0604 	addw	r6, r3, #2052	; 0x804
9001db5e:	4426      	add	r6, r4
9001db60:	9f19      	ldr	r7, [sp, #100]	; 0x64
9001db62:	4437      	add	r7, r6
9001db64:	2f00      	cmp	r7, #0
9001db66:	dd06      	ble.n	9001db76 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24e>
9001db68:	eb04 0181 	add.w	r1, r4, r1, lsl #2
9001db6c:	790f      	ldrb	r7, [r1, #4]
9001db6e:	f806 7d01 	strb.w	r7, [r6, #-1]!
9001db72:	88c9      	ldrh	r1, [r1, #6]
9001db74:	e7f4      	b.n	9001db60 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x238>
9001db76:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
9001db7a:	b29b      	uxth	r3, r3
9001db7c:	e7c5      	b.n	9001db0a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e2>
9001db7e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
9001db80:	920c      	str	r2, [sp, #48]	; 0x30
9001db82:	4601      	mov	r1, r0
9001db84:	9a00      	ldr	r2, [sp, #0]
9001db86:	469c      	mov	ip, r3
9001db88:	e78d      	b.n	9001daa6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x17e>
9001db8a:	ebac 0305 	sub.w	r3, ip, r5
9001db8e:	1957      	adds	r7, r2, r5
9001db90:	f8bd 0010 	ldrh.w	r0, [sp, #16]
9001db94:	b2ba      	uxth	r2, r7
9001db96:	b29b      	uxth	r3, r3
9001db98:	9200      	str	r2, [sp, #0]
9001db9a:	2500      	movs	r5, #0
9001db9c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
9001db9e:	455a      	cmp	r2, fp
9001dba0:	d88d      	bhi.n	9001dabe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
9001dba2:	4601      	mov	r1, r0
9001dba4:	e748      	b.n	9001da38 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x110>
9001dba6:	458c      	cmp	ip, r1
9001dba8:	bf27      	ittee	cs
9001dbaa:	ebac 0301 	subcs.w	r3, ip, r1
9001dbae:	4628      	movcs	r0, r5
9001dbb0:	eba1 000c 	subcc.w	r0, r1, ip
9001dbb4:	462b      	movcc	r3, r5
9001dbb6:	9d0a      	ldr	r5, [sp, #40]	; 0x28
9001dbb8:	bf27      	ittee	cs
9001dbba:	b29b      	uxthcs	r3, r3
9001dbbc:	9109      	strcs	r1, [sp, #36]	; 0x24
9001dbbe:	b280      	uxthcc	r0, r0
9001dbc0:	f8cd c024 	strcc.w	ip, [sp, #36]	; 0x24
9001dbc4:	2dff      	cmp	r5, #255	; 0xff
9001dbc6:	9d09      	ldr	r5, [sp, #36]	; 0x24
9001dbc8:	eb02 0705 	add.w	r7, r2, r5
9001dbcc:	b2bd      	uxth	r5, r7
9001dbce:	9500      	str	r5, [sp, #0]
9001dbd0:	d12e      	bne.n	9001dc30 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x308>
9001dbd2:	465e      	mov	r6, fp
9001dbd4:	9d00      	ldr	r5, [sp, #0]
9001dbd6:	42aa      	cmp	r2, r5
9001dbd8:	f040 8083 	bne.w	9001dce2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3ba>
9001dbdc:	9a09      	ldr	r2, [sp, #36]	; 0x24
9001dbde:	458c      	cmp	ip, r1
9001dbe0:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
9001dbe4:	d3d9      	bcc.n	9001db9a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
9001dbe6:	9a18      	ldr	r2, [sp, #96]	; 0x60
9001dbe8:	9904      	ldr	r1, [sp, #16]
9001dbea:	8812      	ldrh	r2, [r2, #0]
9001dbec:	1a52      	subs	r2, r2, r1
9001dbee:	9916      	ldr	r1, [sp, #88]	; 0x58
9001dbf0:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
9001dbf4:	9a08      	ldr	r2, [sp, #32]
9001dbf6:	3201      	adds	r2, #1
9001dbf8:	428a      	cmp	r2, r1
9001dbfa:	9208      	str	r2, [sp, #32]
9001dbfc:	f040 8091 	bne.w	9001dd22 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3fa>
9001dc00:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
9001dc04:	f8bd c068 	ldrh.w	ip, [sp, #104]	; 0x68
9001dc08:	9b04      	ldr	r3, [sp, #16]
9001dc0a:	eba5 050c 	sub.w	r5, r5, ip
9001dc0e:	b2ad      	uxth	r5, r5
9001dc10:	2d00      	cmp	r5, #0
9001dc12:	bf08      	it	eq
9001dc14:	4619      	moveq	r1, r3
9001dc16:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001dc18:	bf18      	it	ne
9001dc1a:	2100      	movne	r1, #0
9001dc1c:	3301      	adds	r3, #1
9001dc1e:	b289      	uxth	r1, r1
9001dc20:	930d      	str	r3, [sp, #52]	; 0x34
9001dc22:	e700      	b.n	9001da26 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xfe>
9001dc24:	24039834 	.word	0x24039834
9001dc28:	2403982e 	.word	0x2403982e
9001dc2c:	fffff7fb 	.word	0xfffff7fb
9001dc30:	46d9      	mov	r9, fp
9001dc32:	9d00      	ldr	r5, [sp, #0]
9001dc34:	42aa      	cmp	r2, r5
9001dc36:	d0d1      	beq.n	9001dbdc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2b4>
9001dc38:	1c55      	adds	r5, r2, #1
9001dc3a:	4422      	add	r2, r4
9001dc3c:	f892 e804 	ldrb.w	lr, [r2, #2052]	; 0x804
9001dc40:	9a06      	ldr	r2, [sp, #24]
9001dc42:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001dc46:	9517      	str	r5, [sp, #92]	; 0x5c
9001dc48:	4472      	add	r2, lr
9001dc4a:	9212      	str	r2, [sp, #72]	; 0x48
9001dc4c:	f8b9 2000 	ldrh.w	r2, [r9]
9001dc50:	9f12      	ldr	r7, [sp, #72]	; 0x48
9001dc52:	1216      	asrs	r6, r2, #8
9001dc54:	f897 a002 	ldrb.w	sl, [r7, #2]
9001dc58:	10d5      	asrs	r5, r2, #3
9001dc5a:	9f0e      	ldr	r7, [sp, #56]	; 0x38
9001dc5c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001dc60:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9001dc64:	00d2      	lsls	r2, r2, #3
9001dc66:	fb1a fa07 	smulbb	sl, sl, r7
9001dc6a:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001dc6e:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
9001dc70:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001dc74:	b2d2      	uxtb	r2, r2
9001dc76:	fb06 a607 	mla	r6, r6, r7, sl
9001dc7a:	9f12      	ldr	r7, [sp, #72]	; 0x48
9001dc7c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001dc80:	f897 a001 	ldrb.w	sl, [r7, #1]
9001dc84:	b2b6      	uxth	r6, r6
9001dc86:	9f0e      	ldr	r7, [sp, #56]	; 0x38
9001dc88:	fb1a fa07 	smulbb	sl, sl, r7
9001dc8c:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
9001dc8e:	fb05 a507 	mla	r5, r5, r7, sl
9001dc92:	9f06      	ldr	r7, [sp, #24]
9001dc94:	f106 0a01 	add.w	sl, r6, #1
9001dc98:	f817 e00e 	ldrb.w	lr, [r7, lr]
9001dc9c:	b2ad      	uxth	r5, r5
9001dc9e:	9f0e      	ldr	r7, [sp, #56]	; 0x38
9001dca0:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
9001dca4:	f105 0a01 	add.w	sl, r5, #1
9001dca8:	fb1e fe07 	smulbb	lr, lr, r7
9001dcac:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
9001dcae:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001dcb2:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
9001dcb6:	fb02 e207 	mla	r2, r2, r7, lr
9001dcba:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001dcbe:	b292      	uxth	r2, r2
9001dcc0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001dcc4:	f102 0e01 	add.w	lr, r2, #1
9001dcc8:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
9001dccc:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
9001dcd0:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
9001dcd4:	ea4e 0606 	orr.w	r6, lr, r6
9001dcd8:	ea46 060a 	orr.w	r6, r6, sl
9001dcdc:	f829 6b02 	strh.w	r6, [r9], #2
9001dce0:	e7a7      	b.n	9001dc32 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x30a>
9001dce2:	f102 0e01 	add.w	lr, r2, #1
9001dce6:	4422      	add	r2, r4
9001dce8:	9f06      	ldr	r7, [sp, #24]
9001dcea:	f892 5804 	ldrb.w	r5, [r2, #2052]	; 0x804
9001dcee:	9a06      	ldr	r2, [sp, #24]
9001dcf0:	eb05 0545 	add.w	r5, r5, r5, lsl #1
9001dcf4:	eb02 0a05 	add.w	sl, r2, r5
9001dcf8:	4a13      	ldr	r2, [pc, #76]	; (9001dd48 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x420>)
9001dcfa:	f89a 9002 	ldrb.w	r9, [sl, #2]
9001dcfe:	ea02 2909 	and.w	r9, r2, r9, lsl #8
9001dd02:	f89a 2001 	ldrb.w	r2, [sl, #1]
9001dd06:	00d2      	lsls	r2, r2, #3
9001dd08:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001dd0c:	ea49 0202 	orr.w	r2, r9, r2
9001dd10:	f817 9005 	ldrb.w	r9, [r7, r5]
9001dd14:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
9001dd18:	f826 2b02 	strh.w	r2, [r6], #2
9001dd1c:	fa1f f28e 	uxth.w	r2, lr
9001dd20:	e758      	b.n	9001dbd4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>
9001dd22:	f8bd 0010 	ldrh.w	r0, [sp, #16]
9001dd26:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
9001dd2a:	1a2d      	subs	r5, r5, r0
9001dd2c:	b2ad      	uxth	r5, r5
9001dd2e:	2d00      	cmp	r5, #0
9001dd30:	bf18      	it	ne
9001dd32:	2000      	movne	r0, #0
9001dd34:	e732      	b.n	9001db9c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x274>
9001dd36:	4b05      	ldr	r3, [pc, #20]	; (9001dd4c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x424>)
9001dd38:	6818      	ldr	r0, [r3, #0]
9001dd3a:	6803      	ldr	r3, [r0, #0]
9001dd3c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001dd3e:	4798      	blx	r3
9001dd40:	b01f      	add	sp, #124	; 0x7c
9001dd42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001dd46:	bf00      	nop
9001dd48:	fffff800 	.word	0xfffff800
9001dd4c:	24039834 	.word	0x24039834

9001dd50 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
9001dd50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001dd54:	b091      	sub	sp, #68	; 0x44
9001dd56:	469b      	mov	fp, r3
9001dd58:	4616      	mov	r6, r2
9001dd5a:	f9b3 2000 	ldrsh.w	r2, [r3]
9001dd5e:	f10d 0828 	add.w	r8, sp, #40	; 0x28
9001dd62:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
9001dd66:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
9001dd6a:	4604      	mov	r4, r0
9001dd6c:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
9001dd70:	4640      	mov	r0, r8
9001dd72:	460d      	mov	r5, r1
9001dd74:	4659      	mov	r1, fp
9001dd76:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
9001dd7a:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
9001dd7e:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
9001dd82:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
9001dd86:	f7f3 fb63 	bl	90011450 <_ZN8touchgfx4RectaNERKS0_>
9001dd8a:	4631      	mov	r1, r6
9001dd8c:	4640      	mov	r0, r8
9001dd8e:	f7f3 fb5f 	bl	90011450 <_ZN8touchgfx4RectaNERKS0_>
9001dd92:	4b74      	ldr	r3, [pc, #464]	; (9001df64 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
9001dd94:	8818      	ldrh	r0, [r3, #0]
9001dd96:	4b74      	ldr	r3, [pc, #464]	; (9001df68 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
9001dd98:	b202      	sxth	r2, r0
9001dd9a:	8819      	ldrh	r1, [r3, #0]
9001dd9c:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
9001dda0:	b20e      	sxth	r6, r1
9001dda2:	2b00      	cmp	r3, #0
9001dda4:	da07      	bge.n	9001ddb6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
9001dda6:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
9001ddaa:	4463      	add	r3, ip
9001ddac:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
9001ddb0:	2300      	movs	r3, #0
9001ddb2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
9001ddb6:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
9001ddba:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
9001ddbe:	1ad2      	subs	r2, r2, r3
9001ddc0:	4594      	cmp	ip, r2
9001ddc2:	bfc4      	itt	gt
9001ddc4:	1ac2      	subgt	r2, r0, r3
9001ddc6:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
9001ddca:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
9001ddce:	2a00      	cmp	r2, #0
9001ddd0:	da07      	bge.n	9001dde2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
9001ddd2:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
9001ddd6:	4462      	add	r2, ip
9001ddd8:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
9001dddc:	2200      	movs	r2, #0
9001ddde:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
9001dde2:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
9001dde6:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
9001ddea:	eba6 060a 	sub.w	r6, r6, sl
9001ddee:	42b2      	cmp	r2, r6
9001ddf0:	bfc4      	itt	gt
9001ddf2:	eba1 020a 	subgt.w	r2, r1, sl
9001ddf6:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
9001ddfa:	4a5c      	ldr	r2, [pc, #368]	; (9001df6c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
9001ddfc:	7812      	ldrb	r2, [r2, #0]
9001ddfe:	b9a2      	cbnz	r2, 9001de2a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
9001de00:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
9001de04:	4286      	cmp	r6, r0
9001de06:	4640      	mov	r0, r8
9001de08:	9303      	str	r3, [sp, #12]
9001de0a:	bf14      	ite	ne
9001de0c:	2600      	movne	r6, #0
9001de0e:	2601      	moveq	r6, #1
9001de10:	f7f3 fb61 	bl	900114d6 <_ZNK8touchgfx4Rect7isEmptyEv>
9001de14:	9b03      	ldr	r3, [sp, #12]
9001de16:	b160      	cbz	r0, 9001de32 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
9001de18:	2300      	movs	r3, #0
9001de1a:	8023      	strh	r3, [r4, #0]
9001de1c:	8063      	strh	r3, [r4, #2]
9001de1e:	80a3      	strh	r3, [r4, #4]
9001de20:	4620      	mov	r0, r4
9001de22:	80e3      	strh	r3, [r4, #6]
9001de24:	b011      	add	sp, #68	; 0x44
9001de26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001de2a:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
9001de2e:	428e      	cmp	r6, r1
9001de30:	e7e9      	b.n	9001de06 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
9001de32:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
9001de36:	a90e      	add	r1, sp, #56	; 0x38
9001de38:	900e      	str	r0, [sp, #56]	; 0x38
9001de3a:	a80c      	add	r0, sp, #48	; 0x30
9001de3c:	9205      	str	r2, [sp, #20]
9001de3e:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
9001de42:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
9001de46:	9206      	str	r2, [sp, #24]
9001de48:	f8bb 2000 	ldrh.w	r2, [fp]
9001de4c:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
9001de50:	1a9b      	subs	r3, r3, r2
9001de52:	b21b      	sxth	r3, r3
9001de54:	9303      	str	r3, [sp, #12]
9001de56:	f8bb 3002 	ldrh.w	r3, [fp, #2]
9001de5a:	f8df b118 	ldr.w	fp, [pc, #280]	; 9001df74 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
9001de5e:	ebaa 0a03 	sub.w	sl, sl, r3
9001de62:	fa0f f38a 	sxth.w	r3, sl
9001de66:	9304      	str	r3, [sp, #16]
9001de68:	9b03      	ldr	r3, [sp, #12]
9001de6a:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
9001de6e:	9b04      	ldr	r3, [sp, #16]
9001de70:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
9001de74:	9b05      	ldr	r3, [sp, #20]
9001de76:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
9001de7a:	9b06      	ldr	r3, [sp, #24]
9001de7c:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
9001de80:	f7f8 fb9e 	bl	900165c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001de84:	4640      	mov	r0, r8
9001de86:	f7f8 fb57 	bl	90016538 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001de8a:	a80e      	add	r0, sp, #56	; 0x38
9001de8c:	f7f8 fb54 	bl	90016538 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001de90:	4b37      	ldr	r3, [pc, #220]	; (9001df70 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
9001de92:	4628      	mov	r0, r5
9001de94:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
9001de98:	881b      	ldrh	r3, [r3, #0]
9001de9a:	9307      	str	r3, [sp, #28]
9001de9c:	682b      	ldr	r3, [r5, #0]
9001de9e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9001dea0:	4798      	blx	r3
9001dea2:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
9001dea6:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
9001deaa:	4681      	mov	r9, r0
9001deac:	f8db 0000 	ldr.w	r0, [fp]
9001deb0:	fb1a 3305 	smlabb	r3, sl, r5, r3
9001deb4:	9d1a      	ldr	r5, [sp, #104]	; 0x68
9001deb6:	eb05 0543 	add.w	r5, r5, r3, lsl #1
9001deba:	6803      	ldr	r3, [r0, #0]
9001debc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9001debe:	4798      	blx	r3
9001dec0:	4607      	mov	r7, r0
9001dec2:	f8db 0000 	ldr.w	r0, [fp]
9001dec6:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
9001deca:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
9001dece:	6803      	ldr	r3, [r0, #0]
9001ded0:	9109      	str	r1, [sp, #36]	; 0x24
9001ded2:	9208      	str	r2, [sp, #32]
9001ded4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001ded6:	4798      	blx	r3
9001ded8:	f010 0f01 	tst.w	r0, #1
9001dedc:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
9001dee0:	d012      	beq.n	9001df08 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
9001dee2:	f8db 0000 	ldr.w	r0, [fp]
9001dee6:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
9001deea:	6803      	ldr	r3, [r0, #0]
9001deec:	9200      	str	r2, [sp, #0]
9001deee:	6ede      	ldr	r6, [r3, #108]	; 0x6c
9001def0:	462b      	mov	r3, r5
9001def2:	e898 0006 	ldmia.w	r8, {r1, r2}
9001def6:	47b0      	blx	r6
9001def8:	9b03      	ldr	r3, [sp, #12]
9001defa:	8023      	strh	r3, [r4, #0]
9001defc:	9b04      	ldr	r3, [sp, #16]
9001defe:	8063      	strh	r3, [r4, #2]
9001df00:	9b05      	ldr	r3, [sp, #20]
9001df02:	80a3      	strh	r3, [r4, #4]
9001df04:	9b06      	ldr	r3, [sp, #24]
9001df06:	e78b      	b.n	9001de20 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
9001df08:	fb09 f202 	mul.w	r2, r9, r2
9001df0c:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
9001df10:	eb02 0141 	add.w	r1, r2, r1, lsl #1
9001df14:	440f      	add	r7, r1
9001df16:	b166      	cbz	r6, 9001df32 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
9001df18:	9a07      	ldr	r2, [sp, #28]
9001df1a:	4592      	cmp	sl, r2
9001df1c:	d109      	bne.n	9001df32 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
9001df1e:	f8db 0000 	ldr.w	r0, [fp]
9001df22:	fb09 f303 	mul.w	r3, r9, r3
9001df26:	4629      	mov	r1, r5
9001df28:	6802      	ldr	r2, [r0, #0]
9001df2a:	6b56      	ldr	r6, [r2, #52]	; 0x34
9001df2c:	463a      	mov	r2, r7
9001df2e:	47b0      	blx	r6
9001df30:	e7e2      	b.n	9001def8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
9001df32:	fb0a f303 	mul.w	r3, sl, r3
9001df36:	ea4f 064a 	mov.w	r6, sl, lsl #1
9001df3a:	f8df b038 	ldr.w	fp, [pc, #56]	; 9001df74 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
9001df3e:	eb05 0843 	add.w	r8, r5, r3, lsl #1
9001df42:	4545      	cmp	r5, r8
9001df44:	d2d8      	bcs.n	9001def8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
9001df46:	f8db 0000 	ldr.w	r0, [fp]
9001df4a:	4629      	mov	r1, r5
9001df4c:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
9001df50:	4435      	add	r5, r6
9001df52:	6802      	ldr	r2, [r0, #0]
9001df54:	005b      	lsls	r3, r3, #1
9001df56:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
9001df5a:	463a      	mov	r2, r7
9001df5c:	47d0      	blx	sl
9001df5e:	444f      	add	r7, r9
9001df60:	e7ef      	b.n	9001df42 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
9001df62:	bf00      	nop
9001df64:	24039828 	.word	0x24039828
9001df68:	2403982a 	.word	0x2403982a
9001df6c:	2403982c 	.word	0x2403982c
9001df70:	2403982e 	.word	0x2403982e
9001df74:	24039834 	.word	0x24039834

9001df78 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
9001df78:	b5f0      	push	{r4, r5, r6, r7, lr}
9001df7a:	4606      	mov	r6, r0
9001df7c:	b087      	sub	sp, #28
9001df7e:	460c      	mov	r4, r1
9001df80:	4617      	mov	r7, r2
9001df82:	461d      	mov	r5, r3
9001df84:	b333      	cbz	r3, 9001dfd4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
9001df86:	4608      	mov	r0, r1
9001df88:	f7f3 faa5 	bl	900114d6 <_ZNK8touchgfx4Rect7isEmptyEv>
9001df8c:	bb10      	cbnz	r0, 9001dfd4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
9001df8e:	6820      	ldr	r0, [r4, #0]
9001df90:	ab04      	add	r3, sp, #16
9001df92:	6861      	ldr	r1, [r4, #4]
9001df94:	4c1b      	ldr	r4, [pc, #108]	; (9001e004 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
9001df96:	c303      	stmia	r3!, {r0, r1}
9001df98:	a804      	add	r0, sp, #16
9001df9a:	f7f8 facd 	bl	90016538 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001df9e:	6820      	ldr	r0, [r4, #0]
9001dfa0:	6803      	ldr	r3, [r0, #0]
9001dfa2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001dfa4:	4798      	blx	r3
9001dfa6:	2dff      	cmp	r5, #255	; 0xff
9001dfa8:	d016      	beq.n	9001dfd8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
9001dfaa:	f010 0f08 	tst.w	r0, #8
9001dfae:	6820      	ldr	r0, [r4, #0]
9001dfb0:	d015      	beq.n	9001dfde <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
9001dfb2:	2400      	movs	r4, #0
9001dfb4:	6801      	ldr	r1, [r0, #0]
9001dfb6:	f8bd 3012 	ldrh.w	r3, [sp, #18]
9001dfba:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001dfbe:	e9cd 5402 	strd	r5, r4, [sp, #8]
9001dfc2:	f8bd 4016 	ldrh.w	r4, [sp, #22]
9001dfc6:	9401      	str	r4, [sp, #4]
9001dfc8:	f8bd 4014 	ldrh.w	r4, [sp, #20]
9001dfcc:	9400      	str	r4, [sp, #0]
9001dfce:	6e0c      	ldr	r4, [r1, #96]	; 0x60
9001dfd0:	4639      	mov	r1, r7
9001dfd2:	47a0      	blx	r4
9001dfd4:	b007      	add	sp, #28
9001dfd6:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001dfd8:	f010 0f02 	tst.w	r0, #2
9001dfdc:	e7e7      	b.n	9001dfae <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
9001dfde:	6803      	ldr	r3, [r0, #0]
9001dfe0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001dfe2:	4798      	blx	r3
9001dfe4:	4b08      	ldr	r3, [pc, #32]	; (9001e008 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
9001dfe6:	4601      	mov	r1, r0
9001dfe8:	4630      	mov	r0, r6
9001dfea:	881a      	ldrh	r2, [r3, #0]
9001dfec:	6833      	ldr	r3, [r6, #0]
9001dfee:	e9cd 7500 	strd	r7, r5, [sp]
9001dff2:	6a5d      	ldr	r5, [r3, #36]	; 0x24
9001dff4:	ab04      	add	r3, sp, #16
9001dff6:	47a8      	blx	r5
9001dff8:	6820      	ldr	r0, [r4, #0]
9001dffa:	6803      	ldr	r3, [r0, #0]
9001dffc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001dffe:	4798      	blx	r3
9001e000:	e7e8      	b.n	9001dfd4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
9001e002:	bf00      	nop
9001e004:	24039834 	.word	0x24039834
9001e008:	2403982e 	.word	0x2403982e

9001e00c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
9001e00c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001e010:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
9001e014:	4688      	mov	r8, r1
9001e016:	4614      	mov	r4, r2
9001e018:	461d      	mov	r5, r3
9001e01a:	9e08      	ldr	r6, [sp, #32]
9001e01c:	2f00      	cmp	r7, #0
9001e01e:	f000 80ab 	beq.w	9001e178 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001e022:	4618      	mov	r0, r3
9001e024:	f7f3 fa57 	bl	900114d6 <_ZNK8touchgfx4Rect7isEmptyEv>
9001e028:	2800      	cmp	r0, #0
9001e02a:	f040 80a5 	bne.w	9001e178 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001e02e:	f9b5 1000 	ldrsh.w	r1, [r5]
9001e032:	2fff      	cmp	r7, #255	; 0xff
9001e034:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
9001e038:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
9001e03c:	fb04 1303 	mla	r3, r4, r3, r1
9001e040:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
9001e044:	eba4 0200 	sub.w	r2, r4, r0
9001e048:	eb08 0143 	add.w	r1, r8, r3, lsl #1
9001e04c:	fb04 f505 	mul.w	r5, r4, r5
9001e050:	ea4f 2816 	mov.w	r8, r6, lsr #8
9001e054:	eb01 0545 	add.w	r5, r1, r5, lsl #1
9001e058:	d04a      	beq.n	9001e0f0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe4>
9001e05a:	b2bc      	uxth	r4, r7
9001e05c:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
9001e060:	f3c6 4e07 	ubfx	lr, r6, #16, #8
9001e064:	fa5f f788 	uxtb.w	r7, r8
9001e068:	b2f3      	uxtb	r3, r6
9001e06a:	0040      	lsls	r0, r0, #1
9001e06c:	fb0e fe04 	mul.w	lr, lr, r4
9001e070:	4367      	muls	r7, r4
9001e072:	ea4f 0842 	mov.w	r8, r2, lsl #1
9001e076:	4363      	muls	r3, r4
9001e078:	fa1f fc8c 	uxth.w	ip, ip
9001e07c:	42a9      	cmp	r1, r5
9001e07e:	d27b      	bcs.n	9001e178 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001e080:	eb01 0900 	add.w	r9, r1, r0
9001e084:	4549      	cmp	r1, r9
9001e086:	d231      	bcs.n	9001e0ec <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe0>
9001e088:	880a      	ldrh	r2, [r1, #0]
9001e08a:	1214      	asrs	r4, r2, #8
9001e08c:	10d6      	asrs	r6, r2, #3
9001e08e:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
9001e092:	00d2      	lsls	r2, r2, #3
9001e094:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001e098:	b2d2      	uxtb	r2, r2
9001e09a:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
9001e09e:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001e0a2:	fb14 f40c 	smulbb	r4, r4, ip
9001e0a6:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
9001e0aa:	fb12 f20c 	smulbb	r2, r2, ip
9001e0ae:	fb16 f60c 	smulbb	r6, r6, ip
9001e0b2:	4474      	add	r4, lr
9001e0b4:	441a      	add	r2, r3
9001e0b6:	b2a4      	uxth	r4, r4
9001e0b8:	443e      	add	r6, r7
9001e0ba:	b292      	uxth	r2, r2
9001e0bc:	f104 0a01 	add.w	sl, r4, #1
9001e0c0:	b2b6      	uxth	r6, r6
9001e0c2:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
9001e0c6:	f102 0a01 	add.w	sl, r2, #1
9001e0ca:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
9001e0ce:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
9001e0d2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001e0d6:	4322      	orrs	r2, r4
9001e0d8:	1c74      	adds	r4, r6, #1
9001e0da:	eb04 2616 	add.w	r6, r4, r6, lsr #8
9001e0de:	0976      	lsrs	r6, r6, #5
9001e0e0:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001e0e4:	4332      	orrs	r2, r6
9001e0e6:	f821 2b02 	strh.w	r2, [r1], #2
9001e0ea:	e7cb      	b.n	9001e084 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x78>
9001e0ec:	4441      	add	r1, r8
9001e0ee:	e7c5      	b.n	9001e07c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x70>
9001e0f0:	0973      	lsrs	r3, r6, #5
9001e0f2:	4f22      	ldr	r7, [pc, #136]	; (9001e17c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x170>)
9001e0f4:	f3c6 06c4 	ubfx	r6, r6, #3, #5
9001e0f8:	ea08 0707 	and.w	r7, r8, r7
9001e0fc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001e100:	433b      	orrs	r3, r7
9001e102:	07e7      	lsls	r7, r4, #31
9001e104:	ea43 0306 	orr.w	r3, r3, r6
9001e108:	b29b      	uxth	r3, r3
9001e10a:	d50b      	bpl.n	9001e124 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x118>
9001e10c:	0040      	lsls	r0, r0, #1
9001e10e:	0052      	lsls	r2, r2, #1
9001e110:	42a9      	cmp	r1, r5
9001e112:	d231      	bcs.n	9001e178 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001e114:	180c      	adds	r4, r1, r0
9001e116:	42a1      	cmp	r1, r4
9001e118:	d202      	bcs.n	9001e120 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
9001e11a:	f821 3b02 	strh.w	r3, [r1], #2
9001e11e:	e7fa      	b.n	9001e116 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x10a>
9001e120:	4411      	add	r1, r2
9001e122:	e7f5      	b.n	9001e110 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x104>
9001e124:	078e      	lsls	r6, r1, #30
9001e126:	d008      	beq.n	9001e13a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12e>
9001e128:	0066      	lsls	r6, r4, #1
9001e12a:	460a      	mov	r2, r1
9001e12c:	42aa      	cmp	r2, r5
9001e12e:	d202      	bcs.n	9001e136 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
9001e130:	8013      	strh	r3, [r2, #0]
9001e132:	4432      	add	r2, r6
9001e134:	e7fa      	b.n	9001e12c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x120>
9001e136:	3102      	adds	r1, #2
9001e138:	3801      	subs	r0, #1
9001e13a:	07c2      	lsls	r2, r0, #31
9001e13c:	d50b      	bpl.n	9001e156 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x14a>
9001e13e:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
9001e142:	0066      	lsls	r6, r4, #1
9001e144:	3a01      	subs	r2, #1
9001e146:	eb01 0242 	add.w	r2, r1, r2, lsl #1
9001e14a:	42aa      	cmp	r2, r5
9001e14c:	d202      	bcs.n	9001e154 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x148>
9001e14e:	8013      	strh	r3, [r2, #0]
9001e150:	4432      	add	r2, r6
9001e152:	e7fa      	b.n	9001e14a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13e>
9001e154:	3801      	subs	r0, #1
9001e156:	b178      	cbz	r0, 9001e178 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001e158:	1040      	asrs	r0, r0, #1
9001e15a:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
9001e15e:	0080      	lsls	r0, r0, #2
9001e160:	0064      	lsls	r4, r4, #1
9001e162:	42a9      	cmp	r1, r5
9001e164:	d208      	bcs.n	9001e178 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001e166:	180e      	adds	r6, r1, r0
9001e168:	460a      	mov	r2, r1
9001e16a:	42b2      	cmp	r2, r6
9001e16c:	d202      	bcs.n	9001e174 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
9001e16e:	f842 3b04 	str.w	r3, [r2], #4
9001e172:	e7fa      	b.n	9001e16a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15e>
9001e174:	4421      	add	r1, r4
9001e176:	e7f4      	b.n	9001e162 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x156>
9001e178:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001e17c:	00fff800 	.word	0x00fff800

9001e180 <_ZN8touchgfx8LCD16bppC1Ev>:
9001e180:	2200      	movs	r2, #0
9001e182:	4912      	ldr	r1, [pc, #72]	; (9001e1cc <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
9001e184:	6042      	str	r2, [r0, #4]
9001e186:	6001      	str	r1, [r0, #0]
9001e188:	e9c0 2202 	strd	r2, r2, [r0, #8]
9001e18c:	e9c0 2204 	strd	r2, r2, [r0, #16]
9001e190:	e9c0 2206 	strd	r2, r2, [r0, #24]
9001e194:	e9c0 2208 	strd	r2, r2, [r0, #32]
9001e198:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
9001e19c:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
9001e1a0:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
9001e1a4:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
9001e1a8:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
9001e1ac:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
9001e1b0:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
9001e1b4:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
9001e1b8:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
9001e1bc:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
9001e1c0:	e9c0 221e 	strd	r2, r2, [r0, #120]	; 0x78
9001e1c4:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
9001e1c8:	4770      	bx	lr
9001e1ca:	bf00      	nop
9001e1cc:	9002c314 	.word	0x9002c314

9001e1d0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
9001e1d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e1d4:	b08d      	sub	sp, #52	; 0x34
9001e1d6:	460d      	mov	r5, r1
9001e1d8:	4604      	mov	r4, r0
9001e1da:	4699      	mov	r9, r3
9001e1dc:	6808      	ldr	r0, [r1, #0]
9001e1de:	ab08      	add	r3, sp, #32
9001e1e0:	6849      	ldr	r1, [r1, #4]
9001e1e2:	c303      	stmia	r3!, {r0, r1}
9001e1e4:	6810      	ldr	r0, [r2, #0]
9001e1e6:	ab0a      	add	r3, sp, #40	; 0x28
9001e1e8:	6851      	ldr	r1, [r2, #4]
9001e1ea:	c303      	stmia	r3!, {r0, r1}
9001e1ec:	a808      	add	r0, sp, #32
9001e1ee:	f7f8 f9a3 	bl	90016538 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001e1f2:	4629      	mov	r1, r5
9001e1f4:	a80a      	add	r0, sp, #40	; 0x28
9001e1f6:	4d67      	ldr	r5, [pc, #412]	; (9001e394 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
9001e1f8:	f7f8 f9e2 	bl	900165c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001e1fc:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
9001e200:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
9001e204:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
9001e208:	6828      	ldr	r0, [r5, #0]
9001e20a:	fb11 2103 	smlabb	r1, r1, r3, r2
9001e20e:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
9001e212:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
9001e216:	eb04 0481 	add.w	r4, r4, r1, lsl #2
9001e21a:	f8bd 1020 	ldrh.w	r1, [sp, #32]
9001e21e:	440a      	add	r2, r1
9001e220:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
9001e224:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
9001e228:	4413      	add	r3, r2
9001e22a:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
9001e22e:	6803      	ldr	r3, [r0, #0]
9001e230:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001e232:	4798      	blx	r3
9001e234:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
9001e238:	d119      	bne.n	9001e26e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
9001e23a:	f010 0f20 	tst.w	r0, #32
9001e23e:	6828      	ldr	r0, [r5, #0]
9001e240:	d018      	beq.n	9001e274 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
9001e242:	2500      	movs	r5, #0
9001e244:	6801      	ldr	r1, [r0, #0]
9001e246:	b2b6      	uxth	r6, r6
9001e248:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
9001e24c:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
9001e250:	9601      	str	r6, [sp, #4]
9001e252:	e9cd 9503 	strd	r9, r5, [sp, #12]
9001e256:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
9001e25a:	9502      	str	r5, [sp, #8]
9001e25c:	fa1f f588 	uxth.w	r5, r8
9001e260:	9500      	str	r5, [sp, #0]
9001e262:	6d0d      	ldr	r5, [r1, #80]	; 0x50
9001e264:	4621      	mov	r1, r4
9001e266:	47a8      	blx	r5
9001e268:	b00d      	add	sp, #52	; 0x34
9001e26a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001e26e:	f010 0f40 	tst.w	r0, #64	; 0x40
9001e272:	e7e4      	b.n	9001e23e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
9001e274:	6803      	ldr	r3, [r0, #0]
9001e276:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001e278:	4798      	blx	r3
9001e27a:	4947      	ldr	r1, [pc, #284]	; (9001e398 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
9001e27c:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
9001e280:	880b      	ldrh	r3, [r1, #0]
9001e282:	468a      	mov	sl, r1
9001e284:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
9001e288:	fb03 5202 	mla	r2, r3, r2, r5
9001e28c:	4373      	muls	r3, r6
9001e28e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001e292:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001e296:	9307      	str	r3, [sp, #28]
9001e298:	ea4f 0348 	mov.w	r3, r8, lsl #1
9001e29c:	9306      	str	r3, [sp, #24]
9001e29e:	9b07      	ldr	r3, [sp, #28]
9001e2a0:	4298      	cmp	r0, r3
9001e2a2:	d270      	bcs.n	9001e386 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
9001e2a4:	9b06      	ldr	r3, [sp, #24]
9001e2a6:	4621      	mov	r1, r4
9001e2a8:	eb00 0b03 	add.w	fp, r0, r3
9001e2ac:	4558      	cmp	r0, fp
9001e2ae:	d25d      	bcs.n	9001e36c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
9001e2b0:	f851 4b04 	ldr.w	r4, [r1], #4
9001e2b4:	0e23      	lsrs	r3, r4, #24
9001e2b6:	d014      	beq.n	9001e2e2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
9001e2b8:	2bff      	cmp	r3, #255	; 0xff
9001e2ba:	ea4f 2c14 	mov.w	ip, r4, lsr #8
9001e2be:	d112      	bne.n	9001e2e6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
9001e2c0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
9001e2c4:	d10f      	bne.n	9001e2e6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
9001e2c6:	0963      	lsrs	r3, r4, #5
9001e2c8:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
9001e2cc:	f3c4 04c4 	ubfx	r4, r4, #3, #5
9001e2d0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001e2d4:	f02c 0c07 	bic.w	ip, ip, #7
9001e2d8:	ea43 0c0c 	orr.w	ip, r3, ip
9001e2dc:	ea4c 0404 	orr.w	r4, ip, r4
9001e2e0:	8004      	strh	r4, [r0, #0]
9001e2e2:	3002      	adds	r0, #2
9001e2e4:	e7e2      	b.n	9001e2ac <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
9001e2e6:	fb09 f303 	mul.w	r3, r9, r3
9001e2ea:	8807      	ldrh	r7, [r0, #0]
9001e2ec:	f3c4 4e07 	ubfx	lr, r4, #16, #8
9001e2f0:	fa5f fc8c 	uxtb.w	ip, ip
9001e2f4:	1c5a      	adds	r2, r3, #1
9001e2f6:	123e      	asrs	r6, r7, #8
9001e2f8:	10fd      	asrs	r5, r7, #3
9001e2fa:	eb02 2223 	add.w	r2, r2, r3, asr #8
9001e2fe:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001e302:	00ff      	lsls	r7, r7, #3
9001e304:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9001e308:	1212      	asrs	r2, r2, #8
9001e30a:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001e30e:	b293      	uxth	r3, r2
9001e310:	43d2      	mvns	r2, r2
9001e312:	b2ff      	uxtb	r7, r7
9001e314:	fb1e fe03 	smulbb	lr, lr, r3
9001e318:	b2d2      	uxtb	r2, r2
9001e31a:	fb1c fc03 	smulbb	ip, ip, r3
9001e31e:	b2e4      	uxtb	r4, r4
9001e320:	fb06 e602 	mla	r6, r6, r2, lr
9001e324:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001e328:	fb14 f403 	smulbb	r4, r4, r3
9001e32c:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
9001e330:	b2b6      	uxth	r6, r6
9001e332:	fb05 c502 	mla	r5, r5, r2, ip
9001e336:	fb07 4702 	mla	r7, r7, r2, r4
9001e33a:	f106 0e01 	add.w	lr, r6, #1
9001e33e:	b2ad      	uxth	r5, r5
9001e340:	b2bf      	uxth	r7, r7
9001e342:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
9001e346:	f105 0c01 	add.w	ip, r5, #1
9001e34a:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
9001e34e:	1c7e      	adds	r6, r7, #1
9001e350:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
9001e354:	eb06 2617 	add.w	r6, r6, r7, lsr #8
9001e358:	096d      	lsrs	r5, r5, #5
9001e35a:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001e35e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001e362:	ea46 060e 	orr.w	r6, r6, lr
9001e366:	432e      	orrs	r6, r5
9001e368:	8006      	strh	r6, [r0, #0]
9001e36a:	e7ba      	b.n	9001e2e2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
9001e36c:	f8ba 3000 	ldrh.w	r3, [sl]
9001e370:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
9001e374:	eba3 0308 	sub.w	r3, r3, r8
9001e378:	eba4 0408 	sub.w	r4, r4, r8
9001e37c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001e380:	eb01 0484 	add.w	r4, r1, r4, lsl #2
9001e384:	e78b      	b.n	9001e29e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
9001e386:	4b03      	ldr	r3, [pc, #12]	; (9001e394 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
9001e388:	6818      	ldr	r0, [r3, #0]
9001e38a:	6803      	ldr	r3, [r0, #0]
9001e38c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001e38e:	4798      	blx	r3
9001e390:	e76a      	b.n	9001e268 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
9001e392:	bf00      	nop
9001e394:	24039834 	.word	0x24039834
9001e398:	2403982e 	.word	0x2403982e

9001e39c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
9001e39c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9001e3a0:	b085      	sub	sp, #20
9001e3a2:	6810      	ldr	r0, [r2, #0]
9001e3a4:	460c      	mov	r4, r1
9001e3a6:	6851      	ldr	r1, [r2, #4]
9001e3a8:	466d      	mov	r5, sp
9001e3aa:	4616      	mov	r6, r2
9001e3ac:	c503      	stmia	r5!, {r0, r1}
9001e3ae:	6818      	ldr	r0, [r3, #0]
9001e3b0:	6859      	ldr	r1, [r3, #4]
9001e3b2:	c503      	stmia	r5!, {r0, r1}
9001e3b4:	4668      	mov	r0, sp
9001e3b6:	4d2e      	ldr	r5, [pc, #184]	; (9001e470 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
9001e3b8:	f7f8 f8be 	bl	90016538 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001e3bc:	4631      	mov	r1, r6
9001e3be:	a802      	add	r0, sp, #8
9001e3c0:	4e2c      	ldr	r6, [pc, #176]	; (9001e474 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
9001e3c2:	f7f8 f8fd 	bl	900165c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001e3c6:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
9001e3ca:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
9001e3ce:	f8bd 1004 	ldrh.w	r1, [sp, #4]
9001e3d2:	6828      	ldr	r0, [r5, #0]
9001e3d4:	fb11 2103 	smlabb	r1, r1, r3, r2
9001e3d8:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
9001e3dc:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
9001e3e0:	eb04 0481 	add.w	r4, r4, r1, lsl #2
9001e3e4:	f8bd 1000 	ldrh.w	r1, [sp]
9001e3e8:	440a      	add	r2, r1
9001e3ea:	f8ad 2008 	strh.w	r2, [sp, #8]
9001e3ee:	f8bd 2002 	ldrh.w	r2, [sp, #2]
9001e3f2:	4413      	add	r3, r2
9001e3f4:	f8ad 300a 	strh.w	r3, [sp, #10]
9001e3f8:	6803      	ldr	r3, [r0, #0]
9001e3fa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001e3fc:	4798      	blx	r3
9001e3fe:	8833      	ldrh	r3, [r6, #0]
9001e400:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
9001e404:	ea4f 0c47 	mov.w	ip, r7, lsl #1
9001e408:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
9001e40c:	f8df e068 	ldr.w	lr, [pc, #104]	; 9001e478 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
9001e410:	fb03 1202 	mla	r2, r3, r2, r1
9001e414:	fb08 f303 	mul.w	r3, r8, r3
9001e418:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001e41c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001e420:	4298      	cmp	r0, r3
9001e422:	d21d      	bcs.n	9001e460 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
9001e424:	eb00 080c 	add.w	r8, r0, ip
9001e428:	4540      	cmp	r0, r8
9001e42a:	d20f      	bcs.n	9001e44c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
9001e42c:	f854 1b04 	ldr.w	r1, [r4], #4
9001e430:	ea4f 1951 	mov.w	r9, r1, lsr #5
9001e434:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
9001e438:	f3c1 01c4 	ubfx	r1, r1, #3, #5
9001e43c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
9001e440:	ea42 0209 	orr.w	r2, r2, r9
9001e444:	430a      	orrs	r2, r1
9001e446:	f820 2b02 	strh.w	r2, [r0], #2
9001e44a:	e7ed      	b.n	9001e428 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
9001e44c:	8832      	ldrh	r2, [r6, #0]
9001e44e:	1bd2      	subs	r2, r2, r7
9001e450:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001e454:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
9001e458:	1bd2      	subs	r2, r2, r7
9001e45a:	eb04 0482 	add.w	r4, r4, r2, lsl #2
9001e45e:	e7df      	b.n	9001e420 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
9001e460:	6828      	ldr	r0, [r5, #0]
9001e462:	6803      	ldr	r3, [r0, #0]
9001e464:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001e466:	4798      	blx	r3
9001e468:	b005      	add	sp, #20
9001e46a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001e46e:	bf00      	nop
9001e470:	24039834 	.word	0x24039834
9001e474:	2403982e 	.word	0x2403982e
9001e478:	fffff800 	.word	0xfffff800

9001e47c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
9001e47c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001e480:	b08e      	sub	sp, #56	; 0x38
9001e482:	460e      	mov	r6, r1
9001e484:	4604      	mov	r4, r0
9001e486:	461d      	mov	r5, r3
9001e488:	6808      	ldr	r0, [r1, #0]
9001e48a:	ab0a      	add	r3, sp, #40	; 0x28
9001e48c:	6849      	ldr	r1, [r1, #4]
9001e48e:	f8df 81d4 	ldr.w	r8, [pc, #468]	; 9001e664 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
9001e492:	f8df 91d4 	ldr.w	r9, [pc, #468]	; 9001e668 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
9001e496:	c303      	stmia	r3!, {r0, r1}
9001e498:	6810      	ldr	r0, [r2, #0]
9001e49a:	ab0c      	add	r3, sp, #48	; 0x30
9001e49c:	6851      	ldr	r1, [r2, #4]
9001e49e:	c303      	stmia	r3!, {r0, r1}
9001e4a0:	a80a      	add	r0, sp, #40	; 0x28
9001e4a2:	f7f8 f849 	bl	90016538 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001e4a6:	4631      	mov	r1, r6
9001e4a8:	a80c      	add	r0, sp, #48	; 0x30
9001e4aa:	f7f8 f889 	bl	900165c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001e4ae:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
9001e4b2:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
9001e4b6:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
9001e4ba:	f8d8 0000 	ldr.w	r0, [r8]
9001e4be:	fb11 2103 	smlabb	r1, r1, r3, r2
9001e4c2:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
9001e4c6:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
9001e4ca:	eb01 0141 	add.w	r1, r1, r1, lsl #1
9001e4ce:	440c      	add	r4, r1
9001e4d0:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
9001e4d4:	440a      	add	r2, r1
9001e4d6:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
9001e4da:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
9001e4de:	4413      	add	r3, r2
9001e4e0:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
9001e4e4:	6803      	ldr	r3, [r0, #0]
9001e4e6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001e4e8:	4798      	blx	r3
9001e4ea:	2dff      	cmp	r5, #255	; 0xff
9001e4ec:	d124      	bne.n	9001e538 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
9001e4ee:	f010 0f01 	tst.w	r0, #1
9001e4f2:	f8d8 0000 	ldr.w	r0, [r8]
9001e4f6:	d022      	beq.n	9001e53e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
9001e4f8:	2100      	movs	r1, #0
9001e4fa:	f04f 0e01 	mov.w	lr, #1
9001e4fe:	f8d0 c000 	ldr.w	ip, [r0]
9001e502:	b2b6      	uxth	r6, r6
9001e504:	f8cd e018 	str.w	lr, [sp, #24]
9001e508:	b2bf      	uxth	r7, r7
9001e50a:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
9001e50e:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
9001e512:	e9cd 1107 	strd	r1, r1, [sp, #28]
9001e516:	f8b9 e000 	ldrh.w	lr, [r9]
9001e51a:	9503      	str	r5, [sp, #12]
9001e51c:	9601      	str	r6, [sp, #4]
9001e51e:	9700      	str	r7, [sp, #0]
9001e520:	e9cd 1e04 	strd	r1, lr, [sp, #16]
9001e524:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
9001e528:	9102      	str	r1, [sp, #8]
9001e52a:	4621      	mov	r1, r4
9001e52c:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
9001e530:	47a8      	blx	r5
9001e532:	b00e      	add	sp, #56	; 0x38
9001e534:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001e538:	f010 0f04 	tst.w	r0, #4
9001e53c:	e7d9      	b.n	9001e4f2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
9001e53e:	6803      	ldr	r3, [r0, #0]
9001e540:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001e542:	4798      	blx	r3
9001e544:	f8b9 3000 	ldrh.w	r3, [r9]
9001e548:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
9001e54c:	ea4f 0e47 	mov.w	lr, r7, lsl #1
9001e550:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
9001e554:	435e      	muls	r6, r3
9001e556:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
9001e55a:	2dff      	cmp	r5, #255	; 0xff
9001e55c:	fb03 1202 	mla	r2, r3, r2, r1
9001e560:	ebac 0c07 	sub.w	ip, ip, r7
9001e564:	eba3 0707 	sub.w	r7, r3, r7
9001e568:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001e56c:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
9001e570:	eb00 0646 	add.w	r6, r0, r6, lsl #1
9001e574:	ea4f 0747 	mov.w	r7, r7, lsl #1
9001e578:	d049      	beq.n	9001e60e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
9001e57a:	43eb      	mvns	r3, r5
9001e57c:	fa1f f985 	uxth.w	r9, r5
9001e580:	b2db      	uxtb	r3, r3
9001e582:	42b0      	cmp	r0, r6
9001e584:	d266      	bcs.n	9001e654 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
9001e586:	eb00 0a0e 	add.w	sl, r0, lr
9001e58a:	4550      	cmp	r0, sl
9001e58c:	4621      	mov	r1, r4
9001e58e:	f104 0403 	add.w	r4, r4, #3
9001e592:	d25b      	bcs.n	9001e64c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
9001e594:	8802      	ldrh	r2, [r0, #0]
9001e596:	f814 1c01 	ldrb.w	r1, [r4, #-1]
9001e59a:	ea4f 2822 	mov.w	r8, r2, asr #8
9001e59e:	fb11 f109 	smulbb	r1, r1, r9
9001e5a2:	10d5      	asrs	r5, r2, #3
9001e5a4:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
9001e5a8:	00d2      	lsls	r2, r2, #3
9001e5aa:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9001e5ae:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
9001e5b2:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001e5b6:	fb08 1803 	mla	r8, r8, r3, r1
9001e5ba:	f814 1c02 	ldrb.w	r1, [r4, #-2]
9001e5be:	b2d2      	uxtb	r2, r2
9001e5c0:	fb11 f109 	smulbb	r1, r1, r9
9001e5c4:	fa1f f888 	uxth.w	r8, r8
9001e5c8:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001e5cc:	fb05 1503 	mla	r5, r5, r3, r1
9001e5d0:	f814 1c03 	ldrb.w	r1, [r4, #-3]
9001e5d4:	fb11 f109 	smulbb	r1, r1, r9
9001e5d8:	b2ad      	uxth	r5, r5
9001e5da:	fb02 1203 	mla	r2, r2, r3, r1
9001e5de:	f108 0101 	add.w	r1, r8, #1
9001e5e2:	b292      	uxth	r2, r2
9001e5e4:	eb01 2818 	add.w	r8, r1, r8, lsr #8
9001e5e8:	1c51      	adds	r1, r2, #1
9001e5ea:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
9001e5ee:	eb01 2212 	add.w	r2, r1, r2, lsr #8
9001e5f2:	1c69      	adds	r1, r5, #1
9001e5f4:	eb01 2515 	add.w	r5, r1, r5, lsr #8
9001e5f8:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001e5fc:	096d      	lsrs	r5, r5, #5
9001e5fe:	ea42 0208 	orr.w	r2, r2, r8
9001e602:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001e606:	432a      	orrs	r2, r5
9001e608:	f820 2b02 	strh.w	r2, [r0], #2
9001e60c:	e7bd      	b.n	9001e58a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
9001e60e:	4a14      	ldr	r2, [pc, #80]	; (9001e660 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
9001e610:	42b0      	cmp	r0, r6
9001e612:	d21f      	bcs.n	9001e654 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
9001e614:	eb00 050e 	add.w	r5, r0, lr
9001e618:	42a8      	cmp	r0, r5
9001e61a:	4621      	mov	r1, r4
9001e61c:	f104 0403 	add.w	r4, r4, #3
9001e620:	d210      	bcs.n	9001e644 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
9001e622:	f814 3c02 	ldrb.w	r3, [r4, #-2]
9001e626:	f814 1c01 	ldrb.w	r1, [r4, #-1]
9001e62a:	00db      	lsls	r3, r3, #3
9001e62c:	ea02 2101 	and.w	r1, r2, r1, lsl #8
9001e630:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001e634:	430b      	orrs	r3, r1
9001e636:	f814 1c03 	ldrb.w	r1, [r4, #-3]
9001e63a:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
9001e63e:	f820 3b02 	strh.w	r3, [r0], #2
9001e642:	e7e9      	b.n	9001e618 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
9001e644:	4438      	add	r0, r7
9001e646:	eb01 040c 	add.w	r4, r1, ip
9001e64a:	e7e1      	b.n	9001e610 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
9001e64c:	4438      	add	r0, r7
9001e64e:	eb01 040c 	add.w	r4, r1, ip
9001e652:	e796      	b.n	9001e582 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
9001e654:	4b03      	ldr	r3, [pc, #12]	; (9001e664 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
9001e656:	6818      	ldr	r0, [r3, #0]
9001e658:	6803      	ldr	r3, [r0, #0]
9001e65a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001e65c:	4798      	blx	r3
9001e65e:	e768      	b.n	9001e532 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
9001e660:	fffff800 	.word	0xfffff800
9001e664:	24039834 	.word	0x24039834
9001e668:	2403982e 	.word	0x2403982e

9001e66c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
9001e66c:	b4f0      	push	{r4, r5, r6, r7}
9001e66e:	4616      	mov	r6, r2
9001e670:	461c      	mov	r4, r3
9001e672:	460d      	mov	r5, r1
9001e674:	9a04      	ldr	r2, [sp, #16]
9001e676:	2e01      	cmp	r6, #1
9001e678:	f89d 3014 	ldrb.w	r3, [sp, #20]
9001e67c:	f89d 7018 	ldrb.w	r7, [sp, #24]
9001e680:	d012      	beq.n	9001e6a8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
9001e682:	d303      	bcc.n	9001e68c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
9001e684:	2e02      	cmp	r6, #2
9001e686:	d00a      	beq.n	9001e69e <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
9001e688:	bcf0      	pop	{r4, r5, r6, r7}
9001e68a:	4770      	bx	lr
9001e68c:	6805      	ldr	r5, [r0, #0]
9001e68e:	e9cd 3704 	strd	r3, r7, [sp, #16]
9001e692:	68ed      	ldr	r5, [r5, #12]
9001e694:	4613      	mov	r3, r2
9001e696:	4622      	mov	r2, r4
9001e698:	46ac      	mov	ip, r5
9001e69a:	bcf0      	pop	{r4, r5, r6, r7}
9001e69c:	4760      	bx	ip
9001e69e:	4621      	mov	r1, r4
9001e6a0:	4628      	mov	r0, r5
9001e6a2:	bcf0      	pop	{r4, r5, r6, r7}
9001e6a4:	f7ff bd94 	b.w	9001e1d0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
9001e6a8:	4621      	mov	r1, r4
9001e6aa:	4628      	mov	r0, r5
9001e6ac:	bcf0      	pop	{r4, r5, r6, r7}
9001e6ae:	f7ff bee5 	b.w	9001e47c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

9001e6b4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
9001e6b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e6b8:	b093      	sub	sp, #76	; 0x4c
9001e6ba:	4681      	mov	r9, r0
9001e6bc:	4688      	mov	r8, r1
9001e6be:	6810      	ldr	r0, [r2, #0]
9001e6c0:	6851      	ldr	r1, [r2, #4]
9001e6c2:	ac0e      	add	r4, sp, #56	; 0x38
9001e6c4:	4616      	mov	r6, r2
9001e6c6:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
9001e6ca:	4f6b      	ldr	r7, [pc, #428]	; (9001e878 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
9001e6cc:	c403      	stmia	r4!, {r0, r1}
9001e6ce:	6818      	ldr	r0, [r3, #0]
9001e6d0:	ac10      	add	r4, sp, #64	; 0x40
9001e6d2:	6859      	ldr	r1, [r3, #4]
9001e6d4:	c403      	stmia	r4!, {r0, r1}
9001e6d6:	a80e      	add	r0, sp, #56	; 0x38
9001e6d8:	f7f7 ff2e 	bl	90016538 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001e6dc:	4631      	mov	r1, r6
9001e6de:	a810      	add	r0, sp, #64	; 0x40
9001e6e0:	4e66      	ldr	r6, [pc, #408]	; (9001e87c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
9001e6e2:	f7f7 ff6d 	bl	900165c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001e6e6:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
9001e6ea:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
9001e6ee:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
9001e6f2:	6830      	ldr	r0, [r6, #0]
9001e6f4:	fb11 2103 	smlabb	r1, r1, r3, r2
9001e6f8:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
9001e6fc:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
9001e700:	4489      	add	r9, r1
9001e702:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
9001e706:	440a      	add	r2, r1
9001e708:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
9001e70c:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
9001e710:	4413      	add	r3, r2
9001e712:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
9001e716:	6803      	ldr	r3, [r0, #0]
9001e718:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001e71a:	4798      	blx	r3
9001e71c:	f010 0f80 	tst.w	r0, #128	; 0x80
9001e720:	6830      	ldr	r0, [r6, #0]
9001e722:	d01d      	beq.n	9001e760 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
9001e724:	2200      	movs	r2, #0
9001e726:	6801      	ldr	r1, [r0, #0]
9001e728:	b2a4      	uxth	r4, r4
9001e72a:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
9001e72e:	b2ad      	uxth	r5, r5
9001e730:	e9cd 2208 	strd	r2, r2, [sp, #32]
9001e734:	220b      	movs	r2, #11
9001e736:	9207      	str	r2, [sp, #28]
9001e738:	883a      	ldrh	r2, [r7, #0]
9001e73a:	9502      	str	r5, [sp, #8]
9001e73c:	9206      	str	r2, [sp, #24]
9001e73e:	2201      	movs	r2, #1
9001e740:	9401      	str	r4, [sp, #4]
9001e742:	e9cd a204 	strd	sl, r2, [sp, #16]
9001e746:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
9001e74a:	9203      	str	r2, [sp, #12]
9001e74c:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
9001e750:	9200      	str	r2, [sp, #0]
9001e752:	4642      	mov	r2, r8
9001e754:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
9001e756:	4649      	mov	r1, r9
9001e758:	47a0      	blx	r4
9001e75a:	b013      	add	sp, #76	; 0x4c
9001e75c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001e760:	6803      	ldr	r3, [r0, #0]
9001e762:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001e764:	4798      	blx	r3
9001e766:	883b      	ldrh	r3, [r7, #0]
9001e768:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
9001e76c:	f04f 0e04 	mov.w	lr, #4
9001e770:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
9001e774:	435d      	muls	r5, r3
9001e776:	fb03 1202 	mla	r2, r3, r2, r1
9001e77a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001e77e:	eb00 0245 	add.w	r2, r0, r5, lsl #1
9001e782:	920c      	str	r2, [sp, #48]	; 0x30
9001e784:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
9001e788:	1b12      	subs	r2, r2, r4
9001e78a:	920d      	str	r2, [sp, #52]	; 0x34
9001e78c:	0062      	lsls	r2, r4, #1
9001e78e:	1b1c      	subs	r4, r3, r4
9001e790:	920a      	str	r2, [sp, #40]	; 0x28
9001e792:	0063      	lsls	r3, r4, #1
9001e794:	930b      	str	r3, [sp, #44]	; 0x2c
9001e796:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9001e798:	4298      	cmp	r0, r3
9001e79a:	d266      	bcs.n	9001e86a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
9001e79c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001e79e:	eb00 0b03 	add.w	fp, r0, r3
9001e7a2:	4558      	cmp	r0, fp
9001e7a4:	d25c      	bcs.n	9001e860 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
9001e7a6:	f819 3b01 	ldrb.w	r3, [r9], #1
9001e7aa:	fb1e e303 	smlabb	r3, lr, r3, lr
9001e7ae:	f858 2003 	ldr.w	r2, [r8, r3]
9001e7b2:	0e11      	lsrs	r1, r2, #24
9001e7b4:	d012      	beq.n	9001e7dc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
9001e7b6:	29ff      	cmp	r1, #255	; 0xff
9001e7b8:	ea4f 2712 	mov.w	r7, r2, lsr #8
9001e7bc:	d110      	bne.n	9001e7e0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
9001e7be:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
9001e7c2:	d10d      	bne.n	9001e7e0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
9001e7c4:	0953      	lsrs	r3, r2, #5
9001e7c6:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
9001e7ca:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001e7ce:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001e7d2:	f027 0707 	bic.w	r7, r7, #7
9001e7d6:	431f      	orrs	r7, r3
9001e7d8:	433a      	orrs	r2, r7
9001e7da:	8002      	strh	r2, [r0, #0]
9001e7dc:	3002      	adds	r0, #2
9001e7de:	e7e0      	b.n	9001e7a2 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
9001e7e0:	fb0a f101 	mul.w	r1, sl, r1
9001e7e4:	8806      	ldrh	r6, [r0, #0]
9001e7e6:	f3c2 4c07 	ubfx	ip, r2, #16, #8
9001e7ea:	b2d2      	uxtb	r2, r2
9001e7ec:	1c4b      	adds	r3, r1, #1
9001e7ee:	1235      	asrs	r5, r6, #8
9001e7f0:	10f4      	asrs	r4, r6, #3
9001e7f2:	eb03 2321 	add.w	r3, r3, r1, asr #8
9001e7f6:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
9001e7fa:	00f6      	lsls	r6, r6, #3
9001e7fc:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
9001e800:	121b      	asrs	r3, r3, #8
9001e802:	b2f6      	uxtb	r6, r6
9001e804:	b299      	uxth	r1, r3
9001e806:	43db      	mvns	r3, r3
9001e808:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
9001e80c:	fb1c fc01 	smulbb	ip, ip, r1
9001e810:	b2db      	uxtb	r3, r3
9001e812:	fb12 f201 	smulbb	r2, r2, r1
9001e816:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001e81a:	fb05 c503 	mla	r5, r5, r3, ip
9001e81e:	b2ff      	uxtb	r7, r7
9001e820:	fb06 2203 	mla	r2, r6, r3, r2
9001e824:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
9001e828:	fb17 f701 	smulbb	r7, r7, r1
9001e82c:	b2ad      	uxth	r5, r5
9001e82e:	b292      	uxth	r2, r2
9001e830:	fb04 7403 	mla	r4, r4, r3, r7
9001e834:	f105 0c01 	add.w	ip, r5, #1
9001e838:	1c57      	adds	r7, r2, #1
9001e83a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
9001e83e:	eb07 2712 	add.w	r7, r7, r2, lsr #8
9001e842:	b2a4      	uxth	r4, r4
9001e844:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
9001e848:	f3c7 27c4 	ubfx	r7, r7, #11, #5
9001e84c:	433d      	orrs	r5, r7
9001e84e:	1c67      	adds	r7, r4, #1
9001e850:	eb07 2414 	add.w	r4, r7, r4, lsr #8
9001e854:	0964      	lsrs	r4, r4, #5
9001e856:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
9001e85a:	4325      	orrs	r5, r4
9001e85c:	8005      	strh	r5, [r0, #0]
9001e85e:	e7bd      	b.n	9001e7dc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
9001e860:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001e862:	4418      	add	r0, r3
9001e864:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001e866:	4499      	add	r9, r3
9001e868:	e795      	b.n	9001e796 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
9001e86a:	4b04      	ldr	r3, [pc, #16]	; (9001e87c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
9001e86c:	6818      	ldr	r0, [r3, #0]
9001e86e:	6803      	ldr	r3, [r0, #0]
9001e870:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001e872:	4798      	blx	r3
9001e874:	e771      	b.n	9001e75a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
9001e876:	bf00      	nop
9001e878:	2403982e 	.word	0x2403982e
9001e87c:	24039834 	.word	0x24039834

9001e880 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
9001e880:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e884:	b087      	sub	sp, #28
9001e886:	4680      	mov	r8, r0
9001e888:	460d      	mov	r5, r1
9001e88a:	4614      	mov	r4, r2
9001e88c:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
9001e890:	2e00      	cmp	r6, #0
9001e892:	f000 80b9 	beq.w	9001ea08 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
9001e896:	6810      	ldr	r0, [r2, #0]
9001e898:	af02      	add	r7, sp, #8
9001e89a:	6851      	ldr	r1, [r2, #4]
9001e89c:	c703      	stmia	r7!, {r0, r1}
9001e89e:	6818      	ldr	r0, [r3, #0]
9001e8a0:	af04      	add	r7, sp, #16
9001e8a2:	6859      	ldr	r1, [r3, #4]
9001e8a4:	c703      	stmia	r7!, {r0, r1}
9001e8a6:	a802      	add	r0, sp, #8
9001e8a8:	f7f7 fe46 	bl	90016538 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001e8ac:	4621      	mov	r1, r4
9001e8ae:	a804      	add	r0, sp, #16
9001e8b0:	f7f7 fe86 	bl	900165c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001e8b4:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
9001e8b8:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9001e8bc:	f8bd 400c 	ldrh.w	r4, [sp, #12]
9001e8c0:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
9001e8c4:	fb14 2103 	smlabb	r1, r4, r3, r2
9001e8c8:	eb08 0401 	add.w	r4, r8, r1
9001e8cc:	f8bd 1008 	ldrh.w	r1, [sp, #8]
9001e8d0:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
9001e8d4:	440a      	add	r2, r1
9001e8d6:	ea4f 0a48 	mov.w	sl, r8, lsl #1
9001e8da:	f8ad 2010 	strh.w	r2, [sp, #16]
9001e8de:	f8bd 200a 	ldrh.w	r2, [sp, #10]
9001e8e2:	4413      	add	r3, r2
9001e8e4:	f8ad 3012 	strh.w	r3, [sp, #18]
9001e8e8:	4b49      	ldr	r3, [pc, #292]	; (9001ea10 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
9001e8ea:	6818      	ldr	r0, [r3, #0]
9001e8ec:	6803      	ldr	r3, [r0, #0]
9001e8ee:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001e8f0:	4798      	blx	r3
9001e8f2:	4b48      	ldr	r3, [pc, #288]	; (9001ea14 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
9001e8f4:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
9001e8f8:	2eff      	cmp	r6, #255	; 0xff
9001e8fa:	881a      	ldrh	r2, [r3, #0]
9001e8fc:	f9bd c010 	ldrsh.w	ip, [sp, #16]
9001e900:	fb02 c101 	mla	r1, r2, r1, ip
9001e904:	fb02 f207 	mul.w	r2, r2, r7
9001e908:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001e90c:	f105 0104 	add.w	r1, r5, #4
9001e910:	461d      	mov	r5, r3
9001e912:	d05a      	beq.n	9001e9ca <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
9001e914:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
9001e918:	eb00 0242 	add.w	r2, r0, r2, lsl #1
9001e91c:	b2b6      	uxth	r6, r6
9001e91e:	9301      	str	r3, [sp, #4]
9001e920:	fa1f fe8e 	uxth.w	lr, lr
9001e924:	4282      	cmp	r2, r0
9001e926:	d96a      	bls.n	9001e9fe <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
9001e928:	eb00 0b0a 	add.w	fp, r0, sl
9001e92c:	4583      	cmp	fp, r0
9001e92e:	d940      	bls.n	9001e9b2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
9001e930:	8805      	ldrh	r5, [r0, #0]
9001e932:	f814 3b01 	ldrb.w	r3, [r4], #1
9001e936:	122f      	asrs	r7, r5, #8
9001e938:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
9001e93c:	ea4f 09e5 	mov.w	r9, r5, asr #3
9001e940:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001e944:	00ed      	lsls	r5, r5, #3
9001e946:	ea4f 2c23 	mov.w	ip, r3, asr #8
9001e94a:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
9001e94e:	fb17 f70e 	smulbb	r7, r7, lr
9001e952:	b2ed      	uxtb	r5, r5
9001e954:	fb19 f90e 	smulbb	r9, r9, lr
9001e958:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001e95c:	fb15 f50e 	smulbb	r5, r5, lr
9001e960:	fb0c 7c06 	mla	ip, ip, r6, r7
9001e964:	10df      	asrs	r7, r3, #3
9001e966:	00db      	lsls	r3, r3, #3
9001e968:	fa1f fc8c 	uxth.w	ip, ip
9001e96c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001e970:	b2db      	uxtb	r3, r3
9001e972:	fb07 9706 	mla	r7, r7, r6, r9
9001e976:	f10c 0901 	add.w	r9, ip, #1
9001e97a:	fb03 5306 	mla	r3, r3, r6, r5
9001e97e:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
9001e982:	b29b      	uxth	r3, r3
9001e984:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
9001e988:	b2bf      	uxth	r7, r7
9001e98a:	f103 0c01 	add.w	ip, r3, #1
9001e98e:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
9001e992:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001e996:	ea4c 0c09 	orr.w	ip, ip, r9
9001e99a:	f107 0901 	add.w	r9, r7, #1
9001e99e:	eb09 2717 	add.w	r7, r9, r7, lsr #8
9001e9a2:	097f      	lsrs	r7, r7, #5
9001e9a4:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
9001e9a8:	ea4c 0c07 	orr.w	ip, ip, r7
9001e9ac:	f820 cb02 	strh.w	ip, [r0], #2
9001e9b0:	e7bc      	b.n	9001e92c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
9001e9b2:	9b01      	ldr	r3, [sp, #4]
9001e9b4:	881b      	ldrh	r3, [r3, #0]
9001e9b6:	eba3 0308 	sub.w	r3, r3, r8
9001e9ba:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001e9be:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
9001e9c2:	eba3 0308 	sub.w	r3, r3, r8
9001e9c6:	441c      	add	r4, r3
9001e9c8:	e7ac      	b.n	9001e924 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
9001e9ca:	eb00 0242 	add.w	r2, r0, r2, lsl #1
9001e9ce:	4282      	cmp	r2, r0
9001e9d0:	d915      	bls.n	9001e9fe <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
9001e9d2:	eb00 060a 	add.w	r6, r0, sl
9001e9d6:	4286      	cmp	r6, r0
9001e9d8:	d906      	bls.n	9001e9e8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
9001e9da:	f814 3b01 	ldrb.w	r3, [r4], #1
9001e9de:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
9001e9e2:	f820 3b02 	strh.w	r3, [r0], #2
9001e9e6:	e7f6      	b.n	9001e9d6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
9001e9e8:	882b      	ldrh	r3, [r5, #0]
9001e9ea:	eba3 0308 	sub.w	r3, r3, r8
9001e9ee:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001e9f2:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
9001e9f6:	eba3 0308 	sub.w	r3, r3, r8
9001e9fa:	441c      	add	r4, r3
9001e9fc:	e7e7      	b.n	9001e9ce <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
9001e9fe:	4b04      	ldr	r3, [pc, #16]	; (9001ea10 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
9001ea00:	6818      	ldr	r0, [r3, #0]
9001ea02:	6803      	ldr	r3, [r0, #0]
9001ea04:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001ea06:	4798      	blx	r3
9001ea08:	b007      	add	sp, #28
9001ea0a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001ea0e:	bf00      	nop
9001ea10:	24039834 	.word	0x24039834
9001ea14:	2403982e 	.word	0x2403982e

9001ea18 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
9001ea18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001ea1c:	b091      	sub	sp, #68	; 0x44
9001ea1e:	4680      	mov	r8, r0
9001ea20:	460f      	mov	r7, r1
9001ea22:	4614      	mov	r4, r2
9001ea24:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
9001ea28:	2d00      	cmp	r5, #0
9001ea2a:	d051      	beq.n	9001ead0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
9001ea2c:	6810      	ldr	r0, [r2, #0]
9001ea2e:	ae0c      	add	r6, sp, #48	; 0x30
9001ea30:	6851      	ldr	r1, [r2, #4]
9001ea32:	f8df 9200 	ldr.w	r9, [pc, #512]	; 9001ec34 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
9001ea36:	c603      	stmia	r6!, {r0, r1}
9001ea38:	6818      	ldr	r0, [r3, #0]
9001ea3a:	ae0e      	add	r6, sp, #56	; 0x38
9001ea3c:	6859      	ldr	r1, [r3, #4]
9001ea3e:	c603      	stmia	r6!, {r0, r1}
9001ea40:	a80c      	add	r0, sp, #48	; 0x30
9001ea42:	f7f7 fd79 	bl	90016538 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001ea46:	4621      	mov	r1, r4
9001ea48:	a80e      	add	r0, sp, #56	; 0x38
9001ea4a:	f7f7 fdb9 	bl	900165c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001ea4e:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
9001ea52:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
9001ea56:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
9001ea5a:	f8d9 0000 	ldr.w	r0, [r9]
9001ea5e:	fb11 2103 	smlabb	r1, r1, r3, r2
9001ea62:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
9001ea66:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
9001ea6a:	eb08 0401 	add.w	r4, r8, r1
9001ea6e:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
9001ea72:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 9001ec38 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
9001ea76:	440a      	add	r2, r1
9001ea78:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
9001ea7c:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
9001ea80:	4413      	add	r3, r2
9001ea82:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
9001ea86:	6803      	ldr	r3, [r0, #0]
9001ea88:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001ea8a:	4798      	blx	r3
9001ea8c:	f010 0f80 	tst.w	r0, #128	; 0x80
9001ea90:	f8d9 0000 	ldr.w	r0, [r9]
9001ea94:	d01f      	beq.n	9001ead6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
9001ea96:	2200      	movs	r2, #0
9001ea98:	6801      	ldr	r1, [r0, #0]
9001ea9a:	b2b6      	uxth	r6, r6
9001ea9c:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
9001eaa0:	e9cd 2208 	strd	r2, r2, [sp, #32]
9001eaa4:	220b      	movs	r2, #11
9001eaa6:	9207      	str	r2, [sp, #28]
9001eaa8:	f8b8 2000 	ldrh.w	r2, [r8]
9001eaac:	9601      	str	r6, [sp, #4]
9001eaae:	9206      	str	r2, [sp, #24]
9001eab0:	2201      	movs	r2, #1
9001eab2:	e9cd 5204 	strd	r5, r2, [sp, #16]
9001eab6:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
9001eaba:	9203      	str	r2, [sp, #12]
9001eabc:	fa1f f28a 	uxth.w	r2, sl
9001eac0:	9202      	str	r2, [sp, #8]
9001eac2:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
9001eac6:	9200      	str	r2, [sp, #0]
9001eac8:	463a      	mov	r2, r7
9001eaca:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
9001eacc:	4621      	mov	r1, r4
9001eace:	47a8      	blx	r5
9001ead0:	b011      	add	sp, #68	; 0x44
9001ead2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001ead6:	6803      	ldr	r3, [r0, #0]
9001ead8:	ea4f 0946 	mov.w	r9, r6, lsl #1
9001eadc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001eade:	4798      	blx	r3
9001eae0:	f8b8 2000 	ldrh.w	r2, [r8]
9001eae4:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
9001eae8:	2dff      	cmp	r5, #255	; 0xff
9001eaea:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
9001eaee:	fb0a fa02 	mul.w	sl, sl, r2
9001eaf2:	fb02 1303 	mla	r3, r2, r3, r1
9001eaf6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001eafa:	d062      	beq.n	9001ebc2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
9001eafc:	ea6f 0c05 	mvn.w	ip, r5
9001eb00:	eb00 034a 	add.w	r3, r0, sl, lsl #1
9001eb04:	b2ad      	uxth	r5, r5
9001eb06:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
9001eb0a:	fa5f fc8c 	uxtb.w	ip, ip
9001eb0e:	930a      	str	r3, [sp, #40]	; 0x28
9001eb10:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001eb12:	4298      	cmp	r0, r3
9001eb14:	f080 8085 	bcs.w	9001ec22 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
9001eb18:	eb00 0b09 	add.w	fp, r0, r9
9001eb1c:	4558      	cmp	r0, fp
9001eb1e:	d246      	bcs.n	9001ebae <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
9001eb20:	f814 eb01 	ldrb.w	lr, [r4], #1
9001eb24:	2303      	movs	r3, #3
9001eb26:	2204      	movs	r2, #4
9001eb28:	fb13 2e0e 	smlabb	lr, r3, lr, r2
9001eb2c:	8803      	ldrh	r3, [r0, #0]
9001eb2e:	eb07 0a0e 	add.w	sl, r7, lr
9001eb32:	1219      	asrs	r1, r3, #8
9001eb34:	10da      	asrs	r2, r3, #3
9001eb36:	f817 e00e 	ldrb.w	lr, [r7, lr]
9001eb3a:	f89a 8002 	ldrb.w	r8, [sl, #2]
9001eb3e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
9001eb42:	00db      	lsls	r3, r3, #3
9001eb44:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
9001eb48:	fb18 f805 	smulbb	r8, r8, r5
9001eb4c:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
9001eb50:	fb1e fe05 	smulbb	lr, lr, r5
9001eb54:	b2db      	uxtb	r3, r3
9001eb56:	fb01 810c 	mla	r1, r1, ip, r8
9001eb5a:	f89a 8001 	ldrb.w	r8, [sl, #1]
9001eb5e:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
9001eb62:	fb18 f805 	smulbb	r8, r8, r5
9001eb66:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
9001eb6a:	b289      	uxth	r1, r1
9001eb6c:	fb02 820c 	mla	r2, r2, ip, r8
9001eb70:	fb03 e30c 	mla	r3, r3, ip, lr
9001eb74:	f101 0801 	add.w	r8, r1, #1
9001eb78:	b292      	uxth	r2, r2
9001eb7a:	b29b      	uxth	r3, r3
9001eb7c:	eb08 2111 	add.w	r1, r8, r1, lsr #8
9001eb80:	f102 0801 	add.w	r8, r2, #1
9001eb84:	f103 0e01 	add.w	lr, r3, #1
9001eb88:	eb08 2812 	add.w	r8, r8, r2, lsr #8
9001eb8c:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
9001eb90:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
9001eb94:	ea4f 1858 	mov.w	r8, r8, lsr #5
9001eb98:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
9001eb9c:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
9001eba0:	ea4e 0101 	orr.w	r1, lr, r1
9001eba4:	ea41 0108 	orr.w	r1, r1, r8
9001eba8:	f820 1b02 	strh.w	r1, [r0], #2
9001ebac:	e7b6      	b.n	9001eb1c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
9001ebae:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001ebb0:	881b      	ldrh	r3, [r3, #0]
9001ebb2:	1b9b      	subs	r3, r3, r6
9001ebb4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001ebb8:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
9001ebbc:	1b9b      	subs	r3, r3, r6
9001ebbe:	441c      	add	r4, r3
9001ebc0:	e7a6      	b.n	9001eb10 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
9001ebc2:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
9001ebc6:	2203      	movs	r2, #3
9001ebc8:	2504      	movs	r5, #4
9001ebca:	4919      	ldr	r1, [pc, #100]	; (9001ec30 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
9001ebcc:	4550      	cmp	r0, sl
9001ebce:	d228      	bcs.n	9001ec22 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
9001ebd0:	eb00 0c09 	add.w	ip, r0, r9
9001ebd4:	4560      	cmp	r0, ip
9001ebd6:	4623      	mov	r3, r4
9001ebd8:	d219      	bcs.n	9001ec0e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
9001ebda:	f893 e000 	ldrb.w	lr, [r3]
9001ebde:	3401      	adds	r4, #1
9001ebe0:	fb12 5e0e 	smlabb	lr, r2, lr, r5
9001ebe4:	eb07 0b0e 	add.w	fp, r7, lr
9001ebe8:	f817 e00e 	ldrb.w	lr, [r7, lr]
9001ebec:	f89b 3002 	ldrb.w	r3, [fp, #2]
9001ebf0:	f89b b001 	ldrb.w	fp, [fp, #1]
9001ebf4:	ea01 2303 	and.w	r3, r1, r3, lsl #8
9001ebf8:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
9001ebfc:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
9001ec00:	ea43 030b 	orr.w	r3, r3, fp
9001ec04:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
9001ec08:	f820 3b02 	strh.w	r3, [r0], #2
9001ec0c:	e7e2      	b.n	9001ebd4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
9001ec0e:	f8b8 3000 	ldrh.w	r3, [r8]
9001ec12:	1b9b      	subs	r3, r3, r6
9001ec14:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001ec18:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
9001ec1c:	1b9b      	subs	r3, r3, r6
9001ec1e:	441c      	add	r4, r3
9001ec20:	e7d4      	b.n	9001ebcc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
9001ec22:	4b04      	ldr	r3, [pc, #16]	; (9001ec34 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
9001ec24:	6818      	ldr	r0, [r3, #0]
9001ec26:	6803      	ldr	r3, [r0, #0]
9001ec28:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001ec2a:	4798      	blx	r3
9001ec2c:	e750      	b.n	9001ead0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
9001ec2e:	bf00      	nop
9001ec30:	fffff800 	.word	0xfffff800
9001ec34:	24039834 	.word	0x24039834
9001ec38:	2403982e 	.word	0x2403982e

9001ec3c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
9001ec3c:	b4f0      	push	{r4, r5, r6, r7}
9001ec3e:	460c      	mov	r4, r1
9001ec40:	4611      	mov	r1, r2
9001ec42:	f89d 5014 	ldrb.w	r5, [sp, #20]
9001ec46:	461a      	mov	r2, r3
9001ec48:	780f      	ldrb	r7, [r1, #0]
9001ec4a:	9b04      	ldr	r3, [sp, #16]
9001ec4c:	2f01      	cmp	r7, #1
9001ec4e:	784e      	ldrb	r6, [r1, #1]
9001ec50:	d036      	beq.n	9001ecc0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x84>
9001ec52:	d31e      	bcc.n	9001ec92 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x56>
9001ec54:	2f02      	cmp	r7, #2
9001ec56:	d14a      	bne.n	9001ecee <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
9001ec58:	2e03      	cmp	r6, #3
9001ec5a:	d848      	bhi.n	9001ecee <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
9001ec5c:	e8df f006 	tbb	[pc, r6]
9001ec60:	16140702 	.word	0x16140702
9001ec64:	9504      	str	r5, [sp, #16]
9001ec66:	4620      	mov	r0, r4
9001ec68:	bcf0      	pop	{r4, r5, r6, r7}
9001ec6a:	f7ff be09 	b.w	9001e880 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
9001ec6e:	6f80      	ldr	r0, [r0, #120]	; 0x78
9001ec70:	2800      	cmp	r0, #0
9001ec72:	d03c      	beq.n	9001ecee <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
9001ec74:	6806      	ldr	r6, [r0, #0]
9001ec76:	e9cd 3504 	strd	r3, r5, [sp, #16]
9001ec7a:	68b5      	ldr	r5, [r6, #8]
9001ec7c:	4613      	mov	r3, r2
9001ec7e:	46ac      	mov	ip, r5
9001ec80:	460a      	mov	r2, r1
9001ec82:	4621      	mov	r1, r4
9001ec84:	bcf0      	pop	{r4, r5, r6, r7}
9001ec86:	4760      	bx	ip
9001ec88:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
9001ec8a:	e7f1      	b.n	9001ec70 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
9001ec8c:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
9001ec90:	e7ee      	b.n	9001ec70 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
9001ec92:	2e03      	cmp	r6, #3
9001ec94:	d82b      	bhi.n	9001ecee <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
9001ec96:	e8df f006 	tbb	[pc, r6]
9001ec9a:	0702      	.short	0x0702
9001ec9c:	100e      	.short	0x100e
9001ec9e:	9504      	str	r5, [sp, #16]
9001eca0:	4620      	mov	r0, r4
9001eca2:	bcf0      	pop	{r4, r5, r6, r7}
9001eca4:	f7ff bd06 	b.w	9001e6b4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
9001eca8:	6f80      	ldr	r0, [r0, #120]	; 0x78
9001ecaa:	b300      	cbz	r0, 9001ecee <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
9001ecac:	6806      	ldr	r6, [r0, #0]
9001ecae:	e9cd 3504 	strd	r3, r5, [sp, #16]
9001ecb2:	68f5      	ldr	r5, [r6, #12]
9001ecb4:	e7e2      	b.n	9001ec7c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
9001ecb6:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
9001ecb8:	e7f7      	b.n	9001ecaa <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
9001ecba:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
9001ecbe:	e7f4      	b.n	9001ecaa <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
9001ecc0:	2e03      	cmp	r6, #3
9001ecc2:	d814      	bhi.n	9001ecee <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
9001ecc4:	e8df f006 	tbb	[pc, r6]
9001ecc8:	100e0702 	.word	0x100e0702
9001eccc:	9504      	str	r5, [sp, #16]
9001ecce:	4620      	mov	r0, r4
9001ecd0:	bcf0      	pop	{r4, r5, r6, r7}
9001ecd2:	f7ff bea1 	b.w	9001ea18 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
9001ecd6:	6f80      	ldr	r0, [r0, #120]	; 0x78
9001ecd8:	b148      	cbz	r0, 9001ecee <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
9001ecda:	6806      	ldr	r6, [r0, #0]
9001ecdc:	e9cd 3504 	strd	r3, r5, [sp, #16]
9001ece0:	6935      	ldr	r5, [r6, #16]
9001ece2:	e7cb      	b.n	9001ec7c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
9001ece4:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
9001ece6:	e7f7      	b.n	9001ecd8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
9001ece8:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
9001ecec:	e7f4      	b.n	9001ecd8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
9001ecee:	bcf0      	pop	{r4, r5, r6, r7}
9001ecf0:	4770      	bx	lr
	...

9001ecf4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
9001ecf4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001ecf8:	b087      	sub	sp, #28
9001ecfa:	4604      	mov	r4, r0
9001ecfc:	460e      	mov	r6, r1
9001ecfe:	6810      	ldr	r0, [r2, #0]
9001ed00:	6851      	ldr	r1, [r2, #4]
9001ed02:	ad02      	add	r5, sp, #8
9001ed04:	4617      	mov	r7, r2
9001ed06:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
9001ed0a:	f8df 9230 	ldr.w	r9, [pc, #560]	; 9001ef3c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
9001ed0e:	c503      	stmia	r5!, {r0, r1}
9001ed10:	6818      	ldr	r0, [r3, #0]
9001ed12:	ad04      	add	r5, sp, #16
9001ed14:	6859      	ldr	r1, [r3, #4]
9001ed16:	c503      	stmia	r5!, {r0, r1}
9001ed18:	a802      	add	r0, sp, #8
9001ed1a:	f7f7 fc0d 	bl	90016538 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001ed1e:	4639      	mov	r1, r7
9001ed20:	a804      	add	r0, sp, #16
9001ed22:	f7f7 fc4d 	bl	900165c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001ed26:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
9001ed2a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9001ed2e:	f8bd 100c 	ldrh.w	r1, [sp, #12]
9001ed32:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
9001ed36:	fb11 2103 	smlabb	r1, r1, r3, r2
9001ed3a:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
9001ed3e:	eb04 0441 	add.w	r4, r4, r1, lsl #1
9001ed42:	440e      	add	r6, r1
9001ed44:	f8bd 1008 	ldrh.w	r1, [sp, #8]
9001ed48:	440a      	add	r2, r1
9001ed4a:	f8ad 2010 	strh.w	r2, [sp, #16]
9001ed4e:	f8bd 200a 	ldrh.w	r2, [sp, #10]
9001ed52:	4413      	add	r3, r2
9001ed54:	f8ad 3012 	strh.w	r3, [sp, #18]
9001ed58:	4b77      	ldr	r3, [pc, #476]	; (9001ef38 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
9001ed5a:	6818      	ldr	r0, [r3, #0]
9001ed5c:	6803      	ldr	r3, [r0, #0]
9001ed5e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001ed60:	4798      	blx	r3
9001ed62:	f8b9 b000 	ldrh.w	fp, [r9]
9001ed66:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9001ed6a:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
9001ed6e:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
9001ed72:	fb05 f50b 	mul.w	r5, r5, fp
9001ed76:	fb0b 2303 	mla	r3, fp, r3, r2
9001ed7a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001ed7e:	ea4f 0348 	mov.w	r3, r8, lsl #1
9001ed82:	9300      	str	r3, [sp, #0]
9001ed84:	d069      	beq.n	9001ee5a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
9001ed86:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
9001ed8a:	4558      	cmp	r0, fp
9001ed8c:	f080 80cc 	bcs.w	9001ef28 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
9001ed90:	9b00      	ldr	r3, [sp, #0]
9001ed92:	4631      	mov	r1, r6
9001ed94:	18c3      	adds	r3, r0, r3
9001ed96:	9301      	str	r3, [sp, #4]
9001ed98:	9b01      	ldr	r3, [sp, #4]
9001ed9a:	4298      	cmp	r0, r3
9001ed9c:	d24f      	bcs.n	9001ee3e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
9001ed9e:	f811 2b01 	ldrb.w	r2, [r1], #1
9001eda2:	2a00      	cmp	r2, #0
9001eda4:	d048      	beq.n	9001ee38 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
9001eda6:	fb0a f202 	mul.w	r2, sl, r2
9001edaa:	1c53      	adds	r3, r2, #1
9001edac:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9001edb0:	121b      	asrs	r3, r3, #8
9001edb2:	d041      	beq.n	9001ee38 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
9001edb4:	8802      	ldrh	r2, [r0, #0]
9001edb6:	b29e      	uxth	r6, r3
9001edb8:	f8b4 c000 	ldrh.w	ip, [r4]
9001edbc:	43db      	mvns	r3, r3
9001edbe:	1215      	asrs	r5, r2, #8
9001edc0:	b2db      	uxtb	r3, r3
9001edc2:	ea4f 272c 	mov.w	r7, ip, asr #8
9001edc6:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
9001edca:	ea4f 0ee2 	mov.w	lr, r2, asr #3
9001edce:	fb15 f503 	smulbb	r5, r5, r3
9001edd2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001edd6:	00d2      	lsls	r2, r2, #3
9001edd8:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
9001eddc:	fb07 5706 	mla	r7, r7, r6, r5
9001ede0:	ea4f 05ec 	mov.w	r5, ip, asr #3
9001ede4:	b2d2      	uxtb	r2, r2
9001ede6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001edea:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9001edee:	fb1e fe03 	smulbb	lr, lr, r3
9001edf2:	b2bf      	uxth	r7, r7
9001edf4:	fb12 f203 	smulbb	r2, r2, r3
9001edf8:	fa5f fc8c 	uxtb.w	ip, ip
9001edfc:	fb05 e506 	mla	r5, r5, r6, lr
9001ee00:	f107 0e01 	add.w	lr, r7, #1
9001ee04:	fb0c 2c06 	mla	ip, ip, r6, r2
9001ee08:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
9001ee0c:	fa1f fc8c 	uxth.w	ip, ip
9001ee10:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
9001ee14:	b2ad      	uxth	r5, r5
9001ee16:	f10c 0701 	add.w	r7, ip, #1
9001ee1a:	eb07 271c 	add.w	r7, r7, ip, lsr #8
9001ee1e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
9001ee22:	ea47 070e 	orr.w	r7, r7, lr
9001ee26:	f105 0e01 	add.w	lr, r5, #1
9001ee2a:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
9001ee2e:	096d      	lsrs	r5, r5, #5
9001ee30:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001ee34:	432f      	orrs	r7, r5
9001ee36:	8007      	strh	r7, [r0, #0]
9001ee38:	3002      	adds	r0, #2
9001ee3a:	3402      	adds	r4, #2
9001ee3c:	e7ac      	b.n	9001ed98 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
9001ee3e:	f8b9 3000 	ldrh.w	r3, [r9]
9001ee42:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
9001ee46:	eba3 0308 	sub.w	r3, r3, r8
9001ee4a:	eba6 0608 	sub.w	r6, r6, r8
9001ee4e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001ee52:	eb04 0446 	add.w	r4, r4, r6, lsl #1
9001ee56:	440e      	add	r6, r1
9001ee58:	e797      	b.n	9001ed8a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
9001ee5a:	eb00 0545 	add.w	r5, r0, r5, lsl #1
9001ee5e:	42a8      	cmp	r0, r5
9001ee60:	d262      	bcs.n	9001ef28 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
9001ee62:	9b00      	ldr	r3, [sp, #0]
9001ee64:	4631      	mov	r1, r6
9001ee66:	eb00 0b03 	add.w	fp, r0, r3
9001ee6a:	4558      	cmp	r0, fp
9001ee6c:	d24e      	bcs.n	9001ef0c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
9001ee6e:	f811 3b01 	ldrb.w	r3, [r1], #1
9001ee72:	b12b      	cbz	r3, 9001ee80 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
9001ee74:	2bff      	cmp	r3, #255	; 0xff
9001ee76:	f8b4 e000 	ldrh.w	lr, [r4]
9001ee7a:	d104      	bne.n	9001ee86 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
9001ee7c:	f8a0 e000 	strh.w	lr, [r0]
9001ee80:	3002      	adds	r0, #2
9001ee82:	3402      	adds	r4, #2
9001ee84:	e7f1      	b.n	9001ee6a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
9001ee86:	8802      	ldrh	r2, [r0, #0]
9001ee88:	b29f      	uxth	r7, r3
9001ee8a:	43db      	mvns	r3, r3
9001ee8c:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001ee90:	1216      	asrs	r6, r2, #8
9001ee92:	b2db      	uxtb	r3, r3
9001ee94:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001ee98:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001ee9c:	ea4f 0ae2 	mov.w	sl, r2, asr #3
9001eea0:	00d2      	lsls	r2, r2, #3
9001eea2:	fb16 f603 	smulbb	r6, r6, r3
9001eea6:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
9001eeaa:	b2d2      	uxtb	r2, r2
9001eeac:	fb0c 6c07 	mla	ip, ip, r7, r6
9001eeb0:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001eeb4:	fb1a fa03 	smulbb	sl, sl, r3
9001eeb8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001eebc:	fa1f fc8c 	uxth.w	ip, ip
9001eec0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001eec4:	fb12 f303 	smulbb	r3, r2, r3
9001eec8:	fa5f fe8e 	uxtb.w	lr, lr
9001eecc:	fb06 a607 	mla	r6, r6, r7, sl
9001eed0:	f10c 0201 	add.w	r2, ip, #1
9001eed4:	fb0e 3307 	mla	r3, lr, r7, r3
9001eed8:	b2b6      	uxth	r6, r6
9001eeda:	b29b      	uxth	r3, r3
9001eedc:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9001eee0:	f106 0a01 	add.w	sl, r6, #1
9001eee4:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
9001eee8:	f103 0c01 	add.w	ip, r3, #1
9001eeec:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
9001eef0:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
9001eef4:	0976      	lsrs	r6, r6, #5
9001eef6:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001eefa:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001eefe:	ea4c 0c02 	orr.w	ip, ip, r2
9001ef02:	ea4c 0c06 	orr.w	ip, ip, r6
9001ef06:	f8a0 c000 	strh.w	ip, [r0]
9001ef0a:	e7b9      	b.n	9001ee80 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
9001ef0c:	f8b9 3000 	ldrh.w	r3, [r9]
9001ef10:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
9001ef14:	eba3 0308 	sub.w	r3, r3, r8
9001ef18:	eba6 0608 	sub.w	r6, r6, r8
9001ef1c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001ef20:	eb04 0446 	add.w	r4, r4, r6, lsl #1
9001ef24:	440e      	add	r6, r1
9001ef26:	e79a      	b.n	9001ee5e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
9001ef28:	4b03      	ldr	r3, [pc, #12]	; (9001ef38 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
9001ef2a:	6818      	ldr	r0, [r3, #0]
9001ef2c:	6803      	ldr	r3, [r0, #0]
9001ef2e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001ef30:	4798      	blx	r3
9001ef32:	b007      	add	sp, #28
9001ef34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001ef38:	24039834 	.word	0x24039834
9001ef3c:	2403982e 	.word	0x2403982e

9001ef40 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
9001ef40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001ef44:	b089      	sub	sp, #36	; 0x24
9001ef46:	4682      	mov	sl, r0
9001ef48:	460f      	mov	r7, r1
9001ef4a:	4691      	mov	r9, r2
9001ef4c:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
9001ef50:	4698      	mov	r8, r3
9001ef52:	9c12      	ldr	r4, [sp, #72]	; 0x48
9001ef54:	2e00      	cmp	r6, #0
9001ef56:	d03d      	beq.n	9001efd4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9001ef58:	4608      	mov	r0, r1
9001ef5a:	f7fa fe4d 	bl	90019bf8 <_ZNK8touchgfx6Bitmap8getWidthEv>
9001ef5e:	4605      	mov	r5, r0
9001ef60:	4638      	mov	r0, r7
9001ef62:	f7fa fe7d 	bl	90019c60 <_ZNK8touchgfx6Bitmap9getHeightEv>
9001ef66:	f8ad 000e 	strh.w	r0, [sp, #14]
9001ef6a:	4638      	mov	r0, r7
9001ef6c:	f8ad 9008 	strh.w	r9, [sp, #8]
9001ef70:	f8ad 500c 	strh.w	r5, [sp, #12]
9001ef74:	f8ad 800a 	strh.w	r8, [sp, #10]
9001ef78:	f7fa ff2a 	bl	90019dd0 <_ZNK8touchgfx6Bitmap7getDataEv>
9001ef7c:	4605      	mov	r5, r0
9001ef7e:	4638      	mov	r0, r7
9001ef80:	f7fa ff56 	bl	90019e30 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
9001ef84:	4681      	mov	r9, r0
9001ef86:	4638      	mov	r0, r7
9001ef88:	f7fa ffa6 	bl	90019ed8 <_ZNK8touchgfx6Bitmap9getFormatEv>
9001ef8c:	280b      	cmp	r0, #11
9001ef8e:	d821      	bhi.n	9001efd4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9001ef90:	e8df f000 	tbb	[pc, r0]
9001ef94:	2006aebe 	.word	0x2006aebe
9001ef98:	20202020 	.word	0x20202020
9001ef9c:	b5202020 	.word	0xb5202020
9001efa0:	4bb0      	ldr	r3, [pc, #704]	; (9001f264 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
9001efa2:	6818      	ldr	r0, [r3, #0]
9001efa4:	6803      	ldr	r3, [r0, #0]
9001efa6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001efa8:	4798      	blx	r3
9001efaa:	2eff      	cmp	r6, #255	; 0xff
9001efac:	d101      	bne.n	9001efb2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
9001efae:	0683      	lsls	r3, r0, #26
9001efb0:	d506      	bpl.n	9001efc0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
9001efb2:	4633      	mov	r3, r6
9001efb4:	4622      	mov	r2, r4
9001efb6:	a902      	add	r1, sp, #8
9001efb8:	4628      	mov	r0, r5
9001efba:	f7ff f909 	bl	9001e1d0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
9001efbe:	e009      	b.n	9001efd4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9001efc0:	4638      	mov	r0, r7
9001efc2:	f7fa fecd 	bl	90019d60 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
9001efc6:	b940      	cbnz	r0, 9001efda <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
9001efc8:	4623      	mov	r3, r4
9001efca:	aa02      	add	r2, sp, #8
9001efcc:	4629      	mov	r1, r5
9001efce:	4650      	mov	r0, sl
9001efd0:	f7ff f9e4 	bl	9001e39c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
9001efd4:	b009      	add	sp, #36	; 0x24
9001efd6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001efda:	f10d 0818 	add.w	r8, sp, #24
9001efde:	4639      	mov	r1, r7
9001efe0:	af04      	add	r7, sp, #16
9001efe2:	4640      	mov	r0, r8
9001efe4:	f7fa fe70 	bl	90019cc8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
9001efe8:	e898 0003 	ldmia.w	r8, {r0, r1}
9001efec:	e887 0003 	stmia.w	r7, {r0, r1}
9001eff0:	4638      	mov	r0, r7
9001eff2:	4621      	mov	r1, r4
9001eff4:	f7f2 fa2c 	bl	90011450 <_ZN8touchgfx4RectaNERKS0_>
9001eff8:	4638      	mov	r0, r7
9001effa:	f7f2 fa6c 	bl	900114d6 <_ZNK8touchgfx4Rect7isEmptyEv>
9001effe:	2800      	cmp	r0, #0
9001f000:	d1d7      	bne.n	9001efb2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
9001f002:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9001f006:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
9001f00a:	4293      	cmp	r3, r2
9001f00c:	dd12      	ble.n	9001f034 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
9001f00e:	1a9b      	subs	r3, r3, r2
9001f010:	f9b4 0000 	ldrsh.w	r0, [r4]
9001f014:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
9001f018:	f8ad 0018 	strh.w	r0, [sp, #24]
9001f01c:	4628      	mov	r0, r5
9001f01e:	f8ad 201a 	strh.w	r2, [sp, #26]
9001f022:	4642      	mov	r2, r8
9001f024:	f8ad 101c 	strh.w	r1, [sp, #28]
9001f028:	a902      	add	r1, sp, #8
9001f02a:	f8ad 301e 	strh.w	r3, [sp, #30]
9001f02e:	4633      	mov	r3, r6
9001f030:	f7ff f8ce 	bl	9001e1d0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
9001f034:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
9001f038:	f9b4 2000 	ldrsh.w	r2, [r4]
9001f03c:	4293      	cmp	r3, r2
9001f03e:	dd12      	ble.n	9001f066 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
9001f040:	1a9b      	subs	r3, r3, r2
9001f042:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
9001f046:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
9001f04a:	f8ad 2018 	strh.w	r2, [sp, #24]
9001f04e:	4642      	mov	r2, r8
9001f050:	f8ad 001a 	strh.w	r0, [sp, #26]
9001f054:	4628      	mov	r0, r5
9001f056:	f8ad 301c 	strh.w	r3, [sp, #28]
9001f05a:	23ff      	movs	r3, #255	; 0xff
9001f05c:	f8ad 101e 	strh.w	r1, [sp, #30]
9001f060:	a902      	add	r1, sp, #8
9001f062:	f7ff f8b5 	bl	9001e1d0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
9001f066:	463b      	mov	r3, r7
9001f068:	aa02      	add	r2, sp, #8
9001f06a:	4629      	mov	r1, r5
9001f06c:	4650      	mov	r0, sl
9001f06e:	f7ff f995 	bl	9001e39c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
9001f072:	88a2      	ldrh	r2, [r4, #4]
9001f074:	8823      	ldrh	r3, [r4, #0]
9001f076:	f8bd 1014 	ldrh.w	r1, [sp, #20]
9001f07a:	4413      	add	r3, r2
9001f07c:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001f080:	440a      	add	r2, r1
9001f082:	b29b      	uxth	r3, r3
9001f084:	b292      	uxth	r2, r2
9001f086:	b218      	sxth	r0, r3
9001f088:	b211      	sxth	r1, r2
9001f08a:	4288      	cmp	r0, r1
9001f08c:	dd12      	ble.n	9001f0b4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
9001f08e:	1a9b      	subs	r3, r3, r2
9001f090:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
9001f094:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
9001f098:	4642      	mov	r2, r8
9001f09a:	f8ad 1018 	strh.w	r1, [sp, #24]
9001f09e:	a902      	add	r1, sp, #8
9001f0a0:	f8ad 301c 	strh.w	r3, [sp, #28]
9001f0a4:	23ff      	movs	r3, #255	; 0xff
9001f0a6:	f8ad 001e 	strh.w	r0, [sp, #30]
9001f0aa:	4628      	mov	r0, r5
9001f0ac:	f8ad 601a 	strh.w	r6, [sp, #26]
9001f0b0:	f7ff f88e 	bl	9001e1d0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
9001f0b4:	88e2      	ldrh	r2, [r4, #6]
9001f0b6:	8863      	ldrh	r3, [r4, #2]
9001f0b8:	f8bd 1016 	ldrh.w	r1, [sp, #22]
9001f0bc:	4413      	add	r3, r2
9001f0be:	f8bd 2012 	ldrh.w	r2, [sp, #18]
9001f0c2:	440a      	add	r2, r1
9001f0c4:	b29b      	uxth	r3, r3
9001f0c6:	b292      	uxth	r2, r2
9001f0c8:	b218      	sxth	r0, r3
9001f0ca:	b211      	sxth	r1, r2
9001f0cc:	4288      	cmp	r0, r1
9001f0ce:	dd81      	ble.n	9001efd4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9001f0d0:	1a9b      	subs	r3, r3, r2
9001f0d2:	f9b4 6000 	ldrsh.w	r6, [r4]
9001f0d6:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
9001f0da:	4642      	mov	r2, r8
9001f0dc:	f8ad 301e 	strh.w	r3, [sp, #30]
9001f0e0:	23ff      	movs	r3, #255	; 0xff
9001f0e2:	f8ad 6018 	strh.w	r6, [sp, #24]
9001f0e6:	f8ad 101a 	strh.w	r1, [sp, #26]
9001f0ea:	f8ad 001c 	strh.w	r0, [sp, #28]
9001f0ee:	e762      	b.n	9001efb6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
9001f0f0:	4633      	mov	r3, r6
9001f0f2:	4622      	mov	r2, r4
9001f0f4:	a902      	add	r1, sp, #8
9001f0f6:	4628      	mov	r0, r5
9001f0f8:	f7ff f9c0 	bl	9001e47c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
9001f0fc:	e76a      	b.n	9001efd4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9001f0fe:	e9cd 4600 	strd	r4, r6, [sp]
9001f102:	ab02      	add	r3, sp, #8
9001f104:	464a      	mov	r2, r9
9001f106:	4629      	mov	r1, r5
9001f108:	4650      	mov	r0, sl
9001f10a:	f7ff fd97 	bl	9001ec3c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
9001f10e:	e761      	b.n	9001efd4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9001f110:	4638      	mov	r0, r7
9001f112:	f7fa fe25 	bl	90019d60 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
9001f116:	b950      	cbnz	r0, 9001f12e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
9001f118:	f8da 3000 	ldr.w	r3, [sl]
9001f11c:	aa02      	add	r2, sp, #8
9001f11e:	4629      	mov	r1, r5
9001f120:	e9cd 6000 	strd	r6, r0, [sp]
9001f124:	4650      	mov	r0, sl
9001f126:	68de      	ldr	r6, [r3, #12]
9001f128:	4623      	mov	r3, r4
9001f12a:	47b0      	blx	r6
9001f12c:	e752      	b.n	9001efd4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9001f12e:	f10d 0818 	add.w	r8, sp, #24
9001f132:	4639      	mov	r1, r7
9001f134:	af04      	add	r7, sp, #16
9001f136:	4640      	mov	r0, r8
9001f138:	f7fa fdc6 	bl	90019cc8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
9001f13c:	e898 0003 	ldmia.w	r8, {r0, r1}
9001f140:	e887 0003 	stmia.w	r7, {r0, r1}
9001f144:	4638      	mov	r0, r7
9001f146:	4621      	mov	r1, r4
9001f148:	f7f2 f982 	bl	90011450 <_ZN8touchgfx4RectaNERKS0_>
9001f14c:	4638      	mov	r0, r7
9001f14e:	f7f2 f9c2 	bl	900114d6 <_ZNK8touchgfx4Rect7isEmptyEv>
9001f152:	b138      	cbz	r0, 9001f164 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
9001f154:	4623      	mov	r3, r4
9001f156:	9600      	str	r6, [sp, #0]
9001f158:	aa02      	add	r2, sp, #8
9001f15a:	4649      	mov	r1, r9
9001f15c:	4628      	mov	r0, r5
9001f15e:	f7ff fdc9 	bl	9001ecf4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
9001f162:	e737      	b.n	9001efd4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9001f164:	f8da 3000 	ldr.w	r3, [sl]
9001f168:	aa02      	add	r2, sp, #8
9001f16a:	4629      	mov	r1, r5
9001f16c:	e9cd 6000 	strd	r6, r0, [sp]
9001f170:	4650      	mov	r0, sl
9001f172:	f8d3 b00c 	ldr.w	fp, [r3, #12]
9001f176:	463b      	mov	r3, r7
9001f178:	47d8      	blx	fp
9001f17a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9001f17e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
9001f182:	4293      	cmp	r3, r2
9001f184:	dd13      	ble.n	9001f1ae <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
9001f186:	f9b4 0000 	ldrsh.w	r0, [r4]
9001f18a:	1a9b      	subs	r3, r3, r2
9001f18c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
9001f190:	f8ad 0018 	strh.w	r0, [sp, #24]
9001f194:	4628      	mov	r0, r5
9001f196:	f8ad 201a 	strh.w	r2, [sp, #26]
9001f19a:	aa02      	add	r2, sp, #8
9001f19c:	f8ad 101c 	strh.w	r1, [sp, #28]
9001f1a0:	4649      	mov	r1, r9
9001f1a2:	f8ad 301e 	strh.w	r3, [sp, #30]
9001f1a6:	4643      	mov	r3, r8
9001f1a8:	9600      	str	r6, [sp, #0]
9001f1aa:	f7ff fda3 	bl	9001ecf4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
9001f1ae:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
9001f1b2:	f9b4 2000 	ldrsh.w	r2, [r4]
9001f1b6:	4293      	cmp	r3, r2
9001f1b8:	dd13      	ble.n	9001f1e2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
9001f1ba:	1a9b      	subs	r3, r3, r2
9001f1bc:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
9001f1c0:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
9001f1c4:	f8ad 2018 	strh.w	r2, [sp, #24]
9001f1c8:	aa02      	add	r2, sp, #8
9001f1ca:	f8ad 001a 	strh.w	r0, [sp, #26]
9001f1ce:	4628      	mov	r0, r5
9001f1d0:	f8ad 301c 	strh.w	r3, [sp, #28]
9001f1d4:	4643      	mov	r3, r8
9001f1d6:	f8ad 101e 	strh.w	r1, [sp, #30]
9001f1da:	4649      	mov	r1, r9
9001f1dc:	9600      	str	r6, [sp, #0]
9001f1de:	f7ff fd89 	bl	9001ecf4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
9001f1e2:	88a2      	ldrh	r2, [r4, #4]
9001f1e4:	8823      	ldrh	r3, [r4, #0]
9001f1e6:	f8bd 1014 	ldrh.w	r1, [sp, #20]
9001f1ea:	4413      	add	r3, r2
9001f1ec:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001f1f0:	440a      	add	r2, r1
9001f1f2:	b29b      	uxth	r3, r3
9001f1f4:	b292      	uxth	r2, r2
9001f1f6:	b218      	sxth	r0, r3
9001f1f8:	b211      	sxth	r1, r2
9001f1fa:	4288      	cmp	r0, r1
9001f1fc:	dd13      	ble.n	9001f226 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
9001f1fe:	1a9b      	subs	r3, r3, r2
9001f200:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
9001f204:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
9001f208:	aa02      	add	r2, sp, #8
9001f20a:	f8ad 1018 	strh.w	r1, [sp, #24]
9001f20e:	4649      	mov	r1, r9
9001f210:	f8ad 301c 	strh.w	r3, [sp, #28]
9001f214:	4643      	mov	r3, r8
9001f216:	f8ad 001e 	strh.w	r0, [sp, #30]
9001f21a:	4628      	mov	r0, r5
9001f21c:	9600      	str	r6, [sp, #0]
9001f21e:	f8ad 701a 	strh.w	r7, [sp, #26]
9001f222:	f7ff fd67 	bl	9001ecf4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
9001f226:	88e2      	ldrh	r2, [r4, #6]
9001f228:	8863      	ldrh	r3, [r4, #2]
9001f22a:	f8bd 1016 	ldrh.w	r1, [sp, #22]
9001f22e:	4413      	add	r3, r2
9001f230:	f8bd 2012 	ldrh.w	r2, [sp, #18]
9001f234:	440a      	add	r2, r1
9001f236:	b29b      	uxth	r3, r3
9001f238:	b292      	uxth	r2, r2
9001f23a:	b218      	sxth	r0, r3
9001f23c:	b211      	sxth	r1, r2
9001f23e:	4288      	cmp	r0, r1
9001f240:	f77f aec8 	ble.w	9001efd4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9001f244:	f9b4 7000 	ldrsh.w	r7, [r4]
9001f248:	1a9b      	subs	r3, r3, r2
9001f24a:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
9001f24e:	f8ad 301e 	strh.w	r3, [sp, #30]
9001f252:	4643      	mov	r3, r8
9001f254:	f8ad 7018 	strh.w	r7, [sp, #24]
9001f258:	f8ad 101a 	strh.w	r1, [sp, #26]
9001f25c:	f8ad 001c 	strh.w	r0, [sp, #28]
9001f260:	9600      	str	r6, [sp, #0]
9001f262:	e779      	b.n	9001f158 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
9001f264:	24039834 	.word	0x24039834

9001f268 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
9001f268:	b180      	cbz	r0, 9001f28c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
9001f26a:	2903      	cmp	r1, #3
9001f26c:	d81c      	bhi.n	9001f2a8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
9001f26e:	e8df f001 	tbb	[pc, r1]
9001f272:	1d02      	.short	0x1d02
9001f274:	1f08      	.short	0x1f08
9001f276:	4b10      	ldr	r3, [pc, #64]	; (9001f2b8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
9001f278:	8818      	ldrh	r0, [r3, #0]
9001f27a:	f3c0 000e 	ubfx	r0, r0, #0, #15
9001f27e:	4240      	negs	r0, r0
9001f280:	4770      	bx	lr
9001f282:	4b0d      	ldr	r3, [pc, #52]	; (9001f2b8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
9001f284:	8818      	ldrh	r0, [r3, #0]
9001f286:	f3c0 000e 	ubfx	r0, r0, #0, #15
9001f28a:	4770      	bx	lr
9001f28c:	2903      	cmp	r1, #3
9001f28e:	d80b      	bhi.n	9001f2a8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
9001f290:	a301      	add	r3, pc, #4	; (adr r3, 9001f298 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
9001f292:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
9001f296:	bf00      	nop
9001f298:	9001f2ad 	.word	0x9001f2ad
9001f29c:	9001f283 	.word	0x9001f283
9001f2a0:	9001f2b1 	.word	0x9001f2b1
9001f2a4:	9001f277 	.word	0x9001f277
9001f2a8:	2000      	movs	r0, #0
9001f2aa:	4770      	bx	lr
9001f2ac:	2001      	movs	r0, #1
9001f2ae:	4770      	bx	lr
9001f2b0:	f04f 30ff 	mov.w	r0, #4294967295
9001f2b4:	4770      	bx	lr
9001f2b6:	bf00      	nop
9001f2b8:	2403982e 	.word	0x2403982e

9001f2bc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
9001f2bc:	b180      	cbz	r0, 9001f2e0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
9001f2be:	2903      	cmp	r1, #3
9001f2c0:	d81c      	bhi.n	9001f2fc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
9001f2c2:	e8df f001 	tbb	[pc, r1]
9001f2c6:	021d      	.short	0x021d
9001f2c8:	071f      	.short	0x071f
9001f2ca:	4b10      	ldr	r3, [pc, #64]	; (9001f30c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
9001f2cc:	8818      	ldrh	r0, [r3, #0]
9001f2ce:	f3c0 000e 	ubfx	r0, r0, #0, #15
9001f2d2:	4770      	bx	lr
9001f2d4:	4b0d      	ldr	r3, [pc, #52]	; (9001f30c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
9001f2d6:	8818      	ldrh	r0, [r3, #0]
9001f2d8:	f3c0 000e 	ubfx	r0, r0, #0, #15
9001f2dc:	4240      	negs	r0, r0
9001f2de:	4770      	bx	lr
9001f2e0:	2903      	cmp	r1, #3
9001f2e2:	d80b      	bhi.n	9001f2fc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
9001f2e4:	a301      	add	r3, pc, #4	; (adr r3, 9001f2ec <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
9001f2e6:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
9001f2ea:	bf00      	nop
9001f2ec:	9001f2cb 	.word	0x9001f2cb
9001f2f0:	9001f305 	.word	0x9001f305
9001f2f4:	9001f2d5 	.word	0x9001f2d5
9001f2f8:	9001f301 	.word	0x9001f301
9001f2fc:	2000      	movs	r0, #0
9001f2fe:	4770      	bx	lr
9001f300:	2001      	movs	r0, #1
9001f302:	4770      	bx	lr
9001f304:	f04f 30ff 	mov.w	r0, #4294967295
9001f308:	4770      	bx	lr
9001f30a:	bf00      	nop
9001f30c:	2403982e 	.word	0x2403982e

9001f310 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
9001f310:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001f314:	b099      	sub	sp, #100	; 0x64
9001f316:	910b      	str	r1, [sp, #44]	; 0x2c
9001f318:	a914      	add	r1, sp, #80	; 0x50
9001f31a:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
9001f31e:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
9001f322:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
9001f326:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
9001f32a:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
9001f32e:	e881 000c 	stmia.w	r1, {r2, r3}
9001f332:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
9001f336:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
9001f33a:	9309      	str	r3, [sp, #36]	; 0x24
9001f33c:	f891 900d 	ldrb.w	r9, [r1, #13]
9001f340:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
9001f344:	ea4f 1749 	mov.w	r7, r9, lsl #5
9001f348:	9310      	str	r3, [sp, #64]	; 0x40
9001f34a:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
9001f34e:	930c      	str	r3, [sp, #48]	; 0x30
9001f350:	f407 7380 	and.w	r3, r7, #256	; 0x100
9001f354:	798f      	ldrb	r7, [r1, #6]
9001f356:	431f      	orrs	r7, r3
9001f358:	f000 8195 	beq.w	9001f686 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
9001f35c:	ea4f 1909 	mov.w	r9, r9, lsl #4
9001f360:	f409 7380 	and.w	r3, r9, #256	; 0x100
9001f364:	f891 9007 	ldrb.w	r9, [r1, #7]
9001f368:	ea59 0903 	orrs.w	r9, r9, r3
9001f36c:	f000 818b 	beq.w	9001f686 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
9001f370:	f991 3009 	ldrsb.w	r3, [r1, #9]
9001f374:	b29b      	uxth	r3, r3
9001f376:	2d00      	cmp	r5, #0
9001f378:	f000 812e 	beq.w	9001f5d8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
9001f37c:	1aed      	subs	r5, r5, r3
9001f37e:	b2ad      	uxth	r5, r5
9001f380:	042b      	lsls	r3, r5, #16
9001f382:	d502      	bpl.n	9001f38a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
9001f384:	1b64      	subs	r4, r4, r5
9001f386:	2500      	movs	r5, #0
9001f388:	b224      	sxth	r4, r4
9001f38a:	f9b2 1000 	ldrsh.w	r1, [r2]
9001f38e:	a814      	add	r0, sp, #80	; 0x50
9001f390:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
9001f394:	428c      	cmp	r4, r1
9001f396:	b28b      	uxth	r3, r1
9001f398:	bfbf      	itttt	lt
9001f39a:	18ed      	addlt	r5, r5, r3
9001f39c:	1b2c      	sublt	r4, r5, r4
9001f39e:	b2a5      	uxthlt	r5, r4
9001f3a0:	460c      	movlt	r4, r1
9001f3a2:	8891      	ldrh	r1, [r2, #4]
9001f3a4:	440b      	add	r3, r1
9001f3a6:	4621      	mov	r1, r4
9001f3a8:	b21b      	sxth	r3, r3
9001f3aa:	930f      	str	r3, [sp, #60]	; 0x3c
9001f3ac:	88d3      	ldrh	r3, [r2, #6]
9001f3ae:	8852      	ldrh	r2, [r2, #2]
9001f3b0:	4413      	add	r3, r2
9001f3b2:	9a09      	ldr	r2, [sp, #36]	; 0x24
9001f3b4:	b21b      	sxth	r3, r3
9001f3b6:	930d      	str	r3, [sp, #52]	; 0x34
9001f3b8:	4bbd      	ldr	r3, [pc, #756]	; (9001f6b0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
9001f3ba:	f893 b000 	ldrb.w	fp, [r3]
9001f3be:	f10b 3cff 	add.w	ip, fp, #4294967295
9001f3c2:	f1dc 0300 	rsbs	r3, ip, #0
9001f3c6:	eb43 030c 	adc.w	r3, r3, ip
9001f3ca:	930e      	str	r3, [sp, #56]	; 0x38
9001f3cc:	4653      	mov	r3, sl
9001f3ce:	f7f6 ff28 	bl	90016222 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
9001f3d2:	4621      	mov	r1, r4
9001f3d4:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
9001f3d8:	4653      	mov	r3, sl
9001f3da:	9a09      	ldr	r2, [sp, #36]	; 0x24
9001f3dc:	a814      	add	r0, sp, #80	; 0x50
9001f3de:	f7f6 ff3d 	bl	9001625c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
9001f3e2:	a918      	add	r1, sp, #96	; 0x60
9001f3e4:	f821 0d02 	strh.w	r0, [r1, #-2]!
9001f3e8:	a817      	add	r0, sp, #92	; 0x5c
9001f3ea:	f7f7 f863 	bl	900164b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
9001f3ee:	f1ba 0f00 	cmp.w	sl, #0
9001f3f2:	f040 80f4 	bne.w	9001f5de <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
9001f3f6:	f1bb 0f01 	cmp.w	fp, #1
9001f3fa:	f040 80f8 	bne.w	9001f5ee <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
9001f3fe:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001f400:	2b00      	cmp	r3, #0
9001f402:	f040 8145 	bne.w	9001f690 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
9001f406:	b2ba      	uxth	r2, r7
9001f408:	b905      	cbnz	r5, 9001f40c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
9001f40a:	b16e      	cbz	r6, 9001f428 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
9001f40c:	fb06 5302 	mla	r3, r6, r2, r5
9001f410:	9828      	ldr	r0, [sp, #160]	; 0xa0
9001f412:	4631      	mov	r1, r6
9001f414:	fb08 f303 	mul.w	r3, r8, r3
9001f418:	f003 0607 	and.w	r6, r3, #7
9001f41c:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
9001f420:	9328      	str	r3, [sp, #160]	; 0xa0
9001f422:	eba9 0301 	sub.w	r3, r9, r1
9001f426:	930a      	str	r3, [sp, #40]	; 0x28
9001f428:	4651      	mov	r1, sl
9001f42a:	980e      	ldr	r0, [sp, #56]	; 0x38
9001f42c:	f7ff ff1c 	bl	9001f268 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
9001f430:	4681      	mov	r9, r0
9001f432:	980e      	ldr	r0, [sp, #56]	; 0x38
9001f434:	f7ff ff42 	bl	9001f2bc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
9001f438:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001f43a:	9909      	ldr	r1, [sp, #36]	; 0x24
9001f43c:	4683      	mov	fp, r0
9001f43e:	eba3 0a01 	sub.w	sl, r3, r1
9001f442:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001f444:	459a      	cmp	sl, r3
9001f446:	bfa8      	it	ge
9001f448:	469a      	movge	sl, r3
9001f44a:	f1ba 0f00 	cmp.w	sl, #0
9001f44e:	f340 811a 	ble.w	9001f686 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
9001f452:	1b64      	subs	r4, r4, r5
9001f454:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
9001f456:	1b1c      	subs	r4, r3, r4
9001f458:	42bc      	cmp	r4, r7
9001f45a:	bfd4      	ite	le
9001f45c:	ebc5 0504 	rsble	r5, r5, r4
9001f460:	ebc5 0507 	rsbgt	r5, r5, r7
9001f464:	2d00      	cmp	r5, #0
9001f466:	f340 810e 	ble.w	9001f686 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
9001f46a:	1b52      	subs	r2, r2, r5
9001f46c:	fb08 f302 	mul.w	r3, r8, r2
9001f470:	930f      	str	r3, [sp, #60]	; 0x3c
9001f472:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001f474:	2b00      	cmp	r3, #0
9001f476:	f040 8116 	bne.w	9001f6a6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
9001f47a:	4b8e      	ldr	r3, [pc, #568]	; (9001f6b4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
9001f47c:	6818      	ldr	r0, [r3, #0]
9001f47e:	6803      	ldr	r3, [r0, #0]
9001f480:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001f482:	4798      	blx	r3
9001f484:	2301      	movs	r3, #1
9001f486:	4a8c      	ldr	r2, [pc, #560]	; (9001f6b8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
9001f488:	fa03 f308 	lsl.w	r3, r3, r8
9001f48c:	8811      	ldrh	r1, [r2, #0]
9001f48e:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
9001f492:	3b01      	subs	r3, #1
9001f494:	b2db      	uxtb	r3, r3
9001f496:	930e      	str	r3, [sp, #56]	; 0x38
9001f498:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
9001f49c:	fb01 2303 	mla	r3, r1, r3, r2
9001f4a0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001f4a4:	930a      	str	r3, [sp, #40]	; 0x28
9001f4a6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9001f4a8:	f3c3 4307 	ubfx	r3, r3, #16, #8
9001f4ac:	9313      	str	r3, [sp, #76]	; 0x4c
9001f4ae:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9001f4b0:	0a19      	lsrs	r1, r3, #8
9001f4b2:	b2cb      	uxtb	r3, r1
9001f4b4:	9312      	str	r3, [sp, #72]	; 0x48
9001f4b6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9001f4b8:	b2db      	uxtb	r3, r3
9001f4ba:	9311      	str	r3, [sp, #68]	; 0x44
9001f4bc:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9001f4be:	095a      	lsrs	r2, r3, #5
9001f4c0:	4b7e      	ldr	r3, [pc, #504]	; (9001f6bc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>)
9001f4c2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001f4c6:	400b      	ands	r3, r1
9001f4c8:	4313      	orrs	r3, r2
9001f4ca:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
9001f4cc:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001f4d0:	4313      	orrs	r3, r2
9001f4d2:	b29b      	uxth	r3, r3
9001f4d4:	9310      	str	r3, [sp, #64]	; 0x40
9001f4d6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9001f4d8:	781a      	ldrb	r2, [r3, #0]
9001f4da:	ea4f 0349 	mov.w	r3, r9, lsl #1
9001f4de:	fb05 b919 	mls	r9, r5, r9, fp
9001f4e2:	4132      	asrs	r2, r6
9001f4e4:	fb03 fb05 	mul.w	fp, r3, r5
9001f4e8:	930d      	str	r3, [sp, #52]	; 0x34
9001f4ea:	b2d2      	uxtb	r2, r2
9001f4ec:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
9001f4f0:	f11a 3aff 	adds.w	sl, sl, #4294967295
9001f4f4:	f0c0 80f5 	bcc.w	9001f6e2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
9001f4f8:	46ae      	mov	lr, r5
9001f4fa:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
9001f4fe:	f11e 3eff 	adds.w	lr, lr, #4294967295
9001f502:	f0c0 80dd 	bcc.w	9001f6c0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
9001f506:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001f508:	4013      	ands	r3, r2
9001f50a:	d055      	beq.n	9001f5b8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
9001f50c:	20ff      	movs	r0, #255	; 0xff
9001f50e:	990e      	ldr	r1, [sp, #56]	; 0x38
9001f510:	fb90 f1f1 	sdiv	r1, r0, r1
9001f514:	434b      	muls	r3, r1
9001f516:	2bfe      	cmp	r3, #254	; 0xfe
9001f518:	dd03      	ble.n	9001f522 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
9001f51a:	990c      	ldr	r1, [sp, #48]	; 0x30
9001f51c:	4281      	cmp	r1, r0
9001f51e:	f000 80c4 	beq.w	9001f6aa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39a>
9001f522:	990c      	ldr	r1, [sp, #48]	; 0x30
9001f524:	f8bc 4000 	ldrh.w	r4, [ip]
9001f528:	fb11 f303 	smulbb	r3, r1, r3
9001f52c:	1220      	asrs	r0, r4, #8
9001f52e:	b29b      	uxth	r3, r3
9001f530:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
9001f534:	1c59      	adds	r1, r3, #1
9001f536:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
9001f53a:	eb01 2313 	add.w	r3, r1, r3, lsr #8
9001f53e:	10e1      	asrs	r1, r4, #3
9001f540:	f3c3 2307 	ubfx	r3, r3, #8, #8
9001f544:	00e4      	lsls	r4, r4, #3
9001f546:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
9001f54a:	b29f      	uxth	r7, r3
9001f54c:	43db      	mvns	r3, r3
9001f54e:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
9001f552:	b2db      	uxtb	r3, r3
9001f554:	b2e4      	uxtb	r4, r4
9001f556:	9309      	str	r3, [sp, #36]	; 0x24
9001f558:	9b13      	ldr	r3, [sp, #76]	; 0x4c
9001f55a:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
9001f55e:	fb13 f907 	smulbb	r9, r3, r7
9001f562:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001f564:	fb00 9003 	mla	r0, r0, r3, r9
9001f568:	9b12      	ldr	r3, [sp, #72]	; 0x48
9001f56a:	fb13 f907 	smulbb	r9, r3, r7
9001f56e:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001f570:	b280      	uxth	r0, r0
9001f572:	fb01 9103 	mla	r1, r1, r3, r9
9001f576:	9b11      	ldr	r3, [sp, #68]	; 0x44
9001f578:	fb13 f707 	smulbb	r7, r3, r7
9001f57c:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001f57e:	b289      	uxth	r1, r1
9001f580:	fb04 7403 	mla	r4, r4, r3, r7
9001f584:	1c43      	adds	r3, r0, #1
9001f586:	b2a4      	uxth	r4, r4
9001f588:	eb03 2010 	add.w	r0, r3, r0, lsr #8
9001f58c:	f104 0901 	add.w	r9, r4, #1
9001f590:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
9001f594:	eb09 2914 	add.w	r9, r9, r4, lsr #8
9001f598:	f3c9 29c4 	ubfx	r9, r9, #11, #5
9001f59c:	ea49 0000 	orr.w	r0, r9, r0
9001f5a0:	f101 0901 	add.w	r9, r1, #1
9001f5a4:	eb09 2911 	add.w	r9, r9, r1, lsr #8
9001f5a8:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001f5ac:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
9001f5b0:	ea40 0009 	orr.w	r0, r0, r9
9001f5b4:	f8ac 0000 	strh.w	r0, [ip]
9001f5b8:	4446      	add	r6, r8
9001f5ba:	b2b6      	uxth	r6, r6
9001f5bc:	2e07      	cmp	r6, #7
9001f5be:	bf89      	itett	hi
9001f5c0:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
9001f5c2:	fa42 f208 	asrls.w	r2, r2, r8
9001f5c6:	2600      	movhi	r6, #0
9001f5c8:	785a      	ldrbhi	r2, [r3, #1]
9001f5ca:	bf8a      	itet	hi
9001f5cc:	3301      	addhi	r3, #1
9001f5ce:	b2d2      	uxtbls	r2, r2
9001f5d0:	9328      	strhi	r3, [sp, #160]	; 0xa0
9001f5d2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001f5d4:	449c      	add	ip, r3
9001f5d6:	e792      	b.n	9001f4fe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
9001f5d8:	441c      	add	r4, r3
9001f5da:	b224      	sxth	r4, r4
9001f5dc:	e6d5      	b.n	9001f38a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
9001f5de:	f1ba 0f01 	cmp.w	sl, #1
9001f5e2:	f47f af0c 	bne.w	9001f3fe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9001f5e6:	f1bb 0f01 	cmp.w	fp, #1
9001f5ea:	f47f af08 	bne.w	9001f3fe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9001f5ee:	f8df b0c4 	ldr.w	fp, [pc, #196]	; 9001f6b4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>
9001f5f2:	f8db 0000 	ldr.w	r0, [fp]
9001f5f6:	6803      	ldr	r3, [r0, #0]
9001f5f8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001f5fa:	4798      	blx	r3
9001f5fc:	f410 7380 	ands.w	r3, r0, #256	; 0x100
9001f600:	465a      	mov	r2, fp
9001f602:	d006      	beq.n	9001f612 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
9001f604:	f1b8 0f04 	cmp.w	r8, #4
9001f608:	d140      	bne.n	9001f68c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
9001f60a:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001f60c:	3300      	adds	r3, #0
9001f60e:	bf18      	it	ne
9001f610:	2301      	movne	r3, #1
9001f612:	0580      	lsls	r0, r0, #22
9001f614:	d56e      	bpl.n	9001f6f4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
9001f616:	f1b8 0f08 	cmp.w	r8, #8
9001f61a:	d16b      	bne.n	9001f6f4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
9001f61c:	2b00      	cmp	r3, #0
9001f61e:	bf0c      	ite	eq
9001f620:	f44f 7100 	moveq.w	r1, #512	; 0x200
9001f624:	f44f 7180 	movne.w	r1, #256	; 0x100
9001f628:	2d00      	cmp	r5, #0
9001f62a:	f47f aee8 	bne.w	9001f3fe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9001f62e:	2e00      	cmp	r6, #0
9001f630:	f47f aee5 	bne.w	9001f3fe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9001f634:	19e3      	adds	r3, r4, r7
9001f636:	980f      	ldr	r0, [sp, #60]	; 0x3c
9001f638:	4283      	cmp	r3, r0
9001f63a:	f73f aee0 	bgt.w	9001f3fe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9001f63e:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001f640:	980d      	ldr	r0, [sp, #52]	; 0x34
9001f642:	444b      	add	r3, r9
9001f644:	4283      	cmp	r3, r0
9001f646:	f73f aeda 	bgt.w	9001f3fe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9001f64a:	b2bf      	uxth	r7, r7
9001f64c:	f1b8 0f08 	cmp.w	r8, #8
9001f650:	6810      	ldr	r0, [r2, #0]
9001f652:	f04f 0500 	mov.w	r5, #0
9001f656:	bf18      	it	ne
9001f658:	3701      	addne	r7, #1
9001f65a:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
9001f65e:	6804      	ldr	r4, [r0, #0]
9001f660:	bf18      	it	ne
9001f662:	f027 0701 	bicne.w	r7, r7, #1
9001f666:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
9001f66a:	e9cd 1505 	strd	r1, r5, [sp, #20]
9001f66e:	990c      	ldr	r1, [sp, #48]	; 0x30
9001f670:	bf18      	it	ne
9001f672:	b2bf      	uxthne	r7, r7
9001f674:	9104      	str	r1, [sp, #16]
9001f676:	992a      	ldr	r1, [sp, #168]	; 0xa8
9001f678:	e9cd 7900 	strd	r7, r9, [sp]
9001f67c:	e9cd 7102 	strd	r7, r1, [sp, #8]
9001f680:	9928      	ldr	r1, [sp, #160]	; 0xa0
9001f682:	6d64      	ldr	r4, [r4, #84]	; 0x54
9001f684:	47a0      	blx	r4
9001f686:	b019      	add	sp, #100	; 0x64
9001f688:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001f68c:	2300      	movs	r3, #0
9001f68e:	e7c0      	b.n	9001f612 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
9001f690:	2208      	movs	r2, #8
9001f692:	fb92 f3f8 	sdiv	r3, r2, r8
9001f696:	1e5a      	subs	r2, r3, #1
9001f698:	443a      	add	r2, r7
9001f69a:	fb92 f2f3 	sdiv	r2, r2, r3
9001f69e:	fb12 f203 	smulbb	r2, r2, r3
9001f6a2:	b292      	uxth	r2, r2
9001f6a4:	e6b0      	b.n	9001f408 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
9001f6a6:	980b      	ldr	r0, [sp, #44]	; 0x2c
9001f6a8:	e6ec      	b.n	9001f484 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
9001f6aa:	9810      	ldr	r0, [sp, #64]	; 0x40
9001f6ac:	e782      	b.n	9001f5b4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
9001f6ae:	bf00      	nop
9001f6b0:	2403982c 	.word	0x2403982c
9001f6b4:	24039834 	.word	0x24039834
9001f6b8:	2403982e 	.word	0x2403982e
9001f6bc:	00fff800 	.word	0x00fff800
9001f6c0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
9001f6c2:	b153      	cbz	r3, 9001f6da <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
9001f6c4:	441e      	add	r6, r3
9001f6c6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9001f6c8:	b2b6      	uxth	r6, r6
9001f6ca:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
9001f6ce:	f006 0607 	and.w	r6, r6, #7
9001f6d2:	781a      	ldrb	r2, [r3, #0]
9001f6d4:	9328      	str	r3, [sp, #160]	; 0xa0
9001f6d6:	4132      	asrs	r2, r6
9001f6d8:	b2d2      	uxtb	r2, r2
9001f6da:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001f6dc:	445b      	add	r3, fp
9001f6de:	930a      	str	r3, [sp, #40]	; 0x28
9001f6e0:	e706      	b.n	9001f4f0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
9001f6e2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001f6e4:	2b00      	cmp	r3, #0
9001f6e6:	d1ce      	bne.n	9001f686 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
9001f6e8:	4b05      	ldr	r3, [pc, #20]	; (9001f700 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
9001f6ea:	6818      	ldr	r0, [r3, #0]
9001f6ec:	6803      	ldr	r3, [r0, #0]
9001f6ee:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001f6f0:	4798      	blx	r3
9001f6f2:	e7c8      	b.n	9001f686 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
9001f6f4:	2b00      	cmp	r3, #0
9001f6f6:	f43f ae82 	beq.w	9001f3fe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9001f6fa:	f44f 7180 	mov.w	r1, #256	; 0x100
9001f6fe:	e793      	b.n	9001f628 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
9001f700:	24039834 	.word	0x24039834

9001f704 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
9001f704:	b538      	push	{r3, r4, r5, lr}
9001f706:	4c15      	ldr	r4, [pc, #84]	; (9001f75c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
9001f708:	4605      	mov	r5, r0
9001f70a:	7823      	ldrb	r3, [r4, #0]
9001f70c:	f3bf 8f5b 	dmb	ish
9001f710:	07da      	lsls	r2, r3, #31
9001f712:	d40b      	bmi.n	9001f72c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
9001f714:	4620      	mov	r0, r4
9001f716:	f008 fa05 	bl	90027b24 <__cxa_guard_acquire>
9001f71a:	b138      	cbz	r0, 9001f72c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
9001f71c:	4620      	mov	r0, r4
9001f71e:	f008 fa0d 	bl	90027b3c <__cxa_guard_release>
9001f722:	4a0f      	ldr	r2, [pc, #60]	; (9001f760 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
9001f724:	490f      	ldr	r1, [pc, #60]	; (9001f764 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
9001f726:	4810      	ldr	r0, [pc, #64]	; (9001f768 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
9001f728:	f008 f9f5 	bl	90027b16 <__aeabi_atexit>
9001f72c:	4c0f      	ldr	r4, [pc, #60]	; (9001f76c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
9001f72e:	7823      	ldrb	r3, [r4, #0]
9001f730:	f3bf 8f5b 	dmb	ish
9001f734:	07db      	lsls	r3, r3, #31
9001f736:	d40b      	bmi.n	9001f750 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
9001f738:	4620      	mov	r0, r4
9001f73a:	f008 f9f3 	bl	90027b24 <__cxa_guard_acquire>
9001f73e:	b138      	cbz	r0, 9001f750 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
9001f740:	4620      	mov	r0, r4
9001f742:	f008 f9fb 	bl	90027b3c <__cxa_guard_release>
9001f746:	4a06      	ldr	r2, [pc, #24]	; (9001f760 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
9001f748:	4909      	ldr	r1, [pc, #36]	; (9001f770 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
9001f74a:	480a      	ldr	r0, [pc, #40]	; (9001f774 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
9001f74c:	f008 f9e3 	bl	90027b16 <__aeabi_atexit>
9001f750:	4b05      	ldr	r3, [pc, #20]	; (9001f768 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
9001f752:	612b      	str	r3, [r5, #16]
9001f754:	4b07      	ldr	r3, [pc, #28]	; (9001f774 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
9001f756:	616b      	str	r3, [r5, #20]
9001f758:	bd38      	pop	{r3, r4, r5, pc}
9001f75a:	bf00      	nop
9001f75c:	24039914 	.word	0x24039914
9001f760:	24000000 	.word	0x24000000
9001f764:	9001c4eb 	.word	0x9001c4eb
9001f768:	240000cc 	.word	0x240000cc
9001f76c:	24039918 	.word	0x24039918
9001f770:	9001c4e9 	.word	0x9001c4e9
9001f774:	240000d0 	.word	0x240000d0

9001f778 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
9001f778:	b538      	push	{r3, r4, r5, lr}
9001f77a:	4c15      	ldr	r4, [pc, #84]	; (9001f7d0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
9001f77c:	4605      	mov	r5, r0
9001f77e:	7823      	ldrb	r3, [r4, #0]
9001f780:	f3bf 8f5b 	dmb	ish
9001f784:	07da      	lsls	r2, r3, #31
9001f786:	d40b      	bmi.n	9001f7a0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
9001f788:	4620      	mov	r0, r4
9001f78a:	f008 f9cb 	bl	90027b24 <__cxa_guard_acquire>
9001f78e:	b138      	cbz	r0, 9001f7a0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
9001f790:	4620      	mov	r0, r4
9001f792:	f008 f9d3 	bl	90027b3c <__cxa_guard_release>
9001f796:	4a0f      	ldr	r2, [pc, #60]	; (9001f7d4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
9001f798:	490f      	ldr	r1, [pc, #60]	; (9001f7d8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
9001f79a:	4810      	ldr	r0, [pc, #64]	; (9001f7dc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
9001f79c:	f008 f9bb 	bl	90027b16 <__aeabi_atexit>
9001f7a0:	4c0f      	ldr	r4, [pc, #60]	; (9001f7e0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
9001f7a2:	7823      	ldrb	r3, [r4, #0]
9001f7a4:	f3bf 8f5b 	dmb	ish
9001f7a8:	07db      	lsls	r3, r3, #31
9001f7aa:	d40b      	bmi.n	9001f7c4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
9001f7ac:	4620      	mov	r0, r4
9001f7ae:	f008 f9b9 	bl	90027b24 <__cxa_guard_acquire>
9001f7b2:	b138      	cbz	r0, 9001f7c4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
9001f7b4:	4620      	mov	r0, r4
9001f7b6:	f008 f9c1 	bl	90027b3c <__cxa_guard_release>
9001f7ba:	4a06      	ldr	r2, [pc, #24]	; (9001f7d4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
9001f7bc:	4909      	ldr	r1, [pc, #36]	; (9001f7e4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
9001f7be:	480a      	ldr	r0, [pc, #40]	; (9001f7e8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
9001f7c0:	f008 f9a9 	bl	90027b16 <__aeabi_atexit>
9001f7c4:	4b05      	ldr	r3, [pc, #20]	; (9001f7dc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
9001f7c6:	60ab      	str	r3, [r5, #8]
9001f7c8:	4b07      	ldr	r3, [pc, #28]	; (9001f7e8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
9001f7ca:	60eb      	str	r3, [r5, #12]
9001f7cc:	bd38      	pop	{r3, r4, r5, pc}
9001f7ce:	bf00      	nop
9001f7d0:	240398ec 	.word	0x240398ec
9001f7d4:	24000000 	.word	0x24000000
9001f7d8:	9001c4ef 	.word	0x9001c4ef
9001f7dc:	240000a4 	.word	0x240000a4
9001f7e0:	240398f0 	.word	0x240398f0
9001f7e4:	9001c4ed 	.word	0x9001c4ed
9001f7e8:	240000a8 	.word	0x240000a8

9001f7ec <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
9001f7ec:	b510      	push	{r4, lr}
9001f7ee:	4604      	mov	r4, r0
9001f7f0:	f7ff ff88 	bl	9001f704 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
9001f7f4:	4620      	mov	r0, r4
9001f7f6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001f7fa:	f7ff bfbd 	b.w	9001f778 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

9001f800 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
9001f800:	b538      	push	{r3, r4, r5, lr}
9001f802:	4c15      	ldr	r4, [pc, #84]	; (9001f858 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
9001f804:	4605      	mov	r5, r0
9001f806:	7823      	ldrb	r3, [r4, #0]
9001f808:	f3bf 8f5b 	dmb	ish
9001f80c:	07da      	lsls	r2, r3, #31
9001f80e:	d40b      	bmi.n	9001f828 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
9001f810:	4620      	mov	r0, r4
9001f812:	f008 f987 	bl	90027b24 <__cxa_guard_acquire>
9001f816:	b138      	cbz	r0, 9001f828 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
9001f818:	4620      	mov	r0, r4
9001f81a:	f008 f98f 	bl	90027b3c <__cxa_guard_release>
9001f81e:	4a0f      	ldr	r2, [pc, #60]	; (9001f85c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
9001f820:	490f      	ldr	r1, [pc, #60]	; (9001f860 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
9001f822:	4810      	ldr	r0, [pc, #64]	; (9001f864 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
9001f824:	f008 f977 	bl	90027b16 <__aeabi_atexit>
9001f828:	4c0f      	ldr	r4, [pc, #60]	; (9001f868 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
9001f82a:	7823      	ldrb	r3, [r4, #0]
9001f82c:	f3bf 8f5b 	dmb	ish
9001f830:	07db      	lsls	r3, r3, #31
9001f832:	d40b      	bmi.n	9001f84c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
9001f834:	4620      	mov	r0, r4
9001f836:	f008 f975 	bl	90027b24 <__cxa_guard_acquire>
9001f83a:	b138      	cbz	r0, 9001f84c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
9001f83c:	4620      	mov	r0, r4
9001f83e:	f008 f97d 	bl	90027b3c <__cxa_guard_release>
9001f842:	4a06      	ldr	r2, [pc, #24]	; (9001f85c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
9001f844:	4909      	ldr	r1, [pc, #36]	; (9001f86c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
9001f846:	480a      	ldr	r0, [pc, #40]	; (9001f870 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
9001f848:	f008 f965 	bl	90027b16 <__aeabi_atexit>
9001f84c:	4b05      	ldr	r3, [pc, #20]	; (9001f864 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
9001f84e:	622b      	str	r3, [r5, #32]
9001f850:	4b07      	ldr	r3, [pc, #28]	; (9001f870 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
9001f852:	626b      	str	r3, [r5, #36]	; 0x24
9001f854:	bd38      	pop	{r3, r4, r5, pc}
9001f856:	bf00      	nop
9001f858:	2403991c 	.word	0x2403991c
9001f85c:	24000000 	.word	0x24000000
9001f860:	9001c4e3 	.word	0x9001c4e3
9001f864:	240000d4 	.word	0x240000d4
9001f868:	24039920 	.word	0x24039920
9001f86c:	9001c4e1 	.word	0x9001c4e1
9001f870:	240000d8 	.word	0x240000d8

9001f874 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
9001f874:	b538      	push	{r3, r4, r5, lr}
9001f876:	4c15      	ldr	r4, [pc, #84]	; (9001f8cc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
9001f878:	4605      	mov	r5, r0
9001f87a:	7823      	ldrb	r3, [r4, #0]
9001f87c:	f3bf 8f5b 	dmb	ish
9001f880:	07da      	lsls	r2, r3, #31
9001f882:	d40b      	bmi.n	9001f89c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
9001f884:	4620      	mov	r0, r4
9001f886:	f008 f94d 	bl	90027b24 <__cxa_guard_acquire>
9001f88a:	b138      	cbz	r0, 9001f89c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
9001f88c:	4620      	mov	r0, r4
9001f88e:	f008 f955 	bl	90027b3c <__cxa_guard_release>
9001f892:	4a0f      	ldr	r2, [pc, #60]	; (9001f8d0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
9001f894:	490f      	ldr	r1, [pc, #60]	; (9001f8d4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
9001f896:	4810      	ldr	r0, [pc, #64]	; (9001f8d8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
9001f898:	f008 f93d 	bl	90027b16 <__aeabi_atexit>
9001f89c:	4c0f      	ldr	r4, [pc, #60]	; (9001f8dc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
9001f89e:	7823      	ldrb	r3, [r4, #0]
9001f8a0:	f3bf 8f5b 	dmb	ish
9001f8a4:	07db      	lsls	r3, r3, #31
9001f8a6:	d40b      	bmi.n	9001f8c0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
9001f8a8:	4620      	mov	r0, r4
9001f8aa:	f008 f93b 	bl	90027b24 <__cxa_guard_acquire>
9001f8ae:	b138      	cbz	r0, 9001f8c0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
9001f8b0:	4620      	mov	r0, r4
9001f8b2:	f008 f943 	bl	90027b3c <__cxa_guard_release>
9001f8b6:	4a06      	ldr	r2, [pc, #24]	; (9001f8d0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
9001f8b8:	4909      	ldr	r1, [pc, #36]	; (9001f8e0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
9001f8ba:	480a      	ldr	r0, [pc, #40]	; (9001f8e4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
9001f8bc:	f008 f92b 	bl	90027b16 <__aeabi_atexit>
9001f8c0:	4b05      	ldr	r3, [pc, #20]	; (9001f8d8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
9001f8c2:	61ab      	str	r3, [r5, #24]
9001f8c4:	4b07      	ldr	r3, [pc, #28]	; (9001f8e4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
9001f8c6:	61eb      	str	r3, [r5, #28]
9001f8c8:	bd38      	pop	{r3, r4, r5, pc}
9001f8ca:	bf00      	nop
9001f8cc:	240398f4 	.word	0x240398f4
9001f8d0:	24000000 	.word	0x24000000
9001f8d4:	9001c4e7 	.word	0x9001c4e7
9001f8d8:	240000ac 	.word	0x240000ac
9001f8dc:	240398f8 	.word	0x240398f8
9001f8e0:	9001c4e5 	.word	0x9001c4e5
9001f8e4:	240000b0 	.word	0x240000b0

9001f8e8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
9001f8e8:	b510      	push	{r4, lr}
9001f8ea:	4604      	mov	r4, r0
9001f8ec:	f7ff ff88 	bl	9001f800 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
9001f8f0:	4620      	mov	r0, r4
9001f8f2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001f8f6:	f7ff bfbd 	b.w	9001f874 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

9001f8fc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
9001f8fc:	b538      	push	{r3, r4, r5, lr}
9001f8fe:	4c15      	ldr	r4, [pc, #84]	; (9001f954 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
9001f900:	4605      	mov	r5, r0
9001f902:	7823      	ldrb	r3, [r4, #0]
9001f904:	f3bf 8f5b 	dmb	ish
9001f908:	07da      	lsls	r2, r3, #31
9001f90a:	d40b      	bmi.n	9001f924 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
9001f90c:	4620      	mov	r0, r4
9001f90e:	f008 f909 	bl	90027b24 <__cxa_guard_acquire>
9001f912:	b138      	cbz	r0, 9001f924 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
9001f914:	4620      	mov	r0, r4
9001f916:	f008 f911 	bl	90027b3c <__cxa_guard_release>
9001f91a:	4a0f      	ldr	r2, [pc, #60]	; (9001f958 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
9001f91c:	490f      	ldr	r1, [pc, #60]	; (9001f95c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
9001f91e:	4810      	ldr	r0, [pc, #64]	; (9001f960 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
9001f920:	f008 f8f9 	bl	90027b16 <__aeabi_atexit>
9001f924:	4c0f      	ldr	r4, [pc, #60]	; (9001f964 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
9001f926:	7823      	ldrb	r3, [r4, #0]
9001f928:	f3bf 8f5b 	dmb	ish
9001f92c:	07db      	lsls	r3, r3, #31
9001f92e:	d40b      	bmi.n	9001f948 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
9001f930:	4620      	mov	r0, r4
9001f932:	f008 f8f7 	bl	90027b24 <__cxa_guard_acquire>
9001f936:	b138      	cbz	r0, 9001f948 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
9001f938:	4620      	mov	r0, r4
9001f93a:	f008 f8ff 	bl	90027b3c <__cxa_guard_release>
9001f93e:	4a06      	ldr	r2, [pc, #24]	; (9001f958 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
9001f940:	4909      	ldr	r1, [pc, #36]	; (9001f968 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
9001f942:	480a      	ldr	r0, [pc, #40]	; (9001f96c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
9001f944:	f008 f8e7 	bl	90027b16 <__aeabi_atexit>
9001f948:	4b05      	ldr	r3, [pc, #20]	; (9001f960 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
9001f94a:	632b      	str	r3, [r5, #48]	; 0x30
9001f94c:	4b07      	ldr	r3, [pc, #28]	; (9001f96c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
9001f94e:	636b      	str	r3, [r5, #52]	; 0x34
9001f950:	bd38      	pop	{r3, r4, r5, pc}
9001f952:	bf00      	nop
9001f954:	2403992c 	.word	0x2403992c
9001f958:	24000000 	.word	0x24000000
9001f95c:	9001c4db 	.word	0x9001c4db
9001f960:	240000e4 	.word	0x240000e4
9001f964:	24039930 	.word	0x24039930
9001f968:	9001c4d9 	.word	0x9001c4d9
9001f96c:	240000e8 	.word	0x240000e8

9001f970 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
9001f970:	b538      	push	{r3, r4, r5, lr}
9001f972:	4c15      	ldr	r4, [pc, #84]	; (9001f9c8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
9001f974:	4605      	mov	r5, r0
9001f976:	7823      	ldrb	r3, [r4, #0]
9001f978:	f3bf 8f5b 	dmb	ish
9001f97c:	07da      	lsls	r2, r3, #31
9001f97e:	d40b      	bmi.n	9001f998 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
9001f980:	4620      	mov	r0, r4
9001f982:	f008 f8cf 	bl	90027b24 <__cxa_guard_acquire>
9001f986:	b138      	cbz	r0, 9001f998 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
9001f988:	4620      	mov	r0, r4
9001f98a:	f008 f8d7 	bl	90027b3c <__cxa_guard_release>
9001f98e:	4a0f      	ldr	r2, [pc, #60]	; (9001f9cc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
9001f990:	490f      	ldr	r1, [pc, #60]	; (9001f9d0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
9001f992:	4810      	ldr	r0, [pc, #64]	; (9001f9d4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
9001f994:	f008 f8bf 	bl	90027b16 <__aeabi_atexit>
9001f998:	4c0f      	ldr	r4, [pc, #60]	; (9001f9d8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
9001f99a:	7823      	ldrb	r3, [r4, #0]
9001f99c:	f3bf 8f5b 	dmb	ish
9001f9a0:	07db      	lsls	r3, r3, #31
9001f9a2:	d40b      	bmi.n	9001f9bc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
9001f9a4:	4620      	mov	r0, r4
9001f9a6:	f008 f8bd 	bl	90027b24 <__cxa_guard_acquire>
9001f9aa:	b138      	cbz	r0, 9001f9bc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
9001f9ac:	4620      	mov	r0, r4
9001f9ae:	f008 f8c5 	bl	90027b3c <__cxa_guard_release>
9001f9b2:	4a06      	ldr	r2, [pc, #24]	; (9001f9cc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
9001f9b4:	4909      	ldr	r1, [pc, #36]	; (9001f9dc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
9001f9b6:	480a      	ldr	r0, [pc, #40]	; (9001f9e0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
9001f9b8:	f008 f8ad 	bl	90027b16 <__aeabi_atexit>
9001f9bc:	4b05      	ldr	r3, [pc, #20]	; (9001f9d4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
9001f9be:	62ab      	str	r3, [r5, #40]	; 0x28
9001f9c0:	4b07      	ldr	r3, [pc, #28]	; (9001f9e0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
9001f9c2:	62eb      	str	r3, [r5, #44]	; 0x2c
9001f9c4:	bd38      	pop	{r3, r4, r5, pc}
9001f9c6:	bf00      	nop
9001f9c8:	240398fc 	.word	0x240398fc
9001f9cc:	24000000 	.word	0x24000000
9001f9d0:	9001c4df 	.word	0x9001c4df
9001f9d4:	240000b4 	.word	0x240000b4
9001f9d8:	24039900 	.word	0x24039900
9001f9dc:	9001c4dd 	.word	0x9001c4dd
9001f9e0:	240000b8 	.word	0x240000b8

9001f9e4 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
9001f9e4:	b510      	push	{r4, lr}
9001f9e6:	4604      	mov	r4, r0
9001f9e8:	f7ff ff88 	bl	9001f8fc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
9001f9ec:	4620      	mov	r0, r4
9001f9ee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001f9f2:	f7ff bfbd 	b.w	9001f970 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

9001f9f8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
9001f9f8:	b538      	push	{r3, r4, r5, lr}
9001f9fa:	4c15      	ldr	r4, [pc, #84]	; (9001fa50 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
9001f9fc:	4605      	mov	r5, r0
9001f9fe:	7823      	ldrb	r3, [r4, #0]
9001fa00:	f3bf 8f5b 	dmb	ish
9001fa04:	07da      	lsls	r2, r3, #31
9001fa06:	d40b      	bmi.n	9001fa20 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
9001fa08:	4620      	mov	r0, r4
9001fa0a:	f008 f88b 	bl	90027b24 <__cxa_guard_acquire>
9001fa0e:	b138      	cbz	r0, 9001fa20 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
9001fa10:	4620      	mov	r0, r4
9001fa12:	f008 f893 	bl	90027b3c <__cxa_guard_release>
9001fa16:	4a0f      	ldr	r2, [pc, #60]	; (9001fa54 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
9001fa18:	490f      	ldr	r1, [pc, #60]	; (9001fa58 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
9001fa1a:	4810      	ldr	r0, [pc, #64]	; (9001fa5c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
9001fa1c:	f008 f87b 	bl	90027b16 <__aeabi_atexit>
9001fa20:	4c0f      	ldr	r4, [pc, #60]	; (9001fa60 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
9001fa22:	7823      	ldrb	r3, [r4, #0]
9001fa24:	f3bf 8f5b 	dmb	ish
9001fa28:	07db      	lsls	r3, r3, #31
9001fa2a:	d40b      	bmi.n	9001fa44 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
9001fa2c:	4620      	mov	r0, r4
9001fa2e:	f008 f879 	bl	90027b24 <__cxa_guard_acquire>
9001fa32:	b138      	cbz	r0, 9001fa44 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
9001fa34:	4620      	mov	r0, r4
9001fa36:	f008 f881 	bl	90027b3c <__cxa_guard_release>
9001fa3a:	4a06      	ldr	r2, [pc, #24]	; (9001fa54 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
9001fa3c:	4909      	ldr	r1, [pc, #36]	; (9001fa64 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
9001fa3e:	480a      	ldr	r0, [pc, #40]	; (9001fa68 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
9001fa40:	f008 f869 	bl	90027b16 <__aeabi_atexit>
9001fa44:	4b05      	ldr	r3, [pc, #20]	; (9001fa5c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
9001fa46:	652b      	str	r3, [r5, #80]	; 0x50
9001fa48:	4b07      	ldr	r3, [pc, #28]	; (9001fa68 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
9001fa4a:	656b      	str	r3, [r5, #84]	; 0x54
9001fa4c:	bd38      	pop	{r3, r4, r5, pc}
9001fa4e:	bf00      	nop
9001fa50:	24039934 	.word	0x24039934
9001fa54:	24000000 	.word	0x24000000
9001fa58:	9001c4cb 	.word	0x9001c4cb
9001fa5c:	240000ec 	.word	0x240000ec
9001fa60:	24039938 	.word	0x24039938
9001fa64:	9001c4c9 	.word	0x9001c4c9
9001fa68:	240000f0 	.word	0x240000f0

9001fa6c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
9001fa6c:	b538      	push	{r3, r4, r5, lr}
9001fa6e:	4c15      	ldr	r4, [pc, #84]	; (9001fac4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
9001fa70:	4605      	mov	r5, r0
9001fa72:	7823      	ldrb	r3, [r4, #0]
9001fa74:	f3bf 8f5b 	dmb	ish
9001fa78:	07da      	lsls	r2, r3, #31
9001fa7a:	d40b      	bmi.n	9001fa94 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
9001fa7c:	4620      	mov	r0, r4
9001fa7e:	f008 f851 	bl	90027b24 <__cxa_guard_acquire>
9001fa82:	b138      	cbz	r0, 9001fa94 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
9001fa84:	4620      	mov	r0, r4
9001fa86:	f008 f859 	bl	90027b3c <__cxa_guard_release>
9001fa8a:	4a0f      	ldr	r2, [pc, #60]	; (9001fac8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
9001fa8c:	490f      	ldr	r1, [pc, #60]	; (9001facc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
9001fa8e:	4810      	ldr	r0, [pc, #64]	; (9001fad0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
9001fa90:	f008 f841 	bl	90027b16 <__aeabi_atexit>
9001fa94:	4c0f      	ldr	r4, [pc, #60]	; (9001fad4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
9001fa96:	7823      	ldrb	r3, [r4, #0]
9001fa98:	f3bf 8f5b 	dmb	ish
9001fa9c:	07db      	lsls	r3, r3, #31
9001fa9e:	d40b      	bmi.n	9001fab8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
9001faa0:	4620      	mov	r0, r4
9001faa2:	f008 f83f 	bl	90027b24 <__cxa_guard_acquire>
9001faa6:	b138      	cbz	r0, 9001fab8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
9001faa8:	4620      	mov	r0, r4
9001faaa:	f008 f847 	bl	90027b3c <__cxa_guard_release>
9001faae:	4a06      	ldr	r2, [pc, #24]	; (9001fac8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
9001fab0:	4909      	ldr	r1, [pc, #36]	; (9001fad8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
9001fab2:	480a      	ldr	r0, [pc, #40]	; (9001fadc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
9001fab4:	f008 f82f 	bl	90027b16 <__aeabi_atexit>
9001fab8:	4b05      	ldr	r3, [pc, #20]	; (9001fad0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
9001faba:	64ab      	str	r3, [r5, #72]	; 0x48
9001fabc:	4b07      	ldr	r3, [pc, #28]	; (9001fadc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
9001fabe:	64eb      	str	r3, [r5, #76]	; 0x4c
9001fac0:	bd38      	pop	{r3, r4, r5, pc}
9001fac2:	bf00      	nop
9001fac4:	2403993c 	.word	0x2403993c
9001fac8:	24000000 	.word	0x24000000
9001facc:	9001c4cf 	.word	0x9001c4cf
9001fad0:	240000f4 	.word	0x240000f4
9001fad4:	24039940 	.word	0x24039940
9001fad8:	9001c4cd 	.word	0x9001c4cd
9001fadc:	240000f8 	.word	0x240000f8

9001fae0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
9001fae0:	b538      	push	{r3, r4, r5, lr}
9001fae2:	4c15      	ldr	r4, [pc, #84]	; (9001fb38 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
9001fae4:	4605      	mov	r5, r0
9001fae6:	7823      	ldrb	r3, [r4, #0]
9001fae8:	f3bf 8f5b 	dmb	ish
9001faec:	07da      	lsls	r2, r3, #31
9001faee:	d40b      	bmi.n	9001fb08 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
9001faf0:	4620      	mov	r0, r4
9001faf2:	f008 f817 	bl	90027b24 <__cxa_guard_acquire>
9001faf6:	b138      	cbz	r0, 9001fb08 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
9001faf8:	4620      	mov	r0, r4
9001fafa:	f008 f81f 	bl	90027b3c <__cxa_guard_release>
9001fafe:	4a0f      	ldr	r2, [pc, #60]	; (9001fb3c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
9001fb00:	490f      	ldr	r1, [pc, #60]	; (9001fb40 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
9001fb02:	4810      	ldr	r0, [pc, #64]	; (9001fb44 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
9001fb04:	f008 f807 	bl	90027b16 <__aeabi_atexit>
9001fb08:	4c0f      	ldr	r4, [pc, #60]	; (9001fb48 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
9001fb0a:	7823      	ldrb	r3, [r4, #0]
9001fb0c:	f3bf 8f5b 	dmb	ish
9001fb10:	07db      	lsls	r3, r3, #31
9001fb12:	d40b      	bmi.n	9001fb2c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
9001fb14:	4620      	mov	r0, r4
9001fb16:	f008 f805 	bl	90027b24 <__cxa_guard_acquire>
9001fb1a:	b138      	cbz	r0, 9001fb2c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
9001fb1c:	4620      	mov	r0, r4
9001fb1e:	f008 f80d 	bl	90027b3c <__cxa_guard_release>
9001fb22:	4a06      	ldr	r2, [pc, #24]	; (9001fb3c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
9001fb24:	4909      	ldr	r1, [pc, #36]	; (9001fb4c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
9001fb26:	480a      	ldr	r0, [pc, #40]	; (9001fb50 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
9001fb28:	f007 fff5 	bl	90027b16 <__aeabi_atexit>
9001fb2c:	4b05      	ldr	r3, [pc, #20]	; (9001fb44 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
9001fb2e:	642b      	str	r3, [r5, #64]	; 0x40
9001fb30:	4b07      	ldr	r3, [pc, #28]	; (9001fb50 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
9001fb32:	646b      	str	r3, [r5, #68]	; 0x44
9001fb34:	bd38      	pop	{r3, r4, r5, pc}
9001fb36:	bf00      	nop
9001fb38:	24039904 	.word	0x24039904
9001fb3c:	24000000 	.word	0x24000000
9001fb40:	9001c4d3 	.word	0x9001c4d3
9001fb44:	240000bc 	.word	0x240000bc
9001fb48:	24039908 	.word	0x24039908
9001fb4c:	9001c4d1 	.word	0x9001c4d1
9001fb50:	240000c0 	.word	0x240000c0

9001fb54 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
9001fb54:	b538      	push	{r3, r4, r5, lr}
9001fb56:	4c15      	ldr	r4, [pc, #84]	; (9001fbac <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
9001fb58:	4605      	mov	r5, r0
9001fb5a:	7823      	ldrb	r3, [r4, #0]
9001fb5c:	f3bf 8f5b 	dmb	ish
9001fb60:	07da      	lsls	r2, r3, #31
9001fb62:	d40b      	bmi.n	9001fb7c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
9001fb64:	4620      	mov	r0, r4
9001fb66:	f007 ffdd 	bl	90027b24 <__cxa_guard_acquire>
9001fb6a:	b138      	cbz	r0, 9001fb7c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
9001fb6c:	4620      	mov	r0, r4
9001fb6e:	f007 ffe5 	bl	90027b3c <__cxa_guard_release>
9001fb72:	4a0f      	ldr	r2, [pc, #60]	; (9001fbb0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
9001fb74:	490f      	ldr	r1, [pc, #60]	; (9001fbb4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
9001fb76:	4810      	ldr	r0, [pc, #64]	; (9001fbb8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
9001fb78:	f007 ffcd 	bl	90027b16 <__aeabi_atexit>
9001fb7c:	4c0f      	ldr	r4, [pc, #60]	; (9001fbbc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
9001fb7e:	7823      	ldrb	r3, [r4, #0]
9001fb80:	f3bf 8f5b 	dmb	ish
9001fb84:	07db      	lsls	r3, r3, #31
9001fb86:	d40b      	bmi.n	9001fba0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
9001fb88:	4620      	mov	r0, r4
9001fb8a:	f007 ffcb 	bl	90027b24 <__cxa_guard_acquire>
9001fb8e:	b138      	cbz	r0, 9001fba0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
9001fb90:	4620      	mov	r0, r4
9001fb92:	f007 ffd3 	bl	90027b3c <__cxa_guard_release>
9001fb96:	4a06      	ldr	r2, [pc, #24]	; (9001fbb0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
9001fb98:	4909      	ldr	r1, [pc, #36]	; (9001fbc0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
9001fb9a:	480a      	ldr	r0, [pc, #40]	; (9001fbc4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
9001fb9c:	f007 ffbb 	bl	90027b16 <__aeabi_atexit>
9001fba0:	4b05      	ldr	r3, [pc, #20]	; (9001fbb8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
9001fba2:	63ab      	str	r3, [r5, #56]	; 0x38
9001fba4:	4b07      	ldr	r3, [pc, #28]	; (9001fbc4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
9001fba6:	63eb      	str	r3, [r5, #60]	; 0x3c
9001fba8:	bd38      	pop	{r3, r4, r5, pc}
9001fbaa:	bf00      	nop
9001fbac:	24039924 	.word	0x24039924
9001fbb0:	24000000 	.word	0x24000000
9001fbb4:	9001c4d7 	.word	0x9001c4d7
9001fbb8:	240000dc 	.word	0x240000dc
9001fbbc:	24039928 	.word	0x24039928
9001fbc0:	9001c4d5 	.word	0x9001c4d5
9001fbc4:	240000e0 	.word	0x240000e0

9001fbc8 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
9001fbc8:	b510      	push	{r4, lr}
9001fbca:	4604      	mov	r4, r0
9001fbcc:	f7ff ff14 	bl	9001f9f8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
9001fbd0:	4620      	mov	r0, r4
9001fbd2:	f7ff ff85 	bl	9001fae0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
9001fbd6:	4620      	mov	r0, r4
9001fbd8:	f7ff ff48 	bl	9001fa6c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
9001fbdc:	4620      	mov	r0, r4
9001fbde:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001fbe2:	f7ff bfb7 	b.w	9001fb54 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

9001fbe8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
9001fbe8:	b538      	push	{r3, r4, r5, lr}
9001fbea:	4c15      	ldr	r4, [pc, #84]	; (9001fc40 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
9001fbec:	4605      	mov	r5, r0
9001fbee:	7823      	ldrb	r3, [r4, #0]
9001fbf0:	f3bf 8f5b 	dmb	ish
9001fbf4:	07da      	lsls	r2, r3, #31
9001fbf6:	d40b      	bmi.n	9001fc10 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
9001fbf8:	4620      	mov	r0, r4
9001fbfa:	f007 ff93 	bl	90027b24 <__cxa_guard_acquire>
9001fbfe:	b138      	cbz	r0, 9001fc10 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
9001fc00:	4620      	mov	r0, r4
9001fc02:	f007 ff9b 	bl	90027b3c <__cxa_guard_release>
9001fc06:	4a0f      	ldr	r2, [pc, #60]	; (9001fc44 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
9001fc08:	490f      	ldr	r1, [pc, #60]	; (9001fc48 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
9001fc0a:	4810      	ldr	r0, [pc, #64]	; (9001fc4c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
9001fc0c:	f007 ff83 	bl	90027b16 <__aeabi_atexit>
9001fc10:	4c0f      	ldr	r4, [pc, #60]	; (9001fc50 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
9001fc12:	7823      	ldrb	r3, [r4, #0]
9001fc14:	f3bf 8f5b 	dmb	ish
9001fc18:	07db      	lsls	r3, r3, #31
9001fc1a:	d40b      	bmi.n	9001fc34 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
9001fc1c:	4620      	mov	r0, r4
9001fc1e:	f007 ff81 	bl	90027b24 <__cxa_guard_acquire>
9001fc22:	b138      	cbz	r0, 9001fc34 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
9001fc24:	4620      	mov	r0, r4
9001fc26:	f007 ff89 	bl	90027b3c <__cxa_guard_release>
9001fc2a:	4a06      	ldr	r2, [pc, #24]	; (9001fc44 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
9001fc2c:	4909      	ldr	r1, [pc, #36]	; (9001fc54 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
9001fc2e:	480a      	ldr	r0, [pc, #40]	; (9001fc58 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
9001fc30:	f007 ff71 	bl	90027b16 <__aeabi_atexit>
9001fc34:	4b05      	ldr	r3, [pc, #20]	; (9001fc4c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
9001fc36:	662b      	str	r3, [r5, #96]	; 0x60
9001fc38:	4b07      	ldr	r3, [pc, #28]	; (9001fc58 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
9001fc3a:	666b      	str	r3, [r5, #100]	; 0x64
9001fc3c:	bd38      	pop	{r3, r4, r5, pc}
9001fc3e:	bf00      	nop
9001fc40:	2403990c 	.word	0x2403990c
9001fc44:	24000000 	.word	0x24000000
9001fc48:	9001c4c3 	.word	0x9001c4c3
9001fc4c:	240000c4 	.word	0x240000c4
9001fc50:	24039910 	.word	0x24039910
9001fc54:	9001c4c1 	.word	0x9001c4c1
9001fc58:	240000c8 	.word	0x240000c8

9001fc5c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
9001fc5c:	b538      	push	{r3, r4, r5, lr}
9001fc5e:	4c15      	ldr	r4, [pc, #84]	; (9001fcb4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
9001fc60:	4605      	mov	r5, r0
9001fc62:	7823      	ldrb	r3, [r4, #0]
9001fc64:	f3bf 8f5b 	dmb	ish
9001fc68:	07da      	lsls	r2, r3, #31
9001fc6a:	d40b      	bmi.n	9001fc84 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
9001fc6c:	4620      	mov	r0, r4
9001fc6e:	f007 ff59 	bl	90027b24 <__cxa_guard_acquire>
9001fc72:	b138      	cbz	r0, 9001fc84 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
9001fc74:	4620      	mov	r0, r4
9001fc76:	f007 ff61 	bl	90027b3c <__cxa_guard_release>
9001fc7a:	4a0f      	ldr	r2, [pc, #60]	; (9001fcb8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
9001fc7c:	490f      	ldr	r1, [pc, #60]	; (9001fcbc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
9001fc7e:	4810      	ldr	r0, [pc, #64]	; (9001fcc0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
9001fc80:	f007 ff49 	bl	90027b16 <__aeabi_atexit>
9001fc84:	4c0f      	ldr	r4, [pc, #60]	; (9001fcc4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
9001fc86:	7823      	ldrb	r3, [r4, #0]
9001fc88:	f3bf 8f5b 	dmb	ish
9001fc8c:	07db      	lsls	r3, r3, #31
9001fc8e:	d40b      	bmi.n	9001fca8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
9001fc90:	4620      	mov	r0, r4
9001fc92:	f007 ff47 	bl	90027b24 <__cxa_guard_acquire>
9001fc96:	b138      	cbz	r0, 9001fca8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
9001fc98:	4620      	mov	r0, r4
9001fc9a:	f007 ff4f 	bl	90027b3c <__cxa_guard_release>
9001fc9e:	4a06      	ldr	r2, [pc, #24]	; (9001fcb8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
9001fca0:	4909      	ldr	r1, [pc, #36]	; (9001fcc8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
9001fca2:	480a      	ldr	r0, [pc, #40]	; (9001fccc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
9001fca4:	f007 ff37 	bl	90027b16 <__aeabi_atexit>
9001fca8:	4b05      	ldr	r3, [pc, #20]	; (9001fcc0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
9001fcaa:	65ab      	str	r3, [r5, #88]	; 0x58
9001fcac:	4b07      	ldr	r3, [pc, #28]	; (9001fccc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
9001fcae:	65eb      	str	r3, [r5, #92]	; 0x5c
9001fcb0:	bd38      	pop	{r3, r4, r5, pc}
9001fcb2:	bf00      	nop
9001fcb4:	240398e4 	.word	0x240398e4
9001fcb8:	24000000 	.word	0x24000000
9001fcbc:	9001c4c7 	.word	0x9001c4c7
9001fcc0:	2400009c 	.word	0x2400009c
9001fcc4:	240398e8 	.word	0x240398e8
9001fcc8:	9001c4c5 	.word	0x9001c4c5
9001fccc:	240000a0 	.word	0x240000a0

9001fcd0 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
9001fcd0:	b510      	push	{r4, lr}
9001fcd2:	4604      	mov	r4, r0
9001fcd4:	f7ff ff88 	bl	9001fbe8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
9001fcd8:	4620      	mov	r0, r4
9001fcda:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001fcde:	f7ff bfbd 	b.w	9001fc5c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

9001fce4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
9001fce4:	b538      	push	{r3, r4, r5, lr}
9001fce6:	4c15      	ldr	r4, [pc, #84]	; (9001fd3c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
9001fce8:	4605      	mov	r5, r0
9001fcea:	7823      	ldrb	r3, [r4, #0]
9001fcec:	f3bf 8f5b 	dmb	ish
9001fcf0:	07da      	lsls	r2, r3, #31
9001fcf2:	d40b      	bmi.n	9001fd0c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
9001fcf4:	4620      	mov	r0, r4
9001fcf6:	f007 ff15 	bl	90027b24 <__cxa_guard_acquire>
9001fcfa:	b138      	cbz	r0, 9001fd0c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
9001fcfc:	4620      	mov	r0, r4
9001fcfe:	f007 ff1d 	bl	90027b3c <__cxa_guard_release>
9001fd02:	4a0f      	ldr	r2, [pc, #60]	; (9001fd40 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
9001fd04:	490f      	ldr	r1, [pc, #60]	; (9001fd44 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
9001fd06:	4810      	ldr	r0, [pc, #64]	; (9001fd48 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
9001fd08:	f007 ff05 	bl	90027b16 <__aeabi_atexit>
9001fd0c:	4c0f      	ldr	r4, [pc, #60]	; (9001fd4c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
9001fd0e:	7823      	ldrb	r3, [r4, #0]
9001fd10:	f3bf 8f5b 	dmb	ish
9001fd14:	07db      	lsls	r3, r3, #31
9001fd16:	d40b      	bmi.n	9001fd30 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
9001fd18:	4620      	mov	r0, r4
9001fd1a:	f007 ff03 	bl	90027b24 <__cxa_guard_acquire>
9001fd1e:	b138      	cbz	r0, 9001fd30 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
9001fd20:	4620      	mov	r0, r4
9001fd22:	f007 ff0b 	bl	90027b3c <__cxa_guard_release>
9001fd26:	4a06      	ldr	r2, [pc, #24]	; (9001fd40 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
9001fd28:	4909      	ldr	r1, [pc, #36]	; (9001fd50 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
9001fd2a:	480a      	ldr	r0, [pc, #40]	; (9001fd54 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
9001fd2c:	f007 fef3 	bl	90027b16 <__aeabi_atexit>
9001fd30:	4b05      	ldr	r3, [pc, #20]	; (9001fd48 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
9001fd32:	672b      	str	r3, [r5, #112]	; 0x70
9001fd34:	4b07      	ldr	r3, [pc, #28]	; (9001fd54 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
9001fd36:	676b      	str	r3, [r5, #116]	; 0x74
9001fd38:	bd38      	pop	{r3, r4, r5, pc}
9001fd3a:	bf00      	nop
9001fd3c:	240398dc 	.word	0x240398dc
9001fd40:	24000000 	.word	0x24000000
9001fd44:	9001c4bb 	.word	0x9001c4bb
9001fd48:	24000094 	.word	0x24000094
9001fd4c:	240398e0 	.word	0x240398e0
9001fd50:	9001c4b9 	.word	0x9001c4b9
9001fd54:	24000098 	.word	0x24000098

9001fd58 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
9001fd58:	b538      	push	{r3, r4, r5, lr}
9001fd5a:	4c15      	ldr	r4, [pc, #84]	; (9001fdb0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
9001fd5c:	4605      	mov	r5, r0
9001fd5e:	7823      	ldrb	r3, [r4, #0]
9001fd60:	f3bf 8f5b 	dmb	ish
9001fd64:	07da      	lsls	r2, r3, #31
9001fd66:	d40b      	bmi.n	9001fd80 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
9001fd68:	4620      	mov	r0, r4
9001fd6a:	f007 fedb 	bl	90027b24 <__cxa_guard_acquire>
9001fd6e:	b138      	cbz	r0, 9001fd80 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
9001fd70:	4620      	mov	r0, r4
9001fd72:	f007 fee3 	bl	90027b3c <__cxa_guard_release>
9001fd76:	4a0f      	ldr	r2, [pc, #60]	; (9001fdb4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
9001fd78:	490f      	ldr	r1, [pc, #60]	; (9001fdb8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
9001fd7a:	4810      	ldr	r0, [pc, #64]	; (9001fdbc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
9001fd7c:	f007 fecb 	bl	90027b16 <__aeabi_atexit>
9001fd80:	4c0f      	ldr	r4, [pc, #60]	; (9001fdc0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
9001fd82:	7823      	ldrb	r3, [r4, #0]
9001fd84:	f3bf 8f5b 	dmb	ish
9001fd88:	07db      	lsls	r3, r3, #31
9001fd8a:	d40b      	bmi.n	9001fda4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
9001fd8c:	4620      	mov	r0, r4
9001fd8e:	f007 fec9 	bl	90027b24 <__cxa_guard_acquire>
9001fd92:	b138      	cbz	r0, 9001fda4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
9001fd94:	4620      	mov	r0, r4
9001fd96:	f007 fed1 	bl	90027b3c <__cxa_guard_release>
9001fd9a:	4a06      	ldr	r2, [pc, #24]	; (9001fdb4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
9001fd9c:	4909      	ldr	r1, [pc, #36]	; (9001fdc4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
9001fd9e:	480a      	ldr	r0, [pc, #40]	; (9001fdc8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
9001fda0:	f007 feb9 	bl	90027b16 <__aeabi_atexit>
9001fda4:	4b05      	ldr	r3, [pc, #20]	; (9001fdbc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
9001fda6:	66ab      	str	r3, [r5, #104]	; 0x68
9001fda8:	4b07      	ldr	r3, [pc, #28]	; (9001fdc8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
9001fdaa:	66eb      	str	r3, [r5, #108]	; 0x6c
9001fdac:	bd38      	pop	{r3, r4, r5, pc}
9001fdae:	bf00      	nop
9001fdb0:	240398d4 	.word	0x240398d4
9001fdb4:	24000000 	.word	0x24000000
9001fdb8:	9001c4bf 	.word	0x9001c4bf
9001fdbc:	2400008c 	.word	0x2400008c
9001fdc0:	240398d8 	.word	0x240398d8
9001fdc4:	9001c4bd 	.word	0x9001c4bd
9001fdc8:	24000090 	.word	0x24000090

9001fdcc <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
9001fdcc:	b510      	push	{r4, lr}
9001fdce:	4604      	mov	r4, r0
9001fdd0:	f7ff ff88 	bl	9001fce4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
9001fdd4:	4620      	mov	r0, r4
9001fdd6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001fdda:	f7ff bfbd 	b.w	9001fd58 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

9001fdde <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
9001fdde:	b510      	push	{r4, lr}
9001fde0:	4604      	mov	r4, r0
9001fde2:	f7ff fff3 	bl	9001fdcc <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
9001fde6:	4620      	mov	r0, r4
9001fde8:	f7ff ff72 	bl	9001fcd0 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
9001fdec:	4620      	mov	r0, r4
9001fdee:	f7ff fdf9 	bl	9001f9e4 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
9001fdf2:	4620      	mov	r0, r4
9001fdf4:	f7ff fcfa 	bl	9001f7ec <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
9001fdf8:	4620      	mov	r0, r4
9001fdfa:	f7ff fd75 	bl	9001f8e8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
9001fdfe:	4620      	mov	r0, r4
9001fe00:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001fe04:	f7ff bee0 	b.w	9001fbc8 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

9001fe08 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
9001fe08:	b538      	push	{r3, r4, r5, lr}
9001fe0a:	4c0b      	ldr	r4, [pc, #44]	; (9001fe38 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
9001fe0c:	4605      	mov	r5, r0
9001fe0e:	7823      	ldrb	r3, [r4, #0]
9001fe10:	f3bf 8f5b 	dmb	ish
9001fe14:	07db      	lsls	r3, r3, #31
9001fe16:	d40b      	bmi.n	9001fe30 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
9001fe18:	4620      	mov	r0, r4
9001fe1a:	f007 fe83 	bl	90027b24 <__cxa_guard_acquire>
9001fe1e:	b138      	cbz	r0, 9001fe30 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
9001fe20:	4620      	mov	r0, r4
9001fe22:	f007 fe8b 	bl	90027b3c <__cxa_guard_release>
9001fe26:	4a05      	ldr	r2, [pc, #20]	; (9001fe3c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
9001fe28:	4905      	ldr	r1, [pc, #20]	; (9001fe40 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
9001fe2a:	4806      	ldr	r0, [pc, #24]	; (9001fe44 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
9001fe2c:	f007 fe73 	bl	90027b16 <__aeabi_atexit>
9001fe30:	4b04      	ldr	r3, [pc, #16]	; (9001fe44 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
9001fe32:	67ab      	str	r3, [r5, #120]	; 0x78
9001fe34:	bd38      	pop	{r3, r4, r5, pc}
9001fe36:	bf00      	nop
9001fe38:	240398c8 	.word	0x240398c8
9001fe3c:	24000000 	.word	0x24000000
9001fe40:	9001c4b7 	.word	0x9001c4b7
9001fe44:	24000084 	.word	0x24000084

9001fe48 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
9001fe48:	b538      	push	{r3, r4, r5, lr}
9001fe4a:	4c0b      	ldr	r4, [pc, #44]	; (9001fe78 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
9001fe4c:	4605      	mov	r5, r0
9001fe4e:	7823      	ldrb	r3, [r4, #0]
9001fe50:	f3bf 8f5b 	dmb	ish
9001fe54:	07db      	lsls	r3, r3, #31
9001fe56:	d40b      	bmi.n	9001fe70 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
9001fe58:	4620      	mov	r0, r4
9001fe5a:	f007 fe63 	bl	90027b24 <__cxa_guard_acquire>
9001fe5e:	b138      	cbz	r0, 9001fe70 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
9001fe60:	4620      	mov	r0, r4
9001fe62:	f007 fe6b 	bl	90027b3c <__cxa_guard_release>
9001fe66:	4a05      	ldr	r2, [pc, #20]	; (9001fe7c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
9001fe68:	4905      	ldr	r1, [pc, #20]	; (9001fe80 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
9001fe6a:	4806      	ldr	r0, [pc, #24]	; (9001fe84 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
9001fe6c:	f007 fe53 	bl	90027b16 <__aeabi_atexit>
9001fe70:	4b04      	ldr	r3, [pc, #16]	; (9001fe84 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
9001fe72:	67eb      	str	r3, [r5, #124]	; 0x7c
9001fe74:	bd38      	pop	{r3, r4, r5, pc}
9001fe76:	bf00      	nop
9001fe78:	240398cc 	.word	0x240398cc
9001fe7c:	24000000 	.word	0x24000000
9001fe80:	9001c4b5 	.word	0x9001c4b5
9001fe84:	24000088 	.word	0x24000088

9001fe88 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
9001fe88:	b570      	push	{r4, r5, r6, lr}
9001fe8a:	4d0d      	ldr	r5, [pc, #52]	; (9001fec0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
9001fe8c:	4606      	mov	r6, r0
9001fe8e:	4c0d      	ldr	r4, [pc, #52]	; (9001fec4 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
9001fe90:	782b      	ldrb	r3, [r5, #0]
9001fe92:	f3bf 8f5b 	dmb	ish
9001fe96:	f013 0f01 	tst.w	r3, #1
9001fe9a:	d10d      	bne.n	9001feb8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
9001fe9c:	4628      	mov	r0, r5
9001fe9e:	f007 fe41 	bl	90027b24 <__cxa_guard_acquire>
9001fea2:	b148      	cbz	r0, 9001feb8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
9001fea4:	4b08      	ldr	r3, [pc, #32]	; (9001fec8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
9001fea6:	4628      	mov	r0, r5
9001fea8:	6023      	str	r3, [r4, #0]
9001feaa:	f007 fe47 	bl	90027b3c <__cxa_guard_release>
9001feae:	4a07      	ldr	r2, [pc, #28]	; (9001fecc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
9001feb0:	4620      	mov	r0, r4
9001feb2:	4907      	ldr	r1, [pc, #28]	; (9001fed0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
9001feb4:	f007 fe2f 	bl	90027b16 <__aeabi_atexit>
9001feb8:	f8c6 4080 	str.w	r4, [r6, #128]	; 0x80
9001febc:	bd70      	pop	{r4, r5, r6, pc}
9001febe:	bf00      	nop
9001fec0:	240398d0 	.word	0x240398d0
9001fec4:	24039944 	.word	0x24039944
9001fec8:	9002c0c8 	.word	0x9002c0c8
9001fecc:	24000000 	.word	0x24000000
9001fed0:	9001c4b3 	.word	0x9001c4b3

9001fed4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
9001fed4:	b510      	push	{r4, lr}
9001fed6:	4604      	mov	r4, r0
9001fed8:	f7ff ff96 	bl	9001fe08 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
9001fedc:	4620      	mov	r0, r4
9001fede:	f7ff ffb3 	bl	9001fe48 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
9001fee2:	4620      	mov	r0, r4
9001fee4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001fee8:	f7ff bfce 	b.w	9001fe88 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

9001feec <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
9001feec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001fef0:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
9001fef4:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
9001fef8:	2d00      	cmp	r5, #0
9001fefa:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
9001fefe:	fb05 4c0e 	mla	ip, r5, lr, r4
9001ff02:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
9001ff06:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
9001ff0a:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
9001ff0e:	eb02 0a0c 	add.w	sl, r2, ip
9001ff12:	8808      	ldrh	r0, [r1, #0]
9001ff14:	f2c0 80b0 	blt.w	90020078 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
9001ff18:	45ab      	cmp	fp, r5
9001ff1a:	f340 80ad 	ble.w	90020078 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
9001ff1e:	2c00      	cmp	r4, #0
9001ff20:	f2c0 80a8 	blt.w	90020074 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
9001ff24:	45a6      	cmp	lr, r4
9001ff26:	f340 80a5 	ble.w	90020074 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
9001ff2a:	f812 200c 	ldrb.w	r2, [r2, ip]
9001ff2e:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
9001ff32:	1c62      	adds	r2, r4, #1
9001ff34:	f100 80a3 	bmi.w	9002007e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
9001ff38:	4596      	cmp	lr, r2
9001ff3a:	f340 80a0 	ble.w	9002007e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
9001ff3e:	f1b9 0f00 	cmp.w	r9, #0
9001ff42:	f000 809c 	beq.w	9002007e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
9001ff46:	f89a 2001 	ldrb.w	r2, [sl, #1]
9001ff4a:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
9001ff4e:	3501      	adds	r5, #1
9001ff50:	f100 8099 	bmi.w	90020086 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
9001ff54:	45ab      	cmp	fp, r5
9001ff56:	f340 8096 	ble.w	90020086 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
9001ff5a:	2f00      	cmp	r7, #0
9001ff5c:	f000 8093 	beq.w	90020086 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
9001ff60:	2c00      	cmp	r4, #0
9001ff62:	f2c0 808e 	blt.w	90020082 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
9001ff66:	45a6      	cmp	lr, r4
9001ff68:	f340 808b 	ble.w	90020082 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
9001ff6c:	f81a 200e 	ldrb.w	r2, [sl, lr]
9001ff70:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
9001ff74:	3401      	adds	r4, #1
9001ff76:	f100 8089 	bmi.w	9002008c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
9001ff7a:	45a6      	cmp	lr, r4
9001ff7c:	f340 8086 	ble.w	9002008c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
9001ff80:	f1b9 0f00 	cmp.w	r9, #0
9001ff84:	f000 8082 	beq.w	9002008c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
9001ff88:	44d6      	add	lr, sl
9001ff8a:	f89e 2001 	ldrb.w	r2, [lr, #1]
9001ff8e:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
9001ff92:	ea4f 4408 	mov.w	r4, r8, lsl #16
9001ff96:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
9001ff9a:	fb19 fe07 	smulbb	lr, r9, r7
9001ff9e:	f1c7 0210 	rsb	r2, r7, #16
9001ffa2:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
9001ffa6:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
9001ffaa:	eba2 0209 	sub.w	r2, r2, r9
9001ffae:	ea44 0808 	orr.w	r8, r4, r8
9001ffb2:	ea4f 440c 	mov.w	r4, ip, lsl #16
9001ffb6:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
9001ffba:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
9001ffbe:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
9001ffc2:	ebce 0747 	rsb	r7, lr, r7, lsl #1
9001ffc6:	ea44 0c0c 	orr.w	ip, r4, ip
9001ffca:	ebce 0449 	rsb	r4, lr, r9, lsl #1
9001ffce:	fb04 f40c 	mul.w	r4, r4, ip
9001ffd2:	fb02 4808 	mla	r8, r2, r8, r4
9001ffd6:	041a      	lsls	r2, r3, #16
9001ffd8:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
9001ffdc:	b2b4      	uxth	r4, r6
9001ffde:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
9001ffe2:	43f6      	mvns	r6, r6
9001ffe4:	4313      	orrs	r3, r2
9001ffe6:	042a      	lsls	r2, r5, #16
9001ffe8:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
9001ffec:	b2f6      	uxtb	r6, r6
9001ffee:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
9001fff2:	fb0e 8303 	mla	r3, lr, r3, r8
9001fff6:	432a      	orrs	r2, r5
9001fff8:	fb07 3202 	mla	r2, r7, r2, r3
9001fffc:	10c7      	asrs	r7, r0, #3
9001fffe:	0d53      	lsrs	r3, r2, #21
90020000:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
90020004:	0952      	lsrs	r2, r2, #5
90020006:	fb17 f706 	smulbb	r7, r7, r6
9002000a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9002000e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90020012:	431a      	orrs	r2, r3
90020014:	b293      	uxth	r3, r2
90020016:	1202      	asrs	r2, r0, #8
90020018:	121d      	asrs	r5, r3, #8
9002001a:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
9002001e:	00c0      	lsls	r0, r0, #3
90020020:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
90020024:	fb12 f206 	smulbb	r2, r2, r6
90020028:	b2c0      	uxtb	r0, r0
9002002a:	fb05 2504 	mla	r5, r5, r4, r2
9002002e:	10da      	asrs	r2, r3, #3
90020030:	fb10 f006 	smulbb	r0, r0, r6
90020034:	00db      	lsls	r3, r3, #3
90020036:	b2ad      	uxth	r5, r5
90020038:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
9002003c:	b2db      	uxtb	r3, r3
9002003e:	fb02 7204 	mla	r2, r2, r4, r7
90020042:	fb03 0004 	mla	r0, r3, r4, r0
90020046:	1c6b      	adds	r3, r5, #1
90020048:	b292      	uxth	r2, r2
9002004a:	b280      	uxth	r0, r0
9002004c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90020050:	1c43      	adds	r3, r0, #1
90020052:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
90020056:	eb03 2310 	add.w	r3, r3, r0, lsr #8
9002005a:	1c50      	adds	r0, r2, #1
9002005c:	eb00 2212 	add.w	r2, r0, r2, lsr #8
90020060:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90020064:	0952      	lsrs	r2, r2, #5
90020066:	432b      	orrs	r3, r5
90020068:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9002006c:	4313      	orrs	r3, r2
9002006e:	800b      	strh	r3, [r1, #0]
90020070:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90020074:	4680      	mov	r8, r0
90020076:	e75c      	b.n	9001ff32 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
90020078:	4684      	mov	ip, r0
9002007a:	4680      	mov	r8, r0
9002007c:	e767      	b.n	9001ff4e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
9002007e:	4684      	mov	ip, r0
90020080:	e765      	b.n	9001ff4e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
90020082:	4605      	mov	r5, r0
90020084:	e776      	b.n	9001ff74 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
90020086:	4603      	mov	r3, r0
90020088:	4605      	mov	r5, r0
9002008a:	e782      	b.n	9001ff92 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
9002008c:	4603      	mov	r3, r0
9002008e:	e780      	b.n	9001ff92 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

90020090 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90020090:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020094:	b099      	sub	sp, #100	; 0x64
90020096:	9215      	str	r2, [sp, #84]	; 0x54
90020098:	9309      	str	r3, [sp, #36]	; 0x24
9002009a:	9a27      	ldr	r2, [sp, #156]	; 0x9c
9002009c:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
900200a0:	9016      	str	r0, [sp, #88]	; 0x58
900200a2:	930d      	str	r3, [sp, #52]	; 0x34
900200a4:	6850      	ldr	r0, [r2, #4]
900200a6:	910c      	str	r1, [sp, #48]	; 0x30
900200a8:	6812      	ldr	r2, [r2, #0]
900200aa:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
900200ae:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
900200b2:	fb00 1303 	mla	r3, r0, r3, r1
900200b6:	eb02 0843 	add.w	r8, r2, r3, lsl #1
900200ba:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
900200bc:	681b      	ldr	r3, [r3, #0]
900200be:	930b      	str	r3, [sp, #44]	; 0x2c
900200c0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
900200c2:	685e      	ldr	r6, [r3, #4]
900200c4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
900200c6:	3604      	adds	r6, #4
900200c8:	43db      	mvns	r3, r3
900200ca:	b2db      	uxtb	r3, r3
900200cc:	930a      	str	r3, [sp, #40]	; 0x28
900200ce:	9b0c      	ldr	r3, [sp, #48]	; 0x30
900200d0:	2b00      	cmp	r3, #0
900200d2:	dc03      	bgt.n	900200dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
900200d4:	9b15      	ldr	r3, [sp, #84]	; 0x54
900200d6:	2b00      	cmp	r3, #0
900200d8:	f340 8225 	ble.w	90020526 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
900200dc:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
900200de:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900200e2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900200e6:	1e48      	subs	r0, r1, #1
900200e8:	1e57      	subs	r7, r2, #1
900200ea:	9b09      	ldr	r3, [sp, #36]	; 0x24
900200ec:	2b00      	cmp	r3, #0
900200ee:	f340 80e3 	ble.w	900202b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
900200f2:	ea5f 4c2a 	movs.w	ip, sl, asr #16
900200f6:	ea4f 4325 	mov.w	r3, r5, asr #16
900200fa:	d406      	bmi.n	9002010a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
900200fc:	4584      	cmp	ip, r0
900200fe:	da04      	bge.n	9002010a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90020100:	2b00      	cmp	r3, #0
90020102:	db02      	blt.n	9002010a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90020104:	42bb      	cmp	r3, r7
90020106:	f2c0 80d8 	blt.w	900202ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
9002010a:	f11c 0c01 	adds.w	ip, ip, #1
9002010e:	f100 80c9 	bmi.w	900202a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
90020112:	4561      	cmp	r1, ip
90020114:	f2c0 80c6 	blt.w	900202a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
90020118:	3301      	adds	r3, #1
9002011a:	f100 80c3 	bmi.w	900202a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9002011e:	429a      	cmp	r2, r3
90020120:	f2c0 80c0 	blt.w	900202a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
90020124:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
90020128:	4647      	mov	r7, r8
9002012a:	f1bb 0f00 	cmp.w	fp, #0
9002012e:	f340 80e3 	ble.w	900202f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
90020132:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
90020134:	ea4f 4c25 	mov.w	ip, r5, asr #16
90020138:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9002013a:	f3ca 3003 	ubfx	r0, sl, #12, #4
9002013e:	f8d2 e00c 	ldr.w	lr, [r2, #12]
90020142:	ea5f 422a 	movs.w	r2, sl, asr #16
90020146:	f3c5 3103 	ubfx	r1, r5, #12, #4
9002014a:	689b      	ldr	r3, [r3, #8]
9002014c:	f100 8121 	bmi.w	90020392 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
90020150:	f103 39ff 	add.w	r9, r3, #4294967295
90020154:	454a      	cmp	r2, r9
90020156:	f280 811c 	bge.w	90020392 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
9002015a:	f1bc 0f00 	cmp.w	ip, #0
9002015e:	f2c0 8118 	blt.w	90020392 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
90020162:	f10e 39ff 	add.w	r9, lr, #4294967295
90020166:	45cc      	cmp	ip, r9
90020168:	f280 8113 	bge.w	90020392 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
9002016c:	b21b      	sxth	r3, r3
9002016e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90020170:	fb0c 2203 	mla	r2, ip, r3, r2
90020174:	eb04 0902 	add.w	r9, r4, r2
90020178:	5ca2      	ldrb	r2, [r4, r2]
9002017a:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
9002017e:	2800      	cmp	r0, #0
90020180:	f000 80fe 	beq.w	90020380 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
90020184:	f899 2001 	ldrb.w	r2, [r9, #1]
90020188:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
9002018c:	9211      	str	r2, [sp, #68]	; 0x44
9002018e:	b151      	cbz	r1, 900201a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
90020190:	eb09 0203 	add.w	r2, r9, r3
90020194:	f819 3003 	ldrb.w	r3, [r9, r3]
90020198:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9002019c:	930f      	str	r3, [sp, #60]	; 0x3c
9002019e:	7853      	ldrb	r3, [r2, #1]
900201a0:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
900201a4:	9312      	str	r3, [sp, #72]	; 0x48
900201a6:	9b11      	ldr	r3, [sp, #68]	; 0x44
900201a8:	fb10 f201 	smulbb	r2, r0, r1
900201ac:	9c12      	ldr	r4, [sp, #72]	; 0x48
900201ae:	ea4f 4c03 	mov.w	ip, r3, lsl #16
900201b2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
900201b6:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
900201ba:	10d2      	asrs	r2, r2, #3
900201bc:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
900201c0:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
900201c4:	ea4c 0c03 	orr.w	ip, ip, r3
900201c8:	9b12      	ldr	r3, [sp, #72]	; 0x48
900201ca:	041b      	lsls	r3, r3, #16
900201cc:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
900201d0:	4323      	orrs	r3, r4
900201d2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
900201d4:	4353      	muls	r3, r2
900201d6:	fb09 330c 	mla	r3, r9, ip, r3
900201da:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
900201de:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
900201e2:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
900201e6:	ea4c 0e0e 	orr.w	lr, ip, lr
900201ea:	f1c1 0c10 	rsb	ip, r1, #16
900201ee:	ebac 0c00 	sub.w	ip, ip, r0
900201f2:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
900201f6:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
900201fa:	fb0c 3c0e 	mla	ip, ip, lr, r3
900201fe:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90020200:	0418      	lsls	r0, r3, #16
90020202:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
90020206:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
9002020a:	4318      	orrs	r0, r3
9002020c:	fb02 c200 	mla	r2, r2, r0, ip
90020210:	8838      	ldrh	r0, [r7, #0]
90020212:	0d53      	lsrs	r3, r2, #21
90020214:	0952      	lsrs	r2, r2, #5
90020216:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9002021a:	1201      	asrs	r1, r0, #8
9002021c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90020220:	ea4f 0ee0 	mov.w	lr, r0, asr #3
90020224:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
90020228:	00c0      	lsls	r0, r0, #3
9002022a:	431a      	orrs	r2, r3
9002022c:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
90020230:	fb11 f104 	smulbb	r1, r1, r4
90020234:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
90020238:	b292      	uxth	r2, r2
9002023a:	fb1e fe04 	smulbb	lr, lr, r4
9002023e:	b2c0      	uxtb	r0, r0
90020240:	ea4f 2c22 	mov.w	ip, r2, asr #8
90020244:	fb10 f004 	smulbb	r0, r0, r4
90020248:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9002024c:	fb0c 1c03 	mla	ip, ip, r3, r1
90020250:	10d1      	asrs	r1, r2, #3
90020252:	00d2      	lsls	r2, r2, #3
90020254:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
90020258:	fa1f fc8c 	uxth.w	ip, ip
9002025c:	b2d2      	uxtb	r2, r2
9002025e:	fb01 e103 	mla	r1, r1, r3, lr
90020262:	fb02 0303 	mla	r3, r2, r3, r0
90020266:	b289      	uxth	r1, r1
90020268:	b29a      	uxth	r2, r3
9002026a:	f10c 0301 	add.w	r3, ip, #1
9002026e:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
90020272:	1c53      	adds	r3, r2, #1
90020274:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90020278:	1c4a      	adds	r2, r1, #1
9002027a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9002027e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90020282:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90020286:	0949      	lsrs	r1, r1, #5
90020288:	ea43 030c 	orr.w	r3, r3, ip
9002028c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90020290:	430b      	orrs	r3, r1
90020292:	803b      	strh	r3, [r7, #0]
90020294:	9b25      	ldr	r3, [sp, #148]	; 0x94
90020296:	3702      	adds	r7, #2
90020298:	f10b 3bff 	add.w	fp, fp, #4294967295
9002029c:	449a      	add	sl, r3
9002029e:	9b26      	ldr	r3, [sp, #152]	; 0x98
900202a0:	441d      	add	r5, r3
900202a2:	e742      	b.n	9002012a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
900202a4:	9b25      	ldr	r3, [sp, #148]	; 0x94
900202a6:	f108 0802 	add.w	r8, r8, #2
900202aa:	449a      	add	sl, r3
900202ac:	9b26      	ldr	r3, [sp, #152]	; 0x98
900202ae:	441d      	add	r5, r3
900202b0:	9b09      	ldr	r3, [sp, #36]	; 0x24
900202b2:	3b01      	subs	r3, #1
900202b4:	9309      	str	r3, [sp, #36]	; 0x24
900202b6:	e718      	b.n	900200ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
900202b8:	d023      	beq.n	90020302 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
900202ba:	9b09      	ldr	r3, [sp, #36]	; 0x24
900202bc:	9825      	ldr	r0, [sp, #148]	; 0x94
900202be:	3b01      	subs	r3, #1
900202c0:	fb00 a003 	mla	r0, r0, r3, sl
900202c4:	1400      	asrs	r0, r0, #16
900202c6:	f53f af2d 	bmi.w	90020124 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
900202ca:	3901      	subs	r1, #1
900202cc:	4288      	cmp	r0, r1
900202ce:	f6bf af29 	bge.w	90020124 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
900202d2:	9926      	ldr	r1, [sp, #152]	; 0x98
900202d4:	fb01 5303 	mla	r3, r1, r3, r5
900202d8:	141b      	asrs	r3, r3, #16
900202da:	f53f af23 	bmi.w	90020124 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
900202de:	3a01      	subs	r2, #1
900202e0:	4293      	cmp	r3, r2
900202e2:	f6bf af1f 	bge.w	90020124 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
900202e6:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
900202ea:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
900202ee:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
900202f2:	f1be 0f00 	cmp.w	lr, #0
900202f6:	dc6c      	bgt.n	900203d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
900202f8:	9b09      	ldr	r3, [sp, #36]	; 0x24
900202fa:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
900202fe:	eb08 0844 	add.w	r8, r8, r4, lsl #1
90020302:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90020304:	2b00      	cmp	r3, #0
90020306:	f340 810e 	ble.w	90020526 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
9002030a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
9002030e:	9b22      	ldr	r3, [sp, #136]	; 0x88
90020310:	ee30 0a04 	vadd.f32	s0, s0, s8
90020314:	ee70 0aa4 	vadd.f32	s1, s1, s9
90020318:	eef0 6a62 	vmov.f32	s13, s5
9002031c:	eec7 7a00 	vdiv.f32	s15, s14, s0
90020320:	ee31 1a05 	vadd.f32	s2, s2, s10
90020324:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90020328:	ee16 aa90 	vmov	sl, s13
9002032c:	eef0 6a43 	vmov.f32	s13, s6
90020330:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90020334:	ee16 5a90 	vmov	r5, s13
90020338:	ee20 7aa7 	vmul.f32	s14, s1, s15
9002033c:	ee61 7a27 	vmul.f32	s15, s2, s15
90020340:	ee77 2a62 	vsub.f32	s5, s14, s5
90020344:	ee37 3ac3 	vsub.f32	s6, s15, s6
90020348:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9002034c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90020350:	ee12 2a90 	vmov	r2, s5
90020354:	eef0 2a47 	vmov.f32	s5, s14
90020358:	fb92 f3f3 	sdiv	r3, r2, r3
9002035c:	ee13 2a10 	vmov	r2, s6
90020360:	9325      	str	r3, [sp, #148]	; 0x94
90020362:	9b22      	ldr	r3, [sp, #136]	; 0x88
90020364:	eeb0 3a67 	vmov.f32	s6, s15
90020368:	fb92 f3f3 	sdiv	r3, r2, r3
9002036c:	9326      	str	r3, [sp, #152]	; 0x98
9002036e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90020370:	9a15      	ldr	r2, [sp, #84]	; 0x54
90020372:	3b01      	subs	r3, #1
90020374:	930c      	str	r3, [sp, #48]	; 0x30
90020376:	9b22      	ldr	r3, [sp, #136]	; 0x88
90020378:	bf08      	it	eq
9002037a:	4613      	moveq	r3, r2
9002037c:	9309      	str	r3, [sp, #36]	; 0x24
9002037e:	e6a6      	b.n	900200ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
90020380:	2900      	cmp	r1, #0
90020382:	f43f af10 	beq.w	900201a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
90020386:	f819 3003 	ldrb.w	r3, [r9, r3]
9002038a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9002038e:	930f      	str	r3, [sp, #60]	; 0x3c
90020390:	e709      	b.n	900201a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
90020392:	f112 0901 	adds.w	r9, r2, #1
90020396:	f53f af7d 	bmi.w	90020294 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9002039a:	454b      	cmp	r3, r9
9002039c:	f6ff af7a 	blt.w	90020294 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
900203a0:	f11c 0901 	adds.w	r9, ip, #1
900203a4:	f53f af76 	bmi.w	90020294 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
900203a8:	45ce      	cmp	lr, r9
900203aa:	f6ff af73 	blt.w	90020294 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
900203ae:	9c0d      	ldr	r4, [sp, #52]	; 0x34
900203b0:	b21b      	sxth	r3, r3
900203b2:	9202      	str	r2, [sp, #8]
900203b4:	fa0f f28e 	sxth.w	r2, lr
900203b8:	9300      	str	r3, [sp, #0]
900203ba:	4633      	mov	r3, r6
900203bc:	9201      	str	r2, [sp, #4]
900203be:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
900203c0:	e9cd 1405 	strd	r1, r4, [sp, #20]
900203c4:	e9cd c003 	strd	ip, r0, [sp, #12]
900203c8:	4639      	mov	r1, r7
900203ca:	9816      	ldr	r0, [sp, #88]	; 0x58
900203cc:	f7ff fd8e 	bl	9001feec <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
900203d0:	e760      	b.n	90020294 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
900203d2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
900203d4:	ea4f 422a 	mov.w	r2, sl, asr #16
900203d8:	1429      	asrs	r1, r5, #16
900203da:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
900203dc:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
900203e0:	f3ca 3c03 	ubfx	ip, sl, #12, #4
900203e4:	f3c5 3003 	ubfx	r0, r5, #12, #4
900203e8:	fb03 2101 	mla	r1, r3, r1, r2
900203ec:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
900203ee:	440a      	add	r2, r1
900203f0:	5c61      	ldrb	r1, [r4, r1]
900203f2:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
900203f6:	f1bc 0f00 	cmp.w	ip, #0
900203fa:	f000 808c 	beq.w	90020516 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
900203fe:	7857      	ldrb	r7, [r2, #1]
90020400:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
90020404:	9413      	str	r4, [sp, #76]	; 0x4c
90020406:	b140      	cbz	r0, 9002041a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90020408:	18d7      	adds	r7, r2, r3
9002040a:	5cd3      	ldrb	r3, [r2, r3]
9002040c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90020410:	9310      	str	r3, [sp, #64]	; 0x40
90020412:	787b      	ldrb	r3, [r7, #1]
90020414:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90020418:	9314      	str	r3, [sp, #80]	; 0x50
9002041a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
9002041c:	fb1c f200 	smulbb	r2, ip, r0
90020420:	9c14      	ldr	r4, [sp, #80]	; 0x50
90020422:	f10e 3eff 	add.w	lr, lr, #4294967295
90020426:	041f      	lsls	r7, r3, #16
90020428:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
9002042c:	10d2      	asrs	r2, r2, #3
9002042e:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
90020432:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
90020436:	431f      	orrs	r7, r3
90020438:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
9002043c:	9317      	str	r3, [sp, #92]	; 0x5c
9002043e:	9b14      	ldr	r3, [sp, #80]	; 0x50
90020440:	9c17      	ldr	r4, [sp, #92]	; 0x5c
90020442:	041b      	lsls	r3, r3, #16
90020444:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
90020448:	ea43 030b 	orr.w	r3, r3, fp
9002044c:	ea4f 4b01 	mov.w	fp, r1, lsl #16
90020450:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
90020454:	4353      	muls	r3, r2
90020456:	fb04 3707 	mla	r7, r4, r7, r3
9002045a:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
9002045e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
90020460:	ea43 0b01 	orr.w	fp, r3, r1
90020464:	f1c0 0110 	rsb	r1, r0, #16
90020468:	9b10      	ldr	r3, [sp, #64]	; 0x40
9002046a:	eba1 0c0c 	sub.w	ip, r1, ip
9002046e:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
90020472:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
90020476:	fb0c 770b 	mla	r7, ip, fp, r7
9002047a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
9002047e:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
90020482:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
90020486:	ea4c 0c0b 	orr.w	ip, ip, fp
9002048a:	fb02 770c 	mla	r7, r2, ip, r7
9002048e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
90020490:	0d79      	lsrs	r1, r7, #21
90020492:	8812      	ldrh	r2, [r2, #0]
90020494:	097f      	lsrs	r7, r7, #5
90020496:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
9002049a:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
9002049e:	430f      	orrs	r7, r1
900204a0:	1211      	asrs	r1, r2, #8
900204a2:	b2bb      	uxth	r3, r7
900204a4:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
900204a8:	10d7      	asrs	r7, r2, #3
900204aa:	fb11 f104 	smulbb	r1, r1, r4
900204ae:	1218      	asrs	r0, r3, #8
900204b0:	00d2      	lsls	r2, r2, #3
900204b2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
900204b6:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
900204ba:	fb17 f704 	smulbb	r7, r7, r4
900204be:	b2d2      	uxtb	r2, r2
900204c0:	fb00 1009 	mla	r0, r0, r9, r1
900204c4:	10d9      	asrs	r1, r3, #3
900204c6:	fb12 f204 	smulbb	r2, r2, r4
900204ca:	00db      	lsls	r3, r3, #3
900204cc:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
900204d0:	b280      	uxth	r0, r0
900204d2:	b2db      	uxtb	r3, r3
900204d4:	fb01 7109 	mla	r1, r1, r9, r7
900204d8:	fb03 2309 	mla	r3, r3, r9, r2
900204dc:	1c42      	adds	r2, r0, #1
900204de:	b289      	uxth	r1, r1
900204e0:	b29b      	uxth	r3, r3
900204e2:	eb02 2010 	add.w	r0, r2, r0, lsr #8
900204e6:	1c4f      	adds	r7, r1, #1
900204e8:	1c5a      	adds	r2, r3, #1
900204ea:	eb07 2111 	add.w	r1, r7, r1, lsr #8
900204ee:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
900204f2:	eb02 2213 	add.w	r2, r2, r3, lsr #8
900204f6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
900204f8:	0949      	lsrs	r1, r1, #5
900204fa:	f3c2 22c4 	ubfx	r2, r2, #11, #5
900204fe:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90020502:	4310      	orrs	r0, r2
90020504:	4308      	orrs	r0, r1
90020506:	f823 0b02 	strh.w	r0, [r3], #2
9002050a:	930e      	str	r3, [sp, #56]	; 0x38
9002050c:	9b25      	ldr	r3, [sp, #148]	; 0x94
9002050e:	449a      	add	sl, r3
90020510:	9b26      	ldr	r3, [sp, #152]	; 0x98
90020512:	441d      	add	r5, r3
90020514:	e6ed      	b.n	900202f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
90020516:	2800      	cmp	r0, #0
90020518:	f43f af7f 	beq.w	9002041a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
9002051c:	5cd3      	ldrb	r3, [r2, r3]
9002051e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90020522:	9310      	str	r3, [sp, #64]	; 0x40
90020524:	e779      	b.n	9002041a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90020526:	b019      	add	sp, #100	; 0x64
90020528:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9002052c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
9002052c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90020530:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
90020534:	f9bd e020 	ldrsh.w	lr, [sp, #32]
90020538:	f1b8 0f00 	cmp.w	r8, #0
9002053c:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
90020540:	fb08 470e 	mla	r7, r8, lr, r4
90020544:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
90020548:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
9002054c:	eb02 0907 	add.w	r9, r2, r7
90020550:	8808      	ldrh	r0, [r1, #0]
90020552:	db67      	blt.n	90020624 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
90020554:	45c2      	cmp	sl, r8
90020556:	dd65      	ble.n	90020624 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
90020558:	2c00      	cmp	r4, #0
9002055a:	db61      	blt.n	90020620 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
9002055c:	45a6      	cmp	lr, r4
9002055e:	dd5f      	ble.n	90020620 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
90020560:	5dd2      	ldrb	r2, [r2, r7]
90020562:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
90020566:	1c62      	adds	r2, r4, #1
90020568:	d45f      	bmi.n	9002062a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
9002056a:	4596      	cmp	lr, r2
9002056c:	dd5d      	ble.n	9002062a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
9002056e:	2d00      	cmp	r5, #0
90020570:	d05b      	beq.n	9002062a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
90020572:	f899 2001 	ldrb.w	r2, [r9, #1]
90020576:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
9002057a:	f118 0801 	adds.w	r8, r8, #1
9002057e:	d458      	bmi.n	90020632 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
90020580:	45c2      	cmp	sl, r8
90020582:	dd56      	ble.n	90020632 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
90020584:	2e00      	cmp	r6, #0
90020586:	d054      	beq.n	90020632 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
90020588:	2c00      	cmp	r4, #0
9002058a:	db50      	blt.n	9002062e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
9002058c:	45a6      	cmp	lr, r4
9002058e:	dd4e      	ble.n	9002062e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
90020590:	f819 200e 	ldrb.w	r2, [r9, lr]
90020594:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
90020598:	3401      	adds	r4, #1
9002059a:	d407      	bmi.n	900205ac <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
9002059c:	45a6      	cmp	lr, r4
9002059e:	dd05      	ble.n	900205ac <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
900205a0:	b125      	cbz	r5, 900205ac <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
900205a2:	44ce      	add	lr, r9
900205a4:	f89e 0001 	ldrb.w	r0, [lr, #1]
900205a8:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
900205ac:	fb15 f406 	smulbb	r4, r5, r6
900205b0:	ea4f 430c 	mov.w	r3, ip, lsl #16
900205b4:	ea4f 4e07 	mov.w	lr, r7, lsl #16
900205b8:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
900205bc:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
900205c0:	f3c4 04c7 	ubfx	r4, r4, #3, #8
900205c4:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
900205c8:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
900205cc:	ea43 0c0c 	orr.w	ip, r3, ip
900205d0:	f1c6 0310 	rsb	r3, r6, #16
900205d4:	ea4e 0707 	orr.w	r7, lr, r7
900205d8:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
900205dc:	1b5b      	subs	r3, r3, r5
900205de:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
900205e2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
900205e6:	437d      	muls	r5, r7
900205e8:	fb03 5c0c 	mla	ip, r3, ip, r5
900205ec:	0403      	lsls	r3, r0, #16
900205ee:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
900205f2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
900205f6:	4318      	orrs	r0, r3
900205f8:	0413      	lsls	r3, r2, #16
900205fa:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
900205fe:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
90020602:	fb04 c000 	mla	r0, r4, r0, ip
90020606:	4313      	orrs	r3, r2
90020608:	fb06 0003 	mla	r0, r6, r3, r0
9002060c:	0d43      	lsrs	r3, r0, #21
9002060e:	0940      	lsrs	r0, r0, #5
90020610:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90020614:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90020618:	4318      	orrs	r0, r3
9002061a:	8008      	strh	r0, [r1, #0]
9002061c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90020620:	4684      	mov	ip, r0
90020622:	e7a0      	b.n	90020566 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
90020624:	4607      	mov	r7, r0
90020626:	4684      	mov	ip, r0
90020628:	e7a7      	b.n	9002057a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
9002062a:	4607      	mov	r7, r0
9002062c:	e7a5      	b.n	9002057a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
9002062e:	4602      	mov	r2, r0
90020630:	e7b2      	b.n	90020598 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
90020632:	4602      	mov	r2, r0
90020634:	e7ba      	b.n	900205ac <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

90020636 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90020636:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002063a:	b093      	sub	sp, #76	; 0x4c
9002063c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
90020640:	920f      	str	r2, [sp, #60]	; 0x3c
90020642:	9a21      	ldr	r2, [sp, #132]	; 0x84
90020644:	9010      	str	r0, [sp, #64]	; 0x40
90020646:	9108      	str	r1, [sp, #32]
90020648:	6850      	ldr	r0, [r2, #4]
9002064a:	9306      	str	r3, [sp, #24]
9002064c:	6812      	ldr	r2, [r2, #0]
9002064e:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
90020652:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
90020656:	fb00 1303 	mla	r3, r0, r3, r1
9002065a:	eb02 0943 	add.w	r9, r2, r3, lsl #1
9002065e:	9b24      	ldr	r3, [sp, #144]	; 0x90
90020660:	681b      	ldr	r3, [r3, #0]
90020662:	9307      	str	r3, [sp, #28]
90020664:	9b24      	ldr	r3, [sp, #144]	; 0x90
90020666:	685f      	ldr	r7, [r3, #4]
90020668:	3704      	adds	r7, #4
9002066a:	9b08      	ldr	r3, [sp, #32]
9002066c:	2b00      	cmp	r3, #0
9002066e:	dc03      	bgt.n	90020678 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
90020670:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90020672:	2b00      	cmp	r3, #0
90020674:	f340 81b2 	ble.w	900209dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
90020678:	9b24      	ldr	r3, [sp, #144]	; 0x90
9002067a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002067e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90020682:	1e48      	subs	r0, r1, #1
90020684:	f102 3cff 	add.w	ip, r2, #4294967295
90020688:	9b06      	ldr	r3, [sp, #24]
9002068a:	2b00      	cmp	r3, #0
9002068c:	f340 80a9 	ble.w	900207e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90020690:	ea5f 4e24 	movs.w	lr, r4, asr #16
90020694:	ea4f 4326 	mov.w	r3, r6, asr #16
90020698:	d406      	bmi.n	900206a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9002069a:	4586      	cmp	lr, r0
9002069c:	da04      	bge.n	900206a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9002069e:	2b00      	cmp	r3, #0
900206a0:	db02      	blt.n	900206a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
900206a2:	4563      	cmp	r3, ip
900206a4:	f2c0 809e 	blt.w	900207e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
900206a8:	f11e 0e01 	adds.w	lr, lr, #1
900206ac:	f100 808f 	bmi.w	900207ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
900206b0:	4571      	cmp	r1, lr
900206b2:	f2c0 808c 	blt.w	900207ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
900206b6:	3301      	adds	r3, #1
900206b8:	f100 8089 	bmi.w	900207ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
900206bc:	429a      	cmp	r2, r3
900206be:	f2c0 8086 	blt.w	900207ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
900206c2:	f8dd b018 	ldr.w	fp, [sp, #24]
900206c6:	46c8      	mov	r8, r9
900206c8:	f1bb 0f00 	cmp.w	fp, #0
900206cc:	f340 80a6 	ble.w	9002081c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
900206d0:	9a24      	ldr	r2, [sp, #144]	; 0x90
900206d2:	ea4f 4c26 	mov.w	ip, r6, asr #16
900206d6:	9b24      	ldr	r3, [sp, #144]	; 0x90
900206d8:	f3c4 3003 	ubfx	r0, r4, #12, #4
900206dc:	f8d2 e00c 	ldr.w	lr, [r2, #12]
900206e0:	1422      	asrs	r2, r4, #16
900206e2:	f3c6 3103 	ubfx	r1, r6, #12, #4
900206e6:	689b      	ldr	r3, [r3, #8]
900206e8:	f100 80e3 	bmi.w	900208b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
900206ec:	f103 3aff 	add.w	sl, r3, #4294967295
900206f0:	4552      	cmp	r2, sl
900206f2:	f280 80de 	bge.w	900208b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
900206f6:	f1bc 0f00 	cmp.w	ip, #0
900206fa:	f2c0 80da 	blt.w	900208b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
900206fe:	f10e 3aff 	add.w	sl, lr, #4294967295
90020702:	45d4      	cmp	ip, sl
90020704:	f280 80d5 	bge.w	900208b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
90020708:	b21b      	sxth	r3, r3
9002070a:	9d07      	ldr	r5, [sp, #28]
9002070c:	fb0c 2203 	mla	r2, ip, r3, r2
90020710:	eb05 0a02 	add.w	sl, r5, r2
90020714:	5caa      	ldrb	r2, [r5, r2]
90020716:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
9002071a:	2800      	cmp	r0, #0
9002071c:	f000 80c0 	beq.w	900208a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
90020720:	f89a 2001 	ldrb.w	r2, [sl, #1]
90020724:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
90020728:	920b      	str	r2, [sp, #44]	; 0x2c
9002072a:	b151      	cbz	r1, 90020742 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
9002072c:	eb0a 0203 	add.w	r2, sl, r3
90020730:	f81a 3003 	ldrb.w	r3, [sl, r3]
90020734:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
90020738:	9309      	str	r3, [sp, #36]	; 0x24
9002073a:	7853      	ldrb	r3, [r2, #1]
9002073c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
90020740:	930c      	str	r3, [sp, #48]	; 0x30
90020742:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90020744:	fb10 f201 	smulbb	r2, r0, r1
90020748:	9d0c      	ldr	r5, [sp, #48]	; 0x30
9002074a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
9002074e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
90020752:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
90020756:	10d2      	asrs	r2, r2, #3
90020758:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
9002075c:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
90020760:	ea4c 0c03 	orr.w	ip, ip, r3
90020764:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90020766:	041b      	lsls	r3, r3, #16
90020768:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
9002076c:	432b      	orrs	r3, r5
9002076e:	4353      	muls	r3, r2
90020770:	fb0a 330c 	mla	r3, sl, ip, r3
90020774:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
90020778:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
9002077c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
90020780:	ea4c 0e0e 	orr.w	lr, ip, lr
90020784:	f1c1 0c10 	rsb	ip, r1, #16
90020788:	ebac 0c00 	sub.w	ip, ip, r0
9002078c:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
90020790:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
90020794:	fb0c 3c0e 	mla	ip, ip, lr, r3
90020798:	9b09      	ldr	r3, [sp, #36]	; 0x24
9002079a:	0418      	lsls	r0, r3, #16
9002079c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
900207a0:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
900207a4:	4318      	orrs	r0, r3
900207a6:	fb02 c200 	mla	r2, r2, r0, ip
900207aa:	0d53      	lsrs	r3, r2, #21
900207ac:	0952      	lsrs	r2, r2, #5
900207ae:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
900207b2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
900207b6:	431a      	orrs	r2, r3
900207b8:	f8a8 2000 	strh.w	r2, [r8]
900207bc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
900207be:	f108 0802 	add.w	r8, r8, #2
900207c2:	f10b 3bff 	add.w	fp, fp, #4294967295
900207c6:	441c      	add	r4, r3
900207c8:	9b20      	ldr	r3, [sp, #128]	; 0x80
900207ca:	441e      	add	r6, r3
900207cc:	e77c      	b.n	900206c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900207ce:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
900207d0:	f109 0902 	add.w	r9, r9, #2
900207d4:	441c      	add	r4, r3
900207d6:	9b20      	ldr	r3, [sp, #128]	; 0x80
900207d8:	441e      	add	r6, r3
900207da:	9b06      	ldr	r3, [sp, #24]
900207dc:	3b01      	subs	r3, #1
900207de:	9306      	str	r3, [sp, #24]
900207e0:	e752      	b.n	90020688 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
900207e2:	d020      	beq.n	90020826 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
900207e4:	9b06      	ldr	r3, [sp, #24]
900207e6:	981f      	ldr	r0, [sp, #124]	; 0x7c
900207e8:	3b01      	subs	r3, #1
900207ea:	fb00 4003 	mla	r0, r0, r3, r4
900207ee:	1400      	asrs	r0, r0, #16
900207f0:	f53f af67 	bmi.w	900206c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
900207f4:	3901      	subs	r1, #1
900207f6:	4288      	cmp	r0, r1
900207f8:	f6bf af63 	bge.w	900206c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
900207fc:	9920      	ldr	r1, [sp, #128]	; 0x80
900207fe:	fb01 6303 	mla	r3, r1, r3, r6
90020802:	141b      	asrs	r3, r3, #16
90020804:	f53f af5d 	bmi.w	900206c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
90020808:	3a01      	subs	r2, #1
9002080a:	4293      	cmp	r3, r2
9002080c:	f6bf af59 	bge.w	900206c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
90020810:	f8dd 8018 	ldr.w	r8, [sp, #24]
90020814:	46ca      	mov	sl, r9
90020816:	f1b8 0f00 	cmp.w	r8, #0
9002081a:	dc67      	bgt.n	900208ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
9002081c:	9b06      	ldr	r3, [sp, #24]
9002081e:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
90020822:	eb09 0945 	add.w	r9, r9, r5, lsl #1
90020826:	9b08      	ldr	r3, [sp, #32]
90020828:	2b00      	cmp	r3, #0
9002082a:	f340 80d7 	ble.w	900209dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
9002082e:	ee30 0a04 	vadd.f32	s0, s0, s8
90020832:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90020834:	ee70 0aa4 	vadd.f32	s1, s1, s9
90020838:	eeb0 6a62 	vmov.f32	s12, s5
9002083c:	eec6 7a80 	vdiv.f32	s15, s13, s0
90020840:	ee31 1a05 	vadd.f32	s2, s2, s10
90020844:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90020848:	ee16 4a10 	vmov	r4, s12
9002084c:	eeb0 6a43 	vmov.f32	s12, s6
90020850:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90020854:	ee16 6a10 	vmov	r6, s12
90020858:	ee20 7aa7 	vmul.f32	s14, s1, s15
9002085c:	ee61 7a27 	vmul.f32	s15, s2, s15
90020860:	ee77 2a62 	vsub.f32	s5, s14, s5
90020864:	ee37 3ac3 	vsub.f32	s6, s15, s6
90020868:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9002086c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90020870:	ee12 2a90 	vmov	r2, s5
90020874:	eef0 2a47 	vmov.f32	s5, s14
90020878:	fb92 f3f3 	sdiv	r3, r2, r3
9002087c:	ee13 2a10 	vmov	r2, s6
90020880:	931f      	str	r3, [sp, #124]	; 0x7c
90020882:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90020884:	eeb0 3a67 	vmov.f32	s6, s15
90020888:	fb92 f3f3 	sdiv	r3, r2, r3
9002088c:	9320      	str	r3, [sp, #128]	; 0x80
9002088e:	9b08      	ldr	r3, [sp, #32]
90020890:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90020892:	3b01      	subs	r3, #1
90020894:	9308      	str	r3, [sp, #32]
90020896:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90020898:	bf08      	it	eq
9002089a:	4613      	moveq	r3, r2
9002089c:	9306      	str	r3, [sp, #24]
9002089e:	e6e4      	b.n	9002066a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
900208a0:	2900      	cmp	r1, #0
900208a2:	f43f af4e 	beq.w	90020742 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
900208a6:	f81a 3003 	ldrb.w	r3, [sl, r3]
900208aa:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
900208ae:	9309      	str	r3, [sp, #36]	; 0x24
900208b0:	e747      	b.n	90020742 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
900208b2:	f112 0a01 	adds.w	sl, r2, #1
900208b6:	d481      	bmi.n	900207bc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
900208b8:	4553      	cmp	r3, sl
900208ba:	f6ff af7f 	blt.w	900207bc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
900208be:	f11c 0a01 	adds.w	sl, ip, #1
900208c2:	f53f af7b 	bmi.w	900207bc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
900208c6:	45d6      	cmp	lr, sl
900208c8:	f6ff af78 	blt.w	900207bc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
900208cc:	b21b      	sxth	r3, r3
900208ce:	e9cd 2c02 	strd	r2, ip, [sp, #8]
900208d2:	fa0f f28e 	sxth.w	r2, lr
900208d6:	9300      	str	r3, [sp, #0]
900208d8:	463b      	mov	r3, r7
900208da:	9201      	str	r2, [sp, #4]
900208dc:	9a07      	ldr	r2, [sp, #28]
900208de:	e9cd 0104 	strd	r0, r1, [sp, #16]
900208e2:	4641      	mov	r1, r8
900208e4:	9810      	ldr	r0, [sp, #64]	; 0x40
900208e6:	f7ff fe21 	bl	9002052c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
900208ea:	e767      	b.n	900207bc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
900208ec:	9b24      	ldr	r3, [sp, #144]	; 0x90
900208ee:	1422      	asrs	r2, r4, #16
900208f0:	1431      	asrs	r1, r6, #16
900208f2:	9d07      	ldr	r5, [sp, #28]
900208f4:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
900208f8:	f3c4 3e03 	ubfx	lr, r4, #12, #4
900208fc:	f3c6 3003 	ubfx	r0, r6, #12, #4
90020900:	fb03 2101 	mla	r1, r3, r1, r2
90020904:	9a07      	ldr	r2, [sp, #28]
90020906:	440a      	add	r2, r1
90020908:	5c69      	ldrb	r1, [r5, r1]
9002090a:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
9002090e:	f1be 0f00 	cmp.w	lr, #0
90020912:	d05c      	beq.n	900209ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
90020914:	f892 c001 	ldrb.w	ip, [r2, #1]
90020918:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
9002091c:	950d      	str	r5, [sp, #52]	; 0x34
9002091e:	b150      	cbz	r0, 90020936 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
90020920:	eb02 0c03 	add.w	ip, r2, r3
90020924:	5cd3      	ldrb	r3, [r2, r3]
90020926:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
9002092a:	930a      	str	r3, [sp, #40]	; 0x28
9002092c:	f89c 3001 	ldrb.w	r3, [ip, #1]
90020930:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
90020934:	930e      	str	r3, [sp, #56]	; 0x38
90020936:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90020938:	fb1e f200 	smulbb	r2, lr, r0
9002093c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
9002093e:	f108 38ff 	add.w	r8, r8, #4294967295
90020942:	ea4f 4c03 	mov.w	ip, r3, lsl #16
90020946:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
9002094a:	10d2      	asrs	r2, r2, #3
9002094c:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
90020950:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
90020954:	ea4c 0c03 	orr.w	ip, ip, r3
90020958:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
9002095c:	9311      	str	r3, [sp, #68]	; 0x44
9002095e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90020960:	9d11      	ldr	r5, [sp, #68]	; 0x44
90020962:	041b      	lsls	r3, r3, #16
90020964:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
90020968:	ea43 030b 	orr.w	r3, r3, fp
9002096c:	ea4f 4b01 	mov.w	fp, r1, lsl #16
90020970:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
90020974:	4353      	muls	r3, r2
90020976:	fb05 3c0c 	mla	ip, r5, ip, r3
9002097a:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
9002097e:	ea43 0b01 	orr.w	fp, r3, r1
90020982:	f1c0 0110 	rsb	r1, r0, #16
90020986:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90020988:	eba1 0e0e 	sub.w	lr, r1, lr
9002098c:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
90020990:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
90020994:	fb0e cc0b 	mla	ip, lr, fp, ip
90020998:	ea4f 4b03 	mov.w	fp, r3, lsl #16
9002099c:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
900209a0:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
900209a4:	ea4b 0e0e 	orr.w	lr, fp, lr
900209a8:	fb02 cc0e 	mla	ip, r2, lr, ip
900209ac:	ea4f 535c 	mov.w	r3, ip, lsr #21
900209b0:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
900209b4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
900209b8:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
900209bc:	ea43 0c0c 	orr.w	ip, r3, ip
900209c0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
900209c2:	441c      	add	r4, r3
900209c4:	9b20      	ldr	r3, [sp, #128]	; 0x80
900209c6:	f82a cb02 	strh.w	ip, [sl], #2
900209ca:	441e      	add	r6, r3
900209cc:	e723      	b.n	90020816 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
900209ce:	2800      	cmp	r0, #0
900209d0:	d0b1      	beq.n	90020936 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
900209d2:	5cd3      	ldrb	r3, [r2, r3]
900209d4:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
900209d8:	930a      	str	r3, [sp, #40]	; 0x28
900209da:	e7ac      	b.n	90020936 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
900209dc:	b013      	add	sp, #76	; 0x4c
900209de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900209e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
900209e2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900209e6:	880d      	ldrh	r5, [r1, #0]
900209e8:	b087      	sub	sp, #28
900209ea:	10ef      	asrs	r7, r5, #3
900209ec:	9103      	str	r1, [sp, #12]
900209ee:	ea4f 2a25 	mov.w	sl, r5, asr #8
900209f2:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
900209f6:	00ed      	lsls	r5, r5, #3
900209f8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
900209fc:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
90020a00:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
90020a04:	b2ed      	uxtb	r5, r5
90020a06:	9701      	str	r7, [sp, #4]
90020a08:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
90020a0c:	9502      	str	r5, [sp, #8]
90020a0e:	9d01      	ldr	r5, [sp, #4]
90020a10:	9902      	ldr	r1, [sp, #8]
90020a12:	022d      	lsls	r5, r5, #8
90020a14:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
90020a18:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
90020a1c:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
90020a20:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
90020a24:	430d      	orrs	r5, r1
90020a26:	fb06 0709 	mla	r7, r6, r9, r0
90020a2a:	2e00      	cmp	r6, #0
90020a2c:	9505      	str	r5, [sp, #20]
90020a2e:	eb02 0c07 	add.w	ip, r2, r7
90020a32:	f2c0 80b6 	blt.w	90020ba2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
90020a36:	45b3      	cmp	fp, r6
90020a38:	f340 80b3 	ble.w	90020ba2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
90020a3c:	2800      	cmp	r0, #0
90020a3e:	f2c0 80ae 	blt.w	90020b9e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
90020a42:	4581      	cmp	r9, r0
90020a44:	f340 80ab 	ble.w	90020b9e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
90020a48:	5dd7      	ldrb	r7, [r2, r7]
90020a4a:	eb07 0747 	add.w	r7, r7, r7, lsl #1
90020a4e:	441f      	add	r7, r3
90020a50:	1c42      	adds	r2, r0, #1
90020a52:	f100 80a9 	bmi.w	90020ba8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
90020a56:	4591      	cmp	r9, r2
90020a58:	f340 80a6 	ble.w	90020ba8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
90020a5c:	2c00      	cmp	r4, #0
90020a5e:	f000 80a3 	beq.w	90020ba8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
90020a62:	f89c 5001 	ldrb.w	r5, [ip, #1]
90020a66:	eb05 0545 	add.w	r5, r5, r5, lsl #1
90020a6a:	441d      	add	r5, r3
90020a6c:	3601      	adds	r6, #1
90020a6e:	f100 809f 	bmi.w	90020bb0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
90020a72:	45b3      	cmp	fp, r6
90020a74:	f340 809c 	ble.w	90020bb0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
90020a78:	f1be 0f00 	cmp.w	lr, #0
90020a7c:	f000 8098 	beq.w	90020bb0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
90020a80:	2800      	cmp	r0, #0
90020a82:	f2c0 8093 	blt.w	90020bac <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
90020a86:	4581      	cmp	r9, r0
90020a88:	f340 8090 	ble.w	90020bac <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
90020a8c:	f81c 6009 	ldrb.w	r6, [ip, r9]
90020a90:	eb06 0646 	add.w	r6, r6, r6, lsl #1
90020a94:	441e      	add	r6, r3
90020a96:	3001      	adds	r0, #1
90020a98:	f100 808d 	bmi.w	90020bb6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
90020a9c:	4581      	cmp	r9, r0
90020a9e:	f340 808a 	ble.w	90020bb6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
90020aa2:	2c00      	cmp	r4, #0
90020aa4:	f000 8087 	beq.w	90020bb6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
90020aa8:	44e1      	add	r9, ip
90020aaa:	f899 2001 	ldrb.w	r2, [r9, #1]
90020aae:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90020ab2:	4413      	add	r3, r2
90020ab4:	b2a4      	uxth	r4, r4
90020ab6:	f897 c002 	ldrb.w	ip, [r7, #2]
90020aba:	fa1f fe8e 	uxth.w	lr, lr
90020abe:	9901      	ldr	r1, [sp, #4]
90020ac0:	fb04 fb0e 	mul.w	fp, r4, lr
90020ac4:	0124      	lsls	r4, r4, #4
90020ac6:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
90020aca:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
90020ace:	eba4 040b 	sub.w	r4, r4, fp
90020ad2:	fa1f f08e 	uxth.w	r0, lr
90020ad6:	b2a2      	uxth	r2, r4
90020ad8:	78ac      	ldrb	r4, [r5, #2]
90020ada:	eba9 0900 	sub.w	r9, r9, r0
90020ade:	fa1f fe88 	uxth.w	lr, r8
90020ae2:	4354      	muls	r4, r2
90020ae4:	ea6f 0808 	mvn.w	r8, r8
90020ae8:	fa1f f989 	uxth.w	r9, r9
90020aec:	fa5f f888 	uxtb.w	r8, r8
90020af0:	fb09 440c 	mla	r4, r9, ip, r4
90020af4:	f896 c002 	ldrb.w	ip, [r6, #2]
90020af8:	fb1a fa08 	smulbb	sl, sl, r8
90020afc:	fb00 440c 	mla	r4, r0, ip, r4
90020b00:	f893 c002 	ldrb.w	ip, [r3, #2]
90020b04:	fb0b 4c0c 	mla	ip, fp, ip, r4
90020b08:	787c      	ldrb	r4, [r7, #1]
90020b0a:	783f      	ldrb	r7, [r7, #0]
90020b0c:	f3cc 2c07 	ubfx	ip, ip, #8, #8
90020b10:	fb0c ac0e 	mla	ip, ip, lr, sl
90020b14:	f895 a001 	ldrb.w	sl, [r5, #1]
90020b18:	782d      	ldrb	r5, [r5, #0]
90020b1a:	fb02 fa0a 	mul.w	sl, r2, sl
90020b1e:	fa1f fc8c 	uxth.w	ip, ip
90020b22:	436a      	muls	r2, r5
90020b24:	7835      	ldrb	r5, [r6, #0]
90020b26:	fb09 aa04 	mla	sl, r9, r4, sl
90020b2a:	7874      	ldrb	r4, [r6, #1]
90020b2c:	fb09 2207 	mla	r2, r9, r7, r2
90020b30:	fb00 aa04 	mla	sl, r0, r4, sl
90020b34:	785c      	ldrb	r4, [r3, #1]
90020b36:	fb00 2005 	mla	r0, r0, r5, r2
90020b3a:	781b      	ldrb	r3, [r3, #0]
90020b3c:	fb0b a404 	mla	r4, fp, r4, sl
90020b40:	fb11 fa08 	smulbb	sl, r1, r8
90020b44:	fb0b 0b03 	mla	fp, fp, r3, r0
90020b48:	9b02      	ldr	r3, [sp, #8]
90020b4a:	f3c4 2407 	ubfx	r4, r4, #8, #8
90020b4e:	fb13 f808 	smulbb	r8, r3, r8
90020b52:	f3cb 2b07 	ubfx	fp, fp, #8, #8
90020b56:	fb04 a40e 	mla	r4, r4, lr, sl
90020b5a:	f10c 0301 	add.w	r3, ip, #1
90020b5e:	fb0b 8e0e 	mla	lr, fp, lr, r8
90020b62:	b2a4      	uxth	r4, r4
90020b64:	fa1f fe8e 	uxth.w	lr, lr
90020b68:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
90020b6c:	f104 0a01 	add.w	sl, r4, #1
90020b70:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
90020b74:	f10e 0c01 	add.w	ip, lr, #1
90020b78:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
90020b7c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
90020b80:	0964      	lsrs	r4, r4, #5
90020b82:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
90020b86:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
90020b8a:	ea4c 0c03 	orr.w	ip, ip, r3
90020b8e:	9b03      	ldr	r3, [sp, #12]
90020b90:	ea4c 0c04 	orr.w	ip, ip, r4
90020b94:	f8a3 c000 	strh.w	ip, [r3]
90020b98:	b007      	add	sp, #28
90020b9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90020b9e:	af05      	add	r7, sp, #20
90020ba0:	e756      	b.n	90020a50 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
90020ba2:	ad05      	add	r5, sp, #20
90020ba4:	462f      	mov	r7, r5
90020ba6:	e761      	b.n	90020a6c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
90020ba8:	ad05      	add	r5, sp, #20
90020baa:	e75f      	b.n	90020a6c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
90020bac:	ae05      	add	r6, sp, #20
90020bae:	e772      	b.n	90020a96 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
90020bb0:	ab05      	add	r3, sp, #20
90020bb2:	461e      	mov	r6, r3
90020bb4:	e77e      	b.n	90020ab4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
90020bb6:	ab05      	add	r3, sp, #20
90020bb8:	e77c      	b.n	90020ab4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

90020bba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90020bba:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020bbe:	b095      	sub	sp, #84	; 0x54
90020bc0:	9212      	str	r2, [sp, #72]	; 0x48
90020bc2:	9309      	str	r3, [sp, #36]	; 0x24
90020bc4:	9a23      	ldr	r2, [sp, #140]	; 0x8c
90020bc6:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
90020bca:	9013      	str	r0, [sp, #76]	; 0x4c
90020bcc:	930f      	str	r3, [sp, #60]	; 0x3c
90020bce:	6850      	ldr	r0, [r2, #4]
90020bd0:	910e      	str	r1, [sp, #56]	; 0x38
90020bd2:	6812      	ldr	r2, [r2, #0]
90020bd4:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
90020bd8:	fb00 1303 	mla	r3, r0, r3, r1
90020bdc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90020be0:	930a      	str	r3, [sp, #40]	; 0x28
90020be2:	9b26      	ldr	r3, [sp, #152]	; 0x98
90020be4:	681b      	ldr	r3, [r3, #0]
90020be6:	930d      	str	r3, [sp, #52]	; 0x34
90020be8:	9b26      	ldr	r3, [sp, #152]	; 0x98
90020bea:	685c      	ldr	r4, [r3, #4]
90020bec:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90020bee:	3404      	adds	r4, #4
90020bf0:	43db      	mvns	r3, r3
90020bf2:	b2db      	uxtb	r3, r3
90020bf4:	930b      	str	r3, [sp, #44]	; 0x2c
90020bf6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90020bf8:	2b00      	cmp	r3, #0
90020bfa:	dc03      	bgt.n	90020c04 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
90020bfc:	9b12      	ldr	r3, [sp, #72]	; 0x48
90020bfe:	2b00      	cmp	r3, #0
90020c00:	f340 8255 	ble.w	900210ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
90020c04:	9b26      	ldr	r3, [sp, #152]	; 0x98
90020c06:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90020c0a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90020c0e:	1e48      	subs	r0, r1, #1
90020c10:	1e55      	subs	r5, r2, #1
90020c12:	9b09      	ldr	r3, [sp, #36]	; 0x24
90020c14:	2b00      	cmp	r3, #0
90020c16:	f340 80f9 	ble.w	90020e0c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
90020c1a:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
90020c1c:	9b20      	ldr	r3, [sp, #128]	; 0x80
90020c1e:	1436      	asrs	r6, r6, #16
90020c20:	ea4f 4323 	mov.w	r3, r3, asr #16
90020c24:	d406      	bmi.n	90020c34 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90020c26:	4286      	cmp	r6, r0
90020c28:	da04      	bge.n	90020c34 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90020c2a:	2b00      	cmp	r3, #0
90020c2c:	db02      	blt.n	90020c34 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90020c2e:	42ab      	cmp	r3, r5
90020c30:	f2c0 80ed 	blt.w	90020e0e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
90020c34:	3601      	adds	r6, #1
90020c36:	f100 80da 	bmi.w	90020dee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
90020c3a:	42b1      	cmp	r1, r6
90020c3c:	f2c0 80d7 	blt.w	90020dee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
90020c40:	3301      	adds	r3, #1
90020c42:	f100 80d4 	bmi.w	90020dee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
90020c46:	429a      	cmp	r2, r3
90020c48:	f2c0 80d1 	blt.w	90020dee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
90020c4c:	9b09      	ldr	r3, [sp, #36]	; 0x24
90020c4e:	9311      	str	r3, [sp, #68]	; 0x44
90020c50:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90020c52:	930c      	str	r3, [sp, #48]	; 0x30
90020c54:	9b11      	ldr	r3, [sp, #68]	; 0x44
90020c56:	2b00      	cmp	r3, #0
90020c58:	f340 80fa 	ble.w	90020e50 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
90020c5c:	9826      	ldr	r0, [sp, #152]	; 0x98
90020c5e:	9b20      	ldr	r3, [sp, #128]	; 0x80
90020c60:	9a20      	ldr	r2, [sp, #128]	; 0x80
90020c62:	68c6      	ldr	r6, [r0, #12]
90020c64:	141d      	asrs	r5, r3, #16
90020c66:	981f      	ldr	r0, [sp, #124]	; 0x7c
90020c68:	f3c2 3103 	ubfx	r1, r2, #12, #4
90020c6c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90020c6e:	9a26      	ldr	r2, [sp, #152]	; 0x98
90020c70:	1400      	asrs	r0, r0, #16
90020c72:	f3c3 3303 	ubfx	r3, r3, #12, #4
90020c76:	6892      	ldr	r2, [r2, #8]
90020c78:	f100 813e 	bmi.w	90020ef8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
90020c7c:	1e57      	subs	r7, r2, #1
90020c7e:	42b8      	cmp	r0, r7
90020c80:	f280 813a 	bge.w	90020ef8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
90020c84:	2d00      	cmp	r5, #0
90020c86:	f2c0 8137 	blt.w	90020ef8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
90020c8a:	1e77      	subs	r7, r6, #1
90020c8c:	42bd      	cmp	r5, r7
90020c8e:	f280 8133 	bge.w	90020ef8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
90020c92:	b212      	sxth	r2, r2
90020c94:	fb05 0002 	mla	r0, r5, r2, r0
90020c98:	9d0d      	ldr	r5, [sp, #52]	; 0x34
90020c9a:	f815 a000 	ldrb.w	sl, [r5, r0]
90020c9e:	182e      	adds	r6, r5, r0
90020ca0:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
90020ca4:	eb04 050a 	add.w	r5, r4, sl
90020ca8:	2b00      	cmp	r3, #0
90020caa:	f000 8117 	beq.w	90020edc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
90020cae:	f896 c001 	ldrb.w	ip, [r6, #1]
90020cb2:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
90020cb6:	44a4      	add	ip, r4
90020cb8:	2900      	cmp	r1, #0
90020cba:	f000 8117 	beq.w	90020eec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
90020cbe:	18b0      	adds	r0, r6, r2
90020cc0:	5cb2      	ldrb	r2, [r6, r2]
90020cc2:	7840      	ldrb	r0, [r0, #1]
90020cc4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90020cc8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90020ccc:	4422      	add	r2, r4
90020cce:	4420      	add	r0, r4
90020cd0:	b29b      	uxth	r3, r3
90020cd2:	f89c 7002 	ldrb.w	r7, [ip, #2]
90020cd6:	b289      	uxth	r1, r1
90020cd8:	f895 b002 	ldrb.w	fp, [r5, #2]
90020cdc:	9e0c      	ldr	r6, [sp, #48]	; 0x30
90020cde:	fb03 f901 	mul.w	r9, r3, r1
90020ce2:	011b      	lsls	r3, r3, #4
90020ce4:	f8b6 e000 	ldrh.w	lr, [r6]
90020ce8:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
90020cec:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
90020cf0:	eba3 0309 	sub.w	r3, r3, r9
90020cf4:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
90020cf8:	b289      	uxth	r1, r1
90020cfa:	f814 a00a 	ldrb.w	sl, [r4, sl]
90020cfe:	b29b      	uxth	r3, r3
90020d00:	eba8 0801 	sub.w	r8, r8, r1
90020d04:	435f      	muls	r7, r3
90020d06:	fa1f f888 	uxth.w	r8, r8
90020d0a:	9310      	str	r3, [sp, #64]	; 0x40
90020d0c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90020d0e:	fb08 770b 	mla	r7, r8, fp, r7
90020d12:	f892 b002 	ldrb.w	fp, [r2, #2]
90020d16:	fb01 770b 	mla	r7, r1, fp, r7
90020d1a:	f890 b002 	ldrb.w	fp, [r0, #2]
90020d1e:	fb09 770b 	mla	r7, r9, fp, r7
90020d22:	ea4f 2b2e 	mov.w	fp, lr, asr #8
90020d26:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
90020d2a:	f3c7 2707 	ubfx	r7, r7, #8, #8
90020d2e:	fb1b fb03 	smulbb	fp, fp, r3
90020d32:	9b10      	ldr	r3, [sp, #64]	; 0x40
90020d34:	fb07 b706 	mla	r7, r7, r6, fp
90020d38:	f895 b001 	ldrb.w	fp, [r5, #1]
90020d3c:	f89c 5001 	ldrb.w	r5, [ip, #1]
90020d40:	f89c c000 	ldrb.w	ip, [ip]
90020d44:	b2bf      	uxth	r7, r7
90020d46:	435d      	muls	r5, r3
90020d48:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90020d4a:	fb08 550b 	mla	r5, r8, fp, r5
90020d4e:	f892 b001 	ldrb.w	fp, [r2, #1]
90020d52:	fb01 550b 	mla	r5, r1, fp, r5
90020d56:	f890 b001 	ldrb.w	fp, [r0, #1]
90020d5a:	fb09 550b 	mla	r5, r9, fp, r5
90020d5e:	ea4f 0bee 	mov.w	fp, lr, asr #3
90020d62:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90020d66:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
90020d6a:	f3c5 2507 	ubfx	r5, r5, #8, #8
90020d6e:	fa5f fe8e 	uxtb.w	lr, lr
90020d72:	fb1b fb03 	smulbb	fp, fp, r3
90020d76:	9b10      	ldr	r3, [sp, #64]	; 0x40
90020d78:	fb03 f30c 	mul.w	r3, r3, ip
90020d7c:	f892 c000 	ldrb.w	ip, [r2]
90020d80:	fb05 b506 	mla	r5, r5, r6, fp
90020d84:	fb08 330a 	mla	r3, r8, sl, r3
90020d88:	b2ad      	uxth	r5, r5
90020d8a:	fb01 330c 	mla	r3, r1, ip, r3
90020d8e:	f890 c000 	ldrb.w	ip, [r0]
90020d92:	f105 0b01 	add.w	fp, r5, #1
90020d96:	fb09 3c0c 	mla	ip, r9, ip, r3
90020d9a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90020d9c:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
90020da0:	fb1e fe03 	smulbb	lr, lr, r3
90020da4:	f3cc 2c07 	ubfx	ip, ip, #8, #8
90020da8:	1c7b      	adds	r3, r7, #1
90020daa:	096d      	lsrs	r5, r5, #5
90020dac:	fb0c e606 	mla	r6, ip, r6, lr
90020db0:	eb03 2717 	add.w	r7, r3, r7, lsr #8
90020db4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90020db8:	b2b6      	uxth	r6, r6
90020dba:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
90020dbe:	1c77      	adds	r7, r6, #1
90020dc0:	eb07 2716 	add.w	r7, r7, r6, lsr #8
90020dc4:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90020dc8:	431f      	orrs	r7, r3
90020dca:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90020dcc:	433d      	orrs	r5, r7
90020dce:	801d      	strh	r5, [r3, #0]
90020dd0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90020dd2:	9a21      	ldr	r2, [sp, #132]	; 0x84
90020dd4:	3302      	adds	r3, #2
90020dd6:	930c      	str	r3, [sp, #48]	; 0x30
90020dd8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90020dda:	4413      	add	r3, r2
90020ddc:	9a22      	ldr	r2, [sp, #136]	; 0x88
90020dde:	931f      	str	r3, [sp, #124]	; 0x7c
90020de0:	9b20      	ldr	r3, [sp, #128]	; 0x80
90020de2:	4413      	add	r3, r2
90020de4:	9320      	str	r3, [sp, #128]	; 0x80
90020de6:	9b11      	ldr	r3, [sp, #68]	; 0x44
90020de8:	3b01      	subs	r3, #1
90020dea:	9311      	str	r3, [sp, #68]	; 0x44
90020dec:	e732      	b.n	90020c54 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
90020dee:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90020df0:	9e21      	ldr	r6, [sp, #132]	; 0x84
90020df2:	4433      	add	r3, r6
90020df4:	9e22      	ldr	r6, [sp, #136]	; 0x88
90020df6:	931f      	str	r3, [sp, #124]	; 0x7c
90020df8:	9b20      	ldr	r3, [sp, #128]	; 0x80
90020dfa:	4433      	add	r3, r6
90020dfc:	9320      	str	r3, [sp, #128]	; 0x80
90020dfe:	9b09      	ldr	r3, [sp, #36]	; 0x24
90020e00:	3b01      	subs	r3, #1
90020e02:	9309      	str	r3, [sp, #36]	; 0x24
90020e04:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90020e06:	3302      	adds	r3, #2
90020e08:	930a      	str	r3, [sp, #40]	; 0x28
90020e0a:	e702      	b.n	90020c12 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
90020e0c:	d027      	beq.n	90020e5e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
90020e0e:	9b09      	ldr	r3, [sp, #36]	; 0x24
90020e10:	9821      	ldr	r0, [sp, #132]	; 0x84
90020e12:	3b01      	subs	r3, #1
90020e14:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
90020e16:	fb00 5003 	mla	r0, r0, r3, r5
90020e1a:	1400      	asrs	r0, r0, #16
90020e1c:	f53f af16 	bmi.w	90020c4c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90020e20:	3901      	subs	r1, #1
90020e22:	4288      	cmp	r0, r1
90020e24:	f6bf af12 	bge.w	90020c4c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90020e28:	9922      	ldr	r1, [sp, #136]	; 0x88
90020e2a:	9820      	ldr	r0, [sp, #128]	; 0x80
90020e2c:	fb01 0303 	mla	r3, r1, r3, r0
90020e30:	141b      	asrs	r3, r3, #16
90020e32:	f53f af0b 	bmi.w	90020c4c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90020e36:	3a01      	subs	r2, #1
90020e38:	4293      	cmp	r3, r2
90020e3a:	f6bf af07 	bge.w	90020c4c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90020e3e:	9b09      	ldr	r3, [sp, #36]	; 0x24
90020e40:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
90020e44:	9311      	str	r3, [sp, #68]	; 0x44
90020e46:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90020e48:	930c      	str	r3, [sp, #48]	; 0x30
90020e4a:	9b11      	ldr	r3, [sp, #68]	; 0x44
90020e4c:	2b00      	cmp	r3, #0
90020e4e:	dc70      	bgt.n	90020f32 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
90020e50:	9b09      	ldr	r3, [sp, #36]	; 0x24
90020e52:	9a0a      	ldr	r2, [sp, #40]	; 0x28
90020e54:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90020e58:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90020e5c:	930a      	str	r3, [sp, #40]	; 0x28
90020e5e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90020e60:	2b00      	cmp	r3, #0
90020e62:	f340 8124 	ble.w	900210ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
90020e66:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90020e6a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
90020e6c:	ee30 0a04 	vadd.f32	s0, s0, s8
90020e70:	ee70 0aa4 	vadd.f32	s1, s1, s9
90020e74:	eef0 6a62 	vmov.f32	s13, s5
90020e78:	eec7 7a00 	vdiv.f32	s15, s14, s0
90020e7c:	ee31 1a05 	vadd.f32	s2, s2, s10
90020e80:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90020e84:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
90020e88:	eef0 6a43 	vmov.f32	s13, s6
90020e8c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90020e90:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
90020e94:	ee20 7aa7 	vmul.f32	s14, s1, s15
90020e98:	ee61 7a27 	vmul.f32	s15, s2, s15
90020e9c:	ee77 2a62 	vsub.f32	s5, s14, s5
90020ea0:	ee37 3ac3 	vsub.f32	s6, s15, s6
90020ea4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90020ea8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90020eac:	ee12 2a90 	vmov	r2, s5
90020eb0:	eef0 2a47 	vmov.f32	s5, s14
90020eb4:	fb92 f3f3 	sdiv	r3, r2, r3
90020eb8:	ee13 2a10 	vmov	r2, s6
90020ebc:	9321      	str	r3, [sp, #132]	; 0x84
90020ebe:	9b1e      	ldr	r3, [sp, #120]	; 0x78
90020ec0:	eeb0 3a67 	vmov.f32	s6, s15
90020ec4:	fb92 f3f3 	sdiv	r3, r2, r3
90020ec8:	9322      	str	r3, [sp, #136]	; 0x88
90020eca:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90020ecc:	9a12      	ldr	r2, [sp, #72]	; 0x48
90020ece:	3b01      	subs	r3, #1
90020ed0:	930e      	str	r3, [sp, #56]	; 0x38
90020ed2:	9b1e      	ldr	r3, [sp, #120]	; 0x78
90020ed4:	bf08      	it	eq
90020ed6:	4613      	moveq	r3, r2
90020ed8:	9309      	str	r3, [sp, #36]	; 0x24
90020eda:	e68c      	b.n	90020bf6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
90020edc:	b149      	cbz	r1, 90020ef2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
90020ede:	5cb2      	ldrb	r2, [r6, r2]
90020ee0:	4628      	mov	r0, r5
90020ee2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90020ee6:	4422      	add	r2, r4
90020ee8:	46ac      	mov	ip, r5
90020eea:	e6f1      	b.n	90020cd0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
90020eec:	4628      	mov	r0, r5
90020eee:	462a      	mov	r2, r5
90020ef0:	e6ee      	b.n	90020cd0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
90020ef2:	4628      	mov	r0, r5
90020ef4:	462a      	mov	r2, r5
90020ef6:	e7f7      	b.n	90020ee8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
90020ef8:	1c47      	adds	r7, r0, #1
90020efa:	f53f af69 	bmi.w	90020dd0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
90020efe:	42ba      	cmp	r2, r7
90020f00:	f6ff af66 	blt.w	90020dd0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
90020f04:	1c6f      	adds	r7, r5, #1
90020f06:	f53f af63 	bmi.w	90020dd0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
90020f0a:	42be      	cmp	r6, r7
90020f0c:	f6ff af60 	blt.w	90020dd0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
90020f10:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
90020f12:	b236      	sxth	r6, r6
90020f14:	b212      	sxth	r2, r2
90020f16:	9002      	str	r0, [sp, #8]
90020f18:	9601      	str	r6, [sp, #4]
90020f1a:	9200      	str	r2, [sp, #0]
90020f1c:	9813      	ldr	r0, [sp, #76]	; 0x4c
90020f1e:	e9cd 1705 	strd	r1, r7, [sp, #20]
90020f22:	e9cd 5303 	strd	r5, r3, [sp, #12]
90020f26:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
90020f2a:	4623      	mov	r3, r4
90020f2c:	f7ff fd59 	bl	900209e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
90020f30:	e74e      	b.n	90020dd0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
90020f32:	9a20      	ldr	r2, [sp, #128]	; 0x80
90020f34:	9820      	ldr	r0, [sp, #128]	; 0x80
90020f36:	f3c2 3103 	ubfx	r1, r2, #12, #4
90020f3a:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
90020f3c:	9a26      	ldr	r2, [sp, #152]	; 0x98
90020f3e:	1400      	asrs	r0, r0, #16
90020f40:	142d      	asrs	r5, r5, #16
90020f42:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90020f44:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
90020f48:	f3c3 3303 	ubfx	r3, r3, #12, #4
90020f4c:	fb02 5000 	mla	r0, r2, r0, r5
90020f50:	9d0d      	ldr	r5, [sp, #52]	; 0x34
90020f52:	f815 9000 	ldrb.w	r9, [r5, r0]
90020f56:	182e      	adds	r6, r5, r0
90020f58:	eb09 0949 	add.w	r9, r9, r9, lsl #1
90020f5c:	eb04 0509 	add.w	r5, r4, r9
90020f60:	2b00      	cmp	r3, #0
90020f62:	f000 8096 	beq.w	90021092 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
90020f66:	7877      	ldrb	r7, [r6, #1]
90020f68:	eb07 0747 	add.w	r7, r7, r7, lsl #1
90020f6c:	4427      	add	r7, r4
90020f6e:	2900      	cmp	r1, #0
90020f70:	f000 8097 	beq.w	900210a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
90020f74:	18b0      	adds	r0, r6, r2
90020f76:	5cb2      	ldrb	r2, [r6, r2]
90020f78:	7840      	ldrb	r0, [r0, #1]
90020f7a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90020f7e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90020f82:	4422      	add	r2, r4
90020f84:	4420      	add	r0, r4
90020f86:	b29b      	uxth	r3, r3
90020f88:	9e0c      	ldr	r6, [sp, #48]	; 0x30
90020f8a:	b289      	uxth	r1, r1
90020f8c:	f895 b002 	ldrb.w	fp, [r5, #2]
90020f90:	f8b6 c000 	ldrh.w	ip, [r6]
90020f94:	fb03 f801 	mul.w	r8, r3, r1
90020f98:	011b      	lsls	r3, r3, #4
90020f9a:	78be      	ldrb	r6, [r7, #2]
90020f9c:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
90020fa0:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
90020fa4:	eba3 0308 	sub.w	r3, r3, r8
90020fa8:	f814 9009 	ldrb.w	r9, [r4, r9]
90020fac:	b289      	uxth	r1, r1
90020fae:	b29b      	uxth	r3, r3
90020fb0:	ebae 0e01 	sub.w	lr, lr, r1
90020fb4:	435e      	muls	r6, r3
90020fb6:	fa1f fe8e 	uxth.w	lr, lr
90020fba:	9310      	str	r3, [sp, #64]	; 0x40
90020fbc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90020fbe:	fb0e 660b 	mla	r6, lr, fp, r6
90020fc2:	f892 b002 	ldrb.w	fp, [r2, #2]
90020fc6:	fb01 660b 	mla	r6, r1, fp, r6
90020fca:	f890 b002 	ldrb.w	fp, [r0, #2]
90020fce:	fb08 660b 	mla	r6, r8, fp, r6
90020fd2:	ea4f 2b2c 	mov.w	fp, ip, asr #8
90020fd6:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
90020fda:	f3c6 2607 	ubfx	r6, r6, #8, #8
90020fde:	fb1b fb03 	smulbb	fp, fp, r3
90020fe2:	9b10      	ldr	r3, [sp, #64]	; 0x40
90020fe4:	fb06 b60a 	mla	r6, r6, sl, fp
90020fe8:	f895 b001 	ldrb.w	fp, [r5, #1]
90020fec:	787d      	ldrb	r5, [r7, #1]
90020fee:	783f      	ldrb	r7, [r7, #0]
90020ff0:	b2b6      	uxth	r6, r6
90020ff2:	435d      	muls	r5, r3
90020ff4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90020ff6:	fb0e 550b 	mla	r5, lr, fp, r5
90020ffa:	f892 b001 	ldrb.w	fp, [r2, #1]
90020ffe:	fb01 550b 	mla	r5, r1, fp, r5
90021002:	f890 b001 	ldrb.w	fp, [r0, #1]
90021006:	fb08 550b 	mla	r5, r8, fp, r5
9002100a:	ea4f 0bec 	mov.w	fp, ip, asr #3
9002100e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
90021012:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
90021016:	f3c5 2507 	ubfx	r5, r5, #8, #8
9002101a:	fa5f fc8c 	uxtb.w	ip, ip
9002101e:	fb1b fb03 	smulbb	fp, fp, r3
90021022:	9b10      	ldr	r3, [sp, #64]	; 0x40
90021024:	437b      	muls	r3, r7
90021026:	7817      	ldrb	r7, [r2, #0]
90021028:	fb05 b50a 	mla	r5, r5, sl, fp
9002102c:	fb0e 3309 	mla	r3, lr, r9, r3
90021030:	b2ad      	uxth	r5, r5
90021032:	fb01 3307 	mla	r3, r1, r7, r3
90021036:	7807      	ldrb	r7, [r0, #0]
90021038:	f105 0b01 	add.w	fp, r5, #1
9002103c:	fb08 3707 	mla	r7, r8, r7, r3
90021040:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90021042:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
90021046:	fb1c fc03 	smulbb	ip, ip, r3
9002104a:	f3c7 2707 	ubfx	r7, r7, #8, #8
9002104e:	1c73      	adds	r3, r6, #1
90021050:	096d      	lsrs	r5, r5, #5
90021052:	fb07 c70a 	mla	r7, r7, sl, ip
90021056:	eb03 2616 	add.w	r6, r3, r6, lsr #8
9002105a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9002105e:	b2bf      	uxth	r7, r7
90021060:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90021062:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
90021066:	1c7a      	adds	r2, r7, #1
90021068:	eb02 2217 	add.w	r2, r2, r7, lsr #8
9002106c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
90021070:	4316      	orrs	r6, r2
90021072:	9a21      	ldr	r2, [sp, #132]	; 0x84
90021074:	432e      	orrs	r6, r5
90021076:	f823 6b02 	strh.w	r6, [r3], #2
9002107a:	930c      	str	r3, [sp, #48]	; 0x30
9002107c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
9002107e:	4413      	add	r3, r2
90021080:	9a22      	ldr	r2, [sp, #136]	; 0x88
90021082:	931f      	str	r3, [sp, #124]	; 0x7c
90021084:	9b20      	ldr	r3, [sp, #128]	; 0x80
90021086:	4413      	add	r3, r2
90021088:	9320      	str	r3, [sp, #128]	; 0x80
9002108a:	9b11      	ldr	r3, [sp, #68]	; 0x44
9002108c:	3b01      	subs	r3, #1
9002108e:	9311      	str	r3, [sp, #68]	; 0x44
90021090:	e6db      	b.n	90020e4a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
90021092:	b149      	cbz	r1, 900210a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
90021094:	5cb2      	ldrb	r2, [r6, r2]
90021096:	4628      	mov	r0, r5
90021098:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9002109c:	4422      	add	r2, r4
9002109e:	462f      	mov	r7, r5
900210a0:	e771      	b.n	90020f86 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
900210a2:	4628      	mov	r0, r5
900210a4:	462a      	mov	r2, r5
900210a6:	e76e      	b.n	90020f86 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
900210a8:	4628      	mov	r0, r5
900210aa:	462a      	mov	r2, r5
900210ac:	e7f7      	b.n	9002109e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
900210ae:	b015      	add	sp, #84	; 0x54
900210b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900210b4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
900210b4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
900210b8:	880f      	ldrh	r7, [r1, #0]
900210ba:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
900210be:	023c      	lsls	r4, r7, #8
900210c0:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
900210c4:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
900210c8:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
900210cc:	017c      	lsls	r4, r7, #5
900210ce:	00ff      	lsls	r7, r7, #3
900210d0:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
900210d4:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
900210d8:	b2ff      	uxtb	r7, r7
900210da:	ea4b 0404 	orr.w	r4, fp, r4
900210de:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
900210e2:	4327      	orrs	r7, r4
900210e4:	fb05 ca0e 	mla	sl, r5, lr, ip
900210e8:	2d00      	cmp	r5, #0
900210ea:	9701      	str	r7, [sp, #4]
900210ec:	eb02 080a 	add.w	r8, r2, sl
900210f0:	db7e      	blt.n	900211f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
900210f2:	45a9      	cmp	r9, r5
900210f4:	dd7c      	ble.n	900211f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
900210f6:	f1bc 0f00 	cmp.w	ip, #0
900210fa:	db77      	blt.n	900211ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
900210fc:	45e6      	cmp	lr, ip
900210fe:	dd75      	ble.n	900211ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
90021100:	f812 700a 	ldrb.w	r7, [r2, sl]
90021104:	eb07 0747 	add.w	r7, r7, r7, lsl #1
90021108:	441f      	add	r7, r3
9002110a:	f11c 0201 	adds.w	r2, ip, #1
9002110e:	d472      	bmi.n	900211f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
90021110:	4596      	cmp	lr, r2
90021112:	dd70      	ble.n	900211f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
90021114:	2800      	cmp	r0, #0
90021116:	d06e      	beq.n	900211f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
90021118:	f898 4001 	ldrb.w	r4, [r8, #1]
9002111c:	eb04 0444 	add.w	r4, r4, r4, lsl #1
90021120:	441c      	add	r4, r3
90021122:	3501      	adds	r5, #1
90021124:	d46b      	bmi.n	900211fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
90021126:	45a9      	cmp	r9, r5
90021128:	dd69      	ble.n	900211fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
9002112a:	2e00      	cmp	r6, #0
9002112c:	d067      	beq.n	900211fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
9002112e:	f1bc 0f00 	cmp.w	ip, #0
90021132:	db62      	blt.n	900211fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
90021134:	45e6      	cmp	lr, ip
90021136:	dd60      	ble.n	900211fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
90021138:	f818 500e 	ldrb.w	r5, [r8, lr]
9002113c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
90021140:	441d      	add	r5, r3
90021142:	f11c 0201 	adds.w	r2, ip, #1
90021146:	d45d      	bmi.n	90021204 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
90021148:	4596      	cmp	lr, r2
9002114a:	dd5b      	ble.n	90021204 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
9002114c:	2800      	cmp	r0, #0
9002114e:	d059      	beq.n	90021204 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
90021150:	44c6      	add	lr, r8
90021152:	f89e 2001 	ldrb.w	r2, [lr, #1]
90021156:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9002115a:	4413      	add	r3, r2
9002115c:	b280      	uxth	r0, r0
9002115e:	f897 e002 	ldrb.w	lr, [r7, #2]
90021162:	b2b2      	uxth	r2, r6
90021164:	f897 9000 	ldrb.w	r9, [r7]
90021168:	787f      	ldrb	r7, [r7, #1]
9002116a:	fb00 f602 	mul.w	r6, r0, r2
9002116e:	0100      	lsls	r0, r0, #4
90021170:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
90021174:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
90021178:	1b80      	subs	r0, r0, r6
9002117a:	fa1f fc82 	uxth.w	ip, r2
9002117e:	b282      	uxth	r2, r0
90021180:	78a0      	ldrb	r0, [r4, #2]
90021182:	eba8 080c 	sub.w	r8, r8, ip
90021186:	4350      	muls	r0, r2
90021188:	fa1f f888 	uxth.w	r8, r8
9002118c:	fb08 0e0e 	mla	lr, r8, lr, r0
90021190:	78a8      	ldrb	r0, [r5, #2]
90021192:	fb0c e000 	mla	r0, ip, r0, lr
90021196:	f893 e002 	ldrb.w	lr, [r3, #2]
9002119a:	fb06 0e0e 	mla	lr, r6, lr, r0
9002119e:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
900211a2:	f894 e000 	ldrb.w	lr, [r4]
900211a6:	fb02 fe0e 	mul.w	lr, r2, lr
900211aa:	fb08 e909 	mla	r9, r8, r9, lr
900211ae:	f895 e000 	ldrb.w	lr, [r5]
900211b2:	fb0c 990e 	mla	r9, ip, lr, r9
900211b6:	f893 e000 	ldrb.w	lr, [r3]
900211ba:	785b      	ldrb	r3, [r3, #1]
900211bc:	fb06 9e0e 	mla	lr, r6, lr, r9
900211c0:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
900211c4:	ea4e 0e00 	orr.w	lr, lr, r0
900211c8:	7860      	ldrb	r0, [r4, #1]
900211ca:	4350      	muls	r0, r2
900211cc:	786a      	ldrb	r2, [r5, #1]
900211ce:	fb08 0007 	mla	r0, r8, r7, r0
900211d2:	fb0c 0202 	mla	r2, ip, r2, r0
900211d6:	fb06 2303 	mla	r3, r6, r3, r2
900211da:	095b      	lsrs	r3, r3, #5
900211dc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
900211e0:	ea4e 0303 	orr.w	r3, lr, r3
900211e4:	800b      	strh	r3, [r1, #0]
900211e6:	b003      	add	sp, #12
900211e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900211ec:	af01      	add	r7, sp, #4
900211ee:	e78c      	b.n	9002110a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
900211f0:	ac01      	add	r4, sp, #4
900211f2:	4627      	mov	r7, r4
900211f4:	e795      	b.n	90021122 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
900211f6:	ac01      	add	r4, sp, #4
900211f8:	e793      	b.n	90021122 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
900211fa:	ad01      	add	r5, sp, #4
900211fc:	e7a1      	b.n	90021142 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
900211fe:	ab01      	add	r3, sp, #4
90021200:	461d      	mov	r5, r3
90021202:	e7ab      	b.n	9002115c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
90021204:	ab01      	add	r3, sp, #4
90021206:	e7a9      	b.n	9002115c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

90021208 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90021208:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002120c:	b08f      	sub	sp, #60	; 0x3c
9002120e:	920c      	str	r2, [sp, #48]	; 0x30
90021210:	9a1d      	ldr	r2, [sp, #116]	; 0x74
90021212:	900d      	str	r0, [sp, #52]	; 0x34
90021214:	910a      	str	r1, [sp, #40]	; 0x28
90021216:	6850      	ldr	r0, [r2, #4]
90021218:	9306      	str	r3, [sp, #24]
9002121a:	6812      	ldr	r2, [r2, #0]
9002121c:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
90021220:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
90021224:	fb00 1303 	mla	r3, r0, r3, r1
90021228:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9002122c:	9307      	str	r3, [sp, #28]
9002122e:	9b20      	ldr	r3, [sp, #128]	; 0x80
90021230:	681b      	ldr	r3, [r3, #0]
90021232:	9308      	str	r3, [sp, #32]
90021234:	9b20      	ldr	r3, [sp, #128]	; 0x80
90021236:	685c      	ldr	r4, [r3, #4]
90021238:	3404      	adds	r4, #4
9002123a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9002123c:	2b00      	cmp	r3, #0
9002123e:	dc03      	bgt.n	90021248 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
90021240:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90021242:	2b00      	cmp	r3, #0
90021244:	f340 81d5 	ble.w	900215f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
90021248:	9b20      	ldr	r3, [sp, #128]	; 0x80
9002124a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002124e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90021252:	1e48      	subs	r0, r1, #1
90021254:	1e56      	subs	r6, r2, #1
90021256:	9b06      	ldr	r3, [sp, #24]
90021258:	2b00      	cmp	r3, #0
9002125a:	f340 80b6 	ble.w	900213ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
9002125e:	ea5f 472b 	movs.w	r7, fp, asr #16
90021262:	ea4f 4325 	mov.w	r3, r5, asr #16
90021266:	d406      	bmi.n	90021276 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
90021268:	4287      	cmp	r7, r0
9002126a:	da04      	bge.n	90021276 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9002126c:	2b00      	cmp	r3, #0
9002126e:	db02      	blt.n	90021276 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
90021270:	42b3      	cmp	r3, r6
90021272:	f2c0 80ab 	blt.w	900213cc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
90021276:	3701      	adds	r7, #1
90021278:	f100 809c 	bmi.w	900213b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
9002127c:	42b9      	cmp	r1, r7
9002127e:	f2c0 8099 	blt.w	900213b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90021282:	3301      	adds	r3, #1
90021284:	f100 8096 	bmi.w	900213b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90021288:	429a      	cmp	r2, r3
9002128a:	f2c0 8093 	blt.w	900213b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
9002128e:	9b06      	ldr	r3, [sp, #24]
90021290:	930b      	str	r3, [sp, #44]	; 0x2c
90021292:	9b07      	ldr	r3, [sp, #28]
90021294:	9309      	str	r3, [sp, #36]	; 0x24
90021296:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90021298:	2b00      	cmp	r3, #0
9002129a:	f340 80b4 	ble.w	90021406 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
9002129e:	9820      	ldr	r0, [sp, #128]	; 0x80
900212a0:	142e      	asrs	r6, r5, #16
900212a2:	9a20      	ldr	r2, [sp, #128]	; 0x80
900212a4:	f3cb 3303 	ubfx	r3, fp, #12, #4
900212a8:	68c7      	ldr	r7, [r0, #12]
900212aa:	ea5f 402b 	movs.w	r0, fp, asr #16
900212ae:	f3c5 3103 	ubfx	r1, r5, #12, #4
900212b2:	6892      	ldr	r2, [r2, #8]
900212b4:	f100 80fb 	bmi.w	900214ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
900212b8:	f102 3cff 	add.w	ip, r2, #4294967295
900212bc:	4560      	cmp	r0, ip
900212be:	f280 80f6 	bge.w	900214ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
900212c2:	2e00      	cmp	r6, #0
900212c4:	f2c0 80f3 	blt.w	900214ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
900212c8:	f107 3cff 	add.w	ip, r7, #4294967295
900212cc:	4566      	cmp	r6, ip
900212ce:	f280 80ee 	bge.w	900214ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
900212d2:	b212      	sxth	r2, r2
900212d4:	fb06 0002 	mla	r0, r6, r2, r0
900212d8:	9e08      	ldr	r6, [sp, #32]
900212da:	1837      	adds	r7, r6, r0
900212dc:	5c30      	ldrb	r0, [r6, r0]
900212de:	eb00 0840 	add.w	r8, r0, r0, lsl #1
900212e2:	eb04 0c08 	add.w	ip, r4, r8
900212e6:	2b00      	cmp	r3, #0
900212e8:	f000 80d3 	beq.w	90021492 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
900212ec:	787e      	ldrb	r6, [r7, #1]
900212ee:	eb06 0646 	add.w	r6, r6, r6, lsl #1
900212f2:	4426      	add	r6, r4
900212f4:	2900      	cmp	r1, #0
900212f6:	f000 80d4 	beq.w	900214a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
900212fa:	18b8      	adds	r0, r7, r2
900212fc:	5cba      	ldrb	r2, [r7, r2]
900212fe:	7840      	ldrb	r0, [r0, #1]
90021300:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90021304:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90021308:	4422      	add	r2, r4
9002130a:	4420      	add	r0, r4
9002130c:	b29b      	uxth	r3, r3
9002130e:	78b7      	ldrb	r7, [r6, #2]
90021310:	b289      	uxth	r1, r1
90021312:	f89c a002 	ldrb.w	sl, [ip, #2]
90021316:	f89c c001 	ldrb.w	ip, [ip, #1]
9002131a:	fb03 f901 	mul.w	r9, r3, r1
9002131e:	011b      	lsls	r3, r3, #4
90021320:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
90021324:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
90021328:	eba3 0309 	sub.w	r3, r3, r9
9002132c:	b289      	uxth	r1, r1
9002132e:	b29b      	uxth	r3, r3
90021330:	ebae 0e01 	sub.w	lr, lr, r1
90021334:	435f      	muls	r7, r3
90021336:	fa1f fe8e 	uxth.w	lr, lr
9002133a:	fb0e 770a 	mla	r7, lr, sl, r7
9002133e:	f892 a002 	ldrb.w	sl, [r2, #2]
90021342:	fb01 770a 	mla	r7, r1, sl, r7
90021346:	f890 a002 	ldrb.w	sl, [r0, #2]
9002134a:	fb09 7a0a 	mla	sl, r9, sl, r7
9002134e:	f814 7008 	ldrb.w	r7, [r4, r8]
90021352:	f896 8000 	ldrb.w	r8, [r6]
90021356:	7876      	ldrb	r6, [r6, #1]
90021358:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
9002135c:	fb03 f808 	mul.w	r8, r3, r8
90021360:	4373      	muls	r3, r6
90021362:	fb0e 8807 	mla	r8, lr, r7, r8
90021366:	7817      	ldrb	r7, [r2, #0]
90021368:	fb0e 330c 	mla	r3, lr, ip, r3
9002136c:	fb01 8807 	mla	r8, r1, r7, r8
90021370:	7807      	ldrb	r7, [r0, #0]
90021372:	fb09 8707 	mla	r7, r9, r7, r8
90021376:	f3c7 27c4 	ubfx	r7, r7, #11, #5
9002137a:	ea47 070a 	orr.w	r7, r7, sl
9002137e:	f892 a001 	ldrb.w	sl, [r2, #1]
90021382:	fb01 310a 	mla	r1, r1, sl, r3
90021386:	f890 a001 	ldrb.w	sl, [r0, #1]
9002138a:	9b09      	ldr	r3, [sp, #36]	; 0x24
9002138c:	fb09 1a0a 	mla	sl, r9, sl, r1
90021390:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90021394:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
90021398:	ea47 070a 	orr.w	r7, r7, sl
9002139c:	801f      	strh	r7, [r3, #0]
9002139e:	9b09      	ldr	r3, [sp, #36]	; 0x24
900213a0:	3302      	adds	r3, #2
900213a2:	9309      	str	r3, [sp, #36]	; 0x24
900213a4:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
900213a6:	449b      	add	fp, r3
900213a8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
900213aa:	441d      	add	r5, r3
900213ac:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
900213ae:	3b01      	subs	r3, #1
900213b0:	930b      	str	r3, [sp, #44]	; 0x2c
900213b2:	e770      	b.n	90021296 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
900213b4:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
900213b6:	449b      	add	fp, r3
900213b8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
900213ba:	441d      	add	r5, r3
900213bc:	9b06      	ldr	r3, [sp, #24]
900213be:	3b01      	subs	r3, #1
900213c0:	9306      	str	r3, [sp, #24]
900213c2:	9b07      	ldr	r3, [sp, #28]
900213c4:	3302      	adds	r3, #2
900213c6:	9307      	str	r3, [sp, #28]
900213c8:	e745      	b.n	90021256 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
900213ca:	d023      	beq.n	90021414 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
900213cc:	9b06      	ldr	r3, [sp, #24]
900213ce:	981b      	ldr	r0, [sp, #108]	; 0x6c
900213d0:	3b01      	subs	r3, #1
900213d2:	fb00 b003 	mla	r0, r0, r3, fp
900213d6:	1400      	asrs	r0, r0, #16
900213d8:	f53f af59 	bmi.w	9002128e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
900213dc:	3901      	subs	r1, #1
900213de:	4288      	cmp	r0, r1
900213e0:	f6bf af55 	bge.w	9002128e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
900213e4:	991c      	ldr	r1, [sp, #112]	; 0x70
900213e6:	fb01 5303 	mla	r3, r1, r3, r5
900213ea:	141b      	asrs	r3, r3, #16
900213ec:	f53f af4f 	bmi.w	9002128e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
900213f0:	3a01      	subs	r2, #1
900213f2:	4293      	cmp	r3, r2
900213f4:	f6bf af4b 	bge.w	9002128e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
900213f8:	9b06      	ldr	r3, [sp, #24]
900213fa:	9309      	str	r3, [sp, #36]	; 0x24
900213fc:	9b07      	ldr	r3, [sp, #28]
900213fe:	930b      	str	r3, [sp, #44]	; 0x2c
90021400:	9b09      	ldr	r3, [sp, #36]	; 0x24
90021402:	2b00      	cmp	r3, #0
90021404:	dc70      	bgt.n	900214e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
90021406:	9b06      	ldr	r3, [sp, #24]
90021408:	9a07      	ldr	r2, [sp, #28]
9002140a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9002140e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90021412:	9307      	str	r3, [sp, #28]
90021414:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90021416:	2b00      	cmp	r3, #0
90021418:	f340 80eb 	ble.w	900215f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
9002141c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90021420:	9b18      	ldr	r3, [sp, #96]	; 0x60
90021422:	ee30 0a04 	vadd.f32	s0, s0, s8
90021426:	ee70 0aa4 	vadd.f32	s1, s1, s9
9002142a:	eef0 6a62 	vmov.f32	s13, s5
9002142e:	eec7 7a00 	vdiv.f32	s15, s14, s0
90021432:	ee31 1a05 	vadd.f32	s2, s2, s10
90021436:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002143a:	ee16 ba90 	vmov	fp, s13
9002143e:	eef0 6a43 	vmov.f32	s13, s6
90021442:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90021446:	ee16 5a90 	vmov	r5, s13
9002144a:	ee20 7aa7 	vmul.f32	s14, s1, s15
9002144e:	ee61 7a27 	vmul.f32	s15, s2, s15
90021452:	ee77 2a62 	vsub.f32	s5, s14, s5
90021456:	ee37 3ac3 	vsub.f32	s6, s15, s6
9002145a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9002145e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90021462:	ee12 2a90 	vmov	r2, s5
90021466:	eef0 2a47 	vmov.f32	s5, s14
9002146a:	fb92 f3f3 	sdiv	r3, r2, r3
9002146e:	ee13 2a10 	vmov	r2, s6
90021472:	931b      	str	r3, [sp, #108]	; 0x6c
90021474:	9b18      	ldr	r3, [sp, #96]	; 0x60
90021476:	eeb0 3a67 	vmov.f32	s6, s15
9002147a:	fb92 f3f3 	sdiv	r3, r2, r3
9002147e:	931c      	str	r3, [sp, #112]	; 0x70
90021480:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90021482:	9a0c      	ldr	r2, [sp, #48]	; 0x30
90021484:	3b01      	subs	r3, #1
90021486:	930a      	str	r3, [sp, #40]	; 0x28
90021488:	9b18      	ldr	r3, [sp, #96]	; 0x60
9002148a:	bf08      	it	eq
9002148c:	4613      	moveq	r3, r2
9002148e:	9306      	str	r3, [sp, #24]
90021490:	e6d3      	b.n	9002123a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
90021492:	b149      	cbz	r1, 900214a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
90021494:	5cba      	ldrb	r2, [r7, r2]
90021496:	4660      	mov	r0, ip
90021498:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9002149c:	4422      	add	r2, r4
9002149e:	4666      	mov	r6, ip
900214a0:	e734      	b.n	9002130c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
900214a2:	4660      	mov	r0, ip
900214a4:	4662      	mov	r2, ip
900214a6:	e731      	b.n	9002130c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
900214a8:	4660      	mov	r0, ip
900214aa:	4662      	mov	r2, ip
900214ac:	e7f7      	b.n	9002149e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
900214ae:	f110 0c01 	adds.w	ip, r0, #1
900214b2:	f53f af74 	bmi.w	9002139e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
900214b6:	4562      	cmp	r2, ip
900214b8:	f6ff af71 	blt.w	9002139e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
900214bc:	f116 0c01 	adds.w	ip, r6, #1
900214c0:	f53f af6d 	bmi.w	9002139e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
900214c4:	4567      	cmp	r7, ip
900214c6:	f6ff af6a 	blt.w	9002139e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
900214ca:	b23f      	sxth	r7, r7
900214cc:	b212      	sxth	r2, r2
900214ce:	9701      	str	r7, [sp, #4]
900214d0:	9200      	str	r2, [sp, #0]
900214d2:	e9cd 3104 	strd	r3, r1, [sp, #16]
900214d6:	e9cd 0602 	strd	r0, r6, [sp, #8]
900214da:	4623      	mov	r3, r4
900214dc:	980d      	ldr	r0, [sp, #52]	; 0x34
900214de:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
900214e2:	f7ff fde7 	bl	900210b4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
900214e6:	e75a      	b.n	9002139e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
900214e8:	9a20      	ldr	r2, [sp, #128]	; 0x80
900214ea:	ea4f 462b 	mov.w	r6, fp, asr #16
900214ee:	1428      	asrs	r0, r5, #16
900214f0:	f3cb 3303 	ubfx	r3, fp, #12, #4
900214f4:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
900214f8:	f3c5 3103 	ubfx	r1, r5, #12, #4
900214fc:	fb02 6000 	mla	r0, r2, r0, r6
90021500:	9e08      	ldr	r6, [sp, #32]
90021502:	f816 8000 	ldrb.w	r8, [r6, r0]
90021506:	1837      	adds	r7, r6, r0
90021508:	eb08 0848 	add.w	r8, r8, r8, lsl #1
9002150c:	eb04 0c08 	add.w	ip, r4, r8
90021510:	2b00      	cmp	r3, #0
90021512:	d060      	beq.n	900215d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ce>
90021514:	787e      	ldrb	r6, [r7, #1]
90021516:	eb06 0646 	add.w	r6, r6, r6, lsl #1
9002151a:	4426      	add	r6, r4
9002151c:	2900      	cmp	r1, #0
9002151e:	d062      	beq.n	900215e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3de>
90021520:	18b8      	adds	r0, r7, r2
90021522:	5cba      	ldrb	r2, [r7, r2]
90021524:	7840      	ldrb	r0, [r0, #1]
90021526:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9002152a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
9002152e:	4422      	add	r2, r4
90021530:	4420      	add	r0, r4
90021532:	b29b      	uxth	r3, r3
90021534:	78b7      	ldrb	r7, [r6, #2]
90021536:	b289      	uxth	r1, r1
90021538:	f89c a002 	ldrb.w	sl, [ip, #2]
9002153c:	f89c c001 	ldrb.w	ip, [ip, #1]
90021540:	fb03 f901 	mul.w	r9, r3, r1
90021544:	011b      	lsls	r3, r3, #4
90021546:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
9002154a:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
9002154e:	eba3 0309 	sub.w	r3, r3, r9
90021552:	b289      	uxth	r1, r1
90021554:	b29b      	uxth	r3, r3
90021556:	ebae 0e01 	sub.w	lr, lr, r1
9002155a:	435f      	muls	r7, r3
9002155c:	fa1f fe8e 	uxth.w	lr, lr
90021560:	fb0e 770a 	mla	r7, lr, sl, r7
90021564:	f892 a002 	ldrb.w	sl, [r2, #2]
90021568:	fb01 770a 	mla	r7, r1, sl, r7
9002156c:	f890 a002 	ldrb.w	sl, [r0, #2]
90021570:	fb09 7a0a 	mla	sl, r9, sl, r7
90021574:	f814 7008 	ldrb.w	r7, [r4, r8]
90021578:	f896 8000 	ldrb.w	r8, [r6]
9002157c:	7876      	ldrb	r6, [r6, #1]
9002157e:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
90021582:	fb03 f808 	mul.w	r8, r3, r8
90021586:	4373      	muls	r3, r6
90021588:	7856      	ldrb	r6, [r2, #1]
9002158a:	fb0e 8807 	mla	r8, lr, r7, r8
9002158e:	7817      	ldrb	r7, [r2, #0]
90021590:	fb0e 330c 	mla	r3, lr, ip, r3
90021594:	fb01 8807 	mla	r8, r1, r7, r8
90021598:	7807      	ldrb	r7, [r0, #0]
9002159a:	fb01 3306 	mla	r3, r1, r6, r3
9002159e:	fb09 8707 	mla	r7, r9, r7, r8
900215a2:	f3c7 27c4 	ubfx	r7, r7, #11, #5
900215a6:	ea47 070a 	orr.w	r7, r7, sl
900215aa:	f890 a001 	ldrb.w	sl, [r0, #1]
900215ae:	fb09 3a0a 	mla	sl, r9, sl, r3
900215b2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
900215b4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
900215b8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
900215bc:	ea47 070a 	orr.w	r7, r7, sl
900215c0:	f823 7b02 	strh.w	r7, [r3], #2
900215c4:	930b      	str	r3, [sp, #44]	; 0x2c
900215c6:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
900215c8:	449b      	add	fp, r3
900215ca:	9b1c      	ldr	r3, [sp, #112]	; 0x70
900215cc:	441d      	add	r5, r3
900215ce:	9b09      	ldr	r3, [sp, #36]	; 0x24
900215d0:	3b01      	subs	r3, #1
900215d2:	9309      	str	r3, [sp, #36]	; 0x24
900215d4:	e714      	b.n	90021400 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
900215d6:	b149      	cbz	r1, 900215ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
900215d8:	5cba      	ldrb	r2, [r7, r2]
900215da:	4660      	mov	r0, ip
900215dc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900215e0:	4422      	add	r2, r4
900215e2:	4666      	mov	r6, ip
900215e4:	e7a5      	b.n	90021532 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
900215e6:	4660      	mov	r0, ip
900215e8:	4662      	mov	r2, ip
900215ea:	e7a2      	b.n	90021532 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
900215ec:	4660      	mov	r0, ip
900215ee:	4662      	mov	r2, ip
900215f0:	e7f7      	b.n	900215e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3da>
900215f2:	b00f      	add	sp, #60	; 0x3c
900215f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900215f8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
900215f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900215fc:	b085      	sub	sp, #20
900215fe:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
90021602:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
90021606:	9102      	str	r1, [sp, #8]
90021608:	2c00      	cmp	r4, #0
9002160a:	fb04 710c 	mla	r1, r4, ip, r7
9002160e:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
90021612:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
90021616:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
9002161a:	eb02 0e01 	add.w	lr, r2, r1
9002161e:	f2c0 8122 	blt.w	90021866 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
90021622:	45a0      	cmp	r8, r4
90021624:	f340 811f 	ble.w	90021866 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
90021628:	2f00      	cmp	r7, #0
9002162a:	f2c0 811a 	blt.w	90021862 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
9002162e:	45bc      	cmp	ip, r7
90021630:	f340 8117 	ble.w	90021862 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
90021634:	5c52      	ldrb	r2, [r2, r1]
90021636:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
9002163a:	1c7a      	adds	r2, r7, #1
9002163c:	f100 8116 	bmi.w	9002186c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
90021640:	4594      	cmp	ip, r2
90021642:	f340 8113 	ble.w	9002186c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
90021646:	2e00      	cmp	r6, #0
90021648:	f000 8112 	beq.w	90021870 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
9002164c:	f89e 2001 	ldrb.w	r2, [lr, #1]
90021650:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
90021654:	3401      	adds	r4, #1
90021656:	f100 810f 	bmi.w	90021878 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
9002165a:	45a0      	cmp	r8, r4
9002165c:	f340 810c 	ble.w	90021878 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
90021660:	2800      	cmp	r0, #0
90021662:	f000 810c 	beq.w	9002187e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
90021666:	2f00      	cmp	r7, #0
90021668:	f2c0 8104 	blt.w	90021874 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
9002166c:	45bc      	cmp	ip, r7
9002166e:	f340 8101 	ble.w	90021874 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
90021672:	f81e 200c 	ldrb.w	r2, [lr, ip]
90021676:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
9002167a:	3701      	adds	r7, #1
9002167c:	f100 8102 	bmi.w	90021884 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
90021680:	45bc      	cmp	ip, r7
90021682:	f340 80ff 	ble.w	90021884 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
90021686:	2e00      	cmp	r6, #0
90021688:	f000 80fe 	beq.w	90021888 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
9002168c:	44f4      	add	ip, lr
9002168e:	f89c 2001 	ldrb.w	r2, [ip, #1]
90021692:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
90021696:	b2b6      	uxth	r6, r6
90021698:	b280      	uxth	r0, r0
9002169a:	ea4f 6a11 	mov.w	sl, r1, lsr #24
9002169e:	fb00 fe06 	mul.w	lr, r0, r6
900216a2:	0136      	lsls	r6, r6, #4
900216a4:	ea4f 6b15 	mov.w	fp, r5, lsr #24
900216a8:	ebce 1000 	rsb	r0, lr, r0, lsl #4
900216ac:	eba6 070e 	sub.w	r7, r6, lr
900216b0:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
900216b4:	ea4f 6914 	mov.w	r9, r4, lsr #24
900216b8:	b280      	uxth	r0, r0
900216ba:	b2bf      	uxth	r7, r7
900216bc:	1a1b      	subs	r3, r3, r0
900216be:	ea4f 6812 	mov.w	r8, r2, lsr #24
900216c2:	fb0a f607 	mul.w	r6, sl, r7
900216c6:	b29b      	uxth	r3, r3
900216c8:	fb0b 6603 	mla	r6, fp, r3, r6
900216cc:	fb00 6609 	mla	r6, r0, r9, r6
900216d0:	fb0e 6608 	mla	r6, lr, r8, r6
900216d4:	f3c6 2607 	ubfx	r6, r6, #8, #8
900216d8:	9600      	str	r6, [sp, #0]
900216da:	2e00      	cmp	r6, #0
900216dc:	f000 80be 	beq.w	9002185c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
900216e0:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
900216e4:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
900216e8:	9e02      	ldr	r6, [sp, #8]
900216ea:	fb0b fc0c 	mul.w	ip, fp, ip
900216ee:	fb0b f505 	mul.w	r5, fp, r5
900216f2:	8836      	ldrh	r6, [r6, #0]
900216f4:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
900216f8:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
900216fc:	9501      	str	r5, [sp, #4]
900216fe:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
90021702:	44dc      	add	ip, fp
90021704:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90021708:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
9002170c:	9503      	str	r5, [sp, #12]
9002170e:	9d01      	ldr	r5, [sp, #4]
90021710:	f505 7c80 	add.w	ip, r5, #256	; 0x100
90021714:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
90021718:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
9002171c:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
90021720:	fb0a fc0c 	mul.w	ip, sl, ip
90021724:	ea4f 2b15 	mov.w	fp, r5, lsr #8
90021728:	fb0a fa01 	mul.w	sl, sl, r1
9002172c:	ea4f 251c 	mov.w	r5, ip, lsr #8
90021730:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
90021734:	f50a 7180 	add.w	r1, sl, #256	; 0x100
90021738:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
9002173c:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
90021740:	4465      	add	r5, ip
90021742:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
90021746:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
9002174a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002174e:	fb09 fc0c 	mul.w	ip, r9, ip
90021752:	0a2d      	lsrs	r5, r5, #8
90021754:	fb09 f904 	mul.w	r9, r9, r4
90021758:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
9002175c:	ea4f 211c 	mov.w	r1, ip, lsr #8
90021760:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
90021764:	f509 7480 	add.w	r4, r9, #256	; 0x100
90021768:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
9002176c:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
90021770:	437d      	muls	r5, r7
90021772:	eb04 2919 	add.w	r9, r4, r9, lsr #8
90021776:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
9002177a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
9002177e:	4461      	add	r1, ip
90021780:	fb08 f404 	mul.w	r4, r8, r4
90021784:	ea4f 2919 	mov.w	r9, r9, lsr #8
90021788:	fb08 f802 	mul.w	r8, r8, r2
9002178c:	0a09      	lsrs	r1, r1, #8
9002178e:	0a22      	lsrs	r2, r4, #8
90021790:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
90021794:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
90021798:	fb07 f70a 	mul.w	r7, r7, sl
9002179c:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
900217a0:	4414      	add	r4, r2
900217a2:	f508 7280 	add.w	r2, r8, #256	; 0x100
900217a6:	0a24      	lsrs	r4, r4, #8
900217a8:	eb02 2818 	add.w	r8, r2, r8, lsr #8
900217ac:	9a03      	ldr	r2, [sp, #12]
900217ae:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
900217b2:	fb02 5503 	mla	r5, r2, r3, r5
900217b6:	ea4f 2818 	mov.w	r8, r8, lsr #8
900217ba:	9a00      	ldr	r2, [sp, #0]
900217bc:	fb04 540e 	mla	r4, r4, lr, r5
900217c0:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
900217c4:	1235      	asrs	r5, r6, #8
900217c6:	fb01 4100 	mla	r1, r1, r0, r4
900217ca:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
900217ce:	0a09      	lsrs	r1, r1, #8
900217d0:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
900217d4:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
900217d8:	fb03 7101 	mla	r1, r3, r1, r7
900217dc:	fb0e 1e08 	mla	lr, lr, r8, r1
900217e0:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
900217e4:	fb00 e101 	mla	r1, r0, r1, lr
900217e8:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
900217ec:	b287      	uxth	r7, r0
900217ee:	0a09      	lsrs	r1, r1, #8
900217f0:	437a      	muls	r2, r7
900217f2:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
900217f6:	1c53      	adds	r3, r2, #1
900217f8:	4321      	orrs	r1, r4
900217fa:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900217fe:	0c0a      	lsrs	r2, r1, #16
90021800:	f3c1 2407 	ubfx	r4, r1, #8, #8
90021804:	ea6f 2313 	mvn.w	r3, r3, lsr #8
90021808:	b2c8      	uxtb	r0, r1
9002180a:	fb12 f207 	smulbb	r2, r2, r7
9002180e:	fb14 f407 	smulbb	r4, r4, r7
90021812:	b2db      	uxtb	r3, r3
90021814:	fb10 f007 	smulbb	r0, r0, r7
90021818:	fb05 2503 	mla	r5, r5, r3, r2
9002181c:	10f2      	asrs	r2, r6, #3
9002181e:	00f6      	lsls	r6, r6, #3
90021820:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
90021824:	b2ad      	uxth	r5, r5
90021826:	b2f6      	uxtb	r6, r6
90021828:	fb02 4203 	mla	r2, r2, r3, r4
9002182c:	fb06 0303 	mla	r3, r6, r3, r0
90021830:	b294      	uxth	r4, r2
90021832:	b299      	uxth	r1, r3
90021834:	1c6b      	adds	r3, r5, #1
90021836:	1c62      	adds	r2, r4, #1
90021838:	eb03 2515 	add.w	r5, r3, r5, lsr #8
9002183c:	1c4b      	adds	r3, r1, #1
9002183e:	eb02 2214 	add.w	r2, r2, r4, lsr #8
90021842:	eb03 2311 	add.w	r3, r3, r1, lsr #8
90021846:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
9002184a:	0952      	lsrs	r2, r2, #5
9002184c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90021850:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90021854:	432b      	orrs	r3, r5
90021856:	4313      	orrs	r3, r2
90021858:	9a02      	ldr	r2, [sp, #8]
9002185a:	8013      	strh	r3, [r2, #0]
9002185c:	b005      	add	sp, #20
9002185e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90021862:	2500      	movs	r5, #0
90021864:	e6e9      	b.n	9002163a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
90021866:	2100      	movs	r1, #0
90021868:	460d      	mov	r5, r1
9002186a:	e6f3      	b.n	90021654 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
9002186c:	2100      	movs	r1, #0
9002186e:	e6f1      	b.n	90021654 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
90021870:	4631      	mov	r1, r6
90021872:	e6ef      	b.n	90021654 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
90021874:	2400      	movs	r4, #0
90021876:	e700      	b.n	9002167a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
90021878:	2200      	movs	r2, #0
9002187a:	4614      	mov	r4, r2
9002187c:	e70b      	b.n	90021696 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
9002187e:	4602      	mov	r2, r0
90021880:	4604      	mov	r4, r0
90021882:	e708      	b.n	90021696 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
90021884:	2200      	movs	r2, #0
90021886:	e706      	b.n	90021696 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
90021888:	4632      	mov	r2, r6
9002188a:	e704      	b.n	90021696 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

9002188c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9002188c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90021890:	b09f      	sub	sp, #124	; 0x7c
90021892:	921b      	str	r2, [sp, #108]	; 0x6c
90021894:	9309      	str	r3, [sp, #36]	; 0x24
90021896:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
90021898:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
9002189c:	901d      	str	r0, [sp, #116]	; 0x74
9002189e:	931c      	str	r3, [sp, #112]	; 0x70
900218a0:	6850      	ldr	r0, [r2, #4]
900218a2:	9119      	str	r1, [sp, #100]	; 0x64
900218a4:	6812      	ldr	r2, [r2, #0]
900218a6:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
900218a8:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
900218ac:	fb00 1303 	mla	r3, r0, r3, r1
900218b0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
900218b4:	930c      	str	r3, [sp, #48]	; 0x30
900218b6:	9b30      	ldr	r3, [sp, #192]	; 0xc0
900218b8:	681b      	ldr	r3, [r3, #0]
900218ba:	9312      	str	r3, [sp, #72]	; 0x48
900218bc:	9b30      	ldr	r3, [sp, #192]	; 0xc0
900218be:	685e      	ldr	r6, [r3, #4]
900218c0:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
900218c4:	3604      	adds	r6, #4
900218c6:	930d      	str	r3, [sp, #52]	; 0x34
900218c8:	9b19      	ldr	r3, [sp, #100]	; 0x64
900218ca:	2b00      	cmp	r3, #0
900218cc:	dc03      	bgt.n	900218d6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
900218ce:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
900218d0:	2b00      	cmp	r3, #0
900218d2:	f340 8387 	ble.w	90021fe4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
900218d6:	9b30      	ldr	r3, [sp, #192]	; 0xc0
900218d8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900218dc:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900218e0:	1e48      	subs	r0, r1, #1
900218e2:	1e57      	subs	r7, r2, #1
900218e4:	9b09      	ldr	r3, [sp, #36]	; 0x24
900218e6:	2b00      	cmp	r3, #0
900218e8:	f340 8194 	ble.w	90021c14 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x388>
900218ec:	9c29      	ldr	r4, [sp, #164]	; 0xa4
900218ee:	142b      	asrs	r3, r5, #16
900218f0:	ea5f 4c24 	movs.w	ip, r4, asr #16
900218f4:	d406      	bmi.n	90021904 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900218f6:	4584      	cmp	ip, r0
900218f8:	da04      	bge.n	90021904 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900218fa:	2b00      	cmp	r3, #0
900218fc:	db02      	blt.n	90021904 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900218fe:	42bb      	cmp	r3, r7
90021900:	f2c0 8189 	blt.w	90021c16 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90021904:	f11c 0c01 	adds.w	ip, ip, #1
90021908:	f100 8177 	bmi.w	90021bfa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
9002190c:	4561      	cmp	r1, ip
9002190e:	f2c0 8174 	blt.w	90021bfa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
90021912:	3301      	adds	r3, #1
90021914:	f100 8171 	bmi.w	90021bfa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
90021918:	429a      	cmp	r2, r3
9002191a:	f2c0 816e 	blt.w	90021bfa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
9002191e:	9b09      	ldr	r3, [sp, #36]	; 0x24
90021920:	9f0c      	ldr	r7, [sp, #48]	; 0x30
90021922:	931a      	str	r3, [sp, #104]	; 0x68
90021924:	9b1a      	ldr	r3, [sp, #104]	; 0x68
90021926:	2b00      	cmp	r3, #0
90021928:	f340 8193 	ble.w	90021c52 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c6>
9002192c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
9002192e:	ea4f 4c25 	mov.w	ip, r5, asr #16
90021932:	f3c5 3103 	ubfx	r1, r5, #12, #4
90021936:	f3c3 3203 	ubfx	r2, r3, #12, #4
9002193a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
9002193c:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
90021940:	9b29      	ldr	r3, [sp, #164]	; 0xa4
90021942:	141b      	asrs	r3, r3, #16
90021944:	f100 81d6 	bmi.w	90021cf4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
90021948:	f100 38ff 	add.w	r8, r0, #4294967295
9002194c:	4543      	cmp	r3, r8
9002194e:	f280 81d1 	bge.w	90021cf4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
90021952:	f1bc 0f00 	cmp.w	ip, #0
90021956:	f2c0 81cd 	blt.w	90021cf4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
9002195a:	f10e 38ff 	add.w	r8, lr, #4294967295
9002195e:	45c4      	cmp	ip, r8
90021960:	f280 81c8 	bge.w	90021cf4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
90021964:	b200      	sxth	r0, r0
90021966:	9c12      	ldr	r4, [sp, #72]	; 0x48
90021968:	fb0c 3300 	mla	r3, ip, r0, r3
9002196c:	eb04 0803 	add.w	r8, r4, r3
90021970:	5ce3      	ldrb	r3, [r4, r3]
90021972:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
90021976:	ea4f 6e13 	mov.w	lr, r3, lsr #24
9002197a:	2a00      	cmp	r2, #0
9002197c:	f000 81af 	beq.w	90021cde <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90021980:	f898 c001 	ldrb.w	ip, [r8, #1]
90021984:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
90021988:	940e      	str	r4, [sp, #56]	; 0x38
9002198a:	0e24      	lsrs	r4, r4, #24
9002198c:	9415      	str	r4, [sp, #84]	; 0x54
9002198e:	b179      	cbz	r1, 900219b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
90021990:	eb08 0c00 	add.w	ip, r8, r0
90021994:	f818 0000 	ldrb.w	r0, [r8, r0]
90021998:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
9002199c:	900a      	str	r0, [sp, #40]	; 0x28
9002199e:	0e00      	lsrs	r0, r0, #24
900219a0:	9013      	str	r0, [sp, #76]	; 0x4c
900219a2:	f89c 0001 	ldrb.w	r0, [ip, #1]
900219a6:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
900219aa:	900f      	str	r0, [sp, #60]	; 0x3c
900219ac:	0e00      	lsrs	r0, r0, #24
900219ae:	9016      	str	r0, [sp, #88]	; 0x58
900219b0:	b292      	uxth	r2, r2
900219b2:	9815      	ldr	r0, [sp, #84]	; 0x54
900219b4:	b289      	uxth	r1, r1
900219b6:	9c13      	ldr	r4, [sp, #76]	; 0x4c
900219b8:	fb02 f901 	mul.w	r9, r2, r1
900219bc:	0112      	lsls	r2, r2, #4
900219be:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
900219c2:	eba2 0809 	sub.w	r8, r2, r9
900219c6:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
900219ca:	b289      	uxth	r1, r1
900219cc:	fa1f f888 	uxth.w	r8, r8
900219d0:	1a52      	subs	r2, r2, r1
900219d2:	fb08 f000 	mul.w	r0, r8, r0
900219d6:	b292      	uxth	r2, r2
900219d8:	fb02 000e 	mla	r0, r2, lr, r0
900219dc:	fb01 0004 	mla	r0, r1, r4, r0
900219e0:	9c16      	ldr	r4, [sp, #88]	; 0x58
900219e2:	fb09 0004 	mla	r0, r9, r4, r0
900219e6:	f3c0 2007 	ubfx	r0, r0, #8, #8
900219ea:	2800      	cmp	r0, #0
900219ec:	f000 80fa 	beq.w	90021be4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900219f0:	f1be 0fff 	cmp.w	lr, #255	; 0xff
900219f4:	d01b      	beq.n	90021a2e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
900219f6:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
900219fa:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
900219fe:	fb0e fa0a 	mul.w	sl, lr, sl
90021a02:	fb0e fe03 	mul.w	lr, lr, r3
90021a06:	ea4f 231a 	mov.w	r3, sl, lsr #8
90021a0a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
90021a0e:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
90021a12:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90021a16:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
90021a1a:	4453      	add	r3, sl
90021a1c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90021a20:	0a1b      	lsrs	r3, r3, #8
90021a22:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
90021a26:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90021a2a:	ea43 030c 	orr.w	r3, r3, ip
90021a2e:	9c15      	ldr	r4, [sp, #84]	; 0x54
90021a30:	2cff      	cmp	r4, #255	; 0xff
90021a32:	d021      	beq.n	90021a78 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
90021a34:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90021a36:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
90021a3a:	9c15      	ldr	r4, [sp, #84]	; 0x54
90021a3c:	fb04 fb0b 	mul.w	fp, r4, fp
90021a40:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90021a42:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90021a46:	9c15      	ldr	r4, [sp, #84]	; 0x54
90021a48:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90021a4c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90021a50:	fb04 fa0a 	mul.w	sl, r4, sl
90021a54:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90021a58:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90021a5c:	44de      	add	lr, fp
90021a5e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90021a62:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90021a66:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90021a6a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90021a6e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90021a72:	ea4e 040a 	orr.w	r4, lr, sl
90021a76:	940e      	str	r4, [sp, #56]	; 0x38
90021a78:	9c13      	ldr	r4, [sp, #76]	; 0x4c
90021a7a:	2cff      	cmp	r4, #255	; 0xff
90021a7c:	d021      	beq.n	90021ac2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
90021a7e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
90021a80:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
90021a84:	9c13      	ldr	r4, [sp, #76]	; 0x4c
90021a86:	fb04 fb0b 	mul.w	fp, r4, fp
90021a8a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
90021a8c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90021a90:	9c13      	ldr	r4, [sp, #76]	; 0x4c
90021a92:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90021a96:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90021a9a:	fb04 fa0a 	mul.w	sl, r4, sl
90021a9e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90021aa2:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90021aa6:	44de      	add	lr, fp
90021aa8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90021aac:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90021ab0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90021ab4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90021ab8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90021abc:	ea4e 040a 	orr.w	r4, lr, sl
90021ac0:	940a      	str	r4, [sp, #40]	; 0x28
90021ac2:	9c16      	ldr	r4, [sp, #88]	; 0x58
90021ac4:	2cff      	cmp	r4, #255	; 0xff
90021ac6:	d021      	beq.n	90021b0c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x280>
90021ac8:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
90021aca:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
90021ace:	9c16      	ldr	r4, [sp, #88]	; 0x58
90021ad0:	fb04 fb0b 	mul.w	fp, r4, fp
90021ad4:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
90021ad6:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90021ada:	9c16      	ldr	r4, [sp, #88]	; 0x58
90021adc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90021ae0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90021ae4:	fb04 fa0a 	mul.w	sl, r4, sl
90021ae8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90021aec:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90021af0:	44de      	add	lr, fp
90021af2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90021af6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90021afa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90021afe:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90021b02:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90021b06:	ea4e 040a 	orr.w	r4, lr, sl
90021b0a:	940f      	str	r4, [sp, #60]	; 0x3c
90021b0c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90021b0e:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
90021b12:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90021b16:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
90021b1a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
90021b1c:	fb08 fc0c 	mul.w	ip, r8, ip
90021b20:	fb02 cc0e 	mla	ip, r2, lr, ip
90021b24:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
90021b28:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
90021b2a:	fb01 cc0e 	mla	ip, r1, lr, ip
90021b2e:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
90021b32:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90021b34:	fb09 cc0e 	mla	ip, r9, lr, ip
90021b38:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
90021b3c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
90021b3e:	fb08 f80e 	mul.w	r8, r8, lr
90021b42:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90021b46:	fb02 8303 	mla	r3, r2, r3, r8
90021b4a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
90021b4c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90021b50:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
90021b54:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90021b56:	fb01 330a 	mla	r3, r1, sl, r3
90021b5a:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
90021b5e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
90021b60:	fb09 3901 	mla	r9, r9, r1, r3
90021b64:	883b      	ldrh	r3, [r7, #0]
90021b66:	4342      	muls	r2, r0
90021b68:	ea4f 2919 	mov.w	r9, r9, lsr #8
90021b6c:	1c50      	adds	r0, r2, #1
90021b6e:	1219      	asrs	r1, r3, #8
90021b70:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
90021b74:	eb00 2012 	add.w	r0, r0, r2, lsr #8
90021b78:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
90021b7c:	ea4c 0c09 	orr.w	ip, ip, r9
90021b80:	ea6f 2010 	mvn.w	r0, r0, lsr #8
90021b84:	ea4f 421c 	mov.w	r2, ip, lsr #16
90021b88:	f3cc 2e07 	ubfx	lr, ip, #8, #8
90021b8c:	b2c0      	uxtb	r0, r0
90021b8e:	fb12 f204 	smulbb	r2, r2, r4
90021b92:	fa5f fc8c 	uxtb.w	ip, ip
90021b96:	fb1e fe04 	smulbb	lr, lr, r4
90021b9a:	fb01 2100 	mla	r1, r1, r0, r2
90021b9e:	10da      	asrs	r2, r3, #3
90021ba0:	fb1c fc04 	smulbb	ip, ip, r4
90021ba4:	00db      	lsls	r3, r3, #3
90021ba6:	b289      	uxth	r1, r1
90021ba8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
90021bac:	b2db      	uxtb	r3, r3
90021bae:	fb02 e200 	mla	r2, r2, r0, lr
90021bb2:	fb03 c300 	mla	r3, r3, r0, ip
90021bb6:	b292      	uxth	r2, r2
90021bb8:	fa1f fc83 	uxth.w	ip, r3
90021bbc:	1c4b      	adds	r3, r1, #1
90021bbe:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90021bc2:	f10c 0301 	add.w	r3, ip, #1
90021bc6:	eb03 231c 	add.w	r3, r3, ip, lsr #8
90021bca:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
90021bce:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90021bd2:	430b      	orrs	r3, r1
90021bd4:	1c51      	adds	r1, r2, #1
90021bd6:	eb01 2212 	add.w	r2, r1, r2, lsr #8
90021bda:	0952      	lsrs	r2, r2, #5
90021bdc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90021be0:	4313      	orrs	r3, r2
90021be2:	803b      	strh	r3, [r7, #0]
90021be4:	9b2b      	ldr	r3, [sp, #172]	; 0xac
90021be6:	3702      	adds	r7, #2
90021be8:	9a29      	ldr	r2, [sp, #164]	; 0xa4
90021bea:	441a      	add	r2, r3
90021bec:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90021bee:	441d      	add	r5, r3
90021bf0:	9b1a      	ldr	r3, [sp, #104]	; 0x68
90021bf2:	9229      	str	r2, [sp, #164]	; 0xa4
90021bf4:	3b01      	subs	r3, #1
90021bf6:	931a      	str	r3, [sp, #104]	; 0x68
90021bf8:	e694      	b.n	90021924 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
90021bfa:	9b2b      	ldr	r3, [sp, #172]	; 0xac
90021bfc:	9c29      	ldr	r4, [sp, #164]	; 0xa4
90021bfe:	441c      	add	r4, r3
90021c00:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90021c02:	441d      	add	r5, r3
90021c04:	9b09      	ldr	r3, [sp, #36]	; 0x24
90021c06:	9429      	str	r4, [sp, #164]	; 0xa4
90021c08:	3b01      	subs	r3, #1
90021c0a:	9309      	str	r3, [sp, #36]	; 0x24
90021c0c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90021c0e:	3302      	adds	r3, #2
90021c10:	930c      	str	r3, [sp, #48]	; 0x30
90021c12:	e667      	b.n	900218e4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
90021c14:	d024      	beq.n	90021c60 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d4>
90021c16:	9b09      	ldr	r3, [sp, #36]	; 0x24
90021c18:	982b      	ldr	r0, [sp, #172]	; 0xac
90021c1a:	3b01      	subs	r3, #1
90021c1c:	9c29      	ldr	r4, [sp, #164]	; 0xa4
90021c1e:	fb00 4003 	mla	r0, r0, r3, r4
90021c22:	1400      	asrs	r0, r0, #16
90021c24:	f53f ae7b 	bmi.w	9002191e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90021c28:	3901      	subs	r1, #1
90021c2a:	4288      	cmp	r0, r1
90021c2c:	f6bf ae77 	bge.w	9002191e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90021c30:	992c      	ldr	r1, [sp, #176]	; 0xb0
90021c32:	fb01 5303 	mla	r3, r1, r3, r5
90021c36:	141b      	asrs	r3, r3, #16
90021c38:	f53f ae71 	bmi.w	9002191e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90021c3c:	3a01      	subs	r2, #1
90021c3e:	4293      	cmp	r3, r2
90021c40:	f6bf ae6d 	bge.w	9002191e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90021c44:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
90021c48:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
90021c4c:	f1bb 0f00 	cmp.w	fp, #0
90021c50:	dc70      	bgt.n	90021d34 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
90021c52:	9b09      	ldr	r3, [sp, #36]	; 0x24
90021c54:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90021c58:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90021c5a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
90021c5e:	930c      	str	r3, [sp, #48]	; 0x30
90021c60:	9b19      	ldr	r3, [sp, #100]	; 0x64
90021c62:	2b00      	cmp	r3, #0
90021c64:	f340 81be 	ble.w	90021fe4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
90021c68:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90021c6c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90021c6e:	ee30 0a04 	vadd.f32	s0, s0, s8
90021c72:	ee70 0aa4 	vadd.f32	s1, s1, s9
90021c76:	eef0 6a62 	vmov.f32	s13, s5
90021c7a:	eec7 7a00 	vdiv.f32	s15, s14, s0
90021c7e:	ee31 1a05 	vadd.f32	s2, s2, s10
90021c82:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90021c86:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
90021c8a:	eef0 6a43 	vmov.f32	s13, s6
90021c8e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90021c92:	ee16 5a90 	vmov	r5, s13
90021c96:	ee20 7aa7 	vmul.f32	s14, s1, s15
90021c9a:	ee61 7a27 	vmul.f32	s15, s2, s15
90021c9e:	ee77 2a62 	vsub.f32	s5, s14, s5
90021ca2:	ee37 3ac3 	vsub.f32	s6, s15, s6
90021ca6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90021caa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90021cae:	ee12 2a90 	vmov	r2, s5
90021cb2:	eef0 2a47 	vmov.f32	s5, s14
90021cb6:	fb92 f3f3 	sdiv	r3, r2, r3
90021cba:	ee13 2a10 	vmov	r2, s6
90021cbe:	932b      	str	r3, [sp, #172]	; 0xac
90021cc0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90021cc2:	eeb0 3a67 	vmov.f32	s6, s15
90021cc6:	fb92 f3f3 	sdiv	r3, r2, r3
90021cca:	932c      	str	r3, [sp, #176]	; 0xb0
90021ccc:	9b19      	ldr	r3, [sp, #100]	; 0x64
90021cce:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
90021cd0:	3b01      	subs	r3, #1
90021cd2:	9319      	str	r3, [sp, #100]	; 0x64
90021cd4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90021cd6:	bf08      	it	eq
90021cd8:	4613      	moveq	r3, r2
90021cda:	9309      	str	r3, [sp, #36]	; 0x24
90021cdc:	e5f4      	b.n	900218c8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
90021cde:	2900      	cmp	r1, #0
90021ce0:	f43f ae66 	beq.w	900219b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
90021ce4:	f818 0000 	ldrb.w	r0, [r8, r0]
90021ce8:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
90021cec:	900a      	str	r0, [sp, #40]	; 0x28
90021cee:	0e00      	lsrs	r0, r0, #24
90021cf0:	9013      	str	r0, [sp, #76]	; 0x4c
90021cf2:	e65d      	b.n	900219b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
90021cf4:	f113 0801 	adds.w	r8, r3, #1
90021cf8:	f53f af74 	bmi.w	90021be4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90021cfc:	4540      	cmp	r0, r8
90021cfe:	f6ff af71 	blt.w	90021be4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90021d02:	f11c 0801 	adds.w	r8, ip, #1
90021d06:	f53f af6d 	bmi.w	90021be4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90021d0a:	45c6      	cmp	lr, r8
90021d0c:	f6ff af6a 	blt.w	90021be4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90021d10:	9c1c      	ldr	r4, [sp, #112]	; 0x70
90021d12:	b200      	sxth	r0, r0
90021d14:	9302      	str	r3, [sp, #8]
90021d16:	fa0f f38e 	sxth.w	r3, lr
90021d1a:	9000      	str	r0, [sp, #0]
90021d1c:	9301      	str	r3, [sp, #4]
90021d1e:	4633      	mov	r3, r6
90021d20:	981d      	ldr	r0, [sp, #116]	; 0x74
90021d22:	e9cd 1405 	strd	r1, r4, [sp, #20]
90021d26:	e9cd c203 	strd	ip, r2, [sp, #12]
90021d2a:	4639      	mov	r1, r7
90021d2c:	9a12      	ldr	r2, [sp, #72]	; 0x48
90021d2e:	f7ff fc63 	bl	900215f8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
90021d32:	e757      	b.n	90021be4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90021d34:	9b29      	ldr	r3, [sp, #164]	; 0xa4
90021d36:	f3c5 3003 	ubfx	r0, r5, #12, #4
90021d3a:	9c29      	ldr	r4, [sp, #164]	; 0xa4
90021d3c:	f3c3 3203 	ubfx	r2, r3, #12, #4
90021d40:	9b30      	ldr	r3, [sp, #192]	; 0xc0
90021d42:	1427      	asrs	r7, r4, #16
90021d44:	9c12      	ldr	r4, [sp, #72]	; 0x48
90021d46:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90021d4a:	142b      	asrs	r3, r5, #16
90021d4c:	fb01 7303 	mla	r3, r1, r3, r7
90021d50:	18e7      	adds	r7, r4, r3
90021d52:	5ce3      	ldrb	r3, [r4, r3]
90021d54:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
90021d58:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90021d5c:	2a00      	cmp	r2, #0
90021d5e:	f000 8137 	beq.w	90021fd0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x744>
90021d62:	f897 e001 	ldrb.w	lr, [r7, #1]
90021d66:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
90021d6a:	9410      	str	r4, [sp, #64]	; 0x40
90021d6c:	0e24      	lsrs	r4, r4, #24
90021d6e:	9417      	str	r4, [sp, #92]	; 0x5c
90021d70:	b170      	cbz	r0, 90021d90 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
90021d72:	eb07 0e01 	add.w	lr, r7, r1
90021d76:	5c79      	ldrb	r1, [r7, r1]
90021d78:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90021d7c:	910b      	str	r1, [sp, #44]	; 0x2c
90021d7e:	0e09      	lsrs	r1, r1, #24
90021d80:	9114      	str	r1, [sp, #80]	; 0x50
90021d82:	f89e 1001 	ldrb.w	r1, [lr, #1]
90021d86:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90021d8a:	9111      	str	r1, [sp, #68]	; 0x44
90021d8c:	0e09      	lsrs	r1, r1, #24
90021d8e:	9118      	str	r1, [sp, #96]	; 0x60
90021d90:	b292      	uxth	r2, r2
90021d92:	9917      	ldr	r1, [sp, #92]	; 0x5c
90021d94:	b280      	uxth	r0, r0
90021d96:	9c14      	ldr	r4, [sp, #80]	; 0x50
90021d98:	fb02 f800 	mul.w	r8, r2, r0
90021d9c:	0112      	lsls	r2, r2, #4
90021d9e:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
90021da2:	eba2 0e08 	sub.w	lr, r2, r8
90021da6:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
90021daa:	b280      	uxth	r0, r0
90021dac:	fa1f fe8e 	uxth.w	lr, lr
90021db0:	1a12      	subs	r2, r2, r0
90021db2:	fb0e f101 	mul.w	r1, lr, r1
90021db6:	b292      	uxth	r2, r2
90021db8:	fb02 110c 	mla	r1, r2, ip, r1
90021dbc:	fb00 1104 	mla	r1, r0, r4, r1
90021dc0:	9c18      	ldr	r4, [sp, #96]	; 0x60
90021dc2:	fb08 1104 	mla	r1, r8, r4, r1
90021dc6:	f3c1 2107 	ubfx	r1, r1, #8, #8
90021dca:	2900      	cmp	r1, #0
90021dcc:	f000 80f5 	beq.w	90021fba <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72e>
90021dd0:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
90021dd4:	d019      	beq.n	90021e0a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57e>
90021dd6:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
90021dda:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90021dde:	fb0c fa0a 	mul.w	sl, ip, sl
90021de2:	fb0c fc03 	mul.w	ip, ip, r3
90021de6:	ea4f 231a 	mov.w	r3, sl, lsr #8
90021dea:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
90021dee:	f50c 7780 	add.w	r7, ip, #256	; 0x100
90021df2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90021df6:	eb07 271c 	add.w	r7, r7, ip, lsr #8
90021dfa:	4453      	add	r3, sl
90021dfc:	0a3f      	lsrs	r7, r7, #8
90021dfe:	0a1b      	lsrs	r3, r3, #8
90021e00:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
90021e04:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90021e08:	433b      	orrs	r3, r7
90021e0a:	9c17      	ldr	r4, [sp, #92]	; 0x5c
90021e0c:	2cff      	cmp	r4, #255	; 0xff
90021e0e:	d020      	beq.n	90021e52 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c6>
90021e10:	9c10      	ldr	r4, [sp, #64]	; 0x40
90021e12:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
90021e16:	9c17      	ldr	r4, [sp, #92]	; 0x5c
90021e18:	4367      	muls	r7, r4
90021e1a:	9c10      	ldr	r4, [sp, #64]	; 0x40
90021e1c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90021e20:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90021e24:	9c17      	ldr	r4, [sp, #92]	; 0x5c
90021e26:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90021e2a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90021e2e:	fb04 fa0a 	mul.w	sl, r4, sl
90021e32:	44bc      	add	ip, r7
90021e34:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90021e38:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90021e3c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90021e40:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90021e44:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90021e48:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90021e4c:	ea4c 040a 	orr.w	r4, ip, sl
90021e50:	9410      	str	r4, [sp, #64]	; 0x40
90021e52:	9c14      	ldr	r4, [sp, #80]	; 0x50
90021e54:	2cff      	cmp	r4, #255	; 0xff
90021e56:	d020      	beq.n	90021e9a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60e>
90021e58:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90021e5a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
90021e5e:	9c14      	ldr	r4, [sp, #80]	; 0x50
90021e60:	4367      	muls	r7, r4
90021e62:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90021e64:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90021e68:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90021e6c:	9c14      	ldr	r4, [sp, #80]	; 0x50
90021e6e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90021e72:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90021e76:	fb04 fa0a 	mul.w	sl, r4, sl
90021e7a:	44bc      	add	ip, r7
90021e7c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90021e80:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90021e84:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90021e88:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90021e8c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90021e90:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90021e94:	ea4c 040a 	orr.w	r4, ip, sl
90021e98:	940b      	str	r4, [sp, #44]	; 0x2c
90021e9a:	9c18      	ldr	r4, [sp, #96]	; 0x60
90021e9c:	2cff      	cmp	r4, #255	; 0xff
90021e9e:	d020      	beq.n	90021ee2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x656>
90021ea0:	9c11      	ldr	r4, [sp, #68]	; 0x44
90021ea2:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
90021ea6:	9c18      	ldr	r4, [sp, #96]	; 0x60
90021ea8:	4367      	muls	r7, r4
90021eaa:	9c11      	ldr	r4, [sp, #68]	; 0x44
90021eac:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90021eb0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90021eb4:	9c18      	ldr	r4, [sp, #96]	; 0x60
90021eb6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90021eba:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90021ebe:	fb04 fa0a 	mul.w	sl, r4, sl
90021ec2:	44bc      	add	ip, r7
90021ec4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90021ec8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90021ecc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90021ed0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90021ed4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90021ed8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90021edc:	ea4c 040a 	orr.w	r4, ip, sl
90021ee0:	9411      	str	r4, [sp, #68]	; 0x44
90021ee2:	9c10      	ldr	r4, [sp, #64]	; 0x40
90021ee4:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
90021ee8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90021eec:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
90021ef0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90021ef2:	fb0e f707 	mul.w	r7, lr, r7
90021ef6:	fb02 770c 	mla	r7, r2, ip, r7
90021efa:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
90021efe:	9c11      	ldr	r4, [sp, #68]	; 0x44
90021f00:	fb00 770c 	mla	r7, r0, ip, r7
90021f04:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
90021f08:	9c10      	ldr	r4, [sp, #64]	; 0x40
90021f0a:	fb08 770c 	mla	r7, r8, ip, r7
90021f0e:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
90021f12:	9c0d      	ldr	r4, [sp, #52]	; 0x34
90021f14:	fb0e fe0c 	mul.w	lr, lr, ip
90021f18:	0a3f      	lsrs	r7, r7, #8
90021f1a:	fb02 e303 	mla	r3, r2, r3, lr
90021f1e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
90021f20:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
90021f24:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
90021f28:	9a11      	ldr	r2, [sp, #68]	; 0x44
90021f2a:	fb00 330a 	mla	r3, r0, sl, r3
90021f2e:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
90021f32:	f8b9 0000 	ldrh.w	r0, [r9]
90021f36:	fb08 3c0c 	mla	ip, r8, ip, r3
90021f3a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90021f3c:	1202      	asrs	r2, r0, #8
90021f3e:	434b      	muls	r3, r1
90021f40:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90021f44:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
90021f48:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
90021f4c:	1c59      	adds	r1, r3, #1
90021f4e:	ea47 070c 	orr.w	r7, r7, ip
90021f52:	eb01 2113 	add.w	r1, r1, r3, lsr #8
90021f56:	0c3b      	lsrs	r3, r7, #16
90021f58:	ea6f 2111 	mvn.w	r1, r1, lsr #8
90021f5c:	f3c7 2c07 	ubfx	ip, r7, #8, #8
90021f60:	b2ff      	uxtb	r7, r7
90021f62:	fb13 f304 	smulbb	r3, r3, r4
90021f66:	b2c9      	uxtb	r1, r1
90021f68:	fb1c fc04 	smulbb	ip, ip, r4
90021f6c:	fb02 3201 	mla	r2, r2, r1, r3
90021f70:	10c3      	asrs	r3, r0, #3
90021f72:	fb17 f704 	smulbb	r7, r7, r4
90021f76:	00c0      	lsls	r0, r0, #3
90021f78:	b292      	uxth	r2, r2
90021f7a:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
90021f7e:	b2c0      	uxtb	r0, r0
90021f80:	fb03 c301 	mla	r3, r3, r1, ip
90021f84:	f102 0c01 	add.w	ip, r2, #1
90021f88:	fb00 7001 	mla	r0, r0, r1, r7
90021f8c:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
90021f90:	b280      	uxth	r0, r0
90021f92:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
90021f96:	b29b      	uxth	r3, r3
90021f98:	1c42      	adds	r2, r0, #1
90021f9a:	eb02 2210 	add.w	r2, r2, r0, lsr #8
90021f9e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
90021fa2:	ea42 020c 	orr.w	r2, r2, ip
90021fa6:	f103 0c01 	add.w	ip, r3, #1
90021faa:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
90021fae:	095b      	lsrs	r3, r3, #5
90021fb0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90021fb4:	431a      	orrs	r2, r3
90021fb6:	f8a9 2000 	strh.w	r2, [r9]
90021fba:	9b2b      	ldr	r3, [sp, #172]	; 0xac
90021fbc:	f109 0902 	add.w	r9, r9, #2
90021fc0:	9a29      	ldr	r2, [sp, #164]	; 0xa4
90021fc2:	f10b 3bff 	add.w	fp, fp, #4294967295
90021fc6:	441a      	add	r2, r3
90021fc8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90021fca:	9229      	str	r2, [sp, #164]	; 0xa4
90021fcc:	441d      	add	r5, r3
90021fce:	e63d      	b.n	90021c4c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
90021fd0:	2800      	cmp	r0, #0
90021fd2:	f43f aedd 	beq.w	90021d90 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
90021fd6:	5c79      	ldrb	r1, [r7, r1]
90021fd8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90021fdc:	910b      	str	r1, [sp, #44]	; 0x2c
90021fde:	0e09      	lsrs	r1, r1, #24
90021fe0:	9114      	str	r1, [sp, #80]	; 0x50
90021fe2:	e6d5      	b.n	90021d90 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
90021fe4:	b01f      	add	sp, #124	; 0x7c
90021fe6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90021fea <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
90021fea:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90021fee:	b089      	sub	sp, #36	; 0x24
90021ff0:	9101      	str	r1, [sp, #4]
90021ff2:	9801      	ldr	r0, [sp, #4]
90021ff4:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
90021ff8:	8800      	ldrh	r0, [r0, #0]
90021ffa:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
90021ffe:	1206      	asrs	r6, r0, #8
90022000:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
90022004:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
90022008:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9002200c:	9602      	str	r6, [sp, #8]
9002200e:	10c6      	asrs	r6, r0, #3
90022010:	00c0      	lsls	r0, r0, #3
90022012:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
90022016:	b2c0      	uxtb	r0, r0
90022018:	9603      	str	r6, [sp, #12]
9002201a:	9004      	str	r0, [sp, #16]
9002201c:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
90022020:	fb07 100c 	mla	r0, r7, ip, r1
90022024:	2f00      	cmp	r7, #0
90022026:	eb02 0e00 	add.w	lr, r2, r0
9002202a:	f2c0 810a 	blt.w	90022242 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
9002202e:	45b8      	cmp	r8, r7
90022030:	f340 8107 	ble.w	90022242 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
90022034:	2900      	cmp	r1, #0
90022036:	f2c0 8102 	blt.w	9002223e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
9002203a:	458c      	cmp	ip, r1
9002203c:	f340 80ff 	ble.w	9002223e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
90022040:	5c12      	ldrb	r2, [r2, r0]
90022042:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
90022046:	1c4a      	adds	r2, r1, #1
90022048:	f100 80fe 	bmi.w	90022248 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
9002204c:	4594      	cmp	ip, r2
9002204e:	f340 80fb 	ble.w	90022248 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
90022052:	2d00      	cmp	r5, #0
90022054:	f000 80fa 	beq.w	9002224c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
90022058:	f89e 2001 	ldrb.w	r2, [lr, #1]
9002205c:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
90022060:	3701      	adds	r7, #1
90022062:	f100 80f7 	bmi.w	90022254 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
90022066:	45b8      	cmp	r8, r7
90022068:	f340 80f4 	ble.w	90022254 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
9002206c:	2c00      	cmp	r4, #0
9002206e:	f000 80f4 	beq.w	9002225a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
90022072:	2900      	cmp	r1, #0
90022074:	eb0e 020c 	add.w	r2, lr, ip
90022078:	f2c0 80ea 	blt.w	90022250 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
9002207c:	458c      	cmp	ip, r1
9002207e:	f340 80e7 	ble.w	90022250 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
90022082:	f81e 700c 	ldrb.w	r7, [lr, ip]
90022086:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
9002208a:	3101      	adds	r1, #1
9002208c:	f100 80e8 	bmi.w	90022260 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
90022090:	458c      	cmp	ip, r1
90022092:	f340 80e5 	ble.w	90022260 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
90022096:	2d00      	cmp	r5, #0
90022098:	f000 80e4 	beq.w	90022264 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
9002209c:	7852      	ldrb	r2, [r2, #1]
9002209e:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
900220a2:	0e0b      	lsrs	r3, r1, #24
900220a4:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
900220a8:	ea4f 6a10 	mov.w	sl, r0, lsr #24
900220ac:	9300      	str	r3, [sp, #0]
900220ae:	b2a4      	uxth	r4, r4
900220b0:	b2ab      	uxth	r3, r5
900220b2:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
900220b6:	ea4f 6b16 	mov.w	fp, r6, lsr #24
900220ba:	fb03 f904 	mul.w	r9, r3, r4
900220be:	011b      	lsls	r3, r3, #4
900220c0:	fb0a f505 	mul.w	r5, sl, r5
900220c4:	ea4f 6817 	mov.w	r8, r7, lsr #24
900220c8:	eba3 0e09 	sub.w	lr, r3, r9
900220cc:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
900220d0:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
900220d4:	0a28      	lsrs	r0, r5, #8
900220d6:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
900220da:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
900220de:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
900220e2:	fb0a f303 	mul.w	r3, sl, r3
900220e6:	fb08 f707 	mul.w	r7, r8, r7
900220ea:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
900220ee:	4405      	add	r5, r0
900220f0:	fb08 fc0c 	mul.w	ip, r8, ip
900220f4:	b2a4      	uxth	r4, r4
900220f6:	0a2d      	lsrs	r5, r5, #8
900220f8:	fa1f fe8e 	uxth.w	lr, lr
900220fc:	1b12      	subs	r2, r2, r4
900220fe:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
90022102:	b292      	uxth	r2, r2
90022104:	9005      	str	r0, [sp, #20]
90022106:	f503 7080 	add.w	r0, r3, #256	; 0x100
9002210a:	eb00 2313 	add.w	r3, r0, r3, lsr #8
9002210e:	ea4f 201c 	mov.w	r0, ip, lsr #8
90022112:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
90022116:	0a1b      	lsrs	r3, r3, #8
90022118:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
9002211c:	9306      	str	r3, [sp, #24]
9002211e:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
90022122:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
90022126:	4460      	add	r0, ip
90022128:	fb0b f303 	mul.w	r3, fp, r3
9002212c:	fb0b f606 	mul.w	r6, fp, r6
90022130:	0a00      	lsrs	r0, r0, #8
90022132:	0a1d      	lsrs	r5, r3, #8
90022134:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
90022138:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
9002213c:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
90022140:	441d      	add	r5, r3
90022142:	f506 7380 	add.w	r3, r6, #256	; 0x100
90022146:	eb03 2616 	add.w	r6, r3, r6, lsr #8
9002214a:	f507 7380 	add.w	r3, r7, #256	; 0x100
9002214e:	0a2d      	lsrs	r5, r5, #8
90022150:	eb03 2317 	add.w	r3, r3, r7, lsr #8
90022154:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
90022158:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
9002215c:	0a36      	lsrs	r6, r6, #8
9002215e:	0a1b      	lsrs	r3, r3, #8
90022160:	fb05 f50e 	mul.w	r5, r5, lr
90022164:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
90022168:	9307      	str	r3, [sp, #28]
9002216a:	0e0b      	lsrs	r3, r1, #24
9002216c:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
90022170:	fb0e f606 	mul.w	r6, lr, r6
90022174:	435f      	muls	r7, r3
90022176:	4359      	muls	r1, r3
90022178:	9b05      	ldr	r3, [sp, #20]
9002217a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
9002217e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90022182:	fb03 5502 	mla	r5, r3, r2, r5
90022186:	9b06      	ldr	r3, [sp, #24]
90022188:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9002218c:	fb0e fe0b 	mul.w	lr, lr, fp
90022190:	44bc      	add	ip, r7
90022192:	f501 7780 	add.w	r7, r1, #256	; 0x100
90022196:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002219a:	eb07 2111 	add.w	r1, r7, r1, lsr #8
9002219e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900221a2:	0a09      	lsrs	r1, r1, #8
900221a4:	fb0c 5509 	mla	r5, ip, r9, r5
900221a8:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
900221ac:	fb00 5504 	mla	r5, r0, r4, r5
900221b0:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
900221b4:	9b07      	ldr	r3, [sp, #28]
900221b6:	fb02 6000 	mla	r0, r2, r0, r6
900221ba:	0a2d      	lsrs	r5, r5, #8
900221bc:	fb02 e20a 	mla	r2, r2, sl, lr
900221c0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
900221c4:	fb09 0001 	mla	r0, r9, r1, r0
900221c8:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
900221cc:	fb04 0003 	mla	r0, r4, r3, r0
900221d0:	9b00      	ldr	r3, [sp, #0]
900221d2:	fb04 2408 	mla	r4, r4, r8, r2
900221d6:	9a04      	ldr	r2, [sp, #16]
900221d8:	0a00      	lsrs	r0, r0, #8
900221da:	fb09 4903 	mla	r9, r9, r3, r4
900221de:	9b02      	ldr	r3, [sp, #8]
900221e0:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
900221e4:	ea6f 2929 	mvn.w	r9, r9, asr #8
900221e8:	4305      	orrs	r5, r0
900221ea:	fa5f f989 	uxtb.w	r9, r9
900221ee:	fb03 f109 	mul.w	r1, r3, r9
900221f2:	9b03      	ldr	r3, [sp, #12]
900221f4:	fb03 f309 	mul.w	r3, r3, r9
900221f8:	fb02 f909 	mul.w	r9, r2, r9
900221fc:	1c4a      	adds	r2, r1, #1
900221fe:	1c58      	adds	r0, r3, #1
90022200:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90022204:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90022208:	0c2a      	lsrs	r2, r5, #16
9002220a:	0a2b      	lsrs	r3, r5, #8
9002220c:	eb02 2211 	add.w	r2, r2, r1, lsr #8
90022210:	eb03 2310 	add.w	r3, r3, r0, lsr #8
90022214:	0212      	lsls	r2, r2, #8
90022216:	00db      	lsls	r3, r3, #3
90022218:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
9002221c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90022220:	4313      	orrs	r3, r2
90022222:	f109 0201 	add.w	r2, r9, #1
90022226:	eb02 2919 	add.w	r9, r2, r9, lsr #8
9002222a:	eb05 2519 	add.w	r5, r5, r9, lsr #8
9002222e:	f3c5 05c4 	ubfx	r5, r5, #3, #5
90022232:	431d      	orrs	r5, r3
90022234:	9b01      	ldr	r3, [sp, #4]
90022236:	801d      	strh	r5, [r3, #0]
90022238:	b009      	add	sp, #36	; 0x24
9002223a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002223e:	2000      	movs	r0, #0
90022240:	e701      	b.n	90022046 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
90022242:	2600      	movs	r6, #0
90022244:	4630      	mov	r0, r6
90022246:	e70b      	b.n	90022060 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
90022248:	2600      	movs	r6, #0
9002224a:	e709      	b.n	90022060 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
9002224c:	462e      	mov	r6, r5
9002224e:	e707      	b.n	90022060 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
90022250:	2700      	movs	r7, #0
90022252:	e71a      	b.n	9002208a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
90022254:	2100      	movs	r1, #0
90022256:	460f      	mov	r7, r1
90022258:	e723      	b.n	900220a2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
9002225a:	4621      	mov	r1, r4
9002225c:	4627      	mov	r7, r4
9002225e:	e720      	b.n	900220a2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
90022260:	2100      	movs	r1, #0
90022262:	e71e      	b.n	900220a2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
90022264:	4629      	mov	r1, r5
90022266:	e71c      	b.n	900220a2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

90022268 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90022268:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002226c:	b09b      	sub	sp, #108	; 0x6c
9002226e:	9218      	str	r2, [sp, #96]	; 0x60
90022270:	9a29      	ldr	r2, [sp, #164]	; 0xa4
90022272:	9019      	str	r0, [sp, #100]	; 0x64
90022274:	9116      	str	r1, [sp, #88]	; 0x58
90022276:	6850      	ldr	r0, [r2, #4]
90022278:	9307      	str	r3, [sp, #28]
9002227a:	6812      	ldr	r2, [r2, #0]
9002227c:	9d26      	ldr	r5, [sp, #152]	; 0x98
9002227e:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
90022282:	fb00 1303 	mla	r3, r0, r3, r1
90022286:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9002228a:	930a      	str	r3, [sp, #40]	; 0x28
9002228c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
9002228e:	681b      	ldr	r3, [r3, #0]
90022290:	930f      	str	r3, [sp, #60]	; 0x3c
90022292:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90022294:	685e      	ldr	r6, [r3, #4]
90022296:	3604      	adds	r6, #4
90022298:	9b16      	ldr	r3, [sp, #88]	; 0x58
9002229a:	2b00      	cmp	r3, #0
9002229c:	dc03      	bgt.n	900222a6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9002229e:	9b18      	ldr	r3, [sp, #96]	; 0x60
900222a0:	2b00      	cmp	r3, #0
900222a2:	f340 8373 	ble.w	9002298c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
900222a6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
900222a8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900222ac:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900222b0:	1e48      	subs	r0, r1, #1
900222b2:	1e57      	subs	r7, r2, #1
900222b4:	9b07      	ldr	r3, [sp, #28]
900222b6:	2b00      	cmp	r3, #0
900222b8:	f340 818f 	ble.w	900225da <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
900222bc:	9c25      	ldr	r4, [sp, #148]	; 0x94
900222be:	142b      	asrs	r3, r5, #16
900222c0:	ea5f 4c24 	movs.w	ip, r4, asr #16
900222c4:	d406      	bmi.n	900222d4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
900222c6:	4584      	cmp	ip, r0
900222c8:	da04      	bge.n	900222d4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
900222ca:	2b00      	cmp	r3, #0
900222cc:	db02      	blt.n	900222d4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
900222ce:	42bb      	cmp	r3, r7
900222d0:	f2c0 8184 	blt.w	900225dc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
900222d4:	f11c 0c01 	adds.w	ip, ip, #1
900222d8:	f100 8172 	bmi.w	900225c0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900222dc:	4561      	cmp	r1, ip
900222de:	f2c0 816f 	blt.w	900225c0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900222e2:	3301      	adds	r3, #1
900222e4:	f100 816c 	bmi.w	900225c0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900222e8:	429a      	cmp	r2, r3
900222ea:	f2c0 8169 	blt.w	900225c0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900222ee:	9b07      	ldr	r3, [sp, #28]
900222f0:	9f0a      	ldr	r7, [sp, #40]	; 0x28
900222f2:	9317      	str	r3, [sp, #92]	; 0x5c
900222f4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
900222f6:	2b00      	cmp	r3, #0
900222f8:	f340 818e 	ble.w	90022618 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
900222fc:	9b25      	ldr	r3, [sp, #148]	; 0x94
900222fe:	ea4f 4c25 	mov.w	ip, r5, asr #16
90022302:	f3c5 3003 	ubfx	r0, r5, #12, #4
90022306:	f3c3 3203 	ubfx	r2, r3, #12, #4
9002230a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
9002230c:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
90022310:	9b25      	ldr	r3, [sp, #148]	; 0x94
90022312:	141b      	asrs	r3, r3, #16
90022314:	f100 81d1 	bmi.w	900226ba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90022318:	f101 38ff 	add.w	r8, r1, #4294967295
9002231c:	4543      	cmp	r3, r8
9002231e:	f280 81cc 	bge.w	900226ba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90022322:	f1bc 0f00 	cmp.w	ip, #0
90022326:	f2c0 81c8 	blt.w	900226ba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
9002232a:	f10e 38ff 	add.w	r8, lr, #4294967295
9002232e:	45c4      	cmp	ip, r8
90022330:	f280 81c3 	bge.w	900226ba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90022334:	b209      	sxth	r1, r1
90022336:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
90022338:	fb0c 3301 	mla	r3, ip, r1, r3
9002233c:	eb04 0803 	add.w	r8, r4, r3
90022340:	5ce3      	ldrb	r3, [r4, r3]
90022342:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
90022346:	ea4f 6e13 	mov.w	lr, r3, lsr #24
9002234a:	2a00      	cmp	r2, #0
9002234c:	f000 81aa 	beq.w	900226a4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43c>
90022350:	f898 c001 	ldrb.w	ip, [r8, #1]
90022354:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
90022358:	940b      	str	r4, [sp, #44]	; 0x2c
9002235a:	0e24      	lsrs	r4, r4, #24
9002235c:	9412      	str	r4, [sp, #72]	; 0x48
9002235e:	b178      	cbz	r0, 90022380 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
90022360:	eb08 0c01 	add.w	ip, r8, r1
90022364:	f818 1001 	ldrb.w	r1, [r8, r1]
90022368:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
9002236c:	9108      	str	r1, [sp, #32]
9002236e:	0e09      	lsrs	r1, r1, #24
90022370:	9110      	str	r1, [sp, #64]	; 0x40
90022372:	f89c 1001 	ldrb.w	r1, [ip, #1]
90022376:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
9002237a:	910c      	str	r1, [sp, #48]	; 0x30
9002237c:	0e09      	lsrs	r1, r1, #24
9002237e:	9113      	str	r1, [sp, #76]	; 0x4c
90022380:	b292      	uxth	r2, r2
90022382:	9912      	ldr	r1, [sp, #72]	; 0x48
90022384:	b280      	uxth	r0, r0
90022386:	9c10      	ldr	r4, [sp, #64]	; 0x40
90022388:	fb02 f900 	mul.w	r9, r2, r0
9002238c:	0112      	lsls	r2, r2, #4
9002238e:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
90022392:	eba2 0809 	sub.w	r8, r2, r9
90022396:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
9002239a:	b280      	uxth	r0, r0
9002239c:	fa1f f888 	uxth.w	r8, r8
900223a0:	1a12      	subs	r2, r2, r0
900223a2:	fb08 f101 	mul.w	r1, r8, r1
900223a6:	b292      	uxth	r2, r2
900223a8:	fb02 110e 	mla	r1, r2, lr, r1
900223ac:	fb00 1104 	mla	r1, r0, r4, r1
900223b0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
900223b2:	fb09 1104 	mla	r1, r9, r4, r1
900223b6:	f3c1 2107 	ubfx	r1, r1, #8, #8
900223ba:	2900      	cmp	r1, #0
900223bc:	f000 80f5 	beq.w	900225aa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
900223c0:	f1be 0fff 	cmp.w	lr, #255	; 0xff
900223c4:	d01b      	beq.n	900223fe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
900223c6:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
900223ca:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
900223ce:	fb0e fa0a 	mul.w	sl, lr, sl
900223d2:	fb0e fe03 	mul.w	lr, lr, r3
900223d6:	ea4f 231a 	mov.w	r3, sl, lsr #8
900223da:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
900223de:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
900223e2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
900223e6:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
900223ea:	4453      	add	r3, sl
900223ec:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900223f0:	0a1b      	lsrs	r3, r3, #8
900223f2:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
900223f6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
900223fa:	ea43 030c 	orr.w	r3, r3, ip
900223fe:	9c12      	ldr	r4, [sp, #72]	; 0x48
90022400:	2cff      	cmp	r4, #255	; 0xff
90022402:	d021      	beq.n	90022448 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
90022404:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90022406:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
9002240a:	9c12      	ldr	r4, [sp, #72]	; 0x48
9002240c:	fb04 fb0b 	mul.w	fp, r4, fp
90022410:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90022412:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90022416:	9c12      	ldr	r4, [sp, #72]	; 0x48
90022418:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
9002241c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90022420:	fb04 fa0a 	mul.w	sl, r4, sl
90022424:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90022428:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
9002242c:	44de      	add	lr, fp
9002242e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90022432:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90022436:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002243a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
9002243e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90022442:	ea4e 040a 	orr.w	r4, lr, sl
90022446:	940b      	str	r4, [sp, #44]	; 0x2c
90022448:	9c10      	ldr	r4, [sp, #64]	; 0x40
9002244a:	2cff      	cmp	r4, #255	; 0xff
9002244c:	d021      	beq.n	90022492 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
9002244e:	9c08      	ldr	r4, [sp, #32]
90022450:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
90022454:	9c10      	ldr	r4, [sp, #64]	; 0x40
90022456:	fb04 fb0b 	mul.w	fp, r4, fp
9002245a:	9c08      	ldr	r4, [sp, #32]
9002245c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90022460:	9c10      	ldr	r4, [sp, #64]	; 0x40
90022462:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90022466:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
9002246a:	fb04 fa0a 	mul.w	sl, r4, sl
9002246e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90022472:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90022476:	44de      	add	lr, fp
90022478:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
9002247c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90022480:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90022484:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90022488:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
9002248c:	ea4e 040a 	orr.w	r4, lr, sl
90022490:	9408      	str	r4, [sp, #32]
90022492:	9c13      	ldr	r4, [sp, #76]	; 0x4c
90022494:	2cff      	cmp	r4, #255	; 0xff
90022496:	d021      	beq.n	900224dc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
90022498:	9c0c      	ldr	r4, [sp, #48]	; 0x30
9002249a:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
9002249e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
900224a0:	fb04 fb0b 	mul.w	fp, r4, fp
900224a4:	9c0c      	ldr	r4, [sp, #48]	; 0x30
900224a6:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
900224aa:	9c13      	ldr	r4, [sp, #76]	; 0x4c
900224ac:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900224b0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
900224b4:	fb04 fa0a 	mul.w	sl, r4, sl
900224b8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
900224bc:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
900224c0:	44de      	add	lr, fp
900224c2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900224c6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900224ca:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900224ce:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
900224d2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
900224d6:	ea4e 040a 	orr.w	r4, lr, sl
900224da:	940c      	str	r4, [sp, #48]	; 0x30
900224dc:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
900224de:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
900224e2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
900224e6:	43c9      	mvns	r1, r1
900224e8:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
900224ec:	9c08      	ldr	r4, [sp, #32]
900224ee:	fb08 fc0c 	mul.w	ip, r8, ip
900224f2:	fb02 cc0e 	mla	ip, r2, lr, ip
900224f6:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
900224fa:	9c0c      	ldr	r4, [sp, #48]	; 0x30
900224fc:	fb00 cc0e 	mla	ip, r0, lr, ip
90022500:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
90022504:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90022506:	fb09 cc0e 	mla	ip, r9, lr, ip
9002250a:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
9002250e:	fb08 f80e 	mul.w	r8, r8, lr
90022512:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90022516:	fa5f fe81 	uxtb.w	lr, r1
9002251a:	fb02 8303 	mla	r3, r2, r3, r8
9002251e:	9a08      	ldr	r2, [sp, #32]
90022520:	f8b7 8000 	ldrh.w	r8, [r7]
90022524:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90022528:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
9002252c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
9002252e:	ea4f 01c8 	mov.w	r1, r8, lsl #3
90022532:	fb00 330a 	mla	r3, r0, sl, r3
90022536:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
9002253a:	ea4f 2228 	mov.w	r2, r8, asr #8
9002253e:	fb09 3900 	mla	r9, r9, r0, r3
90022542:	ea4f 00e8 	mov.w	r0, r8, asr #3
90022546:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
9002254a:	b2c9      	uxtb	r1, r1
9002254c:	ea4f 2919 	mov.w	r9, r9, lsr #8
90022550:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
90022554:	fb02 f20e 	mul.w	r2, r2, lr
90022558:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
9002255c:	fb00 f00e 	mul.w	r0, r0, lr
90022560:	1c53      	adds	r3, r2, #1
90022562:	fb01 f10e 	mul.w	r1, r1, lr
90022566:	ea4c 0c09 	orr.w	ip, ip, r9
9002256a:	eb03 2212 	add.w	r2, r3, r2, lsr #8
9002256e:	ea4f 431c 	mov.w	r3, ip, lsr #16
90022572:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90022576:	4a60      	ldr	r2, [pc, #384]	; (900226f8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
90022578:	b2db      	uxtb	r3, r3
9002257a:	ea02 2203 	and.w	r2, r2, r3, lsl #8
9002257e:	1c43      	adds	r3, r0, #1
90022580:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90022584:	ea4f 231c 	mov.w	r3, ip, lsr #8
90022588:	eb03 2310 	add.w	r3, r3, r0, lsr #8
9002258c:	00db      	lsls	r3, r3, #3
9002258e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90022592:	4313      	orrs	r3, r2
90022594:	1c4a      	adds	r2, r1, #1
90022596:	eb02 2111 	add.w	r1, r2, r1, lsr #8
9002259a:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
9002259e:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
900225a2:	ea4c 0c03 	orr.w	ip, ip, r3
900225a6:	f8a7 c000 	strh.w	ip, [r7]
900225aa:	9b27      	ldr	r3, [sp, #156]	; 0x9c
900225ac:	3702      	adds	r7, #2
900225ae:	9a25      	ldr	r2, [sp, #148]	; 0x94
900225b0:	441a      	add	r2, r3
900225b2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
900225b4:	441d      	add	r5, r3
900225b6:	9b17      	ldr	r3, [sp, #92]	; 0x5c
900225b8:	9225      	str	r2, [sp, #148]	; 0x94
900225ba:	3b01      	subs	r3, #1
900225bc:	9317      	str	r3, [sp, #92]	; 0x5c
900225be:	e699      	b.n	900222f4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
900225c0:	9b27      	ldr	r3, [sp, #156]	; 0x9c
900225c2:	9c25      	ldr	r4, [sp, #148]	; 0x94
900225c4:	441c      	add	r4, r3
900225c6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
900225c8:	441d      	add	r5, r3
900225ca:	9b07      	ldr	r3, [sp, #28]
900225cc:	9425      	str	r4, [sp, #148]	; 0x94
900225ce:	3b01      	subs	r3, #1
900225d0:	9307      	str	r3, [sp, #28]
900225d2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
900225d4:	3302      	adds	r3, #2
900225d6:	930a      	str	r3, [sp, #40]	; 0x28
900225d8:	e66c      	b.n	900222b4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
900225da:	d024      	beq.n	90022626 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3be>
900225dc:	9b07      	ldr	r3, [sp, #28]
900225de:	9827      	ldr	r0, [sp, #156]	; 0x9c
900225e0:	3b01      	subs	r3, #1
900225e2:	9c25      	ldr	r4, [sp, #148]	; 0x94
900225e4:	fb00 4003 	mla	r0, r0, r3, r4
900225e8:	1400      	asrs	r0, r0, #16
900225ea:	f53f ae80 	bmi.w	900222ee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
900225ee:	3901      	subs	r1, #1
900225f0:	4288      	cmp	r0, r1
900225f2:	f6bf ae7c 	bge.w	900222ee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
900225f6:	9928      	ldr	r1, [sp, #160]	; 0xa0
900225f8:	fb01 5303 	mla	r3, r1, r3, r5
900225fc:	141b      	asrs	r3, r3, #16
900225fe:	f53f ae76 	bmi.w	900222ee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90022602:	3a01      	subs	r2, #1
90022604:	4293      	cmp	r3, r2
90022606:	f6bf ae72 	bge.w	900222ee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
9002260a:	f8dd b01c 	ldr.w	fp, [sp, #28]
9002260e:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
90022612:	f1bb 0f00 	cmp.w	fp, #0
90022616:	dc71      	bgt.n	900226fc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90022618:	9b07      	ldr	r3, [sp, #28]
9002261a:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
9002261e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90022620:	eb03 0344 	add.w	r3, r3, r4, lsl #1
90022624:	930a      	str	r3, [sp, #40]	; 0x28
90022626:	9b16      	ldr	r3, [sp, #88]	; 0x58
90022628:	2b00      	cmp	r3, #0
9002262a:	f340 81af 	ble.w	9002298c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
9002262e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90022632:	9b24      	ldr	r3, [sp, #144]	; 0x90
90022634:	ee30 0a04 	vadd.f32	s0, s0, s8
90022638:	ee70 0aa4 	vadd.f32	s1, s1, s9
9002263c:	eef0 6a62 	vmov.f32	s13, s5
90022640:	eec7 7a00 	vdiv.f32	s15, s14, s0
90022644:	ee31 1a05 	vadd.f32	s2, s2, s10
90022648:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002264c:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
90022650:	eef0 6a43 	vmov.f32	s13, s6
90022654:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90022658:	ee16 5a90 	vmov	r5, s13
9002265c:	ee20 7aa7 	vmul.f32	s14, s1, s15
90022660:	ee61 7a27 	vmul.f32	s15, s2, s15
90022664:	ee77 2a62 	vsub.f32	s5, s14, s5
90022668:	ee37 3ac3 	vsub.f32	s6, s15, s6
9002266c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90022670:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90022674:	ee12 2a90 	vmov	r2, s5
90022678:	eef0 2a47 	vmov.f32	s5, s14
9002267c:	fb92 f3f3 	sdiv	r3, r2, r3
90022680:	ee13 2a10 	vmov	r2, s6
90022684:	9327      	str	r3, [sp, #156]	; 0x9c
90022686:	9b24      	ldr	r3, [sp, #144]	; 0x90
90022688:	eeb0 3a67 	vmov.f32	s6, s15
9002268c:	fb92 f3f3 	sdiv	r3, r2, r3
90022690:	9328      	str	r3, [sp, #160]	; 0xa0
90022692:	9b16      	ldr	r3, [sp, #88]	; 0x58
90022694:	9a18      	ldr	r2, [sp, #96]	; 0x60
90022696:	3b01      	subs	r3, #1
90022698:	9316      	str	r3, [sp, #88]	; 0x58
9002269a:	9b24      	ldr	r3, [sp, #144]	; 0x90
9002269c:	bf08      	it	eq
9002269e:	4613      	moveq	r3, r2
900226a0:	9307      	str	r3, [sp, #28]
900226a2:	e5f9      	b.n	90022298 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
900226a4:	2800      	cmp	r0, #0
900226a6:	f43f ae6b 	beq.w	90022380 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
900226aa:	f818 1001 	ldrb.w	r1, [r8, r1]
900226ae:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
900226b2:	9108      	str	r1, [sp, #32]
900226b4:	0e09      	lsrs	r1, r1, #24
900226b6:	9110      	str	r1, [sp, #64]	; 0x40
900226b8:	e662      	b.n	90022380 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
900226ba:	f113 0801 	adds.w	r8, r3, #1
900226be:	f53f af74 	bmi.w	900225aa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
900226c2:	4541      	cmp	r1, r8
900226c4:	f6ff af71 	blt.w	900225aa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
900226c8:	f11c 0801 	adds.w	r8, ip, #1
900226cc:	f53f af6d 	bmi.w	900225aa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
900226d0:	45c6      	cmp	lr, r8
900226d2:	f6ff af6a 	blt.w	900225aa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
900226d6:	b209      	sxth	r1, r1
900226d8:	e9cd 3c02 	strd	r3, ip, [sp, #8]
900226dc:	fa0f f38e 	sxth.w	r3, lr
900226e0:	9100      	str	r1, [sp, #0]
900226e2:	4639      	mov	r1, r7
900226e4:	9301      	str	r3, [sp, #4]
900226e6:	4633      	mov	r3, r6
900226e8:	e9cd 2004 	strd	r2, r0, [sp, #16]
900226ec:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
900226ee:	9819      	ldr	r0, [sp, #100]	; 0x64
900226f0:	f7ff fc7b 	bl	90021fea <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
900226f4:	e759      	b.n	900225aa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
900226f6:	bf00      	nop
900226f8:	fffff800 	.word	0xfffff800
900226fc:	9b25      	ldr	r3, [sp, #148]	; 0x94
900226fe:	f3c5 3003 	ubfx	r0, r5, #12, #4
90022702:	9c25      	ldr	r4, [sp, #148]	; 0x94
90022704:	f3c3 3203 	ubfx	r2, r3, #12, #4
90022708:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
9002270a:	1427      	asrs	r7, r4, #16
9002270c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
9002270e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90022712:	142b      	asrs	r3, r5, #16
90022714:	fb01 7303 	mla	r3, r1, r3, r7
90022718:	18e7      	adds	r7, r4, r3
9002271a:	5ce3      	ldrb	r3, [r4, r3]
9002271c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
90022720:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90022724:	2a00      	cmp	r2, #0
90022726:	f000 8127 	beq.w	90022978 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
9002272a:	f897 e001 	ldrb.w	lr, [r7, #1]
9002272e:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
90022732:	940d      	str	r4, [sp, #52]	; 0x34
90022734:	0e24      	lsrs	r4, r4, #24
90022736:	9414      	str	r4, [sp, #80]	; 0x50
90022738:	b170      	cbz	r0, 90022758 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
9002273a:	eb07 0e01 	add.w	lr, r7, r1
9002273e:	5c79      	ldrb	r1, [r7, r1]
90022740:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90022744:	9109      	str	r1, [sp, #36]	; 0x24
90022746:	0e09      	lsrs	r1, r1, #24
90022748:	9111      	str	r1, [sp, #68]	; 0x44
9002274a:	f89e 1001 	ldrb.w	r1, [lr, #1]
9002274e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90022752:	910e      	str	r1, [sp, #56]	; 0x38
90022754:	0e09      	lsrs	r1, r1, #24
90022756:	9115      	str	r1, [sp, #84]	; 0x54
90022758:	b292      	uxth	r2, r2
9002275a:	9c11      	ldr	r4, [sp, #68]	; 0x44
9002275c:	b280      	uxth	r0, r0
9002275e:	fb02 f800 	mul.w	r8, r2, r0
90022762:	0112      	lsls	r2, r2, #4
90022764:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
90022768:	eba2 0e08 	sub.w	lr, r2, r8
9002276c:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
90022770:	9a14      	ldr	r2, [sp, #80]	; 0x50
90022772:	b280      	uxth	r0, r0
90022774:	fa1f fe8e 	uxth.w	lr, lr
90022778:	1a09      	subs	r1, r1, r0
9002277a:	fb0e f202 	mul.w	r2, lr, r2
9002277e:	b289      	uxth	r1, r1
90022780:	fb01 220c 	mla	r2, r1, ip, r2
90022784:	fb00 2204 	mla	r2, r0, r4, r2
90022788:	9c15      	ldr	r4, [sp, #84]	; 0x54
9002278a:	fb08 2204 	mla	r2, r8, r4, r2
9002278e:	f3c2 2207 	ubfx	r2, r2, #8, #8
90022792:	2a00      	cmp	r2, #0
90022794:	f000 80e5 	beq.w	90022962 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
90022798:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
9002279c:	d019      	beq.n	900227d2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
9002279e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
900227a2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
900227a6:	fb0c fa0a 	mul.w	sl, ip, sl
900227aa:	fb0c fc03 	mul.w	ip, ip, r3
900227ae:	ea4f 231a 	mov.w	r3, sl, lsr #8
900227b2:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
900227b6:	f50c 7780 	add.w	r7, ip, #256	; 0x100
900227ba:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
900227be:	eb07 271c 	add.w	r7, r7, ip, lsr #8
900227c2:	4453      	add	r3, sl
900227c4:	0a3f      	lsrs	r7, r7, #8
900227c6:	0a1b      	lsrs	r3, r3, #8
900227c8:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
900227cc:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
900227d0:	433b      	orrs	r3, r7
900227d2:	9c14      	ldr	r4, [sp, #80]	; 0x50
900227d4:	2cff      	cmp	r4, #255	; 0xff
900227d6:	d020      	beq.n	9002281a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
900227d8:	9c0d      	ldr	r4, [sp, #52]	; 0x34
900227da:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
900227de:	9c14      	ldr	r4, [sp, #80]	; 0x50
900227e0:	4367      	muls	r7, r4
900227e2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
900227e4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900227e8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
900227ec:	9c14      	ldr	r4, [sp, #80]	; 0x50
900227ee:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
900227f2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900227f6:	fb04 fa0a 	mul.w	sl, r4, sl
900227fa:	44bc      	add	ip, r7
900227fc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90022800:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90022804:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90022808:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9002280c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90022810:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90022814:	ea4c 040a 	orr.w	r4, ip, sl
90022818:	940d      	str	r4, [sp, #52]	; 0x34
9002281a:	9c11      	ldr	r4, [sp, #68]	; 0x44
9002281c:	2cff      	cmp	r4, #255	; 0xff
9002281e:	d020      	beq.n	90022862 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
90022820:	9c09      	ldr	r4, [sp, #36]	; 0x24
90022822:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
90022826:	9c11      	ldr	r4, [sp, #68]	; 0x44
90022828:	4367      	muls	r7, r4
9002282a:	9c09      	ldr	r4, [sp, #36]	; 0x24
9002282c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90022830:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90022834:	9c11      	ldr	r4, [sp, #68]	; 0x44
90022836:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
9002283a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9002283e:	fb04 fa0a 	mul.w	sl, r4, sl
90022842:	44bc      	add	ip, r7
90022844:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90022848:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002284c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90022850:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90022854:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90022858:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
9002285c:	ea4c 040a 	orr.w	r4, ip, sl
90022860:	9409      	str	r4, [sp, #36]	; 0x24
90022862:	9c15      	ldr	r4, [sp, #84]	; 0x54
90022864:	2cff      	cmp	r4, #255	; 0xff
90022866:	d020      	beq.n	900228aa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
90022868:	9c0e      	ldr	r4, [sp, #56]	; 0x38
9002286a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
9002286e:	9c15      	ldr	r4, [sp, #84]	; 0x54
90022870:	4367      	muls	r7, r4
90022872:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90022874:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90022878:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
9002287c:	9c15      	ldr	r4, [sp, #84]	; 0x54
9002287e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90022882:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90022886:	fb04 fa0a 	mul.w	sl, r4, sl
9002288a:	44bc      	add	ip, r7
9002288c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90022890:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90022894:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90022898:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9002289c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900228a0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
900228a4:	ea4c 040a 	orr.w	r4, ip, sl
900228a8:	940e      	str	r4, [sp, #56]	; 0x38
900228aa:	9c0d      	ldr	r4, [sp, #52]	; 0x34
900228ac:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
900228b0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
900228b4:	43d2      	mvns	r2, r2
900228b6:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
900228ba:	9c09      	ldr	r4, [sp, #36]	; 0x24
900228bc:	b2d2      	uxtb	r2, r2
900228be:	fb0e f707 	mul.w	r7, lr, r7
900228c2:	fb01 770c 	mla	r7, r1, ip, r7
900228c6:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
900228ca:	9c0e      	ldr	r4, [sp, #56]	; 0x38
900228cc:	fb00 770c 	mla	r7, r0, ip, r7
900228d0:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
900228d4:	9c0d      	ldr	r4, [sp, #52]	; 0x34
900228d6:	fb08 770c 	mla	r7, r8, ip, r7
900228da:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
900228de:	fb0e fe0c 	mul.w	lr, lr, ip
900228e2:	0a3f      	lsrs	r7, r7, #8
900228e4:	fb01 e303 	mla	r3, r1, r3, lr
900228e8:	9909      	ldr	r1, [sp, #36]	; 0x24
900228ea:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
900228ee:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
900228f2:	990e      	ldr	r1, [sp, #56]	; 0x38
900228f4:	fb00 330a 	mla	r3, r0, sl, r3
900228f8:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
900228fc:	fb08 3c0c 	mla	ip, r8, ip, r3
90022900:	f8b9 3000 	ldrh.w	r3, [r9]
90022904:	1218      	asrs	r0, r3, #8
90022906:	10d9      	asrs	r1, r3, #3
90022908:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002290c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
90022910:	00db      	lsls	r3, r3, #3
90022912:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
90022916:	4350      	muls	r0, r2
90022918:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
9002291c:	b2db      	uxtb	r3, r3
9002291e:	4351      	muls	r1, r2
90022920:	ea47 070c 	orr.w	r7, r7, ip
90022924:	4353      	muls	r3, r2
90022926:	1c42      	adds	r2, r0, #1
90022928:	eb02 2010 	add.w	r0, r2, r0, lsr #8
9002292c:	0c3a      	lsrs	r2, r7, #16
9002292e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90022932:	4a18      	ldr	r2, [pc, #96]	; (90022994 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
90022934:	b2c0      	uxtb	r0, r0
90022936:	ea02 2000 	and.w	r0, r2, r0, lsl #8
9002293a:	1c4a      	adds	r2, r1, #1
9002293c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90022940:	0a3a      	lsrs	r2, r7, #8
90022942:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90022946:	00c9      	lsls	r1, r1, #3
90022948:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
9002294c:	4301      	orrs	r1, r0
9002294e:	1c58      	adds	r0, r3, #1
90022950:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90022954:	eb07 2710 	add.w	r7, r7, r0, lsr #8
90022958:	f3c7 00c4 	ubfx	r0, r7, #3, #5
9002295c:	4308      	orrs	r0, r1
9002295e:	f8a9 0000 	strh.w	r0, [r9]
90022962:	9b27      	ldr	r3, [sp, #156]	; 0x9c
90022964:	f109 0902 	add.w	r9, r9, #2
90022968:	9a25      	ldr	r2, [sp, #148]	; 0x94
9002296a:	f10b 3bff 	add.w	fp, fp, #4294967295
9002296e:	441a      	add	r2, r3
90022970:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90022972:	9225      	str	r2, [sp, #148]	; 0x94
90022974:	441d      	add	r5, r3
90022976:	e64c      	b.n	90022612 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
90022978:	2800      	cmp	r0, #0
9002297a:	f43f aeed 	beq.w	90022758 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
9002297e:	5c79      	ldrb	r1, [r7, r1]
90022980:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90022984:	9109      	str	r1, [sp, #36]	; 0x24
90022986:	0e09      	lsrs	r1, r1, #24
90022988:	9111      	str	r1, [sp, #68]	; 0x44
9002298a:	e6e5      	b.n	90022758 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
9002298c:	b01b      	add	sp, #108	; 0x6c
9002298e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90022992:	bf00      	nop
90022994:	fffff800 	.word	0xfffff800

90022998 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
90022998:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002299c:	b085      	sub	sp, #20
9002299e:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
900229a2:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
900229a6:	2800      	cmp	r0, #0
900229a8:	9103      	str	r1, [sp, #12]
900229aa:	fb00 7406 	mla	r4, r0, r6, r7
900229ae:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
900229b2:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
900229b6:	eb02 0544 	add.w	r5, r2, r4, lsl #1
900229ba:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
900229be:	eb03 0904 	add.w	r9, r3, r4
900229c2:	9501      	str	r5, [sp, #4]
900229c4:	f2c0 8150 	blt.w	90022c68 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
900229c8:	4583      	cmp	fp, r0
900229ca:	f340 814d 	ble.w	90022c68 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
900229ce:	2f00      	cmp	r7, #0
900229d0:	f2c0 8146 	blt.w	90022c60 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
900229d4:	42be      	cmp	r6, r7
900229d6:	f340 8143 	ble.w	90022c60 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
900229da:	f813 c004 	ldrb.w	ip, [r3, r4]
900229de:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
900229e2:	f64f 041f 	movw	r4, #63519	; 0xf81f
900229e6:	ea4f 02ec 	mov.w	r2, ip, asr #3
900229ea:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
900229ee:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
900229f2:	4355      	muls	r5, r2
900229f4:	fb0c f203 	mul.w	r2, ip, r3
900229f8:	ea04 1355 	and.w	r3, r4, r5, lsr #5
900229fc:	f605 0501 	addw	r5, r5, #2049	; 0x801
90022a00:	441d      	add	r5, r3
90022a02:	f102 0320 	add.w	r3, r2, #32
90022a06:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90022a0a:	ea04 1455 	and.w	r4, r4, r5, lsr #5
90022a0e:	0a1b      	lsrs	r3, r3, #8
90022a10:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90022a14:	431c      	orrs	r4, r3
90022a16:	1c7b      	adds	r3, r7, #1
90022a18:	f100 812b 	bmi.w	90022c72 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
90022a1c:	429e      	cmp	r6, r3
90022a1e:	f340 8128 	ble.w	90022c72 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
90022a22:	2900      	cmp	r1, #0
90022a24:	f000 8128 	beq.w	90022c78 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
90022a28:	9a01      	ldr	r2, [sp, #4]
90022a2a:	f899 3001 	ldrb.w	r3, [r9, #1]
90022a2e:	8855      	ldrh	r5, [r2, #2]
90022a30:	ea4f 08e3 	mov.w	r8, r3, asr #3
90022a34:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
90022a38:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90022a3c:	fb08 f802 	mul.w	r8, r8, r2
90022a40:	f64f 021f 	movw	r2, #63519	; 0xf81f
90022a44:	435d      	muls	r5, r3
90022a46:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
90022a4a:	f608 0801 	addw	r8, r8, #2049	; 0x801
90022a4e:	44d0      	add	r8, sl
90022a50:	f105 0a20 	add.w	sl, r5, #32
90022a54:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
90022a58:	ea02 1258 	and.w	r2, r2, r8, lsr #5
90022a5c:	0a2d      	lsrs	r5, r5, #8
90022a5e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90022a62:	432a      	orrs	r2, r5
90022a64:	3001      	adds	r0, #1
90022a66:	f100 810d 	bmi.w	90022c84 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
90022a6a:	4583      	cmp	fp, r0
90022a6c:	f340 810a 	ble.w	90022c84 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
90022a70:	f1be 0f00 	cmp.w	lr, #0
90022a74:	f000 810b 	beq.w	90022c8e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
90022a78:	2f00      	cmp	r7, #0
90022a7a:	f2c0 8100 	blt.w	90022c7e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
90022a7e:	42be      	cmp	r6, r7
90022a80:	f340 80fd 	ble.w	90022c7e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
90022a84:	9801      	ldr	r0, [sp, #4]
90022a86:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
90022a8a:	f819 5006 	ldrb.w	r5, [r9, r6]
90022a8e:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
90022a92:	ea4f 0ae5 	mov.w	sl, r5, asr #3
90022a96:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
90022a9a:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
90022a9e:	fb0a fa00 	mul.w	sl, sl, r0
90022aa2:	fb05 f808 	mul.w	r8, r5, r8
90022aa6:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
90022aaa:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
90022aae:	4482      	add	sl, r0
90022ab0:	f108 0020 	add.w	r0, r8, #32
90022ab4:	eb00 2018 	add.w	r0, r0, r8, lsr #8
90022ab8:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
90022abc:	0a00      	lsrs	r0, r0, #8
90022abe:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90022ac2:	ea4b 0b00 	orr.w	fp, fp, r0
90022ac6:	3701      	adds	r7, #1
90022ac8:	f100 80e6 	bmi.w	90022c98 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
90022acc:	42be      	cmp	r6, r7
90022ace:	f340 80e3 	ble.w	90022c98 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
90022ad2:	2900      	cmp	r1, #0
90022ad4:	f000 80e3 	beq.w	90022c9e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
90022ad8:	3601      	adds	r6, #1
90022ada:	9801      	ldr	r0, [sp, #4]
90022adc:	f819 7006 	ldrb.w	r7, [r9, r6]
90022ae0:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
90022ae4:	ea4f 09e7 	mov.w	r9, r7, asr #3
90022ae8:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
90022aec:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90022af0:	fb09 f906 	mul.w	r9, r9, r6
90022af4:	fb07 f800 	mul.w	r8, r7, r0
90022af8:	f64f 001f 	movw	r0, #63519	; 0xf81f
90022afc:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
90022b00:	f609 0901 	addw	r9, r9, #2049	; 0x801
90022b04:	44d1      	add	r9, sl
90022b06:	ea00 1659 	and.w	r6, r0, r9, lsr #5
90022b0a:	f108 0020 	add.w	r0, r8, #32
90022b0e:	eb00 2018 	add.w	r0, r0, r8, lsr #8
90022b12:	0a00      	lsrs	r0, r0, #8
90022b14:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90022b18:	4330      	orrs	r0, r6
90022b1a:	b28e      	uxth	r6, r1
90022b1c:	fa1f f98e 	uxth.w	r9, lr
90022b20:	ea4f 4a04 	mov.w	sl, r4, lsl #16
90022b24:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
90022b28:	fb06 f809 	mul.w	r8, r6, r9
90022b2c:	0136      	lsls	r6, r6, #4
90022b2e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90022b32:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
90022b36:	9601      	str	r6, [sp, #4]
90022b38:	ea4a 0404 	orr.w	r4, sl, r4
90022b3c:	ea4f 4a02 	mov.w	sl, r2, lsl #16
90022b40:	fa1f f689 	uxth.w	r6, r9
90022b44:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90022b48:	fb11 f90e 	smulbb	r9, r1, lr
90022b4c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90022b50:	9602      	str	r6, [sp, #8]
90022b52:	4626      	mov	r6, r4
90022b54:	f3c9 09c7 	ubfx	r9, r9, #3, #8
90022b58:	f1ce 0410 	rsb	r4, lr, #16
90022b5c:	ea4a 0202 	orr.w	r2, sl, r2
90022b60:	ea4f 4a00 	mov.w	sl, r0, lsl #16
90022b64:	1a64      	subs	r4, r4, r1
90022b66:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
90022b6a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90022b6e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90022b72:	434a      	muls	r2, r1
90022b74:	eb09 0444 	add.w	r4, r9, r4, lsl #1
90022b78:	ea4a 0000 	orr.w	r0, sl, r0
90022b7c:	9903      	ldr	r1, [sp, #12]
90022b7e:	fb04 2406 	mla	r4, r4, r6, r2
90022b82:	9e02      	ldr	r6, [sp, #8]
90022b84:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
90022b88:	fb09 4200 	mla	r2, r9, r0, r4
90022b8c:	ea4f 440b 	mov.w	r4, fp, lsl #16
90022b90:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
90022b94:	8808      	ldrh	r0, [r1, #0]
90022b96:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
90022b9a:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
90022b9e:	ea44 0b0b 	orr.w	fp, r4, fp
90022ba2:	9c01      	ldr	r4, [sp, #4]
90022ba4:	b289      	uxth	r1, r1
90022ba6:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
90022baa:	fb0e 2e0b 	mla	lr, lr, fp, r2
90022bae:	1ba4      	subs	r4, r4, r6
90022bb0:	9e01      	ldr	r6, [sp, #4]
90022bb2:	ea4f 525e 	mov.w	r2, lr, lsr #21
90022bb6:	eba6 0608 	sub.w	r6, r6, r8
90022bba:	b2a4      	uxth	r4, r4
90022bbc:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90022bc0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90022bc4:	b2b6      	uxth	r6, r6
90022bc6:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
90022bca:	4373      	muls	r3, r6
90022bcc:	ea42 0e0e 	orr.w	lr, r2, lr
90022bd0:	fb0c 3304 	mla	r3, ip, r4, r3
90022bd4:	9c02      	ldr	r4, [sp, #8]
90022bd6:	fa1f f28e 	uxth.w	r2, lr
90022bda:	fb04 3505 	mla	r5, r4, r5, r3
90022bde:	10d4      	asrs	r4, r2, #3
90022be0:	fb08 5707 	mla	r7, r8, r7, r5
90022be4:	1215      	asrs	r5, r2, #8
90022be6:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
90022bea:	00d2      	lsls	r2, r2, #3
90022bec:	f3c7 2707 	ubfx	r7, r7, #8, #8
90022bf0:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
90022bf4:	b2d2      	uxtb	r2, r2
90022bf6:	434f      	muls	r7, r1
90022bf8:	1c7b      	adds	r3, r7, #1
90022bfa:	eb03 2717 	add.w	r7, r3, r7, lsr #8
90022bfe:	1203      	asrs	r3, r0, #8
90022c00:	ea6f 2717 	mvn.w	r7, r7, lsr #8
90022c04:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
90022c08:	b2ff      	uxtb	r7, r7
90022c0a:	fb13 f307 	smulbb	r3, r3, r7
90022c0e:	fb05 3501 	mla	r5, r5, r1, r3
90022c12:	10c3      	asrs	r3, r0, #3
90022c14:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
90022c18:	b2ad      	uxth	r5, r5
90022c1a:	fb13 f307 	smulbb	r3, r3, r7
90022c1e:	fb04 3401 	mla	r4, r4, r1, r3
90022c22:	00c3      	lsls	r3, r0, #3
90022c24:	b2db      	uxtb	r3, r3
90022c26:	b2a4      	uxth	r4, r4
90022c28:	fb13 f307 	smulbb	r3, r3, r7
90022c2c:	fb02 3101 	mla	r1, r2, r1, r3
90022c30:	1c6b      	adds	r3, r5, #1
90022c32:	1c62      	adds	r2, r4, #1
90022c34:	b289      	uxth	r1, r1
90022c36:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90022c3a:	1c4b      	adds	r3, r1, #1
90022c3c:	eb02 2414 	add.w	r4, r2, r4, lsr #8
90022c40:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
90022c44:	9a03      	ldr	r2, [sp, #12]
90022c46:	eb03 2311 	add.w	r3, r3, r1, lsr #8
90022c4a:	0964      	lsrs	r4, r4, #5
90022c4c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90022c50:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
90022c54:	432b      	orrs	r3, r5
90022c56:	4323      	orrs	r3, r4
90022c58:	8013      	strh	r3, [r2, #0]
90022c5a:	b005      	add	sp, #20
90022c5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90022c60:	f04f 0c00 	mov.w	ip, #0
90022c64:	4664      	mov	r4, ip
90022c66:	e6d6      	b.n	90022a16 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
90022c68:	2300      	movs	r3, #0
90022c6a:	469c      	mov	ip, r3
90022c6c:	461a      	mov	r2, r3
90022c6e:	461c      	mov	r4, r3
90022c70:	e6f8      	b.n	90022a64 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
90022c72:	2300      	movs	r3, #0
90022c74:	461a      	mov	r2, r3
90022c76:	e6f5      	b.n	90022a64 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
90022c78:	460b      	mov	r3, r1
90022c7a:	460a      	mov	r2, r1
90022c7c:	e6f2      	b.n	90022a64 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
90022c7e:	2500      	movs	r5, #0
90022c80:	46ab      	mov	fp, r5
90022c82:	e720      	b.n	90022ac6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
90022c84:	2700      	movs	r7, #0
90022c86:	463d      	mov	r5, r7
90022c88:	4638      	mov	r0, r7
90022c8a:	46bb      	mov	fp, r7
90022c8c:	e745      	b.n	90022b1a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
90022c8e:	4677      	mov	r7, lr
90022c90:	4675      	mov	r5, lr
90022c92:	4670      	mov	r0, lr
90022c94:	46f3      	mov	fp, lr
90022c96:	e740      	b.n	90022b1a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
90022c98:	2700      	movs	r7, #0
90022c9a:	4638      	mov	r0, r7
90022c9c:	e73d      	b.n	90022b1a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
90022c9e:	460f      	mov	r7, r1
90022ca0:	4608      	mov	r0, r1
90022ca2:	e73a      	b.n	90022b1a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

90022ca4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90022ca4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90022ca8:	b097      	sub	sp, #92	; 0x5c
90022caa:	9214      	str	r2, [sp, #80]	; 0x50
90022cac:	9308      	str	r3, [sp, #32]
90022cae:	9a25      	ldr	r2, [sp, #148]	; 0x94
90022cb0:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
90022cb4:	9015      	str	r0, [sp, #84]	; 0x54
90022cb6:	9312      	str	r3, [sp, #72]	; 0x48
90022cb8:	6850      	ldr	r0, [r2, #4]
90022cba:	9111      	str	r1, [sp, #68]	; 0x44
90022cbc:	6812      	ldr	r2, [r2, #0]
90022cbe:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
90022cc2:	fb00 1303 	mla	r3, r0, r3, r1
90022cc6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90022cca:	9309      	str	r3, [sp, #36]	; 0x24
90022ccc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90022cce:	681b      	ldr	r3, [r3, #0]
90022cd0:	930b      	str	r3, [sp, #44]	; 0x2c
90022cd2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90022cd4:	685b      	ldr	r3, [r3, #4]
90022cd6:	930c      	str	r3, [sp, #48]	; 0x30
90022cd8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
90022cdc:	930a      	str	r3, [sp, #40]	; 0x28
90022cde:	9b11      	ldr	r3, [sp, #68]	; 0x44
90022ce0:	2b00      	cmp	r3, #0
90022ce2:	dc03      	bgt.n	90022cec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90022ce4:	9b14      	ldr	r3, [sp, #80]	; 0x50
90022ce6:	2b00      	cmp	r3, #0
90022ce8:	f340 83cd 	ble.w	90023486 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
90022cec:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90022cee:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90022cf2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90022cf6:	1e48      	subs	r0, r1, #1
90022cf8:	1e55      	subs	r5, r2, #1
90022cfa:	9b08      	ldr	r3, [sp, #32]
90022cfc:	2b00      	cmp	r3, #0
90022cfe:	f340 81a5 	ble.w	9002304c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a8>
90022d02:	9e21      	ldr	r6, [sp, #132]	; 0x84
90022d04:	9b22      	ldr	r3, [sp, #136]	; 0x88
90022d06:	1436      	asrs	r6, r6, #16
90022d08:	ea4f 4323 	mov.w	r3, r3, asr #16
90022d0c:	d406      	bmi.n	90022d1c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90022d0e:	4286      	cmp	r6, r0
90022d10:	da04      	bge.n	90022d1c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90022d12:	2b00      	cmp	r3, #0
90022d14:	db02      	blt.n	90022d1c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90022d16:	42ab      	cmp	r3, r5
90022d18:	f2c0 8199 	blt.w	9002304e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
90022d1c:	3601      	adds	r6, #1
90022d1e:	f100 8186 	bmi.w	9002302e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90022d22:	42b1      	cmp	r1, r6
90022d24:	f2c0 8183 	blt.w	9002302e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90022d28:	3301      	adds	r3, #1
90022d2a:	f100 8180 	bmi.w	9002302e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90022d2e:	429a      	cmp	r2, r3
90022d30:	f2c0 817d 	blt.w	9002302e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90022d34:	9b08      	ldr	r3, [sp, #32]
90022d36:	f64f 061f 	movw	r6, #63519	; 0xf81f
90022d3a:	9f09      	ldr	r7, [sp, #36]	; 0x24
90022d3c:	9313      	str	r3, [sp, #76]	; 0x4c
90022d3e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
90022d40:	2b00      	cmp	r3, #0
90022d42:	f340 81a6 	ble.w	90023092 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
90022d46:	9b22      	ldr	r3, [sp, #136]	; 0x88
90022d48:	9d21      	ldr	r5, [sp, #132]	; 0x84
90022d4a:	1418      	asrs	r0, r3, #16
90022d4c:	9b21      	ldr	r3, [sp, #132]	; 0x84
90022d4e:	142d      	asrs	r5, r5, #16
90022d50:	f3c3 3103 	ubfx	r1, r3, #12, #4
90022d54:	9b22      	ldr	r3, [sp, #136]	; 0x88
90022d56:	f3c3 3c03 	ubfx	ip, r3, #12, #4
90022d5a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90022d5c:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
90022d60:	f100 81fa 	bmi.w	90023158 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90022d64:	f102 3eff 	add.w	lr, r2, #4294967295
90022d68:	4575      	cmp	r5, lr
90022d6a:	f280 81f5 	bge.w	90023158 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90022d6e:	2800      	cmp	r0, #0
90022d70:	f2c0 81f2 	blt.w	90023158 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90022d74:	f103 3eff 	add.w	lr, r3, #4294967295
90022d78:	4570      	cmp	r0, lr
90022d7a:	f280 81ed 	bge.w	90023158 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90022d7e:	b212      	sxth	r2, r2
90022d80:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90022d82:	fa1f fe81 	uxth.w	lr, r1
90022d86:	fb00 5002 	mla	r0, r0, r2, r5
90022d8a:	ea4f 150e 	mov.w	r5, lr, lsl #4
90022d8e:	eb03 0a00 	add.w	sl, r3, r0
90022d92:	f813 9000 	ldrb.w	r9, [r3, r0]
90022d96:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
90022d9a:	f89a 8001 	ldrb.w	r8, [sl, #1]
90022d9e:	b29b      	uxth	r3, r3
90022da0:	f1bc 0f00 	cmp.w	ip, #0
90022da4:	f000 81bb 	beq.w	9002311e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
90022da8:	f81a 4002 	ldrb.w	r4, [sl, r2]
90022dac:	eb0a 0b02 	add.w	fp, sl, r2
90022db0:	fa1f fa8c 	uxth.w	sl, ip
90022db4:	940d      	str	r4, [sp, #52]	; 0x34
90022db6:	fb0a fe0e 	mul.w	lr, sl, lr
90022dba:	f89b 4001 	ldrb.w	r4, [fp, #1]
90022dbe:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
90022dc2:	eba5 050e 	sub.w	r5, r5, lr
90022dc6:	940e      	str	r4, [sp, #56]	; 0x38
90022dc8:	fa1f fa8a 	uxth.w	sl, sl
90022dcc:	9c0d      	ldr	r4, [sp, #52]	; 0x34
90022dce:	b2ad      	uxth	r5, r5
90022dd0:	eba3 030a 	sub.w	r3, r3, sl
90022dd4:	fb08 f505 	mul.w	r5, r8, r5
90022dd8:	b29b      	uxth	r3, r3
90022dda:	fb09 5303 	mla	r3, r9, r3, r5
90022dde:	fb0a 3304 	mla	r3, sl, r4, r3
90022de2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90022de4:	fb0e 3304 	mla	r3, lr, r4, r3
90022de8:	f3c3 2307 	ubfx	r3, r3, #8, #8
90022dec:	2b00      	cmp	r3, #0
90022dee:	f000 8111 	beq.w	90023014 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90022df2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90022df4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
90022df8:	eb04 0540 	add.w	r5, r4, r0, lsl #1
90022dfc:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
90022e00:	f000 8192 	beq.w	90023128 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
90022e04:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
90022e08:	ea4f 0ae9 	mov.w	sl, r9, asr #3
90022e0c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90022e10:	fb0a fe0e 	mul.w	lr, sl, lr
90022e14:	fb09 f000 	mul.w	r0, r9, r0
90022e18:	ea06 195e 	and.w	r9, r6, lr, lsr #5
90022e1c:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
90022e20:	f100 0b20 	add.w	fp, r0, #32
90022e24:	44ce      	add	lr, r9
90022e26:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
90022e2a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
90022e2e:	ea4f 2919 	mov.w	r9, r9, lsr #8
90022e32:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
90022e36:	ea4e 0909 	orr.w	r9, lr, r9
90022e3a:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
90022e3e:	8868      	ldrh	r0, [r5, #2]
90022e40:	d019      	beq.n	90022e76 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
90022e42:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
90022e46:	ea4f 0ae8 	mov.w	sl, r8, asr #3
90022e4a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90022e4e:	fb0a fe0e 	mul.w	lr, sl, lr
90022e52:	fb08 f800 	mul.w	r8, r8, r0
90022e56:	ea06 105e 	and.w	r0, r6, lr, lsr #5
90022e5a:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
90022e5e:	f108 0b20 	add.w	fp, r8, #32
90022e62:	4486      	add	lr, r0
90022e64:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
90022e68:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
90022e6c:	0a00      	lsrs	r0, r0, #8
90022e6e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90022e72:	ea4e 0000 	orr.w	r0, lr, r0
90022e76:	ea4f 4e09 	mov.w	lr, r9, lsl #16
90022e7a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
90022e7e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
90022e82:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90022e86:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
90022e8a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90022e8e:	ea4e 0909 	orr.w	r9, lr, r9
90022e92:	ea4a 0000 	orr.w	r0, sl, r0
90022e96:	f1bc 0f00 	cmp.w	ip, #0
90022e9a:	f000 8147 	beq.w	9002312c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>
90022e9e:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
90022ea2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
90022ea4:	3a01      	subs	r2, #1
90022ea6:	2cff      	cmp	r4, #255	; 0xff
90022ea8:	ea4f 0242 	mov.w	r2, r2, lsl #1
90022eac:	f102 0202 	add.w	r2, r2, #2
90022eb0:	eb05 0e02 	add.w	lr, r5, r2
90022eb4:	5aaa      	ldrh	r2, [r5, r2]
90022eb6:	d018      	beq.n	90022eea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
90022eb8:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
90022ebc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90022ec0:	ea4f 08e4 	mov.w	r8, r4, asr #3
90022ec4:	fb04 fa02 	mul.w	sl, r4, r2
90022ec8:	fb08 f805 	mul.w	r8, r8, r5
90022ecc:	f10a 0520 	add.w	r5, sl, #32
90022ed0:	ea06 1258 	and.w	r2, r6, r8, lsr #5
90022ed4:	f608 0801 	addw	r8, r8, #2049	; 0x801
90022ed8:	eb05 251a 	add.w	r5, r5, sl, lsr #8
90022edc:	4442      	add	r2, r8
90022ede:	0a2d      	lsrs	r5, r5, #8
90022ee0:	ea06 1252 	and.w	r2, r6, r2, lsr #5
90022ee4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90022ee8:	432a      	orrs	r2, r5
90022eea:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90022eec:	f8be 5002 	ldrh.w	r5, [lr, #2]
90022ef0:	2cff      	cmp	r4, #255	; 0xff
90022ef2:	d01a      	beq.n	90022f2a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x286>
90022ef4:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
90022ef8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90022efc:	ea4f 08e4 	mov.w	r8, r4, asr #3
90022f00:	fb04 fa05 	mul.w	sl, r4, r5
90022f04:	fb08 f80e 	mul.w	r8, r8, lr
90022f08:	f10a 0e20 	add.w	lr, sl, #32
90022f0c:	ea06 1558 	and.w	r5, r6, r8, lsr #5
90022f10:	f608 0801 	addw	r8, r8, #2049	; 0x801
90022f14:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
90022f18:	4445      	add	r5, r8
90022f1a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90022f1e:	ea06 1555 	and.w	r5, r6, r5, lsr #5
90022f22:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
90022f26:	ea45 050e 	orr.w	r5, r5, lr
90022f2a:	fb1c fe01 	smulbb	lr, ip, r1
90022f2e:	f1cc 0810 	rsb	r8, ip, #16
90022f32:	ea4f 4a02 	mov.w	sl, r2, lsl #16
90022f36:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90022f3a:	ea4f 0eee 	mov.w	lr, lr, asr #3
90022f3e:	eba8 0801 	sub.w	r8, r8, r1
90022f42:	ea4f 4b05 	mov.w	fp, r5, lsl #16
90022f46:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90022f4a:	ebce 0141 	rsb	r1, lr, r1, lsl #1
90022f4e:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
90022f52:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
90022f56:	ea4a 0202 	orr.w	r2, sl, r2
90022f5a:	4341      	muls	r1, r0
90022f5c:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
90022f60:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90022f64:	fb09 1108 	mla	r1, r9, r8, r1
90022f68:	ea4b 0505 	orr.w	r5, fp, r5
90022f6c:	fb0c 1102 	mla	r1, ip, r2, r1
90022f70:	fb0e 1e05 	mla	lr, lr, r5, r1
90022f74:	ea4f 525e 	mov.w	r2, lr, lsr #21
90022f78:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90022f7c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90022f80:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
90022f84:	ea42 0e0e 	orr.w	lr, r2, lr
90022f88:	fa1f f28e 	uxth.w	r2, lr
90022f8c:	2bff      	cmp	r3, #255	; 0xff
90022f8e:	d103      	bne.n	90022f98 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90022f90:	9912      	ldr	r1, [sp, #72]	; 0x48
90022f92:	29ff      	cmp	r1, #255	; 0xff
90022f94:	f000 80de 	beq.w	90023154 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
90022f98:	990a      	ldr	r1, [sp, #40]	; 0x28
90022f9a:	1215      	asrs	r5, r2, #8
90022f9c:	8838      	ldrh	r0, [r7, #0]
90022f9e:	434b      	muls	r3, r1
90022fa0:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
90022fa4:	9c0a      	ldr	r4, [sp, #40]	; 0x28
90022fa6:	f103 0c01 	add.w	ip, r3, #1
90022faa:	eb0c 2323 	add.w	r3, ip, r3, asr #8
90022fae:	ea6f 2323 	mvn.w	r3, r3, asr #8
90022fb2:	fa5f fc83 	uxtb.w	ip, r3
90022fb6:	1203      	asrs	r3, r0, #8
90022fb8:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
90022fbc:	fb13 f30c 	smulbb	r3, r3, ip
90022fc0:	fb05 3501 	mla	r5, r5, r1, r3
90022fc4:	10c3      	asrs	r3, r0, #3
90022fc6:	10d1      	asrs	r1, r2, #3
90022fc8:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
90022fcc:	00d2      	lsls	r2, r2, #3
90022fce:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
90022fd2:	b2ad      	uxth	r5, r5
90022fd4:	fb13 f30c 	smulbb	r3, r3, ip
90022fd8:	b2d2      	uxtb	r2, r2
90022fda:	fb01 3104 	mla	r1, r1, r4, r3
90022fde:	00c3      	lsls	r3, r0, #3
90022fe0:	b2db      	uxtb	r3, r3
90022fe2:	b289      	uxth	r1, r1
90022fe4:	fb13 f30c 	smulbb	r3, r3, ip
90022fe8:	fb02 3304 	mla	r3, r2, r4, r3
90022fec:	b29a      	uxth	r2, r3
90022fee:	1c6b      	adds	r3, r5, #1
90022ff0:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90022ff4:	1c53      	adds	r3, r2, #1
90022ff6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90022ffa:	1c4a      	adds	r2, r1, #1
90022ffc:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
90023000:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90023004:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90023008:	0949      	lsrs	r1, r1, #5
9002300a:	432b      	orrs	r3, r5
9002300c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90023010:	430b      	orrs	r3, r1
90023012:	803b      	strh	r3, [r7, #0]
90023014:	9b21      	ldr	r3, [sp, #132]	; 0x84
90023016:	3702      	adds	r7, #2
90023018:	9a23      	ldr	r2, [sp, #140]	; 0x8c
9002301a:	4413      	add	r3, r2
9002301c:	9a22      	ldr	r2, [sp, #136]	; 0x88
9002301e:	9321      	str	r3, [sp, #132]	; 0x84
90023020:	9b24      	ldr	r3, [sp, #144]	; 0x90
90023022:	441a      	add	r2, r3
90023024:	9b13      	ldr	r3, [sp, #76]	; 0x4c
90023026:	3b01      	subs	r3, #1
90023028:	9222      	str	r2, [sp, #136]	; 0x88
9002302a:	9313      	str	r3, [sp, #76]	; 0x4c
9002302c:	e687      	b.n	90022d3e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
9002302e:	9b21      	ldr	r3, [sp, #132]	; 0x84
90023030:	9e23      	ldr	r6, [sp, #140]	; 0x8c
90023032:	9c22      	ldr	r4, [sp, #136]	; 0x88
90023034:	4433      	add	r3, r6
90023036:	9321      	str	r3, [sp, #132]	; 0x84
90023038:	9b24      	ldr	r3, [sp, #144]	; 0x90
9002303a:	441c      	add	r4, r3
9002303c:	9b08      	ldr	r3, [sp, #32]
9002303e:	3b01      	subs	r3, #1
90023040:	9422      	str	r4, [sp, #136]	; 0x88
90023042:	9308      	str	r3, [sp, #32]
90023044:	9b09      	ldr	r3, [sp, #36]	; 0x24
90023046:	3302      	adds	r3, #2
90023048:	9309      	str	r3, [sp, #36]	; 0x24
9002304a:	e656      	b.n	90022cfa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
9002304c:	d028      	beq.n	900230a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
9002304e:	9b08      	ldr	r3, [sp, #32]
90023050:	9823      	ldr	r0, [sp, #140]	; 0x8c
90023052:	3b01      	subs	r3, #1
90023054:	9d21      	ldr	r5, [sp, #132]	; 0x84
90023056:	fb00 5003 	mla	r0, r0, r3, r5
9002305a:	1400      	asrs	r0, r0, #16
9002305c:	f53f ae6a 	bmi.w	90022d34 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90023060:	3901      	subs	r1, #1
90023062:	4288      	cmp	r0, r1
90023064:	f6bf ae66 	bge.w	90022d34 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90023068:	9924      	ldr	r1, [sp, #144]	; 0x90
9002306a:	9822      	ldr	r0, [sp, #136]	; 0x88
9002306c:	fb01 0303 	mla	r3, r1, r3, r0
90023070:	141b      	asrs	r3, r3, #16
90023072:	f53f ae5f 	bmi.w	90022d34 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90023076:	3a01      	subs	r2, #1
90023078:	4293      	cmp	r3, r2
9002307a:	f6bf ae5b 	bge.w	90022d34 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9002307e:	9b08      	ldr	r3, [sp, #32]
90023080:	f64f 061f 	movw	r6, #63519	; 0xf81f
90023084:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
90023088:	9313      	str	r3, [sp, #76]	; 0x4c
9002308a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
9002308c:	2b00      	cmp	r3, #0
9002308e:	f300 8082 	bgt.w	90023196 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f2>
90023092:	9b08      	ldr	r3, [sp, #32]
90023094:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90023098:	9b09      	ldr	r3, [sp, #36]	; 0x24
9002309a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
9002309e:	9309      	str	r3, [sp, #36]	; 0x24
900230a0:	9b11      	ldr	r3, [sp, #68]	; 0x44
900230a2:	2b00      	cmp	r3, #0
900230a4:	f340 81ef 	ble.w	90023486 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
900230a8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
900230ac:	9b20      	ldr	r3, [sp, #128]	; 0x80
900230ae:	ee30 0a04 	vadd.f32	s0, s0, s8
900230b2:	ee70 0aa4 	vadd.f32	s1, s1, s9
900230b6:	eef0 6a62 	vmov.f32	s13, s5
900230ba:	eec7 7a00 	vdiv.f32	s15, s14, s0
900230be:	ee31 1a05 	vadd.f32	s2, s2, s10
900230c2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900230c6:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
900230ca:	eef0 6a43 	vmov.f32	s13, s6
900230ce:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900230d2:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
900230d6:	ee20 7aa7 	vmul.f32	s14, s1, s15
900230da:	ee61 7a27 	vmul.f32	s15, s2, s15
900230de:	ee77 2a62 	vsub.f32	s5, s14, s5
900230e2:	ee37 3ac3 	vsub.f32	s6, s15, s6
900230e6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900230ea:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900230ee:	ee12 2a90 	vmov	r2, s5
900230f2:	eef0 2a47 	vmov.f32	s5, s14
900230f6:	fb92 f3f3 	sdiv	r3, r2, r3
900230fa:	ee13 2a10 	vmov	r2, s6
900230fe:	9323      	str	r3, [sp, #140]	; 0x8c
90023100:	9b20      	ldr	r3, [sp, #128]	; 0x80
90023102:	eeb0 3a67 	vmov.f32	s6, s15
90023106:	fb92 f3f3 	sdiv	r3, r2, r3
9002310a:	9324      	str	r3, [sp, #144]	; 0x90
9002310c:	9b11      	ldr	r3, [sp, #68]	; 0x44
9002310e:	9a14      	ldr	r2, [sp, #80]	; 0x50
90023110:	3b01      	subs	r3, #1
90023112:	9311      	str	r3, [sp, #68]	; 0x44
90023114:	9b20      	ldr	r3, [sp, #128]	; 0x80
90023116:	bf08      	it	eq
90023118:	4613      	moveq	r3, r2
9002311a:	9308      	str	r3, [sp, #32]
9002311c:	e5df      	b.n	90022cde <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
9002311e:	fb08 f505 	mul.w	r5, r8, r5
90023122:	fb09 5303 	mla	r3, r9, r3, r5
90023126:	e65f      	b.n	90022de8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
90023128:	4681      	mov	r9, r0
9002312a:	e686      	b.n	90022e3a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
9002312c:	f1c1 0210 	rsb	r2, r1, #16
90023130:	4341      	muls	r1, r0
90023132:	fb09 1902 	mla	r9, r9, r2, r1
90023136:	ea4f 0949 	mov.w	r9, r9, lsl #1
9002313a:	ea4f 5259 	mov.w	r2, r9, lsr #21
9002313e:	ea4f 1959 	mov.w	r9, r9, lsr #5
90023142:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90023146:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
9002314a:	ea42 0909 	orr.w	r9, r2, r9
9002314e:	fa1f f289 	uxth.w	r2, r9
90023152:	e71b      	b.n	90022f8c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
90023154:	803a      	strh	r2, [r7, #0]
90023156:	e75d      	b.n	90023014 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90023158:	f115 0e01 	adds.w	lr, r5, #1
9002315c:	f53f af5a 	bmi.w	90023014 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90023160:	4572      	cmp	r2, lr
90023162:	f6ff af57 	blt.w	90023014 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90023166:	f110 0e01 	adds.w	lr, r0, #1
9002316a:	f53f af53 	bmi.w	90023014 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
9002316e:	4573      	cmp	r3, lr
90023170:	f6ff af50 	blt.w	90023014 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90023174:	9c12      	ldr	r4, [sp, #72]	; 0x48
90023176:	b21b      	sxth	r3, r3
90023178:	b212      	sxth	r2, r2
9002317a:	9502      	str	r5, [sp, #8]
9002317c:	9301      	str	r3, [sp, #4]
9002317e:	9200      	str	r2, [sp, #0]
90023180:	e9cd 0103 	strd	r0, r1, [sp, #12]
90023184:	e9cd c405 	strd	ip, r4, [sp, #20]
90023188:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
9002318c:	4639      	mov	r1, r7
9002318e:	9815      	ldr	r0, [sp, #84]	; 0x54
90023190:	f7ff fc02 	bl	90022998 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
90023194:	e73e      	b.n	90023014 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90023196:	9b21      	ldr	r3, [sp, #132]	; 0x84
90023198:	f3c3 3203 	ubfx	r2, r3, #12, #4
9002319c:	9b22      	ldr	r3, [sp, #136]	; 0x88
9002319e:	f3c3 3503 	ubfx	r5, r3, #12, #4
900231a2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
900231a4:	fa1f fc82 	uxth.w	ip, r2
900231a8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900231ac:	9b22      	ldr	r3, [sp, #136]	; 0x88
900231ae:	ea4f 100c 	mov.w	r0, ip, lsl #4
900231b2:	141f      	asrs	r7, r3, #16
900231b4:	9b21      	ldr	r3, [sp, #132]	; 0x84
900231b6:	141b      	asrs	r3, r3, #16
900231b8:	fb01 3707 	mla	r7, r1, r7, r3
900231bc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
900231be:	eb03 0a07 	add.w	sl, r3, r7
900231c2:	f813 9007 	ldrb.w	r9, [r3, r7]
900231c6:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
900231ca:	f89a 8001 	ldrb.w	r8, [sl, #1]
900231ce:	b29b      	uxth	r3, r3
900231d0:	2d00      	cmp	r5, #0
900231d2:	f000 813d 	beq.w	90023450 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>
900231d6:	f81a 4001 	ldrb.w	r4, [sl, r1]
900231da:	eb0a 0b01 	add.w	fp, sl, r1
900231de:	fa1f fa85 	uxth.w	sl, r5
900231e2:	940f      	str	r4, [sp, #60]	; 0x3c
900231e4:	fb0a fc0c 	mul.w	ip, sl, ip
900231e8:	f89b 4001 	ldrb.w	r4, [fp, #1]
900231ec:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
900231f0:	eba0 000c 	sub.w	r0, r0, ip
900231f4:	9410      	str	r4, [sp, #64]	; 0x40
900231f6:	fa1f fa8a 	uxth.w	sl, sl
900231fa:	b280      	uxth	r0, r0
900231fc:	eba3 030a 	sub.w	r3, r3, sl
90023200:	fb08 f000 	mul.w	r0, r8, r0
90023204:	b29b      	uxth	r3, r3
90023206:	fb09 0303 	mla	r3, r9, r3, r0
9002320a:	980f      	ldr	r0, [sp, #60]	; 0x3c
9002320c:	fb0a 3300 	mla	r3, sl, r0, r3
90023210:	fb0c 3304 	mla	r3, ip, r4, r3
90023214:	f3c3 2307 	ubfx	r3, r3, #8, #8
90023218:	2b00      	cmp	r3, #0
9002321a:	f000 810b 	beq.w	90023434 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
9002321e:	980b      	ldr	r0, [sp, #44]	; 0x2c
90023220:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
90023224:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90023226:	eb00 0047 	add.w	r0, r0, r7, lsl #1
9002322a:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
9002322e:	f000 8114 	beq.w	9002345a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
90023232:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
90023236:	ea4f 0ae9 	mov.w	sl, r9, asr #3
9002323a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
9002323e:	fb0a fc0c 	mul.w	ip, sl, ip
90023242:	fb09 f707 	mul.w	r7, r9, r7
90023246:	ea06 195c 	and.w	r9, r6, ip, lsr #5
9002324a:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
9002324e:	f107 0b20 	add.w	fp, r7, #32
90023252:	44cc      	add	ip, r9
90023254:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
90023258:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
9002325c:	ea4f 2919 	mov.w	r9, r9, lsr #8
90023260:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
90023264:	ea4c 0909 	orr.w	r9, ip, r9
90023268:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
9002326c:	8847      	ldrh	r7, [r0, #2]
9002326e:	d019      	beq.n	900232a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x600>
90023270:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
90023274:	ea4f 0ae8 	mov.w	sl, r8, asr #3
90023278:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
9002327c:	fb0a fc0c 	mul.w	ip, sl, ip
90023280:	fb08 f807 	mul.w	r8, r8, r7
90023284:	ea06 175c 	and.w	r7, r6, ip, lsr #5
90023288:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
9002328c:	f108 0b20 	add.w	fp, r8, #32
90023290:	44bc      	add	ip, r7
90023292:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
90023296:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
9002329a:	0a3f      	lsrs	r7, r7, #8
9002329c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
900232a0:	ea4c 0707 	orr.w	r7, ip, r7
900232a4:	ea4f 4c09 	mov.w	ip, r9, lsl #16
900232a8:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
900232ac:	ea4f 4a07 	mov.w	sl, r7, lsl #16
900232b0:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
900232b4:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
900232b8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
900232bc:	ea4c 0909 	orr.w	r9, ip, r9
900232c0:	ea4a 0707 	orr.w	r7, sl, r7
900232c4:	2d00      	cmp	r5, #0
900232c6:	f000 80ca 	beq.w	9002345e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ba>
900232ca:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
900232ce:	3901      	subs	r1, #1
900232d0:	0049      	lsls	r1, r1, #1
900232d2:	3102      	adds	r1, #2
900232d4:	eb00 0c01 	add.w	ip, r0, r1
900232d8:	5a41      	ldrh	r1, [r0, r1]
900232da:	980f      	ldr	r0, [sp, #60]	; 0x3c
900232dc:	28ff      	cmp	r0, #255	; 0xff
900232de:	d019      	beq.n	90023314 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x670>
900232e0:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
900232e4:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
900232e6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
900232ea:	ea4f 08e4 	mov.w	r8, r4, asr #3
900232ee:	fb04 fa01 	mul.w	sl, r4, r1
900232f2:	fb08 f800 	mul.w	r8, r8, r0
900232f6:	f10a 0020 	add.w	r0, sl, #32
900232fa:	ea06 1158 	and.w	r1, r6, r8, lsr #5
900232fe:	f608 0801 	addw	r8, r8, #2049	; 0x801
90023302:	eb00 201a 	add.w	r0, r0, sl, lsr #8
90023306:	4441      	add	r1, r8
90023308:	0a00      	lsrs	r0, r0, #8
9002330a:	ea06 1151 	and.w	r1, r6, r1, lsr #5
9002330e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90023312:	4301      	orrs	r1, r0
90023314:	9c10      	ldr	r4, [sp, #64]	; 0x40
90023316:	f8bc 0002 	ldrh.w	r0, [ip, #2]
9002331a:	2cff      	cmp	r4, #255	; 0xff
9002331c:	d01a      	beq.n	90023354 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b0>
9002331e:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
90023322:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90023326:	ea4f 08e4 	mov.w	r8, r4, asr #3
9002332a:	fb04 fa00 	mul.w	sl, r4, r0
9002332e:	fb08 f80c 	mul.w	r8, r8, ip
90023332:	f10a 0c20 	add.w	ip, sl, #32
90023336:	ea06 1058 	and.w	r0, r6, r8, lsr #5
9002333a:	f608 0801 	addw	r8, r8, #2049	; 0x801
9002333e:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
90023342:	4440      	add	r0, r8
90023344:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023348:	ea06 1050 	and.w	r0, r6, r0, lsr #5
9002334c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
90023350:	ea40 000c 	orr.w	r0, r0, ip
90023354:	fb15 fc02 	smulbb	ip, r5, r2
90023358:	f1c5 0810 	rsb	r8, r5, #16
9002335c:	ea4f 4a01 	mov.w	sl, r1, lsl #16
90023360:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
90023364:	ea4f 0cec 	mov.w	ip, ip, asr #3
90023368:	eba8 0802 	sub.w	r8, r8, r2
9002336c:	ea4f 4b00 	mov.w	fp, r0, lsl #16
90023370:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90023374:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
90023378:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
9002337c:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
90023380:	ea4a 0101 	orr.w	r1, sl, r1
90023384:	437a      	muls	r2, r7
90023386:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
9002338a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
9002338e:	fb09 2208 	mla	r2, r9, r8, r2
90023392:	ea4b 0000 	orr.w	r0, fp, r0
90023396:	fb05 2201 	mla	r2, r5, r1, r2
9002339a:	fb0c 2200 	mla	r2, ip, r0, r2
9002339e:	0d57      	lsrs	r7, r2, #21
900233a0:	0952      	lsrs	r2, r2, #5
900233a2:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
900233a6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
900233aa:	433a      	orrs	r2, r7
900233ac:	2bff      	cmp	r3, #255	; 0xff
900233ae:	b292      	uxth	r2, r2
900233b0:	d102      	bne.n	900233b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
900233b2:	9912      	ldr	r1, [sp, #72]	; 0x48
900233b4:	29ff      	cmp	r1, #255	; 0xff
900233b6:	d063      	beq.n	90023480 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7dc>
900233b8:	980a      	ldr	r0, [sp, #40]	; 0x28
900233ba:	1215      	asrs	r5, r2, #8
900233bc:	f8be 1000 	ldrh.w	r1, [lr]
900233c0:	4343      	muls	r3, r0
900233c2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
900233c4:	10cf      	asrs	r7, r1, #3
900233c6:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
900233ca:	1c58      	adds	r0, r3, #1
900233cc:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
900233d0:	eb00 2323 	add.w	r3, r0, r3, asr #8
900233d4:	1208      	asrs	r0, r1, #8
900233d6:	ea6f 2323 	mvn.w	r3, r3, asr #8
900233da:	00c9      	lsls	r1, r1, #3
900233dc:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
900233e0:	b2db      	uxtb	r3, r3
900233e2:	b2c9      	uxtb	r1, r1
900233e4:	fb10 f003 	smulbb	r0, r0, r3
900233e8:	fb11 f103 	smulbb	r1, r1, r3
900233ec:	fb05 0504 	mla	r5, r5, r4, r0
900233f0:	10d0      	asrs	r0, r2, #3
900233f2:	fb17 f703 	smulbb	r7, r7, r3
900233f6:	00d2      	lsls	r2, r2, #3
900233f8:	b2ad      	uxth	r5, r5
900233fa:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
900233fe:	b2d2      	uxtb	r2, r2
90023400:	fb00 7004 	mla	r0, r0, r4, r7
90023404:	1c6b      	adds	r3, r5, #1
90023406:	fb02 1204 	mla	r2, r2, r4, r1
9002340a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
9002340e:	b292      	uxth	r2, r2
90023410:	b280      	uxth	r0, r0
90023412:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
90023416:	1c57      	adds	r7, r2, #1
90023418:	eb07 2712 	add.w	r7, r7, r2, lsr #8
9002341c:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90023420:	433d      	orrs	r5, r7
90023422:	1c47      	adds	r7, r0, #1
90023424:	eb07 2710 	add.w	r7, r7, r0, lsr #8
90023428:	097f      	lsrs	r7, r7, #5
9002342a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
9002342e:	433d      	orrs	r5, r7
90023430:	f8ae 5000 	strh.w	r5, [lr]
90023434:	9b21      	ldr	r3, [sp, #132]	; 0x84
90023436:	f10e 0e02 	add.w	lr, lr, #2
9002343a:	9a23      	ldr	r2, [sp, #140]	; 0x8c
9002343c:	4413      	add	r3, r2
9002343e:	9a22      	ldr	r2, [sp, #136]	; 0x88
90023440:	9321      	str	r3, [sp, #132]	; 0x84
90023442:	9b24      	ldr	r3, [sp, #144]	; 0x90
90023444:	441a      	add	r2, r3
90023446:	9b13      	ldr	r3, [sp, #76]	; 0x4c
90023448:	3b01      	subs	r3, #1
9002344a:	9222      	str	r2, [sp, #136]	; 0x88
9002344c:	9313      	str	r3, [sp, #76]	; 0x4c
9002344e:	e61c      	b.n	9002308a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
90023450:	fb08 f000 	mul.w	r0, r8, r0
90023454:	fb09 0303 	mla	r3, r9, r3, r0
90023458:	e6dc      	b.n	90023214 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x570>
9002345a:	46b9      	mov	r9, r7
9002345c:	e704      	b.n	90023268 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c4>
9002345e:	f1c2 0110 	rsb	r1, r2, #16
90023462:	437a      	muls	r2, r7
90023464:	fb09 2901 	mla	r9, r9, r1, r2
90023468:	ea4f 0949 	mov.w	r9, r9, lsl #1
9002346c:	ea4f 5059 	mov.w	r0, r9, lsr #21
90023470:	ea4f 1259 	mov.w	r2, r9, lsr #5
90023474:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90023478:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
9002347c:	4302      	orrs	r2, r0
9002347e:	e795      	b.n	900233ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x708>
90023480:	f8ae 2000 	strh.w	r2, [lr]
90023484:	e7d6      	b.n	90023434 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
90023486:	b017      	add	sp, #92	; 0x5c
90023488:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9002348c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
9002348c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90023490:	b085      	sub	sp, #20
90023492:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
90023496:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
9002349a:	2800      	cmp	r0, #0
9002349c:	9103      	str	r1, [sp, #12]
9002349e:	fb00 7406 	mla	r4, r0, r6, r7
900234a2:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
900234a6:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
900234aa:	eb03 0544 	add.w	r5, r3, r4, lsl #1
900234ae:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
900234b2:	eb02 0904 	add.w	r9, r2, r4
900234b6:	9501      	str	r5, [sp, #4]
900234b8:	f2c0 8141 	blt.w	9002373e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
900234bc:	4583      	cmp	fp, r0
900234be:	f340 813e 	ble.w	9002373e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
900234c2:	2f00      	cmp	r7, #0
900234c4:	f2c0 8137 	blt.w	90023736 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
900234c8:	42be      	cmp	r6, r7
900234ca:	f340 8134 	ble.w	90023736 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
900234ce:	f812 c004 	ldrb.w	ip, [r2, r4]
900234d2:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
900234d6:	f64f 041f 	movw	r4, #63519	; 0xf81f
900234da:	ea4f 02ec 	mov.w	r2, ip, asr #3
900234de:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
900234e2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
900234e6:	4355      	muls	r5, r2
900234e8:	fb0c f203 	mul.w	r2, ip, r3
900234ec:	ea04 1355 	and.w	r3, r4, r5, lsr #5
900234f0:	f605 0501 	addw	r5, r5, #2049	; 0x801
900234f4:	441d      	add	r5, r3
900234f6:	f102 0320 	add.w	r3, r2, #32
900234fa:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900234fe:	ea04 1455 	and.w	r4, r4, r5, lsr #5
90023502:	0a1b      	lsrs	r3, r3, #8
90023504:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90023508:	431c      	orrs	r4, r3
9002350a:	1c7b      	adds	r3, r7, #1
9002350c:	f100 811c 	bmi.w	90023748 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
90023510:	429e      	cmp	r6, r3
90023512:	f340 8119 	ble.w	90023748 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
90023516:	2900      	cmp	r1, #0
90023518:	f000 8119 	beq.w	9002374e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
9002351c:	9a01      	ldr	r2, [sp, #4]
9002351e:	f899 3001 	ldrb.w	r3, [r9, #1]
90023522:	8855      	ldrh	r5, [r2, #2]
90023524:	ea4f 08e3 	mov.w	r8, r3, asr #3
90023528:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
9002352c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90023530:	fb08 f802 	mul.w	r8, r8, r2
90023534:	f64f 021f 	movw	r2, #63519	; 0xf81f
90023538:	435d      	muls	r5, r3
9002353a:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
9002353e:	f608 0801 	addw	r8, r8, #2049	; 0x801
90023542:	44d0      	add	r8, sl
90023544:	f105 0a20 	add.w	sl, r5, #32
90023548:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
9002354c:	ea02 1258 	and.w	r2, r2, r8, lsr #5
90023550:	0a2d      	lsrs	r5, r5, #8
90023552:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90023556:	432a      	orrs	r2, r5
90023558:	3001      	adds	r0, #1
9002355a:	f100 80fe 	bmi.w	9002375a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
9002355e:	4583      	cmp	fp, r0
90023560:	f340 80fb 	ble.w	9002375a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
90023564:	f1be 0f00 	cmp.w	lr, #0
90023568:	f000 80fc 	beq.w	90023764 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
9002356c:	2f00      	cmp	r7, #0
9002356e:	f2c0 80f1 	blt.w	90023754 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
90023572:	42be      	cmp	r6, r7
90023574:	f340 80ee 	ble.w	90023754 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
90023578:	9801      	ldr	r0, [sp, #4]
9002357a:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
9002357e:	f819 5006 	ldrb.w	r5, [r9, r6]
90023582:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
90023586:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9002358a:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
9002358e:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
90023592:	fb0a fa00 	mul.w	sl, sl, r0
90023596:	fb05 f808 	mul.w	r8, r5, r8
9002359a:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
9002359e:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
900235a2:	4482      	add	sl, r0
900235a4:	f108 0020 	add.w	r0, r8, #32
900235a8:	eb00 2018 	add.w	r0, r0, r8, lsr #8
900235ac:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
900235b0:	0a00      	lsrs	r0, r0, #8
900235b2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
900235b6:	ea4b 0b00 	orr.w	fp, fp, r0
900235ba:	3701      	adds	r7, #1
900235bc:	f100 80d7 	bmi.w	9002376e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
900235c0:	42be      	cmp	r6, r7
900235c2:	f340 80d4 	ble.w	9002376e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
900235c6:	2900      	cmp	r1, #0
900235c8:	f000 80d4 	beq.w	90023774 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
900235cc:	3601      	adds	r6, #1
900235ce:	9801      	ldr	r0, [sp, #4]
900235d0:	f819 7006 	ldrb.w	r7, [r9, r6]
900235d4:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
900235d8:	ea4f 09e7 	mov.w	r9, r7, asr #3
900235dc:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
900235e0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
900235e4:	fb09 f906 	mul.w	r9, r9, r6
900235e8:	fb07 f800 	mul.w	r8, r7, r0
900235ec:	f64f 001f 	movw	r0, #63519	; 0xf81f
900235f0:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
900235f4:	f609 0901 	addw	r9, r9, #2049	; 0x801
900235f8:	44d1      	add	r9, sl
900235fa:	ea00 1659 	and.w	r6, r0, r9, lsr #5
900235fe:	f108 0020 	add.w	r0, r8, #32
90023602:	eb00 2018 	add.w	r0, r0, r8, lsr #8
90023606:	0a00      	lsrs	r0, r0, #8
90023608:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9002360c:	4330      	orrs	r0, r6
9002360e:	b28e      	uxth	r6, r1
90023610:	fa1f f98e 	uxth.w	r9, lr
90023614:	ea4f 4a04 	mov.w	sl, r4, lsl #16
90023618:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
9002361c:	fb06 f809 	mul.w	r8, r6, r9
90023620:	0136      	lsls	r6, r6, #4
90023622:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90023626:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
9002362a:	9601      	str	r6, [sp, #4]
9002362c:	ea4a 0404 	orr.w	r4, sl, r4
90023630:	ea4f 4a02 	mov.w	sl, r2, lsl #16
90023634:	fa1f f689 	uxth.w	r6, r9
90023638:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
9002363c:	fb11 f90e 	smulbb	r9, r1, lr
90023640:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90023644:	9602      	str	r6, [sp, #8]
90023646:	4626      	mov	r6, r4
90023648:	f3c9 09c7 	ubfx	r9, r9, #3, #8
9002364c:	f1ce 0410 	rsb	r4, lr, #16
90023650:	ea4a 0202 	orr.w	r2, sl, r2
90023654:	ea4f 4a00 	mov.w	sl, r0, lsl #16
90023658:	1a64      	subs	r4, r4, r1
9002365a:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
9002365e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90023662:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90023666:	434a      	muls	r2, r1
90023668:	eb09 0444 	add.w	r4, r9, r4, lsl #1
9002366c:	ea4a 0000 	orr.w	r0, sl, r0
90023670:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
90023674:	fb04 2406 	mla	r4, r4, r6, r2
90023678:	9903      	ldr	r1, [sp, #12]
9002367a:	fb09 4200 	mla	r2, r9, r0, r4
9002367e:	ea4f 440b 	mov.w	r4, fp, lsl #16
90023682:	9801      	ldr	r0, [sp, #4]
90023684:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
90023688:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
9002368c:	8809      	ldrh	r1, [r1, #0]
9002368e:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
90023692:	ea44 0b0b 	orr.w	fp, r4, fp
90023696:	9c02      	ldr	r4, [sp, #8]
90023698:	1b00      	subs	r0, r0, r4
9002369a:	9c01      	ldr	r4, [sp, #4]
9002369c:	fb0e 2e0b 	mla	lr, lr, fp, r2
900236a0:	eba4 0608 	sub.w	r6, r4, r8
900236a4:	b280      	uxth	r0, r0
900236a6:	ea4f 525e 	mov.w	r2, lr, lsr #21
900236aa:	b2b6      	uxth	r6, r6
900236ac:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
900236b0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
900236b4:	4373      	muls	r3, r6
900236b6:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
900236ba:	fb0c 3300 	mla	r3, ip, r0, r3
900236be:	9802      	ldr	r0, [sp, #8]
900236c0:	ea42 0e0e 	orr.w	lr, r2, lr
900236c4:	fb00 3505 	mla	r5, r0, r5, r3
900236c8:	120b      	asrs	r3, r1, #8
900236ca:	10c8      	asrs	r0, r1, #3
900236cc:	fb08 5707 	mla	r7, r8, r7, r5
900236d0:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
900236d4:	00c9      	lsls	r1, r1, #3
900236d6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
900236da:	ea6f 2727 	mvn.w	r7, r7, asr #8
900236de:	fa1f f28e 	uxth.w	r2, lr
900236e2:	b2c9      	uxtb	r1, r1
900236e4:	b2ff      	uxtb	r7, r7
900236e6:	437b      	muls	r3, r7
900236e8:	4378      	muls	r0, r7
900236ea:	434f      	muls	r7, r1
900236ec:	1c59      	adds	r1, r3, #1
900236ee:	eb01 2113 	add.w	r1, r1, r3, lsr #8
900236f2:	1213      	asrs	r3, r2, #8
900236f4:	f023 0307 	bic.w	r3, r3, #7
900236f8:	eb03 2311 	add.w	r3, r3, r1, lsr #8
900236fc:	1c41      	adds	r1, r0, #1
900236fe:	eb01 2010 	add.w	r0, r1, r0, lsr #8
90023702:	10d1      	asrs	r1, r2, #3
90023704:	021b      	lsls	r3, r3, #8
90023706:	f021 0103 	bic.w	r1, r1, #3
9002370a:	00d2      	lsls	r2, r2, #3
9002370c:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
90023710:	eb01 2110 	add.w	r1, r1, r0, lsr #8
90023714:	00c9      	lsls	r1, r1, #3
90023716:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
9002371a:	430b      	orrs	r3, r1
9002371c:	1c79      	adds	r1, r7, #1
9002371e:	eb01 2717 	add.w	r7, r1, r7, lsr #8
90023722:	eb02 2217 	add.w	r2, r2, r7, lsr #8
90023726:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9002372a:	431a      	orrs	r2, r3
9002372c:	9b03      	ldr	r3, [sp, #12]
9002372e:	801a      	strh	r2, [r3, #0]
90023730:	b005      	add	sp, #20
90023732:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90023736:	f04f 0c00 	mov.w	ip, #0
9002373a:	4664      	mov	r4, ip
9002373c:	e6e5      	b.n	9002350a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
9002373e:	2300      	movs	r3, #0
90023740:	469c      	mov	ip, r3
90023742:	461a      	mov	r2, r3
90023744:	461c      	mov	r4, r3
90023746:	e707      	b.n	90023558 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
90023748:	2300      	movs	r3, #0
9002374a:	461a      	mov	r2, r3
9002374c:	e704      	b.n	90023558 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
9002374e:	460b      	mov	r3, r1
90023750:	460a      	mov	r2, r1
90023752:	e701      	b.n	90023558 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
90023754:	2500      	movs	r5, #0
90023756:	46ab      	mov	fp, r5
90023758:	e72f      	b.n	900235ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
9002375a:	2700      	movs	r7, #0
9002375c:	463d      	mov	r5, r7
9002375e:	4638      	mov	r0, r7
90023760:	46bb      	mov	fp, r7
90023762:	e754      	b.n	9002360e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
90023764:	4677      	mov	r7, lr
90023766:	4675      	mov	r5, lr
90023768:	4670      	mov	r0, lr
9002376a:	46f3      	mov	fp, lr
9002376c:	e74f      	b.n	9002360e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
9002376e:	2700      	movs	r7, #0
90023770:	4638      	mov	r0, r7
90023772:	e74c      	b.n	9002360e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
90023774:	460f      	mov	r7, r1
90023776:	4608      	mov	r0, r1
90023778:	e749      	b.n	9002360e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

9002377c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9002377c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90023780:	b093      	sub	sp, #76	; 0x4c
90023782:	9210      	str	r2, [sp, #64]	; 0x40
90023784:	9a21      	ldr	r2, [sp, #132]	; 0x84
90023786:	9011      	str	r0, [sp, #68]	; 0x44
90023788:	910e      	str	r1, [sp, #56]	; 0x38
9002378a:	6850      	ldr	r0, [r2, #4]
9002378c:	9306      	str	r3, [sp, #24]
9002378e:	6812      	ldr	r2, [r2, #0]
90023790:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
90023794:	fb00 1303 	mla	r3, r0, r3, r1
90023798:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9002379c:	9307      	str	r3, [sp, #28]
9002379e:	9b24      	ldr	r3, [sp, #144]	; 0x90
900237a0:	681b      	ldr	r3, [r3, #0]
900237a2:	9308      	str	r3, [sp, #32]
900237a4:	9b24      	ldr	r3, [sp, #144]	; 0x90
900237a6:	685b      	ldr	r3, [r3, #4]
900237a8:	9309      	str	r3, [sp, #36]	; 0x24
900237aa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
900237ac:	2b00      	cmp	r3, #0
900237ae:	dc03      	bgt.n	900237b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
900237b0:	9b10      	ldr	r3, [sp, #64]	; 0x40
900237b2:	2b00      	cmp	r3, #0
900237b4:	f340 83b6 	ble.w	90023f24 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
900237b8:	9b24      	ldr	r3, [sp, #144]	; 0x90
900237ba:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900237be:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900237c2:	1e48      	subs	r0, r1, #1
900237c4:	1e55      	subs	r5, r2, #1
900237c6:	9b06      	ldr	r3, [sp, #24]
900237c8:	2b00      	cmp	r3, #0
900237ca:	f340 8165 	ble.w	90023a98 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
900237ce:	9e1d      	ldr	r6, [sp, #116]	; 0x74
900237d0:	9b1e      	ldr	r3, [sp, #120]	; 0x78
900237d2:	1436      	asrs	r6, r6, #16
900237d4:	ea4f 4323 	mov.w	r3, r3, asr #16
900237d8:	d406      	bmi.n	900237e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
900237da:	4286      	cmp	r6, r0
900237dc:	da04      	bge.n	900237e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
900237de:	2b00      	cmp	r3, #0
900237e0:	db02      	blt.n	900237e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
900237e2:	42ab      	cmp	r3, r5
900237e4:	f2c0 8159 	blt.w	90023a9a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
900237e8:	3601      	adds	r6, #1
900237ea:	f100 8146 	bmi.w	90023a7a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
900237ee:	42b1      	cmp	r1, r6
900237f0:	f2c0 8143 	blt.w	90023a7a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
900237f4:	3301      	adds	r3, #1
900237f6:	f100 8140 	bmi.w	90023a7a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
900237fa:	429a      	cmp	r2, r3
900237fc:	f2c0 813d 	blt.w	90023a7a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
90023800:	9b06      	ldr	r3, [sp, #24]
90023802:	f64f 061f 	movw	r6, #63519	; 0xf81f
90023806:	9f07      	ldr	r7, [sp, #28]
90023808:	930f      	str	r3, [sp, #60]	; 0x3c
9002380a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
9002380c:	2b00      	cmp	r3, #0
9002380e:	f340 8166 	ble.w	90023ade <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90023812:	9b1e      	ldr	r3, [sp, #120]	; 0x78
90023814:	9d1d      	ldr	r5, [sp, #116]	; 0x74
90023816:	1418      	asrs	r0, r3, #16
90023818:	9b1d      	ldr	r3, [sp, #116]	; 0x74
9002381a:	142d      	asrs	r5, r5, #16
9002381c:	f3c3 3103 	ubfx	r1, r3, #12, #4
90023820:	9b1e      	ldr	r3, [sp, #120]	; 0x78
90023822:	f3c3 3c03 	ubfx	ip, r3, #12, #4
90023826:	9b24      	ldr	r3, [sp, #144]	; 0x90
90023828:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
9002382c:	f100 81f0 	bmi.w	90023c10 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90023830:	f102 3eff 	add.w	lr, r2, #4294967295
90023834:	4575      	cmp	r5, lr
90023836:	f280 81eb 	bge.w	90023c10 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
9002383a:	2800      	cmp	r0, #0
9002383c:	f2c0 81e8 	blt.w	90023c10 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90023840:	f103 3eff 	add.w	lr, r3, #4294967295
90023844:	4570      	cmp	r0, lr
90023846:	f280 81e3 	bge.w	90023c10 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
9002384a:	b212      	sxth	r2, r2
9002384c:	9b09      	ldr	r3, [sp, #36]	; 0x24
9002384e:	fa1f fe81 	uxth.w	lr, r1
90023852:	fb00 5002 	mla	r0, r0, r2, r5
90023856:	ea4f 150e 	mov.w	r5, lr, lsl #4
9002385a:	eb03 0a00 	add.w	sl, r3, r0
9002385e:	f813 9000 	ldrb.w	r9, [r3, r0]
90023862:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
90023866:	f89a 8001 	ldrb.w	r8, [sl, #1]
9002386a:	b29b      	uxth	r3, r3
9002386c:	f1bc 0f00 	cmp.w	ip, #0
90023870:	f000 817b 	beq.w	90023b6a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
90023874:	f81a 4002 	ldrb.w	r4, [sl, r2]
90023878:	eb0a 0b02 	add.w	fp, sl, r2
9002387c:	fa1f fa8c 	uxth.w	sl, ip
90023880:	940a      	str	r4, [sp, #40]	; 0x28
90023882:	fb0a fe0e 	mul.w	lr, sl, lr
90023886:	f89b 4001 	ldrb.w	r4, [fp, #1]
9002388a:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
9002388e:	eba5 050e 	sub.w	r5, r5, lr
90023892:	940b      	str	r4, [sp, #44]	; 0x2c
90023894:	fa1f fa8a 	uxth.w	sl, sl
90023898:	9c0a      	ldr	r4, [sp, #40]	; 0x28
9002389a:	b2ad      	uxth	r5, r5
9002389c:	eba3 030a 	sub.w	r3, r3, sl
900238a0:	fb08 f505 	mul.w	r5, r8, r5
900238a4:	b29b      	uxth	r3, r3
900238a6:	fb09 5303 	mla	r3, r9, r3, r5
900238aa:	fb0a 3304 	mla	r3, sl, r4, r3
900238ae:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
900238b0:	fb0e 3304 	mla	r3, lr, r4, r3
900238b4:	f3c3 2307 	ubfx	r3, r3, #8, #8
900238b8:	2b00      	cmp	r3, #0
900238ba:	f000 80d1 	beq.w	90023a60 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
900238be:	9c08      	ldr	r4, [sp, #32]
900238c0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
900238c4:	eb04 0540 	add.w	r5, r4, r0, lsl #1
900238c8:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
900238cc:	f000 8152 	beq.w	90023b74 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
900238d0:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
900238d4:	ea4f 0ae9 	mov.w	sl, r9, asr #3
900238d8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
900238dc:	fb0a fe0e 	mul.w	lr, sl, lr
900238e0:	fb09 f000 	mul.w	r0, r9, r0
900238e4:	ea06 195e 	and.w	r9, r6, lr, lsr #5
900238e8:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
900238ec:	f100 0b20 	add.w	fp, r0, #32
900238f0:	44ce      	add	lr, r9
900238f2:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
900238f6:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
900238fa:	ea4f 2919 	mov.w	r9, r9, lsr #8
900238fe:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
90023902:	ea4e 0909 	orr.w	r9, lr, r9
90023906:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
9002390a:	8868      	ldrh	r0, [r5, #2]
9002390c:	d019      	beq.n	90023942 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
9002390e:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
90023912:	ea4f 0ae8 	mov.w	sl, r8, asr #3
90023916:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9002391a:	fb0a fe0e 	mul.w	lr, sl, lr
9002391e:	fb08 f800 	mul.w	r8, r8, r0
90023922:	ea06 105e 	and.w	r0, r6, lr, lsr #5
90023926:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
9002392a:	f108 0b20 	add.w	fp, r8, #32
9002392e:	4486      	add	lr, r0
90023930:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
90023934:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
90023938:	0a00      	lsrs	r0, r0, #8
9002393a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9002393e:	ea4e 0000 	orr.w	r0, lr, r0
90023942:	ea4f 4e09 	mov.w	lr, r9, lsl #16
90023946:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
9002394a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
9002394e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90023952:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
90023956:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
9002395a:	ea4e 0909 	orr.w	r9, lr, r9
9002395e:	ea4a 0000 	orr.w	r0, sl, r0
90023962:	f1bc 0f00 	cmp.w	ip, #0
90023966:	f000 8107 	beq.w	90023b78 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
9002396a:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
9002396e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
90023970:	3a01      	subs	r2, #1
90023972:	2cff      	cmp	r4, #255	; 0xff
90023974:	ea4f 0242 	mov.w	r2, r2, lsl #1
90023978:	f102 0202 	add.w	r2, r2, #2
9002397c:	eb05 0e02 	add.w	lr, r5, r2
90023980:	5aaa      	ldrh	r2, [r5, r2]
90023982:	d018      	beq.n	900239b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
90023984:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
90023988:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9002398c:	ea4f 08e4 	mov.w	r8, r4, asr #3
90023990:	fb04 fa02 	mul.w	sl, r4, r2
90023994:	fb08 f805 	mul.w	r8, r8, r5
90023998:	f10a 0520 	add.w	r5, sl, #32
9002399c:	ea06 1258 	and.w	r2, r6, r8, lsr #5
900239a0:	f608 0801 	addw	r8, r8, #2049	; 0x801
900239a4:	eb05 251a 	add.w	r5, r5, sl, lsr #8
900239a8:	4442      	add	r2, r8
900239aa:	0a2d      	lsrs	r5, r5, #8
900239ac:	ea06 1252 	and.w	r2, r6, r2, lsr #5
900239b0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
900239b4:	432a      	orrs	r2, r5
900239b6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
900239b8:	f8be 5002 	ldrh.w	r5, [lr, #2]
900239bc:	2cff      	cmp	r4, #255	; 0xff
900239be:	d01a      	beq.n	900239f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
900239c0:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
900239c4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
900239c8:	ea4f 08e4 	mov.w	r8, r4, asr #3
900239cc:	fb04 fa05 	mul.w	sl, r4, r5
900239d0:	fb08 f80e 	mul.w	r8, r8, lr
900239d4:	f10a 0e20 	add.w	lr, sl, #32
900239d8:	ea06 1558 	and.w	r5, r6, r8, lsr #5
900239dc:	f608 0801 	addw	r8, r8, #2049	; 0x801
900239e0:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
900239e4:	4445      	add	r5, r8
900239e6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900239ea:	ea06 1555 	and.w	r5, r6, r5, lsr #5
900239ee:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
900239f2:	ea45 050e 	orr.w	r5, r5, lr
900239f6:	fb1c fe01 	smulbb	lr, ip, r1
900239fa:	f1cc 0810 	rsb	r8, ip, #16
900239fe:	ea4f 4a02 	mov.w	sl, r2, lsl #16
90023a02:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90023a06:	ea4f 0eee 	mov.w	lr, lr, asr #3
90023a0a:	eba8 0801 	sub.w	r8, r8, r1
90023a0e:	ea4f 4b05 	mov.w	fp, r5, lsl #16
90023a12:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90023a16:	ebce 0141 	rsb	r1, lr, r1, lsl #1
90023a1a:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
90023a1e:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
90023a22:	ea4a 0202 	orr.w	r2, sl, r2
90023a26:	4341      	muls	r1, r0
90023a28:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
90023a2c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90023a30:	fb09 1108 	mla	r1, r9, r8, r1
90023a34:	ea4b 0505 	orr.w	r5, fp, r5
90023a38:	fb0c 1102 	mla	r1, ip, r2, r1
90023a3c:	fb0e 1e05 	mla	lr, lr, r5, r1
90023a40:	ea4f 525e 	mov.w	r2, lr, lsr #21
90023a44:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90023a48:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90023a4c:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
90023a50:	ea42 0e0e 	orr.w	lr, r2, lr
90023a54:	fa1f f28e 	uxth.w	r2, lr
90023a58:	2bff      	cmp	r3, #255	; 0xff
90023a5a:	f040 80a1 	bne.w	90023ba0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x424>
90023a5e:	803a      	strh	r2, [r7, #0]
90023a60:	9b1d      	ldr	r3, [sp, #116]	; 0x74
90023a62:	3702      	adds	r7, #2
90023a64:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
90023a66:	4413      	add	r3, r2
90023a68:	9a1e      	ldr	r2, [sp, #120]	; 0x78
90023a6a:	931d      	str	r3, [sp, #116]	; 0x74
90023a6c:	9b20      	ldr	r3, [sp, #128]	; 0x80
90023a6e:	441a      	add	r2, r3
90023a70:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90023a72:	3b01      	subs	r3, #1
90023a74:	921e      	str	r2, [sp, #120]	; 0x78
90023a76:	930f      	str	r3, [sp, #60]	; 0x3c
90023a78:	e6c7      	b.n	9002380a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90023a7a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
90023a7c:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
90023a7e:	9c1e      	ldr	r4, [sp, #120]	; 0x78
90023a80:	4433      	add	r3, r6
90023a82:	931d      	str	r3, [sp, #116]	; 0x74
90023a84:	9b20      	ldr	r3, [sp, #128]	; 0x80
90023a86:	441c      	add	r4, r3
90023a88:	9b06      	ldr	r3, [sp, #24]
90023a8a:	3b01      	subs	r3, #1
90023a8c:	941e      	str	r4, [sp, #120]	; 0x78
90023a8e:	9306      	str	r3, [sp, #24]
90023a90:	9b07      	ldr	r3, [sp, #28]
90023a92:	3302      	adds	r3, #2
90023a94:	9307      	str	r3, [sp, #28]
90023a96:	e696      	b.n	900237c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
90023a98:	d028      	beq.n	90023aec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90023a9a:	9b06      	ldr	r3, [sp, #24]
90023a9c:	981f      	ldr	r0, [sp, #124]	; 0x7c
90023a9e:	3b01      	subs	r3, #1
90023aa0:	9d1d      	ldr	r5, [sp, #116]	; 0x74
90023aa2:	fb00 5003 	mla	r0, r0, r3, r5
90023aa6:	1400      	asrs	r0, r0, #16
90023aa8:	f53f aeaa 	bmi.w	90023800 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90023aac:	3901      	subs	r1, #1
90023aae:	4288      	cmp	r0, r1
90023ab0:	f6bf aea6 	bge.w	90023800 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90023ab4:	9920      	ldr	r1, [sp, #128]	; 0x80
90023ab6:	981e      	ldr	r0, [sp, #120]	; 0x78
90023ab8:	fb01 0303 	mla	r3, r1, r3, r0
90023abc:	141b      	asrs	r3, r3, #16
90023abe:	f53f ae9f 	bmi.w	90023800 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90023ac2:	3a01      	subs	r2, #1
90023ac4:	4293      	cmp	r3, r2
90023ac6:	f6bf ae9b 	bge.w	90023800 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90023aca:	9b06      	ldr	r3, [sp, #24]
90023acc:	f64f 061f 	movw	r6, #63519	; 0xf81f
90023ad0:	f8dd e01c 	ldr.w	lr, [sp, #28]
90023ad4:	930f      	str	r3, [sp, #60]	; 0x3c
90023ad6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90023ad8:	2b00      	cmp	r3, #0
90023ada:	f300 80b6 	bgt.w	90023c4a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ce>
90023ade:	9b06      	ldr	r3, [sp, #24]
90023ae0:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90023ae4:	9b07      	ldr	r3, [sp, #28]
90023ae6:	eb03 0344 	add.w	r3, r3, r4, lsl #1
90023aea:	9307      	str	r3, [sp, #28]
90023aec:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90023aee:	2b00      	cmp	r3, #0
90023af0:	f340 8218 	ble.w	90023f24 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
90023af4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90023af8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90023afa:	ee30 0a04 	vadd.f32	s0, s0, s8
90023afe:	ee70 0aa4 	vadd.f32	s1, s1, s9
90023b02:	eef0 6a62 	vmov.f32	s13, s5
90023b06:	eec7 7a00 	vdiv.f32	s15, s14, s0
90023b0a:	ee31 1a05 	vadd.f32	s2, s2, s10
90023b0e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90023b12:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
90023b16:	eef0 6a43 	vmov.f32	s13, s6
90023b1a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90023b1e:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
90023b22:	ee20 7aa7 	vmul.f32	s14, s1, s15
90023b26:	ee61 7a27 	vmul.f32	s15, s2, s15
90023b2a:	ee77 2a62 	vsub.f32	s5, s14, s5
90023b2e:	ee37 3ac3 	vsub.f32	s6, s15, s6
90023b32:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90023b36:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90023b3a:	ee12 2a90 	vmov	r2, s5
90023b3e:	eef0 2a47 	vmov.f32	s5, s14
90023b42:	fb92 f3f3 	sdiv	r3, r2, r3
90023b46:	ee13 2a10 	vmov	r2, s6
90023b4a:	931f      	str	r3, [sp, #124]	; 0x7c
90023b4c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90023b4e:	eeb0 3a67 	vmov.f32	s6, s15
90023b52:	fb92 f3f3 	sdiv	r3, r2, r3
90023b56:	9320      	str	r3, [sp, #128]	; 0x80
90023b58:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90023b5a:	9a10      	ldr	r2, [sp, #64]	; 0x40
90023b5c:	3b01      	subs	r3, #1
90023b5e:	930e      	str	r3, [sp, #56]	; 0x38
90023b60:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90023b62:	bf08      	it	eq
90023b64:	4613      	moveq	r3, r2
90023b66:	9306      	str	r3, [sp, #24]
90023b68:	e61f      	b.n	900237aa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
90023b6a:	fb08 f505 	mul.w	r5, r8, r5
90023b6e:	fb09 5303 	mla	r3, r9, r3, r5
90023b72:	e69f      	b.n	900238b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
90023b74:	4681      	mov	r9, r0
90023b76:	e6c6      	b.n	90023906 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
90023b78:	f1c1 0210 	rsb	r2, r1, #16
90023b7c:	4341      	muls	r1, r0
90023b7e:	fb09 1902 	mla	r9, r9, r2, r1
90023b82:	ea4f 0949 	mov.w	r9, r9, lsl #1
90023b86:	ea4f 5259 	mov.w	r2, r9, lsr #21
90023b8a:	ea4f 1959 	mov.w	r9, r9, lsr #5
90023b8e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90023b92:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
90023b96:	ea42 0909 	orr.w	r9, r2, r9
90023b9a:	fa1f f289 	uxth.w	r2, r9
90023b9e:	e75b      	b.n	90023a58 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>
90023ba0:	f8b7 c000 	ldrh.w	ip, [r7]
90023ba4:	43db      	mvns	r3, r3
90023ba6:	ea4f 202c 	mov.w	r0, ip, asr #8
90023baa:	fa5f fe83 	uxtb.w	lr, r3
90023bae:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
90023bb2:	ea4f 05ec 	mov.w	r5, ip, asr #3
90023bb6:	ea4f 03cc 	mov.w	r3, ip, lsl #3
90023bba:	fb00 f00e 	mul.w	r0, r0, lr
90023bbe:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
90023bc2:	b2db      	uxtb	r3, r3
90023bc4:	1c41      	adds	r1, r0, #1
90023bc6:	fb05 f50e 	mul.w	r5, r5, lr
90023bca:	fb03 f30e 	mul.w	r3, r3, lr
90023bce:	eb01 2010 	add.w	r0, r1, r0, lsr #8
90023bd2:	1211      	asrs	r1, r2, #8
90023bd4:	f021 0107 	bic.w	r1, r1, #7
90023bd8:	eb01 2110 	add.w	r1, r1, r0, lsr #8
90023bdc:	48d3      	ldr	r0, [pc, #844]	; (90023f2c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
90023bde:	b2c9      	uxtb	r1, r1
90023be0:	ea00 2001 	and.w	r0, r0, r1, lsl #8
90023be4:	1c69      	adds	r1, r5, #1
90023be6:	eb01 2515 	add.w	r5, r1, r5, lsr #8
90023bea:	10d1      	asrs	r1, r2, #3
90023bec:	00d2      	lsls	r2, r2, #3
90023bee:	f021 0103 	bic.w	r1, r1, #3
90023bf2:	eb01 2115 	add.w	r1, r1, r5, lsr #8
90023bf6:	00c9      	lsls	r1, r1, #3
90023bf8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90023bfc:	4301      	orrs	r1, r0
90023bfe:	1c58      	adds	r0, r3, #1
90023c00:	eb00 2313 	add.w	r3, r0, r3, lsr #8
90023c04:	eb02 2213 	add.w	r2, r2, r3, lsr #8
90023c08:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90023c0c:	430a      	orrs	r2, r1
90023c0e:	e726      	b.n	90023a5e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
90023c10:	f115 0e01 	adds.w	lr, r5, #1
90023c14:	f53f af24 	bmi.w	90023a60 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90023c18:	4572      	cmp	r2, lr
90023c1a:	f6ff af21 	blt.w	90023a60 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90023c1e:	f110 0e01 	adds.w	lr, r0, #1
90023c22:	f53f af1d 	bmi.w	90023a60 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90023c26:	4573      	cmp	r3, lr
90023c28:	f6ff af1a 	blt.w	90023a60 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90023c2c:	b21b      	sxth	r3, r3
90023c2e:	b212      	sxth	r2, r2
90023c30:	9301      	str	r3, [sp, #4]
90023c32:	9200      	str	r2, [sp, #0]
90023c34:	e9cd 1c04 	strd	r1, ip, [sp, #16]
90023c38:	e9cd 5002 	strd	r5, r0, [sp, #8]
90023c3c:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
90023c40:	4639      	mov	r1, r7
90023c42:	9811      	ldr	r0, [sp, #68]	; 0x44
90023c44:	f7ff fc22 	bl	9002348c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
90023c48:	e70a      	b.n	90023a60 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90023c4a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
90023c4c:	f3c3 3203 	ubfx	r2, r3, #12, #4
90023c50:	9b1e      	ldr	r3, [sp, #120]	; 0x78
90023c52:	f3c3 3503 	ubfx	r5, r3, #12, #4
90023c56:	9b24      	ldr	r3, [sp, #144]	; 0x90
90023c58:	fa1f fc82 	uxth.w	ip, r2
90023c5c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90023c60:	9b1e      	ldr	r3, [sp, #120]	; 0x78
90023c62:	ea4f 100c 	mov.w	r0, ip, lsl #4
90023c66:	141f      	asrs	r7, r3, #16
90023c68:	9b1d      	ldr	r3, [sp, #116]	; 0x74
90023c6a:	141b      	asrs	r3, r3, #16
90023c6c:	fb01 3707 	mla	r7, r1, r7, r3
90023c70:	9b09      	ldr	r3, [sp, #36]	; 0x24
90023c72:	eb03 0a07 	add.w	sl, r3, r7
90023c76:	f813 9007 	ldrb.w	r9, [r3, r7]
90023c7a:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
90023c7e:	f89a 8001 	ldrb.w	r8, [sl, #1]
90023c82:	b29b      	uxth	r3, r3
90023c84:	2d00      	cmp	r5, #0
90023c86:	f000 80fe 	beq.w	90023e86 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70a>
90023c8a:	f81a 4001 	ldrb.w	r4, [sl, r1]
90023c8e:	eb0a 0b01 	add.w	fp, sl, r1
90023c92:	fa1f fa85 	uxth.w	sl, r5
90023c96:	940c      	str	r4, [sp, #48]	; 0x30
90023c98:	fb0a fc0c 	mul.w	ip, sl, ip
90023c9c:	f89b 4001 	ldrb.w	r4, [fp, #1]
90023ca0:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
90023ca4:	eba0 000c 	sub.w	r0, r0, ip
90023ca8:	940d      	str	r4, [sp, #52]	; 0x34
90023caa:	fa1f fa8a 	uxth.w	sl, sl
90023cae:	b280      	uxth	r0, r0
90023cb0:	eba3 030a 	sub.w	r3, r3, sl
90023cb4:	fb08 f000 	mul.w	r0, r8, r0
90023cb8:	b29b      	uxth	r3, r3
90023cba:	fb09 0303 	mla	r3, r9, r3, r0
90023cbe:	980c      	ldr	r0, [sp, #48]	; 0x30
90023cc0:	fb0a 3300 	mla	r3, sl, r0, r3
90023cc4:	fb0c 3304 	mla	r3, ip, r4, r3
90023cc8:	f3c3 2307 	ubfx	r3, r3, #8, #8
90023ccc:	2b00      	cmp	r3, #0
90023cce:	f000 80cc 	beq.w	90023e6a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
90023cd2:	9808      	ldr	r0, [sp, #32]
90023cd4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
90023cd8:	9c08      	ldr	r4, [sp, #32]
90023cda:	eb00 0047 	add.w	r0, r0, r7, lsl #1
90023cde:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
90023ce2:	f000 80d5 	beq.w	90023e90 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
90023ce6:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
90023cea:	ea4f 0ae9 	mov.w	sl, r9, asr #3
90023cee:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
90023cf2:	fb0a fc0c 	mul.w	ip, sl, ip
90023cf6:	fb09 f707 	mul.w	r7, r9, r7
90023cfa:	ea06 195c 	and.w	r9, r6, ip, lsr #5
90023cfe:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
90023d02:	f107 0b20 	add.w	fp, r7, #32
90023d06:	44cc      	add	ip, r9
90023d08:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
90023d0c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
90023d10:	ea4f 2919 	mov.w	r9, r9, lsr #8
90023d14:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
90023d18:	ea4c 0909 	orr.w	r9, ip, r9
90023d1c:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
90023d20:	8847      	ldrh	r7, [r0, #2]
90023d22:	d019      	beq.n	90023d58 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5dc>
90023d24:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
90023d28:	ea4f 0ae8 	mov.w	sl, r8, asr #3
90023d2c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
90023d30:	fb0a fc0c 	mul.w	ip, sl, ip
90023d34:	fb08 f807 	mul.w	r8, r8, r7
90023d38:	ea06 175c 	and.w	r7, r6, ip, lsr #5
90023d3c:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
90023d40:	f108 0b20 	add.w	fp, r8, #32
90023d44:	44bc      	add	ip, r7
90023d46:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
90023d4a:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
90023d4e:	0a3f      	lsrs	r7, r7, #8
90023d50:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
90023d54:	ea4c 0707 	orr.w	r7, ip, r7
90023d58:	ea4f 4c09 	mov.w	ip, r9, lsl #16
90023d5c:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
90023d60:	ea4f 4a07 	mov.w	sl, r7, lsl #16
90023d64:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
90023d68:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
90023d6c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90023d70:	ea4c 0909 	orr.w	r9, ip, r9
90023d74:	ea4a 0707 	orr.w	r7, sl, r7
90023d78:	2d00      	cmp	r5, #0
90023d7a:	f000 808b 	beq.w	90023e94 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x718>
90023d7e:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
90023d82:	3901      	subs	r1, #1
90023d84:	0049      	lsls	r1, r1, #1
90023d86:	3102      	adds	r1, #2
90023d88:	eb00 0c01 	add.w	ip, r0, r1
90023d8c:	5a41      	ldrh	r1, [r0, r1]
90023d8e:	980c      	ldr	r0, [sp, #48]	; 0x30
90023d90:	28ff      	cmp	r0, #255	; 0xff
90023d92:	d019      	beq.n	90023dc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64c>
90023d94:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
90023d98:	9c0c      	ldr	r4, [sp, #48]	; 0x30
90023d9a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90023d9e:	ea4f 08e4 	mov.w	r8, r4, asr #3
90023da2:	fb04 fa01 	mul.w	sl, r4, r1
90023da6:	fb08 f800 	mul.w	r8, r8, r0
90023daa:	f10a 0020 	add.w	r0, sl, #32
90023dae:	ea06 1158 	and.w	r1, r6, r8, lsr #5
90023db2:	f608 0801 	addw	r8, r8, #2049	; 0x801
90023db6:	eb00 201a 	add.w	r0, r0, sl, lsr #8
90023dba:	4441      	add	r1, r8
90023dbc:	0a00      	lsrs	r0, r0, #8
90023dbe:	ea06 1151 	and.w	r1, r6, r1, lsr #5
90023dc2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90023dc6:	4301      	orrs	r1, r0
90023dc8:	9c0d      	ldr	r4, [sp, #52]	; 0x34
90023dca:	f8bc 0002 	ldrh.w	r0, [ip, #2]
90023dce:	2cff      	cmp	r4, #255	; 0xff
90023dd0:	d01a      	beq.n	90023e08 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68c>
90023dd2:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
90023dd6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90023dda:	ea4f 08e4 	mov.w	r8, r4, asr #3
90023dde:	fb04 fa00 	mul.w	sl, r4, r0
90023de2:	fb08 f80c 	mul.w	r8, r8, ip
90023de6:	f10a 0c20 	add.w	ip, sl, #32
90023dea:	ea06 1058 	and.w	r0, r6, r8, lsr #5
90023dee:	f608 0801 	addw	r8, r8, #2049	; 0x801
90023df2:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
90023df6:	4440      	add	r0, r8
90023df8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023dfc:	ea06 1050 	and.w	r0, r6, r0, lsr #5
90023e00:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
90023e04:	ea40 000c 	orr.w	r0, r0, ip
90023e08:	fb15 fc02 	smulbb	ip, r5, r2
90023e0c:	f1c5 0810 	rsb	r8, r5, #16
90023e10:	ea4f 4a01 	mov.w	sl, r1, lsl #16
90023e14:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
90023e18:	ea4f 0cec 	mov.w	ip, ip, asr #3
90023e1c:	eba8 0802 	sub.w	r8, r8, r2
90023e20:	ea4f 4b00 	mov.w	fp, r0, lsl #16
90023e24:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90023e28:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
90023e2c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90023e30:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
90023e34:	ea4a 0101 	orr.w	r1, sl, r1
90023e38:	437a      	muls	r2, r7
90023e3a:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
90023e3e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90023e42:	fb09 2208 	mla	r2, r9, r8, r2
90023e46:	ea4b 0000 	orr.w	r0, fp, r0
90023e4a:	fb05 2201 	mla	r2, r5, r1, r2
90023e4e:	fb0c 2200 	mla	r2, ip, r0, r2
90023e52:	0d57      	lsrs	r7, r2, #21
90023e54:	0952      	lsrs	r2, r2, #5
90023e56:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
90023e5a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90023e5e:	433a      	orrs	r2, r7
90023e60:	2bff      	cmp	r3, #255	; 0xff
90023e62:	b292      	uxth	r2, r2
90023e64:	d127      	bne.n	90023eb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x73a>
90023e66:	f8ae 2000 	strh.w	r2, [lr]
90023e6a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
90023e6c:	f10e 0e02 	add.w	lr, lr, #2
90023e70:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
90023e72:	4413      	add	r3, r2
90023e74:	9a1e      	ldr	r2, [sp, #120]	; 0x78
90023e76:	931d      	str	r3, [sp, #116]	; 0x74
90023e78:	9b20      	ldr	r3, [sp, #128]	; 0x80
90023e7a:	441a      	add	r2, r3
90023e7c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90023e7e:	3b01      	subs	r3, #1
90023e80:	921e      	str	r2, [sp, #120]	; 0x78
90023e82:	930f      	str	r3, [sp, #60]	; 0x3c
90023e84:	e627      	b.n	90023ad6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
90023e86:	fb08 f000 	mul.w	r0, r8, r0
90023e8a:	fb09 0303 	mla	r3, r9, r3, r0
90023e8e:	e71b      	b.n	90023cc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54c>
90023e90:	46b9      	mov	r9, r7
90023e92:	e743      	b.n	90023d1c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a0>
90023e94:	f1c2 0110 	rsb	r1, r2, #16
90023e98:	437a      	muls	r2, r7
90023e9a:	fb09 2901 	mla	r9, r9, r1, r2
90023e9e:	ea4f 0949 	mov.w	r9, r9, lsl #1
90023ea2:	ea4f 5059 	mov.w	r0, r9, lsr #21
90023ea6:	ea4f 1259 	mov.w	r2, r9, lsr #5
90023eaa:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90023eae:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90023eb2:	4302      	orrs	r2, r0
90023eb4:	e7d4      	b.n	90023e60 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e4>
90023eb6:	f8be 7000 	ldrh.w	r7, [lr]
90023eba:	43db      	mvns	r3, r3
90023ebc:	4c1b      	ldr	r4, [pc, #108]	; (90023f2c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
90023ebe:	1238      	asrs	r0, r7, #8
90023ec0:	fa5f fc83 	uxtb.w	ip, r3
90023ec4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
90023ec8:	10fd      	asrs	r5, r7, #3
90023eca:	00fb      	lsls	r3, r7, #3
90023ecc:	fb00 f00c 	mul.w	r0, r0, ip
90023ed0:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
90023ed4:	b2db      	uxtb	r3, r3
90023ed6:	fb05 f10c 	mul.w	r1, r5, ip
90023eda:	1c45      	adds	r5, r0, #1
90023edc:	fb03 f30c 	mul.w	r3, r3, ip
90023ee0:	eb05 2010 	add.w	r0, r5, r0, lsr #8
90023ee4:	1215      	asrs	r5, r2, #8
90023ee6:	f025 0507 	bic.w	r5, r5, #7
90023eea:	eb05 2010 	add.w	r0, r5, r0, lsr #8
90023eee:	1c4d      	adds	r5, r1, #1
90023ef0:	eb05 2511 	add.w	r5, r5, r1, lsr #8
90023ef4:	10d1      	asrs	r1, r2, #3
90023ef6:	b2c0      	uxtb	r0, r0
90023ef8:	f021 0103 	bic.w	r1, r1, #3
90023efc:	00d2      	lsls	r2, r2, #3
90023efe:	ea04 2000 	and.w	r0, r4, r0, lsl #8
90023f02:	eb01 2115 	add.w	r1, r1, r5, lsr #8
90023f06:	00c9      	lsls	r1, r1, #3
90023f08:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90023f0c:	4308      	orrs	r0, r1
90023f0e:	1c59      	adds	r1, r3, #1
90023f10:	eb01 2313 	add.w	r3, r1, r3, lsr #8
90023f14:	eb02 2313 	add.w	r3, r2, r3, lsr #8
90023f18:	f3c3 03c4 	ubfx	r3, r3, #3, #5
90023f1c:	4318      	orrs	r0, r3
90023f1e:	f8ae 0000 	strh.w	r0, [lr]
90023f22:	e7a2      	b.n	90023e6a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
90023f24:	b013      	add	sp, #76	; 0x4c
90023f26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90023f2a:	bf00      	nop
90023f2c:	fffff800 	.word	0xfffff800

90023f30 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
90023f30:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90023f34:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
90023f38:	f9bd a020 	ldrsh.w	sl, [sp, #32]
90023f3c:	fb05 4c03 	mla	ip, r5, r3, r4
90023f40:	2d00      	cmp	r5, #0
90023f42:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
90023f46:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
90023f4a:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
90023f4e:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
90023f52:	8808      	ldrh	r0, [r1, #0]
90023f54:	f2c0 80a7 	blt.w	900240a6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
90023f58:	45aa      	cmp	sl, r5
90023f5a:	f340 80a4 	ble.w	900240a6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
90023f5e:	2c00      	cmp	r4, #0
90023f60:	f2c0 809f 	blt.w	900240a2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
90023f64:	42a3      	cmp	r3, r4
90023f66:	f340 809c 	ble.w	900240a2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
90023f6a:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
90023f6e:	1c62      	adds	r2, r4, #1
90023f70:	f100 809c 	bmi.w	900240ac <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
90023f74:	4293      	cmp	r3, r2
90023f76:	f340 8099 	ble.w	900240ac <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
90023f7a:	f1b9 0f00 	cmp.w	r9, #0
90023f7e:	f000 8095 	beq.w	900240ac <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
90023f82:	f8be c002 	ldrh.w	ip, [lr, #2]
90023f86:	3501      	adds	r5, #1
90023f88:	f100 8094 	bmi.w	900240b4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
90023f8c:	45aa      	cmp	sl, r5
90023f8e:	f340 8091 	ble.w	900240b4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
90023f92:	2f00      	cmp	r7, #0
90023f94:	f000 808e 	beq.w	900240b4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
90023f98:	2c00      	cmp	r4, #0
90023f9a:	f2c0 8089 	blt.w	900240b0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
90023f9e:	42a3      	cmp	r3, r4
90023fa0:	f340 8086 	ble.w	900240b0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
90023fa4:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
90023fa8:	3401      	adds	r4, #1
90023faa:	f100 8086 	bmi.w	900240ba <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
90023fae:	42a3      	cmp	r3, r4
90023fb0:	f340 8083 	ble.w	900240ba <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
90023fb4:	f1b9 0f00 	cmp.w	r9, #0
90023fb8:	d07f      	beq.n	900240ba <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
90023fba:	3301      	adds	r3, #1
90023fbc:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
90023fc0:	ea4f 4408 	mov.w	r4, r8, lsl #16
90023fc4:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
90023fc8:	fb19 fe07 	smulbb	lr, r9, r7
90023fcc:	f1c7 0210 	rsb	r2, r7, #16
90023fd0:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
90023fd4:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
90023fd8:	eba2 0209 	sub.w	r2, r2, r9
90023fdc:	ea44 0808 	orr.w	r8, r4, r8
90023fe0:	ea4f 440c 	mov.w	r4, ip, lsl #16
90023fe4:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
90023fe8:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
90023fec:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
90023ff0:	ebce 0747 	rsb	r7, lr, r7, lsl #1
90023ff4:	ea44 0c0c 	orr.w	ip, r4, ip
90023ff8:	ebce 0449 	rsb	r4, lr, r9, lsl #1
90023ffc:	fb04 f40c 	mul.w	r4, r4, ip
90024000:	fb02 4808 	mla	r8, r2, r8, r4
90024004:	041a      	lsls	r2, r3, #16
90024006:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
9002400a:	b2b4      	uxth	r4, r6
9002400c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
90024010:	43f6      	mvns	r6, r6
90024012:	4313      	orrs	r3, r2
90024014:	042a      	lsls	r2, r5, #16
90024016:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
9002401a:	b2f6      	uxtb	r6, r6
9002401c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
90024020:	fb0e 8303 	mla	r3, lr, r3, r8
90024024:	432a      	orrs	r2, r5
90024026:	fb07 3202 	mla	r2, r7, r2, r3
9002402a:	10c7      	asrs	r7, r0, #3
9002402c:	0d53      	lsrs	r3, r2, #21
9002402e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
90024032:	0952      	lsrs	r2, r2, #5
90024034:	fb17 f706 	smulbb	r7, r7, r6
90024038:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9002403c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90024040:	431a      	orrs	r2, r3
90024042:	b293      	uxth	r3, r2
90024044:	1202      	asrs	r2, r0, #8
90024046:	121d      	asrs	r5, r3, #8
90024048:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
9002404c:	00c0      	lsls	r0, r0, #3
9002404e:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
90024052:	fb12 f206 	smulbb	r2, r2, r6
90024056:	b2c0      	uxtb	r0, r0
90024058:	fb05 2504 	mla	r5, r5, r4, r2
9002405c:	10da      	asrs	r2, r3, #3
9002405e:	fb10 f006 	smulbb	r0, r0, r6
90024062:	00db      	lsls	r3, r3, #3
90024064:	b2ad      	uxth	r5, r5
90024066:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
9002406a:	b2db      	uxtb	r3, r3
9002406c:	fb02 7204 	mla	r2, r2, r4, r7
90024070:	fb03 0004 	mla	r0, r3, r4, r0
90024074:	1c6b      	adds	r3, r5, #1
90024076:	b292      	uxth	r2, r2
90024078:	b280      	uxth	r0, r0
9002407a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
9002407e:	1c43      	adds	r3, r0, #1
90024080:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
90024084:	eb03 2310 	add.w	r3, r3, r0, lsr #8
90024088:	1c50      	adds	r0, r2, #1
9002408a:	eb00 2212 	add.w	r2, r0, r2, lsr #8
9002408e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90024092:	0952      	lsrs	r2, r2, #5
90024094:	432b      	orrs	r3, r5
90024096:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9002409a:	4313      	orrs	r3, r2
9002409c:	800b      	strh	r3, [r1, #0]
9002409e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
900240a2:	4680      	mov	r8, r0
900240a4:	e763      	b.n	90023f6e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
900240a6:	4684      	mov	ip, r0
900240a8:	4680      	mov	r8, r0
900240aa:	e76c      	b.n	90023f86 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
900240ac:	4684      	mov	ip, r0
900240ae:	e76a      	b.n	90023f86 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
900240b0:	4605      	mov	r5, r0
900240b2:	e779      	b.n	90023fa8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
900240b4:	4603      	mov	r3, r0
900240b6:	4605      	mov	r5, r0
900240b8:	e782      	b.n	90023fc0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
900240ba:	4603      	mov	r3, r0
900240bc:	e780      	b.n	90023fc0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

900240be <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900240be:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900240c2:	b093      	sub	sp, #76	; 0x4c
900240c4:	461d      	mov	r5, r3
900240c6:	9210      	str	r2, [sp, #64]	; 0x40
900240c8:	9b21      	ldr	r3, [sp, #132]	; 0x84
900240ca:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
900240ce:	910a      	str	r1, [sp, #40]	; 0x28
900240d0:	920b      	str	r2, [sp, #44]	; 0x2c
900240d2:	6859      	ldr	r1, [r3, #4]
900240d4:	681b      	ldr	r3, [r3, #0]
900240d6:	9011      	str	r0, [sp, #68]	; 0x44
900240d8:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
900240dc:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
900240e0:	fb01 2707 	mla	r7, r1, r7, r2
900240e4:	eb03 0347 	add.w	r3, r3, r7, lsl #1
900240e8:	9307      	str	r3, [sp, #28]
900240ea:	9b24      	ldr	r3, [sp, #144]	; 0x90
900240ec:	681b      	ldr	r3, [r3, #0]
900240ee:	9309      	str	r3, [sp, #36]	; 0x24
900240f0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
900240f2:	43db      	mvns	r3, r3
900240f4:	b2db      	uxtb	r3, r3
900240f6:	9308      	str	r3, [sp, #32]
900240f8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
900240fa:	2b00      	cmp	r3, #0
900240fc:	dc03      	bgt.n	90024106 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
900240fe:	9b10      	ldr	r3, [sp, #64]	; 0x40
90024100:	2b00      	cmp	r3, #0
90024102:	f340 8205 	ble.w	90024510 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90024106:	9b24      	ldr	r3, [sp, #144]	; 0x90
90024108:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002410c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90024110:	1e48      	subs	r0, r1, #1
90024112:	f102 3cff 	add.w	ip, r2, #4294967295
90024116:	2d00      	cmp	r5, #0
90024118:	f340 80da 	ble.w	900242d0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
9002411c:	ea5f 4e24 	movs.w	lr, r4, asr #16
90024120:	ea4f 4326 	mov.w	r3, r6, asr #16
90024124:	d406      	bmi.n	90024134 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
90024126:	4586      	cmp	lr, r0
90024128:	da04      	bge.n	90024134 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9002412a:	2b00      	cmp	r3, #0
9002412c:	db02      	blt.n	90024134 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9002412e:	4563      	cmp	r3, ip
90024130:	f2c0 80cf 	blt.w	900242d2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
90024134:	f11e 0e01 	adds.w	lr, lr, #1
90024138:	f100 80c1 	bmi.w	900242be <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
9002413c:	4571      	cmp	r1, lr
9002413e:	f2c0 80be 	blt.w	900242be <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
90024142:	3301      	adds	r3, #1
90024144:	f100 80bb 	bmi.w	900242be <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
90024148:	429a      	cmp	r2, r3
9002414a:	f2c0 80b8 	blt.w	900242be <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
9002414e:	46a9      	mov	r9, r5
90024150:	f8dd 801c 	ldr.w	r8, [sp, #28]
90024154:	f1b9 0f00 	cmp.w	r9, #0
90024158:	f340 80d8 	ble.w	9002430c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
9002415c:	9b24      	ldr	r3, [sp, #144]	; 0x90
9002415e:	1421      	asrs	r1, r4, #16
90024160:	ea4f 4026 	mov.w	r0, r6, asr #16
90024164:	f3c4 3203 	ubfx	r2, r4, #12, #4
90024168:	f3c6 3c03 	ubfx	ip, r6, #12, #4
9002416c:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
90024170:	f100 8112 	bmi.w	90024398 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
90024174:	f10e 3aff 	add.w	sl, lr, #4294967295
90024178:	4551      	cmp	r1, sl
9002417a:	f280 810d 	bge.w	90024398 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
9002417e:	2800      	cmp	r0, #0
90024180:	f2c0 810a 	blt.w	90024398 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
90024184:	f103 3aff 	add.w	sl, r3, #4294967295
90024188:	4550      	cmp	r0, sl
9002418a:	f280 8105 	bge.w	90024398 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
9002418e:	fa0f f38e 	sxth.w	r3, lr
90024192:	fb00 1103 	mla	r1, r0, r3, r1
90024196:	9809      	ldr	r0, [sp, #36]	; 0x24
90024198:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
9002419c:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
900241a0:	f8ba 1002 	ldrh.w	r1, [sl, #2]
900241a4:	f1bc 0f00 	cmp.w	ip, #0
900241a8:	d007      	beq.n	900241ba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
900241aa:	005b      	lsls	r3, r3, #1
900241ac:	eb0a 0003 	add.w	r0, sl, r3
900241b0:	f83a 3003 	ldrh.w	r3, [sl, r3]
900241b4:	930c      	str	r3, [sp, #48]	; 0x30
900241b6:	8843      	ldrh	r3, [r0, #2]
900241b8:	930d      	str	r3, [sp, #52]	; 0x34
900241ba:	ea4f 400e 	mov.w	r0, lr, lsl #16
900241be:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
900241c2:	fb12 f30c 	smulbb	r3, r2, ip
900241c6:	ea4f 4a01 	mov.w	sl, r1, lsl #16
900241ca:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
900241ce:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
900241d2:	10db      	asrs	r3, r3, #3
900241d4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
900241d8:	ea40 000e 	orr.w	r0, r0, lr
900241dc:	f1cc 0e10 	rsb	lr, ip, #16
900241e0:	ea4a 0101 	orr.w	r1, sl, r1
900241e4:	9f08      	ldr	r7, [sp, #32]
900241e6:	ebae 0e02 	sub.w	lr, lr, r2
900241ea:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
900241ee:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
900241f2:	4351      	muls	r1, r2
900241f4:	9a0d      	ldr	r2, [sp, #52]	; 0x34
900241f6:	fb0e 1e00 	mla	lr, lr, r0, r1
900241fa:	990c      	ldr	r1, [sp, #48]	; 0x30
900241fc:	0410      	lsls	r0, r2, #16
900241fe:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90024202:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
90024206:	4310      	orrs	r0, r2
90024208:	9a0c      	ldr	r2, [sp, #48]	; 0x30
9002420a:	0412      	lsls	r2, r2, #16
9002420c:	fb03 e000 	mla	r0, r3, r0, lr
90024210:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
90024214:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
90024218:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
9002421c:	ea42 020e 	orr.w	r2, r2, lr
90024220:	fb03 0302 	mla	r3, r3, r2, r0
90024224:	f8b8 0000 	ldrh.w	r0, [r8]
90024228:	0d5a      	lsrs	r2, r3, #21
9002422a:	095b      	lsrs	r3, r3, #5
9002422c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90024230:	1201      	asrs	r1, r0, #8
90024232:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
90024236:	ea4f 0ee0 	mov.w	lr, r0, asr #3
9002423a:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
9002423e:	00c0      	lsls	r0, r0, #3
90024240:	4313      	orrs	r3, r2
90024242:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
90024246:	fb11 f107 	smulbb	r1, r1, r7
9002424a:	b2c0      	uxtb	r0, r0
9002424c:	b29b      	uxth	r3, r3
9002424e:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
90024252:	fb10 f007 	smulbb	r0, r0, r7
90024256:	fb1e fe07 	smulbb	lr, lr, r7
9002425a:	ea4f 2c23 	mov.w	ip, r3, asr #8
9002425e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
90024262:	fb0c 1c02 	mla	ip, ip, r2, r1
90024266:	10d9      	asrs	r1, r3, #3
90024268:	00db      	lsls	r3, r3, #3
9002426a:	fa1f fc8c 	uxth.w	ip, ip
9002426e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
90024272:	b2db      	uxtb	r3, r3
90024274:	fb01 e102 	mla	r1, r1, r2, lr
90024278:	fb03 0302 	mla	r3, r3, r2, r0
9002427c:	b289      	uxth	r1, r1
9002427e:	b29a      	uxth	r2, r3
90024280:	f10c 0301 	add.w	r3, ip, #1
90024284:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
90024288:	1c53      	adds	r3, r2, #1
9002428a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9002428e:	1c4a      	adds	r2, r1, #1
90024290:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
90024294:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90024298:	f3c3 23c4 	ubfx	r3, r3, #11, #5
9002429c:	0949      	lsrs	r1, r1, #5
9002429e:	ea43 030c 	orr.w	r3, r3, ip
900242a2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
900242a6:	430b      	orrs	r3, r1
900242a8:	f8a8 3000 	strh.w	r3, [r8]
900242ac:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
900242ae:	f108 0802 	add.w	r8, r8, #2
900242b2:	f109 39ff 	add.w	r9, r9, #4294967295
900242b6:	441c      	add	r4, r3
900242b8:	9b20      	ldr	r3, [sp, #128]	; 0x80
900242ba:	441e      	add	r6, r3
900242bc:	e74a      	b.n	90024154 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
900242be:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
900242c0:	3d01      	subs	r5, #1
900242c2:	441c      	add	r4, r3
900242c4:	9b20      	ldr	r3, [sp, #128]	; 0x80
900242c6:	441e      	add	r6, r3
900242c8:	9b07      	ldr	r3, [sp, #28]
900242ca:	3302      	adds	r3, #2
900242cc:	9307      	str	r3, [sp, #28]
900242ce:	e722      	b.n	90024116 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
900242d0:	d022      	beq.n	90024318 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
900242d2:	1e6b      	subs	r3, r5, #1
900242d4:	981f      	ldr	r0, [sp, #124]	; 0x7c
900242d6:	fb00 4003 	mla	r0, r0, r3, r4
900242da:	1400      	asrs	r0, r0, #16
900242dc:	f53f af37 	bmi.w	9002414e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
900242e0:	3901      	subs	r1, #1
900242e2:	4288      	cmp	r0, r1
900242e4:	f6bf af33 	bge.w	9002414e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
900242e8:	9920      	ldr	r1, [sp, #128]	; 0x80
900242ea:	fb01 6303 	mla	r3, r1, r3, r6
900242ee:	141b      	asrs	r3, r3, #16
900242f0:	f53f af2d 	bmi.w	9002414e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
900242f4:	3a01      	subs	r2, #1
900242f6:	4293      	cmp	r3, r2
900242f8:	f6bf af29 	bge.w	9002414e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
900242fc:	46a8      	mov	r8, r5
900242fe:	f8dd 901c 	ldr.w	r9, [sp, #28]
90024302:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
90024306:	f1b8 0f00 	cmp.w	r8, #0
9002430a:	dc60      	bgt.n	900243ce <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x310>
9002430c:	9b07      	ldr	r3, [sp, #28]
9002430e:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
90024312:	eb03 0345 	add.w	r3, r3, r5, lsl #1
90024316:	9307      	str	r3, [sp, #28]
90024318:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9002431a:	2b00      	cmp	r3, #0
9002431c:	f340 80f8 	ble.w	90024510 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90024320:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90024324:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90024326:	ee30 0a04 	vadd.f32	s0, s0, s8
9002432a:	ee70 0aa4 	vadd.f32	s1, s1, s9
9002432e:	eef0 6a62 	vmov.f32	s13, s5
90024332:	eec7 7a00 	vdiv.f32	s15, s14, s0
90024336:	ee31 1a05 	vadd.f32	s2, s2, s10
9002433a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002433e:	ee16 4a90 	vmov	r4, s13
90024342:	eef0 6a43 	vmov.f32	s13, s6
90024346:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002434a:	ee16 6a90 	vmov	r6, s13
9002434e:	ee20 7aa7 	vmul.f32	s14, s1, s15
90024352:	ee61 7a27 	vmul.f32	s15, s2, s15
90024356:	ee77 2a62 	vsub.f32	s5, s14, s5
9002435a:	ee37 3ac3 	vsub.f32	s6, s15, s6
9002435e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90024362:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90024366:	ee12 2a90 	vmov	r2, s5
9002436a:	eef0 2a47 	vmov.f32	s5, s14
9002436e:	fb92 f3f3 	sdiv	r3, r2, r3
90024372:	ee13 2a10 	vmov	r2, s6
90024376:	931f      	str	r3, [sp, #124]	; 0x7c
90024378:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9002437a:	eeb0 3a67 	vmov.f32	s6, s15
9002437e:	fb92 f3f3 	sdiv	r3, r2, r3
90024382:	9320      	str	r3, [sp, #128]	; 0x80
90024384:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90024386:	9a10      	ldr	r2, [sp, #64]	; 0x40
90024388:	3b01      	subs	r3, #1
9002438a:	930a      	str	r3, [sp, #40]	; 0x28
9002438c:	bf08      	it	eq
9002438e:	4615      	moveq	r5, r2
90024390:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90024392:	bf18      	it	ne
90024394:	461d      	movne	r5, r3
90024396:	e6af      	b.n	900240f8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90024398:	f111 0a01 	adds.w	sl, r1, #1
9002439c:	d486      	bmi.n	900242ac <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
9002439e:	45d6      	cmp	lr, sl
900243a0:	db84      	blt.n	900242ac <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
900243a2:	f110 0a01 	adds.w	sl, r0, #1
900243a6:	d481      	bmi.n	900242ac <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
900243a8:	4553      	cmp	r3, sl
900243aa:	f6ff af7f 	blt.w	900242ac <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
900243ae:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
900243b0:	b21b      	sxth	r3, r3
900243b2:	9101      	str	r1, [sp, #4]
900243b4:	4641      	mov	r1, r8
900243b6:	9300      	str	r3, [sp, #0]
900243b8:	fa0f f38e 	sxth.w	r3, lr
900243bc:	e9cd 0202 	strd	r0, r2, [sp, #8]
900243c0:	e9cd c704 	strd	ip, r7, [sp, #16]
900243c4:	9a09      	ldr	r2, [sp, #36]	; 0x24
900243c6:	9811      	ldr	r0, [sp, #68]	; 0x44
900243c8:	f7ff fdb2 	bl	90023f30 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
900243cc:	e76e      	b.n	900242ac <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
900243ce:	9b24      	ldr	r3, [sp, #144]	; 0x90
900243d0:	1430      	asrs	r0, r6, #16
900243d2:	9f09      	ldr	r7, [sp, #36]	; 0x24
900243d4:	f3c6 3e03 	ubfx	lr, r6, #12, #4
900243d8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900243dc:	1423      	asrs	r3, r4, #16
900243de:	f3c4 3203 	ubfx	r2, r4, #12, #4
900243e2:	fb01 3000 	mla	r0, r1, r0, r3
900243e6:	9b09      	ldr	r3, [sp, #36]	; 0x24
900243e8:	eb03 0340 	add.w	r3, r3, r0, lsl #1
900243ec:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
900243f0:	8858      	ldrh	r0, [r3, #2]
900243f2:	f1be 0f00 	cmp.w	lr, #0
900243f6:	d00b      	beq.n	90024410 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
900243f8:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
900243fc:	3901      	subs	r1, #1
900243fe:	0049      	lsls	r1, r1, #1
90024400:	3102      	adds	r1, #2
90024402:	eb03 0b01 	add.w	fp, r3, r1
90024406:	5a5b      	ldrh	r3, [r3, r1]
90024408:	930e      	str	r3, [sp, #56]	; 0x38
9002440a:	f8bb 3002 	ldrh.w	r3, [fp, #2]
9002440e:	930f      	str	r3, [sp, #60]	; 0x3c
90024410:	ea4f 410c 	mov.w	r1, ip, lsl #16
90024414:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
90024418:	fb12 f30e 	smulbb	r3, r2, lr
9002441c:	ea4f 4b00 	mov.w	fp, r0, lsl #16
90024420:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
90024424:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90024428:	10db      	asrs	r3, r3, #3
9002442a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
9002442e:	ea41 010c 	orr.w	r1, r1, ip
90024432:	f1ce 0c10 	rsb	ip, lr, #16
90024436:	ea4b 0000 	orr.w	r0, fp, r0
9002443a:	9f08      	ldr	r7, [sp, #32]
9002443c:	ebac 0c02 	sub.w	ip, ip, r2
90024440:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
90024444:	f108 38ff 	add.w	r8, r8, #4294967295
90024448:	4350      	muls	r0, r2
9002444a:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
9002444e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90024450:	fb0c 0c01 	mla	ip, ip, r1, r0
90024454:	980e      	ldr	r0, [sp, #56]	; 0x38
90024456:	ea4f 4b02 	mov.w	fp, r2, lsl #16
9002445a:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
9002445e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
90024460:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90024464:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90024468:	0412      	lsls	r2, r2, #16
9002446a:	ea4b 0101 	orr.w	r1, fp, r1
9002446e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
90024472:	fb03 c101 	mla	r1, r3, r1, ip
90024476:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
9002447a:	4302      	orrs	r2, r0
9002447c:	fb03 1202 	mla	r2, r3, r2, r1
90024480:	ea4f 5b52 	mov.w	fp, r2, lsr #21
90024484:	0952      	lsrs	r2, r2, #5
90024486:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
9002448a:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
9002448e:	f8b9 2000 	ldrh.w	r2, [r9]
90024492:	ea4b 0303 	orr.w	r3, fp, r3
90024496:	1211      	asrs	r1, r2, #8
90024498:	ea4f 0ce2 	mov.w	ip, r2, asr #3
9002449c:	b29b      	uxth	r3, r3
9002449e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
900244a2:	00d2      	lsls	r2, r2, #3
900244a4:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
900244a8:	fb11 f107 	smulbb	r1, r1, r7
900244ac:	1218      	asrs	r0, r3, #8
900244ae:	fb1c fc07 	smulbb	ip, ip, r7
900244b2:	b2d2      	uxtb	r2, r2
900244b4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
900244b8:	fb12 f207 	smulbb	r2, r2, r7
900244bc:	fb00 100a 	mla	r0, r0, sl, r1
900244c0:	10d9      	asrs	r1, r3, #3
900244c2:	00db      	lsls	r3, r3, #3
900244c4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
900244c8:	b280      	uxth	r0, r0
900244ca:	b2db      	uxtb	r3, r3
900244cc:	fb01 c10a 	mla	r1, r1, sl, ip
900244d0:	fb03 230a 	mla	r3, r3, sl, r2
900244d4:	1c42      	adds	r2, r0, #1
900244d6:	b289      	uxth	r1, r1
900244d8:	b29b      	uxth	r3, r3
900244da:	eb02 2010 	add.w	r0, r2, r0, lsr #8
900244de:	f101 0c01 	add.w	ip, r1, #1
900244e2:	1c5a      	adds	r2, r3, #1
900244e4:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
900244e8:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
900244ec:	eb02 2213 	add.w	r2, r2, r3, lsr #8
900244f0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
900244f2:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
900244f6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
900244fa:	441c      	add	r4, r3
900244fc:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
90024500:	9b20      	ldr	r3, [sp, #128]	; 0x80
90024502:	4310      	orrs	r0, r2
90024504:	441e      	add	r6, r3
90024506:	ea40 000c 	orr.w	r0, r0, ip
9002450a:	f829 0b02 	strh.w	r0, [r9], #2
9002450e:	e6fa      	b.n	90024306 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
90024510:	b013      	add	sp, #76	; 0x4c
90024512:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90024516 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
90024516:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9002451a:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
9002451e:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
90024522:	fb0e 4703 	mla	r7, lr, r3, r4
90024526:	f1be 0f00 	cmp.w	lr, #0
9002452a:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
9002452e:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
90024532:	eb02 0847 	add.w	r8, r2, r7, lsl #1
90024536:	8808      	ldrh	r0, [r1, #0]
90024538:	db60      	blt.n	900245fc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
9002453a:	45f1      	cmp	r9, lr
9002453c:	dd5e      	ble.n	900245fc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
9002453e:	2c00      	cmp	r4, #0
90024540:	db5a      	blt.n	900245f8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
90024542:	42a3      	cmp	r3, r4
90024544:	dd58      	ble.n	900245f8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
90024546:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
9002454a:	1c62      	adds	r2, r4, #1
9002454c:	d459      	bmi.n	90024602 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
9002454e:	4293      	cmp	r3, r2
90024550:	dd57      	ble.n	90024602 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
90024552:	2d00      	cmp	r5, #0
90024554:	d055      	beq.n	90024602 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
90024556:	f8b8 7002 	ldrh.w	r7, [r8, #2]
9002455a:	f11e 0e01 	adds.w	lr, lr, #1
9002455e:	d454      	bmi.n	9002460a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
90024560:	45f1      	cmp	r9, lr
90024562:	dd52      	ble.n	9002460a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
90024564:	2e00      	cmp	r6, #0
90024566:	d050      	beq.n	9002460a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
90024568:	2c00      	cmp	r4, #0
9002456a:	db4c      	blt.n	90024606 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
9002456c:	42a3      	cmp	r3, r4
9002456e:	dd4a      	ble.n	90024606 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
90024570:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
90024574:	3401      	adds	r4, #1
90024576:	d405      	bmi.n	90024584 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
90024578:	42a3      	cmp	r3, r4
9002457a:	dd03      	ble.n	90024584 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
9002457c:	b115      	cbz	r5, 90024584 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
9002457e:	3301      	adds	r3, #1
90024580:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
90024584:	fb15 f406 	smulbb	r4, r5, r6
90024588:	ea4f 430c 	mov.w	r3, ip, lsl #16
9002458c:	ea4f 4e07 	mov.w	lr, r7, lsl #16
90024590:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
90024594:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
90024598:	f3c4 04c7 	ubfx	r4, r4, #3, #8
9002459c:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
900245a0:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
900245a4:	ea43 0c0c 	orr.w	ip, r3, ip
900245a8:	f1c6 0310 	rsb	r3, r6, #16
900245ac:	ea4e 0707 	orr.w	r7, lr, r7
900245b0:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
900245b4:	1b5b      	subs	r3, r3, r5
900245b6:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
900245ba:	eb04 0343 	add.w	r3, r4, r3, lsl #1
900245be:	437d      	muls	r5, r7
900245c0:	fb03 5c0c 	mla	ip, r3, ip, r5
900245c4:	0403      	lsls	r3, r0, #16
900245c6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
900245ca:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
900245ce:	4318      	orrs	r0, r3
900245d0:	0413      	lsls	r3, r2, #16
900245d2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
900245d6:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
900245da:	fb04 c000 	mla	r0, r4, r0, ip
900245de:	4313      	orrs	r3, r2
900245e0:	fb06 0003 	mla	r0, r6, r3, r0
900245e4:	0d43      	lsrs	r3, r0, #21
900245e6:	0940      	lsrs	r0, r0, #5
900245e8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
900245ec:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
900245f0:	4318      	orrs	r0, r3
900245f2:	8008      	strh	r0, [r1, #0]
900245f4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900245f8:	4684      	mov	ip, r0
900245fa:	e7a6      	b.n	9002454a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
900245fc:	4607      	mov	r7, r0
900245fe:	4684      	mov	ip, r0
90024600:	e7ab      	b.n	9002455a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
90024602:	4607      	mov	r7, r0
90024604:	e7a9      	b.n	9002455a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
90024606:	4602      	mov	r2, r0
90024608:	e7b4      	b.n	90024574 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
9002460a:	4602      	mov	r2, r0
9002460c:	e7ba      	b.n	90024584 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

9002460e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9002460e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90024612:	b08f      	sub	sp, #60	; 0x3c
90024614:	461d      	mov	r5, r3
90024616:	9b1d      	ldr	r3, [sp, #116]	; 0x74
90024618:	9107      	str	r1, [sp, #28]
9002461a:	920c      	str	r2, [sp, #48]	; 0x30
9002461c:	6859      	ldr	r1, [r3, #4]
9002461e:	681b      	ldr	r3, [r3, #0]
90024620:	900d      	str	r0, [sp, #52]	; 0x34
90024622:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
90024626:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
9002462a:	fb01 2707 	mla	r7, r1, r7, r2
9002462e:	eb03 0747 	add.w	r7, r3, r7, lsl #1
90024632:	9b20      	ldr	r3, [sp, #128]	; 0x80
90024634:	f8d3 8000 	ldr.w	r8, [r3]
90024638:	9b07      	ldr	r3, [sp, #28]
9002463a:	2b00      	cmp	r3, #0
9002463c:	dc03      	bgt.n	90024646 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9002463e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90024640:	2b00      	cmp	r3, #0
90024642:	f340 8182 	ble.w	9002494a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
90024646:	9b20      	ldr	r3, [sp, #128]	; 0x80
90024648:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002464c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90024650:	1e48      	subs	r0, r1, #1
90024652:	f102 3cff 	add.w	ip, r2, #4294967295
90024656:	2d00      	cmp	r5, #0
90024658:	f340 809b 	ble.w	90024792 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
9002465c:	ea5f 4e24 	movs.w	lr, r4, asr #16
90024660:	ea4f 4326 	mov.w	r3, r6, asr #16
90024664:	d406      	bmi.n	90024674 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90024666:	4586      	cmp	lr, r0
90024668:	da04      	bge.n	90024674 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9002466a:	2b00      	cmp	r3, #0
9002466c:	db02      	blt.n	90024674 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9002466e:	4563      	cmp	r3, ip
90024670:	f2c0 8090 	blt.w	90024794 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90024674:	f11e 0e01 	adds.w	lr, lr, #1
90024678:	f100 8084 	bmi.w	90024784 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
9002467c:	4571      	cmp	r1, lr
9002467e:	f2c0 8081 	blt.w	90024784 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90024682:	3301      	adds	r3, #1
90024684:	d47e      	bmi.n	90024784 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90024686:	429a      	cmp	r2, r3
90024688:	db7c      	blt.n	90024784 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
9002468a:	46aa      	mov	sl, r5
9002468c:	46b9      	mov	r9, r7
9002468e:	f1ba 0f00 	cmp.w	sl, #0
90024692:	f340 8099 	ble.w	900247c8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
90024696:	9b20      	ldr	r3, [sp, #128]	; 0x80
90024698:	1421      	asrs	r1, r4, #16
9002469a:	ea4f 4026 	mov.w	r0, r6, asr #16
9002469e:	f3c4 3203 	ubfx	r2, r4, #12, #4
900246a2:	f3c6 3c03 	ubfx	ip, r6, #12, #4
900246a6:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
900246aa:	f100 80d1 	bmi.w	90024850 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
900246ae:	f10e 3bff 	add.w	fp, lr, #4294967295
900246b2:	4559      	cmp	r1, fp
900246b4:	f280 80cc 	bge.w	90024850 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
900246b8:	2800      	cmp	r0, #0
900246ba:	f2c0 80c9 	blt.w	90024850 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
900246be:	f103 3bff 	add.w	fp, r3, #4294967295
900246c2:	4558      	cmp	r0, fp
900246c4:	f280 80c4 	bge.w	90024850 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
900246c8:	fa0f fe8e 	sxth.w	lr, lr
900246cc:	fb00 110e 	mla	r1, r0, lr, r1
900246d0:	eb08 0041 	add.w	r0, r8, r1, lsl #1
900246d4:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
900246d8:	8841      	ldrh	r1, [r0, #2]
900246da:	f1bc 0f00 	cmp.w	ip, #0
900246de:	d00b      	beq.n	900246f8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
900246e0:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
900246e4:	3b01      	subs	r3, #1
900246e6:	005b      	lsls	r3, r3, #1
900246e8:	3302      	adds	r3, #2
900246ea:	eb00 0e03 	add.w	lr, r0, r3
900246ee:	5ac3      	ldrh	r3, [r0, r3]
900246f0:	9308      	str	r3, [sp, #32]
900246f2:	f8be 3002 	ldrh.w	r3, [lr, #2]
900246f6:	9309      	str	r3, [sp, #36]	; 0x24
900246f8:	ea4f 400b 	mov.w	r0, fp, lsl #16
900246fc:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
90024700:	fb12 f30c 	smulbb	r3, r2, ip
90024704:	f1cc 0e10 	rsb	lr, ip, #16
90024708:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
9002470c:	10db      	asrs	r3, r3, #3
9002470e:	ebae 0e02 	sub.w	lr, lr, r2
90024712:	ea40 000b 	orr.w	r0, r0, fp
90024716:	ea4f 4b01 	mov.w	fp, r1, lsl #16
9002471a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
9002471e:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
90024722:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90024726:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
9002472a:	ea4b 0101 	orr.w	r1, fp, r1
9002472e:	4351      	muls	r1, r2
90024730:	9a09      	ldr	r2, [sp, #36]	; 0x24
90024732:	fb0e 1e00 	mla	lr, lr, r0, r1
90024736:	0410      	lsls	r0, r2, #16
90024738:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
9002473c:	9908      	ldr	r1, [sp, #32]
9002473e:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
90024742:	4310      	orrs	r0, r2
90024744:	9a08      	ldr	r2, [sp, #32]
90024746:	0412      	lsls	r2, r2, #16
90024748:	fb03 e000 	mla	r0, r3, r0, lr
9002474c:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
90024750:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
90024754:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
90024758:	ea42 020e 	orr.w	r2, r2, lr
9002475c:	fb03 0302 	mla	r3, r3, r2, r0
90024760:	0d5a      	lsrs	r2, r3, #21
90024762:	095b      	lsrs	r3, r3, #5
90024764:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90024768:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
9002476c:	4313      	orrs	r3, r2
9002476e:	f8a9 3000 	strh.w	r3, [r9]
90024772:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
90024774:	f109 0902 	add.w	r9, r9, #2
90024778:	f10a 3aff 	add.w	sl, sl, #4294967295
9002477c:	441c      	add	r4, r3
9002477e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90024780:	441e      	add	r6, r3
90024782:	e784      	b.n	9002468e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
90024784:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
90024786:	3d01      	subs	r5, #1
90024788:	3702      	adds	r7, #2
9002478a:	441c      	add	r4, r3
9002478c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9002478e:	441e      	add	r6, r3
90024790:	e761      	b.n	90024656 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90024792:	d01d      	beq.n	900247d0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90024794:	1e6b      	subs	r3, r5, #1
90024796:	981b      	ldr	r0, [sp, #108]	; 0x6c
90024798:	fb00 4003 	mla	r0, r0, r3, r4
9002479c:	1400      	asrs	r0, r0, #16
9002479e:	f53f af74 	bmi.w	9002468a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
900247a2:	3901      	subs	r1, #1
900247a4:	4288      	cmp	r0, r1
900247a6:	f6bf af70 	bge.w	9002468a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
900247aa:	991c      	ldr	r1, [sp, #112]	; 0x70
900247ac:	fb01 6303 	mla	r3, r1, r3, r6
900247b0:	141b      	asrs	r3, r3, #16
900247b2:	f53f af6a 	bmi.w	9002468a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
900247b6:	3a01      	subs	r2, #1
900247b8:	4293      	cmp	r3, r2
900247ba:	f6bf af66 	bge.w	9002468a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
900247be:	46a9      	mov	r9, r5
900247c0:	46ba      	mov	sl, r7
900247c2:	f1b9 0f00 	cmp.w	r9, #0
900247c6:	dc5b      	bgt.n	90024880 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
900247c8:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
900247cc:	eb07 0745 	add.w	r7, r7, r5, lsl #1
900247d0:	9b07      	ldr	r3, [sp, #28]
900247d2:	2b00      	cmp	r3, #0
900247d4:	f340 80b9 	ble.w	9002494a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
900247d8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
900247dc:	9b18      	ldr	r3, [sp, #96]	; 0x60
900247de:	ee30 0a04 	vadd.f32	s0, s0, s8
900247e2:	ee70 0aa4 	vadd.f32	s1, s1, s9
900247e6:	eef0 6a62 	vmov.f32	s13, s5
900247ea:	eec7 7a00 	vdiv.f32	s15, s14, s0
900247ee:	ee31 1a05 	vadd.f32	s2, s2, s10
900247f2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900247f6:	ee16 4a90 	vmov	r4, s13
900247fa:	eef0 6a43 	vmov.f32	s13, s6
900247fe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90024802:	ee16 6a90 	vmov	r6, s13
90024806:	ee20 7aa7 	vmul.f32	s14, s1, s15
9002480a:	ee61 7a27 	vmul.f32	s15, s2, s15
9002480e:	ee77 2a62 	vsub.f32	s5, s14, s5
90024812:	ee37 3ac3 	vsub.f32	s6, s15, s6
90024816:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9002481a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9002481e:	ee12 2a90 	vmov	r2, s5
90024822:	eef0 2a47 	vmov.f32	s5, s14
90024826:	fb92 f3f3 	sdiv	r3, r2, r3
9002482a:	ee13 2a10 	vmov	r2, s6
9002482e:	931b      	str	r3, [sp, #108]	; 0x6c
90024830:	9b18      	ldr	r3, [sp, #96]	; 0x60
90024832:	eeb0 3a67 	vmov.f32	s6, s15
90024836:	fb92 f3f3 	sdiv	r3, r2, r3
9002483a:	931c      	str	r3, [sp, #112]	; 0x70
9002483c:	9b07      	ldr	r3, [sp, #28]
9002483e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
90024840:	3b01      	subs	r3, #1
90024842:	9307      	str	r3, [sp, #28]
90024844:	bf08      	it	eq
90024846:	4615      	moveq	r5, r2
90024848:	9b18      	ldr	r3, [sp, #96]	; 0x60
9002484a:	bf18      	it	ne
9002484c:	461d      	movne	r5, r3
9002484e:	e6f3      	b.n	90024638 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
90024850:	f111 0b01 	adds.w	fp, r1, #1
90024854:	d48d      	bmi.n	90024772 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90024856:	45de      	cmp	lr, fp
90024858:	db8b      	blt.n	90024772 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9002485a:	f110 0b01 	adds.w	fp, r0, #1
9002485e:	d488      	bmi.n	90024772 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90024860:	455b      	cmp	r3, fp
90024862:	db86      	blt.n	90024772 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90024864:	b21b      	sxth	r3, r3
90024866:	e9cd 1001 	strd	r1, r0, [sp, #4]
9002486a:	e9cd 2c03 	strd	r2, ip, [sp, #12]
9002486e:	9300      	str	r3, [sp, #0]
90024870:	4642      	mov	r2, r8
90024872:	fa0f f38e 	sxth.w	r3, lr
90024876:	4649      	mov	r1, r9
90024878:	980d      	ldr	r0, [sp, #52]	; 0x34
9002487a:	f7ff fe4c 	bl	90024516 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
9002487e:	e778      	b.n	90024772 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90024880:	9b20      	ldr	r3, [sp, #128]	; 0x80
90024882:	1420      	asrs	r0, r4, #16
90024884:	1431      	asrs	r1, r6, #16
90024886:	f3c6 3e03 	ubfx	lr, r6, #12, #4
9002488a:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
9002488e:	f3c4 3203 	ubfx	r2, r4, #12, #4
90024892:	fb03 0101 	mla	r1, r3, r1, r0
90024896:	eb08 0041 	add.w	r0, r8, r1, lsl #1
9002489a:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
9002489e:	8841      	ldrh	r1, [r0, #2]
900248a0:	f1be 0f00 	cmp.w	lr, #0
900248a4:	d00b      	beq.n	900248be <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
900248a6:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
900248aa:	3b01      	subs	r3, #1
900248ac:	005b      	lsls	r3, r3, #1
900248ae:	3302      	adds	r3, #2
900248b0:	eb00 0b03 	add.w	fp, r0, r3
900248b4:	5ac3      	ldrh	r3, [r0, r3]
900248b6:	930a      	str	r3, [sp, #40]	; 0x28
900248b8:	f8bb 3002 	ldrh.w	r3, [fp, #2]
900248bc:	930b      	str	r3, [sp, #44]	; 0x2c
900248be:	ea4f 400c 	mov.w	r0, ip, lsl #16
900248c2:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
900248c6:	fb12 f30e 	smulbb	r3, r2, lr
900248ca:	ea4f 4b01 	mov.w	fp, r1, lsl #16
900248ce:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
900248d2:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
900248d6:	10db      	asrs	r3, r3, #3
900248d8:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
900248dc:	ea40 000c 	orr.w	r0, r0, ip
900248e0:	f1ce 0c10 	rsb	ip, lr, #16
900248e4:	ea4b 0101 	orr.w	r1, fp, r1
900248e8:	f109 39ff 	add.w	r9, r9, #4294967295
900248ec:	ebac 0c02 	sub.w	ip, ip, r2
900248f0:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
900248f4:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
900248f8:	4351      	muls	r1, r2
900248fa:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
900248fc:	fb0c 1c00 	mla	ip, ip, r0, r1
90024900:	990a      	ldr	r1, [sp, #40]	; 0x28
90024902:	ea4f 4b02 	mov.w	fp, r2, lsl #16
90024906:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
9002490a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
9002490c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90024910:	0412      	lsls	r2, r2, #16
90024912:	ea4b 0000 	orr.w	r0, fp, r0
90024916:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
9002491a:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
9002491e:	fb03 c000 	mla	r0, r3, r0, ip
90024922:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
90024926:	ea42 0b0b 	orr.w	fp, r2, fp
9002492a:	fb03 000b 	mla	r0, r3, fp, r0
9002492e:	0d43      	lsrs	r3, r0, #21
90024930:	0940      	lsrs	r0, r0, #5
90024932:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90024936:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
9002493a:	4318      	orrs	r0, r3
9002493c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
9002493e:	441c      	add	r4, r3
90024940:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90024942:	f82a 0b02 	strh.w	r0, [sl], #2
90024946:	441e      	add	r6, r3
90024948:	e73b      	b.n	900247c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
9002494a:	b00f      	add	sp, #60	; 0x3c
9002494c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90024950 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
90024950:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90024954:	b085      	sub	sp, #20
90024956:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
9002495a:	9102      	str	r1, [sp, #8]
9002495c:	2c00      	cmp	r4, #0
9002495e:	fb04 7103 	mla	r1, r4, r3, r7
90024962:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
90024966:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
9002496a:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
9002496e:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
90024972:	f2c0 811b 	blt.w	90024bac <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
90024976:	45a6      	cmp	lr, r4
90024978:	f340 8118 	ble.w	90024bac <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
9002497c:	2f00      	cmp	r7, #0
9002497e:	f2c0 8113 	blt.w	90024ba8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
90024982:	42bb      	cmp	r3, r7
90024984:	f340 8110 	ble.w	90024ba8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
90024988:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
9002498c:	1c7a      	adds	r2, r7, #1
9002498e:	f100 8110 	bmi.w	90024bb2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
90024992:	4293      	cmp	r3, r2
90024994:	f340 810d 	ble.w	90024bb2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
90024998:	2e00      	cmp	r6, #0
9002499a:	f000 810c 	beq.w	90024bb6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
9002499e:	f8dc 1004 	ldr.w	r1, [ip, #4]
900249a2:	3401      	adds	r4, #1
900249a4:	f100 810b 	bmi.w	90024bbe <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
900249a8:	45a6      	cmp	lr, r4
900249aa:	f340 8108 	ble.w	90024bbe <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
900249ae:	2800      	cmp	r0, #0
900249b0:	f000 8108 	beq.w	90024bc4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
900249b4:	2f00      	cmp	r7, #0
900249b6:	f2c0 8100 	blt.w	90024bba <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
900249ba:	42bb      	cmp	r3, r7
900249bc:	f340 80fd 	ble.w	90024bba <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
900249c0:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
900249c4:	3701      	adds	r7, #1
900249c6:	f100 8100 	bmi.w	90024bca <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
900249ca:	42bb      	cmp	r3, r7
900249cc:	f340 80fd 	ble.w	90024bca <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
900249d0:	2e00      	cmp	r6, #0
900249d2:	f000 80fc 	beq.w	90024bce <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
900249d6:	3301      	adds	r3, #1
900249d8:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
900249dc:	b2b6      	uxth	r6, r6
900249de:	b280      	uxth	r0, r0
900249e0:	ea4f 6a11 	mov.w	sl, r1, lsr #24
900249e4:	fb00 fe06 	mul.w	lr, r0, r6
900249e8:	0136      	lsls	r6, r6, #4
900249ea:	ea4f 6b15 	mov.w	fp, r5, lsr #24
900249ee:	ebce 1000 	rsb	r0, lr, r0, lsl #4
900249f2:	eba6 070e 	sub.w	r7, r6, lr
900249f6:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
900249fa:	ea4f 6914 	mov.w	r9, r4, lsr #24
900249fe:	b280      	uxth	r0, r0
90024a00:	b2bf      	uxth	r7, r7
90024a02:	1a1b      	subs	r3, r3, r0
90024a04:	ea4f 6812 	mov.w	r8, r2, lsr #24
90024a08:	fb0a f607 	mul.w	r6, sl, r7
90024a0c:	b29b      	uxth	r3, r3
90024a0e:	fb0b 6603 	mla	r6, fp, r3, r6
90024a12:	fb00 6609 	mla	r6, r0, r9, r6
90024a16:	fb0e 6608 	mla	r6, lr, r8, r6
90024a1a:	f3c6 2607 	ubfx	r6, r6, #8, #8
90024a1e:	9600      	str	r6, [sp, #0]
90024a20:	2e00      	cmp	r6, #0
90024a22:	f000 80be 	beq.w	90024ba2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
90024a26:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
90024a2a:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
90024a2e:	9e02      	ldr	r6, [sp, #8]
90024a30:	fb0b fc0c 	mul.w	ip, fp, ip
90024a34:	fb0b f505 	mul.w	r5, fp, r5
90024a38:	8836      	ldrh	r6, [r6, #0]
90024a3a:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
90024a3e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
90024a42:	9501      	str	r5, [sp, #4]
90024a44:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
90024a48:	44dc      	add	ip, fp
90024a4a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024a4e:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
90024a52:	9503      	str	r5, [sp, #12]
90024a54:	9d01      	ldr	r5, [sp, #4]
90024a56:	f505 7c80 	add.w	ip, r5, #256	; 0x100
90024a5a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
90024a5e:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
90024a62:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
90024a66:	fb0a fc0c 	mul.w	ip, sl, ip
90024a6a:	ea4f 2b15 	mov.w	fp, r5, lsr #8
90024a6e:	fb0a fa01 	mul.w	sl, sl, r1
90024a72:	ea4f 251c 	mov.w	r5, ip, lsr #8
90024a76:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
90024a7a:	f50a 7180 	add.w	r1, sl, #256	; 0x100
90024a7e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
90024a82:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
90024a86:	4465      	add	r5, ip
90024a88:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
90024a8c:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
90024a90:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90024a94:	fb09 fc0c 	mul.w	ip, r9, ip
90024a98:	0a2d      	lsrs	r5, r5, #8
90024a9a:	fb09 f904 	mul.w	r9, r9, r4
90024a9e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90024aa2:	ea4f 211c 	mov.w	r1, ip, lsr #8
90024aa6:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
90024aaa:	f509 7480 	add.w	r4, r9, #256	; 0x100
90024aae:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
90024ab2:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
90024ab6:	437d      	muls	r5, r7
90024ab8:	eb04 2919 	add.w	r9, r4, r9, lsr #8
90024abc:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
90024ac0:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
90024ac4:	4461      	add	r1, ip
90024ac6:	fb08 f404 	mul.w	r4, r8, r4
90024aca:	ea4f 2919 	mov.w	r9, r9, lsr #8
90024ace:	fb08 f802 	mul.w	r8, r8, r2
90024ad2:	0a09      	lsrs	r1, r1, #8
90024ad4:	0a22      	lsrs	r2, r4, #8
90024ad6:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
90024ada:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
90024ade:	fb07 f70a 	mul.w	r7, r7, sl
90024ae2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
90024ae6:	4414      	add	r4, r2
90024ae8:	f508 7280 	add.w	r2, r8, #256	; 0x100
90024aec:	0a24      	lsrs	r4, r4, #8
90024aee:	eb02 2818 	add.w	r8, r2, r8, lsr #8
90024af2:	9a03      	ldr	r2, [sp, #12]
90024af4:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
90024af8:	fb02 5503 	mla	r5, r2, r3, r5
90024afc:	ea4f 2818 	mov.w	r8, r8, lsr #8
90024b00:	9a00      	ldr	r2, [sp, #0]
90024b02:	fb04 540e 	mla	r4, r4, lr, r5
90024b06:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
90024b0a:	1235      	asrs	r5, r6, #8
90024b0c:	fb01 4100 	mla	r1, r1, r0, r4
90024b10:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
90024b14:	0a09      	lsrs	r1, r1, #8
90024b16:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
90024b1a:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
90024b1e:	fb03 7101 	mla	r1, r3, r1, r7
90024b22:	fb0e 1e08 	mla	lr, lr, r8, r1
90024b26:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
90024b2a:	fb00 e101 	mla	r1, r0, r1, lr
90024b2e:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
90024b32:	b287      	uxth	r7, r0
90024b34:	0a09      	lsrs	r1, r1, #8
90024b36:	437a      	muls	r2, r7
90024b38:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
90024b3c:	1c53      	adds	r3, r2, #1
90024b3e:	4321      	orrs	r1, r4
90024b40:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90024b44:	0c0a      	lsrs	r2, r1, #16
90024b46:	f3c1 2407 	ubfx	r4, r1, #8, #8
90024b4a:	ea6f 2313 	mvn.w	r3, r3, lsr #8
90024b4e:	b2c8      	uxtb	r0, r1
90024b50:	fb12 f207 	smulbb	r2, r2, r7
90024b54:	fb14 f407 	smulbb	r4, r4, r7
90024b58:	b2db      	uxtb	r3, r3
90024b5a:	fb10 f007 	smulbb	r0, r0, r7
90024b5e:	fb05 2503 	mla	r5, r5, r3, r2
90024b62:	10f2      	asrs	r2, r6, #3
90024b64:	00f6      	lsls	r6, r6, #3
90024b66:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
90024b6a:	b2ad      	uxth	r5, r5
90024b6c:	b2f6      	uxtb	r6, r6
90024b6e:	fb02 4203 	mla	r2, r2, r3, r4
90024b72:	fb06 0303 	mla	r3, r6, r3, r0
90024b76:	b294      	uxth	r4, r2
90024b78:	b299      	uxth	r1, r3
90024b7a:	1c6b      	adds	r3, r5, #1
90024b7c:	1c62      	adds	r2, r4, #1
90024b7e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90024b82:	1c4b      	adds	r3, r1, #1
90024b84:	eb02 2214 	add.w	r2, r2, r4, lsr #8
90024b88:	eb03 2311 	add.w	r3, r3, r1, lsr #8
90024b8c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
90024b90:	0952      	lsrs	r2, r2, #5
90024b92:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90024b96:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90024b9a:	432b      	orrs	r3, r5
90024b9c:	4313      	orrs	r3, r2
90024b9e:	9a02      	ldr	r2, [sp, #8]
90024ba0:	8013      	strh	r3, [r2, #0]
90024ba2:	b005      	add	sp, #20
90024ba4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90024ba8:	2500      	movs	r5, #0
90024baa:	e6ef      	b.n	9002498c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
90024bac:	2100      	movs	r1, #0
90024bae:	460d      	mov	r5, r1
90024bb0:	e6f7      	b.n	900249a2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
90024bb2:	2100      	movs	r1, #0
90024bb4:	e6f5      	b.n	900249a2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
90024bb6:	4631      	mov	r1, r6
90024bb8:	e6f3      	b.n	900249a2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
90024bba:	2400      	movs	r4, #0
90024bbc:	e702      	b.n	900249c4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
90024bbe:	2200      	movs	r2, #0
90024bc0:	4614      	mov	r4, r2
90024bc2:	e70b      	b.n	900249dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
90024bc4:	4602      	mov	r2, r0
90024bc6:	4604      	mov	r4, r0
90024bc8:	e708      	b.n	900249dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
90024bca:	2200      	movs	r2, #0
90024bcc:	e706      	b.n	900249dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
90024bce:	4632      	mov	r2, r6
90024bd0:	e704      	b.n	900249dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

90024bd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90024bd2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90024bd6:	b09d      	sub	sp, #116	; 0x74
90024bd8:	9219      	str	r2, [sp, #100]	; 0x64
90024bda:	9307      	str	r3, [sp, #28]
90024bdc:	9a2b      	ldr	r2, [sp, #172]	; 0xac
90024bde:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
90024be2:	901b      	str	r0, [sp, #108]	; 0x6c
90024be4:	931a      	str	r3, [sp, #104]	; 0x68
90024be6:	6850      	ldr	r0, [r2, #4]
90024be8:	9117      	str	r1, [sp, #92]	; 0x5c
90024bea:	6812      	ldr	r2, [r2, #0]
90024bec:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
90024bf0:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
90024bf4:	fb00 1303 	mla	r3, r0, r3, r1
90024bf8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90024bfc:	930a      	str	r3, [sp, #40]	; 0x28
90024bfe:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
90024c00:	681b      	ldr	r3, [r3, #0]
90024c02:	9310      	str	r3, [sp, #64]	; 0x40
90024c04:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
90024c08:	930b      	str	r3, [sp, #44]	; 0x2c
90024c0a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
90024c0c:	2b00      	cmp	r3, #0
90024c0e:	dc03      	bgt.n	90024c18 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
90024c10:	9b19      	ldr	r3, [sp, #100]	; 0x64
90024c12:	2b00      	cmp	r3, #0
90024c14:	f340 8375 	ble.w	90025302 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
90024c18:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
90024c1a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90024c1e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90024c22:	1e48      	subs	r0, r1, #1
90024c24:	1e57      	subs	r7, r2, #1
90024c26:	9b07      	ldr	r3, [sp, #28]
90024c28:	2b00      	cmp	r3, #0
90024c2a:	f340 818e 	ble.w	90024f4a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
90024c2e:	ea5f 4c24 	movs.w	ip, r4, asr #16
90024c32:	ea4f 4326 	mov.w	r3, r6, asr #16
90024c36:	d406      	bmi.n	90024c46 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
90024c38:	4584      	cmp	ip, r0
90024c3a:	da04      	bge.n	90024c46 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
90024c3c:	2b00      	cmp	r3, #0
90024c3e:	db02      	blt.n	90024c46 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
90024c40:	42bb      	cmp	r3, r7
90024c42:	f2c0 8183 	blt.w	90024f4c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
90024c46:	f11c 0c01 	adds.w	ip, ip, #1
90024c4a:	f100 8173 	bmi.w	90024f34 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90024c4e:	4561      	cmp	r1, ip
90024c50:	f2c0 8170 	blt.w	90024f34 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90024c54:	3301      	adds	r3, #1
90024c56:	f100 816d 	bmi.w	90024f34 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90024c5a:	429a      	cmp	r2, r3
90024c5c:	f2c0 816a 	blt.w	90024f34 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90024c60:	9b07      	ldr	r3, [sp, #28]
90024c62:	9f0a      	ldr	r7, [sp, #40]	; 0x28
90024c64:	9318      	str	r3, [sp, #96]	; 0x60
90024c66:	9b18      	ldr	r3, [sp, #96]	; 0x60
90024c68:	2b00      	cmp	r3, #0
90024c6a:	f340 818c 	ble.w	90024f86 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
90024c6e:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
90024c70:	ea4f 4c26 	mov.w	ip, r6, asr #16
90024c74:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
90024c76:	f3c4 3003 	ubfx	r0, r4, #12, #4
90024c7a:	f8d2 e00c 	ldr.w	lr, [r2, #12]
90024c7e:	1422      	asrs	r2, r4, #16
90024c80:	f3c6 3103 	ubfx	r1, r6, #12, #4
90024c84:	689b      	ldr	r3, [r3, #8]
90024c86:	f100 81cd 	bmi.w	90025024 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90024c8a:	f103 38ff 	add.w	r8, r3, #4294967295
90024c8e:	4542      	cmp	r2, r8
90024c90:	f280 81c8 	bge.w	90025024 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90024c94:	f1bc 0f00 	cmp.w	ip, #0
90024c98:	f2c0 81c4 	blt.w	90025024 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90024c9c:	f10e 38ff 	add.w	r8, lr, #4294967295
90024ca0:	45c4      	cmp	ip, r8
90024ca2:	f280 81bf 	bge.w	90025024 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90024ca6:	b21b      	sxth	r3, r3
90024ca8:	9d10      	ldr	r5, [sp, #64]	; 0x40
90024caa:	fb0c 2203 	mla	r2, ip, r3, r2
90024cae:	eb05 0882 	add.w	r8, r5, r2, lsl #2
90024cb2:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
90024cb6:	ea4f 6e12 	mov.w	lr, r2, lsr #24
90024cba:	2800      	cmp	r0, #0
90024cbc:	f000 81a9 	beq.w	90025012 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
90024cc0:	f8d8 5004 	ldr.w	r5, [r8, #4]
90024cc4:	950c      	str	r5, [sp, #48]	; 0x30
90024cc6:	0e2d      	lsrs	r5, r5, #24
90024cc8:	9513      	str	r5, [sp, #76]	; 0x4c
90024cca:	b181      	cbz	r1, 90024cee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
90024ccc:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
90024cd0:	3b01      	subs	r3, #1
90024cd2:	009b      	lsls	r3, r3, #2
90024cd4:	3304      	adds	r3, #4
90024cd6:	eb08 0c03 	add.w	ip, r8, r3
90024cda:	f858 3003 	ldr.w	r3, [r8, r3]
90024cde:	9308      	str	r3, [sp, #32]
90024ce0:	0e1b      	lsrs	r3, r3, #24
90024ce2:	9311      	str	r3, [sp, #68]	; 0x44
90024ce4:	f8dc 3004 	ldr.w	r3, [ip, #4]
90024ce8:	930d      	str	r3, [sp, #52]	; 0x34
90024cea:	0e1b      	lsrs	r3, r3, #24
90024cec:	9314      	str	r3, [sp, #80]	; 0x50
90024cee:	b280      	uxth	r0, r0
90024cf0:	9d11      	ldr	r5, [sp, #68]	; 0x44
90024cf2:	b289      	uxth	r1, r1
90024cf4:	fb00 f901 	mul.w	r9, r0, r1
90024cf8:	0100      	lsls	r0, r0, #4
90024cfa:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
90024cfe:	eba0 0809 	sub.w	r8, r0, r9
90024d02:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
90024d06:	9813      	ldr	r0, [sp, #76]	; 0x4c
90024d08:	b289      	uxth	r1, r1
90024d0a:	fa1f f888 	uxth.w	r8, r8
90024d0e:	1a5b      	subs	r3, r3, r1
90024d10:	fb08 f000 	mul.w	r0, r8, r0
90024d14:	b29b      	uxth	r3, r3
90024d16:	fb03 000e 	mla	r0, r3, lr, r0
90024d1a:	fb01 0005 	mla	r0, r1, r5, r0
90024d1e:	9d14      	ldr	r5, [sp, #80]	; 0x50
90024d20:	fb09 0005 	mla	r0, r9, r5, r0
90024d24:	f3c0 2007 	ubfx	r0, r0, #8, #8
90024d28:	2800      	cmp	r0, #0
90024d2a:	f000 80fa 	beq.w	90024f22 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90024d2e:	f1be 0fff 	cmp.w	lr, #255	; 0xff
90024d32:	d01b      	beq.n	90024d6c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
90024d34:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
90024d38:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
90024d3c:	fb0e fa0a 	mul.w	sl, lr, sl
90024d40:	fb0e fe02 	mul.w	lr, lr, r2
90024d44:	ea4f 221a 	mov.w	r2, sl, lsr #8
90024d48:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
90024d4c:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
90024d50:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
90024d54:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
90024d58:	4452      	add	r2, sl
90024d5a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024d5e:	0a12      	lsrs	r2, r2, #8
90024d60:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
90024d64:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
90024d68:	ea42 020c 	orr.w	r2, r2, ip
90024d6c:	9d13      	ldr	r5, [sp, #76]	; 0x4c
90024d6e:	2dff      	cmp	r5, #255	; 0xff
90024d70:	d021      	beq.n	90024db6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
90024d72:	9d0c      	ldr	r5, [sp, #48]	; 0x30
90024d74:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
90024d78:	9d13      	ldr	r5, [sp, #76]	; 0x4c
90024d7a:	fb05 fb0b 	mul.w	fp, r5, fp
90024d7e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
90024d80:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
90024d84:	9d13      	ldr	r5, [sp, #76]	; 0x4c
90024d86:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90024d8a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90024d8e:	fb05 fa0a 	mul.w	sl, r5, sl
90024d92:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90024d96:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90024d9a:	44de      	add	lr, fp
90024d9c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90024da0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90024da4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90024da8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90024dac:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90024db0:	ea4e 050a 	orr.w	r5, lr, sl
90024db4:	950c      	str	r5, [sp, #48]	; 0x30
90024db6:	9d11      	ldr	r5, [sp, #68]	; 0x44
90024db8:	2dff      	cmp	r5, #255	; 0xff
90024dba:	d021      	beq.n	90024e00 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
90024dbc:	9d08      	ldr	r5, [sp, #32]
90024dbe:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
90024dc2:	9d11      	ldr	r5, [sp, #68]	; 0x44
90024dc4:	fb05 fb0b 	mul.w	fp, r5, fp
90024dc8:	9d08      	ldr	r5, [sp, #32]
90024dca:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
90024dce:	9d11      	ldr	r5, [sp, #68]	; 0x44
90024dd0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90024dd4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90024dd8:	fb05 fa0a 	mul.w	sl, r5, sl
90024ddc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90024de0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90024de4:	44de      	add	lr, fp
90024de6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90024dea:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90024dee:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90024df2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90024df6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90024dfa:	ea4e 050a 	orr.w	r5, lr, sl
90024dfe:	9508      	str	r5, [sp, #32]
90024e00:	9d14      	ldr	r5, [sp, #80]	; 0x50
90024e02:	2dff      	cmp	r5, #255	; 0xff
90024e04:	d021      	beq.n	90024e4a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
90024e06:	9d0d      	ldr	r5, [sp, #52]	; 0x34
90024e08:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
90024e0c:	9d14      	ldr	r5, [sp, #80]	; 0x50
90024e0e:	fb05 fb0b 	mul.w	fp, r5, fp
90024e12:	9d0d      	ldr	r5, [sp, #52]	; 0x34
90024e14:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
90024e18:	9d14      	ldr	r5, [sp, #80]	; 0x50
90024e1a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90024e1e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90024e22:	fb05 fa0a 	mul.w	sl, r5, sl
90024e26:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90024e2a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90024e2e:	44de      	add	lr, fp
90024e30:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90024e34:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90024e38:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90024e3c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90024e40:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90024e44:	ea4e 050a 	orr.w	r5, lr, sl
90024e48:	950d      	str	r5, [sp, #52]	; 0x34
90024e4a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
90024e4c:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
90024e50:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
90024e54:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
90024e58:	9d08      	ldr	r5, [sp, #32]
90024e5a:	fb08 fc0c 	mul.w	ip, r8, ip
90024e5e:	fb03 cc0e 	mla	ip, r3, lr, ip
90024e62:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
90024e66:	9d0d      	ldr	r5, [sp, #52]	; 0x34
90024e68:	fb01 cc0e 	mla	ip, r1, lr, ip
90024e6c:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
90024e70:	9d0c      	ldr	r5, [sp, #48]	; 0x30
90024e72:	fb09 cc0e 	mla	ip, r9, lr, ip
90024e76:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
90024e7a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
90024e7c:	fb08 f80e 	mul.w	r8, r8, lr
90024e80:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024e84:	fb03 8202 	mla	r2, r3, r2, r8
90024e88:	9b08      	ldr	r3, [sp, #32]
90024e8a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90024e8e:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
90024e92:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90024e94:	fb01 220a 	mla	r2, r1, sl, r2
90024e98:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
90024e9c:	883b      	ldrh	r3, [r7, #0]
90024e9e:	fb09 2901 	mla	r9, r9, r1, r2
90024ea2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
90024ea4:	1219      	asrs	r1, r3, #8
90024ea6:	4342      	muls	r2, r0
90024ea8:	ea4f 2919 	mov.w	r9, r9, lsr #8
90024eac:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
90024eb0:	1c50      	adds	r0, r2, #1
90024eb2:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
90024eb6:	eb00 2012 	add.w	r0, r0, r2, lsr #8
90024eba:	ea4c 0c09 	orr.w	ip, ip, r9
90024ebe:	ea6f 2010 	mvn.w	r0, r0, lsr #8
90024ec2:	ea4f 421c 	mov.w	r2, ip, lsr #16
90024ec6:	f3cc 2e07 	ubfx	lr, ip, #8, #8
90024eca:	fa5f fc8c 	uxtb.w	ip, ip
90024ece:	fb12 f205 	smulbb	r2, r2, r5
90024ed2:	b2c0      	uxtb	r0, r0
90024ed4:	fb1c fc05 	smulbb	ip, ip, r5
90024ed8:	fb01 2100 	mla	r1, r1, r0, r2
90024edc:	10da      	asrs	r2, r3, #3
90024ede:	fb1e fe05 	smulbb	lr, lr, r5
90024ee2:	00db      	lsls	r3, r3, #3
90024ee4:	b289      	uxth	r1, r1
90024ee6:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
90024eea:	b2db      	uxtb	r3, r3
90024eec:	fb02 e200 	mla	r2, r2, r0, lr
90024ef0:	fb03 c300 	mla	r3, r3, r0, ip
90024ef4:	b292      	uxth	r2, r2
90024ef6:	fa1f fc83 	uxth.w	ip, r3
90024efa:	1c4b      	adds	r3, r1, #1
90024efc:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90024f00:	f10c 0301 	add.w	r3, ip, #1
90024f04:	eb03 231c 	add.w	r3, r3, ip, lsr #8
90024f08:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
90024f0c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90024f10:	430b      	orrs	r3, r1
90024f12:	1c51      	adds	r1, r2, #1
90024f14:	eb01 2212 	add.w	r2, r1, r2, lsr #8
90024f18:	0952      	lsrs	r2, r2, #5
90024f1a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90024f1e:	4313      	orrs	r3, r2
90024f20:	803b      	strh	r3, [r7, #0]
90024f22:	9b29      	ldr	r3, [sp, #164]	; 0xa4
90024f24:	3702      	adds	r7, #2
90024f26:	441c      	add	r4, r3
90024f28:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
90024f2a:	441e      	add	r6, r3
90024f2c:	9b18      	ldr	r3, [sp, #96]	; 0x60
90024f2e:	3b01      	subs	r3, #1
90024f30:	9318      	str	r3, [sp, #96]	; 0x60
90024f32:	e698      	b.n	90024c66 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
90024f34:	9b29      	ldr	r3, [sp, #164]	; 0xa4
90024f36:	441c      	add	r4, r3
90024f38:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
90024f3a:	441e      	add	r6, r3
90024f3c:	9b07      	ldr	r3, [sp, #28]
90024f3e:	3b01      	subs	r3, #1
90024f40:	9307      	str	r3, [sp, #28]
90024f42:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90024f44:	3302      	adds	r3, #2
90024f46:	930a      	str	r3, [sp, #40]	; 0x28
90024f48:	e66d      	b.n	90024c26 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
90024f4a:	d023      	beq.n	90024f94 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
90024f4c:	9b07      	ldr	r3, [sp, #28]
90024f4e:	9829      	ldr	r0, [sp, #164]	; 0xa4
90024f50:	3b01      	subs	r3, #1
90024f52:	fb00 4003 	mla	r0, r0, r3, r4
90024f56:	1400      	asrs	r0, r0, #16
90024f58:	f53f ae82 	bmi.w	90024c60 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90024f5c:	3901      	subs	r1, #1
90024f5e:	4288      	cmp	r0, r1
90024f60:	f6bf ae7e 	bge.w	90024c60 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90024f64:	992a      	ldr	r1, [sp, #168]	; 0xa8
90024f66:	fb01 6303 	mla	r3, r1, r3, r6
90024f6a:	141b      	asrs	r3, r3, #16
90024f6c:	f53f ae78 	bmi.w	90024c60 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90024f70:	3a01      	subs	r2, #1
90024f72:	4293      	cmp	r3, r2
90024f74:	f6bf ae74 	bge.w	90024c60 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90024f78:	f8dd b01c 	ldr.w	fp, [sp, #28]
90024f7c:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
90024f80:	f1bb 0f00 	cmp.w	fp, #0
90024f84:	dc6c      	bgt.n	90025060 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
90024f86:	9b07      	ldr	r3, [sp, #28]
90024f88:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
90024f8c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90024f8e:	eb03 0345 	add.w	r3, r3, r5, lsl #1
90024f92:	930a      	str	r3, [sp, #40]	; 0x28
90024f94:	9b17      	ldr	r3, [sp, #92]	; 0x5c
90024f96:	2b00      	cmp	r3, #0
90024f98:	f340 81b3 	ble.w	90025302 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
90024f9c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90024fa0:	9b26      	ldr	r3, [sp, #152]	; 0x98
90024fa2:	ee30 0a04 	vadd.f32	s0, s0, s8
90024fa6:	ee70 0aa4 	vadd.f32	s1, s1, s9
90024faa:	eef0 6a62 	vmov.f32	s13, s5
90024fae:	eec7 7a00 	vdiv.f32	s15, s14, s0
90024fb2:	ee31 1a05 	vadd.f32	s2, s2, s10
90024fb6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90024fba:	ee16 4a90 	vmov	r4, s13
90024fbe:	eef0 6a43 	vmov.f32	s13, s6
90024fc2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90024fc6:	ee16 6a90 	vmov	r6, s13
90024fca:	ee20 7aa7 	vmul.f32	s14, s1, s15
90024fce:	ee61 7a27 	vmul.f32	s15, s2, s15
90024fd2:	ee77 2a62 	vsub.f32	s5, s14, s5
90024fd6:	ee37 3ac3 	vsub.f32	s6, s15, s6
90024fda:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90024fde:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90024fe2:	ee12 2a90 	vmov	r2, s5
90024fe6:	eef0 2a47 	vmov.f32	s5, s14
90024fea:	fb92 f3f3 	sdiv	r3, r2, r3
90024fee:	ee13 2a10 	vmov	r2, s6
90024ff2:	9329      	str	r3, [sp, #164]	; 0xa4
90024ff4:	9b26      	ldr	r3, [sp, #152]	; 0x98
90024ff6:	eeb0 3a67 	vmov.f32	s6, s15
90024ffa:	fb92 f3f3 	sdiv	r3, r2, r3
90024ffe:	932a      	str	r3, [sp, #168]	; 0xa8
90025000:	9b17      	ldr	r3, [sp, #92]	; 0x5c
90025002:	9a19      	ldr	r2, [sp, #100]	; 0x64
90025004:	3b01      	subs	r3, #1
90025006:	9317      	str	r3, [sp, #92]	; 0x5c
90025008:	9b26      	ldr	r3, [sp, #152]	; 0x98
9002500a:	bf08      	it	eq
9002500c:	4613      	moveq	r3, r2
9002500e:	9307      	str	r3, [sp, #28]
90025010:	e5fb      	b.n	90024c0a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
90025012:	2900      	cmp	r1, #0
90025014:	f43f ae6b 	beq.w	90024cee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
90025018:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
9002501c:	9308      	str	r3, [sp, #32]
9002501e:	0e1b      	lsrs	r3, r3, #24
90025020:	9311      	str	r3, [sp, #68]	; 0x44
90025022:	e664      	b.n	90024cee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
90025024:	f112 0801 	adds.w	r8, r2, #1
90025028:	f53f af7b 	bmi.w	90024f22 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
9002502c:	4543      	cmp	r3, r8
9002502e:	f6ff af78 	blt.w	90024f22 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90025032:	f11c 0801 	adds.w	r8, ip, #1
90025036:	f53f af74 	bmi.w	90024f22 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
9002503a:	45c6      	cmp	lr, r8
9002503c:	f6ff af71 	blt.w	90024f22 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90025040:	9d1a      	ldr	r5, [sp, #104]	; 0x68
90025042:	b21b      	sxth	r3, r3
90025044:	9201      	str	r2, [sp, #4]
90025046:	fa0f f28e 	sxth.w	r2, lr
9002504a:	e9cd 1504 	strd	r1, r5, [sp, #16]
9002504e:	e9cd c002 	strd	ip, r0, [sp, #8]
90025052:	9200      	str	r2, [sp, #0]
90025054:	4639      	mov	r1, r7
90025056:	9a10      	ldr	r2, [sp, #64]	; 0x40
90025058:	981b      	ldr	r0, [sp, #108]	; 0x6c
9002505a:	f7ff fc79 	bl	90024950 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
9002505e:	e760      	b.n	90024f22 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90025060:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
90025062:	1427      	asrs	r7, r4, #16
90025064:	9d10      	ldr	r5, [sp, #64]	; 0x40
90025066:	f3c4 3203 	ubfx	r2, r4, #12, #4
9002506a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002506e:	1433      	asrs	r3, r6, #16
90025070:	f3c6 3003 	ubfx	r0, r6, #12, #4
90025074:	fb01 7303 	mla	r3, r1, r3, r7
90025078:	eb05 0783 	add.w	r7, r5, r3, lsl #2
9002507c:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
90025080:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90025084:	2a00      	cmp	r2, #0
90025086:	f000 8133 	beq.w	900252f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
9002508a:	687d      	ldr	r5, [r7, #4]
9002508c:	950e      	str	r5, [sp, #56]	; 0x38
9002508e:	0e2d      	lsrs	r5, r5, #24
90025090:	9515      	str	r5, [sp, #84]	; 0x54
90025092:	b178      	cbz	r0, 900250b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
90025094:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
90025098:	3901      	subs	r1, #1
9002509a:	0089      	lsls	r1, r1, #2
9002509c:	3104      	adds	r1, #4
9002509e:	eb07 0e01 	add.w	lr, r7, r1
900250a2:	5879      	ldr	r1, [r7, r1]
900250a4:	9109      	str	r1, [sp, #36]	; 0x24
900250a6:	0e09      	lsrs	r1, r1, #24
900250a8:	9112      	str	r1, [sp, #72]	; 0x48
900250aa:	f8de 1004 	ldr.w	r1, [lr, #4]
900250ae:	910f      	str	r1, [sp, #60]	; 0x3c
900250b0:	0e09      	lsrs	r1, r1, #24
900250b2:	9116      	str	r1, [sp, #88]	; 0x58
900250b4:	b292      	uxth	r2, r2
900250b6:	9915      	ldr	r1, [sp, #84]	; 0x54
900250b8:	b280      	uxth	r0, r0
900250ba:	9d12      	ldr	r5, [sp, #72]	; 0x48
900250bc:	fb02 f800 	mul.w	r8, r2, r0
900250c0:	0112      	lsls	r2, r2, #4
900250c2:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
900250c6:	eba2 0e08 	sub.w	lr, r2, r8
900250ca:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
900250ce:	b280      	uxth	r0, r0
900250d0:	fa1f fe8e 	uxth.w	lr, lr
900250d4:	1a12      	subs	r2, r2, r0
900250d6:	fb0e f101 	mul.w	r1, lr, r1
900250da:	b292      	uxth	r2, r2
900250dc:	fb02 110c 	mla	r1, r2, ip, r1
900250e0:	fb00 1105 	mla	r1, r0, r5, r1
900250e4:	9d16      	ldr	r5, [sp, #88]	; 0x58
900250e6:	fb08 1105 	mla	r1, r8, r5, r1
900250ea:	f3c1 2107 	ubfx	r1, r1, #8, #8
900250ee:	2900      	cmp	r1, #0
900250f0:	f000 80f5 	beq.w	900252de <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
900250f4:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
900250f8:	d019      	beq.n	9002512e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
900250fa:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
900250fe:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90025102:	fb0c fa0a 	mul.w	sl, ip, sl
90025106:	fb0c fc03 	mul.w	ip, ip, r3
9002510a:	ea4f 231a 	mov.w	r3, sl, lsr #8
9002510e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
90025112:	f50c 7780 	add.w	r7, ip, #256	; 0x100
90025116:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
9002511a:	eb07 271c 	add.w	r7, r7, ip, lsr #8
9002511e:	4453      	add	r3, sl
90025120:	0a3f      	lsrs	r7, r7, #8
90025122:	0a1b      	lsrs	r3, r3, #8
90025124:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
90025128:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
9002512c:	433b      	orrs	r3, r7
9002512e:	9d15      	ldr	r5, [sp, #84]	; 0x54
90025130:	2dff      	cmp	r5, #255	; 0xff
90025132:	d020      	beq.n	90025176 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
90025134:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90025136:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
9002513a:	9d15      	ldr	r5, [sp, #84]	; 0x54
9002513c:	436f      	muls	r7, r5
9002513e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90025140:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90025144:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
90025148:	9d15      	ldr	r5, [sp, #84]	; 0x54
9002514a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
9002514e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90025152:	fb05 fa0a 	mul.w	sl, r5, sl
90025156:	44bc      	add	ip, r7
90025158:	f50a 7780 	add.w	r7, sl, #256	; 0x100
9002515c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90025160:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90025164:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90025168:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002516c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90025170:	ea4c 050a 	orr.w	r5, ip, sl
90025174:	950e      	str	r5, [sp, #56]	; 0x38
90025176:	9d12      	ldr	r5, [sp, #72]	; 0x48
90025178:	2dff      	cmp	r5, #255	; 0xff
9002517a:	d020      	beq.n	900251be <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
9002517c:	9d09      	ldr	r5, [sp, #36]	; 0x24
9002517e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
90025182:	9d12      	ldr	r5, [sp, #72]	; 0x48
90025184:	436f      	muls	r7, r5
90025186:	9d09      	ldr	r5, [sp, #36]	; 0x24
90025188:	ea4f 2c17 	mov.w	ip, r7, lsr #8
9002518c:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
90025190:	9d12      	ldr	r5, [sp, #72]	; 0x48
90025192:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90025196:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9002519a:	fb05 fa0a 	mul.w	sl, r5, sl
9002519e:	44bc      	add	ip, r7
900251a0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
900251a4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900251a8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
900251ac:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900251b0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900251b4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
900251b8:	ea4c 050a 	orr.w	r5, ip, sl
900251bc:	9509      	str	r5, [sp, #36]	; 0x24
900251be:	9d16      	ldr	r5, [sp, #88]	; 0x58
900251c0:	2dff      	cmp	r5, #255	; 0xff
900251c2:	d020      	beq.n	90025206 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
900251c4:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
900251c6:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
900251ca:	9d16      	ldr	r5, [sp, #88]	; 0x58
900251cc:	436f      	muls	r7, r5
900251ce:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
900251d0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900251d4:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
900251d8:	9d16      	ldr	r5, [sp, #88]	; 0x58
900251da:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
900251de:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900251e2:	fb05 fa0a 	mul.w	sl, r5, sl
900251e6:	44bc      	add	ip, r7
900251e8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
900251ec:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900251f0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
900251f4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900251f8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900251fc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90025200:	ea4c 050a 	orr.w	r5, ip, sl
90025204:	950f      	str	r5, [sp, #60]	; 0x3c
90025206:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90025208:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
9002520c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90025210:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
90025214:	9d09      	ldr	r5, [sp, #36]	; 0x24
90025216:	fb0e f707 	mul.w	r7, lr, r7
9002521a:	fb02 770c 	mla	r7, r2, ip, r7
9002521e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
90025222:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
90025224:	fb00 770c 	mla	r7, r0, ip, r7
90025228:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
9002522c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
9002522e:	fb08 770c 	mla	r7, r8, ip, r7
90025232:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
90025236:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
90025238:	fb0e fe0c 	mul.w	lr, lr, ip
9002523c:	0a3f      	lsrs	r7, r7, #8
9002523e:	fb02 e303 	mla	r3, r2, r3, lr
90025242:	9a09      	ldr	r2, [sp, #36]	; 0x24
90025244:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
90025248:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
9002524c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9002524e:	fb00 330a 	mla	r3, r0, sl, r3
90025252:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
90025256:	f8b9 0000 	ldrh.w	r0, [r9]
9002525a:	fb08 3c0c 	mla	ip, r8, ip, r3
9002525e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90025260:	1202      	asrs	r2, r0, #8
90025262:	4359      	muls	r1, r3
90025264:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90025268:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
9002526c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
90025270:	1c4b      	adds	r3, r1, #1
90025272:	ea47 070c 	orr.w	r7, r7, ip
90025276:	eb03 2111 	add.w	r1, r3, r1, lsr #8
9002527a:	0c3b      	lsrs	r3, r7, #16
9002527c:	ea6f 2111 	mvn.w	r1, r1, lsr #8
90025280:	f3c7 2c07 	ubfx	ip, r7, #8, #8
90025284:	b2ff      	uxtb	r7, r7
90025286:	fb13 f305 	smulbb	r3, r3, r5
9002528a:	b2c9      	uxtb	r1, r1
9002528c:	fb17 f705 	smulbb	r7, r7, r5
90025290:	fb02 3201 	mla	r2, r2, r1, r3
90025294:	10c3      	asrs	r3, r0, #3
90025296:	fb1c fc05 	smulbb	ip, ip, r5
9002529a:	00c0      	lsls	r0, r0, #3
9002529c:	b292      	uxth	r2, r2
9002529e:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
900252a2:	b2c0      	uxtb	r0, r0
900252a4:	fb03 c301 	mla	r3, r3, r1, ip
900252a8:	fb00 7001 	mla	r0, r0, r1, r7
900252ac:	1c51      	adds	r1, r2, #1
900252ae:	b29b      	uxth	r3, r3
900252b0:	b280      	uxth	r0, r0
900252b2:	eb01 2212 	add.w	r2, r1, r2, lsr #8
900252b6:	f100 0c01 	add.w	ip, r0, #1
900252ba:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
900252be:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
900252c2:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
900252c6:	ea4c 0202 	orr.w	r2, ip, r2
900252ca:	f103 0c01 	add.w	ip, r3, #1
900252ce:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
900252d2:	095b      	lsrs	r3, r3, #5
900252d4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
900252d8:	431a      	orrs	r2, r3
900252da:	f8a9 2000 	strh.w	r2, [r9]
900252de:	9b29      	ldr	r3, [sp, #164]	; 0xa4
900252e0:	f109 0902 	add.w	r9, r9, #2
900252e4:	f10b 3bff 	add.w	fp, fp, #4294967295
900252e8:	441c      	add	r4, r3
900252ea:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
900252ec:	441e      	add	r6, r3
900252ee:	e647      	b.n	90024f80 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
900252f0:	2800      	cmp	r0, #0
900252f2:	f43f aedf 	beq.w	900250b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
900252f6:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
900252fa:	9109      	str	r1, [sp, #36]	; 0x24
900252fc:	0e09      	lsrs	r1, r1, #24
900252fe:	9112      	str	r1, [sp, #72]	; 0x48
90025300:	e6d8      	b.n	900250b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
90025302:	b01d      	add	sp, #116	; 0x74
90025304:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90025308 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
90025308:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002530c:	b085      	sub	sp, #20
9002530e:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
90025312:	9102      	str	r1, [sp, #8]
90025314:	2c00      	cmp	r4, #0
90025316:	fb04 7103 	mla	r1, r4, r3, r7
9002531a:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
9002531e:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
90025322:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
90025326:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
9002532a:	f2c0 810c 	blt.w	90025546 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
9002532e:	45a6      	cmp	lr, r4
90025330:	f340 8109 	ble.w	90025546 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
90025334:	2f00      	cmp	r7, #0
90025336:	f2c0 8104 	blt.w	90025542 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
9002533a:	42bb      	cmp	r3, r7
9002533c:	f340 8101 	ble.w	90025542 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
90025340:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
90025344:	1c7a      	adds	r2, r7, #1
90025346:	f100 8101 	bmi.w	9002554c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
9002534a:	4293      	cmp	r3, r2
9002534c:	f340 80fe 	ble.w	9002554c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
90025350:	2e00      	cmp	r6, #0
90025352:	f000 80fd 	beq.w	90025550 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
90025356:	f8dc 1004 	ldr.w	r1, [ip, #4]
9002535a:	3401      	adds	r4, #1
9002535c:	f100 80fc 	bmi.w	90025558 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
90025360:	45a6      	cmp	lr, r4
90025362:	f340 80f9 	ble.w	90025558 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
90025366:	2800      	cmp	r0, #0
90025368:	f000 80f9 	beq.w	9002555e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
9002536c:	2f00      	cmp	r7, #0
9002536e:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
90025372:	f2c0 80ef 	blt.w	90025554 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
90025376:	42bb      	cmp	r3, r7
90025378:	f340 80ec 	ble.w	90025554 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
9002537c:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
90025380:	3701      	adds	r7, #1
90025382:	f100 80ef 	bmi.w	90025564 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
90025386:	42bb      	cmp	r3, r7
90025388:	f340 80ec 	ble.w	90025564 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
9002538c:	2e00      	cmp	r6, #0
9002538e:	f000 80eb 	beq.w	90025568 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
90025392:	6852      	ldr	r2, [r2, #4]
90025394:	b2b6      	uxth	r6, r6
90025396:	b280      	uxth	r0, r0
90025398:	ea4f 6a11 	mov.w	sl, r1, lsr #24
9002539c:	fb00 fe06 	mul.w	lr, r0, r6
900253a0:	0136      	lsls	r6, r6, #4
900253a2:	ea4f 6b15 	mov.w	fp, r5, lsr #24
900253a6:	ebce 1000 	rsb	r0, lr, r0, lsl #4
900253aa:	eba6 070e 	sub.w	r7, r6, lr
900253ae:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
900253b2:	ea4f 6914 	mov.w	r9, r4, lsr #24
900253b6:	b280      	uxth	r0, r0
900253b8:	b2bf      	uxth	r7, r7
900253ba:	1a1b      	subs	r3, r3, r0
900253bc:	ea4f 6812 	mov.w	r8, r2, lsr #24
900253c0:	fb07 f60a 	mul.w	r6, r7, sl
900253c4:	b29b      	uxth	r3, r3
900253c6:	fb0b 6603 	mla	r6, fp, r3, r6
900253ca:	fb00 6609 	mla	r6, r0, r9, r6
900253ce:	fb0e 6608 	mla	r6, lr, r8, r6
900253d2:	f3c6 2607 	ubfx	r6, r6, #8, #8
900253d6:	9600      	str	r6, [sp, #0]
900253d8:	2e00      	cmp	r6, #0
900253da:	f000 80af 	beq.w	9002553c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
900253de:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
900253e2:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
900253e6:	9e02      	ldr	r6, [sp, #8]
900253e8:	fb0b fc0c 	mul.w	ip, fp, ip
900253ec:	fb0b f505 	mul.w	r5, fp, r5
900253f0:	8836      	ldrh	r6, [r6, #0]
900253f2:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
900253f6:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
900253fa:	9501      	str	r5, [sp, #4]
900253fc:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
90025400:	44dc      	add	ip, fp
90025402:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90025406:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
9002540a:	9503      	str	r5, [sp, #12]
9002540c:	9d01      	ldr	r5, [sp, #4]
9002540e:	f505 7c80 	add.w	ip, r5, #256	; 0x100
90025412:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
90025416:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
9002541a:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
9002541e:	fb0a fc0c 	mul.w	ip, sl, ip
90025422:	ea4f 2b15 	mov.w	fp, r5, lsr #8
90025426:	fb0a fa01 	mul.w	sl, sl, r1
9002542a:	ea4f 251c 	mov.w	r5, ip, lsr #8
9002542e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
90025432:	f50a 7180 	add.w	r1, sl, #256	; 0x100
90025436:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
9002543a:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
9002543e:	4465      	add	r5, ip
90025440:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
90025444:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
90025448:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002544c:	fb09 fc0c 	mul.w	ip, r9, ip
90025450:	0a2d      	lsrs	r5, r5, #8
90025452:	fb09 f904 	mul.w	r9, r9, r4
90025456:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
9002545a:	ea4f 211c 	mov.w	r1, ip, lsr #8
9002545e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
90025462:	f509 7480 	add.w	r4, r9, #256	; 0x100
90025466:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
9002546a:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
9002546e:	437d      	muls	r5, r7
90025470:	eb04 2919 	add.w	r9, r4, r9, lsr #8
90025474:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
90025478:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
9002547c:	4461      	add	r1, ip
9002547e:	fb08 f404 	mul.w	r4, r8, r4
90025482:	ea4f 2919 	mov.w	r9, r9, lsr #8
90025486:	fb08 f802 	mul.w	r8, r8, r2
9002548a:	0a09      	lsrs	r1, r1, #8
9002548c:	0a22      	lsrs	r2, r4, #8
9002548e:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
90025492:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
90025496:	fb07 f70a 	mul.w	r7, r7, sl
9002549a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
9002549e:	4414      	add	r4, r2
900254a0:	f508 7280 	add.w	r2, r8, #256	; 0x100
900254a4:	0a24      	lsrs	r4, r4, #8
900254a6:	eb02 2818 	add.w	r8, r2, r8, lsr #8
900254aa:	9a03      	ldr	r2, [sp, #12]
900254ac:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
900254b0:	fb02 5503 	mla	r5, r2, r3, r5
900254b4:	ea4f 2818 	mov.w	r8, r8, lsr #8
900254b8:	fb04 540e 	mla	r4, r4, lr, r5
900254bc:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
900254c0:	fb01 4100 	mla	r1, r1, r0, r4
900254c4:	0a09      	lsrs	r1, r1, #8
900254c6:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
900254ca:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
900254ce:	fb03 7101 	mla	r1, r3, r1, r7
900254d2:	9b00      	ldr	r3, [sp, #0]
900254d4:	fb0e 1e08 	mla	lr, lr, r8, r1
900254d8:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
900254dc:	43da      	mvns	r2, r3
900254de:	1233      	asrs	r3, r6, #8
900254e0:	fb00 e101 	mla	r1, r0, r1, lr
900254e4:	10f0      	asrs	r0, r6, #3
900254e6:	b2d2      	uxtb	r2, r2
900254e8:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
900254ec:	0a09      	lsrs	r1, r1, #8
900254ee:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
900254f2:	00f6      	lsls	r6, r6, #3
900254f4:	4353      	muls	r3, r2
900254f6:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
900254fa:	4350      	muls	r0, r2
900254fc:	b2f6      	uxtb	r6, r6
900254fe:	4321      	orrs	r1, r4
90025500:	4356      	muls	r6, r2
90025502:	1c5a      	adds	r2, r3, #1
90025504:	eb02 2213 	add.w	r2, r2, r3, lsr #8
90025508:	0c0b      	lsrs	r3, r1, #16
9002550a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9002550e:	1c42      	adds	r2, r0, #1
90025510:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90025514:	0a0a      	lsrs	r2, r1, #8
90025516:	021b      	lsls	r3, r3, #8
90025518:	eb02 2210 	add.w	r2, r2, r0, lsr #8
9002551c:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
90025520:	00d2      	lsls	r2, r2, #3
90025522:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90025526:	4313      	orrs	r3, r2
90025528:	1c72      	adds	r2, r6, #1
9002552a:	eb02 2616 	add.w	r6, r2, r6, lsr #8
9002552e:	eb01 2116 	add.w	r1, r1, r6, lsr #8
90025532:	f3c1 01c4 	ubfx	r1, r1, #3, #5
90025536:	4319      	orrs	r1, r3
90025538:	9b02      	ldr	r3, [sp, #8]
9002553a:	8019      	strh	r1, [r3, #0]
9002553c:	b005      	add	sp, #20
9002553e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90025542:	2500      	movs	r5, #0
90025544:	e6fe      	b.n	90025344 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
90025546:	2100      	movs	r1, #0
90025548:	460d      	mov	r5, r1
9002554a:	e706      	b.n	9002535a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
9002554c:	2100      	movs	r1, #0
9002554e:	e704      	b.n	9002535a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
90025550:	4631      	mov	r1, r6
90025552:	e702      	b.n	9002535a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
90025554:	2400      	movs	r4, #0
90025556:	e713      	b.n	90025380 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
90025558:	2200      	movs	r2, #0
9002555a:	4614      	mov	r4, r2
9002555c:	e71a      	b.n	90025394 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
9002555e:	4602      	mov	r2, r0
90025560:	4604      	mov	r4, r0
90025562:	e717      	b.n	90025394 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
90025564:	2200      	movs	r2, #0
90025566:	e715      	b.n	90025394 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
90025568:	4632      	mov	r2, r6
9002556a:	e713      	b.n	90025394 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>

9002556c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9002556c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90025570:	b09b      	sub	sp, #108	; 0x6c
90025572:	9218      	str	r2, [sp, #96]	; 0x60
90025574:	9a29      	ldr	r2, [sp, #164]	; 0xa4
90025576:	9019      	str	r0, [sp, #100]	; 0x64
90025578:	9116      	str	r1, [sp, #88]	; 0x58
9002557a:	6850      	ldr	r0, [r2, #4]
9002557c:	9307      	str	r3, [sp, #28]
9002557e:	6812      	ldr	r2, [r2, #0]
90025580:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
90025584:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
90025588:	fb00 1303 	mla	r3, r0, r3, r1
9002558c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90025590:	930a      	str	r3, [sp, #40]	; 0x28
90025592:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90025594:	681b      	ldr	r3, [r3, #0]
90025596:	930f      	str	r3, [sp, #60]	; 0x3c
90025598:	9b16      	ldr	r3, [sp, #88]	; 0x58
9002559a:	2b00      	cmp	r3, #0
9002559c:	dc03      	bgt.n	900255a6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
9002559e:	9b18      	ldr	r3, [sp, #96]	; 0x60
900255a0:	2b00      	cmp	r3, #0
900255a2:	f340 8387 	ble.w	90025cb4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
900255a6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
900255a8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900255ac:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900255b0:	1e48      	subs	r0, r1, #1
900255b2:	1e57      	subs	r7, r2, #1
900255b4:	9b07      	ldr	r3, [sp, #28]
900255b6:	2b00      	cmp	r3, #0
900255b8:	f340 8166 	ble.w	90025888 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
900255bc:	ea5f 4c24 	movs.w	ip, r4, asr #16
900255c0:	ea4f 4326 	mov.w	r3, r6, asr #16
900255c4:	d406      	bmi.n	900255d4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
900255c6:	4584      	cmp	ip, r0
900255c8:	da04      	bge.n	900255d4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
900255ca:	2b00      	cmp	r3, #0
900255cc:	db02      	blt.n	900255d4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
900255ce:	42bb      	cmp	r3, r7
900255d0:	f2c0 815b 	blt.w	9002588a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
900255d4:	f11c 0c01 	adds.w	ip, ip, #1
900255d8:	f100 814b 	bmi.w	90025872 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
900255dc:	4561      	cmp	r1, ip
900255de:	f2c0 8148 	blt.w	90025872 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
900255e2:	3301      	adds	r3, #1
900255e4:	f100 8145 	bmi.w	90025872 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
900255e8:	429a      	cmp	r2, r3
900255ea:	f2c0 8142 	blt.w	90025872 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
900255ee:	9b07      	ldr	r3, [sp, #28]
900255f0:	9f0a      	ldr	r7, [sp, #40]	; 0x28
900255f2:	9317      	str	r3, [sp, #92]	; 0x5c
900255f4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
900255f6:	2b00      	cmp	r3, #0
900255f8:	f340 8165 	ble.w	900258c6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
900255fc:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
900255fe:	ea4f 4c26 	mov.w	ip, r6, asr #16
90025602:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90025604:	f3c4 3103 	ubfx	r1, r4, #12, #4
90025608:	f8d2 e00c 	ldr.w	lr, [r2, #12]
9002560c:	1422      	asrs	r2, r4, #16
9002560e:	f3c6 3003 	ubfx	r0, r6, #12, #4
90025612:	689b      	ldr	r3, [r3, #8]
90025614:	f100 81d5 	bmi.w	900259c2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
90025618:	f103 38ff 	add.w	r8, r3, #4294967295
9002561c:	4542      	cmp	r2, r8
9002561e:	f280 81d0 	bge.w	900259c2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
90025622:	f1bc 0f00 	cmp.w	ip, #0
90025626:	f2c0 81cc 	blt.w	900259c2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
9002562a:	f10e 38ff 	add.w	r8, lr, #4294967295
9002562e:	45c4      	cmp	ip, r8
90025630:	f280 81c7 	bge.w	900259c2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
90025634:	b21b      	sxth	r3, r3
90025636:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
90025638:	fb0c 2203 	mla	r2, ip, r3, r2
9002563c:	eb05 0882 	add.w	r8, r5, r2, lsl #2
90025640:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
90025644:	ea4f 6e12 	mov.w	lr, r2, lsr #24
90025648:	2900      	cmp	r1, #0
9002564a:	f000 8182 	beq.w	90025952 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
9002564e:	f8d8 5004 	ldr.w	r5, [r8, #4]
90025652:	950b      	str	r5, [sp, #44]	; 0x2c
90025654:	0e2d      	lsrs	r5, r5, #24
90025656:	9512      	str	r5, [sp, #72]	; 0x48
90025658:	b180      	cbz	r0, 9002567c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
9002565a:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
9002565e:	3b01      	subs	r3, #1
90025660:	009b      	lsls	r3, r3, #2
90025662:	3304      	adds	r3, #4
90025664:	eb08 0c03 	add.w	ip, r8, r3
90025668:	f858 3003 	ldr.w	r3, [r8, r3]
9002566c:	9308      	str	r3, [sp, #32]
9002566e:	0e1b      	lsrs	r3, r3, #24
90025670:	9310      	str	r3, [sp, #64]	; 0x40
90025672:	f8dc 3004 	ldr.w	r3, [ip, #4]
90025676:	930c      	str	r3, [sp, #48]	; 0x30
90025678:	0e1b      	lsrs	r3, r3, #24
9002567a:	9313      	str	r3, [sp, #76]	; 0x4c
9002567c:	b289      	uxth	r1, r1
9002567e:	9b12      	ldr	r3, [sp, #72]	; 0x48
90025680:	b280      	uxth	r0, r0
90025682:	9d10      	ldr	r5, [sp, #64]	; 0x40
90025684:	fb01 f900 	mul.w	r9, r1, r0
90025688:	0109      	lsls	r1, r1, #4
9002568a:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
9002568e:	eba1 0809 	sub.w	r8, r1, r9
90025692:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
90025696:	b280      	uxth	r0, r0
90025698:	fa1f f888 	uxth.w	r8, r8
9002569c:	1a09      	subs	r1, r1, r0
9002569e:	fb08 f303 	mul.w	r3, r8, r3
900256a2:	b289      	uxth	r1, r1
900256a4:	fb01 330e 	mla	r3, r1, lr, r3
900256a8:	fb00 3305 	mla	r3, r0, r5, r3
900256ac:	9d13      	ldr	r5, [sp, #76]	; 0x4c
900256ae:	fb09 3305 	mla	r3, r9, r5, r3
900256b2:	f3c3 2307 	ubfx	r3, r3, #8, #8
900256b6:	2b00      	cmp	r3, #0
900256b8:	f000 80d2 	beq.w	90025860 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
900256bc:	f1be 0fff 	cmp.w	lr, #255	; 0xff
900256c0:	d01b      	beq.n	900256fa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
900256c2:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
900256c6:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
900256ca:	fb0e fa0a 	mul.w	sl, lr, sl
900256ce:	fb0e fe02 	mul.w	lr, lr, r2
900256d2:	ea4f 221a 	mov.w	r2, sl, lsr #8
900256d6:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
900256da:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
900256de:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
900256e2:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
900256e6:	4452      	add	r2, sl
900256e8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900256ec:	0a12      	lsrs	r2, r2, #8
900256ee:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
900256f2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
900256f6:	ea42 020c 	orr.w	r2, r2, ip
900256fa:	9d12      	ldr	r5, [sp, #72]	; 0x48
900256fc:	2dff      	cmp	r5, #255	; 0xff
900256fe:	d021      	beq.n	90025744 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
90025700:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
90025702:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
90025706:	9d12      	ldr	r5, [sp, #72]	; 0x48
90025708:	fb05 fb0b 	mul.w	fp, r5, fp
9002570c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
9002570e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
90025712:	9d12      	ldr	r5, [sp, #72]	; 0x48
90025714:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90025718:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
9002571c:	fb05 fa0a 	mul.w	sl, r5, sl
90025720:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90025724:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90025728:	44de      	add	lr, fp
9002572a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
9002572e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90025732:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90025736:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
9002573a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
9002573e:	ea4e 050a 	orr.w	r5, lr, sl
90025742:	950b      	str	r5, [sp, #44]	; 0x2c
90025744:	9d10      	ldr	r5, [sp, #64]	; 0x40
90025746:	2dff      	cmp	r5, #255	; 0xff
90025748:	d021      	beq.n	9002578e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
9002574a:	9d08      	ldr	r5, [sp, #32]
9002574c:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
90025750:	9d10      	ldr	r5, [sp, #64]	; 0x40
90025752:	fb05 fb0b 	mul.w	fp, r5, fp
90025756:	9d08      	ldr	r5, [sp, #32]
90025758:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
9002575c:	9d10      	ldr	r5, [sp, #64]	; 0x40
9002575e:	fb05 fa0e 	mul.w	sl, r5, lr
90025762:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90025766:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
9002576a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
9002576e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90025772:	44de      	add	lr, fp
90025774:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90025778:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9002577c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90025780:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90025784:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90025788:	ea4e 050a 	orr.w	r5, lr, sl
9002578c:	9508      	str	r5, [sp, #32]
9002578e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
90025790:	2dff      	cmp	r5, #255	; 0xff
90025792:	d021      	beq.n	900257d8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
90025794:	9d0c      	ldr	r5, [sp, #48]	; 0x30
90025796:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
9002579a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9002579c:	fb05 fb0b 	mul.w	fp, r5, fp
900257a0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
900257a2:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
900257a6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
900257a8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900257ac:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
900257b0:	fb05 fa0a 	mul.w	sl, r5, sl
900257b4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
900257b8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
900257bc:	44de      	add	lr, fp
900257be:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900257c2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900257c6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900257ca:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
900257ce:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
900257d2:	ea4e 050a 	orr.w	r5, lr, sl
900257d6:	950c      	str	r5, [sp, #48]	; 0x30
900257d8:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
900257da:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
900257de:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
900257e2:	2bff      	cmp	r3, #255	; 0xff
900257e4:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
900257e8:	9d08      	ldr	r5, [sp, #32]
900257ea:	fb08 fc0c 	mul.w	ip, r8, ip
900257ee:	fb01 cc0e 	mla	ip, r1, lr, ip
900257f2:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
900257f6:	9d0c      	ldr	r5, [sp, #48]	; 0x30
900257f8:	fb00 cc0e 	mla	ip, r0, lr, ip
900257fc:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
90025800:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
90025802:	fb09 cc0e 	mla	ip, r9, lr, ip
90025806:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
9002580a:	fb08 f80e 	mul.w	r8, r8, lr
9002580e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90025812:	fb01 8202 	mla	r2, r1, r2, r8
90025816:	9908      	ldr	r1, [sp, #32]
90025818:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9002581c:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
90025820:	990c      	ldr	r1, [sp, #48]	; 0x30
90025822:	fb00 220a 	mla	r2, r0, sl, r2
90025826:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
9002582a:	fb09 2900 	mla	r9, r9, r0, r2
9002582e:	ea4f 2919 	mov.w	r9, r9, lsr #8
90025832:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
90025836:	ea4c 0c09 	orr.w	ip, ip, r9
9002583a:	ea4f 221c 	mov.w	r2, ip, lsr #8
9002583e:	f040 8091 	bne.w	90025964 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
90025842:	ea4f 135c 	mov.w	r3, ip, lsr #5
90025846:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
9002584a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9002584e:	f022 0207 	bic.w	r2, r2, #7
90025852:	431a      	orrs	r2, r3
90025854:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
90025858:	ea4c 0c02 	orr.w	ip, ip, r2
9002585c:	f8a7 c000 	strh.w	ip, [r7]
90025860:	9b27      	ldr	r3, [sp, #156]	; 0x9c
90025862:	3702      	adds	r7, #2
90025864:	441c      	add	r4, r3
90025866:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90025868:	441e      	add	r6, r3
9002586a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
9002586c:	3b01      	subs	r3, #1
9002586e:	9317      	str	r3, [sp, #92]	; 0x5c
90025870:	e6c0      	b.n	900255f4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
90025872:	9b27      	ldr	r3, [sp, #156]	; 0x9c
90025874:	441c      	add	r4, r3
90025876:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90025878:	441e      	add	r6, r3
9002587a:	9b07      	ldr	r3, [sp, #28]
9002587c:	3b01      	subs	r3, #1
9002587e:	9307      	str	r3, [sp, #28]
90025880:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90025882:	3302      	adds	r3, #2
90025884:	930a      	str	r3, [sp, #40]	; 0x28
90025886:	e695      	b.n	900255b4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90025888:	d024      	beq.n	900258d4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
9002588a:	9b07      	ldr	r3, [sp, #28]
9002588c:	9827      	ldr	r0, [sp, #156]	; 0x9c
9002588e:	3b01      	subs	r3, #1
90025890:	fb00 4003 	mla	r0, r0, r3, r4
90025894:	1400      	asrs	r0, r0, #16
90025896:	f53f aeaa 	bmi.w	900255ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
9002589a:	3901      	subs	r1, #1
9002589c:	4288      	cmp	r0, r1
9002589e:	f6bf aea6 	bge.w	900255ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
900258a2:	9928      	ldr	r1, [sp, #160]	; 0xa0
900258a4:	fb01 6303 	mla	r3, r1, r3, r6
900258a8:	141b      	asrs	r3, r3, #16
900258aa:	f53f aea0 	bmi.w	900255ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
900258ae:	3a01      	subs	r2, #1
900258b0:	4293      	cmp	r3, r2
900258b2:	f6bf ae9c 	bge.w	900255ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
900258b6:	f8dd b01c 	ldr.w	fp, [sp, #28]
900258ba:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
900258be:	f1bb 0f00 	cmp.w	fp, #0
900258c2:	f300 809a 	bgt.w	900259fa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
900258c6:	9b07      	ldr	r3, [sp, #28]
900258c8:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
900258cc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
900258ce:	eb03 0345 	add.w	r3, r3, r5, lsl #1
900258d2:	930a      	str	r3, [sp, #40]	; 0x28
900258d4:	9b16      	ldr	r3, [sp, #88]	; 0x58
900258d6:	2b00      	cmp	r3, #0
900258d8:	f340 81ec 	ble.w	90025cb4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
900258dc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
900258e0:	9b24      	ldr	r3, [sp, #144]	; 0x90
900258e2:	ee30 0a04 	vadd.f32	s0, s0, s8
900258e6:	ee70 0aa4 	vadd.f32	s1, s1, s9
900258ea:	eef0 6a62 	vmov.f32	s13, s5
900258ee:	eec7 7a00 	vdiv.f32	s15, s14, s0
900258f2:	ee31 1a05 	vadd.f32	s2, s2, s10
900258f6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900258fa:	ee16 4a90 	vmov	r4, s13
900258fe:	eef0 6a43 	vmov.f32	s13, s6
90025902:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90025906:	ee16 6a90 	vmov	r6, s13
9002590a:	ee20 7aa7 	vmul.f32	s14, s1, s15
9002590e:	ee61 7a27 	vmul.f32	s15, s2, s15
90025912:	ee77 2a62 	vsub.f32	s5, s14, s5
90025916:	ee37 3ac3 	vsub.f32	s6, s15, s6
9002591a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9002591e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90025922:	ee12 2a90 	vmov	r2, s5
90025926:	eef0 2a47 	vmov.f32	s5, s14
9002592a:	fb92 f3f3 	sdiv	r3, r2, r3
9002592e:	ee13 2a10 	vmov	r2, s6
90025932:	9327      	str	r3, [sp, #156]	; 0x9c
90025934:	9b24      	ldr	r3, [sp, #144]	; 0x90
90025936:	eeb0 3a67 	vmov.f32	s6, s15
9002593a:	fb92 f3f3 	sdiv	r3, r2, r3
9002593e:	9328      	str	r3, [sp, #160]	; 0xa0
90025940:	9b16      	ldr	r3, [sp, #88]	; 0x58
90025942:	9a18      	ldr	r2, [sp, #96]	; 0x60
90025944:	3b01      	subs	r3, #1
90025946:	9316      	str	r3, [sp, #88]	; 0x58
90025948:	9b24      	ldr	r3, [sp, #144]	; 0x90
9002594a:	bf08      	it	eq
9002594c:	4613      	moveq	r3, r2
9002594e:	9307      	str	r3, [sp, #28]
90025950:	e622      	b.n	90025598 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
90025952:	2800      	cmp	r0, #0
90025954:	f43f ae92 	beq.w	9002567c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
90025958:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
9002595c:	9308      	str	r3, [sp, #32]
9002595e:	0e1b      	lsrs	r3, r3, #24
90025960:	9310      	str	r3, [sp, #64]	; 0x40
90025962:	e68b      	b.n	9002567c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
90025964:	8839      	ldrh	r1, [r7, #0]
90025966:	43db      	mvns	r3, r3
90025968:	4dd4      	ldr	r5, [pc, #848]	; (90025cbc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
9002596a:	ea4f 2e21 	mov.w	lr, r1, asr #8
9002596e:	fa5f f883 	uxtb.w	r8, r3
90025972:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
90025976:	10c8      	asrs	r0, r1, #3
90025978:	00cb      	lsls	r3, r1, #3
9002597a:	fb0e fe08 	mul.w	lr, lr, r8
9002597e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
90025982:	b2db      	uxtb	r3, r3
90025984:	f10e 0101 	add.w	r1, lr, #1
90025988:	fb00 f008 	mul.w	r0, r0, r8
9002598c:	fb03 f308 	mul.w	r3, r3, r8
90025990:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
90025994:	ea4f 411c 	mov.w	r1, ip, lsr #16
90025998:	eb01 211e 	add.w	r1, r1, lr, lsr #8
9002599c:	f100 0e01 	add.w	lr, r0, #1
900259a0:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
900259a4:	b2c9      	uxtb	r1, r1
900259a6:	eb02 2210 	add.w	r2, r2, r0, lsr #8
900259aa:	ea05 2101 	and.w	r1, r5, r1, lsl #8
900259ae:	00d2      	lsls	r2, r2, #3
900259b0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
900259b4:	430a      	orrs	r2, r1
900259b6:	1c59      	adds	r1, r3, #1
900259b8:	eb01 2313 	add.w	r3, r1, r3, lsr #8
900259bc:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
900259c0:	e748      	b.n	90025854 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
900259c2:	f112 0801 	adds.w	r8, r2, #1
900259c6:	f53f af4b 	bmi.w	90025860 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
900259ca:	4543      	cmp	r3, r8
900259cc:	f6ff af48 	blt.w	90025860 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
900259d0:	f11c 0801 	adds.w	r8, ip, #1
900259d4:	f53f af44 	bmi.w	90025860 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
900259d8:	45c6      	cmp	lr, r8
900259da:	f6ff af41 	blt.w	90025860 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
900259de:	b21b      	sxth	r3, r3
900259e0:	e9cd 2c01 	strd	r2, ip, [sp, #4]
900259e4:	fa0f f28e 	sxth.w	r2, lr
900259e8:	e9cd 1003 	strd	r1, r0, [sp, #12]
900259ec:	9200      	str	r2, [sp, #0]
900259ee:	4639      	mov	r1, r7
900259f0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
900259f2:	9819      	ldr	r0, [sp, #100]	; 0x64
900259f4:	f7ff fc88 	bl	90025308 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
900259f8:	e732      	b.n	90025860 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
900259fa:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
900259fc:	1421      	asrs	r1, r4, #16
900259fe:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
90025a00:	f3c4 3203 	ubfx	r2, r4, #12, #4
90025a04:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
90025a08:	1433      	asrs	r3, r6, #16
90025a0a:	f3c6 3003 	ubfx	r0, r6, #12, #4
90025a0e:	fb07 1303 	mla	r3, r7, r3, r1
90025a12:	990f      	ldr	r1, [sp, #60]	; 0x3c
90025a14:	eb01 0183 	add.w	r1, r1, r3, lsl #2
90025a18:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
90025a1c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90025a20:	2a00      	cmp	r2, #0
90025a22:	f000 8108 	beq.w	90025c36 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ca>
90025a26:	684d      	ldr	r5, [r1, #4]
90025a28:	950d      	str	r5, [sp, #52]	; 0x34
90025a2a:	0e2d      	lsrs	r5, r5, #24
90025a2c:	9514      	str	r5, [sp, #80]	; 0x50
90025a2e:	b178      	cbz	r0, 90025a50 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
90025a30:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
90025a34:	3f01      	subs	r7, #1
90025a36:	00bf      	lsls	r7, r7, #2
90025a38:	3704      	adds	r7, #4
90025a3a:	eb01 0e07 	add.w	lr, r1, r7
90025a3e:	59c9      	ldr	r1, [r1, r7]
90025a40:	9109      	str	r1, [sp, #36]	; 0x24
90025a42:	0e09      	lsrs	r1, r1, #24
90025a44:	9111      	str	r1, [sp, #68]	; 0x44
90025a46:	f8de 1004 	ldr.w	r1, [lr, #4]
90025a4a:	910e      	str	r1, [sp, #56]	; 0x38
90025a4c:	0e09      	lsrs	r1, r1, #24
90025a4e:	9115      	str	r1, [sp, #84]	; 0x54
90025a50:	b292      	uxth	r2, r2
90025a52:	9d11      	ldr	r5, [sp, #68]	; 0x44
90025a54:	b280      	uxth	r0, r0
90025a56:	fb02 f900 	mul.w	r9, r2, r0
90025a5a:	0112      	lsls	r2, r2, #4
90025a5c:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
90025a60:	eba2 0e09 	sub.w	lr, r2, r9
90025a64:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
90025a68:	9a14      	ldr	r2, [sp, #80]	; 0x50
90025a6a:	b280      	uxth	r0, r0
90025a6c:	fa1f fe8e 	uxth.w	lr, lr
90025a70:	1a09      	subs	r1, r1, r0
90025a72:	fb0e f202 	mul.w	r2, lr, r2
90025a76:	b289      	uxth	r1, r1
90025a78:	fb01 220c 	mla	r2, r1, ip, r2
90025a7c:	fb00 2205 	mla	r2, r0, r5, r2
90025a80:	9d15      	ldr	r5, [sp, #84]	; 0x54
90025a82:	fb09 2205 	mla	r2, r9, r5, r2
90025a86:	f3c2 2207 	ubfx	r2, r2, #8, #8
90025a8a:	2a00      	cmp	r2, #0
90025a8c:	f000 80ca 	beq.w	90025c24 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
90025a90:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
90025a94:	d019      	beq.n	90025aca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
90025a96:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
90025a9a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90025a9e:	fb0c fa0a 	mul.w	sl, ip, sl
90025aa2:	fb0c fc03 	mul.w	ip, ip, r3
90025aa6:	ea4f 231a 	mov.w	r3, sl, lsr #8
90025aaa:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
90025aae:	f50c 7780 	add.w	r7, ip, #256	; 0x100
90025ab2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90025ab6:	eb07 271c 	add.w	r7, r7, ip, lsr #8
90025aba:	4453      	add	r3, sl
90025abc:	0a3f      	lsrs	r7, r7, #8
90025abe:	0a1b      	lsrs	r3, r3, #8
90025ac0:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
90025ac4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90025ac8:	433b      	orrs	r3, r7
90025aca:	9d14      	ldr	r5, [sp, #80]	; 0x50
90025acc:	2dff      	cmp	r5, #255	; 0xff
90025ace:	d020      	beq.n	90025b12 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
90025ad0:	9d0d      	ldr	r5, [sp, #52]	; 0x34
90025ad2:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
90025ad6:	9d14      	ldr	r5, [sp, #80]	; 0x50
90025ad8:	436f      	muls	r7, r5
90025ada:	9d0d      	ldr	r5, [sp, #52]	; 0x34
90025adc:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90025ae0:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
90025ae4:	9d14      	ldr	r5, [sp, #80]	; 0x50
90025ae6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90025aea:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90025aee:	fb05 fa0a 	mul.w	sl, r5, sl
90025af2:	44bc      	add	ip, r7
90025af4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90025af8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90025afc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90025b00:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90025b04:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90025b08:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90025b0c:	ea4c 050a 	orr.w	r5, ip, sl
90025b10:	950d      	str	r5, [sp, #52]	; 0x34
90025b12:	9d11      	ldr	r5, [sp, #68]	; 0x44
90025b14:	2dff      	cmp	r5, #255	; 0xff
90025b16:	d020      	beq.n	90025b5a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
90025b18:	9d09      	ldr	r5, [sp, #36]	; 0x24
90025b1a:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
90025b1e:	9d11      	ldr	r5, [sp, #68]	; 0x44
90025b20:	436f      	muls	r7, r5
90025b22:	9d09      	ldr	r5, [sp, #36]	; 0x24
90025b24:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
90025b28:	9d11      	ldr	r5, [sp, #68]	; 0x44
90025b2a:	fb05 fa0c 	mul.w	sl, r5, ip
90025b2e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90025b32:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90025b36:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90025b3a:	44bc      	add	ip, r7
90025b3c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90025b40:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90025b44:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90025b48:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90025b4c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90025b50:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90025b54:	ea4c 050a 	orr.w	r5, ip, sl
90025b58:	9509      	str	r5, [sp, #36]	; 0x24
90025b5a:	9d15      	ldr	r5, [sp, #84]	; 0x54
90025b5c:	2dff      	cmp	r5, #255	; 0xff
90025b5e:	d020      	beq.n	90025ba2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
90025b60:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90025b62:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
90025b66:	9d15      	ldr	r5, [sp, #84]	; 0x54
90025b68:	436f      	muls	r7, r5
90025b6a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90025b6c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90025b70:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
90025b74:	9d15      	ldr	r5, [sp, #84]	; 0x54
90025b76:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90025b7a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90025b7e:	fb05 fa0a 	mul.w	sl, r5, sl
90025b82:	44bc      	add	ip, r7
90025b84:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90025b88:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90025b8c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90025b90:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90025b94:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90025b98:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90025b9c:	ea4c 050a 	orr.w	r5, ip, sl
90025ba0:	950e      	str	r5, [sp, #56]	; 0x38
90025ba2:	9d0d      	ldr	r5, [sp, #52]	; 0x34
90025ba4:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
90025ba8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90025bac:	2aff      	cmp	r2, #255	; 0xff
90025bae:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
90025bb2:	9d09      	ldr	r5, [sp, #36]	; 0x24
90025bb4:	fb0e f707 	mul.w	r7, lr, r7
90025bb8:	fb01 770c 	mla	r7, r1, ip, r7
90025bbc:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
90025bc0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90025bc2:	fb00 770c 	mla	r7, r0, ip, r7
90025bc6:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
90025bca:	9d0d      	ldr	r5, [sp, #52]	; 0x34
90025bcc:	fb09 770c 	mla	r7, r9, ip, r7
90025bd0:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
90025bd4:	fb0e fe0c 	mul.w	lr, lr, ip
90025bd8:	ea4f 2717 	mov.w	r7, r7, lsr #8
90025bdc:	fb01 e303 	mla	r3, r1, r3, lr
90025be0:	9909      	ldr	r1, [sp, #36]	; 0x24
90025be2:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
90025be6:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
90025bea:	990e      	ldr	r1, [sp, #56]	; 0x38
90025bec:	fb00 330a 	mla	r3, r0, sl, r3
90025bf0:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
90025bf4:	fb09 3c0c 	mla	ip, r9, ip, r3
90025bf8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90025bfc:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
90025c00:	ea47 070c 	orr.w	r7, r7, ip
90025c04:	ea4f 2317 	mov.w	r3, r7, lsr #8
90025c08:	d11e      	bne.n	90025c48 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6dc>
90025c0a:	097a      	lsrs	r2, r7, #5
90025c0c:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
90025c10:	f3c7 07c4 	ubfx	r7, r7, #3, #5
90025c14:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90025c18:	f023 0307 	bic.w	r3, r3, #7
90025c1c:	4313      	orrs	r3, r2
90025c1e:	431f      	orrs	r7, r3
90025c20:	f8a8 7000 	strh.w	r7, [r8]
90025c24:	9b27      	ldr	r3, [sp, #156]	; 0x9c
90025c26:	f108 0802 	add.w	r8, r8, #2
90025c2a:	f10b 3bff 	add.w	fp, fp, #4294967295
90025c2e:	441c      	add	r4, r3
90025c30:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90025c32:	441e      	add	r6, r3
90025c34:	e643      	b.n	900258be <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
90025c36:	2800      	cmp	r0, #0
90025c38:	f43f af0a 	beq.w	90025a50 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
90025c3c:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
90025c40:	9109      	str	r1, [sp, #36]	; 0x24
90025c42:	0e09      	lsrs	r1, r1, #24
90025c44:	9111      	str	r1, [sp, #68]	; 0x44
90025c46:	e703      	b.n	90025a50 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
90025c48:	f8b8 1000 	ldrh.w	r1, [r8]
90025c4c:	43d2      	mvns	r2, r2
90025c4e:	ea4f 2c21 	mov.w	ip, r1, asr #8
90025c52:	fa5f fe82 	uxtb.w	lr, r2
90025c56:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
90025c5a:	10c8      	asrs	r0, r1, #3
90025c5c:	00ca      	lsls	r2, r1, #3
90025c5e:	fb0c fc0e 	mul.w	ip, ip, lr
90025c62:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
90025c66:	b2d2      	uxtb	r2, r2
90025c68:	f10c 0101 	add.w	r1, ip, #1
90025c6c:	fb00 f00e 	mul.w	r0, r0, lr
90025c70:	fb02 f20e 	mul.w	r2, r2, lr
90025c74:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
90025c78:	0c39      	lsrs	r1, r7, #16
90025c7a:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
90025c7e:	490f      	ldr	r1, [pc, #60]	; (90025cbc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
90025c80:	fa5f fc8c 	uxtb.w	ip, ip
90025c84:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
90025c88:	1c41      	adds	r1, r0, #1
90025c8a:	eb01 2010 	add.w	r0, r1, r0, lsr #8
90025c8e:	1c51      	adds	r1, r2, #1
90025c90:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90025c94:	eb01 2212 	add.w	r2, r1, r2, lsr #8
90025c98:	00c0      	lsls	r0, r0, #3
90025c9a:	eb07 2712 	add.w	r7, r7, r2, lsr #8
90025c9e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90025ca2:	f3c7 07c4 	ubfx	r7, r7, #3, #5
90025ca6:	ea4c 0c00 	orr.w	ip, ip, r0
90025caa:	ea47 0c0c 	orr.w	ip, r7, ip
90025cae:	f8a8 c000 	strh.w	ip, [r8]
90025cb2:	e7b7      	b.n	90025c24 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
90025cb4:	b01b      	add	sp, #108	; 0x6c
90025cb6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90025cba:	bf00      	nop
90025cbc:	fffff800 	.word	0xfffff800

90025cc0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
90025cc0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90025cc4:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
90025cc8:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
90025ccc:	2d00      	cmp	r5, #0
90025cce:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
90025cd2:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
90025cd6:	fb05 0e03 	mla	lr, r5, r3, r0
90025cda:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
90025cde:	f2c0 808c 	blt.w	90025dfa <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
90025ce2:	45a9      	cmp	r9, r5
90025ce4:	f340 8089 	ble.w	90025dfa <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
90025ce8:	2800      	cmp	r0, #0
90025cea:	f2c0 8084 	blt.w	90025df6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
90025cee:	4580      	cmp	r8, r0
90025cf0:	f340 8081 	ble.w	90025df6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
90025cf4:	ea4f 045e 	mov.w	r4, lr, lsr #1
90025cf8:	f01e 0f01 	tst.w	lr, #1
90025cfc:	5d16      	ldrb	r6, [r2, r4]
90025cfe:	bf0c      	ite	eq
90025d00:	f006 060f 	andeq.w	r6, r6, #15
90025d04:	1136      	asrne	r6, r6, #4
90025d06:	eb06 1606 	add.w	r6, r6, r6, lsl #4
90025d0a:	b2f6      	uxtb	r6, r6
90025d0c:	1c44      	adds	r4, r0, #1
90025d0e:	d477      	bmi.n	90025e00 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
90025d10:	45a0      	cmp	r8, r4
90025d12:	dd75      	ble.n	90025e00 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
90025d14:	2f00      	cmp	r7, #0
90025d16:	d075      	beq.n	90025e04 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
90025d18:	f10e 0a01 	add.w	sl, lr, #1
90025d1c:	ea4f 045a 	mov.w	r4, sl, lsr #1
90025d20:	f01a 0f01 	tst.w	sl, #1
90025d24:	5d14      	ldrb	r4, [r2, r4]
90025d26:	bf0c      	ite	eq
90025d28:	f004 040f 	andeq.w	r4, r4, #15
90025d2c:	1124      	asrne	r4, r4, #4
90025d2e:	eb04 1404 	add.w	r4, r4, r4, lsl #4
90025d32:	b2e4      	uxtb	r4, r4
90025d34:	3501      	adds	r5, #1
90025d36:	d469      	bmi.n	90025e0c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
90025d38:	45a9      	cmp	r9, r5
90025d3a:	dd67      	ble.n	90025e0c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
90025d3c:	f1bc 0f00 	cmp.w	ip, #0
90025d40:	d067      	beq.n	90025e12 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
90025d42:	2800      	cmp	r0, #0
90025d44:	db60      	blt.n	90025e08 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
90025d46:	4580      	cmp	r8, r0
90025d48:	dd5e      	ble.n	90025e08 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
90025d4a:	eb03 090e 	add.w	r9, r3, lr
90025d4e:	ea4f 0559 	mov.w	r5, r9, lsr #1
90025d52:	f019 0f01 	tst.w	r9, #1
90025d56:	5d55      	ldrb	r5, [r2, r5]
90025d58:	bf0c      	ite	eq
90025d5a:	f005 050f 	andeq.w	r5, r5, #15
90025d5e:	112d      	asrne	r5, r5, #4
90025d60:	eb05 1505 	add.w	r5, r5, r5, lsl #4
90025d64:	b2ed      	uxtb	r5, r5
90025d66:	3001      	adds	r0, #1
90025d68:	d456      	bmi.n	90025e18 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
90025d6a:	4580      	cmp	r8, r0
90025d6c:	dd54      	ble.n	90025e18 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
90025d6e:	2f00      	cmp	r7, #0
90025d70:	d054      	beq.n	90025e1c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
90025d72:	3301      	adds	r3, #1
90025d74:	449e      	add	lr, r3
90025d76:	ea4f 035e 	mov.w	r3, lr, lsr #1
90025d7a:	f01e 0f01 	tst.w	lr, #1
90025d7e:	5cd0      	ldrb	r0, [r2, r3]
90025d80:	bf0c      	ite	eq
90025d82:	f000 000f 	andeq.w	r0, r0, #15
90025d86:	1100      	asrne	r0, r0, #4
90025d88:	eb00 1000 	add.w	r0, r0, r0, lsl #4
90025d8c:	b2c3      	uxtb	r3, r0
90025d8e:	b2ba      	uxth	r2, r7
90025d90:	fa1f fc8c 	uxth.w	ip, ip
90025d94:	fb02 f00c 	mul.w	r0, r2, ip
90025d98:	0112      	lsls	r2, r2, #4
90025d9a:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
90025d9e:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
90025da2:	1a12      	subs	r2, r2, r0
90025da4:	fa1f fc8c 	uxth.w	ip, ip
90025da8:	b292      	uxth	r2, r2
90025daa:	eba7 070c 	sub.w	r7, r7, ip
90025dae:	4362      	muls	r2, r4
90025db0:	b2bf      	uxth	r7, r7
90025db2:	fb06 2207 	mla	r2, r6, r7, r2
90025db6:	fb0c 2505 	mla	r5, ip, r5, r2
90025dba:	fb00 5303 	mla	r3, r0, r3, r5
90025dbe:	f3c3 2307 	ubfx	r3, r3, #8, #8
90025dc2:	b1b3      	cbz	r3, 90025df2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
90025dc4:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
90025dc8:	435a      	muls	r2, r3
90025dca:	1c53      	adds	r3, r2, #1
90025dcc:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90025dd0:	4a2d      	ldr	r2, [pc, #180]	; (90025e88 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
90025dd2:	121b      	asrs	r3, r3, #8
90025dd4:	6812      	ldr	r2, [r2, #0]
90025dd6:	2bff      	cmp	r3, #255	; 0xff
90025dd8:	ea4f 2612 	mov.w	r6, r2, lsr #8
90025ddc:	d120      	bne.n	90025e20 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
90025dde:	0950      	lsrs	r0, r2, #5
90025de0:	4b2a      	ldr	r3, [pc, #168]	; (90025e8c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
90025de2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90025de6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90025dea:	4033      	ands	r3, r6
90025dec:	4318      	orrs	r0, r3
90025dee:	4302      	orrs	r2, r0
90025df0:	800a      	strh	r2, [r1, #0]
90025df2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90025df6:	2600      	movs	r6, #0
90025df8:	e788      	b.n	90025d0c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
90025dfa:	2400      	movs	r4, #0
90025dfc:	4626      	mov	r6, r4
90025dfe:	e799      	b.n	90025d34 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
90025e00:	2400      	movs	r4, #0
90025e02:	e797      	b.n	90025d34 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
90025e04:	463c      	mov	r4, r7
90025e06:	e795      	b.n	90025d34 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
90025e08:	2500      	movs	r5, #0
90025e0a:	e7ac      	b.n	90025d66 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
90025e0c:	2300      	movs	r3, #0
90025e0e:	461d      	mov	r5, r3
90025e10:	e7bd      	b.n	90025d8e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
90025e12:	4663      	mov	r3, ip
90025e14:	4665      	mov	r5, ip
90025e16:	e7ba      	b.n	90025d8e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
90025e18:	2300      	movs	r3, #0
90025e1a:	e7b8      	b.n	90025d8e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
90025e1c:	463b      	mov	r3, r7
90025e1e:	e7b6      	b.n	90025d8e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
90025e20:	880d      	ldrh	r5, [r1, #0]
90025e22:	b29f      	uxth	r7, r3
90025e24:	f3c2 4007 	ubfx	r0, r2, #16, #8
90025e28:	43db      	mvns	r3, r3
90025e2a:	122c      	asrs	r4, r5, #8
90025e2c:	fb10 f007 	smulbb	r0, r0, r7
90025e30:	b2db      	uxtb	r3, r3
90025e32:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
90025e36:	b2f6      	uxtb	r6, r6
90025e38:	b2d2      	uxtb	r2, r2
90025e3a:	fb04 0403 	mla	r4, r4, r3, r0
90025e3e:	10e8      	asrs	r0, r5, #3
90025e40:	fb12 f207 	smulbb	r2, r2, r7
90025e44:	00ed      	lsls	r5, r5, #3
90025e46:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
90025e4a:	b2a4      	uxth	r4, r4
90025e4c:	fb16 f607 	smulbb	r6, r6, r7
90025e50:	b2ed      	uxtb	r5, r5
90025e52:	fb00 6603 	mla	r6, r0, r3, r6
90025e56:	fb05 2303 	mla	r3, r5, r3, r2
90025e5a:	b2b0      	uxth	r0, r6
90025e5c:	b29a      	uxth	r2, r3
90025e5e:	1c63      	adds	r3, r4, #1
90025e60:	eb03 2414 	add.w	r4, r3, r4, lsr #8
90025e64:	1c53      	adds	r3, r2, #1
90025e66:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90025e6a:	1c42      	adds	r2, r0, #1
90025e6c:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
90025e70:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90025e74:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90025e78:	0940      	lsrs	r0, r0, #5
90025e7a:	4323      	orrs	r3, r4
90025e7c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90025e80:	4303      	orrs	r3, r0
90025e82:	800b      	strh	r3, [r1, #0]
90025e84:	e7b5      	b.n	90025df2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
90025e86:	bf00      	nop
90025e88:	24039844 	.word	0x24039844
90025e8c:	00fff800 	.word	0x00fff800

90025e90 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90025e90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90025e94:	b097      	sub	sp, #92	; 0x5c
90025e96:	9214      	str	r2, [sp, #80]	; 0x50
90025e98:	9309      	str	r3, [sp, #36]	; 0x24
90025e9a:	9a25      	ldr	r2, [sp, #148]	; 0x94
90025e9c:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
90025ea0:	9015      	str	r0, [sp, #84]	; 0x54
90025ea2:	910d      	str	r1, [sp, #52]	; 0x34
90025ea4:	6850      	ldr	r0, [r2, #4]
90025ea6:	930f      	str	r3, [sp, #60]	; 0x3c
90025ea8:	6812      	ldr	r2, [r2, #0]
90025eaa:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
90025eae:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
90025eb2:	fb00 1303 	mla	r3, r0, r3, r1
90025eb6:	eb02 0943 	add.w	r9, r2, r3, lsl #1
90025eba:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90025ebc:	689b      	ldr	r3, [r3, #8]
90025ebe:	3301      	adds	r3, #1
90025ec0:	f023 0301 	bic.w	r3, r3, #1
90025ec4:	930a      	str	r3, [sp, #40]	; 0x28
90025ec6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90025ec8:	681f      	ldr	r7, [r3, #0]
90025eca:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90025ecc:	2b00      	cmp	r3, #0
90025ece:	dc03      	bgt.n	90025ed8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90025ed0:	9b14      	ldr	r3, [sp, #80]	; 0x50
90025ed2:	2b00      	cmp	r3, #0
90025ed4:	f340 8289 	ble.w	900263ea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
90025ed8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90025eda:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90025ede:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90025ee2:	1e48      	subs	r0, r1, #1
90025ee4:	f102 3cff 	add.w	ip, r2, #4294967295
90025ee8:	9b09      	ldr	r3, [sp, #36]	; 0x24
90025eea:	2b00      	cmp	r3, #0
90025eec:	f340 80c5 	ble.w	9002607a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
90025ef0:	ea5f 4e24 	movs.w	lr, r4, asr #16
90025ef4:	ea4f 4326 	mov.w	r3, r6, asr #16
90025ef8:	d406      	bmi.n	90025f08 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90025efa:	4586      	cmp	lr, r0
90025efc:	da04      	bge.n	90025f08 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90025efe:	2b00      	cmp	r3, #0
90025f00:	db02      	blt.n	90025f08 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90025f02:	4563      	cmp	r3, ip
90025f04:	f2c0 80ba 	blt.w	9002607c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
90025f08:	f11e 0e01 	adds.w	lr, lr, #1
90025f0c:	f100 80ab 	bmi.w	90026066 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
90025f10:	4571      	cmp	r1, lr
90025f12:	f2c0 80a8 	blt.w	90026066 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
90025f16:	3301      	adds	r3, #1
90025f18:	f100 80a5 	bmi.w	90026066 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
90025f1c:	429a      	cmp	r2, r3
90025f1e:	f2c0 80a2 	blt.w	90026066 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
90025f22:	9b09      	ldr	r3, [sp, #36]	; 0x24
90025f24:	46c8      	mov	r8, r9
90025f26:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
90025f2a:	930e      	str	r3, [sp, #56]	; 0x38
90025f2c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90025f2e:	2b00      	cmp	r3, #0
90025f30:	f340 80c4 	ble.w	900260bc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
90025f34:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90025f36:	1430      	asrs	r0, r6, #16
90025f38:	f3c4 3203 	ubfx	r2, r4, #12, #4
90025f3c:	f3c6 3103 	ubfx	r1, r6, #12, #4
90025f40:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
90025f44:	1423      	asrs	r3, r4, #16
90025f46:	f100 814f 	bmi.w	900261e8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90025f4a:	f10c 3bff 	add.w	fp, ip, #4294967295
90025f4e:	455b      	cmp	r3, fp
90025f50:	f280 814a 	bge.w	900261e8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90025f54:	2800      	cmp	r0, #0
90025f56:	f2c0 8147 	blt.w	900261e8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90025f5a:	f10e 3bff 	add.w	fp, lr, #4294967295
90025f5e:	4558      	cmp	r0, fp
90025f60:	f280 8142 	bge.w	900261e8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90025f64:	9d0a      	ldr	r5, [sp, #40]	; 0x28
90025f66:	fb00 3305 	mla	r3, r0, r5, r3
90025f6a:	0858      	lsrs	r0, r3, #1
90025f6c:	07dd      	lsls	r5, r3, #31
90025f6e:	f817 c000 	ldrb.w	ip, [r7, r0]
90025f72:	bf54      	ite	pl
90025f74:	f00c 0c0f 	andpl.w	ip, ip, #15
90025f78:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90025f7c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90025f80:	fa5f fc8c 	uxtb.w	ip, ip
90025f84:	2a00      	cmp	r2, #0
90025f86:	f000 80dd 	beq.w	90026144 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b4>
90025f8a:	1c58      	adds	r0, r3, #1
90025f8c:	ea4f 0e50 	mov.w	lr, r0, lsr #1
90025f90:	07c0      	lsls	r0, r0, #31
90025f92:	f817 e00e 	ldrb.w	lr, [r7, lr]
90025f96:	bf54      	ite	pl
90025f98:	f00e 0e0f 	andpl.w	lr, lr, #15
90025f9c:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
90025fa0:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
90025fa4:	fa5f f08e 	uxtb.w	r0, lr
90025fa8:	9010      	str	r0, [sp, #64]	; 0x40
90025faa:	b1d9      	cbz	r1, 90025fe4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
90025fac:	4453      	add	r3, sl
90025fae:	0858      	lsrs	r0, r3, #1
90025fb0:	07dd      	lsls	r5, r3, #31
90025fb2:	f103 0301 	add.w	r3, r3, #1
90025fb6:	5c38      	ldrb	r0, [r7, r0]
90025fb8:	bf54      	ite	pl
90025fba:	f000 000f 	andpl.w	r0, r0, #15
90025fbe:	1100      	asrmi	r0, r0, #4
90025fc0:	07dd      	lsls	r5, r3, #31
90025fc2:	eb00 1000 	add.w	r0, r0, r0, lsl #4
90025fc6:	b2c0      	uxtb	r0, r0
90025fc8:	900b      	str	r0, [sp, #44]	; 0x2c
90025fca:	ea4f 0053 	mov.w	r0, r3, lsr #1
90025fce:	f817 e000 	ldrb.w	lr, [r7, r0]
90025fd2:	bf54      	ite	pl
90025fd4:	f00e 030f 	andpl.w	r3, lr, #15
90025fd8:	ea4f 132e 	movmi.w	r3, lr, asr #4
90025fdc:	eb03 1303 	add.w	r3, r3, r3, lsl #4
90025fe0:	b2db      	uxtb	r3, r3
90025fe2:	9311      	str	r3, [sp, #68]	; 0x44
90025fe4:	b292      	uxth	r2, r2
90025fe6:	9d10      	ldr	r5, [sp, #64]	; 0x40
90025fe8:	b289      	uxth	r1, r1
90025fea:	fb02 f301 	mul.w	r3, r2, r1
90025fee:	0112      	lsls	r2, r2, #4
90025ff0:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
90025ff4:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
90025ff8:	1ad2      	subs	r2, r2, r3
90025ffa:	b289      	uxth	r1, r1
90025ffc:	b292      	uxth	r2, r2
90025ffe:	1a40      	subs	r0, r0, r1
90026000:	436a      	muls	r2, r5
90026002:	b280      	uxth	r0, r0
90026004:	fb0c 2c00 	mla	ip, ip, r0, r2
90026008:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
9002600a:	fb01 c102 	mla	r1, r1, r2, ip
9002600e:	9a11      	ldr	r2, [sp, #68]	; 0x44
90026010:	fb03 1302 	mla	r3, r3, r2, r1
90026014:	f3c3 2307 	ubfx	r3, r3, #8, #8
90026018:	b1db      	cbz	r3, 90026052 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
9002601a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9002601c:	4353      	muls	r3, r2
9002601e:	1c5a      	adds	r2, r3, #1
90026020:	eb02 2313 	add.w	r3, r2, r3, lsr #8
90026024:	4ac6      	ldr	r2, [pc, #792]	; (90026340 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
90026026:	121b      	asrs	r3, r3, #8
90026028:	6812      	ldr	r2, [r2, #0]
9002602a:	2bff      	cmp	r3, #255	; 0xff
9002602c:	ea4f 2c12 	mov.w	ip, r2, lsr #8
90026030:	f040 8099 	bne.w	90026166 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
90026034:	0953      	lsrs	r3, r2, #5
90026036:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
9002603a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9002603e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90026042:	f02c 0c07 	bic.w	ip, ip, #7
90026046:	ea43 0c0c 	orr.w	ip, r3, ip
9002604a:	ea4c 0202 	orr.w	r2, ip, r2
9002604e:	f8a8 2000 	strh.w	r2, [r8]
90026052:	9b23      	ldr	r3, [sp, #140]	; 0x8c
90026054:	f108 0802 	add.w	r8, r8, #2
90026058:	441c      	add	r4, r3
9002605a:	9b24      	ldr	r3, [sp, #144]	; 0x90
9002605c:	441e      	add	r6, r3
9002605e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90026060:	3b01      	subs	r3, #1
90026062:	930e      	str	r3, [sp, #56]	; 0x38
90026064:	e762      	b.n	90025f2c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
90026066:	9b23      	ldr	r3, [sp, #140]	; 0x8c
90026068:	f109 0902 	add.w	r9, r9, #2
9002606c:	441c      	add	r4, r3
9002606e:	9b24      	ldr	r3, [sp, #144]	; 0x90
90026070:	441e      	add	r6, r3
90026072:	9b09      	ldr	r3, [sp, #36]	; 0x24
90026074:	3b01      	subs	r3, #1
90026076:	9309      	str	r3, [sp, #36]	; 0x24
90026078:	e736      	b.n	90025ee8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
9002607a:	d024      	beq.n	900260c6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
9002607c:	9b09      	ldr	r3, [sp, #36]	; 0x24
9002607e:	9823      	ldr	r0, [sp, #140]	; 0x8c
90026080:	3b01      	subs	r3, #1
90026082:	fb00 4003 	mla	r0, r0, r3, r4
90026086:	1400      	asrs	r0, r0, #16
90026088:	f53f af4b 	bmi.w	90025f22 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9002608c:	3901      	subs	r1, #1
9002608e:	4288      	cmp	r0, r1
90026090:	f6bf af47 	bge.w	90025f22 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90026094:	9924      	ldr	r1, [sp, #144]	; 0x90
90026096:	fb01 6303 	mla	r3, r1, r3, r6
9002609a:	141b      	asrs	r3, r3, #16
9002609c:	f53f af41 	bmi.w	90025f22 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900260a0:	3a01      	subs	r2, #1
900260a2:	4293      	cmp	r3, r2
900260a4:	f6bf af3d 	bge.w	90025f22 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900260a8:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
900260ac:	46c8      	mov	r8, r9
900260ae:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
900260b2:	930e      	str	r3, [sp, #56]	; 0x38
900260b4:	f1bb 0f00 	cmp.w	fp, #0
900260b8:	f300 80b7 	bgt.w	9002622a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39a>
900260bc:	9b09      	ldr	r3, [sp, #36]	; 0x24
900260be:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
900260c2:	eb09 0945 	add.w	r9, r9, r5, lsl #1
900260c6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
900260c8:	2b00      	cmp	r3, #0
900260ca:	f340 818e 	ble.w	900263ea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
900260ce:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
900260d2:	9b20      	ldr	r3, [sp, #128]	; 0x80
900260d4:	ee30 0a04 	vadd.f32	s0, s0, s8
900260d8:	ee70 0aa4 	vadd.f32	s1, s1, s9
900260dc:	eef0 6a62 	vmov.f32	s13, s5
900260e0:	eec7 7a00 	vdiv.f32	s15, s14, s0
900260e4:	ee31 1a05 	vadd.f32	s2, s2, s10
900260e8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900260ec:	ee16 4a90 	vmov	r4, s13
900260f0:	eef0 6a43 	vmov.f32	s13, s6
900260f4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900260f8:	ee16 6a90 	vmov	r6, s13
900260fc:	ee20 7aa7 	vmul.f32	s14, s1, s15
90026100:	ee61 7a27 	vmul.f32	s15, s2, s15
90026104:	ee77 2a62 	vsub.f32	s5, s14, s5
90026108:	ee37 3ac3 	vsub.f32	s6, s15, s6
9002610c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90026110:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90026114:	ee12 2a90 	vmov	r2, s5
90026118:	eef0 2a47 	vmov.f32	s5, s14
9002611c:	fb92 f3f3 	sdiv	r3, r2, r3
90026120:	ee13 2a10 	vmov	r2, s6
90026124:	9323      	str	r3, [sp, #140]	; 0x8c
90026126:	9b20      	ldr	r3, [sp, #128]	; 0x80
90026128:	eeb0 3a67 	vmov.f32	s6, s15
9002612c:	fb92 f3f3 	sdiv	r3, r2, r3
90026130:	9324      	str	r3, [sp, #144]	; 0x90
90026132:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90026134:	9a14      	ldr	r2, [sp, #80]	; 0x50
90026136:	3b01      	subs	r3, #1
90026138:	930d      	str	r3, [sp, #52]	; 0x34
9002613a:	9b20      	ldr	r3, [sp, #128]	; 0x80
9002613c:	bf08      	it	eq
9002613e:	4613      	moveq	r3, r2
90026140:	9309      	str	r3, [sp, #36]	; 0x24
90026142:	e6c2      	b.n	90025eca <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90026144:	2900      	cmp	r1, #0
90026146:	f43f af4d 	beq.w	90025fe4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
9002614a:	eb0a 0003 	add.w	r0, sl, r3
9002614e:	0843      	lsrs	r3, r0, #1
90026150:	07c0      	lsls	r0, r0, #31
90026152:	5cfb      	ldrb	r3, [r7, r3]
90026154:	bf54      	ite	pl
90026156:	f003 030f 	andpl.w	r3, r3, #15
9002615a:	111b      	asrmi	r3, r3, #4
9002615c:	eb03 1303 	add.w	r3, r3, r3, lsl #4
90026160:	b2db      	uxtb	r3, r3
90026162:	930b      	str	r3, [sp, #44]	; 0x2c
90026164:	e73e      	b.n	90025fe4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
90026166:	f8b8 e000 	ldrh.w	lr, [r8]
9002616a:	fa1f fb83 	uxth.w	fp, r3
9002616e:	f3c2 4107 	ubfx	r1, r2, #16, #8
90026172:	43db      	mvns	r3, r3
90026174:	ea4f 202e 	mov.w	r0, lr, asr #8
90026178:	fb11 f10b 	smulbb	r1, r1, fp
9002617c:	b2db      	uxtb	r3, r3
9002617e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
90026182:	fa5f fc8c 	uxtb.w	ip, ip
90026186:	b2d2      	uxtb	r2, r2
90026188:	fb00 1003 	mla	r0, r0, r3, r1
9002618c:	ea4f 01ee 	mov.w	r1, lr, asr #3
90026190:	fb1c fc0b 	smulbb	ip, ip, fp
90026194:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90026198:	b280      	uxth	r0, r0
9002619a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
9002619e:	fb12 fb0b 	smulbb	fp, r2, fp
900261a2:	fa5f fe8e 	uxtb.w	lr, lr
900261a6:	fb01 cc03 	mla	ip, r1, r3, ip
900261aa:	fb0e bb03 	mla	fp, lr, r3, fp
900261ae:	1c43      	adds	r3, r0, #1
900261b0:	fa1f fc8c 	uxth.w	ip, ip
900261b4:	fa1f fb8b 	uxth.w	fp, fp
900261b8:	eb03 2010 	add.w	r0, r3, r0, lsr #8
900261bc:	f10c 0101 	add.w	r1, ip, #1
900261c0:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
900261c4:	f10b 0001 	add.w	r0, fp, #1
900261c8:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
900261cc:	eb00 201b 	add.w	r0, r0, fp, lsr #8
900261d0:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
900261d4:	f3c0 20c4 	ubfx	r0, r0, #11, #5
900261d8:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
900261dc:	4318      	orrs	r0, r3
900261de:	ea40 000c 	orr.w	r0, r0, ip
900261e2:	f8a8 0000 	strh.w	r0, [r8]
900261e6:	e734      	b.n	90026052 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
900261e8:	f113 0b01 	adds.w	fp, r3, #1
900261ec:	f53f af31 	bmi.w	90026052 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
900261f0:	45dc      	cmp	ip, fp
900261f2:	f6ff af2e 	blt.w	90026052 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
900261f6:	f110 0b01 	adds.w	fp, r0, #1
900261fa:	f53f af2a 	bmi.w	90026052 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
900261fe:	45de      	cmp	lr, fp
90026200:	f6ff af27 	blt.w	90026052 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90026204:	9302      	str	r3, [sp, #8]
90026206:	fa0f f38e 	sxth.w	r3, lr
9002620a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
9002620c:	9301      	str	r3, [sp, #4]
9002620e:	fa0f f38c 	sxth.w	r3, ip
90026212:	e9cd 0203 	strd	r0, r2, [sp, #12]
90026216:	e9cd 1505 	strd	r1, r5, [sp, #20]
9002621a:	9300      	str	r3, [sp, #0]
9002621c:	463a      	mov	r2, r7
9002621e:	4653      	mov	r3, sl
90026220:	4641      	mov	r1, r8
90026222:	9815      	ldr	r0, [sp, #84]	; 0x54
90026224:	f7ff fd4c 	bl	90025cc0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
90026228:	e713      	b.n	90026052 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
9002622a:	1422      	asrs	r2, r4, #16
9002622c:	9d0a      	ldr	r5, [sp, #40]	; 0x28
9002622e:	1433      	asrs	r3, r6, #16
90026230:	f3c4 3103 	ubfx	r1, r4, #12, #4
90026234:	f3c6 3003 	ubfx	r0, r6, #12, #4
90026238:	fb05 2303 	mla	r3, r5, r3, r2
9002623c:	085a      	lsrs	r2, r3, #1
9002623e:	07dd      	lsls	r5, r3, #31
90026240:	5cba      	ldrb	r2, [r7, r2]
90026242:	bf54      	ite	pl
90026244:	f002 020f 	andpl.w	r2, r2, #15
90026248:	1112      	asrmi	r2, r2, #4
9002624a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9002624e:	b2d2      	uxtb	r2, r2
90026250:	2900      	cmp	r1, #0
90026252:	d077      	beq.n	90026344 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90026254:	f103 0e01 	add.w	lr, r3, #1
90026258:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
9002625c:	f01e 0f01 	tst.w	lr, #1
90026260:	f817 c00c 	ldrb.w	ip, [r7, ip]
90026264:	bf0c      	ite	eq
90026266:	f00c 0c0f 	andeq.w	ip, ip, #15
9002626a:	ea4f 1c2c 	movne.w	ip, ip, asr #4
9002626e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90026272:	fa5f f58c 	uxtb.w	r5, ip
90026276:	9512      	str	r5, [sp, #72]	; 0x48
90026278:	b308      	cbz	r0, 900262be <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
9002627a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
9002627c:	442b      	add	r3, r5
9002627e:	ea4f 0c53 	mov.w	ip, r3, lsr #1
90026282:	07dd      	lsls	r5, r3, #31
90026284:	f103 0301 	add.w	r3, r3, #1
90026288:	f817 c00c 	ldrb.w	ip, [r7, ip]
9002628c:	bf54      	ite	pl
9002628e:	f00c 0c0f 	andpl.w	ip, ip, #15
90026292:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90026296:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
9002629a:	fa5f f58c 	uxtb.w	r5, ip
9002629e:	ea4f 0c53 	mov.w	ip, r3, lsr #1
900262a2:	950c      	str	r5, [sp, #48]	; 0x30
900262a4:	07dd      	lsls	r5, r3, #31
900262a6:	f817 c00c 	ldrb.w	ip, [r7, ip]
900262aa:	bf54      	ite	pl
900262ac:	f00c 0c0f 	andpl.w	ip, ip, #15
900262b0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
900262b4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
900262b8:	fa5f f38c 	uxtb.w	r3, ip
900262bc:	9313      	str	r3, [sp, #76]	; 0x4c
900262be:	b289      	uxth	r1, r1
900262c0:	9d12      	ldr	r5, [sp, #72]	; 0x48
900262c2:	b280      	uxth	r0, r0
900262c4:	fb01 f300 	mul.w	r3, r1, r0
900262c8:	0109      	lsls	r1, r1, #4
900262ca:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
900262ce:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
900262d2:	1ac9      	subs	r1, r1, r3
900262d4:	b280      	uxth	r0, r0
900262d6:	b289      	uxth	r1, r1
900262d8:	ebac 0c00 	sub.w	ip, ip, r0
900262dc:	4369      	muls	r1, r5
900262de:	fa1f fc8c 	uxth.w	ip, ip
900262e2:	fb02 120c 	mla	r2, r2, ip, r1
900262e6:	990c      	ldr	r1, [sp, #48]	; 0x30
900262e8:	fb00 2001 	mla	r0, r0, r1, r2
900262ec:	9a13      	ldr	r2, [sp, #76]	; 0x4c
900262ee:	fb03 0302 	mla	r3, r3, r2, r0
900262f2:	f3c3 2307 	ubfx	r3, r3, #8, #8
900262f6:	b1d3      	cbz	r3, 9002632e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
900262f8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
900262fa:	4353      	muls	r3, r2
900262fc:	1c5a      	adds	r2, r3, #1
900262fe:	eb02 2313 	add.w	r3, r2, r3, lsr #8
90026302:	4a0f      	ldr	r2, [pc, #60]	; (90026340 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
90026304:	121b      	asrs	r3, r3, #8
90026306:	6812      	ldr	r2, [r2, #0]
90026308:	2bff      	cmp	r3, #255	; 0xff
9002630a:	ea4f 2c12 	mov.w	ip, r2, lsr #8
9002630e:	d12d      	bne.n	9002636c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4dc>
90026310:	0953      	lsrs	r3, r2, #5
90026312:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
90026316:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9002631a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9002631e:	f02c 0c07 	bic.w	ip, ip, #7
90026322:	ea43 0c0c 	orr.w	ip, r3, ip
90026326:	ea4c 0202 	orr.w	r2, ip, r2
9002632a:	f8a8 2000 	strh.w	r2, [r8]
9002632e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
90026330:	f108 0802 	add.w	r8, r8, #2
90026334:	f10b 3bff 	add.w	fp, fp, #4294967295
90026338:	441c      	add	r4, r3
9002633a:	9b24      	ldr	r3, [sp, #144]	; 0x90
9002633c:	441e      	add	r6, r3
9002633e:	e6b9      	b.n	900260b4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
90026340:	24039844 	.word	0x24039844
90026344:	2800      	cmp	r0, #0
90026346:	d0ba      	beq.n	900262be <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
90026348:	9d0e      	ldr	r5, [sp, #56]	; 0x38
9002634a:	442b      	add	r3, r5
9002634c:	ea4f 0c53 	mov.w	ip, r3, lsr #1
90026350:	07db      	lsls	r3, r3, #31
90026352:	f817 c00c 	ldrb.w	ip, [r7, ip]
90026356:	bf54      	ite	pl
90026358:	f00c 0c0f 	andpl.w	ip, ip, #15
9002635c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90026360:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90026364:	fa5f f38c 	uxtb.w	r3, ip
90026368:	930c      	str	r3, [sp, #48]	; 0x30
9002636a:	e7a8      	b.n	900262be <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
9002636c:	f8b8 e000 	ldrh.w	lr, [r8]
90026370:	fa1f fa83 	uxth.w	sl, r3
90026374:	f3c2 4107 	ubfx	r1, r2, #16, #8
90026378:	43db      	mvns	r3, r3
9002637a:	ea4f 202e 	mov.w	r0, lr, asr #8
9002637e:	fb11 f10a 	smulbb	r1, r1, sl
90026382:	b2db      	uxtb	r3, r3
90026384:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
90026388:	b2d2      	uxtb	r2, r2
9002638a:	fa5f fc8c 	uxtb.w	ip, ip
9002638e:	fb00 1003 	mla	r0, r0, r3, r1
90026392:	ea4f 01ee 	mov.w	r1, lr, asr #3
90026396:	fb12 f20a 	smulbb	r2, r2, sl
9002639a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9002639e:	b280      	uxth	r0, r0
900263a0:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
900263a4:	fb1c fc0a 	smulbb	ip, ip, sl
900263a8:	fa5f fe8e 	uxtb.w	lr, lr
900263ac:	fb0e 2203 	mla	r2, lr, r3, r2
900263b0:	fb01 cc03 	mla	ip, r1, r3, ip
900263b4:	1c43      	adds	r3, r0, #1
900263b6:	b292      	uxth	r2, r2
900263b8:	eb03 2010 	add.w	r0, r3, r0, lsr #8
900263bc:	1c51      	adds	r1, r2, #1
900263be:	fa1f fc8c 	uxth.w	ip, ip
900263c2:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
900263c6:	eb01 2112 	add.w	r1, r1, r2, lsr #8
900263ca:	f3c1 21c4 	ubfx	r1, r1, #11, #5
900263ce:	4308      	orrs	r0, r1
900263d0:	f10c 0101 	add.w	r1, ip, #1
900263d4:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
900263d8:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
900263dc:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
900263e0:	ea40 000c 	orr.w	r0, r0, ip
900263e4:	f8a8 0000 	strh.w	r0, [r8]
900263e8:	e7a1      	b.n	9002632e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
900263ea:	b017      	add	sp, #92	; 0x5c
900263ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900263f0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
900263f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900263f4:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
900263f8:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
900263fc:	2d00      	cmp	r5, #0
900263fe:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
90026402:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
90026406:	fb05 0e03 	mla	lr, r5, r3, r0
9002640a:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
9002640e:	f2c0 80b0 	blt.w	90026572 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
90026412:	45a9      	cmp	r9, r5
90026414:	f340 80ad 	ble.w	90026572 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
90026418:	2800      	cmp	r0, #0
9002641a:	f2c0 80a8 	blt.w	9002656e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
9002641e:	4580      	cmp	r8, r0
90026420:	f340 80a5 	ble.w	9002656e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
90026424:	ea4f 045e 	mov.w	r4, lr, lsr #1
90026428:	f01e 0f01 	tst.w	lr, #1
9002642c:	5d16      	ldrb	r6, [r2, r4]
9002642e:	bf0c      	ite	eq
90026430:	f006 060f 	andeq.w	r6, r6, #15
90026434:	1136      	asrne	r6, r6, #4
90026436:	eb06 1606 	add.w	r6, r6, r6, lsl #4
9002643a:	b2f6      	uxtb	r6, r6
9002643c:	1c44      	adds	r4, r0, #1
9002643e:	f100 809b 	bmi.w	90026578 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
90026442:	45a0      	cmp	r8, r4
90026444:	f340 8098 	ble.w	90026578 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
90026448:	2f00      	cmp	r7, #0
9002644a:	f000 8097 	beq.w	9002657c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
9002644e:	f10e 0a01 	add.w	sl, lr, #1
90026452:	ea4f 045a 	mov.w	r4, sl, lsr #1
90026456:	f01a 0f01 	tst.w	sl, #1
9002645a:	5d14      	ldrb	r4, [r2, r4]
9002645c:	bf0c      	ite	eq
9002645e:	f004 040f 	andeq.w	r4, r4, #15
90026462:	1124      	asrne	r4, r4, #4
90026464:	eb04 1404 	add.w	r4, r4, r4, lsl #4
90026468:	b2e4      	uxtb	r4, r4
9002646a:	3501      	adds	r5, #1
9002646c:	f100 808a 	bmi.w	90026584 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
90026470:	45a9      	cmp	r9, r5
90026472:	f340 8087 	ble.w	90026584 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
90026476:	f1bc 0f00 	cmp.w	ip, #0
9002647a:	f000 8086 	beq.w	9002658a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
9002647e:	2800      	cmp	r0, #0
90026480:	db7e      	blt.n	90026580 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
90026482:	4580      	cmp	r8, r0
90026484:	dd7c      	ble.n	90026580 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
90026486:	eb03 090e 	add.w	r9, r3, lr
9002648a:	ea4f 0559 	mov.w	r5, r9, lsr #1
9002648e:	f019 0f01 	tst.w	r9, #1
90026492:	5d55      	ldrb	r5, [r2, r5]
90026494:	bf0c      	ite	eq
90026496:	f005 050f 	andeq.w	r5, r5, #15
9002649a:	112d      	asrne	r5, r5, #4
9002649c:	eb05 1505 	add.w	r5, r5, r5, lsl #4
900264a0:	b2ed      	uxtb	r5, r5
900264a2:	3001      	adds	r0, #1
900264a4:	d474      	bmi.n	90026590 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
900264a6:	4580      	cmp	r8, r0
900264a8:	dd72      	ble.n	90026590 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
900264aa:	2f00      	cmp	r7, #0
900264ac:	d072      	beq.n	90026594 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
900264ae:	3301      	adds	r3, #1
900264b0:	449e      	add	lr, r3
900264b2:	ea4f 035e 	mov.w	r3, lr, lsr #1
900264b6:	f01e 0f01 	tst.w	lr, #1
900264ba:	5cd0      	ldrb	r0, [r2, r3]
900264bc:	bf0c      	ite	eq
900264be:	f000 000f 	andeq.w	r0, r0, #15
900264c2:	1100      	asrne	r0, r0, #4
900264c4:	eb00 1000 	add.w	r0, r0, r0, lsl #4
900264c8:	b2c3      	uxtb	r3, r0
900264ca:	b2ba      	uxth	r2, r7
900264cc:	fa1f fc8c 	uxth.w	ip, ip
900264d0:	fb02 f00c 	mul.w	r0, r2, ip
900264d4:	0112      	lsls	r2, r2, #4
900264d6:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
900264da:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
900264de:	1a12      	subs	r2, r2, r0
900264e0:	fa1f fc8c 	uxth.w	ip, ip
900264e4:	b292      	uxth	r2, r2
900264e6:	eba7 070c 	sub.w	r7, r7, ip
900264ea:	4362      	muls	r2, r4
900264ec:	b2bf      	uxth	r7, r7
900264ee:	fb06 2207 	mla	r2, r6, r7, r2
900264f2:	fb0c 2505 	mla	r5, ip, r5, r2
900264f6:	fb00 5303 	mla	r3, r0, r3, r5
900264fa:	f3c3 2307 	ubfx	r3, r3, #8, #8
900264fe:	b3a3      	cbz	r3, 9002656a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
90026500:	4a25      	ldr	r2, [pc, #148]	; (90026598 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
90026502:	880e      	ldrh	r6, [r1, #0]
90026504:	6815      	ldr	r5, [r2, #0]
90026506:	b29a      	uxth	r2, r3
90026508:	1234      	asrs	r4, r6, #8
9002650a:	43db      	mvns	r3, r3
9002650c:	f3c5 4007 	ubfx	r0, r5, #16, #8
90026510:	f3c5 2707 	ubfx	r7, r5, #8, #8
90026514:	b2db      	uxtb	r3, r3
90026516:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
9002651a:	fb10 f002 	smulbb	r0, r0, r2
9002651e:	b2ed      	uxtb	r5, r5
90026520:	fb17 f702 	smulbb	r7, r7, r2
90026524:	fb04 0403 	mla	r4, r4, r3, r0
90026528:	10f0      	asrs	r0, r6, #3
9002652a:	fb15 f202 	smulbb	r2, r5, r2
9002652e:	00f6      	lsls	r6, r6, #3
90026530:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
90026534:	b2a4      	uxth	r4, r4
90026536:	b2f6      	uxtb	r6, r6
90026538:	fb00 7003 	mla	r0, r0, r3, r7
9002653c:	fb06 2303 	mla	r3, r6, r3, r2
90026540:	b280      	uxth	r0, r0
90026542:	b29a      	uxth	r2, r3
90026544:	1c63      	adds	r3, r4, #1
90026546:	eb03 2414 	add.w	r4, r3, r4, lsr #8
9002654a:	1c53      	adds	r3, r2, #1
9002654c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90026550:	1c42      	adds	r2, r0, #1
90026552:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
90026556:	eb02 2010 	add.w	r0, r2, r0, lsr #8
9002655a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
9002655e:	0940      	lsrs	r0, r0, #5
90026560:	4323      	orrs	r3, r4
90026562:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90026566:	4303      	orrs	r3, r0
90026568:	800b      	strh	r3, [r1, #0]
9002656a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9002656e:	2600      	movs	r6, #0
90026570:	e764      	b.n	9002643c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
90026572:	2400      	movs	r4, #0
90026574:	4626      	mov	r6, r4
90026576:	e778      	b.n	9002646a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
90026578:	2400      	movs	r4, #0
9002657a:	e776      	b.n	9002646a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
9002657c:	463c      	mov	r4, r7
9002657e:	e774      	b.n	9002646a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
90026580:	2500      	movs	r5, #0
90026582:	e78e      	b.n	900264a2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
90026584:	2300      	movs	r3, #0
90026586:	461d      	mov	r5, r3
90026588:	e79f      	b.n	900264ca <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
9002658a:	4663      	mov	r3, ip
9002658c:	4665      	mov	r5, ip
9002658e:	e79c      	b.n	900264ca <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90026590:	2300      	movs	r3, #0
90026592:	e79a      	b.n	900264ca <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90026594:	463b      	mov	r3, r7
90026596:	e798      	b.n	900264ca <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90026598:	24039844 	.word	0x24039844

9002659c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9002659c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900265a0:	b093      	sub	sp, #76	; 0x4c
900265a2:	461d      	mov	r5, r3
900265a4:	920c      	str	r2, [sp, #48]	; 0x30
900265a6:	9a21      	ldr	r2, [sp, #132]	; 0x84
900265a8:	9011      	str	r0, [sp, #68]	; 0x44
900265aa:	9107      	str	r1, [sp, #28]
900265ac:	6850      	ldr	r0, [r2, #4]
900265ae:	6812      	ldr	r2, [r2, #0]
900265b0:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
900265b4:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
900265b8:	fb00 1303 	mla	r3, r0, r3, r1
900265bc:	eb02 0943 	add.w	r9, r2, r3, lsl #1
900265c0:	9b24      	ldr	r3, [sp, #144]	; 0x90
900265c2:	689b      	ldr	r3, [r3, #8]
900265c4:	3301      	adds	r3, #1
900265c6:	f023 0301 	bic.w	r3, r3, #1
900265ca:	9306      	str	r3, [sp, #24]
900265cc:	9b24      	ldr	r3, [sp, #144]	; 0x90
900265ce:	681f      	ldr	r7, [r3, #0]
900265d0:	9b07      	ldr	r3, [sp, #28]
900265d2:	2b00      	cmp	r3, #0
900265d4:	dc03      	bgt.n	900265de <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
900265d6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
900265d8:	2b00      	cmp	r3, #0
900265da:	f340 8267 	ble.w	90026aac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
900265de:	9b24      	ldr	r3, [sp, #144]	; 0x90
900265e0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900265e4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900265e8:	1e48      	subs	r0, r1, #1
900265ea:	f102 3cff 	add.w	ip, r2, #4294967295
900265ee:	2d00      	cmp	r5, #0
900265f0:	f340 80b7 	ble.w	90026762 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
900265f4:	ea5f 4e24 	movs.w	lr, r4, asr #16
900265f8:	ea4f 4326 	mov.w	r3, r6, asr #16
900265fc:	d406      	bmi.n	9002660c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
900265fe:	4586      	cmp	lr, r0
90026600:	da04      	bge.n	9002660c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90026602:	2b00      	cmp	r3, #0
90026604:	db02      	blt.n	9002660c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90026606:	4563      	cmp	r3, ip
90026608:	f2c0 80ac 	blt.w	90026764 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9002660c:	f11e 0e01 	adds.w	lr, lr, #1
90026610:	f100 809f 	bmi.w	90026752 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
90026614:	4571      	cmp	r1, lr
90026616:	f2c0 809c 	blt.w	90026752 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
9002661a:	3301      	adds	r3, #1
9002661c:	f100 8099 	bmi.w	90026752 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
90026620:	429a      	cmp	r2, r3
90026622:	f2c0 8096 	blt.w	90026752 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
90026626:	46c8      	mov	r8, r9
90026628:	f9bd a018 	ldrsh.w	sl, [sp, #24]
9002662c:	9509      	str	r5, [sp, #36]	; 0x24
9002662e:	9b09      	ldr	r3, [sp, #36]	; 0x24
90026630:	2b00      	cmp	r3, #0
90026632:	f340 80b5 	ble.w	900267a0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90026636:	f3c4 3303 	ubfx	r3, r4, #12, #4
9002663a:	1430      	asrs	r0, r6, #16
9002663c:	f3c6 3103 	ubfx	r1, r6, #12, #4
90026640:	9308      	str	r3, [sp, #32]
90026642:	9b24      	ldr	r3, [sp, #144]	; 0x90
90026644:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
90026648:	1423      	asrs	r3, r4, #16
9002664a:	f100 813f 	bmi.w	900268cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
9002664e:	f10c 3bff 	add.w	fp, ip, #4294967295
90026652:	455b      	cmp	r3, fp
90026654:	f280 813a 	bge.w	900268cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
90026658:	2800      	cmp	r0, #0
9002665a:	f2c0 8137 	blt.w	900268cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
9002665e:	f10e 3bff 	add.w	fp, lr, #4294967295
90026662:	4558      	cmp	r0, fp
90026664:	f280 8132 	bge.w	900268cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
90026668:	9a06      	ldr	r2, [sp, #24]
9002666a:	fb00 3302 	mla	r3, r0, r2, r3
9002666e:	0858      	lsrs	r0, r3, #1
90026670:	07da      	lsls	r2, r3, #31
90026672:	9a08      	ldr	r2, [sp, #32]
90026674:	f817 c000 	ldrb.w	ip, [r7, r0]
90026678:	bf54      	ite	pl
9002667a:	f00c 0c0f 	andpl.w	ip, ip, #15
9002667e:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90026682:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90026686:	fa5f fc8c 	uxtb.w	ip, ip
9002668a:	2a00      	cmp	r2, #0
9002668c:	f000 80cc 	beq.w	90026828 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
90026690:	1c58      	adds	r0, r3, #1
90026692:	ea4f 0e50 	mov.w	lr, r0, lsr #1
90026696:	07c0      	lsls	r0, r0, #31
90026698:	f817 e00e 	ldrb.w	lr, [r7, lr]
9002669c:	bf54      	ite	pl
9002669e:	f00e 0e0f 	andpl.w	lr, lr, #15
900266a2:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
900266a6:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
900266aa:	fa5f fe8e 	uxtb.w	lr, lr
900266ae:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
900266b2:	b1b9      	cbz	r1, 900266e4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
900266b4:	4453      	add	r3, sl
900266b6:	0858      	lsrs	r0, r3, #1
900266b8:	07da      	lsls	r2, r3, #31
900266ba:	5c38      	ldrb	r0, [r7, r0]
900266bc:	bf54      	ite	pl
900266be:	f000 000f 	andpl.w	r0, r0, #15
900266c2:	1100      	asrmi	r0, r0, #4
900266c4:	eb00 1000 	add.w	r0, r0, r0, lsl #4
900266c8:	b2c0      	uxtb	r0, r0
900266ca:	900a      	str	r0, [sp, #40]	; 0x28
900266cc:	1c58      	adds	r0, r3, #1
900266ce:	0843      	lsrs	r3, r0, #1
900266d0:	07c2      	lsls	r2, r0, #31
900266d2:	5cfb      	ldrb	r3, [r7, r3]
900266d4:	bf54      	ite	pl
900266d6:	f003 030f 	andpl.w	r3, r3, #15
900266da:	111b      	asrmi	r3, r3, #4
900266dc:	eb03 1303 	add.w	r3, r3, r3, lsl #4
900266e0:	b2db      	uxtb	r3, r3
900266e2:	930e      	str	r3, [sp, #56]	; 0x38
900266e4:	f8bd 2020 	ldrh.w	r2, [sp, #32]
900266e8:	b289      	uxth	r1, r1
900266ea:	fb02 f301 	mul.w	r3, r2, r1
900266ee:	0112      	lsls	r2, r2, #4
900266f0:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
900266f4:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
900266f8:	1ad2      	subs	r2, r2, r3
900266fa:	b289      	uxth	r1, r1
900266fc:	b292      	uxth	r2, r2
900266fe:	1a40      	subs	r0, r0, r1
90026700:	fa1f fe80 	uxth.w	lr, r0
90026704:	980d      	ldr	r0, [sp, #52]	; 0x34
90026706:	4342      	muls	r2, r0
90026708:	fb0c 2c0e 	mla	ip, ip, lr, r2
9002670c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
9002670e:	fb01 c102 	mla	r1, r1, r2, ip
90026712:	9a0e      	ldr	r2, [sp, #56]	; 0x38
90026714:	fb03 1302 	mla	r3, r3, r2, r1
90026718:	f3c3 2307 	ubfx	r3, r3, #8, #8
9002671c:	2bff      	cmp	r3, #255	; 0xff
9002671e:	f040 8094 	bne.w	9002684a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
90026722:	4bbf      	ldr	r3, [pc, #764]	; (90026a20 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
90026724:	681a      	ldr	r2, [r3, #0]
90026726:	4bbf      	ldr	r3, [pc, #764]	; (90026a24 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
90026728:	0951      	lsrs	r1, r2, #5
9002672a:	ea03 2312 	and.w	r3, r3, r2, lsr #8
9002672e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90026732:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90026736:	430b      	orrs	r3, r1
90026738:	4313      	orrs	r3, r2
9002673a:	f8a8 3000 	strh.w	r3, [r8]
9002673e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90026740:	f108 0802 	add.w	r8, r8, #2
90026744:	441c      	add	r4, r3
90026746:	9b20      	ldr	r3, [sp, #128]	; 0x80
90026748:	441e      	add	r6, r3
9002674a:	9b09      	ldr	r3, [sp, #36]	; 0x24
9002674c:	3b01      	subs	r3, #1
9002674e:	9309      	str	r3, [sp, #36]	; 0x24
90026750:	e76d      	b.n	9002662e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90026752:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90026754:	3d01      	subs	r5, #1
90026756:	f109 0902 	add.w	r9, r9, #2
9002675a:	441c      	add	r4, r3
9002675c:	9b20      	ldr	r3, [sp, #128]	; 0x80
9002675e:	441e      	add	r6, r3
90026760:	e745      	b.n	900265ee <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
90026762:	d021      	beq.n	900267a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
90026764:	1e6b      	subs	r3, r5, #1
90026766:	981f      	ldr	r0, [sp, #124]	; 0x7c
90026768:	fb00 4003 	mla	r0, r0, r3, r4
9002676c:	1400      	asrs	r0, r0, #16
9002676e:	f53f af5a 	bmi.w	90026626 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90026772:	3901      	subs	r1, #1
90026774:	4288      	cmp	r0, r1
90026776:	f6bf af56 	bge.w	90026626 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9002677a:	9920      	ldr	r1, [sp, #128]	; 0x80
9002677c:	fb01 6303 	mla	r3, r1, r3, r6
90026780:	141b      	asrs	r3, r3, #16
90026782:	f53f af50 	bmi.w	90026626 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90026786:	3a01      	subs	r2, #1
90026788:	4293      	cmp	r3, r2
9002678a:	f6bf af4c 	bge.w	90026626 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9002678e:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
90026792:	46a8      	mov	r8, r5
90026794:	46ce      	mov	lr, r9
90026796:	9308      	str	r3, [sp, #32]
90026798:	f1b8 0f00 	cmp.w	r8, #0
9002679c:	f300 80b6 	bgt.w	9002690c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
900267a0:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
900267a4:	eb09 0945 	add.w	r9, r9, r5, lsl #1
900267a8:	9b07      	ldr	r3, [sp, #28]
900267aa:	2b00      	cmp	r3, #0
900267ac:	f340 817e 	ble.w	90026aac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
900267b0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
900267b4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
900267b6:	ee30 0a04 	vadd.f32	s0, s0, s8
900267ba:	ee70 0aa4 	vadd.f32	s1, s1, s9
900267be:	eef0 6a62 	vmov.f32	s13, s5
900267c2:	eec7 7a00 	vdiv.f32	s15, s14, s0
900267c6:	ee31 1a05 	vadd.f32	s2, s2, s10
900267ca:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900267ce:	ee16 4a90 	vmov	r4, s13
900267d2:	eef0 6a43 	vmov.f32	s13, s6
900267d6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900267da:	ee16 6a90 	vmov	r6, s13
900267de:	ee20 7aa7 	vmul.f32	s14, s1, s15
900267e2:	ee61 7a27 	vmul.f32	s15, s2, s15
900267e6:	ee77 2a62 	vsub.f32	s5, s14, s5
900267ea:	ee37 3ac3 	vsub.f32	s6, s15, s6
900267ee:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900267f2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900267f6:	ee12 2a90 	vmov	r2, s5
900267fa:	eef0 2a47 	vmov.f32	s5, s14
900267fe:	fb92 f3f3 	sdiv	r3, r2, r3
90026802:	ee13 2a10 	vmov	r2, s6
90026806:	931f      	str	r3, [sp, #124]	; 0x7c
90026808:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9002680a:	eeb0 3a67 	vmov.f32	s6, s15
9002680e:	fb92 f3f3 	sdiv	r3, r2, r3
90026812:	9320      	str	r3, [sp, #128]	; 0x80
90026814:	9b07      	ldr	r3, [sp, #28]
90026816:	9a0c      	ldr	r2, [sp, #48]	; 0x30
90026818:	3b01      	subs	r3, #1
9002681a:	9307      	str	r3, [sp, #28]
9002681c:	bf08      	it	eq
9002681e:	4615      	moveq	r5, r2
90026820:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90026822:	bf18      	it	ne
90026824:	461d      	movne	r5, r3
90026826:	e6d3      	b.n	900265d0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
90026828:	2900      	cmp	r1, #0
9002682a:	f43f af5b 	beq.w	900266e4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
9002682e:	eb0a 0003 	add.w	r0, sl, r3
90026832:	0843      	lsrs	r3, r0, #1
90026834:	07c0      	lsls	r0, r0, #31
90026836:	5cfb      	ldrb	r3, [r7, r3]
90026838:	bf54      	ite	pl
9002683a:	f003 030f 	andpl.w	r3, r3, #15
9002683e:	111b      	asrmi	r3, r3, #4
90026840:	eb03 1303 	add.w	r3, r3, r3, lsl #4
90026844:	b2db      	uxtb	r3, r3
90026846:	930a      	str	r3, [sp, #40]	; 0x28
90026848:	e74c      	b.n	900266e4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
9002684a:	2b00      	cmp	r3, #0
9002684c:	f43f af77 	beq.w	9002673e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90026850:	4a73      	ldr	r2, [pc, #460]	; (90026a20 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
90026852:	fa1f fe83 	uxth.w	lr, r3
90026856:	f8b8 c000 	ldrh.w	ip, [r8]
9002685a:	43db      	mvns	r3, r3
9002685c:	6810      	ldr	r0, [r2, #0]
9002685e:	ea4f 212c 	mov.w	r1, ip, asr #8
90026862:	f3c0 4207 	ubfx	r2, r0, #16, #8
90026866:	b2db      	uxtb	r3, r3
90026868:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
9002686c:	f3c0 2b07 	ubfx	fp, r0, #8, #8
90026870:	fb12 f20e 	smulbb	r2, r2, lr
90026874:	b2c0      	uxtb	r0, r0
90026876:	fb1b fb0e 	smulbb	fp, fp, lr
9002687a:	fb01 2103 	mla	r1, r1, r3, r2
9002687e:	ea4f 02ec 	mov.w	r2, ip, asr #3
90026882:	fb10 fe0e 	smulbb	lr, r0, lr
90026886:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9002688a:	b289      	uxth	r1, r1
9002688c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
90026890:	fa5f fc8c 	uxtb.w	ip, ip
90026894:	fb02 b203 	mla	r2, r2, r3, fp
90026898:	1c48      	adds	r0, r1, #1
9002689a:	fb0c e303 	mla	r3, ip, r3, lr
9002689e:	b292      	uxth	r2, r2
900268a0:	b29b      	uxth	r3, r3
900268a2:	eb00 2111 	add.w	r1, r0, r1, lsr #8
900268a6:	f102 0b01 	add.w	fp, r2, #1
900268aa:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
900268ae:	1c59      	adds	r1, r3, #1
900268b0:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
900268b4:	eb01 2113 	add.w	r1, r1, r3, lsr #8
900268b8:	0952      	lsrs	r2, r2, #5
900268ba:	f3c1 21c4 	ubfx	r1, r1, #11, #5
900268be:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
900268c2:	4301      	orrs	r1, r0
900268c4:	4311      	orrs	r1, r2
900268c6:	f8a8 1000 	strh.w	r1, [r8]
900268ca:	e738      	b.n	9002673e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
900268cc:	f113 0b01 	adds.w	fp, r3, #1
900268d0:	f53f af35 	bmi.w	9002673e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
900268d4:	45dc      	cmp	ip, fp
900268d6:	f6ff af32 	blt.w	9002673e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
900268da:	f110 0b01 	adds.w	fp, r0, #1
900268de:	f53f af2e 	bmi.w	9002673e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
900268e2:	45de      	cmp	lr, fp
900268e4:	f6ff af2b 	blt.w	9002673e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
900268e8:	9302      	str	r3, [sp, #8]
900268ea:	fa0f f38e 	sxth.w	r3, lr
900268ee:	9a08      	ldr	r2, [sp, #32]
900268f0:	9301      	str	r3, [sp, #4]
900268f2:	fa0f f38c 	sxth.w	r3, ip
900268f6:	9105      	str	r1, [sp, #20]
900268f8:	4641      	mov	r1, r8
900268fa:	9300      	str	r3, [sp, #0]
900268fc:	4653      	mov	r3, sl
900268fe:	e9cd 0203 	strd	r0, r2, [sp, #12]
90026902:	463a      	mov	r2, r7
90026904:	9811      	ldr	r0, [sp, #68]	; 0x44
90026906:	f7ff fd73 	bl	900263f0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
9002690a:	e718      	b.n	9002673e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
9002690c:	1422      	asrs	r2, r4, #16
9002690e:	9906      	ldr	r1, [sp, #24]
90026910:	1433      	asrs	r3, r6, #16
90026912:	f3c4 3003 	ubfx	r0, r4, #12, #4
90026916:	f3c6 3c03 	ubfx	ip, r6, #12, #4
9002691a:	fb01 2303 	mla	r3, r1, r3, r2
9002691e:	085a      	lsrs	r2, r3, #1
90026920:	07d9      	lsls	r1, r3, #31
90026922:	5cba      	ldrb	r2, [r7, r2]
90026924:	bf54      	ite	pl
90026926:	f002 020f 	andpl.w	r2, r2, #15
9002692a:	1112      	asrmi	r2, r2, #4
9002692c:	eb02 1202 	add.w	r2, r2, r2, lsl #4
90026930:	b2d2      	uxtb	r2, r2
90026932:	2800      	cmp	r0, #0
90026934:	d063      	beq.n	900269fe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x462>
90026936:	f103 0a01 	add.w	sl, r3, #1
9002693a:	ea4f 015a 	mov.w	r1, sl, lsr #1
9002693e:	f01a 0f01 	tst.w	sl, #1
90026942:	5c79      	ldrb	r1, [r7, r1]
90026944:	bf0c      	ite	eq
90026946:	f001 010f 	andeq.w	r1, r1, #15
9002694a:	1109      	asrne	r1, r1, #4
9002694c:	eb01 1101 	add.w	r1, r1, r1, lsl #4
90026950:	b2c9      	uxtb	r1, r1
90026952:	910f      	str	r1, [sp, #60]	; 0x3c
90026954:	f1bc 0f00 	cmp.w	ip, #0
90026958:	d01a      	beq.n	90026990 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
9002695a:	9908      	ldr	r1, [sp, #32]
9002695c:	440b      	add	r3, r1
9002695e:	0859      	lsrs	r1, r3, #1
90026960:	f013 0f01 	tst.w	r3, #1
90026964:	f103 0301 	add.w	r3, r3, #1
90026968:	5c79      	ldrb	r1, [r7, r1]
9002696a:	bf0c      	ite	eq
9002696c:	f001 010f 	andeq.w	r1, r1, #15
90026970:	1109      	asrne	r1, r1, #4
90026972:	eb01 1101 	add.w	r1, r1, r1, lsl #4
90026976:	b2c9      	uxtb	r1, r1
90026978:	910b      	str	r1, [sp, #44]	; 0x2c
9002697a:	0859      	lsrs	r1, r3, #1
9002697c:	07db      	lsls	r3, r3, #31
9002697e:	5c79      	ldrb	r1, [r7, r1]
90026980:	bf54      	ite	pl
90026982:	f001 010f 	andpl.w	r1, r1, #15
90026986:	1109      	asrmi	r1, r1, #4
90026988:	eb01 1101 	add.w	r1, r1, r1, lsl #4
9002698c:	b2c9      	uxtb	r1, r1
9002698e:	9110      	str	r1, [sp, #64]	; 0x40
90026990:	b280      	uxth	r0, r0
90026992:	fa1f fc8c 	uxth.w	ip, ip
90026996:	fb00 f30c 	mul.w	r3, r0, ip
9002699a:	0100      	lsls	r0, r0, #4
9002699c:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
900269a0:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
900269a4:	1ac0      	subs	r0, r0, r3
900269a6:	fa1f fc8c 	uxth.w	ip, ip
900269aa:	b280      	uxth	r0, r0
900269ac:	eba1 010c 	sub.w	r1, r1, ip
900269b0:	fa1f fa81 	uxth.w	sl, r1
900269b4:	990f      	ldr	r1, [sp, #60]	; 0x3c
900269b6:	4348      	muls	r0, r1
900269b8:	990b      	ldr	r1, [sp, #44]	; 0x2c
900269ba:	fb02 020a 	mla	r2, r2, sl, r0
900269be:	fb0c 2c01 	mla	ip, ip, r1, r2
900269c2:	9a10      	ldr	r2, [sp, #64]	; 0x40
900269c4:	fb03 c302 	mla	r3, r3, r2, ip
900269c8:	f3c3 2307 	ubfx	r3, r3, #8, #8
900269cc:	2bff      	cmp	r3, #255	; 0xff
900269ce:	d12b      	bne.n	90026a28 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
900269d0:	4b13      	ldr	r3, [pc, #76]	; (90026a20 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
900269d2:	681a      	ldr	r2, [r3, #0]
900269d4:	4b13      	ldr	r3, [pc, #76]	; (90026a24 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
900269d6:	0951      	lsrs	r1, r2, #5
900269d8:	ea03 2312 	and.w	r3, r3, r2, lsr #8
900269dc:	f3c2 02c4 	ubfx	r2, r2, #3, #5
900269e0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
900269e4:	430b      	orrs	r3, r1
900269e6:	4313      	orrs	r3, r2
900269e8:	f8ae 3000 	strh.w	r3, [lr]
900269ec:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
900269ee:	f10e 0e02 	add.w	lr, lr, #2
900269f2:	f108 38ff 	add.w	r8, r8, #4294967295
900269f6:	441c      	add	r4, r3
900269f8:	9b20      	ldr	r3, [sp, #128]	; 0x80
900269fa:	441e      	add	r6, r3
900269fc:	e6cc      	b.n	90026798 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
900269fe:	f1bc 0f00 	cmp.w	ip, #0
90026a02:	d0c5      	beq.n	90026990 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
90026a04:	9908      	ldr	r1, [sp, #32]
90026a06:	440b      	add	r3, r1
90026a08:	0859      	lsrs	r1, r3, #1
90026a0a:	07db      	lsls	r3, r3, #31
90026a0c:	5c79      	ldrb	r1, [r7, r1]
90026a0e:	bf54      	ite	pl
90026a10:	f001 010f 	andpl.w	r1, r1, #15
90026a14:	1109      	asrmi	r1, r1, #4
90026a16:	eb01 1101 	add.w	r1, r1, r1, lsl #4
90026a1a:	b2c9      	uxtb	r1, r1
90026a1c:	910b      	str	r1, [sp, #44]	; 0x2c
90026a1e:	e7b7      	b.n	90026990 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
90026a20:	24039844 	.word	0x24039844
90026a24:	fffff800 	.word	0xfffff800
90026a28:	2b00      	cmp	r3, #0
90026a2a:	d0df      	beq.n	900269ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
90026a2c:	4a21      	ldr	r2, [pc, #132]	; (90026ab4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
90026a2e:	fa1f fa83 	uxth.w	sl, r3
90026a32:	f8be c000 	ldrh.w	ip, [lr]
90026a36:	43db      	mvns	r3, r3
90026a38:	6810      	ldr	r0, [r2, #0]
90026a3a:	ea4f 212c 	mov.w	r1, ip, asr #8
90026a3e:	f3c0 4207 	ubfx	r2, r0, #16, #8
90026a42:	b2db      	uxtb	r3, r3
90026a44:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
90026a48:	f3c0 2b07 	ubfx	fp, r0, #8, #8
90026a4c:	fb12 f20a 	smulbb	r2, r2, sl
90026a50:	b2c0      	uxtb	r0, r0
90026a52:	fb1b fb0a 	smulbb	fp, fp, sl
90026a56:	fb01 2103 	mla	r1, r1, r3, r2
90026a5a:	ea4f 02ec 	mov.w	r2, ip, asr #3
90026a5e:	fb10 f00a 	smulbb	r0, r0, sl
90026a62:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
90026a66:	b289      	uxth	r1, r1
90026a68:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
90026a6c:	fa5f fc8c 	uxtb.w	ip, ip
90026a70:	fb02 b203 	mla	r2, r2, r3, fp
90026a74:	fb0c 0003 	mla	r0, ip, r3, r0
90026a78:	1c4b      	adds	r3, r1, #1
90026a7a:	b292      	uxth	r2, r2
90026a7c:	b280      	uxth	r0, r0
90026a7e:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90026a82:	f100 0b01 	add.w	fp, r0, #1
90026a86:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
90026a8a:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
90026a8e:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
90026a92:	ea4b 0101 	orr.w	r1, fp, r1
90026a96:	f102 0b01 	add.w	fp, r2, #1
90026a9a:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
90026a9e:	0952      	lsrs	r2, r2, #5
90026aa0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90026aa4:	4311      	orrs	r1, r2
90026aa6:	f8ae 1000 	strh.w	r1, [lr]
90026aaa:	e79f      	b.n	900269ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
90026aac:	b013      	add	sp, #76	; 0x4c
90026aae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90026ab2:	bf00      	nop
90026ab4:	24039844 	.word	0x24039844

90026ab8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
90026ab8:	b570      	push	{r4, r5, r6, lr}
90026aba:	1208      	asrs	r0, r1, #8
90026abc:	f8bd 5010 	ldrh.w	r5, [sp, #16]
90026ac0:	b29e      	uxth	r6, r3
90026ac2:	1213      	asrs	r3, r2, #8
90026ac4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
90026ac8:	10cc      	asrs	r4, r1, #3
90026aca:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
90026ace:	00c9      	lsls	r1, r1, #3
90026ad0:	fb10 f006 	smulbb	r0, r0, r6
90026ad4:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
90026ad8:	fb13 f305 	smulbb	r3, r3, r5
90026adc:	fb14 f406 	smulbb	r4, r4, r6
90026ae0:	4418      	add	r0, r3
90026ae2:	10d3      	asrs	r3, r2, #3
90026ae4:	00d2      	lsls	r2, r2, #3
90026ae6:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
90026aea:	b280      	uxth	r0, r0
90026aec:	b2d2      	uxtb	r2, r2
90026aee:	fb13 f305 	smulbb	r3, r3, r5
90026af2:	fb12 f205 	smulbb	r2, r2, r5
90026af6:	441c      	add	r4, r3
90026af8:	b2cb      	uxtb	r3, r1
90026afa:	fb13 f306 	smulbb	r3, r3, r6
90026afe:	b2a4      	uxth	r4, r4
90026b00:	4413      	add	r3, r2
90026b02:	1c42      	adds	r2, r0, #1
90026b04:	b29b      	uxth	r3, r3
90026b06:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90026b0a:	f400 4278 	and.w	r2, r0, #63488	; 0xf800
90026b0e:	1c58      	adds	r0, r3, #1
90026b10:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90026b14:	f3c0 20c4 	ubfx	r0, r0, #11, #5
90026b18:	4310      	orrs	r0, r2
90026b1a:	1c62      	adds	r2, r4, #1
90026b1c:	eb02 2414 	add.w	r4, r2, r4, lsr #8
90026b20:	0964      	lsrs	r4, r4, #5
90026b22:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
90026b26:	4320      	orrs	r0, r4
90026b28:	bd70      	pop	{r4, r5, r6, pc}
	...

90026b2c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
90026b2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90026b30:	b08f      	sub	sp, #60	; 0x3c
90026b32:	461c      	mov	r4, r3
90026b34:	460d      	mov	r5, r1
90026b36:	4616      	mov	r6, r2
90026b38:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
90026b3c:	9004      	str	r0, [sp, #16]
90026b3e:	9b18      	ldr	r3, [sp, #96]	; 0x60
90026b40:	2f00      	cmp	r7, #0
90026b42:	f000 80f6 	beq.w	90026d32 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
90026b46:	6820      	ldr	r0, [r4, #0]
90026b48:	aa0a      	add	r2, sp, #40	; 0x28
90026b4a:	6861      	ldr	r1, [r4, #4]
90026b4c:	f04f 0802 	mov.w	r8, #2
90026b50:	3604      	adds	r6, #4
90026b52:	c203      	stmia	r2!, {r0, r1}
90026b54:	6818      	ldr	r0, [r3, #0]
90026b56:	aa0c      	add	r2, sp, #48	; 0x30
90026b58:	6859      	ldr	r1, [r3, #4]
90026b5a:	c203      	stmia	r2!, {r0, r1}
90026b5c:	a80a      	add	r0, sp, #40	; 0x28
90026b5e:	f7ef fceb 	bl	90016538 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90026b62:	4621      	mov	r1, r4
90026b64:	a80c      	add	r0, sp, #48	; 0x30
90026b66:	f7ef fd2b 	bl	900165c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90026b6a:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
90026b6e:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
90026b72:	f002 0301 	and.w	r3, r2, #1
90026b76:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
90026b7a:	9306      	str	r3, [sp, #24]
90026b7c:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
90026b80:	f003 0101 	and.w	r1, r3, #1
90026b84:	9105      	str	r1, [sp, #20]
90026b86:	9805      	ldr	r0, [sp, #20]
90026b88:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
90026b8c:	4403      	add	r3, r0
90026b8e:	fb01 2303 	mla	r3, r1, r3, r2
90026b92:	fb93 f3f8 	sdiv	r3, r3, r8
90026b96:	441d      	add	r5, r3
90026b98:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
90026b9c:	441a      	add	r2, r3
90026b9e:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
90026ba2:	4419      	add	r1, r3
90026ba4:	4b64      	ldr	r3, [pc, #400]	; (90026d38 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
90026ba6:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
90026baa:	6818      	ldr	r0, [r3, #0]
90026bac:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
90026bb0:	6803      	ldr	r3, [r0, #0]
90026bb2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90026bb4:	4798      	blx	r3
90026bb6:	4a61      	ldr	r2, [pc, #388]	; (90026d3c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
90026bb8:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
90026bbc:	2fff      	cmp	r7, #255	; 0xff
90026bbe:	8813      	ldrh	r3, [r2, #0]
90026bc0:	4611      	mov	r1, r2
90026bc2:	f9bd a030 	ldrsh.w	sl, [sp, #48]	; 0x30
90026bc6:	fb03 fb0b 	mul.w	fp, r3, fp
90026bca:	fb03 a404 	mla	r4, r3, r4, sl
90026bce:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90026bd2:	d06b      	beq.n	90026cac <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x180>
90026bd4:	f1c7 03ff 	rsb	r3, r7, #255	; 0xff
90026bd8:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
90026bdc:	9303      	str	r3, [sp, #12]
90026bde:	eb04 034b 	add.w	r3, r4, fp, lsl #1
90026be2:	e9cd 3207 	strd	r3, r2, [sp, #28]
90026be6:	9b07      	ldr	r3, [sp, #28]
90026be8:	42a3      	cmp	r3, r4
90026bea:	f240 809d 	bls.w	90026d28 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
90026bee:	9b06      	ldr	r3, [sp, #24]
90026bf0:	2b00      	cmp	r3, #0
90026bf2:	d039      	beq.n	90026c68 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13c>
90026bf4:	782b      	ldrb	r3, [r5, #0]
90026bf6:	f105 0801 	add.w	r8, r5, #1
90026bfa:	f109 3bff 	add.w	fp, r9, #4294967295
90026bfe:	8822      	ldrh	r2, [r4, #0]
90026c00:	f003 030f 	and.w	r3, r3, #15
90026c04:	9804      	ldr	r0, [sp, #16]
90026c06:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
90026c0a:	9b03      	ldr	r3, [sp, #12]
90026c0c:	9300      	str	r3, [sp, #0]
90026c0e:	463b      	mov	r3, r7
90026c10:	f7ff ff52 	bl	90026ab8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
90026c14:	f824 0b02 	strh.w	r0, [r4], #2
90026c18:	f1bb 0f01 	cmp.w	fp, #1
90026c1c:	46a2      	mov	sl, r4
90026c1e:	f104 0404 	add.w	r4, r4, #4
90026c22:	dd24      	ble.n	90026c6e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x142>
90026c24:	f898 3000 	ldrb.w	r3, [r8]
90026c28:	f1ab 0b02 	sub.w	fp, fp, #2
90026c2c:	f834 2c04 	ldrh.w	r2, [r4, #-4]
90026c30:	091b      	lsrs	r3, r3, #4
90026c32:	9804      	ldr	r0, [sp, #16]
90026c34:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
90026c38:	9b03      	ldr	r3, [sp, #12]
90026c3a:	9300      	str	r3, [sp, #0]
90026c3c:	463b      	mov	r3, r7
90026c3e:	f7ff ff3b 	bl	90026ab8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
90026c42:	f824 0c04 	strh.w	r0, [r4, #-4]
90026c46:	f818 3b01 	ldrb.w	r3, [r8], #1
90026c4a:	f834 2c02 	ldrh.w	r2, [r4, #-2]
90026c4e:	f003 030f 	and.w	r3, r3, #15
90026c52:	9804      	ldr	r0, [sp, #16]
90026c54:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
90026c58:	9b03      	ldr	r3, [sp, #12]
90026c5a:	9300      	str	r3, [sp, #0]
90026c5c:	463b      	mov	r3, r7
90026c5e:	f7ff ff2b 	bl	90026ab8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
90026c62:	f824 0c02 	strh.w	r0, [r4, #-2]
90026c66:	e7d7      	b.n	90026c18 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
90026c68:	46a8      	mov	r8, r5
90026c6a:	46cb      	mov	fp, r9
90026c6c:	e7d4      	b.n	90026c18 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
90026c6e:	d10e      	bne.n	90026c8e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x162>
90026c70:	f898 3000 	ldrb.w	r3, [r8]
90026c74:	f8ba 2000 	ldrh.w	r2, [sl]
90026c78:	091b      	lsrs	r3, r3, #4
90026c7a:	9804      	ldr	r0, [sp, #16]
90026c7c:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
90026c80:	9b03      	ldr	r3, [sp, #12]
90026c82:	9300      	str	r3, [sp, #0]
90026c84:	463b      	mov	r3, r7
90026c86:	f7ff ff17 	bl	90026ab8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
90026c8a:	f82a 0b02 	strh.w	r0, [sl], #2
90026c8e:	9b08      	ldr	r3, [sp, #32]
90026c90:	9a05      	ldr	r2, [sp, #20]
90026c92:	881c      	ldrh	r4, [r3, #0]
90026c94:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
90026c98:	eba4 0409 	sub.w	r4, r4, r9
90026c9c:	4413      	add	r3, r2
90026c9e:	9a09      	ldr	r2, [sp, #36]	; 0x24
90026ca0:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
90026ca4:	fb93 f3f2 	sdiv	r3, r3, r2
90026ca8:	441d      	add	r5, r3
90026caa:	e79c      	b.n	90026be6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xba>
90026cac:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
90026cb0:	45a3      	cmp	fp, r4
90026cb2:	d939      	bls.n	90026d28 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
90026cb4:	9b06      	ldr	r3, [sp, #24]
90026cb6:	b1fb      	cbz	r3, 90026cf8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
90026cb8:	782b      	ldrb	r3, [r5, #0]
90026cba:	1c6a      	adds	r2, r5, #1
90026cbc:	f109 30ff 	add.w	r0, r9, #4294967295
90026cc0:	3402      	adds	r4, #2
90026cc2:	f003 030f 	and.w	r3, r3, #15
90026cc6:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90026cca:	f824 3c02 	strh.w	r3, [r4, #-2]
90026cce:	2801      	cmp	r0, #1
90026cd0:	4623      	mov	r3, r4
90026cd2:	f104 0404 	add.w	r4, r4, #4
90026cd6:	dd12      	ble.n	90026cfe <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
90026cd8:	7813      	ldrb	r3, [r2, #0]
90026cda:	3802      	subs	r0, #2
90026cdc:	091b      	lsrs	r3, r3, #4
90026cde:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90026ce2:	f824 3c04 	strh.w	r3, [r4, #-4]
90026ce6:	f812 3b01 	ldrb.w	r3, [r2], #1
90026cea:	f003 030f 	and.w	r3, r3, #15
90026cee:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90026cf2:	f824 3c02 	strh.w	r3, [r4, #-2]
90026cf6:	e7ea      	b.n	90026cce <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
90026cf8:	462a      	mov	r2, r5
90026cfa:	4648      	mov	r0, r9
90026cfc:	e7e7      	b.n	90026cce <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
90026cfe:	d106      	bne.n	90026d0e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
90026d00:	7812      	ldrb	r2, [r2, #0]
90026d02:	3302      	adds	r3, #2
90026d04:	0912      	lsrs	r2, r2, #4
90026d06:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
90026d0a:	f823 2c02 	strh.w	r2, [r3, #-2]
90026d0e:	880c      	ldrh	r4, [r1, #0]
90026d10:	9a05      	ldr	r2, [sp, #20]
90026d12:	eba4 0409 	sub.w	r4, r4, r9
90026d16:	eb03 0444 	add.w	r4, r3, r4, lsl #1
90026d1a:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
90026d1e:	4413      	add	r3, r2
90026d20:	fb93 f3f8 	sdiv	r3, r3, r8
90026d24:	441d      	add	r5, r3
90026d26:	e7c3      	b.n	90026cb0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x184>
90026d28:	4b03      	ldr	r3, [pc, #12]	; (90026d38 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
90026d2a:	6818      	ldr	r0, [r3, #0]
90026d2c:	6803      	ldr	r3, [r0, #0]
90026d2e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90026d30:	4798      	blx	r3
90026d32:	b00f      	add	sp, #60	; 0x3c
90026d34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90026d38:	24039834 	.word	0x24039834
90026d3c:	2403982e 	.word	0x2403982e

90026d40 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
90026d40:	b5f0      	push	{r4, r5, r6, r7, lr}
90026d42:	f89d 5014 	ldrb.w	r5, [sp, #20]
90026d46:	0a0f      	lsrs	r7, r1, #8
90026d48:	2dff      	cmp	r5, #255	; 0xff
90026d4a:	d10c      	bne.n	90026d66 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
90026d4c:	2bff      	cmp	r3, #255	; 0xff
90026d4e:	d10a      	bne.n	90026d66 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
90026d50:	0948      	lsrs	r0, r1, #5
90026d52:	4b25      	ldr	r3, [pc, #148]	; (90026de8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
90026d54:	f3c1 01c4 	ubfx	r1, r1, #3, #5
90026d58:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90026d5c:	403b      	ands	r3, r7
90026d5e:	4318      	orrs	r0, r3
90026d60:	4308      	orrs	r0, r1
90026d62:	b280      	uxth	r0, r0
90026d64:	bdf0      	pop	{r4, r5, r6, r7, pc}
90026d66:	fb15 f503 	smulbb	r5, r5, r3
90026d6a:	1214      	asrs	r4, r2, #8
90026d6c:	10d6      	asrs	r6, r2, #3
90026d6e:	b2ab      	uxth	r3, r5
90026d70:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
90026d74:	00d0      	lsls	r0, r2, #3
90026d76:	f3c1 4207 	ubfx	r2, r1, #16, #8
90026d7a:	1c5d      	adds	r5, r3, #1
90026d7c:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
90026d80:	b2c0      	uxtb	r0, r0
90026d82:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
90026d86:	eb05 2513 	add.w	r5, r5, r3, lsr #8
90026d8a:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
90026d8e:	f3c5 2507 	ubfx	r5, r5, #8, #8
90026d92:	fa1f fc85 	uxth.w	ip, r5
90026d96:	43ed      	mvns	r5, r5
90026d98:	fb12 f20c 	smulbb	r2, r2, ip
90026d9c:	b2eb      	uxtb	r3, r5
90026d9e:	b2fd      	uxtb	r5, r7
90026da0:	fb04 2403 	mla	r4, r4, r3, r2
90026da4:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
90026da8:	fb15 f50c 	smulbb	r5, r5, ip
90026dac:	b2c8      	uxtb	r0, r1
90026dae:	b2a4      	uxth	r4, r4
90026db0:	fb10 f00c 	smulbb	r0, r0, ip
90026db4:	fb06 5503 	mla	r5, r6, r3, r5
90026db8:	fb02 0003 	mla	r0, r2, r3, r0
90026dbc:	b2ad      	uxth	r5, r5
90026dbe:	b283      	uxth	r3, r0
90026dc0:	1c60      	adds	r0, r4, #1
90026dc2:	eb00 2414 	add.w	r4, r0, r4, lsr #8
90026dc6:	1c58      	adds	r0, r3, #1
90026dc8:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90026dcc:	1c6b      	adds	r3, r5, #1
90026dce:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
90026dd2:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90026dd6:	f3c0 20c4 	ubfx	r0, r0, #11, #5
90026dda:	096d      	lsrs	r5, r5, #5
90026ddc:	4320      	orrs	r0, r4
90026dde:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90026de2:	4328      	orrs	r0, r5
90026de4:	e7be      	b.n	90026d64 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x24>
90026de6:	bf00      	nop
90026de8:	00fff800 	.word	0x00fff800

90026dec <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
90026dec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90026df0:	461c      	mov	r4, r3
90026df2:	b08d      	sub	sp, #52	; 0x34
90026df4:	460d      	mov	r5, r1
90026df6:	4616      	mov	r6, r2
90026df8:	9b16      	ldr	r3, [sp, #88]	; 0x58
90026dfa:	4680      	mov	r8, r0
90026dfc:	6861      	ldr	r1, [r4, #4]
90026dfe:	aa08      	add	r2, sp, #32
90026e00:	6820      	ldr	r0, [r4, #0]
90026e02:	f04f 0a02 	mov.w	sl, #2
90026e06:	f89d 905c 	ldrb.w	r9, [sp, #92]	; 0x5c
90026e0a:	3604      	adds	r6, #4
90026e0c:	c203      	stmia	r2!, {r0, r1}
90026e0e:	6818      	ldr	r0, [r3, #0]
90026e10:	aa0a      	add	r2, sp, #40	; 0x28
90026e12:	6859      	ldr	r1, [r3, #4]
90026e14:	c203      	stmia	r2!, {r0, r1}
90026e16:	a808      	add	r0, sp, #32
90026e18:	f7ef fb8e 	bl	90016538 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90026e1c:	4621      	mov	r1, r4
90026e1e:	a80a      	add	r0, sp, #40	; 0x28
90026e20:	f7ef fbce 	bl	900165c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90026e24:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
90026e28:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
90026e2c:	f002 0301 	and.w	r3, r2, #1
90026e30:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
90026e34:	9303      	str	r3, [sp, #12]
90026e36:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
90026e3a:	f003 0101 	and.w	r1, r3, #1
90026e3e:	9102      	str	r1, [sp, #8]
90026e40:	9802      	ldr	r0, [sp, #8]
90026e42:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
90026e46:	4403      	add	r3, r0
90026e48:	fb01 2303 	mla	r3, r1, r3, r2
90026e4c:	fb93 f3fa 	sdiv	r3, r3, sl
90026e50:	441d      	add	r5, r3
90026e52:	f8bd 3020 	ldrh.w	r3, [sp, #32]
90026e56:	441a      	add	r2, r3
90026e58:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
90026e5c:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
90026e60:	4419      	add	r1, r3
90026e62:	4a3e      	ldr	r2, [pc, #248]	; (90026f5c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
90026e64:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
90026e68:	6810      	ldr	r0, [r2, #0]
90026e6a:	9205      	str	r2, [sp, #20]
90026e6c:	6803      	ldr	r3, [r0, #0]
90026e6e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90026e70:	4798      	blx	r3
90026e72:	4b3b      	ldr	r3, [pc, #236]	; (90026f60 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
90026e74:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
90026e78:	8819      	ldrh	r1, [r3, #0]
90026e7a:	f9bd c028 	ldrsh.w	ip, [sp, #40]	; 0x28
90026e7e:	434f      	muls	r7, r1
90026e80:	fb01 c404 	mla	r4, r1, r4, ip
90026e84:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90026e88:	eb04 0247 	add.w	r2, r4, r7, lsl #1
90026e8c:	e9cd 3a06 	strd	r3, sl, [sp, #24]
90026e90:	9204      	str	r2, [sp, #16]
90026e92:	9b04      	ldr	r3, [sp, #16]
90026e94:	429c      	cmp	r4, r3
90026e96:	d258      	bcs.n	90026f4a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
90026e98:	9b03      	ldr	r3, [sp, #12]
90026e9a:	2b00      	cmp	r3, #0
90026e9c:	d034      	beq.n	90026f08 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
90026e9e:	782b      	ldrb	r3, [r5, #0]
90026ea0:	1c6f      	adds	r7, r5, #1
90026ea2:	f003 030f 	and.w	r3, r3, #15
90026ea6:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
90026eaa:	0e0b      	lsrs	r3, r1, #24
90026eac:	d006      	beq.n	90026ebc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
90026eae:	8822      	ldrh	r2, [r4, #0]
90026eb0:	4640      	mov	r0, r8
90026eb2:	9300      	str	r3, [sp, #0]
90026eb4:	464b      	mov	r3, r9
90026eb6:	f7ff ff43 	bl	90026d40 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
90026eba:	8020      	strh	r0, [r4, #0]
90026ebc:	3402      	adds	r4, #2
90026ebe:	f10b 3aff 	add.w	sl, fp, #4294967295
90026ec2:	f1ba 0f01 	cmp.w	sl, #1
90026ec6:	dd22      	ble.n	90026f0e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
90026ec8:	783b      	ldrb	r3, [r7, #0]
90026eca:	091b      	lsrs	r3, r3, #4
90026ecc:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
90026ed0:	0e0b      	lsrs	r3, r1, #24
90026ed2:	d006      	beq.n	90026ee2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
90026ed4:	8822      	ldrh	r2, [r4, #0]
90026ed6:	4640      	mov	r0, r8
90026ed8:	9300      	str	r3, [sp, #0]
90026eda:	464b      	mov	r3, r9
90026edc:	f7ff ff30 	bl	90026d40 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
90026ee0:	8020      	strh	r0, [r4, #0]
90026ee2:	f817 3b01 	ldrb.w	r3, [r7], #1
90026ee6:	f003 030f 	and.w	r3, r3, #15
90026eea:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
90026eee:	0e0b      	lsrs	r3, r1, #24
90026ef0:	d006      	beq.n	90026f00 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
90026ef2:	8862      	ldrh	r2, [r4, #2]
90026ef4:	4640      	mov	r0, r8
90026ef6:	9300      	str	r3, [sp, #0]
90026ef8:	464b      	mov	r3, r9
90026efa:	f7ff ff21 	bl	90026d40 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
90026efe:	8060      	strh	r0, [r4, #2]
90026f00:	3404      	adds	r4, #4
90026f02:	f1aa 0a02 	sub.w	sl, sl, #2
90026f06:	e7dc      	b.n	90026ec2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
90026f08:	462f      	mov	r7, r5
90026f0a:	46da      	mov	sl, fp
90026f0c:	e7d9      	b.n	90026ec2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
90026f0e:	d10d      	bne.n	90026f2c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
90026f10:	783b      	ldrb	r3, [r7, #0]
90026f12:	091b      	lsrs	r3, r3, #4
90026f14:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
90026f18:	0e0b      	lsrs	r3, r1, #24
90026f1a:	d006      	beq.n	90026f2a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
90026f1c:	8822      	ldrh	r2, [r4, #0]
90026f1e:	4640      	mov	r0, r8
90026f20:	9300      	str	r3, [sp, #0]
90026f22:	464b      	mov	r3, r9
90026f24:	f7ff ff0c 	bl	90026d40 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
90026f28:	8020      	strh	r0, [r4, #0]
90026f2a:	3402      	adds	r4, #2
90026f2c:	9b06      	ldr	r3, [sp, #24]
90026f2e:	9a02      	ldr	r2, [sp, #8]
90026f30:	881b      	ldrh	r3, [r3, #0]
90026f32:	eba3 030b 	sub.w	r3, r3, fp
90026f36:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90026f3a:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
90026f3e:	4413      	add	r3, r2
90026f40:	9a07      	ldr	r2, [sp, #28]
90026f42:	fb93 f3f2 	sdiv	r3, r3, r2
90026f46:	441d      	add	r5, r3
90026f48:	e7a3      	b.n	90026e92 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
90026f4a:	9b05      	ldr	r3, [sp, #20]
90026f4c:	6818      	ldr	r0, [r3, #0]
90026f4e:	6803      	ldr	r3, [r0, #0]
90026f50:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90026f52:	4798      	blx	r3
90026f54:	b00d      	add	sp, #52	; 0x34
90026f56:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90026f5a:	bf00      	nop
90026f5c:	24039834 	.word	0x24039834
90026f60:	2403982e 	.word	0x2403982e

90026f64 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
90026f64:	b570      	push	{r4, r5, r6, lr}
90026f66:	1214      	asrs	r4, r2, #8
90026f68:	788d      	ldrb	r5, [r1, #2]
90026f6a:	f89d 6010 	ldrb.w	r6, [sp, #16]
90026f6e:	10d0      	asrs	r0, r2, #3
90026f70:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
90026f74:	00d2      	lsls	r2, r2, #3
90026f76:	fb15 f503 	smulbb	r5, r5, r3
90026f7a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
90026f7e:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
90026f82:	b2d2      	uxtb	r2, r2
90026f84:	fb04 5506 	mla	r5, r4, r6, r5
90026f88:	784c      	ldrb	r4, [r1, #1]
90026f8a:	7809      	ldrb	r1, [r1, #0]
90026f8c:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
90026f90:	fb14 f403 	smulbb	r4, r4, r3
90026f94:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
90026f98:	fb11 f303 	smulbb	r3, r1, r3
90026f9c:	b2ad      	uxth	r5, r5
90026f9e:	fb00 4406 	mla	r4, r0, r6, r4
90026fa2:	fb02 3306 	mla	r3, r2, r6, r3
90026fa6:	1c68      	adds	r0, r5, #1
90026fa8:	b2a4      	uxth	r4, r4
90026faa:	b29b      	uxth	r3, r3
90026fac:	eb00 2515 	add.w	r5, r0, r5, lsr #8
90026fb0:	1c62      	adds	r2, r4, #1
90026fb2:	1c58      	adds	r0, r3, #1
90026fb4:	eb02 2414 	add.w	r4, r2, r4, lsr #8
90026fb8:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
90026fbc:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90026fc0:	0964      	lsrs	r4, r4, #5
90026fc2:	f3c0 20c4 	ubfx	r0, r0, #11, #5
90026fc6:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
90026fca:	4328      	orrs	r0, r5
90026fcc:	4320      	orrs	r0, r4
90026fce:	bd70      	pop	{r4, r5, r6, pc}

90026fd0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
90026fd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90026fd4:	b08f      	sub	sp, #60	; 0x3c
90026fd6:	461c      	mov	r4, r3
90026fd8:	4682      	mov	sl, r0
90026fda:	460e      	mov	r6, r1
90026fdc:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
90026fe0:	4615      	mov	r5, r2
90026fe2:	9b18      	ldr	r3, [sp, #96]	; 0x60
90026fe4:	2f00      	cmp	r7, #0
90026fe6:	f000 8141 	beq.w	9002726c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29c>
90026fea:	6820      	ldr	r0, [r4, #0]
90026fec:	aa0a      	add	r2, sp, #40	; 0x28
90026fee:	6861      	ldr	r1, [r4, #4]
90026ff0:	f04f 0802 	mov.w	r8, #2
90026ff4:	3504      	adds	r5, #4
90026ff6:	c203      	stmia	r2!, {r0, r1}
90026ff8:	6818      	ldr	r0, [r3, #0]
90026ffa:	aa0c      	add	r2, sp, #48	; 0x30
90026ffc:	6859      	ldr	r1, [r3, #4]
90026ffe:	c203      	stmia	r2!, {r0, r1}
90027000:	a80a      	add	r0, sp, #40	; 0x28
90027002:	f7ef fa99 	bl	90016538 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90027006:	4621      	mov	r1, r4
90027008:	a80c      	add	r0, sp, #48	; 0x30
9002700a:	f7ef fad9 	bl	900165c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9002700e:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
90027012:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
90027016:	f002 0301 	and.w	r3, r2, #1
9002701a:	9306      	str	r3, [sp, #24]
9002701c:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
90027020:	f003 0101 	and.w	r1, r3, #1
90027024:	9105      	str	r1, [sp, #20]
90027026:	9805      	ldr	r0, [sp, #20]
90027028:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
9002702c:	4403      	add	r3, r0
9002702e:	fb01 2303 	mla	r3, r1, r3, r2
90027032:	fb93 f3f8 	sdiv	r3, r3, r8
90027036:	441e      	add	r6, r3
90027038:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
9002703c:	441a      	add	r2, r3
9002703e:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
90027042:	4419      	add	r1, r3
90027044:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
90027048:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
9002704c:	9303      	str	r3, [sp, #12]
9002704e:	4b89      	ldr	r3, [pc, #548]	; (90027274 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
90027050:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
90027054:	6818      	ldr	r0, [r3, #0]
90027056:	6803      	ldr	r3, [r0, #0]
90027058:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9002705a:	4798      	blx	r3
9002705c:	4a86      	ldr	r2, [pc, #536]	; (90027278 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
9002705e:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
90027062:	2fff      	cmp	r7, #255	; 0xff
90027064:	8813      	ldrh	r3, [r2, #0]
90027066:	4694      	mov	ip, r2
90027068:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	; 0x30
9002706c:	fb03 9404 	mla	r4, r3, r4, r9
90027070:	fb03 f30b 	mul.w	r3, r3, fp
90027074:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90027078:	d071      	beq.n	9002715e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18e>
9002707a:	43f9      	mvns	r1, r7
9002707c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90027080:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
90027084:	b2c9      	uxtb	r1, r1
90027086:	e9cd 3207 	strd	r3, r2, [sp, #28]
9002708a:	9104      	str	r1, [sp, #16]
9002708c:	9b07      	ldr	r3, [sp, #28]
9002708e:	42a3      	cmp	r3, r4
90027090:	f240 80e7 	bls.w	90027262 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
90027094:	9b06      	ldr	r3, [sp, #24]
90027096:	2b00      	cmp	r3, #0
90027098:	d03d      	beq.n	90027116 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x146>
9002709a:	7831      	ldrb	r1, [r6, #0]
9002709c:	4650      	mov	r0, sl
9002709e:	9b04      	ldr	r3, [sp, #16]
900270a0:	f106 0801 	add.w	r8, r6, #1
900270a4:	f001 010f 	and.w	r1, r1, #15
900270a8:	8822      	ldrh	r2, [r4, #0]
900270aa:	9300      	str	r3, [sp, #0]
900270ac:	463b      	mov	r3, r7
900270ae:	eb01 0141 	add.w	r1, r1, r1, lsl #1
900270b2:	4429      	add	r1, r5
900270b4:	f7ff ff56 	bl	90026f64 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
900270b8:	9b03      	ldr	r3, [sp, #12]
900270ba:	f824 0b02 	strh.w	r0, [r4], #2
900270be:	f103 3bff 	add.w	fp, r3, #4294967295
900270c2:	f1bb 0f01 	cmp.w	fp, #1
900270c6:	46a1      	mov	r9, r4
900270c8:	f104 0404 	add.w	r4, r4, #4
900270cc:	dd27      	ble.n	9002711e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14e>
900270ce:	f898 1000 	ldrb.w	r1, [r8]
900270d2:	4650      	mov	r0, sl
900270d4:	9b04      	ldr	r3, [sp, #16]
900270d6:	f1ab 0b02 	sub.w	fp, fp, #2
900270da:	0909      	lsrs	r1, r1, #4
900270dc:	f834 2c04 	ldrh.w	r2, [r4, #-4]
900270e0:	9300      	str	r3, [sp, #0]
900270e2:	463b      	mov	r3, r7
900270e4:	eb01 0141 	add.w	r1, r1, r1, lsl #1
900270e8:	4429      	add	r1, r5
900270ea:	f7ff ff3b 	bl	90026f64 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
900270ee:	f824 0c04 	strh.w	r0, [r4, #-4]
900270f2:	f818 1b01 	ldrb.w	r1, [r8], #1
900270f6:	4650      	mov	r0, sl
900270f8:	9b04      	ldr	r3, [sp, #16]
900270fa:	f001 010f 	and.w	r1, r1, #15
900270fe:	f834 2c02 	ldrh.w	r2, [r4, #-2]
90027102:	9300      	str	r3, [sp, #0]
90027104:	463b      	mov	r3, r7
90027106:	eb01 0141 	add.w	r1, r1, r1, lsl #1
9002710a:	4429      	add	r1, r5
9002710c:	f7ff ff2a 	bl	90026f64 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
90027110:	f824 0c02 	strh.w	r0, [r4, #-2]
90027114:	e7d5      	b.n	900270c2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
90027116:	46b0      	mov	r8, r6
90027118:	f8dd b00c 	ldr.w	fp, [sp, #12]
9002711c:	e7d1      	b.n	900270c2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
9002711e:	d10f      	bne.n	90027140 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x170>
90027120:	f898 1000 	ldrb.w	r1, [r8]
90027124:	4650      	mov	r0, sl
90027126:	9b04      	ldr	r3, [sp, #16]
90027128:	0909      	lsrs	r1, r1, #4
9002712a:	f8b9 2000 	ldrh.w	r2, [r9]
9002712e:	9300      	str	r3, [sp, #0]
90027130:	463b      	mov	r3, r7
90027132:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90027136:	4429      	add	r1, r5
90027138:	f7ff ff14 	bl	90026f64 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
9002713c:	f829 0b02 	strh.w	r0, [r9], #2
90027140:	9b08      	ldr	r3, [sp, #32]
90027142:	9a05      	ldr	r2, [sp, #20]
90027144:	881c      	ldrh	r4, [r3, #0]
90027146:	9b03      	ldr	r3, [sp, #12]
90027148:	1ae4      	subs	r4, r4, r3
9002714a:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
9002714e:	4413      	add	r3, r2
90027150:	9a09      	ldr	r2, [sp, #36]	; 0x24
90027152:	eb09 0444 	add.w	r4, r9, r4, lsl #1
90027156:	fb93 f3f2 	sdiv	r3, r3, r2
9002715a:	441e      	add	r6, r3
9002715c:	e796      	b.n	9002708c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbc>
9002715e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90027162:	4f46      	ldr	r7, [pc, #280]	; (9002727c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
90027164:	42a3      	cmp	r3, r4
90027166:	d97c      	bls.n	90027262 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
90027168:	9a06      	ldr	r2, [sp, #24]
9002716a:	2a00      	cmp	r2, #0
9002716c:	d054      	beq.n	90027218 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x248>
9002716e:	7830      	ldrb	r0, [r6, #0]
90027170:	1c71      	adds	r1, r6, #1
90027172:	f000 000f 	and.w	r0, r0, #15
90027176:	eb00 0040 	add.w	r0, r0, r0, lsl #1
9002717a:	eb05 0e00 	add.w	lr, r5, r0
9002717e:	5c28      	ldrb	r0, [r5, r0]
90027180:	f89e 2002 	ldrb.w	r2, [lr, #2]
90027184:	f89e e001 	ldrb.w	lr, [lr, #1]
90027188:	ea07 2202 	and.w	r2, r7, r2, lsl #8
9002718c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90027190:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
90027194:	ea42 020e 	orr.w	r2, r2, lr
90027198:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
9002719c:	f824 2b02 	strh.w	r2, [r4], #2
900271a0:	9a03      	ldr	r2, [sp, #12]
900271a2:	f102 3eff 	add.w	lr, r2, #4294967295
900271a6:	f1be 0f01 	cmp.w	lr, #1
900271aa:	4620      	mov	r0, r4
900271ac:	f104 0404 	add.w	r4, r4, #4
900271b0:	dd36      	ble.n	90027220 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x250>
900271b2:	7808      	ldrb	r0, [r1, #0]
900271b4:	f1ae 0e02 	sub.w	lr, lr, #2
900271b8:	0900      	lsrs	r0, r0, #4
900271ba:	eb00 0040 	add.w	r0, r0, r0, lsl #1
900271be:	eb05 0a00 	add.w	sl, r5, r0
900271c2:	f89a 2001 	ldrb.w	r2, [sl, #1]
900271c6:	f89a 9002 	ldrb.w	r9, [sl, #2]
900271ca:	00d2      	lsls	r2, r2, #3
900271cc:	ea07 2909 	and.w	r9, r7, r9, lsl #8
900271d0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
900271d4:	ea49 0202 	orr.w	r2, r9, r2
900271d8:	f815 9000 	ldrb.w	r9, [r5, r0]
900271dc:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
900271e0:	f824 2c04 	strh.w	r2, [r4, #-4]
900271e4:	f811 0b01 	ldrb.w	r0, [r1], #1
900271e8:	f000 000f 	and.w	r0, r0, #15
900271ec:	eb00 0040 	add.w	r0, r0, r0, lsl #1
900271f0:	eb05 0a00 	add.w	sl, r5, r0
900271f4:	f89a 2001 	ldrb.w	r2, [sl, #1]
900271f8:	f89a 9002 	ldrb.w	r9, [sl, #2]
900271fc:	00d2      	lsls	r2, r2, #3
900271fe:	ea07 2909 	and.w	r9, r7, r9, lsl #8
90027202:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90027206:	ea49 0202 	orr.w	r2, r9, r2
9002720a:	f815 9000 	ldrb.w	r9, [r5, r0]
9002720e:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
90027212:	f824 2c02 	strh.w	r2, [r4, #-2]
90027216:	e7c6      	b.n	900271a6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
90027218:	4631      	mov	r1, r6
9002721a:	f8dd e00c 	ldr.w	lr, [sp, #12]
9002721e:	e7c2      	b.n	900271a6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
90027220:	d111      	bne.n	90027246 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
90027222:	7809      	ldrb	r1, [r1, #0]
90027224:	0909      	lsrs	r1, r1, #4
90027226:	eb01 0141 	add.w	r1, r1, r1, lsl #1
9002722a:	186c      	adds	r4, r5, r1
9002722c:	5c69      	ldrb	r1, [r5, r1]
9002722e:	78a2      	ldrb	r2, [r4, #2]
90027230:	7864      	ldrb	r4, [r4, #1]
90027232:	ea07 2202 	and.w	r2, r7, r2, lsl #8
90027236:	00e4      	lsls	r4, r4, #3
90027238:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
9002723c:	4322      	orrs	r2, r4
9002723e:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
90027242:	f820 2b02 	strh.w	r2, [r0], #2
90027246:	9a03      	ldr	r2, [sp, #12]
90027248:	f8bc 4000 	ldrh.w	r4, [ip]
9002724c:	9905      	ldr	r1, [sp, #20]
9002724e:	1aa4      	subs	r4, r4, r2
90027250:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
90027254:	440a      	add	r2, r1
90027256:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9002725a:	fb92 f2f8 	sdiv	r2, r2, r8
9002725e:	4416      	add	r6, r2
90027260:	e780      	b.n	90027164 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x194>
90027262:	4b04      	ldr	r3, [pc, #16]	; (90027274 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
90027264:	6818      	ldr	r0, [r3, #0]
90027266:	6803      	ldr	r3, [r0, #0]
90027268:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9002726a:	4798      	blx	r3
9002726c:	b00f      	add	sp, #60	; 0x3c
9002726e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90027272:	bf00      	nop
90027274:	24039834 	.word	0x24039834
90027278:	2403982e 	.word	0x2403982e
9002727c:	fffff800 	.word	0xfffff800

90027280 <CRC_Lock>:
90027280:	4a20      	ldr	r2, [pc, #128]	; (90027304 <CRC_Lock+0x84>)
90027282:	b530      	push	{r4, r5, lr}
90027284:	6813      	ldr	r3, [r2, #0]
90027286:	f64f 74f0 	movw	r4, #65520	; 0xfff0
9002728a:	f24c 2540 	movw	r5, #49728	; 0xc240
9002728e:	f023 0301 	bic.w	r3, r3, #1
90027292:	6013      	str	r3, [r2, #0]
90027294:	4b1c      	ldr	r3, [pc, #112]	; (90027308 <CRC_Lock+0x88>)
90027296:	681a      	ldr	r2, [r3, #0]
90027298:	4022      	ands	r2, r4
9002729a:	42aa      	cmp	r2, r5
9002729c:	d005      	beq.n	900272aa <CRC_Lock+0x2a>
9002729e:	681b      	ldr	r3, [r3, #0]
900272a0:	f24c 2270 	movw	r2, #49776	; 0xc270
900272a4:	4023      	ands	r3, r4
900272a6:	4293      	cmp	r3, r2
900272a8:	d124      	bne.n	900272f4 <CRC_Lock+0x74>
900272aa:	4b18      	ldr	r3, [pc, #96]	; (9002730c <CRC_Lock+0x8c>)
900272ac:	681b      	ldr	r3, [r3, #0]
900272ae:	bb0b      	cbnz	r3, 900272f4 <CRC_Lock+0x74>
900272b0:	4b17      	ldr	r3, [pc, #92]	; (90027310 <CRC_Lock+0x90>)
900272b2:	681a      	ldr	r2, [r3, #0]
900272b4:	f3c2 020b 	ubfx	r2, r2, #0, #12
900272b8:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
900272bc:	d00d      	beq.n	900272da <CRC_Lock+0x5a>
900272be:	681a      	ldr	r2, [r3, #0]
900272c0:	f240 4483 	movw	r4, #1155	; 0x483
900272c4:	f3c2 020b 	ubfx	r2, r2, #0, #12
900272c8:	42a2      	cmp	r2, r4
900272ca:	d006      	beq.n	900272da <CRC_Lock+0x5a>
900272cc:	681b      	ldr	r3, [r3, #0]
900272ce:	f240 4285 	movw	r2, #1157	; 0x485
900272d2:	f3c3 030b 	ubfx	r3, r3, #0, #12
900272d6:	4293      	cmp	r3, r2
900272d8:	d10c      	bne.n	900272f4 <CRC_Lock+0x74>
900272da:	4b0e      	ldr	r3, [pc, #56]	; (90027314 <CRC_Lock+0x94>)
900272dc:	2201      	movs	r2, #1
900272de:	601a      	str	r2, [r3, #0]
900272e0:	681a      	ldr	r2, [r3, #0]
900272e2:	2a00      	cmp	r2, #0
900272e4:	d1fc      	bne.n	900272e0 <CRC_Lock+0x60>
900272e6:	4b0c      	ldr	r3, [pc, #48]	; (90027318 <CRC_Lock+0x98>)
900272e8:	6018      	str	r0, [r3, #0]
900272ea:	6818      	ldr	r0, [r3, #0]
900272ec:	1a43      	subs	r3, r0, r1
900272ee:	4258      	negs	r0, r3
900272f0:	4158      	adcs	r0, r3
900272f2:	bd30      	pop	{r4, r5, pc}
900272f4:	4b09      	ldr	r3, [pc, #36]	; (9002731c <CRC_Lock+0x9c>)
900272f6:	2201      	movs	r2, #1
900272f8:	601a      	str	r2, [r3, #0]
900272fa:	681a      	ldr	r2, [r3, #0]
900272fc:	2a00      	cmp	r2, #0
900272fe:	d1fc      	bne.n	900272fa <CRC_Lock+0x7a>
90027300:	4b07      	ldr	r3, [pc, #28]	; (90027320 <CRC_Lock+0xa0>)
90027302:	e7f1      	b.n	900272e8 <CRC_Lock+0x68>
90027304:	e0002000 	.word	0xe0002000
90027308:	e000ed00 	.word	0xe000ed00
9002730c:	e0042000 	.word	0xe0042000
90027310:	5c001000 	.word	0x5c001000
90027314:	58024c08 	.word	0x58024c08
90027318:	58024c00 	.word	0x58024c00
9002731c:	40023008 	.word	0x40023008
90027320:	40023000 	.word	0x40023000

90027324 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
90027324:	6101      	str	r1, [r0, #16]
90027326:	4770      	bx	lr

90027328 <_ZN8touchgfx8Gestures4tickEv>:
90027328:	7b83      	ldrb	r3, [r0, #14]
9002732a:	b14b      	cbz	r3, 90027340 <_ZN8touchgfx8Gestures4tickEv+0x18>
9002732c:	8903      	ldrh	r3, [r0, #8]
9002732e:	3301      	adds	r3, #1
90027330:	b29b      	uxth	r3, r3
90027332:	2b07      	cmp	r3, #7
90027334:	8103      	strh	r3, [r0, #8]
90027336:	bf81      	itttt	hi
90027338:	2300      	movhi	r3, #0
9002733a:	8143      	strhhi	r3, [r0, #10]
9002733c:	8183      	strhhi	r3, [r0, #12]
9002733e:	7383      	strbhi	r3, [r0, #14]
90027340:	4770      	bx	lr
	...

90027344 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
90027344:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
90027348:	4698      	mov	r8, r3
9002734a:	8883      	ldrh	r3, [r0, #4]
9002734c:	4604      	mov	r4, r0
9002734e:	4617      	mov	r7, r2
90027350:	f8ad 3006 	strh.w	r3, [sp, #6]
90027354:	eba8 0303 	sub.w	r3, r8, r3
90027358:	4a19      	ldr	r2, [pc, #100]	; (900273c0 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
9002735a:	460e      	mov	r6, r1
9002735c:	b21b      	sxth	r3, r3
9002735e:	88c1      	ldrh	r1, [r0, #6]
90027360:	9200      	str	r2, [sp, #0]
90027362:	2000      	movs	r0, #0
90027364:	2b00      	cmp	r3, #0
90027366:	8aa2      	ldrh	r2, [r4, #20]
90027368:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
9002736c:	bfb8      	it	lt
9002736e:	425b      	neglt	r3, r3
90027370:	f88d 0004 	strb.w	r0, [sp, #4]
90027374:	f8ad 1008 	strh.w	r1, [sp, #8]
90027378:	b21b      	sxth	r3, r3
9002737a:	f8ad 800a 	strh.w	r8, [sp, #10]
9002737e:	f8ad 500c 	strh.w	r5, [sp, #12]
90027382:	4293      	cmp	r3, r2
90027384:	dc07      	bgt.n	90027396 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x52>
90027386:	1a69      	subs	r1, r5, r1
90027388:	b209      	sxth	r1, r1
9002738a:	2900      	cmp	r1, #0
9002738c:	bfb8      	it	lt
9002738e:	4249      	neglt	r1, r1
90027390:	b209      	sxth	r1, r1
90027392:	428a      	cmp	r2, r1
90027394:	da10      	bge.n	900273b8 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x74>
90027396:	6920      	ldr	r0, [r4, #16]
90027398:	4669      	mov	r1, sp
9002739a:	eba8 0606 	sub.w	r6, r8, r6
9002739e:	1bef      	subs	r7, r5, r7
900273a0:	6803      	ldr	r3, [r0, #0]
900273a2:	685b      	ldr	r3, [r3, #4]
900273a4:	4798      	blx	r3
900273a6:	2300      	movs	r3, #0
900273a8:	2001      	movs	r0, #1
900273aa:	8166      	strh	r6, [r4, #10]
900273ac:	8123      	strh	r3, [r4, #8]
900273ae:	81a7      	strh	r7, [r4, #12]
900273b0:	f8a4 8004 	strh.w	r8, [r4, #4]
900273b4:	80e5      	strh	r5, [r4, #6]
900273b6:	73a0      	strb	r0, [r4, #14]
900273b8:	b004      	add	sp, #16
900273ba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900273be:	bf00      	nop
900273c0:	9002c034 	.word	0x9002c034

900273c4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
900273c4:	b5f0      	push	{r4, r5, r6, r7, lr}
900273c6:	461e      	mov	r6, r3
900273c8:	1e4b      	subs	r3, r1, #1
900273ca:	b085      	sub	sp, #20
900273cc:	4604      	mov	r4, r0
900273ce:	2b01      	cmp	r3, #1
900273d0:	460d      	mov	r5, r1
900273d2:	4617      	mov	r7, r2
900273d4:	d84b      	bhi.n	9002746e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
900273d6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
900273da:	1cd3      	adds	r3, r2, #3
900273dc:	b29b      	uxth	r3, r3
900273de:	2b06      	cmp	r3, #6
900273e0:	d916      	bls.n	90027410 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
900273e2:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 90027484 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
900273e6:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
900273ea:	f8cd c004 	str.w	ip, [sp, #4]
900273ee:	f04f 0c00 	mov.w	ip, #0
900273f2:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
900273f6:	6900      	ldr	r0, [r0, #16]
900273f8:	f8ad 100c 	strh.w	r1, [sp, #12]
900273fc:	a901      	add	r1, sp, #4
900273fe:	f88d c008 	strb.w	ip, [sp, #8]
90027402:	f8ad 200a 	strh.w	r2, [sp, #10]
90027406:	f8ad 300e 	strh.w	r3, [sp, #14]
9002740a:	6803      	ldr	r3, [r0, #0]
9002740c:	689b      	ldr	r3, [r3, #8]
9002740e:	4798      	blx	r3
90027410:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
90027414:	1cd3      	adds	r3, r2, #3
90027416:	b29b      	uxth	r3, r3
90027418:	2b06      	cmp	r3, #6
9002741a:	d916      	bls.n	9002744a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
9002741c:	f8df c064 	ldr.w	ip, [pc, #100]	; 90027484 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
90027420:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90027424:	f8cd c004 	str.w	ip, [sp, #4]
90027428:	f04f 0c01 	mov.w	ip, #1
9002742c:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
90027430:	6920      	ldr	r0, [r4, #16]
90027432:	f8ad 100c 	strh.w	r1, [sp, #12]
90027436:	a901      	add	r1, sp, #4
90027438:	f88d c008 	strb.w	ip, [sp, #8]
9002743c:	f8ad 200a 	strh.w	r2, [sp, #10]
90027440:	f8ad 300e 	strh.w	r3, [sp, #14]
90027444:	6803      	ldr	r3, [r0, #0]
90027446:	689b      	ldr	r3, [r3, #8]
90027448:	4798      	blx	r3
9002744a:	4b0d      	ldr	r3, [pc, #52]	; (90027480 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
9002744c:	a901      	add	r1, sp, #4
9002744e:	6920      	ldr	r0, [r4, #16]
90027450:	9301      	str	r3, [sp, #4]
90027452:	2300      	movs	r3, #0
90027454:	f88d 5008 	strb.w	r5, [sp, #8]
90027458:	f8ad 700a 	strh.w	r7, [sp, #10]
9002745c:	f8ad 600c 	strh.w	r6, [sp, #12]
90027460:	f8ad 300e 	strh.w	r3, [sp, #14]
90027464:	6803      	ldr	r3, [r0, #0]
90027466:	681b      	ldr	r3, [r3, #0]
90027468:	4798      	blx	r3
9002746a:	b005      	add	sp, #20
9002746c:	bdf0      	pop	{r4, r5, r6, r7, pc}
9002746e:	2900      	cmp	r1, #0
90027470:	d1eb      	bne.n	9002744a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
90027472:	80a2      	strh	r2, [r4, #4]
90027474:	80c6      	strh	r6, [r0, #6]
90027476:	60a1      	str	r1, [r4, #8]
90027478:	81a1      	strh	r1, [r4, #12]
9002747a:	73a1      	strb	r1, [r4, #14]
9002747c:	e7e5      	b.n	9002744a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
9002747e:	bf00      	nop
90027480:	9002c020 	.word	0x9002c020
90027484:	9002c048 	.word	0x9002c048

90027488 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>:
90027488:	10c9      	asrs	r1, r1, #3
9002748a:	2900      	cmp	r1, #0
9002748c:	bfb8      	it	lt
9002748e:	4249      	neglt	r1, r1
90027490:	2801      	cmp	r0, #1
90027492:	d108      	bne.n	900274a6 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
90027494:	f3c1 0008 	ubfx	r0, r1, #0, #9
90027498:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
9002749c:	4601      	mov	r1, r0
9002749e:	dd02      	ble.n	900274a6 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
900274a0:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
900274a4:	4770      	bx	lr
900274a6:	29ff      	cmp	r1, #255	; 0xff
900274a8:	bfa8      	it	ge
900274aa:	21ff      	movge	r1, #255	; 0xff
900274ac:	4608      	mov	r0, r1
900274ae:	4770      	bx	lr

900274b0 <_ZN8touchgfx10Rasterizer6lineToEii>:
900274b0:	b410      	push	{r4}
900274b2:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
900274b6:	429c      	cmp	r4, r3
900274b8:	d803      	bhi.n	900274c2 <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
900274ba:	f85d 4b04 	ldr.w	r4, [sp], #4
900274be:	f7ed bb45 	b.w	90014b4c <_ZN8touchgfx7Outline6lineToEii>
900274c2:	f85d 4b04 	ldr.w	r4, [sp], #4
900274c6:	4770      	bx	lr

900274c8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
900274c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900274cc:	b08b      	sub	sp, #44	; 0x2c
900274ce:	4606      	mov	r6, r0
900274d0:	468a      	mov	sl, r1
900274d2:	e9cd 2306 	strd	r2, r3, [sp, #24]
900274d6:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
900274da:	9308      	str	r3, [sp, #32]
900274dc:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
900274e0:	9309      	str	r3, [sp, #36]	; 0x24
900274e2:	f7ed fc9e 	bl	90014e22 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
900274e6:	68b5      	ldr	r5, [r6, #8]
900274e8:	4604      	mov	r4, r0
900274ea:	2d00      	cmp	r5, #0
900274ec:	d044      	beq.n	90027578 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
900274ee:	6873      	ldr	r3, [r6, #4]
900274f0:	42ab      	cmp	r3, r5
900274f2:	d33d      	bcc.n	90027570 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
900274f4:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
900274f8:	f04f 0800 	mov.w	r8, #0
900274fc:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
90027500:	eb02 0b03 	add.w	fp, r2, r3
90027504:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
90027508:	fb02 1203 	mla	r2, r2, r3, r1
9002750c:	9205      	str	r2, [sp, #20]
9002750e:	1e6a      	subs	r2, r5, #1
90027510:	9204      	str	r2, [sp, #16]
90027512:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
90027516:	f9b4 7000 	ldrsh.w	r7, [r4]
9002751a:	454b      	cmp	r3, r9
9002751c:	463a      	mov	r2, r7
9002751e:	d008      	beq.n	90027532 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
90027520:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
90027524:	eb03 0b09 	add.w	fp, r3, r9
90027528:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
9002752c:	fb03 1309 	mla	r3, r3, r9, r1
90027530:	9305      	str	r3, [sp, #20]
90027532:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
90027536:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
9002753a:	4498      	add	r8, r3
9002753c:	9b04      	ldr	r3, [sp, #16]
9002753e:	3b01      	subs	r3, #1
90027540:	9304      	str	r3, [sp, #16]
90027542:	9b04      	ldr	r3, [sp, #16]
90027544:	3301      	adds	r3, #1
90027546:	d015      	beq.n	90027574 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
90027548:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
9002754c:	42bb      	cmp	r3, r7
9002754e:	d117      	bne.n	90027580 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
90027550:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
90027554:	9b04      	ldr	r3, [sp, #16]
90027556:	4548      	cmp	r0, r9
90027558:	f103 33ff 	add.w	r3, r3, #4294967295
9002755c:	d17d      	bne.n	9002765a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x192>
9002755e:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
90027562:	4401      	add	r1, r0
90027564:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
90027568:	4480      	add	r8, r0
9002756a:	e7e9      	b.n	90027540 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
9002756c:	461f      	mov	r7, r3
9002756e:	e042      	b.n	900275f6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x12e>
90027570:	2000      	movs	r0, #0
90027572:	e002      	b.n	9002757a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
90027574:	2900      	cmp	r1, #0
90027576:	d16d      	bne.n	90027654 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
90027578:	2001      	movs	r0, #1
9002757a:	b00b      	add	sp, #44	; 0x2c
9002757c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90027580:	b379      	cbz	r1, 900275e2 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11a>
90027582:	2f00      	cmp	r7, #0
90027584:	db29      	blt.n	900275da <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
90027586:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
9002758a:	42bb      	cmp	r3, r7
9002758c:	dd25      	ble.n	900275da <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
9002758e:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
90027592:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
90027596:	f7ff ff77 	bl	90027488 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
9002759a:	9b09      	ldr	r3, [sp, #36]	; 0x24
9002759c:	fb10 f003 	smulbb	r0, r0, r3
900275a0:	b280      	uxth	r0, r0
900275a2:	1c41      	adds	r1, r0, #1
900275a4:	eb01 2110 	add.w	r1, r1, r0, lsr #8
900275a8:	1209      	asrs	r1, r1, #8
900275aa:	f011 0fff 	tst.w	r1, #255	; 0xff
900275ae:	d014      	beq.n	900275da <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
900275b0:	b2c9      	uxtb	r1, r1
900275b2:	9808      	ldr	r0, [sp, #32]
900275b4:	b2ba      	uxth	r2, r7
900275b6:	8e73      	ldrh	r3, [r6, #50]	; 0x32
900275b8:	9102      	str	r1, [sp, #8]
900275ba:	2101      	movs	r1, #1
900275bc:	4413      	add	r3, r2
900275be:	4402      	add	r2, r0
900275c0:	9101      	str	r1, [sp, #4]
900275c2:	fa0f f18b 	sxth.w	r1, fp
900275c6:	f8da 0000 	ldr.w	r0, [sl]
900275ca:	b21b      	sxth	r3, r3
900275cc:	9100      	str	r1, [sp, #0]
900275ce:	b212      	sxth	r2, r2
900275d0:	6941      	ldr	r1, [r0, #20]
900275d2:	4650      	mov	r0, sl
900275d4:	460d      	mov	r5, r1
900275d6:	9905      	ldr	r1, [sp, #20]
900275d8:	47a8      	blx	r5
900275da:	9b04      	ldr	r3, [sp, #16]
900275dc:	1c7a      	adds	r2, r7, #1
900275de:	3301      	adds	r3, #1
900275e0:	d0ca      	beq.n	90027578 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
900275e2:	f9b4 7000 	ldrsh.w	r7, [r4]
900275e6:	1abb      	subs	r3, r7, r2
900275e8:	2b00      	cmp	r3, #0
900275ea:	dd31      	ble.n	90027650 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
900275ec:	2a00      	cmp	r2, #0
900275ee:	dabd      	bge.n	9002756c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
900275f0:	2f00      	cmp	r7, #0
900275f2:	dd2d      	ble.n	90027650 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
900275f4:	2200      	movs	r2, #0
900275f6:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
900275fa:	19d1      	adds	r1, r2, r7
900275fc:	4299      	cmp	r1, r3
900275fe:	db02      	blt.n	90027606 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x13e>
90027600:	1a9f      	subs	r7, r3, r2
90027602:	2f00      	cmp	r7, #0
90027604:	dd24      	ble.n	90027650 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
90027606:	ea4f 1188 	mov.w	r1, r8, lsl #6
9002760a:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
9002760e:	f7ff ff3b 	bl	90027488 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
90027612:	9b09      	ldr	r3, [sp, #36]	; 0x24
90027614:	fb10 f003 	smulbb	r0, r0, r3
90027618:	b280      	uxth	r0, r0
9002761a:	1c41      	adds	r1, r0, #1
9002761c:	eb01 2110 	add.w	r1, r1, r0, lsr #8
90027620:	1209      	asrs	r1, r1, #8
90027622:	f011 0fff 	tst.w	r1, #255	; 0xff
90027626:	d013      	beq.n	90027650 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
90027628:	b292      	uxth	r2, r2
9002762a:	9808      	ldr	r0, [sp, #32]
9002762c:	b2c9      	uxtb	r1, r1
9002762e:	8e73      	ldrh	r3, [r6, #50]	; 0x32
90027630:	b23f      	sxth	r7, r7
90027632:	4413      	add	r3, r2
90027634:	9102      	str	r1, [sp, #8]
90027636:	4402      	add	r2, r0
90027638:	fa0f f18b 	sxth.w	r1, fp
9002763c:	f8da 0000 	ldr.w	r0, [sl]
90027640:	b21b      	sxth	r3, r3
90027642:	9100      	str	r1, [sp, #0]
90027644:	b212      	sxth	r2, r2
90027646:	9701      	str	r7, [sp, #4]
90027648:	9905      	ldr	r1, [sp, #20]
9002764a:	6947      	ldr	r7, [r0, #20]
9002764c:	4650      	mov	r0, sl
9002764e:	47b8      	blx	r7
90027650:	464b      	mov	r3, r9
90027652:	e75e      	b.n	90027512 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
90027654:	2f00      	cmp	r7, #0
90027656:	da96      	bge.n	90027586 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbe>
90027658:	e78e      	b.n	90027578 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
9002765a:	2900      	cmp	r1, #0
9002765c:	d0f8      	beq.n	90027650 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
9002765e:	e790      	b.n	90027582 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xba>

90027660 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
90027660:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
90027664:	4b4a      	ldr	r3, [pc, #296]	; (90027790 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x130>)
90027666:	2500      	movs	r5, #0
90027668:	f100 0620 	add.w	r6, r0, #32
9002766c:	4604      	mov	r4, r0
9002766e:	4690      	mov	r8, r2
90027670:	f100 0718 	add.w	r7, r0, #24
90027674:	e9c0 3100 	strd	r3, r1, [r0]
90027678:	e9c0 5502 	strd	r5, r5, [r0, #8]
9002767c:	e9c0 5504 	strd	r5, r5, [r0, #16]
90027680:	e9c0 5506 	strd	r5, r5, [r0, #24]
90027684:	4630      	mov	r0, r6
90027686:	f7ec fda7 	bl	900141d8 <_ZN8touchgfx7OutlineC1Ev>
9002768a:	f884 5050 	strb.w	r5, [r4, #80]	; 0x50
9002768e:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
90027692:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
90027696:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
9002769a:	f884 5058 	strb.w	r5, [r4, #88]	; 0x58
9002769e:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
900276a2:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
900276a6:	f8d4 c004 	ldr.w	ip, [r4, #4]
900276aa:	9500      	str	r5, [sp, #0]
900276ac:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
900276b0:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
900276b4:	f9b8 2000 	ldrsh.w	r2, [r8]
900276b8:	f8b8 0004 	ldrh.w	r0, [r8, #4]
900276bc:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
900276c0:	4410      	add	r0, r2
900276c2:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
900276c6:	b280      	uxth	r0, r0
900276c8:	fa0f fa80 	sxth.w	sl, r0
900276cc:	45aa      	cmp	sl, r5
900276ce:	dd5c      	ble.n	9002778a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
900276d0:	4591      	cmp	r9, r2
900276d2:	dd5a      	ble.n	9002778a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
900276d4:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
900276d8:	f8b8 3006 	ldrh.w	r3, [r8, #6]
900276dc:	440b      	add	r3, r1
900276de:	b29b      	uxth	r3, r3
900276e0:	b21d      	sxth	r5, r3
900276e2:	2d00      	cmp	r5, #0
900276e4:	dd51      	ble.n	9002778a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
900276e6:	458e      	cmp	lr, r1
900276e8:	dd4f      	ble.n	9002778a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
900276ea:	45d1      	cmp	r9, sl
900276ec:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
900276f0:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
900276f4:	bfb8      	it	lt
900276f6:	fa1f f089 	uxthlt.w	r0, r9
900276fa:	45ae      	cmp	lr, r5
900276fc:	f8ad 2000 	strh.w	r2, [sp]
90027700:	bfb8      	it	lt
90027702:	fa1f f38e 	uxthlt.w	r3, lr
90027706:	1a80      	subs	r0, r0, r2
90027708:	f8ad 1002 	strh.w	r1, [sp, #2]
9002770c:	1a5b      	subs	r3, r3, r1
9002770e:	f8ad 0004 	strh.w	r0, [sp, #4]
90027712:	f8ad 3006 	strh.w	r3, [sp, #6]
90027716:	466d      	mov	r5, sp
90027718:	e895 0003 	ldmia.w	r5, {r0, r1}
9002771c:	e887 0003 	stmia.w	r7, {r0, r1}
90027720:	f8dc 3000 	ldr.w	r3, [ip]
90027724:	4660      	mov	r0, ip
90027726:	4639      	mov	r1, r7
90027728:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9002772a:	4798      	blx	r3
9002772c:	6861      	ldr	r1, [r4, #4]
9002772e:	4628      	mov	r0, r5
90027730:	3104      	adds	r1, #4
90027732:	f7ee ff45 	bl	900165c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90027736:	4638      	mov	r0, r7
90027738:	f7ee fefe 	bl	90016538 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9002773c:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
90027740:	f8bd 2000 	ldrh.w	r2, [sp]
90027744:	4630      	mov	r0, r6
90027746:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
9002774a:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
9002774e:	f7ec fd27 	bl	900141a0 <_ZN8touchgfx7Outline5resetEv>
90027752:	f9bd 3000 	ldrsh.w	r3, [sp]
90027756:	f9b4 201e 	ldrsh.w	r2, [r4, #30]
9002775a:	4620      	mov	r0, r4
9002775c:	015b      	lsls	r3, r3, #5
9002775e:	60a3      	str	r3, [r4, #8]
90027760:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
90027764:	015b      	lsls	r3, r3, #5
90027766:	60e3      	str	r3, [r4, #12]
90027768:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
9002776c:	015b      	lsls	r3, r3, #5
9002776e:	6123      	str	r3, [r4, #16]
90027770:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
90027774:	015b      	lsls	r3, r3, #5
90027776:	6163      	str	r3, [r4, #20]
90027778:	f9b4 301c 	ldrsh.w	r3, [r4, #28]
9002777c:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
90027780:	e9c4 3212 	strd	r3, r2, [r4, #72]	; 0x48
90027784:	b002      	add	sp, #8
90027786:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9002778a:	2300      	movs	r3, #0
9002778c:	9301      	str	r3, [sp, #4]
9002778e:	e7c2      	b.n	90027716 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xb6>
90027790:	9002c36c 	.word	0x9002c36c

90027794 <_ZN8touchgfx6Canvas5closeEv>:
90027794:	b538      	push	{r3, r4, r5, lr}
90027796:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
9002779a:	4604      	mov	r4, r0
9002779c:	b193      	cbz	r3, 900277c4 <_ZN8touchgfx6Canvas5closeEv+0x30>
9002779e:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
900277a2:	f890 2065 	ldrb.w	r2, [r0, #101]	; 0x65
900277a6:	4213      	tst	r3, r2
900277a8:	d10c      	bne.n	900277c4 <_ZN8touchgfx6Canvas5closeEv+0x30>
900277aa:	f100 0520 	add.w	r5, r0, #32
900277ae:	b123      	cbz	r3, 900277ba <_ZN8touchgfx6Canvas5closeEv+0x26>
900277b0:	e9d0 1217 	ldrd	r1, r2, [r0, #92]	; 0x5c
900277b4:	4628      	mov	r0, r5
900277b6:	f7ff fe7b 	bl	900274b0 <_ZN8touchgfx10Rasterizer6lineToEii>
900277ba:	4628      	mov	r0, r5
900277bc:	e9d4 121a 	ldrd	r1, r2, [r4, #104]	; 0x68
900277c0:	f7ff fe76 	bl	900274b0 <_ZN8touchgfx10Rasterizer6lineToEii>
900277c4:	2300      	movs	r3, #0
900277c6:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
900277ca:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
900277ce:	4298      	cmp	r0, r3
900277d0:	bf34      	ite	cc
900277d2:	2000      	movcc	r0, #0
900277d4:	2001      	movcs	r0, #1
900277d6:	bd38      	pop	{r3, r4, r5, pc}

900277d8 <_ZN8touchgfx6Canvas6renderEh>:
900277d8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
900277dc:	4604      	mov	r4, r0
900277de:	6840      	ldr	r0, [r0, #4]
900277e0:	460d      	mov	r5, r1
900277e2:	6803      	ldr	r3, [r0, #0]
900277e4:	6e5b      	ldr	r3, [r3, #100]	; 0x64
900277e6:	4798      	blx	r3
900277e8:	fb10 f105 	smulbb	r1, r0, r5
900277ec:	b289      	uxth	r1, r1
900277ee:	1c4d      	adds	r5, r1, #1
900277f0:	eb05 2511 	add.w	r5, r5, r1, lsr #8
900277f4:	122d      	asrs	r5, r5, #8
900277f6:	f000 809c 	beq.w	90027932 <_ZN8touchgfx6Canvas6renderEh+0x15a>
900277fa:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
900277fe:	2b00      	cmp	r3, #0
90027800:	f000 8097 	beq.w	90027932 <_ZN8touchgfx6Canvas6renderEh+0x15a>
90027804:	4620      	mov	r0, r4
90027806:	f7ff ffc5 	bl	90027794 <_ZN8touchgfx6Canvas5closeEv>
9002780a:	4607      	mov	r7, r0
9002780c:	2800      	cmp	r0, #0
9002780e:	d048      	beq.n	900278a2 <_ZN8touchgfx6Canvas6renderEh+0xca>
90027810:	6863      	ldr	r3, [r4, #4]
90027812:	4e49      	ldr	r6, [pc, #292]	; (90027938 <_ZN8touchgfx6Canvas6renderEh+0x160>)
90027814:	6a98      	ldr	r0, [r3, #40]	; 0x28
90027816:	6837      	ldr	r7, [r6, #0]
90027818:	6803      	ldr	r3, [r0, #0]
9002781a:	689b      	ldr	r3, [r3, #8]
9002781c:	4798      	blx	r3
9002781e:	4601      	mov	r1, r0
90027820:	4638      	mov	r0, r7
90027822:	f7ea fd35 	bl	90012290 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
90027826:	4607      	mov	r7, r0
90027828:	f7ea f8f6 	bl	90011a18 <_ZN8touchgfx3HAL3lcdEv>
9002782c:	6803      	ldr	r3, [r0, #0]
9002782e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90027830:	4798      	blx	r3
90027832:	4680      	mov	r8, r0
90027834:	f7ea f8f0 	bl	90011a18 <_ZN8touchgfx3HAL3lcdEv>
90027838:	6803      	ldr	r3, [r0, #0]
9002783a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9002783c:	4798      	blx	r3
9002783e:	280b      	cmp	r0, #11
90027840:	d85c      	bhi.n	900278fc <_ZN8touchgfx6Canvas6renderEh+0x124>
90027842:	e8df f000 	tbb	[pc, r0]
90027846:	5d52      	.short	0x5d52
90027848:	325b066d 	.word	0x325b066d
9002784c:	66666642 	.word	0x66666642
90027850:	6666      	.short	0x6666
90027852:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
90027856:	2208      	movs	r2, #8
90027858:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
9002785c:	fb91 f2f2 	sdiv	r2, r1, r2
90027860:	fb08 2303 	mla	r3, r8, r3, r2
90027864:	441f      	add	r7, r3
90027866:	424b      	negs	r3, r1
90027868:	f001 0107 	and.w	r1, r1, #7
9002786c:	f003 0307 	and.w	r3, r3, #7
90027870:	bf58      	it	pl
90027872:	4259      	negpl	r1, r3
90027874:	b2c9      	uxtb	r1, r1
90027876:	6860      	ldr	r0, [r4, #4]
90027878:	b2ed      	uxtb	r5, r5
9002787a:	463a      	mov	r2, r7
9002787c:	fa0f f388 	sxth.w	r3, r8
90027880:	e9cd 1500 	strd	r1, r5, [sp]
90027884:	6a81      	ldr	r1, [r0, #40]	; 0x28
90027886:	f104 0020 	add.w	r0, r4, #32
9002788a:	f7ff fe1d 	bl	900274c8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
9002788e:	6863      	ldr	r3, [r4, #4]
90027890:	4607      	mov	r7, r0
90027892:	6a98      	ldr	r0, [r3, #40]	; 0x28
90027894:	6803      	ldr	r3, [r0, #0]
90027896:	691b      	ldr	r3, [r3, #16]
90027898:	4798      	blx	r3
9002789a:	6830      	ldr	r0, [r6, #0]
9002789c:	6803      	ldr	r3, [r0, #0]
9002789e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900278a0:	4798      	blx	r3
900278a2:	4638      	mov	r0, r7
900278a4:	b002      	add	sp, #8
900278a6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900278aa:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
900278ae:	2204      	movs	r2, #4
900278b0:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
900278b4:	fb91 f2f2 	sdiv	r2, r1, r2
900278b8:	fb08 2303 	mla	r3, r8, r3, r2
900278bc:	441f      	add	r7, r3
900278be:	424b      	negs	r3, r1
900278c0:	f001 0103 	and.w	r1, r1, #3
900278c4:	f003 0303 	and.w	r3, r3, #3
900278c8:	e7d2      	b.n	90027870 <_ZN8touchgfx6Canvas6renderEh+0x98>
900278ca:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
900278ce:	2202      	movs	r2, #2
900278d0:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
900278d4:	2900      	cmp	r1, #0
900278d6:	fb91 f2f2 	sdiv	r2, r1, r2
900278da:	f001 0101 	and.w	r1, r1, #1
900278de:	fb08 2303 	mla	r3, r8, r3, r2
900278e2:	bfb8      	it	lt
900278e4:	4249      	neglt	r1, r1
900278e6:	441f      	add	r7, r3
900278e8:	e7c4      	b.n	90027874 <_ZN8touchgfx6Canvas6renderEh+0x9c>
900278ea:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
900278ee:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
900278f2:	fb08 f303 	mul.w	r3, r8, r3
900278f6:	eb03 0342 	add.w	r3, r3, r2, lsl #1
900278fa:	441f      	add	r7, r3
900278fc:	2100      	movs	r1, #0
900278fe:	e7ba      	b.n	90027876 <_ZN8touchgfx6Canvas6renderEh+0x9e>
90027900:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
90027904:	2103      	movs	r1, #3
90027906:	fb08 f203 	mul.w	r2, r8, r3
9002790a:	8b23      	ldrh	r3, [r4, #24]
9002790c:	fb13 2301 	smlabb	r3, r3, r1, r2
90027910:	e7f3      	b.n	900278fa <_ZN8touchgfx6Canvas6renderEh+0x122>
90027912:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
90027916:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
9002791a:	fb08 2303 	mla	r3, r8, r3, r2
9002791e:	e7ec      	b.n	900278fa <_ZN8touchgfx6Canvas6renderEh+0x122>
90027920:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
90027924:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
90027928:	fb08 f303 	mul.w	r3, r8, r3
9002792c:	eb03 0382 	add.w	r3, r3, r2, lsl #2
90027930:	e7e3      	b.n	900278fa <_ZN8touchgfx6Canvas6renderEh+0x122>
90027932:	2701      	movs	r7, #1
90027934:	e7b5      	b.n	900278a2 <_ZN8touchgfx6Canvas6renderEh+0xca>
90027936:	bf00      	nop
90027938:	24039834 	.word	0x24039834

9002793c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
9002793c:	4b07      	ldr	r3, [pc, #28]	; (9002795c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
9002793e:	b510      	push	{r4, lr}
90027940:	781b      	ldrb	r3, [r3, #0]
90027942:	2b01      	cmp	r3, #1
90027944:	d108      	bne.n	90027958 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
90027946:	6843      	ldr	r3, [r0, #4]
90027948:	6814      	ldr	r4, [r2, #0]
9002794a:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
9002794e:	680b      	ldr	r3, [r1, #0]
90027950:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
90027954:	6013      	str	r3, [r2, #0]
90027956:	600c      	str	r4, [r1, #0]
90027958:	bd10      	pop	{r4, pc}
9002795a:	bf00      	nop
9002795c:	2403982c 	.word	0x2403982c

90027960 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
90027960:	b513      	push	{r0, r1, r4, lr}
90027962:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
90027966:	4604      	mov	r4, r0
90027968:	e9cd 2100 	strd	r2, r1, [sp]
9002796c:	b9a3      	cbnz	r3, 90027998 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
9002796e:	466a      	mov	r2, sp
90027970:	a901      	add	r1, sp, #4
90027972:	4620      	mov	r0, r4
90027974:	f7ff ffe2 	bl	9002793c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
90027978:	68a3      	ldr	r3, [r4, #8]
9002797a:	9901      	ldr	r1, [sp, #4]
9002797c:	9a00      	ldr	r2, [sp, #0]
9002797e:	1ac9      	subs	r1, r1, r3
90027980:	68e3      	ldr	r3, [r4, #12]
90027982:	1ad2      	subs	r2, r2, r3
90027984:	9101      	str	r1, [sp, #4]
90027986:	2a00      	cmp	r2, #0
90027988:	9200      	str	r2, [sp, #0]
9002798a:	da0b      	bge.n	900279a4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
9002798c:	2301      	movs	r3, #1
9002798e:	2900      	cmp	r1, #0
90027990:	da0e      	bge.n	900279b0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
90027992:	f043 0304 	orr.w	r3, r3, #4
90027996:	e013      	b.n	900279c0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
90027998:	f7ff fefc 	bl	90027794 <_ZN8touchgfx6Canvas5closeEv>
9002799c:	2800      	cmp	r0, #0
9002799e:	d1e6      	bne.n	9002796e <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
900279a0:	b002      	add	sp, #8
900279a2:	bd10      	pop	{r4, pc}
900279a4:	6963      	ldr	r3, [r4, #20]
900279a6:	429a      	cmp	r2, r3
900279a8:	bfac      	ite	ge
900279aa:	2302      	movge	r3, #2
900279ac:	2300      	movlt	r3, #0
900279ae:	e7ee      	b.n	9002798e <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
900279b0:	6920      	ldr	r0, [r4, #16]
900279b2:	4281      	cmp	r1, r0
900279b4:	bfac      	ite	ge
900279b6:	2008      	movge	r0, #8
900279b8:	2000      	movlt	r0, #0
900279ba:	4318      	orrs	r0, r3
900279bc:	b2c3      	uxtb	r3, r0
900279be:	b158      	cbz	r0, 900279d8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
900279c0:	2200      	movs	r2, #0
900279c2:	f884 2058 	strb.w	r2, [r4, #88]	; 0x58
900279c6:	9901      	ldr	r1, [sp, #4]
900279c8:	9a00      	ldr	r2, [sp, #0]
900279ca:	66a1      	str	r1, [r4, #104]	; 0x68
900279cc:	66e2      	str	r2, [r4, #108]	; 0x6c
900279ce:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
900279d2:	e9c4 1217 	strd	r1, r2, [r4, #92]	; 0x5c
900279d6:	e7e3      	b.n	900279a0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
900279d8:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
900279dc:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
900279e0:	4298      	cmp	r0, r3
900279e2:	d803      	bhi.n	900279ec <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
900279e4:	f104 0020 	add.w	r0, r4, #32
900279e8:	f7ed f8ca 	bl	90014b80 <_ZN8touchgfx7Outline6moveToEii>
900279ec:	2301      	movs	r3, #1
900279ee:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
900279f2:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
900279f6:	2300      	movs	r3, #0
900279f8:	e7e5      	b.n	900279c6 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

900279fa <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
900279fa:	b573      	push	{r0, r1, r4, r5, r6, lr}
900279fc:	ab02      	add	r3, sp, #8
900279fe:	4604      	mov	r4, r0
90027a00:	9101      	str	r1, [sp, #4]
90027a02:	a901      	add	r1, sp, #4
90027a04:	f843 2d08 	str.w	r2, [r3, #-8]!
90027a08:	461a      	mov	r2, r3
90027a0a:	f7ff ff97 	bl	9002793c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
90027a0e:	68a3      	ldr	r3, [r4, #8]
90027a10:	9901      	ldr	r1, [sp, #4]
90027a12:	9a00      	ldr	r2, [sp, #0]
90027a14:	1ac9      	subs	r1, r1, r3
90027a16:	68e3      	ldr	r3, [r4, #12]
90027a18:	1ad2      	subs	r2, r2, r3
90027a1a:	9101      	str	r1, [sp, #4]
90027a1c:	2a00      	cmp	r2, #0
90027a1e:	9200      	str	r2, [sp, #0]
90027a20:	db1c      	blt.n	90027a5c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
90027a22:	6963      	ldr	r3, [r4, #20]
90027a24:	429a      	cmp	r2, r3
90027a26:	bfac      	ite	ge
90027a28:	2002      	movge	r0, #2
90027a2a:	2000      	movlt	r0, #0
90027a2c:	2900      	cmp	r1, #0
90027a2e:	db17      	blt.n	90027a60 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
90027a30:	6923      	ldr	r3, [r4, #16]
90027a32:	4299      	cmp	r1, r3
90027a34:	bfac      	ite	ge
90027a36:	2308      	movge	r3, #8
90027a38:	2300      	movlt	r3, #0
90027a3a:	4303      	orrs	r3, r0
90027a3c:	f894 0064 	ldrb.w	r0, [r4, #100]	; 0x64
90027a40:	b2dd      	uxtb	r5, r3
90027a42:	b978      	cbnz	r0, 90027a64 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
90027a44:	f104 0020 	add.w	r0, r4, #32
90027a48:	f7ff fd32 	bl	900274b0 <_ZN8touchgfx10Rasterizer6lineToEii>
90027a4c:	9b01      	ldr	r3, [sp, #4]
90027a4e:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
90027a52:	65e3      	str	r3, [r4, #92]	; 0x5c
90027a54:	9b00      	ldr	r3, [sp, #0]
90027a56:	6623      	str	r3, [r4, #96]	; 0x60
90027a58:	b002      	add	sp, #8
90027a5a:	bd70      	pop	{r4, r5, r6, pc}
90027a5c:	2001      	movs	r0, #1
90027a5e:	e7e5      	b.n	90027a2c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
90027a60:	2304      	movs	r3, #4
90027a62:	e7ea      	b.n	90027a3a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
90027a64:	b113      	cbz	r3, 90027a6c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
90027a66:	ea10 0305 	ands.w	r3, r0, r5
90027a6a:	d11c      	bne.n	90027aa6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
90027a6c:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
90027a70:	f104 0620 	add.w	r6, r4, #32
90027a74:	e9d4 1217 	ldrd	r1, r2, [r4, #92]	; 0x5c
90027a78:	b98b      	cbnz	r3, 90027a9e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
90027a7a:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
90027a7e:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
90027a82:	4298      	cmp	r0, r3
90027a84:	d802      	bhi.n	90027a8c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
90027a86:	4630      	mov	r0, r6
90027a88:	f7ed f87a 	bl	90014b80 <_ZN8touchgfx7Outline6moveToEii>
90027a8c:	2301      	movs	r3, #1
90027a8e:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
90027a92:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
90027a96:	4630      	mov	r0, r6
90027a98:	e9dd 2100 	ldrd	r2, r1, [sp]
90027a9c:	e7d4      	b.n	90027a48 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
90027a9e:	4630      	mov	r0, r6
90027aa0:	f7ff fd06 	bl	900274b0 <_ZN8touchgfx10Rasterizer6lineToEii>
90027aa4:	e7f7      	b.n	90027a96 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
90027aa6:	461d      	mov	r5, r3
90027aa8:	e7d0      	b.n	90027a4c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

90027aac <_ZN8touchgfx6CanvasD1Ev>:
90027aac:	4b04      	ldr	r3, [pc, #16]	; (90027ac0 <_ZN8touchgfx6CanvasD1Ev+0x14>)
90027aae:	b510      	push	{r4, lr}
90027ab0:	4604      	mov	r4, r0
90027ab2:	f840 3b20 	str.w	r3, [r0], #32
90027ab6:	f7ec fb6b 	bl	90014190 <_ZN8touchgfx7OutlineD1Ev>
90027aba:	4620      	mov	r0, r4
90027abc:	bd10      	pop	{r4, pc}
90027abe:	bf00      	nop
90027ac0:	9002c36c 	.word	0x9002c36c

90027ac4 <_ZN8touchgfx6CanvasD0Ev>:
90027ac4:	b510      	push	{r4, lr}
90027ac6:	4604      	mov	r4, r0
90027ac8:	f7ff fff0 	bl	90027aac <_ZN8touchgfx6CanvasD1Ev>
90027acc:	2170      	movs	r1, #112	; 0x70
90027ace:	4620      	mov	r0, r4
90027ad0:	f000 f826 	bl	90027b20 <_ZdlPvj>
90027ad4:	4620      	mov	r0, r4
90027ad6:	bd10      	pop	{r4, pc}

90027ad8 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
90027ad8:	790b      	ldrb	r3, [r1, #4]
90027ada:	2b00      	cmp	r3, #0
90027adc:	bf0c      	ite	eq
90027ade:	2301      	moveq	r3, #1
90027ae0:	2300      	movne	r3, #0
90027ae2:	b570      	push	{r4, r5, r6, lr}
90027ae4:	4604      	mov	r4, r0
90027ae6:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
90027aea:	460e      	mov	r6, r1
90027aec:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
90027af0:	d109      	bne.n	90027b06 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
90027af2:	b14d      	cbz	r5, 90027b08 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
90027af4:	7933      	ldrb	r3, [r6, #4]
90027af6:	2b01      	cmp	r3, #1
90027af8:	d10c      	bne.n	90027b14 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
90027afa:	6823      	ldr	r3, [r4, #0]
90027afc:	4620      	mov	r0, r4
90027afe:	6e1b      	ldr	r3, [r3, #96]	; 0x60
90027b00:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90027b04:	4718      	bx	r3
90027b06:	b12d      	cbz	r5, 90027b14 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
90027b08:	6823      	ldr	r3, [r4, #0]
90027b0a:	4620      	mov	r0, r4
90027b0c:	695b      	ldr	r3, [r3, #20]
90027b0e:	4798      	blx	r3
90027b10:	2d00      	cmp	r5, #0
90027b12:	d1ef      	bne.n	90027af4 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
90027b14:	bd70      	pop	{r4, r5, r6, pc}

90027b16 <__aeabi_atexit>:
90027b16:	460b      	mov	r3, r1
90027b18:	4601      	mov	r1, r0
90027b1a:	4618      	mov	r0, r3
90027b1c:	f000 b90e 	b.w	90027d3c <__cxa_atexit>

90027b20 <_ZdlPvj>:
90027b20:	f000 b812 	b.w	90027b48 <_ZdlPv>

90027b24 <__cxa_guard_acquire>:
90027b24:	6803      	ldr	r3, [r0, #0]
90027b26:	07db      	lsls	r3, r3, #31
90027b28:	d406      	bmi.n	90027b38 <__cxa_guard_acquire+0x14>
90027b2a:	7843      	ldrb	r3, [r0, #1]
90027b2c:	b103      	cbz	r3, 90027b30 <__cxa_guard_acquire+0xc>
90027b2e:	deff      	udf	#255	; 0xff
90027b30:	2301      	movs	r3, #1
90027b32:	7043      	strb	r3, [r0, #1]
90027b34:	4618      	mov	r0, r3
90027b36:	4770      	bx	lr
90027b38:	2000      	movs	r0, #0
90027b3a:	4770      	bx	lr

90027b3c <__cxa_guard_release>:
90027b3c:	2301      	movs	r3, #1
90027b3e:	6003      	str	r3, [r0, #0]
90027b40:	4770      	bx	lr

90027b42 <__cxa_pure_virtual>:
90027b42:	b508      	push	{r3, lr}
90027b44:	f000 f80e 	bl	90027b64 <_ZSt9terminatev>

90027b48 <_ZdlPv>:
90027b48:	f000 b844 	b.w	90027bd4 <free>

90027b4c <_ZN10__cxxabiv111__terminateEPFvvE>:
90027b4c:	b508      	push	{r3, lr}
90027b4e:	4780      	blx	r0
90027b50:	f000 f80d 	bl	90027b6e <abort>

90027b54 <_ZSt13get_terminatev>:
90027b54:	4b02      	ldr	r3, [pc, #8]	; (90027b60 <_ZSt13get_terminatev+0xc>)
90027b56:	6818      	ldr	r0, [r3, #0]
90027b58:	f3bf 8f5b 	dmb	ish
90027b5c:	4770      	bx	lr
90027b5e:	bf00      	nop
90027b60:	240000fc 	.word	0x240000fc

90027b64 <_ZSt9terminatev>:
90027b64:	b508      	push	{r3, lr}
90027b66:	f7ff fff5 	bl	90027b54 <_ZSt13get_terminatev>
90027b6a:	f7ff ffef 	bl	90027b4c <_ZN10__cxxabiv111__terminateEPFvvE>

90027b6e <abort>:
90027b6e:	b508      	push	{r3, lr}
90027b70:	2006      	movs	r0, #6
90027b72:	f000 facd 	bl	90028110 <raise>
90027b76:	2001      	movs	r0, #1
90027b78:	f7db fcbc 	bl	900034f4 <_exit>

90027b7c <__assert_func>:
90027b7c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
90027b7e:	4614      	mov	r4, r2
90027b80:	461a      	mov	r2, r3
90027b82:	4b09      	ldr	r3, [pc, #36]	; (90027ba8 <__assert_func+0x2c>)
90027b84:	681b      	ldr	r3, [r3, #0]
90027b86:	4605      	mov	r5, r0
90027b88:	68d8      	ldr	r0, [r3, #12]
90027b8a:	b14c      	cbz	r4, 90027ba0 <__assert_func+0x24>
90027b8c:	4b07      	ldr	r3, [pc, #28]	; (90027bac <__assert_func+0x30>)
90027b8e:	9100      	str	r1, [sp, #0]
90027b90:	e9cd 3401 	strd	r3, r4, [sp, #4]
90027b94:	4906      	ldr	r1, [pc, #24]	; (90027bb0 <__assert_func+0x34>)
90027b96:	462b      	mov	r3, r5
90027b98:	f000 f970 	bl	90027e7c <fiprintf>
90027b9c:	f7ff ffe7 	bl	90027b6e <abort>
90027ba0:	4b04      	ldr	r3, [pc, #16]	; (90027bb4 <__assert_func+0x38>)
90027ba2:	461c      	mov	r4, r3
90027ba4:	e7f3      	b.n	90027b8e <__assert_func+0x12>
90027ba6:	bf00      	nop
90027ba8:	24000158 	.word	0x24000158
90027bac:	9002c378 	.word	0x9002c378
90027bb0:	9002c385 	.word	0x9002c385
90027bb4:	9002c3b3 	.word	0x9002c3b3

90027bb8 <atexit>:
90027bb8:	2300      	movs	r3, #0
90027bba:	4601      	mov	r1, r0
90027bbc:	461a      	mov	r2, r3
90027bbe:	4618      	mov	r0, r3
90027bc0:	f000 bb52 	b.w	90028268 <__register_exitproc>

90027bc4 <malloc>:
90027bc4:	4b02      	ldr	r3, [pc, #8]	; (90027bd0 <malloc+0xc>)
90027bc6:	4601      	mov	r1, r0
90027bc8:	6818      	ldr	r0, [r3, #0]
90027bca:	f000 b82b 	b.w	90027c24 <_malloc_r>
90027bce:	bf00      	nop
90027bd0:	24000158 	.word	0x24000158

90027bd4 <free>:
90027bd4:	4b02      	ldr	r3, [pc, #8]	; (90027be0 <free+0xc>)
90027bd6:	4601      	mov	r1, r0
90027bd8:	6818      	ldr	r0, [r3, #0]
90027bda:	f000 bba3 	b.w	90028324 <_free_r>
90027bde:	bf00      	nop
90027be0:	24000158 	.word	0x24000158

90027be4 <sbrk_aligned>:
90027be4:	b570      	push	{r4, r5, r6, lr}
90027be6:	4e0e      	ldr	r6, [pc, #56]	; (90027c20 <sbrk_aligned+0x3c>)
90027be8:	460c      	mov	r4, r1
90027bea:	6831      	ldr	r1, [r6, #0]
90027bec:	4605      	mov	r5, r0
90027bee:	b911      	cbnz	r1, 90027bf6 <sbrk_aligned+0x12>
90027bf0:	f000 fade 	bl	900281b0 <_sbrk_r>
90027bf4:	6030      	str	r0, [r6, #0]
90027bf6:	4621      	mov	r1, r4
90027bf8:	4628      	mov	r0, r5
90027bfa:	f000 fad9 	bl	900281b0 <_sbrk_r>
90027bfe:	1c43      	adds	r3, r0, #1
90027c00:	d00a      	beq.n	90027c18 <sbrk_aligned+0x34>
90027c02:	1cc4      	adds	r4, r0, #3
90027c04:	f024 0403 	bic.w	r4, r4, #3
90027c08:	42a0      	cmp	r0, r4
90027c0a:	d007      	beq.n	90027c1c <sbrk_aligned+0x38>
90027c0c:	1a21      	subs	r1, r4, r0
90027c0e:	4628      	mov	r0, r5
90027c10:	f000 face 	bl	900281b0 <_sbrk_r>
90027c14:	3001      	adds	r0, #1
90027c16:	d101      	bne.n	90027c1c <sbrk_aligned+0x38>
90027c18:	f04f 34ff 	mov.w	r4, #4294967295
90027c1c:	4620      	mov	r0, r4
90027c1e:	bd70      	pop	{r4, r5, r6, pc}
90027c20:	2403a18c 	.word	0x2403a18c

90027c24 <_malloc_r>:
90027c24:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
90027c28:	1ccd      	adds	r5, r1, #3
90027c2a:	f025 0503 	bic.w	r5, r5, #3
90027c2e:	3508      	adds	r5, #8
90027c30:	2d0c      	cmp	r5, #12
90027c32:	bf38      	it	cc
90027c34:	250c      	movcc	r5, #12
90027c36:	2d00      	cmp	r5, #0
90027c38:	4607      	mov	r7, r0
90027c3a:	db01      	blt.n	90027c40 <_malloc_r+0x1c>
90027c3c:	42a9      	cmp	r1, r5
90027c3e:	d905      	bls.n	90027c4c <_malloc_r+0x28>
90027c40:	230c      	movs	r3, #12
90027c42:	603b      	str	r3, [r7, #0]
90027c44:	2600      	movs	r6, #0
90027c46:	4630      	mov	r0, r6
90027c48:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
90027c4c:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 90027d20 <_malloc_r+0xfc>
90027c50:	f000 f868 	bl	90027d24 <__malloc_lock>
90027c54:	f8d8 3000 	ldr.w	r3, [r8]
90027c58:	461c      	mov	r4, r3
90027c5a:	bb5c      	cbnz	r4, 90027cb4 <_malloc_r+0x90>
90027c5c:	4629      	mov	r1, r5
90027c5e:	4638      	mov	r0, r7
90027c60:	f7ff ffc0 	bl	90027be4 <sbrk_aligned>
90027c64:	1c43      	adds	r3, r0, #1
90027c66:	4604      	mov	r4, r0
90027c68:	d155      	bne.n	90027d16 <_malloc_r+0xf2>
90027c6a:	f8d8 4000 	ldr.w	r4, [r8]
90027c6e:	4626      	mov	r6, r4
90027c70:	2e00      	cmp	r6, #0
90027c72:	d145      	bne.n	90027d00 <_malloc_r+0xdc>
90027c74:	2c00      	cmp	r4, #0
90027c76:	d048      	beq.n	90027d0a <_malloc_r+0xe6>
90027c78:	6823      	ldr	r3, [r4, #0]
90027c7a:	4631      	mov	r1, r6
90027c7c:	4638      	mov	r0, r7
90027c7e:	eb04 0903 	add.w	r9, r4, r3
90027c82:	f000 fa95 	bl	900281b0 <_sbrk_r>
90027c86:	4581      	cmp	r9, r0
90027c88:	d13f      	bne.n	90027d0a <_malloc_r+0xe6>
90027c8a:	6821      	ldr	r1, [r4, #0]
90027c8c:	1a6d      	subs	r5, r5, r1
90027c8e:	4629      	mov	r1, r5
90027c90:	4638      	mov	r0, r7
90027c92:	f7ff ffa7 	bl	90027be4 <sbrk_aligned>
90027c96:	3001      	adds	r0, #1
90027c98:	d037      	beq.n	90027d0a <_malloc_r+0xe6>
90027c9a:	6823      	ldr	r3, [r4, #0]
90027c9c:	442b      	add	r3, r5
90027c9e:	6023      	str	r3, [r4, #0]
90027ca0:	f8d8 3000 	ldr.w	r3, [r8]
90027ca4:	2b00      	cmp	r3, #0
90027ca6:	d038      	beq.n	90027d1a <_malloc_r+0xf6>
90027ca8:	685a      	ldr	r2, [r3, #4]
90027caa:	42a2      	cmp	r2, r4
90027cac:	d12b      	bne.n	90027d06 <_malloc_r+0xe2>
90027cae:	2200      	movs	r2, #0
90027cb0:	605a      	str	r2, [r3, #4]
90027cb2:	e00f      	b.n	90027cd4 <_malloc_r+0xb0>
90027cb4:	6822      	ldr	r2, [r4, #0]
90027cb6:	1b52      	subs	r2, r2, r5
90027cb8:	d41f      	bmi.n	90027cfa <_malloc_r+0xd6>
90027cba:	2a0b      	cmp	r2, #11
90027cbc:	d917      	bls.n	90027cee <_malloc_r+0xca>
90027cbe:	1961      	adds	r1, r4, r5
90027cc0:	42a3      	cmp	r3, r4
90027cc2:	6025      	str	r5, [r4, #0]
90027cc4:	bf18      	it	ne
90027cc6:	6059      	strne	r1, [r3, #4]
90027cc8:	6863      	ldr	r3, [r4, #4]
90027cca:	bf08      	it	eq
90027ccc:	f8c8 1000 	streq.w	r1, [r8]
90027cd0:	5162      	str	r2, [r4, r5]
90027cd2:	604b      	str	r3, [r1, #4]
90027cd4:	4638      	mov	r0, r7
90027cd6:	f104 060b 	add.w	r6, r4, #11
90027cda:	f000 f829 	bl	90027d30 <__malloc_unlock>
90027cde:	f026 0607 	bic.w	r6, r6, #7
90027ce2:	1d23      	adds	r3, r4, #4
90027ce4:	1af2      	subs	r2, r6, r3
90027ce6:	d0ae      	beq.n	90027c46 <_malloc_r+0x22>
90027ce8:	1b9b      	subs	r3, r3, r6
90027cea:	50a3      	str	r3, [r4, r2]
90027cec:	e7ab      	b.n	90027c46 <_malloc_r+0x22>
90027cee:	42a3      	cmp	r3, r4
90027cf0:	6862      	ldr	r2, [r4, #4]
90027cf2:	d1dd      	bne.n	90027cb0 <_malloc_r+0x8c>
90027cf4:	f8c8 2000 	str.w	r2, [r8]
90027cf8:	e7ec      	b.n	90027cd4 <_malloc_r+0xb0>
90027cfa:	4623      	mov	r3, r4
90027cfc:	6864      	ldr	r4, [r4, #4]
90027cfe:	e7ac      	b.n	90027c5a <_malloc_r+0x36>
90027d00:	4634      	mov	r4, r6
90027d02:	6876      	ldr	r6, [r6, #4]
90027d04:	e7b4      	b.n	90027c70 <_malloc_r+0x4c>
90027d06:	4613      	mov	r3, r2
90027d08:	e7cc      	b.n	90027ca4 <_malloc_r+0x80>
90027d0a:	230c      	movs	r3, #12
90027d0c:	603b      	str	r3, [r7, #0]
90027d0e:	4638      	mov	r0, r7
90027d10:	f000 f80e 	bl	90027d30 <__malloc_unlock>
90027d14:	e797      	b.n	90027c46 <_malloc_r+0x22>
90027d16:	6025      	str	r5, [r4, #0]
90027d18:	e7dc      	b.n	90027cd4 <_malloc_r+0xb0>
90027d1a:	605b      	str	r3, [r3, #4]
90027d1c:	deff      	udf	#255	; 0xff
90027d1e:	bf00      	nop
90027d20:	2403a188 	.word	0x2403a188

90027d24 <__malloc_lock>:
90027d24:	4801      	ldr	r0, [pc, #4]	; (90027d2c <__malloc_lock+0x8>)
90027d26:	f000 ba8f 	b.w	90028248 <__retarget_lock_acquire_recursive>
90027d2a:	bf00      	nop
90027d2c:	2403a2d1 	.word	0x2403a2d1

90027d30 <__malloc_unlock>:
90027d30:	4801      	ldr	r0, [pc, #4]	; (90027d38 <__malloc_unlock+0x8>)
90027d32:	f000 ba8a 	b.w	9002824a <__retarget_lock_release_recursive>
90027d36:	bf00      	nop
90027d38:	2403a2d1 	.word	0x2403a2d1

90027d3c <__cxa_atexit>:
90027d3c:	b510      	push	{r4, lr}
90027d3e:	4c05      	ldr	r4, [pc, #20]	; (90027d54 <__cxa_atexit+0x18>)
90027d40:	4613      	mov	r3, r2
90027d42:	b12c      	cbz	r4, 90027d50 <__cxa_atexit+0x14>
90027d44:	460a      	mov	r2, r1
90027d46:	4601      	mov	r1, r0
90027d48:	2002      	movs	r0, #2
90027d4a:	f000 fa8d 	bl	90028268 <__register_exitproc>
90027d4e:	bd10      	pop	{r4, pc}
90027d50:	4620      	mov	r0, r4
90027d52:	e7fc      	b.n	90027d4e <__cxa_atexit+0x12>
90027d54:	90028269 	.word	0x90028269

90027d58 <std>:
90027d58:	2300      	movs	r3, #0
90027d5a:	b510      	push	{r4, lr}
90027d5c:	4604      	mov	r4, r0
90027d5e:	e9c0 3300 	strd	r3, r3, [r0]
90027d62:	e9c0 3304 	strd	r3, r3, [r0, #16]
90027d66:	6083      	str	r3, [r0, #8]
90027d68:	8181      	strh	r1, [r0, #12]
90027d6a:	6643      	str	r3, [r0, #100]	; 0x64
90027d6c:	81c2      	strh	r2, [r0, #14]
90027d6e:	6183      	str	r3, [r0, #24]
90027d70:	4619      	mov	r1, r3
90027d72:	2208      	movs	r2, #8
90027d74:	305c      	adds	r0, #92	; 0x5c
90027d76:	f000 f989 	bl	9002808c <memset>
90027d7a:	4b05      	ldr	r3, [pc, #20]	; (90027d90 <std+0x38>)
90027d7c:	6263      	str	r3, [r4, #36]	; 0x24
90027d7e:	4b05      	ldr	r3, [pc, #20]	; (90027d94 <std+0x3c>)
90027d80:	62a3      	str	r3, [r4, #40]	; 0x28
90027d82:	4b05      	ldr	r3, [pc, #20]	; (90027d98 <std+0x40>)
90027d84:	62e3      	str	r3, [r4, #44]	; 0x2c
90027d86:	4b05      	ldr	r3, [pc, #20]	; (90027d9c <std+0x44>)
90027d88:	6224      	str	r4, [r4, #32]
90027d8a:	6323      	str	r3, [r4, #48]	; 0x30
90027d8c:	bd10      	pop	{r4, pc}
90027d8e:	bf00      	nop
90027d90:	90027edd 	.word	0x90027edd
90027d94:	90027eff 	.word	0x90027eff
90027d98:	90027f37 	.word	0x90027f37
90027d9c:	90027f5b 	.word	0x90027f5b

90027da0 <stdio_exit_handler>:
90027da0:	4a02      	ldr	r2, [pc, #8]	; (90027dac <stdio_exit_handler+0xc>)
90027da2:	4903      	ldr	r1, [pc, #12]	; (90027db0 <stdio_exit_handler+0x10>)
90027da4:	4803      	ldr	r0, [pc, #12]	; (90027db4 <stdio_exit_handler+0x14>)
90027da6:	f000 b87b 	b.w	90027ea0 <_fwalk_sglue>
90027daa:	bf00      	nop
90027dac:	24000100 	.word	0x24000100
90027db0:	90028a71 	.word	0x90028a71
90027db4:	2400010c 	.word	0x2400010c

90027db8 <cleanup_stdio>:
90027db8:	6841      	ldr	r1, [r0, #4]
90027dba:	4b0c      	ldr	r3, [pc, #48]	; (90027dec <cleanup_stdio+0x34>)
90027dbc:	4299      	cmp	r1, r3
90027dbe:	b510      	push	{r4, lr}
90027dc0:	4604      	mov	r4, r0
90027dc2:	d001      	beq.n	90027dc8 <cleanup_stdio+0x10>
90027dc4:	f000 fe54 	bl	90028a70 <_fflush_r>
90027dc8:	68a1      	ldr	r1, [r4, #8]
90027dca:	4b09      	ldr	r3, [pc, #36]	; (90027df0 <cleanup_stdio+0x38>)
90027dcc:	4299      	cmp	r1, r3
90027dce:	d002      	beq.n	90027dd6 <cleanup_stdio+0x1e>
90027dd0:	4620      	mov	r0, r4
90027dd2:	f000 fe4d 	bl	90028a70 <_fflush_r>
90027dd6:	68e1      	ldr	r1, [r4, #12]
90027dd8:	4b06      	ldr	r3, [pc, #24]	; (90027df4 <cleanup_stdio+0x3c>)
90027dda:	4299      	cmp	r1, r3
90027ddc:	d004      	beq.n	90027de8 <cleanup_stdio+0x30>
90027dde:	4620      	mov	r0, r4
90027de0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90027de4:	f000 be44 	b.w	90028a70 <_fflush_r>
90027de8:	bd10      	pop	{r4, pc}
90027dea:	bf00      	nop
90027dec:	2403a190 	.word	0x2403a190
90027df0:	2403a1f8 	.word	0x2403a1f8
90027df4:	2403a260 	.word	0x2403a260

90027df8 <global_stdio_init.part.0>:
90027df8:	b510      	push	{r4, lr}
90027dfa:	4b0b      	ldr	r3, [pc, #44]	; (90027e28 <global_stdio_init.part.0+0x30>)
90027dfc:	4c0b      	ldr	r4, [pc, #44]	; (90027e2c <global_stdio_init.part.0+0x34>)
90027dfe:	4a0c      	ldr	r2, [pc, #48]	; (90027e30 <global_stdio_init.part.0+0x38>)
90027e00:	601a      	str	r2, [r3, #0]
90027e02:	4620      	mov	r0, r4
90027e04:	2200      	movs	r2, #0
90027e06:	2104      	movs	r1, #4
90027e08:	f7ff ffa6 	bl	90027d58 <std>
90027e0c:	f104 0068 	add.w	r0, r4, #104	; 0x68
90027e10:	2201      	movs	r2, #1
90027e12:	2109      	movs	r1, #9
90027e14:	f7ff ffa0 	bl	90027d58 <std>
90027e18:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
90027e1c:	2202      	movs	r2, #2
90027e1e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90027e22:	2112      	movs	r1, #18
90027e24:	f7ff bf98 	b.w	90027d58 <std>
90027e28:	2403a2c8 	.word	0x2403a2c8
90027e2c:	2403a190 	.word	0x2403a190
90027e30:	90027da1 	.word	0x90027da1

90027e34 <__sfp_lock_acquire>:
90027e34:	4801      	ldr	r0, [pc, #4]	; (90027e3c <__sfp_lock_acquire+0x8>)
90027e36:	f000 ba07 	b.w	90028248 <__retarget_lock_acquire_recursive>
90027e3a:	bf00      	nop
90027e3c:	2403a2d2 	.word	0x2403a2d2

90027e40 <__sfp_lock_release>:
90027e40:	4801      	ldr	r0, [pc, #4]	; (90027e48 <__sfp_lock_release+0x8>)
90027e42:	f000 ba02 	b.w	9002824a <__retarget_lock_release_recursive>
90027e46:	bf00      	nop
90027e48:	2403a2d2 	.word	0x2403a2d2

90027e4c <__sinit>:
90027e4c:	b510      	push	{r4, lr}
90027e4e:	4604      	mov	r4, r0
90027e50:	f7ff fff0 	bl	90027e34 <__sfp_lock_acquire>
90027e54:	6a23      	ldr	r3, [r4, #32]
90027e56:	b11b      	cbz	r3, 90027e60 <__sinit+0x14>
90027e58:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90027e5c:	f7ff bff0 	b.w	90027e40 <__sfp_lock_release>
90027e60:	4b04      	ldr	r3, [pc, #16]	; (90027e74 <__sinit+0x28>)
90027e62:	6223      	str	r3, [r4, #32]
90027e64:	4b04      	ldr	r3, [pc, #16]	; (90027e78 <__sinit+0x2c>)
90027e66:	681b      	ldr	r3, [r3, #0]
90027e68:	2b00      	cmp	r3, #0
90027e6a:	d1f5      	bne.n	90027e58 <__sinit+0xc>
90027e6c:	f7ff ffc4 	bl	90027df8 <global_stdio_init.part.0>
90027e70:	e7f2      	b.n	90027e58 <__sinit+0xc>
90027e72:	bf00      	nop
90027e74:	90027db9 	.word	0x90027db9
90027e78:	2403a2c8 	.word	0x2403a2c8

90027e7c <fiprintf>:
90027e7c:	b40e      	push	{r1, r2, r3}
90027e7e:	b503      	push	{r0, r1, lr}
90027e80:	4601      	mov	r1, r0
90027e82:	ab03      	add	r3, sp, #12
90027e84:	4805      	ldr	r0, [pc, #20]	; (90027e9c <fiprintf+0x20>)
90027e86:	f853 2b04 	ldr.w	r2, [r3], #4
90027e8a:	6800      	ldr	r0, [r0, #0]
90027e8c:	9301      	str	r3, [sp, #4]
90027e8e:	f000 fabf 	bl	90028410 <_vfiprintf_r>
90027e92:	b002      	add	sp, #8
90027e94:	f85d eb04 	ldr.w	lr, [sp], #4
90027e98:	b003      	add	sp, #12
90027e9a:	4770      	bx	lr
90027e9c:	24000158 	.word	0x24000158

90027ea0 <_fwalk_sglue>:
90027ea0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
90027ea4:	4607      	mov	r7, r0
90027ea6:	4688      	mov	r8, r1
90027ea8:	4614      	mov	r4, r2
90027eaa:	2600      	movs	r6, #0
90027eac:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
90027eb0:	f1b9 0901 	subs.w	r9, r9, #1
90027eb4:	d505      	bpl.n	90027ec2 <_fwalk_sglue+0x22>
90027eb6:	6824      	ldr	r4, [r4, #0]
90027eb8:	2c00      	cmp	r4, #0
90027eba:	d1f7      	bne.n	90027eac <_fwalk_sglue+0xc>
90027ebc:	4630      	mov	r0, r6
90027ebe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
90027ec2:	89ab      	ldrh	r3, [r5, #12]
90027ec4:	2b01      	cmp	r3, #1
90027ec6:	d907      	bls.n	90027ed8 <_fwalk_sglue+0x38>
90027ec8:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
90027ecc:	3301      	adds	r3, #1
90027ece:	d003      	beq.n	90027ed8 <_fwalk_sglue+0x38>
90027ed0:	4629      	mov	r1, r5
90027ed2:	4638      	mov	r0, r7
90027ed4:	47c0      	blx	r8
90027ed6:	4306      	orrs	r6, r0
90027ed8:	3568      	adds	r5, #104	; 0x68
90027eda:	e7e9      	b.n	90027eb0 <_fwalk_sglue+0x10>

90027edc <__sread>:
90027edc:	b510      	push	{r4, lr}
90027ede:	460c      	mov	r4, r1
90027ee0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
90027ee4:	f000 f93e 	bl	90028164 <_read_r>
90027ee8:	2800      	cmp	r0, #0
90027eea:	bfab      	itete	ge
90027eec:	6d63      	ldrge	r3, [r4, #84]	; 0x54
90027eee:	89a3      	ldrhlt	r3, [r4, #12]
90027ef0:	181b      	addge	r3, r3, r0
90027ef2:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
90027ef6:	bfac      	ite	ge
90027ef8:	6563      	strge	r3, [r4, #84]	; 0x54
90027efa:	81a3      	strhlt	r3, [r4, #12]
90027efc:	bd10      	pop	{r4, pc}

90027efe <__swrite>:
90027efe:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90027f02:	461f      	mov	r7, r3
90027f04:	898b      	ldrh	r3, [r1, #12]
90027f06:	05db      	lsls	r3, r3, #23
90027f08:	4605      	mov	r5, r0
90027f0a:	460c      	mov	r4, r1
90027f0c:	4616      	mov	r6, r2
90027f0e:	d505      	bpl.n	90027f1c <__swrite+0x1e>
90027f10:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
90027f14:	2302      	movs	r3, #2
90027f16:	2200      	movs	r2, #0
90027f18:	f000 f912 	bl	90028140 <_lseek_r>
90027f1c:	89a3      	ldrh	r3, [r4, #12]
90027f1e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
90027f22:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
90027f26:	81a3      	strh	r3, [r4, #12]
90027f28:	4632      	mov	r2, r6
90027f2a:	463b      	mov	r3, r7
90027f2c:	4628      	mov	r0, r5
90027f2e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
90027f32:	f000 b94d 	b.w	900281d0 <_write_r>

90027f36 <__sseek>:
90027f36:	b510      	push	{r4, lr}
90027f38:	460c      	mov	r4, r1
90027f3a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
90027f3e:	f000 f8ff 	bl	90028140 <_lseek_r>
90027f42:	1c43      	adds	r3, r0, #1
90027f44:	89a3      	ldrh	r3, [r4, #12]
90027f46:	bf15      	itete	ne
90027f48:	6560      	strne	r0, [r4, #84]	; 0x54
90027f4a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
90027f4e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
90027f52:	81a3      	strheq	r3, [r4, #12]
90027f54:	bf18      	it	ne
90027f56:	81a3      	strhne	r3, [r4, #12]
90027f58:	bd10      	pop	{r4, pc}

90027f5a <__sclose>:
90027f5a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
90027f5e:	f000 b8df 	b.w	90028120 <_close_r>

90027f62 <__swbuf_r>:
90027f62:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90027f64:	460e      	mov	r6, r1
90027f66:	4614      	mov	r4, r2
90027f68:	4605      	mov	r5, r0
90027f6a:	b118      	cbz	r0, 90027f74 <__swbuf_r+0x12>
90027f6c:	6a03      	ldr	r3, [r0, #32]
90027f6e:	b90b      	cbnz	r3, 90027f74 <__swbuf_r+0x12>
90027f70:	f7ff ff6c 	bl	90027e4c <__sinit>
90027f74:	69a3      	ldr	r3, [r4, #24]
90027f76:	60a3      	str	r3, [r4, #8]
90027f78:	89a3      	ldrh	r3, [r4, #12]
90027f7a:	071a      	lsls	r2, r3, #28
90027f7c:	d525      	bpl.n	90027fca <__swbuf_r+0x68>
90027f7e:	6923      	ldr	r3, [r4, #16]
90027f80:	b31b      	cbz	r3, 90027fca <__swbuf_r+0x68>
90027f82:	6823      	ldr	r3, [r4, #0]
90027f84:	6922      	ldr	r2, [r4, #16]
90027f86:	1a98      	subs	r0, r3, r2
90027f88:	6963      	ldr	r3, [r4, #20]
90027f8a:	b2f6      	uxtb	r6, r6
90027f8c:	4283      	cmp	r3, r0
90027f8e:	4637      	mov	r7, r6
90027f90:	dc04      	bgt.n	90027f9c <__swbuf_r+0x3a>
90027f92:	4621      	mov	r1, r4
90027f94:	4628      	mov	r0, r5
90027f96:	f000 fd6b 	bl	90028a70 <_fflush_r>
90027f9a:	b9e0      	cbnz	r0, 90027fd6 <__swbuf_r+0x74>
90027f9c:	68a3      	ldr	r3, [r4, #8]
90027f9e:	3b01      	subs	r3, #1
90027fa0:	60a3      	str	r3, [r4, #8]
90027fa2:	6823      	ldr	r3, [r4, #0]
90027fa4:	1c5a      	adds	r2, r3, #1
90027fa6:	6022      	str	r2, [r4, #0]
90027fa8:	701e      	strb	r6, [r3, #0]
90027faa:	6962      	ldr	r2, [r4, #20]
90027fac:	1c43      	adds	r3, r0, #1
90027fae:	429a      	cmp	r2, r3
90027fb0:	d004      	beq.n	90027fbc <__swbuf_r+0x5a>
90027fb2:	89a3      	ldrh	r3, [r4, #12]
90027fb4:	07db      	lsls	r3, r3, #31
90027fb6:	d506      	bpl.n	90027fc6 <__swbuf_r+0x64>
90027fb8:	2e0a      	cmp	r6, #10
90027fba:	d104      	bne.n	90027fc6 <__swbuf_r+0x64>
90027fbc:	4621      	mov	r1, r4
90027fbe:	4628      	mov	r0, r5
90027fc0:	f000 fd56 	bl	90028a70 <_fflush_r>
90027fc4:	b938      	cbnz	r0, 90027fd6 <__swbuf_r+0x74>
90027fc6:	4638      	mov	r0, r7
90027fc8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90027fca:	4621      	mov	r1, r4
90027fcc:	4628      	mov	r0, r5
90027fce:	f000 f805 	bl	90027fdc <__swsetup_r>
90027fd2:	2800      	cmp	r0, #0
90027fd4:	d0d5      	beq.n	90027f82 <__swbuf_r+0x20>
90027fd6:	f04f 37ff 	mov.w	r7, #4294967295
90027fda:	e7f4      	b.n	90027fc6 <__swbuf_r+0x64>

90027fdc <__swsetup_r>:
90027fdc:	b538      	push	{r3, r4, r5, lr}
90027fde:	4b2a      	ldr	r3, [pc, #168]	; (90028088 <__swsetup_r+0xac>)
90027fe0:	4605      	mov	r5, r0
90027fe2:	6818      	ldr	r0, [r3, #0]
90027fe4:	460c      	mov	r4, r1
90027fe6:	b118      	cbz	r0, 90027ff0 <__swsetup_r+0x14>
90027fe8:	6a03      	ldr	r3, [r0, #32]
90027fea:	b90b      	cbnz	r3, 90027ff0 <__swsetup_r+0x14>
90027fec:	f7ff ff2e 	bl	90027e4c <__sinit>
90027ff0:	89a3      	ldrh	r3, [r4, #12]
90027ff2:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
90027ff6:	0718      	lsls	r0, r3, #28
90027ff8:	d422      	bmi.n	90028040 <__swsetup_r+0x64>
90027ffa:	06d9      	lsls	r1, r3, #27
90027ffc:	d407      	bmi.n	9002800e <__swsetup_r+0x32>
90027ffe:	2309      	movs	r3, #9
90028000:	602b      	str	r3, [r5, #0]
90028002:	f042 0340 	orr.w	r3, r2, #64	; 0x40
90028006:	81a3      	strh	r3, [r4, #12]
90028008:	f04f 30ff 	mov.w	r0, #4294967295
9002800c:	e034      	b.n	90028078 <__swsetup_r+0x9c>
9002800e:	0758      	lsls	r0, r3, #29
90028010:	d512      	bpl.n	90028038 <__swsetup_r+0x5c>
90028012:	6b61      	ldr	r1, [r4, #52]	; 0x34
90028014:	b141      	cbz	r1, 90028028 <__swsetup_r+0x4c>
90028016:	f104 0344 	add.w	r3, r4, #68	; 0x44
9002801a:	4299      	cmp	r1, r3
9002801c:	d002      	beq.n	90028024 <__swsetup_r+0x48>
9002801e:	4628      	mov	r0, r5
90028020:	f000 f980 	bl	90028324 <_free_r>
90028024:	2300      	movs	r3, #0
90028026:	6363      	str	r3, [r4, #52]	; 0x34
90028028:	89a3      	ldrh	r3, [r4, #12]
9002802a:	f023 0324 	bic.w	r3, r3, #36	; 0x24
9002802e:	81a3      	strh	r3, [r4, #12]
90028030:	2300      	movs	r3, #0
90028032:	6063      	str	r3, [r4, #4]
90028034:	6923      	ldr	r3, [r4, #16]
90028036:	6023      	str	r3, [r4, #0]
90028038:	89a3      	ldrh	r3, [r4, #12]
9002803a:	f043 0308 	orr.w	r3, r3, #8
9002803e:	81a3      	strh	r3, [r4, #12]
90028040:	6923      	ldr	r3, [r4, #16]
90028042:	b94b      	cbnz	r3, 90028058 <__swsetup_r+0x7c>
90028044:	89a3      	ldrh	r3, [r4, #12]
90028046:	f403 7320 	and.w	r3, r3, #640	; 0x280
9002804a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
9002804e:	d003      	beq.n	90028058 <__swsetup_r+0x7c>
90028050:	4621      	mov	r1, r4
90028052:	4628      	mov	r0, r5
90028054:	f000 fd5a 	bl	90028b0c <__smakebuf_r>
90028058:	89a0      	ldrh	r0, [r4, #12]
9002805a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
9002805e:	f010 0301 	ands.w	r3, r0, #1
90028062:	d00a      	beq.n	9002807a <__swsetup_r+0x9e>
90028064:	2300      	movs	r3, #0
90028066:	60a3      	str	r3, [r4, #8]
90028068:	6963      	ldr	r3, [r4, #20]
9002806a:	425b      	negs	r3, r3
9002806c:	61a3      	str	r3, [r4, #24]
9002806e:	6923      	ldr	r3, [r4, #16]
90028070:	b943      	cbnz	r3, 90028084 <__swsetup_r+0xa8>
90028072:	f010 0080 	ands.w	r0, r0, #128	; 0x80
90028076:	d1c4      	bne.n	90028002 <__swsetup_r+0x26>
90028078:	bd38      	pop	{r3, r4, r5, pc}
9002807a:	0781      	lsls	r1, r0, #30
9002807c:	bf58      	it	pl
9002807e:	6963      	ldrpl	r3, [r4, #20]
90028080:	60a3      	str	r3, [r4, #8]
90028082:	e7f4      	b.n	9002806e <__swsetup_r+0x92>
90028084:	2000      	movs	r0, #0
90028086:	e7f7      	b.n	90028078 <__swsetup_r+0x9c>
90028088:	24000158 	.word	0x24000158

9002808c <memset>:
9002808c:	4402      	add	r2, r0
9002808e:	4603      	mov	r3, r0
90028090:	4293      	cmp	r3, r2
90028092:	d100      	bne.n	90028096 <memset+0xa>
90028094:	4770      	bx	lr
90028096:	f803 1b01 	strb.w	r1, [r3], #1
9002809a:	e7f9      	b.n	90028090 <memset+0x4>

9002809c <strncmp>:
9002809c:	b510      	push	{r4, lr}
9002809e:	b16a      	cbz	r2, 900280bc <strncmp+0x20>
900280a0:	3901      	subs	r1, #1
900280a2:	1884      	adds	r4, r0, r2
900280a4:	f810 2b01 	ldrb.w	r2, [r0], #1
900280a8:	f811 3f01 	ldrb.w	r3, [r1, #1]!
900280ac:	429a      	cmp	r2, r3
900280ae:	d103      	bne.n	900280b8 <strncmp+0x1c>
900280b0:	42a0      	cmp	r0, r4
900280b2:	d001      	beq.n	900280b8 <strncmp+0x1c>
900280b4:	2a00      	cmp	r2, #0
900280b6:	d1f5      	bne.n	900280a4 <strncmp+0x8>
900280b8:	1ad0      	subs	r0, r2, r3
900280ba:	bd10      	pop	{r4, pc}
900280bc:	4610      	mov	r0, r2
900280be:	e7fc      	b.n	900280ba <strncmp+0x1e>

900280c0 <_raise_r>:
900280c0:	291f      	cmp	r1, #31
900280c2:	b538      	push	{r3, r4, r5, lr}
900280c4:	4604      	mov	r4, r0
900280c6:	460d      	mov	r5, r1
900280c8:	d904      	bls.n	900280d4 <_raise_r+0x14>
900280ca:	2316      	movs	r3, #22
900280cc:	6003      	str	r3, [r0, #0]
900280ce:	f04f 30ff 	mov.w	r0, #4294967295
900280d2:	bd38      	pop	{r3, r4, r5, pc}
900280d4:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
900280d6:	b112      	cbz	r2, 900280de <_raise_r+0x1e>
900280d8:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
900280dc:	b94b      	cbnz	r3, 900280f2 <_raise_r+0x32>
900280de:	4620      	mov	r0, r4
900280e0:	f000 f864 	bl	900281ac <_getpid_r>
900280e4:	462a      	mov	r2, r5
900280e6:	4601      	mov	r1, r0
900280e8:	4620      	mov	r0, r4
900280ea:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
900280ee:	f000 b84b 	b.w	90028188 <_kill_r>
900280f2:	2b01      	cmp	r3, #1
900280f4:	d00a      	beq.n	9002810c <_raise_r+0x4c>
900280f6:	1c59      	adds	r1, r3, #1
900280f8:	d103      	bne.n	90028102 <_raise_r+0x42>
900280fa:	2316      	movs	r3, #22
900280fc:	6003      	str	r3, [r0, #0]
900280fe:	2001      	movs	r0, #1
90028100:	e7e7      	b.n	900280d2 <_raise_r+0x12>
90028102:	2400      	movs	r4, #0
90028104:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
90028108:	4628      	mov	r0, r5
9002810a:	4798      	blx	r3
9002810c:	2000      	movs	r0, #0
9002810e:	e7e0      	b.n	900280d2 <_raise_r+0x12>

90028110 <raise>:
90028110:	4b02      	ldr	r3, [pc, #8]	; (9002811c <raise+0xc>)
90028112:	4601      	mov	r1, r0
90028114:	6818      	ldr	r0, [r3, #0]
90028116:	f7ff bfd3 	b.w	900280c0 <_raise_r>
9002811a:	bf00      	nop
9002811c:	24000158 	.word	0x24000158

90028120 <_close_r>:
90028120:	b538      	push	{r3, r4, r5, lr}
90028122:	4d06      	ldr	r5, [pc, #24]	; (9002813c <_close_r+0x1c>)
90028124:	2300      	movs	r3, #0
90028126:	4604      	mov	r4, r0
90028128:	4608      	mov	r0, r1
9002812a:	602b      	str	r3, [r5, #0]
9002812c:	f7db fa04 	bl	90003538 <_close>
90028130:	1c43      	adds	r3, r0, #1
90028132:	d102      	bne.n	9002813a <_close_r+0x1a>
90028134:	682b      	ldr	r3, [r5, #0]
90028136:	b103      	cbz	r3, 9002813a <_close_r+0x1a>
90028138:	6023      	str	r3, [r4, #0]
9002813a:	bd38      	pop	{r3, r4, r5, pc}
9002813c:	2403a2cc 	.word	0x2403a2cc

90028140 <_lseek_r>:
90028140:	b538      	push	{r3, r4, r5, lr}
90028142:	4d07      	ldr	r5, [pc, #28]	; (90028160 <_lseek_r+0x20>)
90028144:	4604      	mov	r4, r0
90028146:	4608      	mov	r0, r1
90028148:	4611      	mov	r1, r2
9002814a:	2200      	movs	r2, #0
9002814c:	602a      	str	r2, [r5, #0]
9002814e:	461a      	mov	r2, r3
90028150:	f7db f9fe 	bl	90003550 <_lseek>
90028154:	1c43      	adds	r3, r0, #1
90028156:	d102      	bne.n	9002815e <_lseek_r+0x1e>
90028158:	682b      	ldr	r3, [r5, #0]
9002815a:	b103      	cbz	r3, 9002815e <_lseek_r+0x1e>
9002815c:	6023      	str	r3, [r4, #0]
9002815e:	bd38      	pop	{r3, r4, r5, pc}
90028160:	2403a2cc 	.word	0x2403a2cc

90028164 <_read_r>:
90028164:	b538      	push	{r3, r4, r5, lr}
90028166:	4d07      	ldr	r5, [pc, #28]	; (90028184 <_read_r+0x20>)
90028168:	4604      	mov	r4, r0
9002816a:	4608      	mov	r0, r1
9002816c:	4611      	mov	r1, r2
9002816e:	2200      	movs	r2, #0
90028170:	602a      	str	r2, [r5, #0]
90028172:	461a      	mov	r2, r3
90028174:	f7db f9c4 	bl	90003500 <_read>
90028178:	1c43      	adds	r3, r0, #1
9002817a:	d102      	bne.n	90028182 <_read_r+0x1e>
9002817c:	682b      	ldr	r3, [r5, #0]
9002817e:	b103      	cbz	r3, 90028182 <_read_r+0x1e>
90028180:	6023      	str	r3, [r4, #0]
90028182:	bd38      	pop	{r3, r4, r5, pc}
90028184:	2403a2cc 	.word	0x2403a2cc

90028188 <_kill_r>:
90028188:	b538      	push	{r3, r4, r5, lr}
9002818a:	4d07      	ldr	r5, [pc, #28]	; (900281a8 <_kill_r+0x20>)
9002818c:	2300      	movs	r3, #0
9002818e:	4604      	mov	r4, r0
90028190:	4608      	mov	r0, r1
90028192:	4611      	mov	r1, r2
90028194:	602b      	str	r3, [r5, #0]
90028196:	f7db f9a3 	bl	900034e0 <_kill>
9002819a:	1c43      	adds	r3, r0, #1
9002819c:	d102      	bne.n	900281a4 <_kill_r+0x1c>
9002819e:	682b      	ldr	r3, [r5, #0]
900281a0:	b103      	cbz	r3, 900281a4 <_kill_r+0x1c>
900281a2:	6023      	str	r3, [r4, #0]
900281a4:	bd38      	pop	{r3, r4, r5, pc}
900281a6:	bf00      	nop
900281a8:	2403a2cc 	.word	0x2403a2cc

900281ac <_getpid_r>:
900281ac:	f7db b996 	b.w	900034dc <_getpid>

900281b0 <_sbrk_r>:
900281b0:	b538      	push	{r3, r4, r5, lr}
900281b2:	4d06      	ldr	r5, [pc, #24]	; (900281cc <_sbrk_r+0x1c>)
900281b4:	2300      	movs	r3, #0
900281b6:	4604      	mov	r4, r0
900281b8:	4608      	mov	r0, r1
900281ba:	602b      	str	r3, [r5, #0]
900281bc:	f000 fd04 	bl	90028bc8 <_sbrk>
900281c0:	1c43      	adds	r3, r0, #1
900281c2:	d102      	bne.n	900281ca <_sbrk_r+0x1a>
900281c4:	682b      	ldr	r3, [r5, #0]
900281c6:	b103      	cbz	r3, 900281ca <_sbrk_r+0x1a>
900281c8:	6023      	str	r3, [r4, #0]
900281ca:	bd38      	pop	{r3, r4, r5, pc}
900281cc:	2403a2cc 	.word	0x2403a2cc

900281d0 <_write_r>:
900281d0:	b538      	push	{r3, r4, r5, lr}
900281d2:	4d07      	ldr	r5, [pc, #28]	; (900281f0 <_write_r+0x20>)
900281d4:	4604      	mov	r4, r0
900281d6:	4608      	mov	r0, r1
900281d8:	4611      	mov	r1, r2
900281da:	2200      	movs	r2, #0
900281dc:	602a      	str	r2, [r5, #0]
900281de:	461a      	mov	r2, r3
900281e0:	f7db f99c 	bl	9000351c <_write>
900281e4:	1c43      	adds	r3, r0, #1
900281e6:	d102      	bne.n	900281ee <_write_r+0x1e>
900281e8:	682b      	ldr	r3, [r5, #0]
900281ea:	b103      	cbz	r3, 900281ee <_write_r+0x1e>
900281ec:	6023      	str	r3, [r4, #0]
900281ee:	bd38      	pop	{r3, r4, r5, pc}
900281f0:	2403a2cc 	.word	0x2403a2cc

900281f4 <__errno>:
900281f4:	4b01      	ldr	r3, [pc, #4]	; (900281fc <__errno+0x8>)
900281f6:	6818      	ldr	r0, [r3, #0]
900281f8:	4770      	bx	lr
900281fa:	bf00      	nop
900281fc:	24000158 	.word	0x24000158

90028200 <__libc_init_array>:
90028200:	b570      	push	{r4, r5, r6, lr}
90028202:	4d0d      	ldr	r5, [pc, #52]	; (90028238 <__libc_init_array+0x38>)
90028204:	4c0d      	ldr	r4, [pc, #52]	; (9002823c <__libc_init_array+0x3c>)
90028206:	1b64      	subs	r4, r4, r5
90028208:	10a4      	asrs	r4, r4, #2
9002820a:	2600      	movs	r6, #0
9002820c:	42a6      	cmp	r6, r4
9002820e:	d109      	bne.n	90028224 <__libc_init_array+0x24>
90028210:	4d0b      	ldr	r5, [pc, #44]	; (90028240 <__libc_init_array+0x40>)
90028212:	4c0c      	ldr	r4, [pc, #48]	; (90028244 <__libc_init_array+0x44>)
90028214:	f000 fce6 	bl	90028be4 <_init>
90028218:	1b64      	subs	r4, r4, r5
9002821a:	10a4      	asrs	r4, r4, #2
9002821c:	2600      	movs	r6, #0
9002821e:	42a6      	cmp	r6, r4
90028220:	d105      	bne.n	9002822e <__libc_init_array+0x2e>
90028222:	bd70      	pop	{r4, r5, r6, pc}
90028224:	f855 3b04 	ldr.w	r3, [r5], #4
90028228:	4798      	blx	r3
9002822a:	3601      	adds	r6, #1
9002822c:	e7ee      	b.n	9002820c <__libc_init_array+0xc>
9002822e:	f855 3b04 	ldr.w	r3, [r5], #4
90028232:	4798      	blx	r3
90028234:	3601      	adds	r6, #1
90028236:	e7f2      	b.n	9002821e <__libc_init_array+0x1e>
90028238:	9002c4f4 	.word	0x9002c4f4
9002823c:	9002c4f4 	.word	0x9002c4f4
90028240:	9002c4f4 	.word	0x9002c4f4
90028244:	9002c510 	.word	0x9002c510

90028248 <__retarget_lock_acquire_recursive>:
90028248:	4770      	bx	lr

9002824a <__retarget_lock_release_recursive>:
9002824a:	4770      	bx	lr

9002824c <memcpy>:
9002824c:	440a      	add	r2, r1
9002824e:	4291      	cmp	r1, r2
90028250:	f100 33ff 	add.w	r3, r0, #4294967295
90028254:	d100      	bne.n	90028258 <memcpy+0xc>
90028256:	4770      	bx	lr
90028258:	b510      	push	{r4, lr}
9002825a:	f811 4b01 	ldrb.w	r4, [r1], #1
9002825e:	f803 4f01 	strb.w	r4, [r3, #1]!
90028262:	4291      	cmp	r1, r2
90028264:	d1f9      	bne.n	9002825a <memcpy+0xe>
90028266:	bd10      	pop	{r4, pc}

90028268 <__register_exitproc>:
90028268:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9002826c:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 90028320 <__register_exitproc+0xb8>
90028270:	4606      	mov	r6, r0
90028272:	f8d8 0000 	ldr.w	r0, [r8]
90028276:	461f      	mov	r7, r3
90028278:	460d      	mov	r5, r1
9002827a:	4691      	mov	r9, r2
9002827c:	f7ff ffe4 	bl	90028248 <__retarget_lock_acquire_recursive>
90028280:	4b23      	ldr	r3, [pc, #140]	; (90028310 <__register_exitproc+0xa8>)
90028282:	681c      	ldr	r4, [r3, #0]
90028284:	b934      	cbnz	r4, 90028294 <__register_exitproc+0x2c>
90028286:	4c23      	ldr	r4, [pc, #140]	; (90028314 <__register_exitproc+0xac>)
90028288:	601c      	str	r4, [r3, #0]
9002828a:	4b23      	ldr	r3, [pc, #140]	; (90028318 <__register_exitproc+0xb0>)
9002828c:	b113      	cbz	r3, 90028294 <__register_exitproc+0x2c>
9002828e:	681b      	ldr	r3, [r3, #0]
90028290:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
90028294:	6863      	ldr	r3, [r4, #4]
90028296:	2b1f      	cmp	r3, #31
90028298:	dd07      	ble.n	900282aa <__register_exitproc+0x42>
9002829a:	f8d8 0000 	ldr.w	r0, [r8]
9002829e:	f7ff ffd4 	bl	9002824a <__retarget_lock_release_recursive>
900282a2:	f04f 30ff 	mov.w	r0, #4294967295
900282a6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
900282aa:	b32e      	cbz	r6, 900282f8 <__register_exitproc+0x90>
900282ac:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
900282b0:	b968      	cbnz	r0, 900282ce <__register_exitproc+0x66>
900282b2:	4b1a      	ldr	r3, [pc, #104]	; (9002831c <__register_exitproc+0xb4>)
900282b4:	2b00      	cmp	r3, #0
900282b6:	d0f0      	beq.n	9002829a <__register_exitproc+0x32>
900282b8:	f44f 7084 	mov.w	r0, #264	; 0x108
900282bc:	f7ff fc82 	bl	90027bc4 <malloc>
900282c0:	2800      	cmp	r0, #0
900282c2:	d0ea      	beq.n	9002829a <__register_exitproc+0x32>
900282c4:	2300      	movs	r3, #0
900282c6:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
900282ca:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
900282ce:	6863      	ldr	r3, [r4, #4]
900282d0:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
900282d4:	2201      	movs	r2, #1
900282d6:	409a      	lsls	r2, r3
900282d8:	eb00 0183 	add.w	r1, r0, r3, lsl #2
900282dc:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
900282e0:	4313      	orrs	r3, r2
900282e2:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
900282e6:	2e02      	cmp	r6, #2
900282e8:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
900282ec:	bf02      	ittt	eq
900282ee:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
900282f2:	4313      	orreq	r3, r2
900282f4:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
900282f8:	6863      	ldr	r3, [r4, #4]
900282fa:	f8d8 0000 	ldr.w	r0, [r8]
900282fe:	1c5a      	adds	r2, r3, #1
90028300:	3302      	adds	r3, #2
90028302:	6062      	str	r2, [r4, #4]
90028304:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
90028308:	f7ff ff9f 	bl	9002824a <__retarget_lock_release_recursive>
9002830c:	2000      	movs	r0, #0
9002830e:	e7ca      	b.n	900282a6 <__register_exitproc+0x3e>
90028310:	2403a360 	.word	0x2403a360
90028314:	2403a2d4 	.word	0x2403a2d4
90028318:	9002c3b4 	.word	0x9002c3b4
9002831c:	90027bc5 	.word	0x90027bc5
90028320:	2400015c 	.word	0x2400015c

90028324 <_free_r>:
90028324:	b537      	push	{r0, r1, r2, r4, r5, lr}
90028326:	2900      	cmp	r1, #0
90028328:	d044      	beq.n	900283b4 <_free_r+0x90>
9002832a:	f851 3c04 	ldr.w	r3, [r1, #-4]
9002832e:	9001      	str	r0, [sp, #4]
90028330:	2b00      	cmp	r3, #0
90028332:	f1a1 0404 	sub.w	r4, r1, #4
90028336:	bfb8      	it	lt
90028338:	18e4      	addlt	r4, r4, r3
9002833a:	f7ff fcf3 	bl	90027d24 <__malloc_lock>
9002833e:	4a1e      	ldr	r2, [pc, #120]	; (900283b8 <_free_r+0x94>)
90028340:	9801      	ldr	r0, [sp, #4]
90028342:	6813      	ldr	r3, [r2, #0]
90028344:	b933      	cbnz	r3, 90028354 <_free_r+0x30>
90028346:	6063      	str	r3, [r4, #4]
90028348:	6014      	str	r4, [r2, #0]
9002834a:	b003      	add	sp, #12
9002834c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
90028350:	f7ff bcee 	b.w	90027d30 <__malloc_unlock>
90028354:	42a3      	cmp	r3, r4
90028356:	d908      	bls.n	9002836a <_free_r+0x46>
90028358:	6825      	ldr	r5, [r4, #0]
9002835a:	1961      	adds	r1, r4, r5
9002835c:	428b      	cmp	r3, r1
9002835e:	bf01      	itttt	eq
90028360:	6819      	ldreq	r1, [r3, #0]
90028362:	685b      	ldreq	r3, [r3, #4]
90028364:	1949      	addeq	r1, r1, r5
90028366:	6021      	streq	r1, [r4, #0]
90028368:	e7ed      	b.n	90028346 <_free_r+0x22>
9002836a:	461a      	mov	r2, r3
9002836c:	685b      	ldr	r3, [r3, #4]
9002836e:	b10b      	cbz	r3, 90028374 <_free_r+0x50>
90028370:	42a3      	cmp	r3, r4
90028372:	d9fa      	bls.n	9002836a <_free_r+0x46>
90028374:	6811      	ldr	r1, [r2, #0]
90028376:	1855      	adds	r5, r2, r1
90028378:	42a5      	cmp	r5, r4
9002837a:	d10b      	bne.n	90028394 <_free_r+0x70>
9002837c:	6824      	ldr	r4, [r4, #0]
9002837e:	4421      	add	r1, r4
90028380:	1854      	adds	r4, r2, r1
90028382:	42a3      	cmp	r3, r4
90028384:	6011      	str	r1, [r2, #0]
90028386:	d1e0      	bne.n	9002834a <_free_r+0x26>
90028388:	681c      	ldr	r4, [r3, #0]
9002838a:	685b      	ldr	r3, [r3, #4]
9002838c:	6053      	str	r3, [r2, #4]
9002838e:	440c      	add	r4, r1
90028390:	6014      	str	r4, [r2, #0]
90028392:	e7da      	b.n	9002834a <_free_r+0x26>
90028394:	d902      	bls.n	9002839c <_free_r+0x78>
90028396:	230c      	movs	r3, #12
90028398:	6003      	str	r3, [r0, #0]
9002839a:	e7d6      	b.n	9002834a <_free_r+0x26>
9002839c:	6825      	ldr	r5, [r4, #0]
9002839e:	1961      	adds	r1, r4, r5
900283a0:	428b      	cmp	r3, r1
900283a2:	bf04      	itt	eq
900283a4:	6819      	ldreq	r1, [r3, #0]
900283a6:	685b      	ldreq	r3, [r3, #4]
900283a8:	6063      	str	r3, [r4, #4]
900283aa:	bf04      	itt	eq
900283ac:	1949      	addeq	r1, r1, r5
900283ae:	6021      	streq	r1, [r4, #0]
900283b0:	6054      	str	r4, [r2, #4]
900283b2:	e7ca      	b.n	9002834a <_free_r+0x26>
900283b4:	b003      	add	sp, #12
900283b6:	bd30      	pop	{r4, r5, pc}
900283b8:	2403a188 	.word	0x2403a188

900283bc <__sfputc_r>:
900283bc:	6893      	ldr	r3, [r2, #8]
900283be:	3b01      	subs	r3, #1
900283c0:	2b00      	cmp	r3, #0
900283c2:	b410      	push	{r4}
900283c4:	6093      	str	r3, [r2, #8]
900283c6:	da08      	bge.n	900283da <__sfputc_r+0x1e>
900283c8:	6994      	ldr	r4, [r2, #24]
900283ca:	42a3      	cmp	r3, r4
900283cc:	db01      	blt.n	900283d2 <__sfputc_r+0x16>
900283ce:	290a      	cmp	r1, #10
900283d0:	d103      	bne.n	900283da <__sfputc_r+0x1e>
900283d2:	f85d 4b04 	ldr.w	r4, [sp], #4
900283d6:	f7ff bdc4 	b.w	90027f62 <__swbuf_r>
900283da:	6813      	ldr	r3, [r2, #0]
900283dc:	1c58      	adds	r0, r3, #1
900283de:	6010      	str	r0, [r2, #0]
900283e0:	7019      	strb	r1, [r3, #0]
900283e2:	4608      	mov	r0, r1
900283e4:	f85d 4b04 	ldr.w	r4, [sp], #4
900283e8:	4770      	bx	lr

900283ea <__sfputs_r>:
900283ea:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
900283ec:	4606      	mov	r6, r0
900283ee:	460f      	mov	r7, r1
900283f0:	4614      	mov	r4, r2
900283f2:	18d5      	adds	r5, r2, r3
900283f4:	42ac      	cmp	r4, r5
900283f6:	d101      	bne.n	900283fc <__sfputs_r+0x12>
900283f8:	2000      	movs	r0, #0
900283fa:	e007      	b.n	9002840c <__sfputs_r+0x22>
900283fc:	f814 1b01 	ldrb.w	r1, [r4], #1
90028400:	463a      	mov	r2, r7
90028402:	4630      	mov	r0, r6
90028404:	f7ff ffda 	bl	900283bc <__sfputc_r>
90028408:	1c43      	adds	r3, r0, #1
9002840a:	d1f3      	bne.n	900283f4 <__sfputs_r+0xa>
9002840c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

90028410 <_vfiprintf_r>:
90028410:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90028414:	460d      	mov	r5, r1
90028416:	b09d      	sub	sp, #116	; 0x74
90028418:	4614      	mov	r4, r2
9002841a:	4698      	mov	r8, r3
9002841c:	4606      	mov	r6, r0
9002841e:	b118      	cbz	r0, 90028428 <_vfiprintf_r+0x18>
90028420:	6a03      	ldr	r3, [r0, #32]
90028422:	b90b      	cbnz	r3, 90028428 <_vfiprintf_r+0x18>
90028424:	f7ff fd12 	bl	90027e4c <__sinit>
90028428:	6e6b      	ldr	r3, [r5, #100]	; 0x64
9002842a:	07d9      	lsls	r1, r3, #31
9002842c:	d405      	bmi.n	9002843a <_vfiprintf_r+0x2a>
9002842e:	89ab      	ldrh	r3, [r5, #12]
90028430:	059a      	lsls	r2, r3, #22
90028432:	d402      	bmi.n	9002843a <_vfiprintf_r+0x2a>
90028434:	6da8      	ldr	r0, [r5, #88]	; 0x58
90028436:	f7ff ff07 	bl	90028248 <__retarget_lock_acquire_recursive>
9002843a:	89ab      	ldrh	r3, [r5, #12]
9002843c:	071b      	lsls	r3, r3, #28
9002843e:	d501      	bpl.n	90028444 <_vfiprintf_r+0x34>
90028440:	692b      	ldr	r3, [r5, #16]
90028442:	b99b      	cbnz	r3, 9002846c <_vfiprintf_r+0x5c>
90028444:	4629      	mov	r1, r5
90028446:	4630      	mov	r0, r6
90028448:	f7ff fdc8 	bl	90027fdc <__swsetup_r>
9002844c:	b170      	cbz	r0, 9002846c <_vfiprintf_r+0x5c>
9002844e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
90028450:	07dc      	lsls	r4, r3, #31
90028452:	d504      	bpl.n	9002845e <_vfiprintf_r+0x4e>
90028454:	f04f 30ff 	mov.w	r0, #4294967295
90028458:	b01d      	add	sp, #116	; 0x74
9002845a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002845e:	89ab      	ldrh	r3, [r5, #12]
90028460:	0598      	lsls	r0, r3, #22
90028462:	d4f7      	bmi.n	90028454 <_vfiprintf_r+0x44>
90028464:	6da8      	ldr	r0, [r5, #88]	; 0x58
90028466:	f7ff fef0 	bl	9002824a <__retarget_lock_release_recursive>
9002846a:	e7f3      	b.n	90028454 <_vfiprintf_r+0x44>
9002846c:	2300      	movs	r3, #0
9002846e:	9309      	str	r3, [sp, #36]	; 0x24
90028470:	2320      	movs	r3, #32
90028472:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
90028476:	f8cd 800c 	str.w	r8, [sp, #12]
9002847a:	2330      	movs	r3, #48	; 0x30
9002847c:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 90028630 <_vfiprintf_r+0x220>
90028480:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
90028484:	f04f 0901 	mov.w	r9, #1
90028488:	4623      	mov	r3, r4
9002848a:	469a      	mov	sl, r3
9002848c:	f813 2b01 	ldrb.w	r2, [r3], #1
90028490:	b10a      	cbz	r2, 90028496 <_vfiprintf_r+0x86>
90028492:	2a25      	cmp	r2, #37	; 0x25
90028494:	d1f9      	bne.n	9002848a <_vfiprintf_r+0x7a>
90028496:	ebba 0b04 	subs.w	fp, sl, r4
9002849a:	d00b      	beq.n	900284b4 <_vfiprintf_r+0xa4>
9002849c:	465b      	mov	r3, fp
9002849e:	4622      	mov	r2, r4
900284a0:	4629      	mov	r1, r5
900284a2:	4630      	mov	r0, r6
900284a4:	f7ff ffa1 	bl	900283ea <__sfputs_r>
900284a8:	3001      	adds	r0, #1
900284aa:	f000 80a9 	beq.w	90028600 <_vfiprintf_r+0x1f0>
900284ae:	9a09      	ldr	r2, [sp, #36]	; 0x24
900284b0:	445a      	add	r2, fp
900284b2:	9209      	str	r2, [sp, #36]	; 0x24
900284b4:	f89a 3000 	ldrb.w	r3, [sl]
900284b8:	2b00      	cmp	r3, #0
900284ba:	f000 80a1 	beq.w	90028600 <_vfiprintf_r+0x1f0>
900284be:	2300      	movs	r3, #0
900284c0:	f04f 32ff 	mov.w	r2, #4294967295
900284c4:	e9cd 2305 	strd	r2, r3, [sp, #20]
900284c8:	f10a 0a01 	add.w	sl, sl, #1
900284cc:	9304      	str	r3, [sp, #16]
900284ce:	9307      	str	r3, [sp, #28]
900284d0:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
900284d4:	931a      	str	r3, [sp, #104]	; 0x68
900284d6:	4654      	mov	r4, sl
900284d8:	2205      	movs	r2, #5
900284da:	f814 1b01 	ldrb.w	r1, [r4], #1
900284de:	4854      	ldr	r0, [pc, #336]	; (90028630 <_vfiprintf_r+0x220>)
900284e0:	f7d7 fefe 	bl	900002e0 <memchr>
900284e4:	9a04      	ldr	r2, [sp, #16]
900284e6:	b9d8      	cbnz	r0, 90028520 <_vfiprintf_r+0x110>
900284e8:	06d1      	lsls	r1, r2, #27
900284ea:	bf44      	itt	mi
900284ec:	2320      	movmi	r3, #32
900284ee:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
900284f2:	0713      	lsls	r3, r2, #28
900284f4:	bf44      	itt	mi
900284f6:	232b      	movmi	r3, #43	; 0x2b
900284f8:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
900284fc:	f89a 3000 	ldrb.w	r3, [sl]
90028500:	2b2a      	cmp	r3, #42	; 0x2a
90028502:	d015      	beq.n	90028530 <_vfiprintf_r+0x120>
90028504:	9a07      	ldr	r2, [sp, #28]
90028506:	4654      	mov	r4, sl
90028508:	2000      	movs	r0, #0
9002850a:	f04f 0c0a 	mov.w	ip, #10
9002850e:	4621      	mov	r1, r4
90028510:	f811 3b01 	ldrb.w	r3, [r1], #1
90028514:	3b30      	subs	r3, #48	; 0x30
90028516:	2b09      	cmp	r3, #9
90028518:	d94d      	bls.n	900285b6 <_vfiprintf_r+0x1a6>
9002851a:	b1b0      	cbz	r0, 9002854a <_vfiprintf_r+0x13a>
9002851c:	9207      	str	r2, [sp, #28]
9002851e:	e014      	b.n	9002854a <_vfiprintf_r+0x13a>
90028520:	eba0 0308 	sub.w	r3, r0, r8
90028524:	fa09 f303 	lsl.w	r3, r9, r3
90028528:	4313      	orrs	r3, r2
9002852a:	9304      	str	r3, [sp, #16]
9002852c:	46a2      	mov	sl, r4
9002852e:	e7d2      	b.n	900284d6 <_vfiprintf_r+0xc6>
90028530:	9b03      	ldr	r3, [sp, #12]
90028532:	1d19      	adds	r1, r3, #4
90028534:	681b      	ldr	r3, [r3, #0]
90028536:	9103      	str	r1, [sp, #12]
90028538:	2b00      	cmp	r3, #0
9002853a:	bfbb      	ittet	lt
9002853c:	425b      	neglt	r3, r3
9002853e:	f042 0202 	orrlt.w	r2, r2, #2
90028542:	9307      	strge	r3, [sp, #28]
90028544:	9307      	strlt	r3, [sp, #28]
90028546:	bfb8      	it	lt
90028548:	9204      	strlt	r2, [sp, #16]
9002854a:	7823      	ldrb	r3, [r4, #0]
9002854c:	2b2e      	cmp	r3, #46	; 0x2e
9002854e:	d10c      	bne.n	9002856a <_vfiprintf_r+0x15a>
90028550:	7863      	ldrb	r3, [r4, #1]
90028552:	2b2a      	cmp	r3, #42	; 0x2a
90028554:	d134      	bne.n	900285c0 <_vfiprintf_r+0x1b0>
90028556:	9b03      	ldr	r3, [sp, #12]
90028558:	1d1a      	adds	r2, r3, #4
9002855a:	681b      	ldr	r3, [r3, #0]
9002855c:	9203      	str	r2, [sp, #12]
9002855e:	2b00      	cmp	r3, #0
90028560:	bfb8      	it	lt
90028562:	f04f 33ff 	movlt.w	r3, #4294967295
90028566:	3402      	adds	r4, #2
90028568:	9305      	str	r3, [sp, #20]
9002856a:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 90028640 <_vfiprintf_r+0x230>
9002856e:	7821      	ldrb	r1, [r4, #0]
90028570:	2203      	movs	r2, #3
90028572:	4650      	mov	r0, sl
90028574:	f7d7 feb4 	bl	900002e0 <memchr>
90028578:	b138      	cbz	r0, 9002858a <_vfiprintf_r+0x17a>
9002857a:	9b04      	ldr	r3, [sp, #16]
9002857c:	eba0 000a 	sub.w	r0, r0, sl
90028580:	2240      	movs	r2, #64	; 0x40
90028582:	4082      	lsls	r2, r0
90028584:	4313      	orrs	r3, r2
90028586:	3401      	adds	r4, #1
90028588:	9304      	str	r3, [sp, #16]
9002858a:	f814 1b01 	ldrb.w	r1, [r4], #1
9002858e:	4829      	ldr	r0, [pc, #164]	; (90028634 <_vfiprintf_r+0x224>)
90028590:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
90028594:	2206      	movs	r2, #6
90028596:	f7d7 fea3 	bl	900002e0 <memchr>
9002859a:	2800      	cmp	r0, #0
9002859c:	d03f      	beq.n	9002861e <_vfiprintf_r+0x20e>
9002859e:	4b26      	ldr	r3, [pc, #152]	; (90028638 <_vfiprintf_r+0x228>)
900285a0:	bb1b      	cbnz	r3, 900285ea <_vfiprintf_r+0x1da>
900285a2:	9b03      	ldr	r3, [sp, #12]
900285a4:	3307      	adds	r3, #7
900285a6:	f023 0307 	bic.w	r3, r3, #7
900285aa:	3308      	adds	r3, #8
900285ac:	9303      	str	r3, [sp, #12]
900285ae:	9b09      	ldr	r3, [sp, #36]	; 0x24
900285b0:	443b      	add	r3, r7
900285b2:	9309      	str	r3, [sp, #36]	; 0x24
900285b4:	e768      	b.n	90028488 <_vfiprintf_r+0x78>
900285b6:	fb0c 3202 	mla	r2, ip, r2, r3
900285ba:	460c      	mov	r4, r1
900285bc:	2001      	movs	r0, #1
900285be:	e7a6      	b.n	9002850e <_vfiprintf_r+0xfe>
900285c0:	2300      	movs	r3, #0
900285c2:	3401      	adds	r4, #1
900285c4:	9305      	str	r3, [sp, #20]
900285c6:	4619      	mov	r1, r3
900285c8:	f04f 0c0a 	mov.w	ip, #10
900285cc:	4620      	mov	r0, r4
900285ce:	f810 2b01 	ldrb.w	r2, [r0], #1
900285d2:	3a30      	subs	r2, #48	; 0x30
900285d4:	2a09      	cmp	r2, #9
900285d6:	d903      	bls.n	900285e0 <_vfiprintf_r+0x1d0>
900285d8:	2b00      	cmp	r3, #0
900285da:	d0c6      	beq.n	9002856a <_vfiprintf_r+0x15a>
900285dc:	9105      	str	r1, [sp, #20]
900285de:	e7c4      	b.n	9002856a <_vfiprintf_r+0x15a>
900285e0:	fb0c 2101 	mla	r1, ip, r1, r2
900285e4:	4604      	mov	r4, r0
900285e6:	2301      	movs	r3, #1
900285e8:	e7f0      	b.n	900285cc <_vfiprintf_r+0x1bc>
900285ea:	ab03      	add	r3, sp, #12
900285ec:	9300      	str	r3, [sp, #0]
900285ee:	462a      	mov	r2, r5
900285f0:	4b12      	ldr	r3, [pc, #72]	; (9002863c <_vfiprintf_r+0x22c>)
900285f2:	a904      	add	r1, sp, #16
900285f4:	4630      	mov	r0, r6
900285f6:	f3af 8000 	nop.w
900285fa:	4607      	mov	r7, r0
900285fc:	1c78      	adds	r0, r7, #1
900285fe:	d1d6      	bne.n	900285ae <_vfiprintf_r+0x19e>
90028600:	6e6b      	ldr	r3, [r5, #100]	; 0x64
90028602:	07d9      	lsls	r1, r3, #31
90028604:	d405      	bmi.n	90028612 <_vfiprintf_r+0x202>
90028606:	89ab      	ldrh	r3, [r5, #12]
90028608:	059a      	lsls	r2, r3, #22
9002860a:	d402      	bmi.n	90028612 <_vfiprintf_r+0x202>
9002860c:	6da8      	ldr	r0, [r5, #88]	; 0x58
9002860e:	f7ff fe1c 	bl	9002824a <__retarget_lock_release_recursive>
90028612:	89ab      	ldrh	r3, [r5, #12]
90028614:	065b      	lsls	r3, r3, #25
90028616:	f53f af1d 	bmi.w	90028454 <_vfiprintf_r+0x44>
9002861a:	9809      	ldr	r0, [sp, #36]	; 0x24
9002861c:	e71c      	b.n	90028458 <_vfiprintf_r+0x48>
9002861e:	ab03      	add	r3, sp, #12
90028620:	9300      	str	r3, [sp, #0]
90028622:	462a      	mov	r2, r5
90028624:	4b05      	ldr	r3, [pc, #20]	; (9002863c <_vfiprintf_r+0x22c>)
90028626:	a904      	add	r1, sp, #16
90028628:	4630      	mov	r0, r6
9002862a:	f000 f879 	bl	90028720 <_printf_i>
9002862e:	e7e4      	b.n	900285fa <_vfiprintf_r+0x1ea>
90028630:	9002c3b8 	.word	0x9002c3b8
90028634:	9002c3c2 	.word	0x9002c3c2
90028638:	00000000 	.word	0x00000000
9002863c:	900283eb 	.word	0x900283eb
90028640:	9002c3be 	.word	0x9002c3be

90028644 <_printf_common>:
90028644:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90028648:	4616      	mov	r6, r2
9002864a:	4699      	mov	r9, r3
9002864c:	688a      	ldr	r2, [r1, #8]
9002864e:	690b      	ldr	r3, [r1, #16]
90028650:	f8dd 8020 	ldr.w	r8, [sp, #32]
90028654:	4293      	cmp	r3, r2
90028656:	bfb8      	it	lt
90028658:	4613      	movlt	r3, r2
9002865a:	6033      	str	r3, [r6, #0]
9002865c:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
90028660:	4607      	mov	r7, r0
90028662:	460c      	mov	r4, r1
90028664:	b10a      	cbz	r2, 9002866a <_printf_common+0x26>
90028666:	3301      	adds	r3, #1
90028668:	6033      	str	r3, [r6, #0]
9002866a:	6823      	ldr	r3, [r4, #0]
9002866c:	0699      	lsls	r1, r3, #26
9002866e:	bf42      	ittt	mi
90028670:	6833      	ldrmi	r3, [r6, #0]
90028672:	3302      	addmi	r3, #2
90028674:	6033      	strmi	r3, [r6, #0]
90028676:	6825      	ldr	r5, [r4, #0]
90028678:	f015 0506 	ands.w	r5, r5, #6
9002867c:	d106      	bne.n	9002868c <_printf_common+0x48>
9002867e:	f104 0a19 	add.w	sl, r4, #25
90028682:	68e3      	ldr	r3, [r4, #12]
90028684:	6832      	ldr	r2, [r6, #0]
90028686:	1a9b      	subs	r3, r3, r2
90028688:	42ab      	cmp	r3, r5
9002868a:	dc26      	bgt.n	900286da <_printf_common+0x96>
9002868c:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
90028690:	1e13      	subs	r3, r2, #0
90028692:	6822      	ldr	r2, [r4, #0]
90028694:	bf18      	it	ne
90028696:	2301      	movne	r3, #1
90028698:	0692      	lsls	r2, r2, #26
9002869a:	d42b      	bmi.n	900286f4 <_printf_common+0xb0>
9002869c:	f104 0243 	add.w	r2, r4, #67	; 0x43
900286a0:	4649      	mov	r1, r9
900286a2:	4638      	mov	r0, r7
900286a4:	47c0      	blx	r8
900286a6:	3001      	adds	r0, #1
900286a8:	d01e      	beq.n	900286e8 <_printf_common+0xa4>
900286aa:	6823      	ldr	r3, [r4, #0]
900286ac:	6922      	ldr	r2, [r4, #16]
900286ae:	f003 0306 	and.w	r3, r3, #6
900286b2:	2b04      	cmp	r3, #4
900286b4:	bf02      	ittt	eq
900286b6:	68e5      	ldreq	r5, [r4, #12]
900286b8:	6833      	ldreq	r3, [r6, #0]
900286ba:	1aed      	subeq	r5, r5, r3
900286bc:	68a3      	ldr	r3, [r4, #8]
900286be:	bf0c      	ite	eq
900286c0:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
900286c4:	2500      	movne	r5, #0
900286c6:	4293      	cmp	r3, r2
900286c8:	bfc4      	itt	gt
900286ca:	1a9b      	subgt	r3, r3, r2
900286cc:	18ed      	addgt	r5, r5, r3
900286ce:	2600      	movs	r6, #0
900286d0:	341a      	adds	r4, #26
900286d2:	42b5      	cmp	r5, r6
900286d4:	d11a      	bne.n	9002870c <_printf_common+0xc8>
900286d6:	2000      	movs	r0, #0
900286d8:	e008      	b.n	900286ec <_printf_common+0xa8>
900286da:	2301      	movs	r3, #1
900286dc:	4652      	mov	r2, sl
900286de:	4649      	mov	r1, r9
900286e0:	4638      	mov	r0, r7
900286e2:	47c0      	blx	r8
900286e4:	3001      	adds	r0, #1
900286e6:	d103      	bne.n	900286f0 <_printf_common+0xac>
900286e8:	f04f 30ff 	mov.w	r0, #4294967295
900286ec:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
900286f0:	3501      	adds	r5, #1
900286f2:	e7c6      	b.n	90028682 <_printf_common+0x3e>
900286f4:	18e1      	adds	r1, r4, r3
900286f6:	1c5a      	adds	r2, r3, #1
900286f8:	2030      	movs	r0, #48	; 0x30
900286fa:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
900286fe:	4422      	add	r2, r4
90028700:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
90028704:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
90028708:	3302      	adds	r3, #2
9002870a:	e7c7      	b.n	9002869c <_printf_common+0x58>
9002870c:	2301      	movs	r3, #1
9002870e:	4622      	mov	r2, r4
90028710:	4649      	mov	r1, r9
90028712:	4638      	mov	r0, r7
90028714:	47c0      	blx	r8
90028716:	3001      	adds	r0, #1
90028718:	d0e6      	beq.n	900286e8 <_printf_common+0xa4>
9002871a:	3601      	adds	r6, #1
9002871c:	e7d9      	b.n	900286d2 <_printf_common+0x8e>
	...

90028720 <_printf_i>:
90028720:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
90028724:	7e0f      	ldrb	r7, [r1, #24]
90028726:	9d0c      	ldr	r5, [sp, #48]	; 0x30
90028728:	2f78      	cmp	r7, #120	; 0x78
9002872a:	4691      	mov	r9, r2
9002872c:	4680      	mov	r8, r0
9002872e:	460c      	mov	r4, r1
90028730:	469a      	mov	sl, r3
90028732:	f101 0243 	add.w	r2, r1, #67	; 0x43
90028736:	d807      	bhi.n	90028748 <_printf_i+0x28>
90028738:	2f62      	cmp	r7, #98	; 0x62
9002873a:	d80a      	bhi.n	90028752 <_printf_i+0x32>
9002873c:	2f00      	cmp	r7, #0
9002873e:	f000 80d4 	beq.w	900288ea <_printf_i+0x1ca>
90028742:	2f58      	cmp	r7, #88	; 0x58
90028744:	f000 80c0 	beq.w	900288c8 <_printf_i+0x1a8>
90028748:	f104 0542 	add.w	r5, r4, #66	; 0x42
9002874c:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
90028750:	e03a      	b.n	900287c8 <_printf_i+0xa8>
90028752:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
90028756:	2b15      	cmp	r3, #21
90028758:	d8f6      	bhi.n	90028748 <_printf_i+0x28>
9002875a:	a101      	add	r1, pc, #4	; (adr r1, 90028760 <_printf_i+0x40>)
9002875c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
90028760:	900287b9 	.word	0x900287b9
90028764:	900287cd 	.word	0x900287cd
90028768:	90028749 	.word	0x90028749
9002876c:	90028749 	.word	0x90028749
90028770:	90028749 	.word	0x90028749
90028774:	90028749 	.word	0x90028749
90028778:	900287cd 	.word	0x900287cd
9002877c:	90028749 	.word	0x90028749
90028780:	90028749 	.word	0x90028749
90028784:	90028749 	.word	0x90028749
90028788:	90028749 	.word	0x90028749
9002878c:	900288d1 	.word	0x900288d1
90028790:	900287f9 	.word	0x900287f9
90028794:	9002888b 	.word	0x9002888b
90028798:	90028749 	.word	0x90028749
9002879c:	90028749 	.word	0x90028749
900287a0:	900288f3 	.word	0x900288f3
900287a4:	90028749 	.word	0x90028749
900287a8:	900287f9 	.word	0x900287f9
900287ac:	90028749 	.word	0x90028749
900287b0:	90028749 	.word	0x90028749
900287b4:	90028893 	.word	0x90028893
900287b8:	682b      	ldr	r3, [r5, #0]
900287ba:	1d1a      	adds	r2, r3, #4
900287bc:	681b      	ldr	r3, [r3, #0]
900287be:	602a      	str	r2, [r5, #0]
900287c0:	f104 0542 	add.w	r5, r4, #66	; 0x42
900287c4:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
900287c8:	2301      	movs	r3, #1
900287ca:	e09f      	b.n	9002890c <_printf_i+0x1ec>
900287cc:	6820      	ldr	r0, [r4, #0]
900287ce:	682b      	ldr	r3, [r5, #0]
900287d0:	0607      	lsls	r7, r0, #24
900287d2:	f103 0104 	add.w	r1, r3, #4
900287d6:	6029      	str	r1, [r5, #0]
900287d8:	d501      	bpl.n	900287de <_printf_i+0xbe>
900287da:	681e      	ldr	r6, [r3, #0]
900287dc:	e003      	b.n	900287e6 <_printf_i+0xc6>
900287de:	0646      	lsls	r6, r0, #25
900287e0:	d5fb      	bpl.n	900287da <_printf_i+0xba>
900287e2:	f9b3 6000 	ldrsh.w	r6, [r3]
900287e6:	2e00      	cmp	r6, #0
900287e8:	da03      	bge.n	900287f2 <_printf_i+0xd2>
900287ea:	232d      	movs	r3, #45	; 0x2d
900287ec:	4276      	negs	r6, r6
900287ee:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
900287f2:	485a      	ldr	r0, [pc, #360]	; (9002895c <_printf_i+0x23c>)
900287f4:	230a      	movs	r3, #10
900287f6:	e012      	b.n	9002881e <_printf_i+0xfe>
900287f8:	682b      	ldr	r3, [r5, #0]
900287fa:	6820      	ldr	r0, [r4, #0]
900287fc:	1d19      	adds	r1, r3, #4
900287fe:	6029      	str	r1, [r5, #0]
90028800:	0605      	lsls	r5, r0, #24
90028802:	d501      	bpl.n	90028808 <_printf_i+0xe8>
90028804:	681e      	ldr	r6, [r3, #0]
90028806:	e002      	b.n	9002880e <_printf_i+0xee>
90028808:	0641      	lsls	r1, r0, #25
9002880a:	d5fb      	bpl.n	90028804 <_printf_i+0xe4>
9002880c:	881e      	ldrh	r6, [r3, #0]
9002880e:	4853      	ldr	r0, [pc, #332]	; (9002895c <_printf_i+0x23c>)
90028810:	2f6f      	cmp	r7, #111	; 0x6f
90028812:	bf0c      	ite	eq
90028814:	2308      	moveq	r3, #8
90028816:	230a      	movne	r3, #10
90028818:	2100      	movs	r1, #0
9002881a:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
9002881e:	6865      	ldr	r5, [r4, #4]
90028820:	60a5      	str	r5, [r4, #8]
90028822:	2d00      	cmp	r5, #0
90028824:	bfa2      	ittt	ge
90028826:	6821      	ldrge	r1, [r4, #0]
90028828:	f021 0104 	bicge.w	r1, r1, #4
9002882c:	6021      	strge	r1, [r4, #0]
9002882e:	b90e      	cbnz	r6, 90028834 <_printf_i+0x114>
90028830:	2d00      	cmp	r5, #0
90028832:	d04b      	beq.n	900288cc <_printf_i+0x1ac>
90028834:	4615      	mov	r5, r2
90028836:	fbb6 f1f3 	udiv	r1, r6, r3
9002883a:	fb03 6711 	mls	r7, r3, r1, r6
9002883e:	5dc7      	ldrb	r7, [r0, r7]
90028840:	f805 7d01 	strb.w	r7, [r5, #-1]!
90028844:	4637      	mov	r7, r6
90028846:	42bb      	cmp	r3, r7
90028848:	460e      	mov	r6, r1
9002884a:	d9f4      	bls.n	90028836 <_printf_i+0x116>
9002884c:	2b08      	cmp	r3, #8
9002884e:	d10b      	bne.n	90028868 <_printf_i+0x148>
90028850:	6823      	ldr	r3, [r4, #0]
90028852:	07de      	lsls	r6, r3, #31
90028854:	d508      	bpl.n	90028868 <_printf_i+0x148>
90028856:	6923      	ldr	r3, [r4, #16]
90028858:	6861      	ldr	r1, [r4, #4]
9002885a:	4299      	cmp	r1, r3
9002885c:	bfde      	ittt	le
9002885e:	2330      	movle	r3, #48	; 0x30
90028860:	f805 3c01 	strble.w	r3, [r5, #-1]
90028864:	f105 35ff 	addle.w	r5, r5, #4294967295
90028868:	1b52      	subs	r2, r2, r5
9002886a:	6122      	str	r2, [r4, #16]
9002886c:	f8cd a000 	str.w	sl, [sp]
90028870:	464b      	mov	r3, r9
90028872:	aa03      	add	r2, sp, #12
90028874:	4621      	mov	r1, r4
90028876:	4640      	mov	r0, r8
90028878:	f7ff fee4 	bl	90028644 <_printf_common>
9002887c:	3001      	adds	r0, #1
9002887e:	d14a      	bne.n	90028916 <_printf_i+0x1f6>
90028880:	f04f 30ff 	mov.w	r0, #4294967295
90028884:	b004      	add	sp, #16
90028886:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9002888a:	6823      	ldr	r3, [r4, #0]
9002888c:	f043 0320 	orr.w	r3, r3, #32
90028890:	6023      	str	r3, [r4, #0]
90028892:	4833      	ldr	r0, [pc, #204]	; (90028960 <_printf_i+0x240>)
90028894:	2778      	movs	r7, #120	; 0x78
90028896:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
9002889a:	6823      	ldr	r3, [r4, #0]
9002889c:	6829      	ldr	r1, [r5, #0]
9002889e:	061f      	lsls	r7, r3, #24
900288a0:	f851 6b04 	ldr.w	r6, [r1], #4
900288a4:	d402      	bmi.n	900288ac <_printf_i+0x18c>
900288a6:	065f      	lsls	r7, r3, #25
900288a8:	bf48      	it	mi
900288aa:	b2b6      	uxthmi	r6, r6
900288ac:	07df      	lsls	r7, r3, #31
900288ae:	bf48      	it	mi
900288b0:	f043 0320 	orrmi.w	r3, r3, #32
900288b4:	6029      	str	r1, [r5, #0]
900288b6:	bf48      	it	mi
900288b8:	6023      	strmi	r3, [r4, #0]
900288ba:	b91e      	cbnz	r6, 900288c4 <_printf_i+0x1a4>
900288bc:	6823      	ldr	r3, [r4, #0]
900288be:	f023 0320 	bic.w	r3, r3, #32
900288c2:	6023      	str	r3, [r4, #0]
900288c4:	2310      	movs	r3, #16
900288c6:	e7a7      	b.n	90028818 <_printf_i+0xf8>
900288c8:	4824      	ldr	r0, [pc, #144]	; (9002895c <_printf_i+0x23c>)
900288ca:	e7e4      	b.n	90028896 <_printf_i+0x176>
900288cc:	4615      	mov	r5, r2
900288ce:	e7bd      	b.n	9002884c <_printf_i+0x12c>
900288d0:	682b      	ldr	r3, [r5, #0]
900288d2:	6826      	ldr	r6, [r4, #0]
900288d4:	6961      	ldr	r1, [r4, #20]
900288d6:	1d18      	adds	r0, r3, #4
900288d8:	6028      	str	r0, [r5, #0]
900288da:	0635      	lsls	r5, r6, #24
900288dc:	681b      	ldr	r3, [r3, #0]
900288de:	d501      	bpl.n	900288e4 <_printf_i+0x1c4>
900288e0:	6019      	str	r1, [r3, #0]
900288e2:	e002      	b.n	900288ea <_printf_i+0x1ca>
900288e4:	0670      	lsls	r0, r6, #25
900288e6:	d5fb      	bpl.n	900288e0 <_printf_i+0x1c0>
900288e8:	8019      	strh	r1, [r3, #0]
900288ea:	2300      	movs	r3, #0
900288ec:	6123      	str	r3, [r4, #16]
900288ee:	4615      	mov	r5, r2
900288f0:	e7bc      	b.n	9002886c <_printf_i+0x14c>
900288f2:	682b      	ldr	r3, [r5, #0]
900288f4:	1d1a      	adds	r2, r3, #4
900288f6:	602a      	str	r2, [r5, #0]
900288f8:	681d      	ldr	r5, [r3, #0]
900288fa:	6862      	ldr	r2, [r4, #4]
900288fc:	2100      	movs	r1, #0
900288fe:	4628      	mov	r0, r5
90028900:	f7d7 fcee 	bl	900002e0 <memchr>
90028904:	b108      	cbz	r0, 9002890a <_printf_i+0x1ea>
90028906:	1b40      	subs	r0, r0, r5
90028908:	6060      	str	r0, [r4, #4]
9002890a:	6863      	ldr	r3, [r4, #4]
9002890c:	6123      	str	r3, [r4, #16]
9002890e:	2300      	movs	r3, #0
90028910:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
90028914:	e7aa      	b.n	9002886c <_printf_i+0x14c>
90028916:	6923      	ldr	r3, [r4, #16]
90028918:	462a      	mov	r2, r5
9002891a:	4649      	mov	r1, r9
9002891c:	4640      	mov	r0, r8
9002891e:	47d0      	blx	sl
90028920:	3001      	adds	r0, #1
90028922:	d0ad      	beq.n	90028880 <_printf_i+0x160>
90028924:	6823      	ldr	r3, [r4, #0]
90028926:	079b      	lsls	r3, r3, #30
90028928:	d413      	bmi.n	90028952 <_printf_i+0x232>
9002892a:	68e0      	ldr	r0, [r4, #12]
9002892c:	9b03      	ldr	r3, [sp, #12]
9002892e:	4298      	cmp	r0, r3
90028930:	bfb8      	it	lt
90028932:	4618      	movlt	r0, r3
90028934:	e7a6      	b.n	90028884 <_printf_i+0x164>
90028936:	2301      	movs	r3, #1
90028938:	4632      	mov	r2, r6
9002893a:	4649      	mov	r1, r9
9002893c:	4640      	mov	r0, r8
9002893e:	47d0      	blx	sl
90028940:	3001      	adds	r0, #1
90028942:	d09d      	beq.n	90028880 <_printf_i+0x160>
90028944:	3501      	adds	r5, #1
90028946:	68e3      	ldr	r3, [r4, #12]
90028948:	9903      	ldr	r1, [sp, #12]
9002894a:	1a5b      	subs	r3, r3, r1
9002894c:	42ab      	cmp	r3, r5
9002894e:	dcf2      	bgt.n	90028936 <_printf_i+0x216>
90028950:	e7eb      	b.n	9002892a <_printf_i+0x20a>
90028952:	2500      	movs	r5, #0
90028954:	f104 0619 	add.w	r6, r4, #25
90028958:	e7f5      	b.n	90028946 <_printf_i+0x226>
9002895a:	bf00      	nop
9002895c:	9002c3c9 	.word	0x9002c3c9
90028960:	9002c3da 	.word	0x9002c3da

90028964 <__sflush_r>:
90028964:	898a      	ldrh	r2, [r1, #12]
90028966:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9002896a:	4605      	mov	r5, r0
9002896c:	0710      	lsls	r0, r2, #28
9002896e:	460c      	mov	r4, r1
90028970:	d458      	bmi.n	90028a24 <__sflush_r+0xc0>
90028972:	684b      	ldr	r3, [r1, #4]
90028974:	2b00      	cmp	r3, #0
90028976:	dc05      	bgt.n	90028984 <__sflush_r+0x20>
90028978:	6c0b      	ldr	r3, [r1, #64]	; 0x40
9002897a:	2b00      	cmp	r3, #0
9002897c:	dc02      	bgt.n	90028984 <__sflush_r+0x20>
9002897e:	2000      	movs	r0, #0
90028980:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90028984:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
90028986:	2e00      	cmp	r6, #0
90028988:	d0f9      	beq.n	9002897e <__sflush_r+0x1a>
9002898a:	2300      	movs	r3, #0
9002898c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
90028990:	682f      	ldr	r7, [r5, #0]
90028992:	6a21      	ldr	r1, [r4, #32]
90028994:	602b      	str	r3, [r5, #0]
90028996:	d032      	beq.n	900289fe <__sflush_r+0x9a>
90028998:	6d60      	ldr	r0, [r4, #84]	; 0x54
9002899a:	89a3      	ldrh	r3, [r4, #12]
9002899c:	075a      	lsls	r2, r3, #29
9002899e:	d505      	bpl.n	900289ac <__sflush_r+0x48>
900289a0:	6863      	ldr	r3, [r4, #4]
900289a2:	1ac0      	subs	r0, r0, r3
900289a4:	6b63      	ldr	r3, [r4, #52]	; 0x34
900289a6:	b10b      	cbz	r3, 900289ac <__sflush_r+0x48>
900289a8:	6c23      	ldr	r3, [r4, #64]	; 0x40
900289aa:	1ac0      	subs	r0, r0, r3
900289ac:	2300      	movs	r3, #0
900289ae:	4602      	mov	r2, r0
900289b0:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
900289b2:	6a21      	ldr	r1, [r4, #32]
900289b4:	4628      	mov	r0, r5
900289b6:	47b0      	blx	r6
900289b8:	1c43      	adds	r3, r0, #1
900289ba:	89a3      	ldrh	r3, [r4, #12]
900289bc:	d106      	bne.n	900289cc <__sflush_r+0x68>
900289be:	6829      	ldr	r1, [r5, #0]
900289c0:	291d      	cmp	r1, #29
900289c2:	d82b      	bhi.n	90028a1c <__sflush_r+0xb8>
900289c4:	4a29      	ldr	r2, [pc, #164]	; (90028a6c <__sflush_r+0x108>)
900289c6:	410a      	asrs	r2, r1
900289c8:	07d6      	lsls	r6, r2, #31
900289ca:	d427      	bmi.n	90028a1c <__sflush_r+0xb8>
900289cc:	2200      	movs	r2, #0
900289ce:	6062      	str	r2, [r4, #4]
900289d0:	04d9      	lsls	r1, r3, #19
900289d2:	6922      	ldr	r2, [r4, #16]
900289d4:	6022      	str	r2, [r4, #0]
900289d6:	d504      	bpl.n	900289e2 <__sflush_r+0x7e>
900289d8:	1c42      	adds	r2, r0, #1
900289da:	d101      	bne.n	900289e0 <__sflush_r+0x7c>
900289dc:	682b      	ldr	r3, [r5, #0]
900289de:	b903      	cbnz	r3, 900289e2 <__sflush_r+0x7e>
900289e0:	6560      	str	r0, [r4, #84]	; 0x54
900289e2:	6b61      	ldr	r1, [r4, #52]	; 0x34
900289e4:	602f      	str	r7, [r5, #0]
900289e6:	2900      	cmp	r1, #0
900289e8:	d0c9      	beq.n	9002897e <__sflush_r+0x1a>
900289ea:	f104 0344 	add.w	r3, r4, #68	; 0x44
900289ee:	4299      	cmp	r1, r3
900289f0:	d002      	beq.n	900289f8 <__sflush_r+0x94>
900289f2:	4628      	mov	r0, r5
900289f4:	f7ff fc96 	bl	90028324 <_free_r>
900289f8:	2000      	movs	r0, #0
900289fa:	6360      	str	r0, [r4, #52]	; 0x34
900289fc:	e7c0      	b.n	90028980 <__sflush_r+0x1c>
900289fe:	2301      	movs	r3, #1
90028a00:	4628      	mov	r0, r5
90028a02:	47b0      	blx	r6
90028a04:	1c41      	adds	r1, r0, #1
90028a06:	d1c8      	bne.n	9002899a <__sflush_r+0x36>
90028a08:	682b      	ldr	r3, [r5, #0]
90028a0a:	2b00      	cmp	r3, #0
90028a0c:	d0c5      	beq.n	9002899a <__sflush_r+0x36>
90028a0e:	2b1d      	cmp	r3, #29
90028a10:	d001      	beq.n	90028a16 <__sflush_r+0xb2>
90028a12:	2b16      	cmp	r3, #22
90028a14:	d101      	bne.n	90028a1a <__sflush_r+0xb6>
90028a16:	602f      	str	r7, [r5, #0]
90028a18:	e7b1      	b.n	9002897e <__sflush_r+0x1a>
90028a1a:	89a3      	ldrh	r3, [r4, #12]
90028a1c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
90028a20:	81a3      	strh	r3, [r4, #12]
90028a22:	e7ad      	b.n	90028980 <__sflush_r+0x1c>
90028a24:	690f      	ldr	r7, [r1, #16]
90028a26:	2f00      	cmp	r7, #0
90028a28:	d0a9      	beq.n	9002897e <__sflush_r+0x1a>
90028a2a:	0793      	lsls	r3, r2, #30
90028a2c:	680e      	ldr	r6, [r1, #0]
90028a2e:	bf08      	it	eq
90028a30:	694b      	ldreq	r3, [r1, #20]
90028a32:	600f      	str	r7, [r1, #0]
90028a34:	bf18      	it	ne
90028a36:	2300      	movne	r3, #0
90028a38:	eba6 0807 	sub.w	r8, r6, r7
90028a3c:	608b      	str	r3, [r1, #8]
90028a3e:	f1b8 0f00 	cmp.w	r8, #0
90028a42:	dd9c      	ble.n	9002897e <__sflush_r+0x1a>
90028a44:	6a21      	ldr	r1, [r4, #32]
90028a46:	6aa6      	ldr	r6, [r4, #40]	; 0x28
90028a48:	4643      	mov	r3, r8
90028a4a:	463a      	mov	r2, r7
90028a4c:	4628      	mov	r0, r5
90028a4e:	47b0      	blx	r6
90028a50:	2800      	cmp	r0, #0
90028a52:	dc06      	bgt.n	90028a62 <__sflush_r+0xfe>
90028a54:	89a3      	ldrh	r3, [r4, #12]
90028a56:	f043 0340 	orr.w	r3, r3, #64	; 0x40
90028a5a:	81a3      	strh	r3, [r4, #12]
90028a5c:	f04f 30ff 	mov.w	r0, #4294967295
90028a60:	e78e      	b.n	90028980 <__sflush_r+0x1c>
90028a62:	4407      	add	r7, r0
90028a64:	eba8 0800 	sub.w	r8, r8, r0
90028a68:	e7e9      	b.n	90028a3e <__sflush_r+0xda>
90028a6a:	bf00      	nop
90028a6c:	dfbffffe 	.word	0xdfbffffe

90028a70 <_fflush_r>:
90028a70:	b538      	push	{r3, r4, r5, lr}
90028a72:	690b      	ldr	r3, [r1, #16]
90028a74:	4605      	mov	r5, r0
90028a76:	460c      	mov	r4, r1
90028a78:	b913      	cbnz	r3, 90028a80 <_fflush_r+0x10>
90028a7a:	2500      	movs	r5, #0
90028a7c:	4628      	mov	r0, r5
90028a7e:	bd38      	pop	{r3, r4, r5, pc}
90028a80:	b118      	cbz	r0, 90028a8a <_fflush_r+0x1a>
90028a82:	6a03      	ldr	r3, [r0, #32]
90028a84:	b90b      	cbnz	r3, 90028a8a <_fflush_r+0x1a>
90028a86:	f7ff f9e1 	bl	90027e4c <__sinit>
90028a8a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
90028a8e:	2b00      	cmp	r3, #0
90028a90:	d0f3      	beq.n	90028a7a <_fflush_r+0xa>
90028a92:	6e62      	ldr	r2, [r4, #100]	; 0x64
90028a94:	07d0      	lsls	r0, r2, #31
90028a96:	d404      	bmi.n	90028aa2 <_fflush_r+0x32>
90028a98:	0599      	lsls	r1, r3, #22
90028a9a:	d402      	bmi.n	90028aa2 <_fflush_r+0x32>
90028a9c:	6da0      	ldr	r0, [r4, #88]	; 0x58
90028a9e:	f7ff fbd3 	bl	90028248 <__retarget_lock_acquire_recursive>
90028aa2:	4628      	mov	r0, r5
90028aa4:	4621      	mov	r1, r4
90028aa6:	f7ff ff5d 	bl	90028964 <__sflush_r>
90028aaa:	6e63      	ldr	r3, [r4, #100]	; 0x64
90028aac:	07da      	lsls	r2, r3, #31
90028aae:	4605      	mov	r5, r0
90028ab0:	d4e4      	bmi.n	90028a7c <_fflush_r+0xc>
90028ab2:	89a3      	ldrh	r3, [r4, #12]
90028ab4:	059b      	lsls	r3, r3, #22
90028ab6:	d4e1      	bmi.n	90028a7c <_fflush_r+0xc>
90028ab8:	6da0      	ldr	r0, [r4, #88]	; 0x58
90028aba:	f7ff fbc6 	bl	9002824a <__retarget_lock_release_recursive>
90028abe:	e7dd      	b.n	90028a7c <_fflush_r+0xc>

90028ac0 <__swhatbuf_r>:
90028ac0:	b570      	push	{r4, r5, r6, lr}
90028ac2:	460c      	mov	r4, r1
90028ac4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
90028ac8:	2900      	cmp	r1, #0
90028aca:	b096      	sub	sp, #88	; 0x58
90028acc:	4615      	mov	r5, r2
90028ace:	461e      	mov	r6, r3
90028ad0:	da0d      	bge.n	90028aee <__swhatbuf_r+0x2e>
90028ad2:	89a3      	ldrh	r3, [r4, #12]
90028ad4:	f013 0f80 	tst.w	r3, #128	; 0x80
90028ad8:	f04f 0100 	mov.w	r1, #0
90028adc:	bf0c      	ite	eq
90028ade:	f44f 6380 	moveq.w	r3, #1024	; 0x400
90028ae2:	2340      	movne	r3, #64	; 0x40
90028ae4:	2000      	movs	r0, #0
90028ae6:	6031      	str	r1, [r6, #0]
90028ae8:	602b      	str	r3, [r5, #0]
90028aea:	b016      	add	sp, #88	; 0x58
90028aec:	bd70      	pop	{r4, r5, r6, pc}
90028aee:	466a      	mov	r2, sp
90028af0:	f000 f848 	bl	90028b84 <_fstat_r>
90028af4:	2800      	cmp	r0, #0
90028af6:	dbec      	blt.n	90028ad2 <__swhatbuf_r+0x12>
90028af8:	9901      	ldr	r1, [sp, #4]
90028afa:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
90028afe:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
90028b02:	4259      	negs	r1, r3
90028b04:	4159      	adcs	r1, r3
90028b06:	f44f 6380 	mov.w	r3, #1024	; 0x400
90028b0a:	e7eb      	b.n	90028ae4 <__swhatbuf_r+0x24>

90028b0c <__smakebuf_r>:
90028b0c:	898b      	ldrh	r3, [r1, #12]
90028b0e:	b573      	push	{r0, r1, r4, r5, r6, lr}
90028b10:	079d      	lsls	r5, r3, #30
90028b12:	4606      	mov	r6, r0
90028b14:	460c      	mov	r4, r1
90028b16:	d507      	bpl.n	90028b28 <__smakebuf_r+0x1c>
90028b18:	f104 0347 	add.w	r3, r4, #71	; 0x47
90028b1c:	6023      	str	r3, [r4, #0]
90028b1e:	6123      	str	r3, [r4, #16]
90028b20:	2301      	movs	r3, #1
90028b22:	6163      	str	r3, [r4, #20]
90028b24:	b002      	add	sp, #8
90028b26:	bd70      	pop	{r4, r5, r6, pc}
90028b28:	ab01      	add	r3, sp, #4
90028b2a:	466a      	mov	r2, sp
90028b2c:	f7ff ffc8 	bl	90028ac0 <__swhatbuf_r>
90028b30:	9900      	ldr	r1, [sp, #0]
90028b32:	4605      	mov	r5, r0
90028b34:	4630      	mov	r0, r6
90028b36:	f7ff f875 	bl	90027c24 <_malloc_r>
90028b3a:	b948      	cbnz	r0, 90028b50 <__smakebuf_r+0x44>
90028b3c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
90028b40:	059a      	lsls	r2, r3, #22
90028b42:	d4ef      	bmi.n	90028b24 <__smakebuf_r+0x18>
90028b44:	f023 0303 	bic.w	r3, r3, #3
90028b48:	f043 0302 	orr.w	r3, r3, #2
90028b4c:	81a3      	strh	r3, [r4, #12]
90028b4e:	e7e3      	b.n	90028b18 <__smakebuf_r+0xc>
90028b50:	89a3      	ldrh	r3, [r4, #12]
90028b52:	6020      	str	r0, [r4, #0]
90028b54:	f043 0380 	orr.w	r3, r3, #128	; 0x80
90028b58:	81a3      	strh	r3, [r4, #12]
90028b5a:	9b00      	ldr	r3, [sp, #0]
90028b5c:	6163      	str	r3, [r4, #20]
90028b5e:	9b01      	ldr	r3, [sp, #4]
90028b60:	6120      	str	r0, [r4, #16]
90028b62:	b15b      	cbz	r3, 90028b7c <__smakebuf_r+0x70>
90028b64:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
90028b68:	4630      	mov	r0, r6
90028b6a:	f000 f81d 	bl	90028ba8 <_isatty_r>
90028b6e:	b128      	cbz	r0, 90028b7c <__smakebuf_r+0x70>
90028b70:	89a3      	ldrh	r3, [r4, #12]
90028b72:	f023 0303 	bic.w	r3, r3, #3
90028b76:	f043 0301 	orr.w	r3, r3, #1
90028b7a:	81a3      	strh	r3, [r4, #12]
90028b7c:	89a3      	ldrh	r3, [r4, #12]
90028b7e:	431d      	orrs	r5, r3
90028b80:	81a5      	strh	r5, [r4, #12]
90028b82:	e7cf      	b.n	90028b24 <__smakebuf_r+0x18>

90028b84 <_fstat_r>:
90028b84:	b538      	push	{r3, r4, r5, lr}
90028b86:	4d07      	ldr	r5, [pc, #28]	; (90028ba4 <_fstat_r+0x20>)
90028b88:	2300      	movs	r3, #0
90028b8a:	4604      	mov	r4, r0
90028b8c:	4608      	mov	r0, r1
90028b8e:	4611      	mov	r1, r2
90028b90:	602b      	str	r3, [r5, #0]
90028b92:	f7da fcd5 	bl	90003540 <_fstat>
90028b96:	1c43      	adds	r3, r0, #1
90028b98:	d102      	bne.n	90028ba0 <_fstat_r+0x1c>
90028b9a:	682b      	ldr	r3, [r5, #0]
90028b9c:	b103      	cbz	r3, 90028ba0 <_fstat_r+0x1c>
90028b9e:	6023      	str	r3, [r4, #0]
90028ba0:	bd38      	pop	{r3, r4, r5, pc}
90028ba2:	bf00      	nop
90028ba4:	2403a2cc 	.word	0x2403a2cc

90028ba8 <_isatty_r>:
90028ba8:	b538      	push	{r3, r4, r5, lr}
90028baa:	4d06      	ldr	r5, [pc, #24]	; (90028bc4 <_isatty_r+0x1c>)
90028bac:	2300      	movs	r3, #0
90028bae:	4604      	mov	r4, r0
90028bb0:	4608      	mov	r0, r1
90028bb2:	602b      	str	r3, [r5, #0]
90028bb4:	f7da fcca 	bl	9000354c <_isatty>
90028bb8:	1c43      	adds	r3, r0, #1
90028bba:	d102      	bne.n	90028bc2 <_isatty_r+0x1a>
90028bbc:	682b      	ldr	r3, [r5, #0]
90028bbe:	b103      	cbz	r3, 90028bc2 <_isatty_r+0x1a>
90028bc0:	6023      	str	r3, [r4, #0]
90028bc2:	bd38      	pop	{r3, r4, r5, pc}
90028bc4:	2403a2cc 	.word	0x2403a2cc

90028bc8 <_sbrk>:
90028bc8:	4a04      	ldr	r2, [pc, #16]	; (90028bdc <_sbrk+0x14>)
90028bca:	6811      	ldr	r1, [r2, #0]
90028bcc:	4603      	mov	r3, r0
90028bce:	b909      	cbnz	r1, 90028bd4 <_sbrk+0xc>
90028bd0:	4903      	ldr	r1, [pc, #12]	; (90028be0 <_sbrk+0x18>)
90028bd2:	6011      	str	r1, [r2, #0]
90028bd4:	6810      	ldr	r0, [r2, #0]
90028bd6:	4403      	add	r3, r0
90028bd8:	6013      	str	r3, [r2, #0]
90028bda:	4770      	bx	lr
90028bdc:	2403a46c 	.word	0x2403a46c
90028be0:	2403a470 	.word	0x2403a470

90028be4 <_init>:
90028be4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90028be6:	bf00      	nop
90028be8:	bcf8      	pop	{r3, r4, r5, r6, r7}
90028bea:	bc08      	pop	{r3}
90028bec:	469e      	mov	lr, r3
90028bee:	4770      	bx	lr

90028bf0 <_fini>:
90028bf0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90028bf2:	bf00      	nop
90028bf4:	bcf8      	pop	{r3, r4, r5, r6, r7}
90028bf6:	bc08      	pop	{r3}
90028bf8:	469e      	mov	lr, r3
90028bfa:	4770      	bx	lr
